{
  "meta": {
    "index": 305,
    "hitid": "3K1H3NEY7LTWLTBTHISARRU1M9MDGM",
    "workerid": "AIWEXPJAU66D9",
    "probid": "61A",
    "subid": "42230694"
  },
  "lines": [
    {
      "line": 0,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 1,
      "text": "create char array arr with 101 element and char pointers * arr2 and * res",
      "code": "char arr [ 101 ] , * arr2 , * res ;",
      "indent": 1
    },
    {
      "line": 2,
      "text": "read arr",
      "code": "cin >> arr ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "create integer lim = length of arr",
      "code": "int lim = strlen ( arr ) ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "assign new array of char with size lim + 1 to arr2",
      "code": "arr2 = new char [ lim + 1 ] ;",
      "indent": 1
    },
    {
      "line": 5,
      "text": "assign new array of char with size lim + 1 to res",
      "code": "res = new char [ lim + 1 ] ;",
      "indent": 1
    },
    {
      "line": 6,
      "text": "read arr2",
      "code": "cin >> arr2 ;",
      "indent": 1
    },
    {
      "line": 7,
      "text": "declare ints i and j",
      "code": "int i , j ;",
      "indent": 1
    },
    {
      "line": 8,
      "text": "for i from 0 to exclusive",
      "code": "for ( i = 0 ; arr [ i ] ; i ++ )",
      "indent": 1
    },
    {
      "line": 9,
      "text": "if ( arr [ i ] = ' 1 ' & & arr2 [ i ] = ' 0 ' ) or ( arr [ i ] = ' 0 ' & & arr2 [ i ] = ' 1 ' )",
      "code": "if ( ( arr [ i ] == ' 1 ' && arr2 [ i ] == ' 0 ' ) || ( arr [ i ] == ' 0 ' && arr2 [ i ] == ' 1 ' ) )",
      "indent": 2
    },
    {
      "line": 10,
      "text": "assign ' 1 ' to res [ i ]",
      "code": "res [ i ] = ' 1 ' ;",
      "indent": 3
    },
    {
      "line": 11,
      "text": "else",
      "code": "else",
      "indent": 2
    },
    {
      "line": 12,
      "text": "assign ' 0 ' to res [ i ]",
      "code": "res [ i ] = ' 0 ' ;",
      "indent": 3
    },
    {
      "line": 13,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 14,
      "text": "assign 0 to res [ i ]",
      "code": "res [ i ] = 0 ;",
      "indent": 1
    },
    {
      "line": 15,
      "text": "print res",
      "code": "cout << res << endl ;",
      "indent": 1
    },
    {
      "line": 16,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 17,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        3
      ],
      "mod_code": [
        "int lim = arr . length ( ) ;"
      ],
      "err_line": 3,
      "err_msg": "request for member ‘length’ in ‘arr’, which is of non-class type ‘char [101]’"
    },
    {
      "mod_line": [
        4
      ],
      "mod_code": [
        "char arr2 [ lim + 1 ] = { arr2 } ;"
      ],
      "err_line": 4,
      "err_msg": "conflicting declaration ‘char arr2 [(lim + 1)]’"
    },
    {
      "mod_line": [
        5
      ],
      "mod_code": [
        "char res [ lim + 1 ] = { } ;"
      ],
      "err_line": 5,
      "err_msg": "conflicting declaration ‘char res [(lim + 1)]’"
    },
    {
      "mod_line": [
        1
      ],
      "mod_code": [
        "char arr [ 101 ] , * arr2 [ 101 ] ;"
      ],
      "err_line": 4,
      "err_msg": "incompatible types in assignment of ‘char*’ to ‘char* [101]’"
    },
    {
      "mod_line": [
        3
      ],
      "mod_code": [
        "int lim = arr . size ( ) ;"
      ],
      "err_line": 3,
      "err_msg": "request for member ‘size’ in ‘arr’, which is of non-class type ‘char [101]’"
    },
    {
      "mod_line": [
        4
      ],
      "mod_code": [
        "char arr2 [ lim + 1 ] = { } ;"
      ],
      "err_line": 4,
      "err_msg": "conflicting declaration ‘char arr2 [(lim + 1)]’"
    },
    {
      "mod_line": [
        5
      ],
      "mod_code": [
        "char res [ lim + 1 ] = { res } ;"
      ],
      "err_line": 5,
      "err_msg": "conflicting declaration ‘char res [(lim + 1)]’"
    },
    {
      "mod_line": [
        6
      ],
      "mod_code": [
        "{ cin >> arr2 ;"
      ],
      "err_line": 17,
      "err_msg": "expected ‘}’ at end of input"
    },
    {
      "mod_line": [
        7
      ],
      "mod_code": [
        "int i and j ;"
      ],
      "err_line": 7,
      "err_msg": "expected initializer before ‘and’ token"
    },
    {
      "mod_line": [
        12
      ],
      "mod_code": [
        "char res [ i ] = ' 0 ' ;"
      ],
      "err_line": 12,
      "err_msg": "array must be initialized with a brace-enclosed initializer"
    },
    {
      "mod_line": [
        14
      ],
      "mod_code": [
        "char res [ i ] = 0 ;"
      ],
      "err_line": 14,
      "err_msg": "conflicting declaration ‘char res [i]’"
    },
    {
      "mod_line": [
        3,
        4
      ],
      "mod_code": [
        "int lim = arr . length ( ) ;",
        "char arr2 [ lim + 1 ] = { arr2 } ;"
      ],
      "err_line": 3,
      "err_msg": "request for member ‘length’ in ‘arr’, which is of non-class type ‘char [101]’"
    },
    {
      "mod_line": [
        3,
        4,
        5
      ],
      "mod_code": [
        "int lim = arr . length ( ) ;",
        "char arr2 [ lim + 1 ] = { arr2 } ;",
        "char res [ lim + 1 ] = { } ;"
      ],
      "err_line": 3,
      "err_msg": "request for member ‘length’ in ‘arr’, which is of non-class type ‘char [101]’"
    },
    {
      "mod_line": [
        3,
        4,
        5,
        8
      ],
      "mod_code": [
        "int lim = arr . length ( ) ;",
        "char arr2 [ lim + 1 ] = { arr2 } ;",
        "char res [ lim + 1 ] = { } ;",
        "for ( int i = 0 ; i < 0 ; i ++ )"
      ],
      "err_line": 3,
      "err_msg": "request for member ‘length’ in ‘arr’, which is of non-class type ‘char [101]’"
    },
    {
      "mod_line": [
        3,
        4,
        5,
        6
      ],
      "mod_code": [
        "int lim = arr . length ( ) ;",
        "char arr2 [ lim + 1 ] = { arr2 } ;",
        "char res [ lim + 1 ] = { } ;",
        "{ cin >> arr2 ;"
      ],
      "err_line": 3,
      "err_msg": "request for member ‘length’ in ‘arr’, which is of non-class type ‘char [101]’"
    },
    {
      "mod_line": [
        3,
        4,
        5,
        8
      ],
      "mod_code": [
        "int lim = arr . length ( ) ;",
        "char arr2 [ lim + 1 ] = { arr2 } ;",
        "char res [ lim + 1 ] = { } ;",
        "for ( i = 0 ; i < 0 ; i ++ )"
      ],
      "err_line": 3,
      "err_msg": "request for member ‘length’ in ‘arr’, which is of non-class type ‘char [101]’"
    },
    {
      "mod_line": [
        3,
        4,
        8
      ],
      "mod_code": [
        "int lim = arr . length ( ) ;",
        "char arr2 [ lim + 1 ] = { arr2 } ;",
        "for ( int i = 0 ; i < 0 ; i ++ )"
      ],
      "err_line": 3,
      "err_msg": "request for member ‘length’ in ‘arr’, which is of non-class type ‘char [101]’"
    },
    {
      "mod_line": [
        3,
        4,
        8,
        6
      ],
      "mod_code": [
        "int lim = arr . length ( ) ;",
        "char arr2 [ lim + 1 ] = { arr2 } ;",
        "for ( int i = 0 ; i < 0 ; i ++ )",
        "{ cin >> arr2 ;"
      ],
      "err_line": 3,
      "err_msg": "request for member ‘length’ in ‘arr’, which is of non-class type ‘char [101]’"
    },
    {
      "mod_line": [
        3,
        4,
        6
      ],
      "mod_code": [
        "int lim = arr . length ( ) ;",
        "char arr2 [ lim + 1 ] = { arr2 } ;",
        "{ cin >> arr2 ;"
      ],
      "err_line": 3,
      "err_msg": "request for member ‘length’ in ‘arr’, which is of non-class type ‘char [101]’"
    },
    {
      "mod_line": [
        3,
        4,
        6,
        8
      ],
      "mod_code": [
        "int lim = arr . length ( ) ;",
        "char arr2 [ lim + 1 ] = { arr2 } ;",
        "{ cin >> arr2 ;",
        "for ( i = 0 ; i < 0 ; i ++ )"
      ],
      "err_line": 3,
      "err_msg": "request for member ‘length’ in ‘arr’, which is of non-class type ‘char [101]’"
    },
    {
      "mod_line": [
        3,
        4,
        8
      ],
      "mod_code": [
        "int lim = arr . length ( ) ;",
        "char arr2 [ lim + 1 ] = { arr2 } ;",
        "for ( i = 0 ; i < 0 ; i ++ )"
      ],
      "err_line": 3,
      "err_msg": "request for member ‘length’ in ‘arr’, which is of non-class type ‘char [101]’"
    },
    {
      "mod_line": [
        3,
        5
      ],
      "mod_code": [
        "int lim = arr . length ( ) ;",
        "char res [ lim + 1 ] = { } ;"
      ],
      "err_line": 3,
      "err_msg": "request for member ‘length’ in ‘arr’, which is of non-class type ‘char [101]’"
    },
    {
      "mod_line": [
        3,
        5,
        8
      ],
      "mod_code": [
        "int lim = arr . length ( ) ;",
        "char res [ lim + 1 ] = { } ;",
        "for ( int i = 0 ; i < 0 ; i ++ )"
      ],
      "err_line": 3,
      "err_msg": "request for member ‘length’ in ‘arr’, which is of non-class type ‘char [101]’"
    },
    {
      "mod_line": [
        3,
        5,
        8,
        6
      ],
      "mod_code": [
        "int lim = arr . length ( ) ;",
        "char res [ lim + 1 ] = { } ;",
        "for ( int i = 0 ; i < 0 ; i ++ )",
        "{ cin >> arr2 ;"
      ],
      "err_line": 3,
      "err_msg": "request for member ‘length’ in ‘arr’, which is of non-class type ‘char [101]’"
    },
    {
      "mod_line": [
        3,
        5,
        6
      ],
      "mod_code": [
        "int lim = arr . length ( ) ;",
        "char res [ lim + 1 ] = { } ;",
        "{ cin >> arr2 ;"
      ],
      "err_line": 3,
      "err_msg": "request for member ‘length’ in ‘arr’, which is of non-class type ‘char [101]’"
    },
    {
      "mod_line": [
        3,
        5,
        6,
        8
      ],
      "mod_code": [
        "int lim = arr . length ( ) ;",
        "char res [ lim + 1 ] = { } ;",
        "{ cin >> arr2 ;",
        "for ( i = 0 ; i < 0 ; i ++ )"
      ],
      "err_line": 3,
      "err_msg": "request for member ‘length’ in ‘arr’, which is of non-class type ‘char [101]’"
    },
    {
      "mod_line": [
        3,
        5,
        8
      ],
      "mod_code": [
        "int lim = arr . length ( ) ;",
        "char res [ lim + 1 ] = { } ;",
        "for ( i = 0 ; i < 0 ; i ++ )"
      ],
      "err_line": 3,
      "err_msg": "request for member ‘length’ in ‘arr’, which is of non-class type ‘char [101]’"
    },
    {
      "mod_line": [
        3,
        8
      ],
      "mod_code": [
        "int lim = arr . length ( ) ;",
        "for ( int i = 0 ; i < 0 ; i ++ )"
      ],
      "err_line": 3,
      "err_msg": "request for member ‘length’ in ‘arr’, which is of non-class type ‘char [101]’"
    },
    {
      "mod_line": [
        3,
        8,
        6
      ],
      "mod_code": [
        "int lim = arr . length ( ) ;",
        "for ( int i = 0 ; i < 0 ; i ++ )",
        "{ cin >> arr2 ;"
      ],
      "err_line": 3,
      "err_msg": "request for member ‘length’ in ‘arr’, which is of non-class type ‘char [101]’"
    },
    {
      "mod_line": [
        3,
        6
      ],
      "mod_code": [
        "int lim = arr . length ( ) ;",
        "{ cin >> arr2 ;"
      ],
      "err_line": 3,
      "err_msg": "request for member ‘length’ in ‘arr’, which is of non-class type ‘char [101]’"
    },
    {
      "mod_line": [
        3,
        6,
        8
      ],
      "mod_code": [
        "int lim = arr . length ( ) ;",
        "{ cin >> arr2 ;",
        "for ( i = 0 ; i < 0 ; i ++ )"
      ],
      "err_line": 3,
      "err_msg": "request for member ‘length’ in ‘arr’, which is of non-class type ‘char [101]’"
    },
    {
      "mod_line": [
        3,
        8
      ],
      "mod_code": [
        "int lim = arr . length ( ) ;",
        "for ( i = 0 ; i < 0 ; i ++ )"
      ],
      "err_line": 3,
      "err_msg": "request for member ‘length’ in ‘arr’, which is of non-class type ‘char [101]’"
    },
    {
      "mod_line": [
        4,
        5
      ],
      "mod_code": [
        "char arr2 [ lim + 1 ] = { arr2 } ;",
        "char res [ lim + 1 ] = { } ;"
      ],
      "err_line": 4,
      "err_msg": "conflicting declaration ‘char arr2 [(lim + 1)]’"
    },
    {
      "mod_line": [
        4,
        5,
        8
      ],
      "mod_code": [
        "char arr2 [ lim + 1 ] = { arr2 } ;",
        "char res [ lim + 1 ] = { } ;",
        "for ( int i = 0 ; i < 0 ; i ++ )"
      ],
      "err_line": 4,
      "err_msg": "conflicting declaration ‘char arr2 [(lim + 1)]’"
    },
    {
      "mod_line": [
        4,
        5,
        8,
        6
      ],
      "mod_code": [
        "char arr2 [ lim + 1 ] = { arr2 } ;",
        "char res [ lim + 1 ] = { } ;",
        "for ( int i = 0 ; i < 0 ; i ++ )",
        "{ cin >> arr2 ;"
      ],
      "err_line": 4,
      "err_msg": "conflicting declaration ‘char arr2 [(lim + 1)]’"
    },
    {
      "mod_line": [
        4,
        5,
        6
      ],
      "mod_code": [
        "char arr2 [ lim + 1 ] = { arr2 } ;",
        "char res [ lim + 1 ] = { } ;",
        "{ cin >> arr2 ;"
      ],
      "err_line": 4,
      "err_msg": "conflicting declaration ‘char arr2 [(lim + 1)]’"
    },
    {
      "mod_line": [
        4,
        5,
        6,
        8
      ],
      "mod_code": [
        "char arr2 [ lim + 1 ] = { arr2 } ;",
        "char res [ lim + 1 ] = { } ;",
        "{ cin >> arr2 ;",
        "for ( i = 0 ; i < 0 ; i ++ )"
      ],
      "err_line": 4,
      "err_msg": "conflicting declaration ‘char arr2 [(lim + 1)]’"
    },
    {
      "mod_line": [
        4,
        5,
        8
      ],
      "mod_code": [
        "char arr2 [ lim + 1 ] = { arr2 } ;",
        "char res [ lim + 1 ] = { } ;",
        "for ( i = 0 ; i < 0 ; i ++ )"
      ],
      "err_line": 4,
      "err_msg": "conflicting declaration ‘char arr2 [(lim + 1)]’"
    },
    {
      "mod_line": [
        4,
        8
      ],
      "mod_code": [
        "char arr2 [ lim + 1 ] = { arr2 } ;",
        "for ( int i = 0 ; i < 0 ; i ++ )"
      ],
      "err_line": 4,
      "err_msg": "conflicting declaration ‘char arr2 [(lim + 1)]’"
    },
    {
      "mod_line": [
        4,
        8,
        6
      ],
      "mod_code": [
        "char arr2 [ lim + 1 ] = { arr2 } ;",
        "for ( int i = 0 ; i < 0 ; i ++ )",
        "{ cin >> arr2 ;"
      ],
      "err_line": 4,
      "err_msg": "conflicting declaration ‘char arr2 [(lim + 1)]’"
    },
    {
      "mod_line": [
        4,
        6
      ],
      "mod_code": [
        "char arr2 [ lim + 1 ] = { arr2 } ;",
        "{ cin >> arr2 ;"
      ],
      "err_line": 4,
      "err_msg": "conflicting declaration ‘char arr2 [(lim + 1)]’"
    },
    {
      "mod_line": [
        4,
        6,
        8
      ],
      "mod_code": [
        "char arr2 [ lim + 1 ] = { arr2 } ;",
        "{ cin >> arr2 ;",
        "for ( i = 0 ; i < 0 ; i ++ )"
      ],
      "err_line": 4,
      "err_msg": "conflicting declaration ‘char arr2 [(lim + 1)]’"
    },
    {
      "mod_line": [
        4,
        8
      ],
      "mod_code": [
        "char arr2 [ lim + 1 ] = { arr2 } ;",
        "for ( i = 0 ; i < 0 ; i ++ )"
      ],
      "err_line": 4,
      "err_msg": "conflicting declaration ‘char arr2 [(lim + 1)]’"
    },
    {
      "mod_line": [
        5,
        8
      ],
      "mod_code": [
        "char res [ lim + 1 ] = { } ;",
        "for ( int i = 0 ; i < 0 ; i ++ )"
      ],
      "err_line": 5,
      "err_msg": "conflicting declaration ‘char res [(lim + 1)]’"
    },
    {
      "mod_line": [
        5,
        8,
        6
      ],
      "mod_code": [
        "char res [ lim + 1 ] = { } ;",
        "for ( int i = 0 ; i < 0 ; i ++ )",
        "{ cin >> arr2 ;"
      ],
      "err_line": 5,
      "err_msg": "conflicting declaration ‘char res [(lim + 1)]’"
    },
    {
      "mod_line": [
        5,
        6
      ],
      "mod_code": [
        "char res [ lim + 1 ] = { } ;",
        "{ cin >> arr2 ;"
      ],
      "err_line": 5,
      "err_msg": "conflicting declaration ‘char res [(lim + 1)]’"
    },
    {
      "mod_line": [
        5,
        6,
        8
      ],
      "mod_code": [
        "char res [ lim + 1 ] = { } ;",
        "{ cin >> arr2 ;",
        "for ( i = 0 ; i < 0 ; i ++ )"
      ],
      "err_line": 5,
      "err_msg": "conflicting declaration ‘char res [(lim + 1)]’"
    },
    {
      "mod_line": [
        5,
        8
      ],
      "mod_code": [
        "char res [ lim + 1 ] = { } ;",
        "for ( i = 0 ; i < 0 ; i ++ )"
      ],
      "err_line": 5,
      "err_msg": "conflicting declaration ‘char res [(lim + 1)]’"
    },
    {
      "mod_line": [
        8,
        6
      ],
      "mod_code": [
        "for ( int i = 0 ; i < 0 ; i ++ )",
        "{ cin >> arr2 ;"
      ],
      "err_line": 17,
      "err_msg": "expected ‘}’ at end of input"
    },
    {
      "mod_line": [
        6,
        8
      ],
      "mod_code": [
        "{ cin >> arr2 ;",
        "for ( i = 0 ; i < 0 ; i ++ )"
      ],
      "err_line": 17,
      "err_msg": "expected ‘}’ at end of input"
    }
  ]
}