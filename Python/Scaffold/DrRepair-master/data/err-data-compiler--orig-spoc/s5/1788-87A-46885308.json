{
  "meta": {
    "index": 1788,
    "hitid": "3NI0WFPPI9A0PGLTTTVT0TXTY6E60O",
    "workerid": "A2J7P30MA3S6OV",
    "probid": "87A",
    "subid": "46885308"
  },
  "lines": [
    {
      "line": 0,
      "text": "create map mp from char to char",
      "code": "map < char , char > mpu ;",
      "indent": 0
    },
    {
      "line": 1,
      "text": "create vector long long vec set",
      "code": "vector < long long > vec ;",
      "indent": 0
    },
    {
      "line": 2,
      "text": "qq [ 1000006 ] [ 2 ] and a [ 1000006 ] to all 0",
      "code": "int qq [ 1000006 ] [ 2 ] = { } , a [ 1000006 ] = { } ;",
      "indent": 0
    },
    {
      "line": 3,
      "text": "set visit [ 1000006 ] to 0",
      "code": "bool visit [ 1000006 ] = { } ;",
      "indent": 0
    },
    {
      "line": 4,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 5,
      "text": "create long long a , b , a1 , b1 , ct1 , ct2 , set ct1 and ct2 to 0",
      "code": "long long a , b , a1 , b1 , ct1 = 0 , ct2 = 0 ;",
      "indent": 1
    },
    {
      "line": 6,
      "text": "I00",
      "code": "long long i = 0 ;",
      "indent": 1
    },
    {
      "line": 7,
      "text": "read a and b",
      "code": "cin >> a >> b ;",
      "indent": 1
    },
    {
      "line": 8,
      "text": "a1 = a",
      "code": "a1 = a ;",
      "indent": 1
    },
    {
      "line": 9,
      "text": "set b1 to b",
      "code": "b1 = b ;",
      "indent": 1
    },
    {
      "line": 10,
      "text": "if a < b",
      "code": "if ( a < b )",
      "indent": 1
    },
    {
      "line": 11,
      "text": "i = a1",
      "code": "i = a1 ;",
      "indent": 2
    },
    {
      "line": 12,
      "text": "assign ct1 + a1 - 0 to ct1",
      "code": "ct1 += ( a1 - 0 ) ;",
      "indent": 2
    },
    {
      "line": 13,
      "text": "assign a1 + a to a1",
      "code": "a1 += a ;",
      "indent": 2
    },
    {
      "line": 14,
      "text": "else",
      "code": "else",
      "indent": 1
    },
    {
      "line": 15,
      "text": "set i = b1",
      "code": "i = b1 ;",
      "indent": 2
    },
    {
      "line": 16,
      "text": "set ct2 to ct2 + b1 - 0",
      "code": "ct2 += ( b1 - 0 ) ;",
      "indent": 2
    },
    {
      "line": 17,
      "text": "set b1 = b1 + b",
      "code": "b1 += b ;",
      "indent": 2
    },
    {
      "line": 18,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 19,
      "text": "while i < a * b",
      "code": "while ( i < a * b )",
      "indent": 1
    },
    {
      "line": 20,
      "text": "if a1 less than b1",
      "code": "if ( a1 < b1 )",
      "indent": 2
    },
    {
      "line": 21,
      "text": "set ct1 to ct1 + a1 - i",
      "code": "ct1 += ( a1 - i ) ;",
      "indent": 3
    },
    {
      "line": 22,
      "text": "assign a1 to i",
      "code": "i = a1 ;",
      "indent": 3
    },
    {
      "line": 23,
      "text": "set a1 to a1 + a",
      "code": "a1 += a ;",
      "indent": 3
    },
    {
      "line": 24,
      "text": "else if b1 < a1",
      "code": "else if ( b1 < a1 )",
      "indent": 2
    },
    {
      "line": 25,
      "text": "assign ct2 + b1 - i to ct2",
      "code": "ct2 += ( b1 - i ) ;",
      "indent": 3
    },
    {
      "line": 26,
      "text": "set i to b1",
      "code": "i = b1 ;",
      "indent": 3
    },
    {
      "line": 27,
      "text": "set b1 to b1 + b",
      "code": "b1 += b ;",
      "indent": 3
    },
    {
      "line": 28,
      "text": "else",
      "code": "else",
      "indent": 2
    },
    {
      "line": 29,
      "text": "if a > b",
      "code": "if ( a > b )",
      "indent": 3
    },
    {
      "line": 30,
      "text": "assign ct1 + a1 - i to ct1",
      "code": "ct1 += ( a1 - i ) ;",
      "indent": 4
    },
    {
      "line": 31,
      "text": "i = a1",
      "code": "i = a1 ;",
      "indent": 4
    },
    {
      "line": 32,
      "text": "a1 = a1 + a",
      "code": "a1 += a ;",
      "indent": 4
    },
    {
      "line": 33,
      "text": "else",
      "code": "else",
      "indent": 3
    },
    {
      "line": 34,
      "text": "set ct2 = ct2 + b1 - i",
      "code": "ct2 += ( b1 - i ) ;",
      "indent": 4
    },
    {
      "line": 35,
      "text": "i = b1",
      "code": "i = b1 ;",
      "indent": 4
    },
    {
      "line": 36,
      "text": "set b1 to b1 + b",
      "code": "b1 += b ;",
      "indent": 4
    },
    {
      "line": 37,
      "text": "DUMMY",
      "code": "}",
      "indent": 3
    },
    {
      "line": 38,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 39,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 40,
      "text": "if ct1 > ct2",
      "code": "if ( ct1 > ct2 )",
      "indent": 1
    },
    {
      "line": 41,
      "text": "print Dasha and a newline",
      "code": "cout << \" Dasha\\n \" ;",
      "indent": 2
    },
    {
      "line": 42,
      "text": "else if ct1 < ct2",
      "code": "else if ( ct1 < ct2 )",
      "indent": 1
    },
    {
      "line": 43,
      "text": "print Masha and a newline",
      "code": "cout << \" Masha\\n \" ;",
      "indent": 2
    },
    {
      "line": 44,
      "text": "else",
      "code": "else",
      "indent": 1
    },
    {
      "line": 45,
      "text": "print Equal and a newline",
      "code": "cout << \" Equal\\n \" ;",
      "indent": 2
    },
    {
      "line": 46,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        2
      ],
      "mod_code": [
        "qq [ 1000006 ] [ 2 ] = a [ 1000006 ] = 0 ;"
      ],
      "err_line": 2,
      "err_msg": "‘qq’ does not name a type"
    },
    {
      "mod_line": [
        3
      ],
      "mod_code": [
        "visit [ 1000006 ] = 0 ;"
      ],
      "err_line": 3,
      "err_msg": "‘visit’ does not name a type"
    },
    {
      "mod_line": [
        6
      ],
      "mod_code": [
        ""
      ],
      "err_line": 11,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        41
      ],
      "mod_code": [
        "cout << Dasha << \" \\n \" ;"
      ],
      "err_line": 41,
      "err_msg": "‘Dasha’ was not declared in this scope"
    },
    {
      "mod_line": [
        43
      ],
      "mod_code": [
        "cout << Masha << \" \\n \" ;"
      ],
      "err_line": 43,
      "err_msg": "‘Masha’ was not declared in this scope"
    },
    {
      "mod_line": [
        45
      ],
      "mod_code": [
        "cout << Equal << \" \\n \" ;"
      ],
      "err_line": 45,
      "err_msg": "‘Equal’ was not declared in this scope"
    },
    {
      "mod_line": [
        0
      ],
      "mod_code": [
        "map < char create , char > mp ;"
      ],
      "err_line": 0,
      "err_msg": "wrong number of template arguments (1, should be at least 2)"
    },
    {
      "mod_line": [
        1
      ],
      "mod_code": [
        "vector < vector < long long > vec ;"
      ],
      "err_line": 1,
      "err_msg": "template argument 1 is invalid"
    },
    {
      "mod_line": [
        6
      ],
      "mod_code": [
        "ans = 0 ;"
      ],
      "err_line": 6,
      "err_msg": "‘ans’ was not declared in this scope"
    },
    {
      "mod_line": [
        8
      ],
      "mod_code": [
        "int a1 = a ;"
      ],
      "err_line": 8,
      "err_msg": "conflicting declaration ‘int a1’"
    },
    {
      "mod_line": [
        9
      ],
      "mod_code": [
        "int b1 = b ;"
      ],
      "err_line": 9,
      "err_msg": "conflicting declaration ‘int b1’"
    },
    {
      "mod_line": [
        41
      ],
      "mod_code": [
        "cout << Dasha << endl ;"
      ],
      "err_line": 41,
      "err_msg": "‘Dasha’ was not declared in this scope"
    },
    {
      "mod_line": [
        43
      ],
      "mod_code": [
        "cout << Masha << endl ;"
      ],
      "err_line": 43,
      "err_msg": "‘Masha’ was not declared in this scope"
    },
    {
      "mod_line": [
        45
      ],
      "mod_code": [
        "cout << Equal << endl ;"
      ],
      "err_line": 45,
      "err_msg": "‘Equal’ was not declared in this scope"
    },
    {
      "mod_line": [
        2,
        3
      ],
      "mod_code": [
        "qq [ 1000006 ] [ 2 ] = a [ 1000006 ] = 0 ;",
        "visit [ 1000006 ] = 0 ;"
      ],
      "err_line": 2,
      "err_msg": "‘qq’ does not name a type"
    },
    {
      "mod_line": [
        2,
        3,
        6
      ],
      "mod_code": [
        "qq [ 1000006 ] [ 2 ] = a [ 1000006 ] = 0 ;",
        "visit [ 1000006 ] = 0 ;",
        ""
      ],
      "err_line": 2,
      "err_msg": "‘qq’ does not name a type"
    },
    {
      "mod_line": [
        2,
        3,
        6,
        41
      ],
      "mod_code": [
        "qq [ 1000006 ] [ 2 ] = a [ 1000006 ] = 0 ;",
        "visit [ 1000006 ] = 0 ;",
        "",
        "cout << Dasha << \" \\n \" ;"
      ],
      "err_line": 2,
      "err_msg": "‘qq’ does not name a type"
    },
    {
      "mod_line": [
        2,
        3,
        6,
        43
      ],
      "mod_code": [
        "qq [ 1000006 ] [ 2 ] = a [ 1000006 ] = 0 ;",
        "visit [ 1000006 ] = 0 ;",
        "",
        "cout << Masha << \" \\n \" ;"
      ],
      "err_line": 2,
      "err_msg": "‘qq’ does not name a type"
    },
    {
      "mod_line": [
        2,
        3,
        6,
        45
      ],
      "mod_code": [
        "qq [ 1000006 ] [ 2 ] = a [ 1000006 ] = 0 ;",
        "visit [ 1000006 ] = 0 ;",
        "",
        "cout << Equal << \" \\n \" ;"
      ],
      "err_line": 2,
      "err_msg": "‘qq’ does not name a type"
    },
    {
      "mod_line": [
        2,
        3,
        41
      ],
      "mod_code": [
        "qq [ 1000006 ] [ 2 ] = a [ 1000006 ] = 0 ;",
        "visit [ 1000006 ] = 0 ;",
        "cout << Dasha << \" \\n \" ;"
      ],
      "err_line": 2,
      "err_msg": "‘qq’ does not name a type"
    },
    {
      "mod_line": [
        2,
        3,
        41,
        43
      ],
      "mod_code": [
        "qq [ 1000006 ] [ 2 ] = a [ 1000006 ] = 0 ;",
        "visit [ 1000006 ] = 0 ;",
        "cout << Dasha << \" \\n \" ;",
        "cout << Masha << \" \\n \" ;"
      ],
      "err_line": 2,
      "err_msg": "‘qq’ does not name a type"
    },
    {
      "mod_line": [
        2,
        3,
        41,
        45
      ],
      "mod_code": [
        "qq [ 1000006 ] [ 2 ] = a [ 1000006 ] = 0 ;",
        "visit [ 1000006 ] = 0 ;",
        "cout << Dasha << \" \\n \" ;",
        "cout << Equal << \" \\n \" ;"
      ],
      "err_line": 2,
      "err_msg": "‘qq’ does not name a type"
    },
    {
      "mod_line": [
        2,
        3,
        43
      ],
      "mod_code": [
        "qq [ 1000006 ] [ 2 ] = a [ 1000006 ] = 0 ;",
        "visit [ 1000006 ] = 0 ;",
        "cout << Masha << \" \\n \" ;"
      ],
      "err_line": 2,
      "err_msg": "‘qq’ does not name a type"
    },
    {
      "mod_line": [
        2,
        3,
        43,
        45
      ],
      "mod_code": [
        "qq [ 1000006 ] [ 2 ] = a [ 1000006 ] = 0 ;",
        "visit [ 1000006 ] = 0 ;",
        "cout << Masha << \" \\n \" ;",
        "cout << Equal << \" \\n \" ;"
      ],
      "err_line": 2,
      "err_msg": "‘qq’ does not name a type"
    },
    {
      "mod_line": [
        2,
        3,
        45
      ],
      "mod_code": [
        "qq [ 1000006 ] [ 2 ] = a [ 1000006 ] = 0 ;",
        "visit [ 1000006 ] = 0 ;",
        "cout << Equal << \" \\n \" ;"
      ],
      "err_line": 2,
      "err_msg": "‘qq’ does not name a type"
    },
    {
      "mod_line": [
        2,
        6
      ],
      "mod_code": [
        "qq [ 1000006 ] [ 2 ] = a [ 1000006 ] = 0 ;",
        ""
      ],
      "err_line": 2,
      "err_msg": "‘qq’ does not name a type"
    },
    {
      "mod_line": [
        2,
        6,
        41
      ],
      "mod_code": [
        "qq [ 1000006 ] [ 2 ] = a [ 1000006 ] = 0 ;",
        "",
        "cout << Dasha << \" \\n \" ;"
      ],
      "err_line": 2,
      "err_msg": "‘qq’ does not name a type"
    },
    {
      "mod_line": [
        2,
        6,
        41,
        43
      ],
      "mod_code": [
        "qq [ 1000006 ] [ 2 ] = a [ 1000006 ] = 0 ;",
        "",
        "cout << Dasha << \" \\n \" ;",
        "cout << Masha << \" \\n \" ;"
      ],
      "err_line": 2,
      "err_msg": "‘qq’ does not name a type"
    },
    {
      "mod_line": [
        2,
        6,
        41,
        45
      ],
      "mod_code": [
        "qq [ 1000006 ] [ 2 ] = a [ 1000006 ] = 0 ;",
        "",
        "cout << Dasha << \" \\n \" ;",
        "cout << Equal << \" \\n \" ;"
      ],
      "err_line": 2,
      "err_msg": "‘qq’ does not name a type"
    },
    {
      "mod_line": [
        2,
        6,
        43
      ],
      "mod_code": [
        "qq [ 1000006 ] [ 2 ] = a [ 1000006 ] = 0 ;",
        "",
        "cout << Masha << \" \\n \" ;"
      ],
      "err_line": 2,
      "err_msg": "‘qq’ does not name a type"
    },
    {
      "mod_line": [
        2,
        6,
        43,
        45
      ],
      "mod_code": [
        "qq [ 1000006 ] [ 2 ] = a [ 1000006 ] = 0 ;",
        "",
        "cout << Masha << \" \\n \" ;",
        "cout << Equal << \" \\n \" ;"
      ],
      "err_line": 2,
      "err_msg": "‘qq’ does not name a type"
    },
    {
      "mod_line": [
        2,
        6,
        45
      ],
      "mod_code": [
        "qq [ 1000006 ] [ 2 ] = a [ 1000006 ] = 0 ;",
        "",
        "cout << Equal << \" \\n \" ;"
      ],
      "err_line": 2,
      "err_msg": "‘qq’ does not name a type"
    },
    {
      "mod_line": [
        2,
        41
      ],
      "mod_code": [
        "qq [ 1000006 ] [ 2 ] = a [ 1000006 ] = 0 ;",
        "cout << Dasha << \" \\n \" ;"
      ],
      "err_line": 2,
      "err_msg": "‘qq’ does not name a type"
    },
    {
      "mod_line": [
        2,
        41,
        43
      ],
      "mod_code": [
        "qq [ 1000006 ] [ 2 ] = a [ 1000006 ] = 0 ;",
        "cout << Dasha << \" \\n \" ;",
        "cout << Masha << \" \\n \" ;"
      ],
      "err_line": 2,
      "err_msg": "‘qq’ does not name a type"
    },
    {
      "mod_line": [
        2,
        41,
        43,
        45
      ],
      "mod_code": [
        "qq [ 1000006 ] [ 2 ] = a [ 1000006 ] = 0 ;",
        "cout << Dasha << \" \\n \" ;",
        "cout << Masha << \" \\n \" ;",
        "cout << Equal << \" \\n \" ;"
      ],
      "err_line": 2,
      "err_msg": "‘qq’ does not name a type"
    },
    {
      "mod_line": [
        2,
        41,
        45
      ],
      "mod_code": [
        "qq [ 1000006 ] [ 2 ] = a [ 1000006 ] = 0 ;",
        "cout << Dasha << \" \\n \" ;",
        "cout << Equal << \" \\n \" ;"
      ],
      "err_line": 2,
      "err_msg": "‘qq’ does not name a type"
    },
    {
      "mod_line": [
        2,
        43
      ],
      "mod_code": [
        "qq [ 1000006 ] [ 2 ] = a [ 1000006 ] = 0 ;",
        "cout << Masha << \" \\n \" ;"
      ],
      "err_line": 2,
      "err_msg": "‘qq’ does not name a type"
    },
    {
      "mod_line": [
        2,
        43,
        45
      ],
      "mod_code": [
        "qq [ 1000006 ] [ 2 ] = a [ 1000006 ] = 0 ;",
        "cout << Masha << \" \\n \" ;",
        "cout << Equal << \" \\n \" ;"
      ],
      "err_line": 2,
      "err_msg": "‘qq’ does not name a type"
    },
    {
      "mod_line": [
        2,
        45
      ],
      "mod_code": [
        "qq [ 1000006 ] [ 2 ] = a [ 1000006 ] = 0 ;",
        "cout << Equal << \" \\n \" ;"
      ],
      "err_line": 2,
      "err_msg": "‘qq’ does not name a type"
    },
    {
      "mod_line": [
        3,
        6
      ],
      "mod_code": [
        "visit [ 1000006 ] = 0 ;",
        ""
      ],
      "err_line": 3,
      "err_msg": "‘visit’ does not name a type"
    },
    {
      "mod_line": [
        3,
        6,
        41
      ],
      "mod_code": [
        "visit [ 1000006 ] = 0 ;",
        "",
        "cout << Dasha << \" \\n \" ;"
      ],
      "err_line": 3,
      "err_msg": "‘visit’ does not name a type"
    },
    {
      "mod_line": [
        3,
        6,
        41,
        43
      ],
      "mod_code": [
        "visit [ 1000006 ] = 0 ;",
        "",
        "cout << Dasha << \" \\n \" ;",
        "cout << Masha << \" \\n \" ;"
      ],
      "err_line": 3,
      "err_msg": "‘visit’ does not name a type"
    },
    {
      "mod_line": [
        3,
        6,
        41,
        45
      ],
      "mod_code": [
        "visit [ 1000006 ] = 0 ;",
        "",
        "cout << Dasha << \" \\n \" ;",
        "cout << Equal << \" \\n \" ;"
      ],
      "err_line": 3,
      "err_msg": "‘visit’ does not name a type"
    },
    {
      "mod_line": [
        3,
        6,
        43
      ],
      "mod_code": [
        "visit [ 1000006 ] = 0 ;",
        "",
        "cout << Masha << \" \\n \" ;"
      ],
      "err_line": 3,
      "err_msg": "‘visit’ does not name a type"
    },
    {
      "mod_line": [
        3,
        6,
        43,
        45
      ],
      "mod_code": [
        "visit [ 1000006 ] = 0 ;",
        "",
        "cout << Masha << \" \\n \" ;",
        "cout << Equal << \" \\n \" ;"
      ],
      "err_line": 3,
      "err_msg": "‘visit’ does not name a type"
    },
    {
      "mod_line": [
        3,
        6,
        45
      ],
      "mod_code": [
        "visit [ 1000006 ] = 0 ;",
        "",
        "cout << Equal << \" \\n \" ;"
      ],
      "err_line": 3,
      "err_msg": "‘visit’ does not name a type"
    },
    {
      "mod_line": [
        3,
        41
      ],
      "mod_code": [
        "visit [ 1000006 ] = 0 ;",
        "cout << Dasha << \" \\n \" ;"
      ],
      "err_line": 3,
      "err_msg": "‘visit’ does not name a type"
    },
    {
      "mod_line": [
        3,
        41,
        43
      ],
      "mod_code": [
        "visit [ 1000006 ] = 0 ;",
        "cout << Dasha << \" \\n \" ;",
        "cout << Masha << \" \\n \" ;"
      ],
      "err_line": 3,
      "err_msg": "‘visit’ does not name a type"
    },
    {
      "mod_line": [
        3,
        41,
        43,
        45
      ],
      "mod_code": [
        "visit [ 1000006 ] = 0 ;",
        "cout << Dasha << \" \\n \" ;",
        "cout << Masha << \" \\n \" ;",
        "cout << Equal << \" \\n \" ;"
      ],
      "err_line": 3,
      "err_msg": "‘visit’ does not name a type"
    },
    {
      "mod_line": [
        3,
        41,
        45
      ],
      "mod_code": [
        "visit [ 1000006 ] = 0 ;",
        "cout << Dasha << \" \\n \" ;",
        "cout << Equal << \" \\n \" ;"
      ],
      "err_line": 3,
      "err_msg": "‘visit’ does not name a type"
    },
    {
      "mod_line": [
        3,
        43
      ],
      "mod_code": [
        "visit [ 1000006 ] = 0 ;",
        "cout << Masha << \" \\n \" ;"
      ],
      "err_line": 3,
      "err_msg": "‘visit’ does not name a type"
    },
    {
      "mod_line": [
        3,
        43,
        45
      ],
      "mod_code": [
        "visit [ 1000006 ] = 0 ;",
        "cout << Masha << \" \\n \" ;",
        "cout << Equal << \" \\n \" ;"
      ],
      "err_line": 3,
      "err_msg": "‘visit’ does not name a type"
    },
    {
      "mod_line": [
        3,
        45
      ],
      "mod_code": [
        "visit [ 1000006 ] = 0 ;",
        "cout << Equal << \" \\n \" ;"
      ],
      "err_line": 3,
      "err_msg": "‘visit’ does not name a type"
    },
    {
      "mod_line": [
        6,
        41
      ],
      "mod_code": [
        "",
        "cout << Dasha << \" \\n \" ;"
      ],
      "err_line": 11,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        41,
        43
      ],
      "mod_code": [
        "",
        "cout << Dasha << \" \\n \" ;",
        "cout << Masha << \" \\n \" ;"
      ],
      "err_line": 11,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        41,
        43,
        45
      ],
      "mod_code": [
        "",
        "cout << Dasha << \" \\n \" ;",
        "cout << Masha << \" \\n \" ;",
        "cout << Equal << \" \\n \" ;"
      ],
      "err_line": 11,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        41,
        45
      ],
      "mod_code": [
        "",
        "cout << Dasha << \" \\n \" ;",
        "cout << Equal << \" \\n \" ;"
      ],
      "err_line": 11,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        43
      ],
      "mod_code": [
        "",
        "cout << Masha << \" \\n \" ;"
      ],
      "err_line": 11,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        43,
        45
      ],
      "mod_code": [
        "",
        "cout << Masha << \" \\n \" ;",
        "cout << Equal << \" \\n \" ;"
      ],
      "err_line": 11,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        45
      ],
      "mod_code": [
        "",
        "cout << Equal << \" \\n \" ;"
      ],
      "err_line": 11,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        41,
        43
      ],
      "mod_code": [
        "cout << Dasha << \" \\n \" ;",
        "cout << Masha << \" \\n \" ;"
      ],
      "err_line": 41,
      "err_msg": "‘Dasha’ was not declared in this scope"
    },
    {
      "mod_line": [
        41,
        43,
        45
      ],
      "mod_code": [
        "cout << Dasha << \" \\n \" ;",
        "cout << Masha << \" \\n \" ;",
        "cout << Equal << \" \\n \" ;"
      ],
      "err_line": 41,
      "err_msg": "‘Dasha’ was not declared in this scope"
    },
    {
      "mod_line": [
        41,
        45
      ],
      "mod_code": [
        "cout << Dasha << \" \\n \" ;",
        "cout << Equal << \" \\n \" ;"
      ],
      "err_line": 41,
      "err_msg": "‘Dasha’ was not declared in this scope"
    },
    {
      "mod_line": [
        43,
        45
      ],
      "mod_code": [
        "cout << Masha << \" \\n \" ;",
        "cout << Equal << \" \\n \" ;"
      ],
      "err_line": 43,
      "err_msg": "‘Masha’ was not declared in this scope"
    }
  ]
}