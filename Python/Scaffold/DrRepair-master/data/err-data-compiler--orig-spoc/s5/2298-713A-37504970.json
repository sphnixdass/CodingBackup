{
  "meta": {
    "index": 2298,
    "hitid": "37OPIVELUUXCNI3SHEJQMQYWG66AHK",
    "workerid": "A1NBHCFZKJGHKW",
    "probid": "713A",
    "subid": "37504970"
  },
  "lines": [
    {
      "line": 0,
      "text": "in function ChuyenDoi taking string s , reference to string a",
      "code": "void ChuyenDoi ( string s , string & a )",
      "indent": 0
    },
    {
      "line": 1,
      "text": "set a to \" 000000000000000000 \"",
      "code": "a = \" 000000000000000000 \" ;",
      "indent": 1
    },
    {
      "line": 2,
      "text": "i = int with i = length of s - 1",
      "code": "int i = s . length ( ) - 1 ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "ma = int with ma = length of a - 1",
      "code": "int ma = a . length ( ) - 1 ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "loop while i > = 0",
      "code": "while ( i >= 0 )",
      "indent": 1
    },
    {
      "line": 5,
      "text": "set a [ ma ] to s [ i ] mod 2 + 48",
      "code": "a [ ma ] = s [ i ] % 2 + 48 ;",
      "indent": 2
    },
    {
      "line": 6,
      "text": "decrement i",
      "code": "i -- ;",
      "indent": 2
    },
    {
      "line": 7,
      "text": "decrement ma",
      "code": "ma -- ;",
      "indent": 2
    },
    {
      "line": 8,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 9,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    },
    {
      "line": 10,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 11,
      "text": "t = int",
      "code": "int t ;",
      "indent": 1
    },
    {
      "line": 12,
      "text": "read t",
      "code": "cin >> t ;",
      "indent": 1
    },
    {
      "line": 13,
      "text": "flat = string , int map",
      "code": "map < string , int > flat ;",
      "indent": 1
    },
    {
      "line": 14,
      "text": "p = string , int map iterator",
      "code": "map < string , int > :: iterator p ;",
      "indent": 1
    },
    {
      "line": 15,
      "text": "for i = 0 to t",
      "code": "for ( int i = 0 ; i < t ; i ++ )",
      "indent": 1
    },
    {
      "line": 16,
      "text": "s , a = string",
      "code": "string s , a ;",
      "indent": 2
    },
    {
      "line": 17,
      "text": "sign = char",
      "code": "char sign ;",
      "indent": 2
    },
    {
      "line": 18,
      "text": "read sign then s",
      "code": "cin >> sign >> s ;",
      "indent": 2
    },
    {
      "line": 19,
      "text": "call ChuyenDoi of s , a",
      "code": "ChuyenDoi ( s , a ) ;",
      "indent": 2
    },
    {
      "line": 20,
      "text": "if sign is ' + '",
      "code": "if ( sign == ' + ' )",
      "indent": 2
    },
    {
      "line": 21,
      "text": "increment flat [ a ]",
      "code": "flat [ a ] ++ ;",
      "indent": 3
    },
    {
      "line": 22,
      "text": "else if sign is ' - '",
      "code": "else if ( sign == ' - ' )",
      "indent": 2
    },
    {
      "line": 23,
      "text": "decrement flat [ a ]",
      "code": "flat [ a ] -- ;",
      "indent": 3
    },
    {
      "line": 24,
      "text": "if flat [ a ] is 0 erase a of flat",
      "code": "if ( flat [ a ] == 0 ) flat . erase ( a ) ;",
      "indent": 3
    },
    {
      "line": 25,
      "text": "else",
      "code": "else",
      "indent": 2
    },
    {
      "line": 26,
      "text": "print flat [ a ]",
      "code": "cout << flat [ a ] << endl ;",
      "indent": 3
    },
    {
      "line": 27,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 28,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 29,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        0
      ],
      "mod_code": [
        "void ChuyenDoi ( string & a , string & a )"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘std::__cxx11::string& a’"
    },
    {
      "mod_line": [
        24
      ],
      "mod_code": [
        "if ( strcmp ( flat [ a ] ) == 0 )"
      ],
      "err_line": 24,
      "err_msg": "invalid conversion from ‘std::map<std::__cxx11::basic_string<char>, int>::mapped_type {aka int}’ to ‘const char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        1
      ],
      "mod_code": [
        "char a = \" 000000000000000000 \" ;"
      ],
      "err_line": 1,
      "err_msg": "declaration of ‘char a’ shadows a parameter"
    },
    {
      "mod_line": [
        12
      ],
      "mod_code": [
        "cin . get ( t ) ;"
      ],
      "err_line": 12,
      "err_msg": "invalid initialization of non-const reference of type ‘std::basic_istream<char>::char_type& {aka char&}’ from an rvalue of type ‘std::basic_istream<char>::char_type {aka char}’"
    },
    {
      "mod_line": [
        13
      ],
      "mod_code": [
        "map < string , int > :: iterator flat ;"
      ],
      "err_line": 21,
      "err_msg": "no match for ‘operator[]’ (operand types are ‘std::map<std::__cxx11::basic_string<char>, int>::iterator {aka std::_Rb_tree_iterator<std::pair<const std::__cxx11::basic_string<char>, int> >}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        15
      ],
      "mod_code": [
        "for ( i = 0 ; i < t ; i ++ )"
      ],
      "err_line": 15,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        16
      ],
      "mod_code": [
        "string s , s ;"
      ],
      "err_line": 16,
      "err_msg": "redeclaration of ‘std::__cxx11::string s’"
    },
    {
      "mod_line": [
        17
      ],
      "mod_code": [
        "char * sign ;"
      ],
      "err_line": 20,
      "err_msg": "ISO C++ forbids comparison between pointer and integer [-fpermissive]"
    },
    {
      "mod_line": [
        19
      ],
      "mod_code": [
        "s ( s , a ) ;"
      ],
      "err_line": 19,
      "err_msg": "no match for call to ‘(std::__cxx11::string {aka std::__cxx11::basic_string<char>}) (std::__cxx11::string&, std::__cxx11::string&)’"
    },
    {
      "mod_line": [
        20
      ],
      "mod_code": [
        "else if ( sign == ' + ' )"
      ],
      "err_line": 20,
      "err_msg": "‘else’ without a previous ‘if’"
    },
    {
      "mod_line": [
        22
      ],
      "mod_code": [
        "else if ( l == ' - ' )"
      ],
      "err_line": 22,
      "err_msg": "‘l’ was not declared in this scope"
    },
    {
      "mod_line": [
        23
      ],
      "mod_code": [
        "flat [ ' a ' ] -- ;"
      ],
      "err_line": 23,
      "err_msg": "no match for ‘operator[]’ (operand types are ‘std::map<std::__cxx11::basic_string<char>, int>’ and ‘char’)"
    },
    {
      "mod_line": [
        24
      ],
      "mod_code": [
        "if ( strcmp ( flat [ a ] ) )"
      ],
      "err_line": 24,
      "err_msg": "invalid conversion from ‘std::map<std::__cxx11::basic_string<char>, int>::mapped_type {aka int}’ to ‘const char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        0,
        24
      ],
      "mod_code": [
        "void ChuyenDoi ( string & a , string & a )",
        "if ( strcmp ( flat [ a ] ) == 0 )"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘std::__cxx11::string& a’"
    },
    {
      "mod_line": [
        0,
        24,
        26
      ],
      "mod_code": [
        "void ChuyenDoi ( string & a , string & a )",
        "if ( strcmp ( flat [ a ] ) == 0 )",
        "cout << flat [ a ] ;"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘std::__cxx11::string& a’"
    },
    {
      "mod_line": [
        0,
        24,
        26,
        22
      ],
      "mod_code": [
        "void ChuyenDoi ( string & a , string & a )",
        "if ( strcmp ( flat [ a ] ) == 0 )",
        "cout << flat [ a ] ;",
        "else if ( l == ' - ' )"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘std::__cxx11::string& a’"
    },
    {
      "mod_line": [
        0,
        24,
        26,
        13
      ],
      "mod_code": [
        "void ChuyenDoi ( string & a , string & a )",
        "if ( strcmp ( flat [ a ] ) == 0 )",
        "cout << flat [ a ] ;",
        "map < string , int > :: iterator flat ;"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘std::__cxx11::string& a’"
    },
    {
      "mod_line": [
        0,
        24,
        26,
        12
      ],
      "mod_code": [
        "void ChuyenDoi ( string & a , string & a )",
        "if ( strcmp ( flat [ a ] ) == 0 )",
        "cout << flat [ a ] ;",
        "cin . get ( t ) ;"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘std::__cxx11::string& a’"
    },
    {
      "mod_line": [
        0,
        24,
        22
      ],
      "mod_code": [
        "void ChuyenDoi ( string & a , string & a )",
        "if ( strcmp ( flat [ a ] ) == 0 )",
        "else if ( l == ' - ' )"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘std::__cxx11::string& a’"
    },
    {
      "mod_line": [
        0,
        24,
        22,
        13
      ],
      "mod_code": [
        "void ChuyenDoi ( string & a , string & a )",
        "if ( strcmp ( flat [ a ] ) == 0 )",
        "else if ( l == ' - ' )",
        "map < string , int > :: iterator flat ;"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘std::__cxx11::string& a’"
    },
    {
      "mod_line": [
        0,
        24,
        22,
        12
      ],
      "mod_code": [
        "void ChuyenDoi ( string & a , string & a )",
        "if ( strcmp ( flat [ a ] ) == 0 )",
        "else if ( l == ' - ' )",
        "cin . get ( t ) ;"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘std::__cxx11::string& a’"
    },
    {
      "mod_line": [
        0,
        24,
        13
      ],
      "mod_code": [
        "void ChuyenDoi ( string & a , string & a )",
        "if ( strcmp ( flat [ a ] ) == 0 )",
        "map < string , int > :: iterator flat ;"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘std::__cxx11::string& a’"
    },
    {
      "mod_line": [
        0,
        24,
        13,
        12
      ],
      "mod_code": [
        "void ChuyenDoi ( string & a , string & a )",
        "if ( strcmp ( flat [ a ] ) == 0 )",
        "map < string , int > :: iterator flat ;",
        "cin . get ( t ) ;"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘std::__cxx11::string& a’"
    },
    {
      "mod_line": [
        0,
        24,
        12
      ],
      "mod_code": [
        "void ChuyenDoi ( string & a , string & a )",
        "if ( strcmp ( flat [ a ] ) == 0 )",
        "cin . get ( t ) ;"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘std::__cxx11::string& a’"
    },
    {
      "mod_line": [
        0,
        26
      ],
      "mod_code": [
        "void ChuyenDoi ( string & a , string & a )",
        "cout << flat [ a ] ;"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘std::__cxx11::string& a’"
    },
    {
      "mod_line": [
        0,
        26,
        22
      ],
      "mod_code": [
        "void ChuyenDoi ( string & a , string & a )",
        "cout << flat [ a ] ;",
        "else if ( l == ' - ' )"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘std::__cxx11::string& a’"
    },
    {
      "mod_line": [
        0,
        26,
        22,
        13
      ],
      "mod_code": [
        "void ChuyenDoi ( string & a , string & a )",
        "cout << flat [ a ] ;",
        "else if ( l == ' - ' )",
        "map < string , int > :: iterator flat ;"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘std::__cxx11::string& a’"
    },
    {
      "mod_line": [
        0,
        26,
        22,
        12
      ],
      "mod_code": [
        "void ChuyenDoi ( string & a , string & a )",
        "cout << flat [ a ] ;",
        "else if ( l == ' - ' )",
        "cin . get ( t ) ;"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘std::__cxx11::string& a’"
    },
    {
      "mod_line": [
        0,
        26,
        13
      ],
      "mod_code": [
        "void ChuyenDoi ( string & a , string & a )",
        "cout << flat [ a ] ;",
        "map < string , int > :: iterator flat ;"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘std::__cxx11::string& a’"
    },
    {
      "mod_line": [
        0,
        26,
        13,
        12
      ],
      "mod_code": [
        "void ChuyenDoi ( string & a , string & a )",
        "cout << flat [ a ] ;",
        "map < string , int > :: iterator flat ;",
        "cin . get ( t ) ;"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘std::__cxx11::string& a’"
    },
    {
      "mod_line": [
        0,
        26,
        12
      ],
      "mod_code": [
        "void ChuyenDoi ( string & a , string & a )",
        "cout << flat [ a ] ;",
        "cin . get ( t ) ;"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘std::__cxx11::string& a’"
    },
    {
      "mod_line": [
        0,
        22
      ],
      "mod_code": [
        "void ChuyenDoi ( string & a , string & a )",
        "else if ( l == ' - ' )"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘std::__cxx11::string& a’"
    },
    {
      "mod_line": [
        0,
        22,
        13
      ],
      "mod_code": [
        "void ChuyenDoi ( string & a , string & a )",
        "else if ( l == ' - ' )",
        "map < string , int > :: iterator flat ;"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘std::__cxx11::string& a’"
    },
    {
      "mod_line": [
        0,
        22,
        13,
        12
      ],
      "mod_code": [
        "void ChuyenDoi ( string & a , string & a )",
        "else if ( l == ' - ' )",
        "map < string , int > :: iterator flat ;",
        "cin . get ( t ) ;"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘std::__cxx11::string& a’"
    },
    {
      "mod_line": [
        0,
        22,
        12
      ],
      "mod_code": [
        "void ChuyenDoi ( string & a , string & a )",
        "else if ( l == ' - ' )",
        "cin . get ( t ) ;"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘std::__cxx11::string& a’"
    },
    {
      "mod_line": [
        0,
        13
      ],
      "mod_code": [
        "void ChuyenDoi ( string & a , string & a )",
        "map < string , int > :: iterator flat ;"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘std::__cxx11::string& a’"
    },
    {
      "mod_line": [
        0,
        13,
        12
      ],
      "mod_code": [
        "void ChuyenDoi ( string & a , string & a )",
        "map < string , int > :: iterator flat ;",
        "cin . get ( t ) ;"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘std::__cxx11::string& a’"
    },
    {
      "mod_line": [
        0,
        12
      ],
      "mod_code": [
        "void ChuyenDoi ( string & a , string & a )",
        "cin . get ( t ) ;"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘std::__cxx11::string& a’"
    },
    {
      "mod_line": [
        24,
        26
      ],
      "mod_code": [
        "if ( strcmp ( flat [ a ] ) == 0 )",
        "cout << flat [ a ] ;"
      ],
      "err_line": 24,
      "err_msg": "invalid conversion from ‘std::map<std::__cxx11::basic_string<char>, int>::mapped_type {aka int}’ to ‘const char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        24,
        26,
        22
      ],
      "mod_code": [
        "if ( strcmp ( flat [ a ] ) == 0 )",
        "cout << flat [ a ] ;",
        "else if ( l == ' - ' )"
      ],
      "err_line": 22,
      "err_msg": "‘l’ was not declared in this scope"
    },
    {
      "mod_line": [
        24,
        26,
        22,
        13
      ],
      "mod_code": [
        "if ( strcmp ( flat [ a ] ) == 0 )",
        "cout << flat [ a ] ;",
        "else if ( l == ' - ' )",
        "map < string , int > :: iterator flat ;"
      ],
      "err_line": 21,
      "err_msg": "no match for ‘operator[]’ (operand types are ‘std::map<std::__cxx11::basic_string<char>, int>::iterator {aka std::_Rb_tree_iterator<std::pair<const std::__cxx11::basic_string<char>, int> >}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        24,
        26,
        22,
        12
      ],
      "mod_code": [
        "if ( strcmp ( flat [ a ] ) == 0 )",
        "cout << flat [ a ] ;",
        "else if ( l == ' - ' )",
        "cin . get ( t ) ;"
      ],
      "err_line": 12,
      "err_msg": "invalid initialization of non-const reference of type ‘std::basic_istream<char>::char_type& {aka char&}’ from an rvalue of type ‘std::basic_istream<char>::char_type {aka char}’"
    },
    {
      "mod_line": [
        24,
        26,
        13
      ],
      "mod_code": [
        "if ( strcmp ( flat [ a ] ) == 0 )",
        "cout << flat [ a ] ;",
        "map < string , int > :: iterator flat ;"
      ],
      "err_line": 21,
      "err_msg": "no match for ‘operator[]’ (operand types are ‘std::map<std::__cxx11::basic_string<char>, int>::iterator {aka std::_Rb_tree_iterator<std::pair<const std::__cxx11::basic_string<char>, int> >}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        24,
        26,
        13,
        12
      ],
      "mod_code": [
        "if ( strcmp ( flat [ a ] ) == 0 )",
        "cout << flat [ a ] ;",
        "map < string , int > :: iterator flat ;",
        "cin . get ( t ) ;"
      ],
      "err_line": 12,
      "err_msg": "invalid initialization of non-const reference of type ‘std::basic_istream<char>::char_type& {aka char&}’ from an rvalue of type ‘std::basic_istream<char>::char_type {aka char}’"
    },
    {
      "mod_line": [
        24,
        26,
        12
      ],
      "mod_code": [
        "if ( strcmp ( flat [ a ] ) == 0 )",
        "cout << flat [ a ] ;",
        "cin . get ( t ) ;"
      ],
      "err_line": 12,
      "err_msg": "invalid initialization of non-const reference of type ‘std::basic_istream<char>::char_type& {aka char&}’ from an rvalue of type ‘std::basic_istream<char>::char_type {aka char}’"
    },
    {
      "mod_line": [
        24,
        22
      ],
      "mod_code": [
        "if ( strcmp ( flat [ a ] ) == 0 )",
        "else if ( l == ' - ' )"
      ],
      "err_line": 22,
      "err_msg": "‘l’ was not declared in this scope"
    },
    {
      "mod_line": [
        24,
        22,
        13
      ],
      "mod_code": [
        "if ( strcmp ( flat [ a ] ) == 0 )",
        "else if ( l == ' - ' )",
        "map < string , int > :: iterator flat ;"
      ],
      "err_line": 21,
      "err_msg": "no match for ‘operator[]’ (operand types are ‘std::map<std::__cxx11::basic_string<char>, int>::iterator {aka std::_Rb_tree_iterator<std::pair<const std::__cxx11::basic_string<char>, int> >}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        24,
        22,
        13,
        12
      ],
      "mod_code": [
        "if ( strcmp ( flat [ a ] ) == 0 )",
        "else if ( l == ' - ' )",
        "map < string , int > :: iterator flat ;",
        "cin . get ( t ) ;"
      ],
      "err_line": 12,
      "err_msg": "invalid initialization of non-const reference of type ‘std::basic_istream<char>::char_type& {aka char&}’ from an rvalue of type ‘std::basic_istream<char>::char_type {aka char}’"
    },
    {
      "mod_line": [
        24,
        22,
        12
      ],
      "mod_code": [
        "if ( strcmp ( flat [ a ] ) == 0 )",
        "else if ( l == ' - ' )",
        "cin . get ( t ) ;"
      ],
      "err_line": 12,
      "err_msg": "invalid initialization of non-const reference of type ‘std::basic_istream<char>::char_type& {aka char&}’ from an rvalue of type ‘std::basic_istream<char>::char_type {aka char}’"
    },
    {
      "mod_line": [
        24,
        13
      ],
      "mod_code": [
        "if ( strcmp ( flat [ a ] ) == 0 )",
        "map < string , int > :: iterator flat ;"
      ],
      "err_line": 21,
      "err_msg": "no match for ‘operator[]’ (operand types are ‘std::map<std::__cxx11::basic_string<char>, int>::iterator {aka std::_Rb_tree_iterator<std::pair<const std::__cxx11::basic_string<char>, int> >}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        24,
        13,
        12
      ],
      "mod_code": [
        "if ( strcmp ( flat [ a ] ) == 0 )",
        "map < string , int > :: iterator flat ;",
        "cin . get ( t ) ;"
      ],
      "err_line": 12,
      "err_msg": "invalid initialization of non-const reference of type ‘std::basic_istream<char>::char_type& {aka char&}’ from an rvalue of type ‘std::basic_istream<char>::char_type {aka char}’"
    },
    {
      "mod_line": [
        24,
        12
      ],
      "mod_code": [
        "if ( strcmp ( flat [ a ] ) == 0 )",
        "cin . get ( t ) ;"
      ],
      "err_line": 12,
      "err_msg": "invalid initialization of non-const reference of type ‘std::basic_istream<char>::char_type& {aka char&}’ from an rvalue of type ‘std::basic_istream<char>::char_type {aka char}’"
    },
    {
      "mod_line": [
        26,
        22
      ],
      "mod_code": [
        "cout << flat [ a ] ;",
        "else if ( l == ' - ' )"
      ],
      "err_line": 22,
      "err_msg": "‘l’ was not declared in this scope"
    },
    {
      "mod_line": [
        26,
        22,
        13
      ],
      "mod_code": [
        "cout << flat [ a ] ;",
        "else if ( l == ' - ' )",
        "map < string , int > :: iterator flat ;"
      ],
      "err_line": 21,
      "err_msg": "no match for ‘operator[]’ (operand types are ‘std::map<std::__cxx11::basic_string<char>, int>::iterator {aka std::_Rb_tree_iterator<std::pair<const std::__cxx11::basic_string<char>, int> >}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        26,
        22,
        13,
        12
      ],
      "mod_code": [
        "cout << flat [ a ] ;",
        "else if ( l == ' - ' )",
        "map < string , int > :: iterator flat ;",
        "cin . get ( t ) ;"
      ],
      "err_line": 12,
      "err_msg": "invalid initialization of non-const reference of type ‘std::basic_istream<char>::char_type& {aka char&}’ from an rvalue of type ‘std::basic_istream<char>::char_type {aka char}’"
    },
    {
      "mod_line": [
        26,
        22,
        12
      ],
      "mod_code": [
        "cout << flat [ a ] ;",
        "else if ( l == ' - ' )",
        "cin . get ( t ) ;"
      ],
      "err_line": 12,
      "err_msg": "invalid initialization of non-const reference of type ‘std::basic_istream<char>::char_type& {aka char&}’ from an rvalue of type ‘std::basic_istream<char>::char_type {aka char}’"
    },
    {
      "mod_line": [
        26,
        13
      ],
      "mod_code": [
        "cout << flat [ a ] ;",
        "map < string , int > :: iterator flat ;"
      ],
      "err_line": 21,
      "err_msg": "no match for ‘operator[]’ (operand types are ‘std::map<std::__cxx11::basic_string<char>, int>::iterator {aka std::_Rb_tree_iterator<std::pair<const std::__cxx11::basic_string<char>, int> >}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        26,
        13,
        12
      ],
      "mod_code": [
        "cout << flat [ a ] ;",
        "map < string , int > :: iterator flat ;",
        "cin . get ( t ) ;"
      ],
      "err_line": 12,
      "err_msg": "invalid initialization of non-const reference of type ‘std::basic_istream<char>::char_type& {aka char&}’ from an rvalue of type ‘std::basic_istream<char>::char_type {aka char}’"
    },
    {
      "mod_line": [
        26,
        12
      ],
      "mod_code": [
        "cout << flat [ a ] ;",
        "cin . get ( t ) ;"
      ],
      "err_line": 12,
      "err_msg": "invalid initialization of non-const reference of type ‘std::basic_istream<char>::char_type& {aka char&}’ from an rvalue of type ‘std::basic_istream<char>::char_type {aka char}’"
    },
    {
      "mod_line": [
        22,
        13
      ],
      "mod_code": [
        "else if ( l == ' - ' )",
        "map < string , int > :: iterator flat ;"
      ],
      "err_line": 21,
      "err_msg": "no match for ‘operator[]’ (operand types are ‘std::map<std::__cxx11::basic_string<char>, int>::iterator {aka std::_Rb_tree_iterator<std::pair<const std::__cxx11::basic_string<char>, int> >}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        22,
        13,
        12
      ],
      "mod_code": [
        "else if ( l == ' - ' )",
        "map < string , int > :: iterator flat ;",
        "cin . get ( t ) ;"
      ],
      "err_line": 12,
      "err_msg": "invalid initialization of non-const reference of type ‘std::basic_istream<char>::char_type& {aka char&}’ from an rvalue of type ‘std::basic_istream<char>::char_type {aka char}’"
    },
    {
      "mod_line": [
        22,
        12
      ],
      "mod_code": [
        "else if ( l == ' - ' )",
        "cin . get ( t ) ;"
      ],
      "err_line": 12,
      "err_msg": "invalid initialization of non-const reference of type ‘std::basic_istream<char>::char_type& {aka char&}’ from an rvalue of type ‘std::basic_istream<char>::char_type {aka char}’"
    },
    {
      "mod_line": [
        13,
        12
      ],
      "mod_code": [
        "map < string , int > :: iterator flat ;",
        "cin . get ( t ) ;"
      ],
      "err_line": 12,
      "err_msg": "invalid initialization of non-const reference of type ‘std::basic_istream<char>::char_type& {aka char&}’ from an rvalue of type ‘std::basic_istream<char>::char_type {aka char}’"
    }
  ]
}