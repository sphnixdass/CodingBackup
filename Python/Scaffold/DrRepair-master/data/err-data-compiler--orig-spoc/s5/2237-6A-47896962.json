{
  "meta": {
    "index": 2237,
    "hitid": "3P7QK0GJ3TF9908IALWIGFJ3Z6H2ZC",
    "workerid": "AIWEXPJAU66D9",
    "probid": "6A",
    "subid": "47896962"
  },
  "lines": [
    {
      "line": 0,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 1,
      "text": "let a = array of long long of size 4",
      "code": "long long a [ 4 ] ;",
      "indent": 1
    },
    {
      "line": 2,
      "text": "read a [ 0 ] , a [ 1 ] , a [ 2 ] and a [ 3 ]",
      "code": "cin >> a [ 0 ] >> a [ 1 ] >> a [ 2 ] >> a [ 3 ] ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "sort a",
      "code": "sort ( a , a + 4 ) ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "if a [ 0 ] + a [ 1 ] > a [ 2 ] or a [ 1 ] + a [ 2 ] is greater than a [ 3 ]",
      "code": "if ( a [ 0 ] + a [ 1 ] > a [ 2 ] || a [ 1 ] + a [ 2 ] > a [ 3 ] )",
      "indent": 1
    },
    {
      "line": 5,
      "text": "print \" TRIANGLE \" and a new line",
      "code": "cout << \" TRIANGLE \" << endl ;",
      "indent": 2
    },
    {
      "line": 6,
      "text": "else if a [ 0 ] + a [ 1 ] = a [ 2 ] or a [ 1 ] + a [ 2 ] = a [ 3 ]",
      "code": "else if ( a [ 0 ] + a [ 1 ] == a [ 2 ] || a [ 1 ] + a [ 2 ] == a [ 3 ] )",
      "indent": 1
    },
    {
      "line": 7,
      "text": "print \" SEGMENT \" and a new line",
      "code": "cout << \" SEGMENT \" << endl ;",
      "indent": 2
    },
    {
      "line": 8,
      "text": "else",
      "code": "else",
      "indent": 1
    },
    {
      "line": 9,
      "text": "print \" IMPOSSIBLE \" and a new line",
      "code": "cout << \" IMPOSSIBLE \" << endl ;",
      "indent": 2
    },
    {
      "line": 10,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        3
      ],
      "mod_code": [
        "sort ( a , a + n ) ;"
      ],
      "err_line": 3,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        6
      ],
      "mod_code": [
        "else if ( a [ 0 ] + a [ 1 ] == a [ 2 ] || a [ 1 ] + a [ 2 ] [ 2 ] == a [ 3 ] )"
      ],
      "err_line": 6,
      "err_msg": "invalid types ‘long long int[int]’ for array subscript"
    },
    {
      "mod_line": [
        3,
        2
      ],
      "mod_code": [
        "sort ( a , a + n ) ;",
        "cin >> a [ 0 ] >> a [ 1 ] >> a [ 3 ] >> a [ 3 ] ;"
      ],
      "err_line": 3,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        2,
        5
      ],
      "mod_code": [
        "sort ( a , a + n ) ;",
        "cin >> a [ 0 ] >> a [ 1 ] >> a [ 3 ] >> a [ 3 ] ;",
        "cout << \" yes\\n \" << endl ;"
      ],
      "err_line": 3,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        2,
        5,
        9
      ],
      "mod_code": [
        "sort ( a , a + n ) ;",
        "cin >> a [ 0 ] >> a [ 1 ] >> a [ 3 ] >> a [ 3 ] ;",
        "cout << \" yes\\n \" << endl ;",
        "cout << \" yes\\n \" << endl ;"
      ],
      "err_line": 3,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        2,
        5,
        6
      ],
      "mod_code": [
        "sort ( a , a + n ) ;",
        "cin >> a [ 0 ] >> a [ 1 ] >> a [ 3 ] >> a [ 3 ] ;",
        "cout << \" yes\\n \" << endl ;",
        "else if ( a [ 0 ] + a [ 1 ] == a [ 2 ] || a [ 1 ] + a [ 2 ] [ 2 ] == a [ 3 ] )"
      ],
      "err_line": 3,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        2,
        9
      ],
      "mod_code": [
        "sort ( a , a + n ) ;",
        "cin >> a [ 0 ] >> a [ 1 ] >> a [ 3 ] >> a [ 3 ] ;",
        "cout << \" yes\\n \" << endl ;"
      ],
      "err_line": 3,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        2,
        9,
        6
      ],
      "mod_code": [
        "sort ( a , a + n ) ;",
        "cin >> a [ 0 ] >> a [ 1 ] >> a [ 3 ] >> a [ 3 ] ;",
        "cout << \" yes\\n \" << endl ;",
        "else if ( a [ 0 ] + a [ 1 ] == a [ 2 ] || a [ 1 ] + a [ 2 ] [ 2 ] == a [ 3 ] )"
      ],
      "err_line": 3,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        2,
        6
      ],
      "mod_code": [
        "sort ( a , a + n ) ;",
        "cin >> a [ 0 ] >> a [ 1 ] >> a [ 3 ] >> a [ 3 ] ;",
        "else if ( a [ 0 ] + a [ 1 ] == a [ 2 ] || a [ 1 ] + a [ 2 ] [ 2 ] == a [ 3 ] )"
      ],
      "err_line": 3,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        5
      ],
      "mod_code": [
        "sort ( a , a + n ) ;",
        "cout << \" yes\\n \" << endl ;"
      ],
      "err_line": 3,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        5,
        9
      ],
      "mod_code": [
        "sort ( a , a + n ) ;",
        "cout << \" yes\\n \" << endl ;",
        "cout << \" yes\\n \" << endl ;"
      ],
      "err_line": 3,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        5,
        9,
        6
      ],
      "mod_code": [
        "sort ( a , a + n ) ;",
        "cout << \" yes\\n \" << endl ;",
        "cout << \" yes\\n \" << endl ;",
        "else if ( a [ 0 ] + a [ 1 ] == a [ 2 ] || a [ 1 ] + a [ 2 ] [ 2 ] == a [ 3 ] )"
      ],
      "err_line": 3,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        5,
        6
      ],
      "mod_code": [
        "sort ( a , a + n ) ;",
        "cout << \" yes\\n \" << endl ;",
        "else if ( a [ 0 ] + a [ 1 ] == a [ 2 ] || a [ 1 ] + a [ 2 ] [ 2 ] == a [ 3 ] )"
      ],
      "err_line": 3,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        9
      ],
      "mod_code": [
        "sort ( a , a + n ) ;",
        "cout << \" yes\\n \" << endl ;"
      ],
      "err_line": 3,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        9,
        6
      ],
      "mod_code": [
        "sort ( a , a + n ) ;",
        "cout << \" yes\\n \" << endl ;",
        "else if ( a [ 0 ] + a [ 1 ] == a [ 2 ] || a [ 1 ] + a [ 2 ] [ 2 ] == a [ 3 ] )"
      ],
      "err_line": 3,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        6
      ],
      "mod_code": [
        "sort ( a , a + n ) ;",
        "else if ( a [ 0 ] + a [ 1 ] == a [ 2 ] || a [ 1 ] + a [ 2 ] [ 2 ] == a [ 3 ] )"
      ],
      "err_line": 3,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        2,
        5,
        6
      ],
      "mod_code": [
        "sort ( a , a + 12 ) ;",
        "cin >> a [ 0 ] >> a [ 1 ] >> a [ 3 ] >> a [ 3 ] ;",
        "cout << \" yes\\n \" << endl ;",
        "else if ( a [ 0 ] + a [ 1 ] == a [ 2 ] || a [ 1 ] + a [ 2 ] [ 2 ] == a [ 3 ] )"
      ],
      "err_line": 6,
      "err_msg": "invalid types ‘long long int[int]’ for array subscript"
    },
    {
      "mod_line": [
        3,
        2,
        9,
        6
      ],
      "mod_code": [
        "sort ( a , a + 12 ) ;",
        "cin >> a [ 0 ] >> a [ 1 ] >> a [ 3 ] >> a [ 3 ] ;",
        "cout << \" yes\\n \" << endl ;",
        "else if ( a [ 0 ] + a [ 1 ] == a [ 2 ] || a [ 1 ] + a [ 2 ] [ 2 ] == a [ 3 ] )"
      ],
      "err_line": 6,
      "err_msg": "invalid types ‘long long int[int]’ for array subscript"
    },
    {
      "mod_line": [
        3,
        2,
        6
      ],
      "mod_code": [
        "sort ( a , a + 12 ) ;",
        "cin >> a [ 0 ] >> a [ 1 ] >> a [ 3 ] >> a [ 3 ] ;",
        "else if ( a [ 0 ] + a [ 1 ] == a [ 2 ] || a [ 1 ] + a [ 2 ] [ 2 ] == a [ 3 ] )"
      ],
      "err_line": 6,
      "err_msg": "invalid types ‘long long int[int]’ for array subscript"
    },
    {
      "mod_line": [
        3,
        5,
        9,
        6
      ],
      "mod_code": [
        "sort ( a , a + 12 ) ;",
        "cout << \" yes\\n \" << endl ;",
        "cout << \" yes\\n \" << endl ;",
        "else if ( a [ 0 ] + a [ 1 ] == a [ 2 ] || a [ 1 ] + a [ 2 ] [ 2 ] == a [ 3 ] )"
      ],
      "err_line": 6,
      "err_msg": "invalid types ‘long long int[int]’ for array subscript"
    },
    {
      "mod_line": [
        3,
        5,
        6
      ],
      "mod_code": [
        "sort ( a , a + 12 ) ;",
        "cout << \" yes\\n \" << endl ;",
        "else if ( a [ 0 ] + a [ 1 ] == a [ 2 ] || a [ 1 ] + a [ 2 ] [ 2 ] == a [ 3 ] )"
      ],
      "err_line": 6,
      "err_msg": "invalid types ‘long long int[int]’ for array subscript"
    },
    {
      "mod_line": [
        3,
        9,
        6
      ],
      "mod_code": [
        "sort ( a , a + 12 ) ;",
        "cout << \" yes\\n \" << endl ;",
        "else if ( a [ 0 ] + a [ 1 ] == a [ 2 ] || a [ 1 ] + a [ 2 ] [ 2 ] == a [ 3 ] )"
      ],
      "err_line": 6,
      "err_msg": "invalid types ‘long long int[int]’ for array subscript"
    },
    {
      "mod_line": [
        3,
        6
      ],
      "mod_code": [
        "sort ( a , a + 12 ) ;",
        "else if ( a [ 0 ] + a [ 1 ] == a [ 2 ] || a [ 1 ] + a [ 2 ] [ 2 ] == a [ 3 ] )"
      ],
      "err_line": 6,
      "err_msg": "invalid types ‘long long int[int]’ for array subscript"
    },
    {
      "mod_line": [
        2,
        5,
        9,
        6
      ],
      "mod_code": [
        "cin >> a [ 0 ] >> a [ 1 ] >> a [ 3 ] >> a [ 3 ] ;",
        "cout << \" yes\\n \" << endl ;",
        "cout << \" yes\\n \" << endl ;",
        "else if ( a [ 0 ] + a [ 1 ] == a [ 2 ] || a [ 1 ] + a [ 2 ] [ 2 ] == a [ 3 ] )"
      ],
      "err_line": 6,
      "err_msg": "invalid types ‘long long int[int]’ for array subscript"
    },
    {
      "mod_line": [
        2,
        5,
        6
      ],
      "mod_code": [
        "cin >> a [ 0 ] >> a [ 1 ] >> a [ 3 ] >> a [ 3 ] ;",
        "cout << \" yes\\n \" << endl ;",
        "else if ( a [ 0 ] + a [ 1 ] == a [ 2 ] || a [ 1 ] + a [ 2 ] [ 2 ] == a [ 3 ] )"
      ],
      "err_line": 6,
      "err_msg": "invalid types ‘long long int[int]’ for array subscript"
    },
    {
      "mod_line": [
        2,
        9,
        6
      ],
      "mod_code": [
        "cin >> a [ 0 ] >> a [ 1 ] >> a [ 3 ] >> a [ 3 ] ;",
        "cout << \" yes\\n \" << endl ;",
        "else if ( a [ 0 ] + a [ 1 ] == a [ 2 ] || a [ 1 ] + a [ 2 ] [ 2 ] == a [ 3 ] )"
      ],
      "err_line": 6,
      "err_msg": "invalid types ‘long long int[int]’ for array subscript"
    },
    {
      "mod_line": [
        2,
        6
      ],
      "mod_code": [
        "cin >> a [ 0 ] >> a [ 1 ] >> a [ 3 ] >> a [ 3 ] ;",
        "else if ( a [ 0 ] + a [ 1 ] == a [ 2 ] || a [ 1 ] + a [ 2 ] [ 2 ] == a [ 3 ] )"
      ],
      "err_line": 6,
      "err_msg": "invalid types ‘long long int[int]’ for array subscript"
    },
    {
      "mod_line": [
        5,
        9,
        6
      ],
      "mod_code": [
        "cout << \" yes\\n \" << endl ;",
        "cout << \" yes\\n \" << endl ;",
        "else if ( a [ 0 ] + a [ 1 ] == a [ 2 ] || a [ 1 ] + a [ 2 ] [ 2 ] == a [ 3 ] )"
      ],
      "err_line": 6,
      "err_msg": "invalid types ‘long long int[int]’ for array subscript"
    },
    {
      "mod_line": [
        5,
        6
      ],
      "mod_code": [
        "cout << \" yes\\n \" << endl ;",
        "else if ( a [ 0 ] + a [ 1 ] == a [ 2 ] || a [ 1 ] + a [ 2 ] [ 2 ] == a [ 3 ] )"
      ],
      "err_line": 6,
      "err_msg": "invalid types ‘long long int[int]’ for array subscript"
    },
    {
      "mod_line": [
        9,
        6
      ],
      "mod_code": [
        "cout << \" yes\\n \" << endl ;",
        "else if ( a [ 0 ] + a [ 1 ] == a [ 2 ] || a [ 1 ] + a [ 2 ] [ 2 ] == a [ 3 ] )"
      ],
      "err_line": 6,
      "err_msg": "invalid types ‘long long int[int]’ for array subscript"
    }
  ]
}