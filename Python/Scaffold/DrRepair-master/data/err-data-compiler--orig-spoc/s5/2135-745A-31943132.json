{
  "meta": {
    "index": 2135,
    "hitid": "3HJ1EVZS2ODPSRIA44GADMMWWIGR3V",
    "workerid": "AIWEXPJAU66D9",
    "probid": "745A",
    "subid": "31943132"
  },
  "lines": [
    {
      "line": 0,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 1,
      "text": "declare integer variable num = 0",
      "code": "int num = 0 ;",
      "indent": 1
    },
    {
      "line": 2,
      "text": "create string s",
      "code": "string s ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "read s",
      "code": "cin >> s ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "create integer n = length of s",
      "code": "int n = s . size ( ) ;",
      "indent": 1
    },
    {
      "line": 5,
      "text": "set value of s to s + s",
      "code": "s = s + s ;",
      "indent": 1
    },
    {
      "line": 6,
      "text": "for integer i = 0 to n - 1 exclusive",
      "code": "for ( int i = 0 ; i < n - 1 ; i ++ )",
      "indent": 1
    },
    {
      "line": 7,
      "text": "create boolean flag = true",
      "code": "bool flag = true ;",
      "indent": 2
    },
    {
      "line": 8,
      "text": "for integer j = i + 1 to n exclusive",
      "code": "for ( int j = i + 1 ; j < n ; j ++ )",
      "indent": 2
    },
    {
      "line": 9,
      "text": "if s . compare ( i , n , s , j , n ) = 0",
      "code": "if ( s . compare ( i , n , s , j , n ) == 0 )",
      "indent": 3
    },
    {
      "line": 10,
      "text": "flag = false",
      "code": "flag = false ;",
      "indent": 4
    },
    {
      "line": 11,
      "text": "break the loop",
      "code": "break ;",
      "indent": 4
    },
    {
      "line": 12,
      "text": "DUMMY",
      "code": "}",
      "indent": 3
    },
    {
      "line": 13,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 14,
      "text": "if flag is true , increment num",
      "code": "if ( flag ) num ++ ;",
      "indent": 2
    },
    {
      "line": 15,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 16,
      "text": "print num + 1",
      "code": "cout << num + 1 << endl ;",
      "indent": 1
    },
    {
      "line": 17,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 18,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        9
      ],
      "mod_code": [
        "if ( s . compare ( i , n , s , j ) == 0 )"
      ],
      "err_line": 9,
      "err_msg": "no matching function for call to ‘std::__cxx11::basic_string<char>::compare(int&, int&, std::__cxx11::string&, int&)’"
    },
    {
      "mod_line": [
        2
      ],
      "mod_code": [
        "string n ;"
      ],
      "err_line": 3,
      "err_msg": "‘s’ was not declared in this scope"
    },
    {
      "mod_line": [
        5
      ],
      "mod_code": [
        "* s = s + s ;"
      ],
      "err_line": 5,
      "err_msg": "no match for ‘operator*’ (operand type is ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        11
      ],
      "mod_code": [
        "break the ;"
      ],
      "err_line": 11,
      "err_msg": "expected ‘;’ before ‘the’"
    },
    {
      "mod_line": [
        9,
        10
      ],
      "mod_code": [
        "if ( s . compare ( i , n , s , j ) == 0 )",
        "bool flag = false ;"
      ],
      "err_line": 9,
      "err_msg": "no matching function for call to ‘std::__cxx11::basic_string<char>::compare(int&, int&, std::__cxx11::string&, int&)’"
    },
    {
      "mod_line": [
        9,
        10,
        11
      ],
      "mod_code": [
        "if ( s . compare ( i , n , s , j ) == 0 )",
        "bool flag = false ;",
        "break the ;"
      ],
      "err_line": 9,
      "err_msg": "no matching function for call to ‘std::__cxx11::basic_string<char>::compare(int&, int&, std::__cxx11::string&, int&)’"
    },
    {
      "mod_line": [
        9,
        10,
        11,
        2
      ],
      "mod_code": [
        "if ( s . compare ( i , n , s , j ) == 0 )",
        "bool flag = false ;",
        "break the ;",
        "string n ;"
      ],
      "err_line": 3,
      "err_msg": "‘s’ was not declared in this scope"
    },
    {
      "mod_line": [
        9,
        10,
        11,
        5
      ],
      "mod_code": [
        "if ( s . compare ( i , n , s , j ) == 0 )",
        "bool flag = false ;",
        "break the ;",
        "* s = s + s ;"
      ],
      "err_line": 5,
      "err_msg": "no match for ‘operator*’ (operand type is ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        9,
        10,
        2
      ],
      "mod_code": [
        "if ( s . compare ( i , n , s , j ) == 0 )",
        "bool flag = false ;",
        "string n ;"
      ],
      "err_line": 3,
      "err_msg": "‘s’ was not declared in this scope"
    },
    {
      "mod_line": [
        9,
        10,
        2,
        5
      ],
      "mod_code": [
        "if ( s . compare ( i , n , s , j ) == 0 )",
        "bool flag = false ;",
        "string n ;",
        "* s = s + s ;"
      ],
      "err_line": 3,
      "err_msg": "‘s’ was not declared in this scope"
    },
    {
      "mod_line": [
        9,
        10,
        5
      ],
      "mod_code": [
        "if ( s . compare ( i , n , s , j ) == 0 )",
        "bool flag = false ;",
        "* s = s + s ;"
      ],
      "err_line": 5,
      "err_msg": "no match for ‘operator*’ (operand type is ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        9,
        11
      ],
      "mod_code": [
        "if ( s . compare ( i , n , s , j ) == 0 )",
        "break the ;"
      ],
      "err_line": 9,
      "err_msg": "no matching function for call to ‘std::__cxx11::basic_string<char>::compare(int&, int&, std::__cxx11::string&, int&)’"
    },
    {
      "mod_line": [
        9,
        11,
        2
      ],
      "mod_code": [
        "if ( s . compare ( i , n , s , j ) == 0 )",
        "break the ;",
        "string n ;"
      ],
      "err_line": 3,
      "err_msg": "‘s’ was not declared in this scope"
    },
    {
      "mod_line": [
        9,
        11,
        2,
        5
      ],
      "mod_code": [
        "if ( s . compare ( i , n , s , j ) == 0 )",
        "break the ;",
        "string n ;",
        "* s = s + s ;"
      ],
      "err_line": 3,
      "err_msg": "‘s’ was not declared in this scope"
    },
    {
      "mod_line": [
        9,
        11,
        5
      ],
      "mod_code": [
        "if ( s . compare ( i , n , s , j ) == 0 )",
        "break the ;",
        "* s = s + s ;"
      ],
      "err_line": 5,
      "err_msg": "no match for ‘operator*’ (operand type is ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        9,
        2
      ],
      "mod_code": [
        "if ( s . compare ( i , n , s , j ) == 0 )",
        "string n ;"
      ],
      "err_line": 3,
      "err_msg": "‘s’ was not declared in this scope"
    },
    {
      "mod_line": [
        9,
        2,
        5
      ],
      "mod_code": [
        "if ( s . compare ( i , n , s , j ) == 0 )",
        "string n ;",
        "* s = s + s ;"
      ],
      "err_line": 3,
      "err_msg": "‘s’ was not declared in this scope"
    },
    {
      "mod_line": [
        9,
        5
      ],
      "mod_code": [
        "if ( s . compare ( i , n , s , j ) == 0 )",
        "* s = s + s ;"
      ],
      "err_line": 5,
      "err_msg": "no match for ‘operator*’ (operand type is ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        10,
        9,
        11
      ],
      "mod_code": [
        "bool flag = false ;",
        "if ( s . compare ( i , n , s , j , n ) )",
        "break the ;"
      ],
      "err_line": 11,
      "err_msg": "expected ‘;’ before ‘the’"
    },
    {
      "mod_line": [
        10,
        9,
        11,
        2
      ],
      "mod_code": [
        "bool flag = false ;",
        "if ( s . compare ( i , n , s , j , n ) )",
        "break the ;",
        "string n ;"
      ],
      "err_line": 3,
      "err_msg": "‘s’ was not declared in this scope"
    },
    {
      "mod_line": [
        10,
        9,
        11,
        5
      ],
      "mod_code": [
        "bool flag = false ;",
        "if ( s . compare ( i , n , s , j , n ) )",
        "break the ;",
        "* s = s + s ;"
      ],
      "err_line": 5,
      "err_msg": "no match for ‘operator*’ (operand type is ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        10,
        9,
        2
      ],
      "mod_code": [
        "bool flag = false ;",
        "if ( s . compare ( i , n , s , j , n ) )",
        "string n ;"
      ],
      "err_line": 3,
      "err_msg": "‘s’ was not declared in this scope"
    },
    {
      "mod_line": [
        10,
        9,
        2,
        5
      ],
      "mod_code": [
        "bool flag = false ;",
        "if ( s . compare ( i , n , s , j , n ) )",
        "string n ;",
        "* s = s + s ;"
      ],
      "err_line": 3,
      "err_msg": "‘s’ was not declared in this scope"
    },
    {
      "mod_line": [
        10,
        9,
        5
      ],
      "mod_code": [
        "bool flag = false ;",
        "if ( s . compare ( i , n , s , j , n ) )",
        "* s = s + s ;"
      ],
      "err_line": 5,
      "err_msg": "no match for ‘operator*’ (operand type is ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        10,
        11
      ],
      "mod_code": [
        "bool flag = false ;",
        "break the ;"
      ],
      "err_line": 11,
      "err_msg": "expected ‘;’ before ‘the’"
    },
    {
      "mod_line": [
        10,
        11,
        2
      ],
      "mod_code": [
        "bool flag = false ;",
        "break the ;",
        "string n ;"
      ],
      "err_line": 3,
      "err_msg": "‘s’ was not declared in this scope"
    },
    {
      "mod_line": [
        10,
        11,
        2,
        5
      ],
      "mod_code": [
        "bool flag = false ;",
        "break the ;",
        "string n ;",
        "* s = s + s ;"
      ],
      "err_line": 3,
      "err_msg": "‘s’ was not declared in this scope"
    },
    {
      "mod_line": [
        10,
        11,
        5
      ],
      "mod_code": [
        "bool flag = false ;",
        "break the ;",
        "* s = s + s ;"
      ],
      "err_line": 5,
      "err_msg": "no match for ‘operator*’ (operand type is ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        10,
        2
      ],
      "mod_code": [
        "bool flag = false ;",
        "string n ;"
      ],
      "err_line": 3,
      "err_msg": "‘s’ was not declared in this scope"
    },
    {
      "mod_line": [
        10,
        2,
        5
      ],
      "mod_code": [
        "bool flag = false ;",
        "string n ;",
        "* s = s + s ;"
      ],
      "err_line": 3,
      "err_msg": "‘s’ was not declared in this scope"
    },
    {
      "mod_line": [
        10,
        5
      ],
      "mod_code": [
        "bool flag = false ;",
        "* s = s + s ;"
      ],
      "err_line": 5,
      "err_msg": "no match for ‘operator*’ (operand type is ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        9,
        11
      ],
      "mod_code": [
        "if ( s . compare ( i , n , s , j , n ) )",
        "break the ;"
      ],
      "err_line": 11,
      "err_msg": "expected ‘;’ before ‘the’"
    },
    {
      "mod_line": [
        9,
        11,
        2
      ],
      "mod_code": [
        "if ( s . compare ( i , n , s , j , n ) )",
        "break the ;",
        "string n ;"
      ],
      "err_line": 3,
      "err_msg": "‘s’ was not declared in this scope"
    },
    {
      "mod_line": [
        9,
        11,
        2,
        5
      ],
      "mod_code": [
        "if ( s . compare ( i , n , s , j , n ) )",
        "break the ;",
        "string n ;",
        "* s = s + s ;"
      ],
      "err_line": 3,
      "err_msg": "‘s’ was not declared in this scope"
    },
    {
      "mod_line": [
        9,
        11,
        5
      ],
      "mod_code": [
        "if ( s . compare ( i , n , s , j , n ) )",
        "break the ;",
        "* s = s + s ;"
      ],
      "err_line": 5,
      "err_msg": "no match for ‘operator*’ (operand type is ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        9,
        2
      ],
      "mod_code": [
        "if ( s . compare ( i , n , s , j , n ) )",
        "string n ;"
      ],
      "err_line": 3,
      "err_msg": "‘s’ was not declared in this scope"
    },
    {
      "mod_line": [
        9,
        2,
        5
      ],
      "mod_code": [
        "if ( s . compare ( i , n , s , j , n ) )",
        "string n ;",
        "* s = s + s ;"
      ],
      "err_line": 3,
      "err_msg": "‘s’ was not declared in this scope"
    },
    {
      "mod_line": [
        9,
        5
      ],
      "mod_code": [
        "if ( s . compare ( i , n , s , j , n ) )",
        "* s = s + s ;"
      ],
      "err_line": 5,
      "err_msg": "no match for ‘operator*’ (operand type is ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        11,
        2
      ],
      "mod_code": [
        "break the ;",
        "string n ;"
      ],
      "err_line": 3,
      "err_msg": "‘s’ was not declared in this scope"
    },
    {
      "mod_line": [
        11,
        2,
        5
      ],
      "mod_code": [
        "break the ;",
        "string n ;",
        "* s = s + s ;"
      ],
      "err_line": 3,
      "err_msg": "‘s’ was not declared in this scope"
    },
    {
      "mod_line": [
        11,
        5
      ],
      "mod_code": [
        "break the ;",
        "* s = s + s ;"
      ],
      "err_line": 5,
      "err_msg": "no match for ‘operator*’ (operand type is ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        2,
        5
      ],
      "mod_code": [
        "string n ;",
        "* s = s + s ;"
      ],
      "err_line": 3,
      "err_msg": "‘s’ was not declared in this scope"
    }
  ]
}