{
  "meta": {
    "index": 1712,
    "hitid": "3WRKFXQBOB1DFVCF32FRPOHIJASYIF",
    "workerid": "A1AYVATMT88U1W",
    "probid": "975A",
    "subid": "47503804"
  },
  "lines": [
    {
      "line": 0,
      "text": "let n be integer",
      "code": "int n ;",
      "indent": 0
    },
    {
      "line": 1,
      "text": "let st be a set of string",
      "code": "set < string > st ;",
      "indent": 0
    },
    {
      "line": 2,
      "text": "f is a function which return and accepts string",
      "code": "string f ( string s )",
      "indent": 0
    },
    {
      "line": 3,
      "text": "sort s from begin to end",
      "code": "sort ( s . begin ( ) , s . end ( ) ) ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "resize unique ( s . begin ( ) , s . end ( ) ) - s . begin ( )",
      "code": "s . resize ( unique ( s . begin ( ) , s . end ( ) ) - s . begin ( ) ) ;",
      "indent": 1
    },
    {
      "line": 5,
      "text": "return s",
      "code": "return s ;",
      "indent": 1
    },
    {
      "line": 6,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    },
    {
      "line": 7,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 8,
      "text": "read n",
      "code": "cin >> n ;",
      "indent": 1
    },
    {
      "line": 9,
      "text": "let s be a string",
      "code": "string s ;",
      "indent": 1
    },
    {
      "line": 10,
      "text": "for integer i = 0 to n exclusive , read s and insert f ( s ) in st",
      "code": "for ( int i = 0 ; i < n ; i ++ ) cin >> s , st . insert ( f ( s ) ) ;",
      "indent": 1
    },
    {
      "line": 11,
      "text": "print st . size ( ) and newline",
      "code": "cout << st . size ( ) << endl ;",
      "indent": 1
    },
    {
      "line": 12,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        2
      ],
      "mod_code": [
        "return f ( string s )"
      ],
      "err_line": 2,
      "err_msg": "expected unqualified-id before ‘return’"
    },
    {
      "mod_line": [
        4
      ],
      "mod_code": [
        "unique ( unique ( s . begin ( ) , s . end ( ) ) ) - s . begin ( ) ) ;"
      ],
      "err_line": 4,
      "err_msg": "no matching function for call to ‘unique(__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> >)’"
    },
    {
      "mod_line": [
        10
      ],
      "mod_code": [
        "for ( int i = 0 ; i < n ; i ++ ) { cin >> s , insert ( s ) ; }"
      ],
      "err_line": 10,
      "err_msg": "‘insert’ was not declared in this scope"
    },
    {
      "mod_line": [
        1
      ],
      "mod_code": [
        "set < string let ;"
      ],
      "err_line": 1,
      "err_msg": "template argument 1 is invalid"
    },
    {
      "mod_line": [
        2
      ],
      "mod_code": [
        "return f ( string n )"
      ],
      "err_line": 2,
      "err_msg": "expected unqualified-id before ‘return’"
    },
    {
      "mod_line": [
        3
      ],
      "mod_code": [
        "sort ( s , s . end ( ) ) ;"
      ],
      "err_line": 3,
      "err_msg": "no matching function for call to ‘sort(std::__cxx11::string&, std::__cxx11::basic_string<char>::iterator)’"
    },
    {
      "mod_line": [
        4
      ],
      "mod_code": [
        "resize . resize ( s . begin ( ) , s . end ( ) ) - s . begin ( ) ) ;"
      ],
      "err_line": 4,
      "err_msg": "‘resize’ was not declared in this scope"
    },
    {
      "mod_line": [
        8
      ],
      "mod_code": [
        "while ( cin >> n )"
      ],
      "err_line": 10,
      "err_msg": "‘s’ was not declared in this scope"
    },
    {
      "mod_line": [
        9
      ],
      "mod_code": [
        "char s ;"
      ],
      "err_line": 10,
      "err_msg": "could not convert ‘s’ from ‘char’ to ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’"
    },
    {
      "mod_line": [
        2,
        4
      ],
      "mod_code": [
        "return f ( string s )",
        "unique ( unique ( s . begin ( ) , s . end ( ) ) ) - s . begin ( ) ) ;"
      ],
      "err_line": 2,
      "err_msg": "expected unqualified-id before ‘return’"
    },
    {
      "mod_line": [
        2,
        4,
        10
      ],
      "mod_code": [
        "return f ( string s )",
        "unique ( unique ( s . begin ( ) , s . end ( ) ) ) - s . begin ( ) ) ;",
        "for ( int i = 0 ; i < n ; i ++ ) { cin >> s , insert ( s ) ; }"
      ],
      "err_line": 2,
      "err_msg": "expected unqualified-id before ‘return’"
    },
    {
      "mod_line": [
        2,
        4,
        10,
        9
      ],
      "mod_code": [
        "return f ( string s )",
        "unique ( unique ( s . begin ( ) , s . end ( ) ) ) - s . begin ( ) ) ;",
        "for ( int i = 0 ; i < n ; i ++ ) { cin >> s , insert ( s ) ; }",
        "char s ;"
      ],
      "err_line": 2,
      "err_msg": "expected unqualified-id before ‘return’"
    },
    {
      "mod_line": [
        2,
        4,
        10,
        8
      ],
      "mod_code": [
        "return f ( string s )",
        "unique ( unique ( s . begin ( ) , s . end ( ) ) ) - s . begin ( ) ) ;",
        "for ( int i = 0 ; i < n ; i ++ ) { cin >> s , insert ( s ) ; }",
        "while ( cin >> n )"
      ],
      "err_line": 2,
      "err_msg": "expected unqualified-id before ‘return’"
    },
    {
      "mod_line": [
        2,
        4,
        9
      ],
      "mod_code": [
        "return f ( string s )",
        "unique ( unique ( s . begin ( ) , s . end ( ) ) ) - s . begin ( ) ) ;",
        "char s ;"
      ],
      "err_line": 2,
      "err_msg": "expected unqualified-id before ‘return’"
    },
    {
      "mod_line": [
        2,
        4,
        9,
        8
      ],
      "mod_code": [
        "return f ( string s )",
        "unique ( unique ( s . begin ( ) , s . end ( ) ) ) - s . begin ( ) ) ;",
        "char s ;",
        "while ( cin >> n )"
      ],
      "err_line": 2,
      "err_msg": "expected unqualified-id before ‘return’"
    },
    {
      "mod_line": [
        2,
        4,
        8
      ],
      "mod_code": [
        "return f ( string s )",
        "unique ( unique ( s . begin ( ) , s . end ( ) ) ) - s . begin ( ) ) ;",
        "while ( cin >> n )"
      ],
      "err_line": 2,
      "err_msg": "expected unqualified-id before ‘return’"
    },
    {
      "mod_line": [
        2,
        10
      ],
      "mod_code": [
        "return f ( string s )",
        "for ( int i = 0 ; i < n ; i ++ ) { cin >> s , insert ( s ) ; }"
      ],
      "err_line": 2,
      "err_msg": "expected unqualified-id before ‘return’"
    },
    {
      "mod_line": [
        2,
        10,
        9
      ],
      "mod_code": [
        "return f ( string s )",
        "for ( int i = 0 ; i < n ; i ++ ) { cin >> s , insert ( s ) ; }",
        "char s ;"
      ],
      "err_line": 2,
      "err_msg": "expected unqualified-id before ‘return’"
    },
    {
      "mod_line": [
        2,
        10,
        9,
        8
      ],
      "mod_code": [
        "return f ( string s )",
        "for ( int i = 0 ; i < n ; i ++ ) { cin >> s , insert ( s ) ; }",
        "char s ;",
        "while ( cin >> n )"
      ],
      "err_line": 2,
      "err_msg": "expected unqualified-id before ‘return’"
    },
    {
      "mod_line": [
        2,
        10,
        8
      ],
      "mod_code": [
        "return f ( string s )",
        "for ( int i = 0 ; i < n ; i ++ ) { cin >> s , insert ( s ) ; }",
        "while ( cin >> n )"
      ],
      "err_line": 2,
      "err_msg": "expected unqualified-id before ‘return’"
    },
    {
      "mod_line": [
        2,
        9
      ],
      "mod_code": [
        "return f ( string s )",
        "char s ;"
      ],
      "err_line": 2,
      "err_msg": "expected unqualified-id before ‘return’"
    },
    {
      "mod_line": [
        2,
        9,
        8
      ],
      "mod_code": [
        "return f ( string s )",
        "char s ;",
        "while ( cin >> n )"
      ],
      "err_line": 2,
      "err_msg": "expected unqualified-id before ‘return’"
    },
    {
      "mod_line": [
        2,
        8
      ],
      "mod_code": [
        "return f ( string s )",
        "while ( cin >> n )"
      ],
      "err_line": 2,
      "err_msg": "expected unqualified-id before ‘return’"
    },
    {
      "mod_line": [
        4,
        10
      ],
      "mod_code": [
        "unique ( unique ( s . begin ( ) , s . end ( ) ) ) - s . begin ( ) ) ;",
        "for ( int i = 0 ; i < n ; i ++ ) { cin >> s , insert ( s ) ; }"
      ],
      "err_line": 4,
      "err_msg": "no matching function for call to ‘unique(__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> >)’"
    },
    {
      "mod_line": [
        4,
        10,
        9
      ],
      "mod_code": [
        "unique ( unique ( s . begin ( ) , s . end ( ) ) ) - s . begin ( ) ) ;",
        "for ( int i = 0 ; i < n ; i ++ ) { cin >> s , insert ( s ) ; }",
        "char s ;"
      ],
      "err_line": 4,
      "err_msg": "no matching function for call to ‘unique(__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> >)’"
    },
    {
      "mod_line": [
        4,
        10,
        9,
        8
      ],
      "mod_code": [
        "unique ( unique ( s . begin ( ) , s . end ( ) ) ) - s . begin ( ) ) ;",
        "for ( int i = 0 ; i < n ; i ++ ) { cin >> s , insert ( s ) ; }",
        "char s ;",
        "while ( cin >> n )"
      ],
      "err_line": 4,
      "err_msg": "no matching function for call to ‘unique(__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> >)’"
    },
    {
      "mod_line": [
        4,
        10,
        9,
        2
      ],
      "mod_code": [
        "unique ( unique ( s . begin ( ) , s . end ( ) ) ) - s . begin ( ) ) ;",
        "for ( int i = 0 ; i < n ; i ++ ) { cin >> s , insert ( s ) ; }",
        "char s ;",
        "return f ( string n )"
      ],
      "err_line": 2,
      "err_msg": "expected unqualified-id before ‘return’"
    },
    {
      "mod_line": [
        4,
        10,
        8
      ],
      "mod_code": [
        "unique ( unique ( s . begin ( ) , s . end ( ) ) ) - s . begin ( ) ) ;",
        "for ( int i = 0 ; i < n ; i ++ ) { cin >> s , insert ( s ) ; }",
        "while ( cin >> n )"
      ],
      "err_line": 4,
      "err_msg": "no matching function for call to ‘unique(__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> >)’"
    },
    {
      "mod_line": [
        4,
        10,
        8,
        2
      ],
      "mod_code": [
        "unique ( unique ( s . begin ( ) , s . end ( ) ) ) - s . begin ( ) ) ;",
        "for ( int i = 0 ; i < n ; i ++ ) { cin >> s , insert ( s ) ; }",
        "while ( cin >> n )",
        "return f ( string n )"
      ],
      "err_line": 2,
      "err_msg": "expected unqualified-id before ‘return’"
    },
    {
      "mod_line": [
        4,
        10,
        2
      ],
      "mod_code": [
        "unique ( unique ( s . begin ( ) , s . end ( ) ) ) - s . begin ( ) ) ;",
        "for ( int i = 0 ; i < n ; i ++ ) { cin >> s , insert ( s ) ; }",
        "return f ( string n )"
      ],
      "err_line": 2,
      "err_msg": "expected unqualified-id before ‘return’"
    },
    {
      "mod_line": [
        4,
        9
      ],
      "mod_code": [
        "unique ( unique ( s . begin ( ) , s . end ( ) ) ) - s . begin ( ) ) ;",
        "char s ;"
      ],
      "err_line": 4,
      "err_msg": "no matching function for call to ‘unique(__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> >)’"
    },
    {
      "mod_line": [
        4,
        9,
        8
      ],
      "mod_code": [
        "unique ( unique ( s . begin ( ) , s . end ( ) ) ) - s . begin ( ) ) ;",
        "char s ;",
        "while ( cin >> n )"
      ],
      "err_line": 4,
      "err_msg": "no matching function for call to ‘unique(__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> >)’"
    },
    {
      "mod_line": [
        4,
        9,
        8,
        2
      ],
      "mod_code": [
        "unique ( unique ( s . begin ( ) , s . end ( ) ) ) - s . begin ( ) ) ;",
        "char s ;",
        "while ( cin >> n )",
        "return f ( string n )"
      ],
      "err_line": 2,
      "err_msg": "expected unqualified-id before ‘return’"
    },
    {
      "mod_line": [
        4,
        9,
        2
      ],
      "mod_code": [
        "unique ( unique ( s . begin ( ) , s . end ( ) ) ) - s . begin ( ) ) ;",
        "char s ;",
        "return f ( string n )"
      ],
      "err_line": 2,
      "err_msg": "expected unqualified-id before ‘return’"
    },
    {
      "mod_line": [
        4,
        8
      ],
      "mod_code": [
        "unique ( unique ( s . begin ( ) , s . end ( ) ) ) - s . begin ( ) ) ;",
        "while ( cin >> n )"
      ],
      "err_line": 4,
      "err_msg": "no matching function for call to ‘unique(__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> >)’"
    },
    {
      "mod_line": [
        4,
        8,
        2
      ],
      "mod_code": [
        "unique ( unique ( s . begin ( ) , s . end ( ) ) ) - s . begin ( ) ) ;",
        "while ( cin >> n )",
        "return f ( string n )"
      ],
      "err_line": 2,
      "err_msg": "expected unqualified-id before ‘return’"
    },
    {
      "mod_line": [
        4,
        2
      ],
      "mod_code": [
        "unique ( unique ( s . begin ( ) , s . end ( ) ) ) - s . begin ( ) ) ;",
        "return f ( string n )"
      ],
      "err_line": 2,
      "err_msg": "expected unqualified-id before ‘return’"
    },
    {
      "mod_line": [
        10,
        9
      ],
      "mod_code": [
        "for ( int i = 0 ; i < n ; i ++ ) { cin >> s , insert ( s ) ; }",
        "char s ;"
      ],
      "err_line": 10,
      "err_msg": "‘insert’ was not declared in this scope"
    },
    {
      "mod_line": [
        10,
        9,
        8
      ],
      "mod_code": [
        "for ( int i = 0 ; i < n ; i ++ ) { cin >> s , insert ( s ) ; }",
        "char s ;",
        "while ( cin >> n )"
      ],
      "err_line": 10,
      "err_msg": "‘s’ was not declared in this scope"
    },
    {
      "mod_line": [
        10,
        9,
        8,
        2
      ],
      "mod_code": [
        "for ( int i = 0 ; i < n ; i ++ ) { cin >> s , insert ( s ) ; }",
        "char s ;",
        "while ( cin >> n )",
        "return f ( string n )"
      ],
      "err_line": 2,
      "err_msg": "expected unqualified-id before ‘return’"
    },
    {
      "mod_line": [
        10,
        9,
        2
      ],
      "mod_code": [
        "for ( int i = 0 ; i < n ; i ++ ) { cin >> s , insert ( s ) ; }",
        "char s ;",
        "return f ( string n )"
      ],
      "err_line": 2,
      "err_msg": "expected unqualified-id before ‘return’"
    },
    {
      "mod_line": [
        10,
        8
      ],
      "mod_code": [
        "for ( int i = 0 ; i < n ; i ++ ) { cin >> s , insert ( s ) ; }",
        "while ( cin >> n )"
      ],
      "err_line": 10,
      "err_msg": "‘s’ was not declared in this scope"
    },
    {
      "mod_line": [
        10,
        8,
        2
      ],
      "mod_code": [
        "for ( int i = 0 ; i < n ; i ++ ) { cin >> s , insert ( s ) ; }",
        "while ( cin >> n )",
        "return f ( string n )"
      ],
      "err_line": 2,
      "err_msg": "expected unqualified-id before ‘return’"
    },
    {
      "mod_line": [
        10,
        2
      ],
      "mod_code": [
        "for ( int i = 0 ; i < n ; i ++ ) { cin >> s , insert ( s ) ; }",
        "return f ( string n )"
      ],
      "err_line": 2,
      "err_msg": "expected unqualified-id before ‘return’"
    },
    {
      "mod_line": [
        9,
        8
      ],
      "mod_code": [
        "char s ;",
        "while ( cin >> n )"
      ],
      "err_line": 10,
      "err_msg": "‘s’ was not declared in this scope"
    },
    {
      "mod_line": [
        9,
        8,
        2
      ],
      "mod_code": [
        "char s ;",
        "while ( cin >> n )",
        "return f ( string n )"
      ],
      "err_line": 2,
      "err_msg": "expected unqualified-id before ‘return’"
    },
    {
      "mod_line": [
        9,
        2
      ],
      "mod_code": [
        "char s ;",
        "return f ( string n )"
      ],
      "err_line": 2,
      "err_msg": "expected unqualified-id before ‘return’"
    },
    {
      "mod_line": [
        8,
        2
      ],
      "mod_code": [
        "while ( cin >> n )",
        "return f ( string n )"
      ],
      "err_line": 2,
      "err_msg": "expected unqualified-id before ‘return’"
    }
  ]
}