{
  "meta": {
    "index": 2437,
    "hitid": "37AQKJ12TXI77NTWN8RWVERCFPGTTS",
    "workerid": "A1AYVATMT88U1W",
    "probid": "479A",
    "subid": "48933622"
  },
  "lines": [
    {
      "line": 0,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 1,
      "text": "let a , b , c , p be integers with p = array of integers of length 6",
      "code": "int a , b , c , p [ 6 ] ;",
      "indent": 1
    },
    {
      "line": 2,
      "text": "read a , b , c",
      "code": "cin >> a >> b >> c ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "the 0th element of p is equal to a + b + c",
      "code": "p [ 0 ] = a + b + c ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "the 1st element of p is equal to a * ( b + c )",
      "code": "p [ 1 ] = a * ( b + c ) ;",
      "indent": 1
    },
    {
      "line": 5,
      "text": "the 2nd element of p is equal to a * b * c",
      "code": "p [ 2 ] = a * b * c ;",
      "indent": 1
    },
    {
      "line": 6,
      "text": "the 3rd element of p is equal to a + b * c",
      "code": "p [ 3 ] = a + b * c ;",
      "indent": 1
    },
    {
      "line": 7,
      "text": "the 4th element of p is equal to a * b + c",
      "code": "p [ 4 ] = a * b + c ;",
      "indent": 1
    },
    {
      "line": 8,
      "text": "the 5th element of p is equal to ( a + b ) * c",
      "code": "p [ 5 ] = ( a + b ) * c ;",
      "indent": 1
    },
    {
      "line": 9,
      "text": "sort the values p and p + 6",
      "code": "sort ( p , p + 6 ) ;",
      "indent": 1
    },
    {
      "line": 10,
      "text": "print 5th element of p and newline",
      "code": "cout << p [ 5 ] << endl ;",
      "indent": 1
    },
    {
      "line": 11,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 12,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        1
      ],
      "mod_code": [
        "int a [ 6 ] , b , c , p ;"
      ],
      "err_line": 2,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘int [6]’)"
    },
    {
      "mod_line": [
        6
      ],
      "mod_code": [
        "p [ ] = a + b * c ;"
      ],
      "err_line": 6,
      "err_msg": "expected primary-expression before ‘]’ token"
    },
    {
      "mod_line": [
        7
      ],
      "mod_code": [
        "int p [ 4 ] = { a * b + c } ;"
      ],
      "err_line": 7,
      "err_msg": "conflicting declaration ‘int p [4]’"
    },
    {
      "mod_line": [
        9
      ],
      "mod_code": [
        "sort ( p , p + n ) ;"
      ],
      "err_line": 9,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        10
      ],
      "mod_code": [
        "cout << * max_element << endl ;"
      ],
      "err_line": 10,
      "err_msg": "overloaded function with no contextual type information"
    },
    {
      "mod_line": [
        1,
        3
      ],
      "mod_code": [
        "int a [ 6 ] , b , c , p ;",
        "p [ c ] = a + b + c ;"
      ],
      "err_line": 2,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘int [6]’)"
    },
    {
      "mod_line": [
        1,
        3,
        5
      ],
      "mod_code": [
        "int a [ 6 ] , b , c , p ;",
        "p [ c ] = a + b + c ;",
        "p [ 4 ] = a * b * c ;"
      ],
      "err_line": 2,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘int [6]’)"
    },
    {
      "mod_line": [
        1,
        3,
        5,
        8
      ],
      "mod_code": [
        "int a [ 6 ] , b , c , p ;",
        "p [ c ] = a + b + c ;",
        "p [ 4 ] = a * b * c ;",
        "p [ 4 ] = ( a + b ) * c ;"
      ],
      "err_line": 2,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘int [6]’)"
    },
    {
      "mod_line": [
        1,
        3,
        5,
        10
      ],
      "mod_code": [
        "int a [ 6 ] , b , c , p ;",
        "p [ c ] = a + b + c ;",
        "p [ 4 ] = a * b * c ;",
        "cout << p [ 0 ] << endl ;"
      ],
      "err_line": 2,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘int [6]’)"
    },
    {
      "mod_line": [
        1,
        3,
        5,
        10
      ],
      "mod_code": [
        "int a [ 6 ] , b , c , p ;",
        "p [ c ] = a + b + c ;",
        "p [ 4 ] = a * b * c ;",
        "cout << * max_element << endl ;"
      ],
      "err_line": 2,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘int [6]’)"
    },
    {
      "mod_line": [
        1,
        3,
        8
      ],
      "mod_code": [
        "int a [ 6 ] , b , c , p ;",
        "p [ c ] = a + b + c ;",
        "p [ 4 ] = ( a + b ) * c ;"
      ],
      "err_line": 2,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘int [6]’)"
    },
    {
      "mod_line": [
        1,
        3,
        8,
        10
      ],
      "mod_code": [
        "int a [ 6 ] , b , c , p ;",
        "p [ c ] = a + b + c ;",
        "p [ 4 ] = ( a + b ) * c ;",
        "cout << p [ 0 ] << endl ;"
      ],
      "err_line": 2,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘int [6]’)"
    },
    {
      "mod_line": [
        1,
        3,
        8,
        10
      ],
      "mod_code": [
        "int a [ 6 ] , b , c , p ;",
        "p [ c ] = a + b + c ;",
        "p [ 4 ] = ( a + b ) * c ;",
        "cout << * max_element << endl ;"
      ],
      "err_line": 2,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘int [6]’)"
    },
    {
      "mod_line": [
        1,
        3,
        10
      ],
      "mod_code": [
        "int a [ 6 ] , b , c , p ;",
        "p [ c ] = a + b + c ;",
        "cout << p [ 0 ] << endl ;"
      ],
      "err_line": 2,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘int [6]’)"
    },
    {
      "mod_line": [
        1,
        3,
        10
      ],
      "mod_code": [
        "int a [ 6 ] , b , c , p ;",
        "p [ c ] = a + b + c ;",
        "cout << * max_element << endl ;"
      ],
      "err_line": 2,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘int [6]’)"
    },
    {
      "mod_line": [
        1,
        5
      ],
      "mod_code": [
        "int a [ 6 ] , b , c , p ;",
        "p [ 4 ] = a * b * c ;"
      ],
      "err_line": 2,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘int [6]’)"
    },
    {
      "mod_line": [
        1,
        5,
        8
      ],
      "mod_code": [
        "int a [ 6 ] , b , c , p ;",
        "p [ 4 ] = a * b * c ;",
        "p [ 4 ] = ( a + b ) * c ;"
      ],
      "err_line": 2,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘int [6]’)"
    },
    {
      "mod_line": [
        1,
        5,
        8,
        10
      ],
      "mod_code": [
        "int a [ 6 ] , b , c , p ;",
        "p [ 4 ] = a * b * c ;",
        "p [ 4 ] = ( a + b ) * c ;",
        "cout << p [ 0 ] << endl ;"
      ],
      "err_line": 2,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘int [6]’)"
    },
    {
      "mod_line": [
        1,
        5,
        8,
        10
      ],
      "mod_code": [
        "int a [ 6 ] , b , c , p ;",
        "p [ 4 ] = a * b * c ;",
        "p [ 4 ] = ( a + b ) * c ;",
        "cout << * max_element << endl ;"
      ],
      "err_line": 2,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘int [6]’)"
    },
    {
      "mod_line": [
        1,
        5,
        10
      ],
      "mod_code": [
        "int a [ 6 ] , b , c , p ;",
        "p [ 4 ] = a * b * c ;",
        "cout << p [ 0 ] << endl ;"
      ],
      "err_line": 2,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘int [6]’)"
    },
    {
      "mod_line": [
        1,
        5,
        10
      ],
      "mod_code": [
        "int a [ 6 ] , b , c , p ;",
        "p [ 4 ] = a * b * c ;",
        "cout << * max_element << endl ;"
      ],
      "err_line": 2,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘int [6]’)"
    },
    {
      "mod_line": [
        1,
        8
      ],
      "mod_code": [
        "int a [ 6 ] , b , c , p ;",
        "p [ 4 ] = ( a + b ) * c ;"
      ],
      "err_line": 2,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘int [6]’)"
    },
    {
      "mod_line": [
        1,
        8,
        10
      ],
      "mod_code": [
        "int a [ 6 ] , b , c , p ;",
        "p [ 4 ] = ( a + b ) * c ;",
        "cout << p [ 0 ] << endl ;"
      ],
      "err_line": 2,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘int [6]’)"
    },
    {
      "mod_line": [
        1,
        8,
        10
      ],
      "mod_code": [
        "int a [ 6 ] , b , c , p ;",
        "p [ 4 ] = ( a + b ) * c ;",
        "cout << * max_element << endl ;"
      ],
      "err_line": 2,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘int [6]’)"
    },
    {
      "mod_line": [
        1,
        10
      ],
      "mod_code": [
        "int a [ 6 ] , b , c , p ;",
        "cout << p [ 0 ] << endl ;"
      ],
      "err_line": 2,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘int [6]’)"
    },
    {
      "mod_line": [
        1,
        10
      ],
      "mod_code": [
        "int a [ 6 ] , b , c , p ;",
        "cout << * max_element << endl ;"
      ],
      "err_line": 2,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘int [6]’)"
    },
    {
      "mod_line": [
        3,
        5,
        8,
        10
      ],
      "mod_code": [
        "p [ c ] = a + b + c ;",
        "p [ 4 ] = a * b * c ;",
        "p [ 4 ] = ( a + b ) * c ;",
        "cout << * max_element << endl ;"
      ],
      "err_line": 10,
      "err_msg": "overloaded function with no contextual type information"
    },
    {
      "mod_line": [
        3,
        5,
        10
      ],
      "mod_code": [
        "p [ c ] = a + b + c ;",
        "p [ 4 ] = a * b * c ;",
        "cout << * max_element << endl ;"
      ],
      "err_line": 10,
      "err_msg": "overloaded function with no contextual type information"
    },
    {
      "mod_line": [
        3,
        8,
        10
      ],
      "mod_code": [
        "p [ c ] = a + b + c ;",
        "p [ 4 ] = ( a + b ) * c ;",
        "cout << * max_element << endl ;"
      ],
      "err_line": 10,
      "err_msg": "overloaded function with no contextual type information"
    },
    {
      "mod_line": [
        3,
        10
      ],
      "mod_code": [
        "p [ c ] = a + b + c ;",
        "cout << * max_element << endl ;"
      ],
      "err_line": 10,
      "err_msg": "overloaded function with no contextual type information"
    },
    {
      "mod_line": [
        5,
        8,
        10
      ],
      "mod_code": [
        "p [ 4 ] = a * b * c ;",
        "p [ 4 ] = ( a + b ) * c ;",
        "cout << * max_element << endl ;"
      ],
      "err_line": 10,
      "err_msg": "overloaded function with no contextual type information"
    },
    {
      "mod_line": [
        5,
        10
      ],
      "mod_code": [
        "p [ 4 ] = a * b * c ;",
        "cout << * max_element << endl ;"
      ],
      "err_line": 10,
      "err_msg": "overloaded function with no contextual type information"
    },
    {
      "mod_line": [
        8,
        10
      ],
      "mod_code": [
        "p [ 4 ] = ( a + b ) * c ;",
        "cout << * max_element << endl ;"
      ],
      "err_line": 10,
      "err_msg": "overloaded function with no contextual type information"
    }
  ]
}