{
  "meta": {
    "index": 951,
    "hitid": "3INZSNUD80KH6JOL3CM0ZA8EH9YD9R",
    "workerid": "A1AYVATMT88U1W",
    "probid": "119A",
    "subid": "48778895"
  },
  "lines": [
    {
      "line": 0,
      "text": "let gcd be a function which accepts integers x and y and returns a integer values",
      "code": "int gcd ( int x , int y )",
      "indent": 0
    },
    {
      "line": 1,
      "text": "if ( x modulus y is equal to 0 ) , return the value of y",
      "code": "if ( x % y == 0 ) return y ;",
      "indent": 1
    },
    {
      "line": 2,
      "text": "return the value of gcd ( y , x modulus y )",
      "code": "return gcd ( y , x % y ) ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    },
    {
      "line": 4,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 5,
      "text": "let a , b , n be integers",
      "code": "int a , b , n ;",
      "indent": 1
    },
    {
      "line": 6,
      "text": "let l1 , l2 be integers with values l1 is equal to 1 , l2 is equal to 1",
      "code": "int l1 = 1 , l2 = 1 ;",
      "indent": 1
    },
    {
      "line": 7,
      "text": "read a , b , n",
      "code": "cin >> a >> b >> n ;",
      "indent": 1
    },
    {
      "line": 8,
      "text": "while ( the value is 1 or true )",
      "code": "while ( 1 )",
      "indent": 1
    },
    {
      "line": 9,
      "text": "let integer value w1 is equal to gcd ( a , n )",
      "code": "int w1 = gcd ( a , n ) ;",
      "indent": 2
    },
    {
      "line": 10,
      "text": "let the value of n is equal to n - w1",
      "code": "n = n - w1 ;",
      "indent": 2
    },
    {
      "line": 11,
      "text": "if ( n is equal to 0 )",
      "code": "if ( n == 0 )",
      "indent": 2
    },
    {
      "line": 12,
      "text": "print 0 and newline",
      "code": "cout << 0 << endl ;",
      "indent": 3
    },
    {
      "line": 13,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 3
    },
    {
      "line": 14,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 15,
      "text": "if ( n is less than 0 )",
      "code": "if ( n < 0 )",
      "indent": 2
    },
    {
      "line": 16,
      "text": "the value of l1 is equal to 0",
      "code": "l1 = 0 ;",
      "indent": 3
    },
    {
      "line": 17,
      "text": "stop",
      "code": "break ;",
      "indent": 3
    },
    {
      "line": 18,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 19,
      "text": "let integer value w2 is equal to gcd ( b , n )",
      "code": "int w2 = gcd ( b , n ) ;",
      "indent": 2
    },
    {
      "line": 20,
      "text": "n is equal to n - w2",
      "code": "n = n - w2 ;",
      "indent": 2
    },
    {
      "line": 21,
      "text": "if ( n is equal to 0 )",
      "code": "if ( n == 0 )",
      "indent": 2
    },
    {
      "line": 22,
      "text": "print 1 and newline",
      "code": "cout << 1 << endl ;",
      "indent": 3
    },
    {
      "line": 23,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 3
    },
    {
      "line": 24,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 25,
      "text": "if ( n is less than 0 )",
      "code": "if ( n < 0 )",
      "indent": 2
    },
    {
      "line": 26,
      "text": "the value of l2 is equal to 0",
      "code": "l2 = 0 ;",
      "indent": 3
    },
    {
      "line": 27,
      "text": "stop",
      "code": "break ;",
      "indent": 3
    },
    {
      "line": 28,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 29,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 30,
      "text": "if ( l1 is equal to 0 )",
      "code": "if ( l1 == 0 )",
      "indent": 1
    },
    {
      "line": 31,
      "text": "print 0 and newline",
      "code": "cout << 0 << endl ;",
      "indent": 2
    },
    {
      "line": 32,
      "text": "else do the following",
      "code": "else",
      "indent": 1
    },
    {
      "line": 33,
      "text": "print 1 and newline",
      "code": "cout << 1 << endl ;",
      "indent": 2
    },
    {
      "line": 34,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        8
      ],
      "mod_code": [
        "while ( value == true )"
      ],
      "err_line": 8,
      "err_msg": "‘value’ was not declared in this scope"
    },
    {
      "mod_line": [
        0
      ],
      "mod_code": [
        "int gcd ( int x , int y ) ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        6
      ],
      "mod_code": [
        "int l1 is 1 , l2 = 1 ;"
      ],
      "err_line": 6,
      "err_msg": "expected initializer before ‘is’"
    },
    {
      "mod_line": [
        8
      ],
      "mod_code": [
        "while ( ( value == true ) )"
      ],
      "err_line": 8,
      "err_msg": "‘value’ was not declared in this scope"
    },
    {
      "mod_line": [
        9
      ],
      "mod_code": [
        "w1 = gcd ( a , n ) ;"
      ],
      "err_line": 9,
      "err_msg": "‘w1’ was not declared in this scope"
    },
    {
      "mod_line": [
        17
      ],
      "mod_code": [
        "stop ;"
      ],
      "err_line": 17,
      "err_msg": "‘stop’ was not declared in this scope"
    },
    {
      "mod_line": [
        19
      ],
      "mod_code": [
        "w2 = gcd ( b , n ) ;"
      ],
      "err_line": 19,
      "err_msg": "‘w2’ was not declared in this scope"
    },
    {
      "mod_line": [
        27
      ],
      "mod_code": [
        "stop ;"
      ],
      "err_line": 27,
      "err_msg": "‘stop’ was not declared in this scope"
    },
    {
      "mod_line": [
        8,
        21
      ],
      "mod_code": [
        "while ( value == true )",
        "if ( n == ' 0 ' )"
      ],
      "err_line": 8,
      "err_msg": "‘value’ was not declared in this scope"
    },
    {
      "mod_line": [
        8,
        21,
        6
      ],
      "mod_code": [
        "while ( value == true )",
        "if ( n == ' 0 ' )",
        "int l1 is 1 , l2 = 1 ;"
      ],
      "err_line": 6,
      "err_msg": "expected initializer before ‘is’"
    },
    {
      "mod_line": [
        8,
        21,
        6,
        11
      ],
      "mod_code": [
        "while ( value == true )",
        "if ( n == ' 0 ' )",
        "int l1 is 1 , l2 = 1 ;",
        "if ( n == ' 0 ' )"
      ],
      "err_line": 6,
      "err_msg": "expected initializer before ‘is’"
    },
    {
      "mod_line": [
        8,
        21,
        6,
        0
      ],
      "mod_code": [
        "while ( value == true )",
        "if ( n == ' 0 ' )",
        "int l1 is 1 , l2 = 1 ;",
        "int gcd ( int x , int y ) ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        8,
        21,
        11
      ],
      "mod_code": [
        "while ( value == true )",
        "if ( n == ' 0 ' )",
        "if ( n == ' 0 ' )"
      ],
      "err_line": 8,
      "err_msg": "‘value’ was not declared in this scope"
    },
    {
      "mod_line": [
        8,
        21,
        11,
        0
      ],
      "mod_code": [
        "while ( value == true )",
        "if ( n == ' 0 ' )",
        "if ( n == ' 0 ' )",
        "int gcd ( int x , int y ) ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        8,
        21,
        0
      ],
      "mod_code": [
        "while ( value == true )",
        "if ( n == ' 0 ' )",
        "int gcd ( int x , int y ) ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        8,
        6
      ],
      "mod_code": [
        "while ( value == true )",
        "int l1 is 1 , l2 = 1 ;"
      ],
      "err_line": 6,
      "err_msg": "expected initializer before ‘is’"
    },
    {
      "mod_line": [
        8,
        6,
        11
      ],
      "mod_code": [
        "while ( value == true )",
        "int l1 is 1 , l2 = 1 ;",
        "if ( n == ' 0 ' )"
      ],
      "err_line": 6,
      "err_msg": "expected initializer before ‘is’"
    },
    {
      "mod_line": [
        8,
        6,
        11,
        0
      ],
      "mod_code": [
        "while ( value == true )",
        "int l1 is 1 , l2 = 1 ;",
        "if ( n == ' 0 ' )",
        "int gcd ( int x , int y ) ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        8,
        6,
        0
      ],
      "mod_code": [
        "while ( value == true )",
        "int l1 is 1 , l2 = 1 ;",
        "int gcd ( int x , int y ) ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        8,
        11
      ],
      "mod_code": [
        "while ( value == true )",
        "if ( n == ' 0 ' )"
      ],
      "err_line": 8,
      "err_msg": "‘value’ was not declared in this scope"
    },
    {
      "mod_line": [
        8,
        11,
        0
      ],
      "mod_code": [
        "while ( value == true )",
        "if ( n == ' 0 ' )",
        "int gcd ( int x , int y ) ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        8,
        0
      ],
      "mod_code": [
        "while ( value == true )",
        "int gcd ( int x , int y ) ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        21,
        8
      ],
      "mod_code": [
        "if ( n == ' 0 ' )",
        "while ( ( value == true ) )"
      ],
      "err_line": 8,
      "err_msg": "‘value’ was not declared in this scope"
    },
    {
      "mod_line": [
        21,
        8,
        6
      ],
      "mod_code": [
        "if ( n == ' 0 ' )",
        "while ( ( value == true ) )",
        "int l1 is 1 , l2 = 1 ;"
      ],
      "err_line": 6,
      "err_msg": "expected initializer before ‘is’"
    },
    {
      "mod_line": [
        21,
        8,
        6,
        11
      ],
      "mod_code": [
        "if ( n == ' 0 ' )",
        "while ( ( value == true ) )",
        "int l1 is 1 , l2 = 1 ;",
        "if ( n == ' 0 ' )"
      ],
      "err_line": 6,
      "err_msg": "expected initializer before ‘is’"
    },
    {
      "mod_line": [
        21,
        8,
        6,
        0
      ],
      "mod_code": [
        "if ( n == ' 0 ' )",
        "while ( ( value == true ) )",
        "int l1 is 1 , l2 = 1 ;",
        "int gcd ( int x , int y ) ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        21,
        8,
        11
      ],
      "mod_code": [
        "if ( n == ' 0 ' )",
        "while ( ( value == true ) )",
        "if ( n == ' 0 ' )"
      ],
      "err_line": 8,
      "err_msg": "‘value’ was not declared in this scope"
    },
    {
      "mod_line": [
        21,
        8,
        11,
        0
      ],
      "mod_code": [
        "if ( n == ' 0 ' )",
        "while ( ( value == true ) )",
        "if ( n == ' 0 ' )",
        "int gcd ( int x , int y ) ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        21,
        8,
        0
      ],
      "mod_code": [
        "if ( n == ' 0 ' )",
        "while ( ( value == true ) )",
        "int gcd ( int x , int y ) ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        21,
        6
      ],
      "mod_code": [
        "if ( n == ' 0 ' )",
        "int l1 is 1 , l2 = 1 ;"
      ],
      "err_line": 6,
      "err_msg": "expected initializer before ‘is’"
    },
    {
      "mod_line": [
        21,
        6,
        11
      ],
      "mod_code": [
        "if ( n == ' 0 ' )",
        "int l1 is 1 , l2 = 1 ;",
        "if ( n == ' 0 ' )"
      ],
      "err_line": 6,
      "err_msg": "expected initializer before ‘is’"
    },
    {
      "mod_line": [
        21,
        6,
        11,
        0
      ],
      "mod_code": [
        "if ( n == ' 0 ' )",
        "int l1 is 1 , l2 = 1 ;",
        "if ( n == ' 0 ' )",
        "int gcd ( int x , int y ) ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        21,
        6,
        0
      ],
      "mod_code": [
        "if ( n == ' 0 ' )",
        "int l1 is 1 , l2 = 1 ;",
        "int gcd ( int x , int y ) ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        21,
        11,
        0
      ],
      "mod_code": [
        "if ( n == ' 0 ' )",
        "if ( n == ' 0 ' )",
        "int gcd ( int x , int y ) ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        21,
        0
      ],
      "mod_code": [
        "if ( n == ' 0 ' )",
        "int gcd ( int x , int y ) ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        8,
        6
      ],
      "mod_code": [
        "while ( ( value == true ) )",
        "int l1 is 1 , l2 = 1 ;"
      ],
      "err_line": 6,
      "err_msg": "expected initializer before ‘is’"
    },
    {
      "mod_line": [
        8,
        6,
        11
      ],
      "mod_code": [
        "while ( ( value == true ) )",
        "int l1 is 1 , l2 = 1 ;",
        "if ( n == ' 0 ' )"
      ],
      "err_line": 6,
      "err_msg": "expected initializer before ‘is’"
    },
    {
      "mod_line": [
        8,
        6,
        11,
        0
      ],
      "mod_code": [
        "while ( ( value == true ) )",
        "int l1 is 1 , l2 = 1 ;",
        "if ( n == ' 0 ' )",
        "int gcd ( int x , int y ) ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        8,
        6,
        0
      ],
      "mod_code": [
        "while ( ( value == true ) )",
        "int l1 is 1 , l2 = 1 ;",
        "int gcd ( int x , int y ) ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        8,
        11
      ],
      "mod_code": [
        "while ( ( value == true ) )",
        "if ( n == ' 0 ' )"
      ],
      "err_line": 8,
      "err_msg": "‘value’ was not declared in this scope"
    },
    {
      "mod_line": [
        8,
        11,
        0
      ],
      "mod_code": [
        "while ( ( value == true ) )",
        "if ( n == ' 0 ' )",
        "int gcd ( int x , int y ) ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        8,
        0
      ],
      "mod_code": [
        "while ( ( value == true ) )",
        "int gcd ( int x , int y ) ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        6,
        11
      ],
      "mod_code": [
        "int l1 is 1 , l2 = 1 ;",
        "if ( n == ' 0 ' )"
      ],
      "err_line": 6,
      "err_msg": "expected initializer before ‘is’"
    },
    {
      "mod_line": [
        6,
        11,
        0
      ],
      "mod_code": [
        "int l1 is 1 , l2 = 1 ;",
        "if ( n == ' 0 ' )",
        "int gcd ( int x , int y ) ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        6,
        0
      ],
      "mod_code": [
        "int l1 is 1 , l2 = 1 ;",
        "int gcd ( int x , int y ) ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        11,
        0
      ],
      "mod_code": [
        "if ( n == ' 0 ' )",
        "int gcd ( int x , int y ) ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    }
  ]
}