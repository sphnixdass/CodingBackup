{
  "meta": {
    "index": 2292,
    "hitid": "31MCUE39BKGY319WOTMYEI8PVW1G3V",
    "workerid": "AIWEXPJAU66D9",
    "probid": "713A",
    "subid": "45788989"
  },
  "lines": [
    {
      "line": 0,
      "text": "let m be a map from strings to integers",
      "code": "map < string , int > m ;",
      "indent": 0
    },
    {
      "line": 1,
      "text": "string function get with long long argument n",
      "code": "string get ( long long n )",
      "indent": 0
    },
    {
      "line": 2,
      "text": "create string variable with name num",
      "code": "string num ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "while n",
      "code": "while ( n )",
      "indent": 1
    },
    {
      "line": 4,
      "text": "create integer variable e with value n modulo 10",
      "code": "int e = n % 10 ;",
      "indent": 2
    },
    {
      "line": 5,
      "text": "if e & 1 ! = 0",
      "code": "if ( e & 1 )",
      "indent": 2
    },
    {
      "line": 6,
      "text": "append ' 1 ' to num",
      "code": "num += ' 1 ' ;",
      "indent": 3
    },
    {
      "line": 7,
      "text": "else",
      "code": "else",
      "indent": 2
    },
    {
      "line": 8,
      "text": "append ' 0 ' to num",
      "code": "num += ' 0 ' ;",
      "indent": 3
    },
    {
      "line": 9,
      "text": "set n to n divided by 10",
      "code": "n /= 10 ;",
      "indent": 2
    },
    {
      "line": 10,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 11,
      "text": "pad num with ' 0 ' on the right to the length of 18",
      "code": "while ( num . size ( ) < 18 ) num += ' 0 ' ;",
      "indent": 1
    },
    {
      "line": 12,
      "text": "reverse num",
      "code": "reverse ( num . begin ( ) , num . end ( ) ) ;",
      "indent": 1
    },
    {
      "line": 13,
      "text": "return num",
      "code": "return num ;",
      "indent": 1
    },
    {
      "line": 14,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    },
    {
      "line": 15,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 16,
      "text": "t is a new integer",
      "code": "int t ;",
      "indent": 1
    },
    {
      "line": 17,
      "text": "read t from the input",
      "code": "cin >> t ;",
      "indent": 1
    },
    {
      "line": 18,
      "text": "while t ! = 0 , decrement it and continue the loop",
      "code": "while ( t -- )",
      "indent": 1
    },
    {
      "line": 19,
      "text": "declare new character called ch",
      "code": "char ch ;",
      "indent": 2
    },
    {
      "line": 20,
      "text": "read ch",
      "code": "cin >> ch ;",
      "indent": 2
    },
    {
      "line": 21,
      "text": "if ch is equal to ' + '",
      "code": "if ( ch == ' + ' )",
      "indent": 2
    },
    {
      "line": 22,
      "text": "declare new long long called n",
      "code": "long long n ;",
      "indent": 3
    },
    {
      "line": 23,
      "text": "read from the input to n",
      "code": "cin >> n ;",
      "indent": 3
    },
    {
      "line": 24,
      "text": "declare new string num = get ( n )",
      "code": "string num = get ( n ) ;",
      "indent": 3
    },
    {
      "line": 25,
      "text": "increment m [ num ] by one",
      "code": "m [ num ] ++ ;",
      "indent": 3
    },
    {
      "line": 26,
      "text": "else if ch = ' - '",
      "code": "else if ( ch == ' - ' )",
      "indent": 2
    },
    {
      "line": 27,
      "text": "create new long long n",
      "code": "long long n ;",
      "indent": 3
    },
    {
      "line": 28,
      "text": "read n from the user input",
      "code": "cin >> n ;",
      "indent": 3
    },
    {
      "line": 29,
      "text": "declare new string called num = the result of get ( n )",
      "code": "string num = get ( n ) ;",
      "indent": 3
    },
    {
      "line": 30,
      "text": "decrement m [ num ]",
      "code": "m [ num ] -- ;",
      "indent": 3
    },
    {
      "line": 31,
      "text": "else",
      "code": "else",
      "indent": 2
    },
    {
      "line": 32,
      "text": "create new string str",
      "code": "string str ;",
      "indent": 3
    },
    {
      "line": 33,
      "text": "read str from the input",
      "code": "cin >> str ;",
      "indent": 3
    },
    {
      "line": 34,
      "text": "reverse str",
      "code": "reverse ( str . begin ( ) , str . end ( ) ) ;",
      "indent": 3
    },
    {
      "line": 35,
      "text": "while length of str < 18 , append ' 0 ' to the end of str",
      "code": "while ( str . size ( ) < 18 ) str += ' 0 ' ;",
      "indent": 3
    },
    {
      "line": 36,
      "text": "reverse str",
      "code": "reverse ( str . begin ( ) , str . end ( ) ) ;",
      "indent": 3
    },
    {
      "line": 37,
      "text": "print m [ str ]",
      "code": "cout << m [ str ] << endl ;",
      "indent": 3
    },
    {
      "line": 38,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 39,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 40,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        0
      ],
      "mod_code": [
        "vector < string , int > m ;"
      ],
      "err_line": 25,
      "err_msg": "no match for ‘operator[]’ (operand types are ‘std::vector<std::__cxx11::basic_string<char>, int>’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        1
      ],
      "mod_code": [
        "string get ( long long n ) ;"
      ],
      "err_line": 2,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        2
      ],
      "mod_code": [
        "string n ;"
      ],
      "err_line": 2,
      "err_msg": "declaration of ‘std::__cxx11::string n’ shadows a parameter"
    },
    {
      "mod_line": [
        11
      ],
      "mod_code": [
        "num . length ( ' 0 ' ) ;"
      ],
      "err_line": 11,
      "err_msg": "no matching function for call to ‘std::__cxx11::basic_string<char>::length(char)’"
    },
    {
      "mod_line": [
        19
      ],
      "mod_code": [
        "char ch [ 8 ] ;"
      ],
      "err_line": 21,
      "err_msg": "ISO C++ forbids comparison between pointer and integer [-fpermissive]"
    },
    {
      "mod_line": [
        21
      ],
      "mod_code": [
        "if ( ch == ' + ' ) break ;"
      ],
      "err_line": 26,
      "err_msg": "‘else’ without a previous ‘if’"
    },
    {
      "mod_line": [
        24
      ],
      "mod_code": [
        "bool num = get ( n ) ;"
      ],
      "err_line": 24,
      "err_msg": "cannot convert ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ to ‘bool’ in initialization"
    },
    {
      "mod_line": [
        25
      ],
      "mod_code": [
        "m [ num ] += one ;"
      ],
      "err_line": 25,
      "err_msg": "‘one’ was not declared in this scope"
    },
    {
      "mod_line": [
        28
      ],
      "mod_code": [
        "while ( cin >> n )"
      ],
      "err_line": 30,
      "err_msg": "‘num’ was not declared in this scope"
    },
    {
      "mod_line": [
        29
      ],
      "mod_code": [
        "bool num = get ( n ) ;"
      ],
      "err_line": 29,
      "err_msg": "cannot convert ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ to ‘bool’ in initialization"
    },
    {
      "mod_line": [
        30
      ],
      "mod_code": [
        "m [ num ] [ num ] -- ;"
      ],
      "err_line": 30,
      "err_msg": "no match for ‘operator[]’ (operand types are ‘std::map<std::__cxx11::basic_string<char>, int>::mapped_type {aka int}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        32
      ],
      "mod_code": [
        "string str create"
      ],
      "err_line": 32,
      "err_msg": "expected initializer before ‘create’"
    },
    {
      "mod_line": [
        34
      ],
      "mod_code": [
        "reverse ( str . begin ( ) , str . reverse ( ) ) ;"
      ],
      "err_line": 34,
      "err_msg": "‘std::__cxx11::string {aka class std::__cxx11::basic_string<char>}’ has no member named ‘reverse’"
    },
    {
      "mod_line": [
        36
      ],
      "mod_code": [
        "reverse ( str . begin ( ) , str . reverse ( ) ) ;"
      ],
      "err_line": 36,
      "err_msg": "‘std::__cxx11::string {aka class std::__cxx11::basic_string<char>}’ has no member named ‘reverse’"
    },
    {
      "mod_line": [
        11,
        24
      ],
      "mod_code": [
        "num . length ( ) ;",
        "bool num = get ( n ) ;"
      ],
      "err_line": 24,
      "err_msg": "cannot convert ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ to ‘bool’ in initialization"
    },
    {
      "mod_line": [
        11,
        24,
        25
      ],
      "mod_code": [
        "num . length ( ) ;",
        "bool num = get ( n ) ;",
        "m [ num ] += one ;"
      ],
      "err_line": 24,
      "err_msg": "cannot convert ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ to ‘bool’ in initialization"
    },
    {
      "mod_line": [
        11,
        24,
        25,
        26
      ],
      "mod_code": [
        "num . length ( ) ;",
        "bool num = get ( n ) ;",
        "m [ num ] += one ;",
        "else if ( ch = ' - ' )"
      ],
      "err_line": 24,
      "err_msg": "cannot convert ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ to ‘bool’ in initialization"
    },
    {
      "mod_line": [
        11,
        24,
        25,
        32
      ],
      "mod_code": [
        "num . length ( ) ;",
        "bool num = get ( n ) ;",
        "m [ num ] += one ;",
        "string str create"
      ],
      "err_line": 24,
      "err_msg": "cannot convert ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ to ‘bool’ in initialization"
    },
    {
      "mod_line": [
        11,
        24,
        26
      ],
      "mod_code": [
        "num . length ( ) ;",
        "bool num = get ( n ) ;",
        "else if ( ch = ' - ' )"
      ],
      "err_line": 24,
      "err_msg": "cannot convert ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ to ‘bool’ in initialization"
    },
    {
      "mod_line": [
        11,
        24,
        26,
        32
      ],
      "mod_code": [
        "num . length ( ) ;",
        "bool num = get ( n ) ;",
        "else if ( ch = ' - ' )",
        "string str create"
      ],
      "err_line": 24,
      "err_msg": "cannot convert ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ to ‘bool’ in initialization"
    },
    {
      "mod_line": [
        11,
        24,
        32
      ],
      "mod_code": [
        "num . length ( ) ;",
        "bool num = get ( n ) ;",
        "string str create"
      ],
      "err_line": 24,
      "err_msg": "cannot convert ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ to ‘bool’ in initialization"
    },
    {
      "mod_line": [
        11,
        25
      ],
      "mod_code": [
        "num . length ( ) ;",
        "m [ num ] += one ;"
      ],
      "err_line": 25,
      "err_msg": "‘one’ was not declared in this scope"
    },
    {
      "mod_line": [
        11,
        25,
        26
      ],
      "mod_code": [
        "num . length ( ) ;",
        "m [ num ] += one ;",
        "else if ( ch = ' - ' )"
      ],
      "err_line": 25,
      "err_msg": "‘one’ was not declared in this scope"
    },
    {
      "mod_line": [
        11,
        25,
        26,
        32
      ],
      "mod_code": [
        "num . length ( ) ;",
        "m [ num ] += one ;",
        "else if ( ch = ' - ' )",
        "string str create"
      ],
      "err_line": 25,
      "err_msg": "‘one’ was not declared in this scope"
    },
    {
      "mod_line": [
        11,
        25,
        32
      ],
      "mod_code": [
        "num . length ( ) ;",
        "m [ num ] += one ;",
        "string str create"
      ],
      "err_line": 25,
      "err_msg": "‘one’ was not declared in this scope"
    },
    {
      "mod_line": [
        11,
        26,
        32
      ],
      "mod_code": [
        "num . length ( ) ;",
        "else if ( ch = ' - ' )",
        "string str create"
      ],
      "err_line": 32,
      "err_msg": "expected initializer before ‘create’"
    },
    {
      "mod_line": [
        11,
        32
      ],
      "mod_code": [
        "num . length ( ) ;",
        "string str create"
      ],
      "err_line": 32,
      "err_msg": "expected initializer before ‘create’"
    },
    {
      "mod_line": [
        24,
        25
      ],
      "mod_code": [
        "bool num = get ( n ) ;",
        "m [ num ] += one ;"
      ],
      "err_line": 24,
      "err_msg": "cannot convert ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ to ‘bool’ in initialization"
    },
    {
      "mod_line": [
        24,
        25,
        11
      ],
      "mod_code": [
        "bool num = get ( n ) ;",
        "m [ num ] += one ;",
        "num . length ( ' 0 ' ) ;"
      ],
      "err_line": 11,
      "err_msg": "no matching function for call to ‘std::__cxx11::basic_string<char>::length(char)’"
    },
    {
      "mod_line": [
        24,
        25,
        11,
        26
      ],
      "mod_code": [
        "bool num = get ( n ) ;",
        "m [ num ] += one ;",
        "num . length ( ' 0 ' ) ;",
        "else if ( ch = ' - ' )"
      ],
      "err_line": 11,
      "err_msg": "no matching function for call to ‘std::__cxx11::basic_string<char>::length(char)’"
    },
    {
      "mod_line": [
        24,
        25,
        11,
        32
      ],
      "mod_code": [
        "bool num = get ( n ) ;",
        "m [ num ] += one ;",
        "num . length ( ' 0 ' ) ;",
        "string str create"
      ],
      "err_line": 11,
      "err_msg": "no matching function for call to ‘std::__cxx11::basic_string<char>::length(char)’"
    },
    {
      "mod_line": [
        24,
        25,
        26
      ],
      "mod_code": [
        "bool num = get ( n ) ;",
        "m [ num ] += one ;",
        "else if ( ch = ' - ' )"
      ],
      "err_line": 24,
      "err_msg": "cannot convert ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ to ‘bool’ in initialization"
    },
    {
      "mod_line": [
        24,
        25,
        26,
        32
      ],
      "mod_code": [
        "bool num = get ( n ) ;",
        "m [ num ] += one ;",
        "else if ( ch = ' - ' )",
        "string str create"
      ],
      "err_line": 24,
      "err_msg": "cannot convert ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ to ‘bool’ in initialization"
    },
    {
      "mod_line": [
        24,
        25,
        32
      ],
      "mod_code": [
        "bool num = get ( n ) ;",
        "m [ num ] += one ;",
        "string str create"
      ],
      "err_line": 24,
      "err_msg": "cannot convert ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ to ‘bool’ in initialization"
    },
    {
      "mod_line": [
        24,
        11
      ],
      "mod_code": [
        "bool num = get ( n ) ;",
        "num . length ( ' 0 ' ) ;"
      ],
      "err_line": 11,
      "err_msg": "no matching function for call to ‘std::__cxx11::basic_string<char>::length(char)’"
    },
    {
      "mod_line": [
        24,
        11,
        26
      ],
      "mod_code": [
        "bool num = get ( n ) ;",
        "num . length ( ' 0 ' ) ;",
        "else if ( ch = ' - ' )"
      ],
      "err_line": 11,
      "err_msg": "no matching function for call to ‘std::__cxx11::basic_string<char>::length(char)’"
    },
    {
      "mod_line": [
        24,
        11,
        26,
        32
      ],
      "mod_code": [
        "bool num = get ( n ) ;",
        "num . length ( ' 0 ' ) ;",
        "else if ( ch = ' - ' )",
        "string str create"
      ],
      "err_line": 11,
      "err_msg": "no matching function for call to ‘std::__cxx11::basic_string<char>::length(char)’"
    },
    {
      "mod_line": [
        24,
        11,
        32
      ],
      "mod_code": [
        "bool num = get ( n ) ;",
        "num . length ( ' 0 ' ) ;",
        "string str create"
      ],
      "err_line": 11,
      "err_msg": "no matching function for call to ‘std::__cxx11::basic_string<char>::length(char)’"
    },
    {
      "mod_line": [
        24,
        26
      ],
      "mod_code": [
        "bool num = get ( n ) ;",
        "else if ( ch = ' - ' )"
      ],
      "err_line": 24,
      "err_msg": "cannot convert ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ to ‘bool’ in initialization"
    },
    {
      "mod_line": [
        24,
        26,
        32
      ],
      "mod_code": [
        "bool num = get ( n ) ;",
        "else if ( ch = ' - ' )",
        "string str create"
      ],
      "err_line": 24,
      "err_msg": "cannot convert ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ to ‘bool’ in initialization"
    },
    {
      "mod_line": [
        24,
        32
      ],
      "mod_code": [
        "bool num = get ( n ) ;",
        "string str create"
      ],
      "err_line": 24,
      "err_msg": "cannot convert ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ to ‘bool’ in initialization"
    },
    {
      "mod_line": [
        25,
        11
      ],
      "mod_code": [
        "m [ num ] += one ;",
        "num . length ( ' 0 ' ) ;"
      ],
      "err_line": 11,
      "err_msg": "no matching function for call to ‘std::__cxx11::basic_string<char>::length(char)’"
    },
    {
      "mod_line": [
        25,
        11,
        26
      ],
      "mod_code": [
        "m [ num ] += one ;",
        "num . length ( ' 0 ' ) ;",
        "else if ( ch = ' - ' )"
      ],
      "err_line": 11,
      "err_msg": "no matching function for call to ‘std::__cxx11::basic_string<char>::length(char)’"
    },
    {
      "mod_line": [
        25,
        11,
        26,
        32
      ],
      "mod_code": [
        "m [ num ] += one ;",
        "num . length ( ' 0 ' ) ;",
        "else if ( ch = ' - ' )",
        "string str create"
      ],
      "err_line": 11,
      "err_msg": "no matching function for call to ‘std::__cxx11::basic_string<char>::length(char)’"
    },
    {
      "mod_line": [
        25,
        11,
        32
      ],
      "mod_code": [
        "m [ num ] += one ;",
        "num . length ( ' 0 ' ) ;",
        "string str create"
      ],
      "err_line": 11,
      "err_msg": "no matching function for call to ‘std::__cxx11::basic_string<char>::length(char)’"
    },
    {
      "mod_line": [
        25,
        26
      ],
      "mod_code": [
        "m [ num ] += one ;",
        "else if ( ch = ' - ' )"
      ],
      "err_line": 25,
      "err_msg": "‘one’ was not declared in this scope"
    },
    {
      "mod_line": [
        25,
        26,
        32
      ],
      "mod_code": [
        "m [ num ] += one ;",
        "else if ( ch = ' - ' )",
        "string str create"
      ],
      "err_line": 25,
      "err_msg": "‘one’ was not declared in this scope"
    },
    {
      "mod_line": [
        25,
        32
      ],
      "mod_code": [
        "m [ num ] += one ;",
        "string str create"
      ],
      "err_line": 25,
      "err_msg": "‘one’ was not declared in this scope"
    },
    {
      "mod_line": [
        11,
        26
      ],
      "mod_code": [
        "num . length ( ' 0 ' ) ;",
        "else if ( ch = ' - ' )"
      ],
      "err_line": 11,
      "err_msg": "no matching function for call to ‘std::__cxx11::basic_string<char>::length(char)’"
    },
    {
      "mod_line": [
        11,
        26,
        32
      ],
      "mod_code": [
        "num . length ( ' 0 ' ) ;",
        "else if ( ch = ' - ' )",
        "string str create"
      ],
      "err_line": 11,
      "err_msg": "no matching function for call to ‘std::__cxx11::basic_string<char>::length(char)’"
    },
    {
      "mod_line": [
        11,
        32
      ],
      "mod_code": [
        "num . length ( ' 0 ' ) ;",
        "string str create"
      ],
      "err_line": 11,
      "err_msg": "no matching function for call to ‘std::__cxx11::basic_string<char>::length(char)’"
    },
    {
      "mod_line": [
        26,
        32
      ],
      "mod_code": [
        "else if ( ch = ' - ' )",
        "string str create"
      ],
      "err_line": 32,
      "err_msg": "expected initializer before ‘create’"
    }
  ]
}