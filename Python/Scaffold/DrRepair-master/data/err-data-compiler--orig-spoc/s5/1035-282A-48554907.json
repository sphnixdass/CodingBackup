{
  "meta": {
    "index": 1035,
    "hitid": "3WKGUBL7SZGZ7P61ZYOX1F534QKL4H",
    "workerid": "AIWEXPJAU66D9",
    "probid": "282A",
    "subid": "48554907"
  },
  "lines": [
    {
      "line": 0,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 1,
      "text": "declare integers t and s where s = 0",
      "code": "int t , s = 0 ;",
      "indent": 1
    },
    {
      "line": 2,
      "text": "create character array x with 10 elements",
      "code": "char x [ 10 ] ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "read t",
      "code": "cin >> t ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "for i = 1 to t inclusive",
      "code": "for ( int i = 1 ; i <= t ; i ++ )",
      "indent": 1
    },
    {
      "line": 5,
      "text": "read x",
      "code": "cin >> x ;",
      "indent": 2
    },
    {
      "line": 6,
      "text": "if x is \" X + + \" or \" + + X \" , increment s",
      "code": "if ( strcmp ( x , \" X++ \" ) == 0 || strcmp ( x , \" ++X \" ) == 0 )",
      "indent": 2
    },
    {
      "line": 7,
      "text": "increase s by 1",
      "code": "s += 1 ;",
      "indent": 3
    },
    {
      "line": 8,
      "text": "else if x is \" X - - \" or \" - - X \" , decrement s",
      "code": "else if ( strcmp ( x , \" X-- \" ) || strcmp ( x , \" --X \" ) )",
      "indent": 2
    },
    {
      "line": 9,
      "text": "decrease s by 1",
      "code": "s -= 1 ;",
      "indent": 3
    },
    {
      "line": 10,
      "text": "assign value of s to s",
      "code": "s = s ;",
      "indent": 2
    },
    {
      "line": 11,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 12,
      "text": "print s",
      "code": "cout << s << endl ;",
      "indent": 1
    },
    {
      "line": 13,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 14,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        6
      ],
      "mod_code": [
        "if ( x == \" X \" || x == \" + \" || x == \" + \" ) s ++ ;"
      ],
      "err_line": 8,
      "err_msg": "‘else’ without a previous ‘if’"
    },
    {
      "mod_line": [
        2
      ],
      "mod_code": [
        "char a [ 10 ] ;"
      ],
      "err_line": 5,
      "err_msg": "‘x’ was not declared in this scope"
    },
    {
      "mod_line": [
        3
      ],
      "mod_code": [
        "cin . get ( t ) ;"
      ],
      "err_line": 3,
      "err_msg": "invalid initialization of non-const reference of type ‘std::basic_istream<char>::char_type& {aka char&}’ from an rvalue of type ‘std::basic_istream<char>::char_type {aka char}’"
    },
    {
      "mod_line": [
        4
      ],
      "mod_code": [
        "for ( i = 1 ; i <= t ; i ++ )"
      ],
      "err_line": 4,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        6
      ],
      "mod_code": [
        "if ( x == \" X \" || x == \" + \" ) s ++ ;"
      ],
      "err_line": 8,
      "err_msg": "‘else’ without a previous ‘if’"
    },
    {
      "mod_line": [
        10
      ],
      "mod_code": [
        "* s = s ;"
      ],
      "err_line": 10,
      "err_msg": "invalid type argument of unary ‘*’ (have ‘int’)"
    },
    {
      "mod_line": [
        6,
        8
      ],
      "mod_code": [
        "if ( x == \" X \" || x == \" + \" || x == \" + \" ) s ++ ;",
        "else if ( x == \" X \" || x == \" - \" || x == \" - \" ) s -- ;"
      ],
      "err_line": 8,
      "err_msg": "‘else’ without a previous ‘if’"
    },
    {
      "mod_line": [
        6,
        8,
        2
      ],
      "mod_code": [
        "if ( x == \" X \" || x == \" + \" || x == \" + \" ) s ++ ;",
        "else if ( x == \" X \" || x == \" - \" || x == \" - \" ) s -- ;",
        "char a [ 10 ] ;"
      ],
      "err_line": 5,
      "err_msg": "‘x’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        8,
        2,
        4
      ],
      "mod_code": [
        "if ( x == \" X \" || x == \" + \" || x == \" + \" ) s ++ ;",
        "else if ( x == \" X \" || x == \" - \" || x == \" - \" ) s -- ;",
        "char a [ 10 ] ;",
        "for ( i = 1 ; i <= t ; i ++ )"
      ],
      "err_line": 4,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        8,
        2,
        10
      ],
      "mod_code": [
        "if ( x == \" X \" || x == \" + \" || x == \" + \" ) s ++ ;",
        "else if ( x == \" X \" || x == \" - \" || x == \" - \" ) s -- ;",
        "char a [ 10 ] ;",
        "* s = s ;"
      ],
      "err_line": 5,
      "err_msg": "‘x’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        8,
        2,
        5
      ],
      "mod_code": [
        "if ( x == \" X \" || x == \" + \" || x == \" + \" ) s ++ ;",
        "else if ( x == \" X \" || x == \" - \" || x == \" - \" ) s -- ;",
        "char a [ 10 ] ;",
        "cout << x << endl ;"
      ],
      "err_line": 5,
      "err_msg": "‘x’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        8,
        4
      ],
      "mod_code": [
        "if ( x == \" X \" || x == \" + \" || x == \" + \" ) s ++ ;",
        "else if ( x == \" X \" || x == \" - \" || x == \" - \" ) s -- ;",
        "for ( i = 1 ; i <= t ; i ++ )"
      ],
      "err_line": 4,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        8,
        4,
        10
      ],
      "mod_code": [
        "if ( x == \" X \" || x == \" + \" || x == \" + \" ) s ++ ;",
        "else if ( x == \" X \" || x == \" - \" || x == \" - \" ) s -- ;",
        "for ( i = 1 ; i <= t ; i ++ )",
        "* s = s ;"
      ],
      "err_line": 4,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        8,
        4,
        5
      ],
      "mod_code": [
        "if ( x == \" X \" || x == \" + \" || x == \" + \" ) s ++ ;",
        "else if ( x == \" X \" || x == \" - \" || x == \" - \" ) s -- ;",
        "for ( i = 1 ; i <= t ; i ++ )",
        "cout << x << endl ;"
      ],
      "err_line": 4,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        8,
        10
      ],
      "mod_code": [
        "if ( x == \" X \" || x == \" + \" || x == \" + \" ) s ++ ;",
        "else if ( x == \" X \" || x == \" - \" || x == \" - \" ) s -- ;",
        "* s = s ;"
      ],
      "err_line": 8,
      "err_msg": "‘else’ without a previous ‘if’"
    },
    {
      "mod_line": [
        6,
        8,
        10,
        5
      ],
      "mod_code": [
        "if ( x == \" X \" || x == \" + \" || x == \" + \" ) s ++ ;",
        "else if ( x == \" X \" || x == \" - \" || x == \" - \" ) s -- ;",
        "* s = s ;",
        "cout << x << endl ;"
      ],
      "err_line": 8,
      "err_msg": "‘else’ without a previous ‘if’"
    },
    {
      "mod_line": [
        6,
        8,
        5
      ],
      "mod_code": [
        "if ( x == \" X \" || x == \" + \" || x == \" + \" ) s ++ ;",
        "else if ( x == \" X \" || x == \" - \" || x == \" - \" ) s -- ;",
        "cout << x << endl ;"
      ],
      "err_line": 8,
      "err_msg": "‘else’ without a previous ‘if’"
    },
    {
      "mod_line": [
        6,
        2
      ],
      "mod_code": [
        "if ( x == \" X \" || x == \" + \" || x == \" + \" ) s ++ ;",
        "char a [ 10 ] ;"
      ],
      "err_line": 5,
      "err_msg": "‘x’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        2,
        4
      ],
      "mod_code": [
        "if ( x == \" X \" || x == \" + \" || x == \" + \" ) s ++ ;",
        "char a [ 10 ] ;",
        "for ( i = 1 ; i <= t ; i ++ )"
      ],
      "err_line": 4,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        2,
        4,
        10
      ],
      "mod_code": [
        "if ( x == \" X \" || x == \" + \" || x == \" + \" ) s ++ ;",
        "char a [ 10 ] ;",
        "for ( i = 1 ; i <= t ; i ++ )",
        "* s = s ;"
      ],
      "err_line": 4,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        2,
        4,
        5
      ],
      "mod_code": [
        "if ( x == \" X \" || x == \" + \" || x == \" + \" ) s ++ ;",
        "char a [ 10 ] ;",
        "for ( i = 1 ; i <= t ; i ++ )",
        "cout << x << endl ;"
      ],
      "err_line": 4,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        2,
        10
      ],
      "mod_code": [
        "if ( x == \" X \" || x == \" + \" || x == \" + \" ) s ++ ;",
        "char a [ 10 ] ;",
        "* s = s ;"
      ],
      "err_line": 5,
      "err_msg": "‘x’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        2,
        10,
        5
      ],
      "mod_code": [
        "if ( x == \" X \" || x == \" + \" || x == \" + \" ) s ++ ;",
        "char a [ 10 ] ;",
        "* s = s ;",
        "cout << x << endl ;"
      ],
      "err_line": 5,
      "err_msg": "‘x’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        2,
        5
      ],
      "mod_code": [
        "if ( x == \" X \" || x == \" + \" || x == \" + \" ) s ++ ;",
        "char a [ 10 ] ;",
        "cout << x << endl ;"
      ],
      "err_line": 5,
      "err_msg": "‘x’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        4
      ],
      "mod_code": [
        "if ( x == \" X \" || x == \" + \" || x == \" + \" ) s ++ ;",
        "for ( i = 1 ; i <= t ; i ++ )"
      ],
      "err_line": 4,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        4,
        10
      ],
      "mod_code": [
        "if ( x == \" X \" || x == \" + \" || x == \" + \" ) s ++ ;",
        "for ( i = 1 ; i <= t ; i ++ )",
        "* s = s ;"
      ],
      "err_line": 4,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        4,
        10,
        5
      ],
      "mod_code": [
        "if ( x == \" X \" || x == \" + \" || x == \" + \" ) s ++ ;",
        "for ( i = 1 ; i <= t ; i ++ )",
        "* s = s ;",
        "cout << x << endl ;"
      ],
      "err_line": 4,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        4,
        5
      ],
      "mod_code": [
        "if ( x == \" X \" || x == \" + \" || x == \" + \" ) s ++ ;",
        "for ( i = 1 ; i <= t ; i ++ )",
        "cout << x << endl ;"
      ],
      "err_line": 4,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        10
      ],
      "mod_code": [
        "if ( x == \" X \" || x == \" + \" || x == \" + \" ) s ++ ;",
        "* s = s ;"
      ],
      "err_line": 8,
      "err_msg": "‘else’ without a previous ‘if’"
    },
    {
      "mod_line": [
        6,
        10,
        5
      ],
      "mod_code": [
        "if ( x == \" X \" || x == \" + \" || x == \" + \" ) s ++ ;",
        "* s = s ;",
        "cout << x << endl ;"
      ],
      "err_line": 8,
      "err_msg": "‘else’ without a previous ‘if’"
    },
    {
      "mod_line": [
        6,
        5
      ],
      "mod_code": [
        "if ( x == \" X \" || x == \" + \" || x == \" + \" ) s ++ ;",
        "cout << x << endl ;"
      ],
      "err_line": 8,
      "err_msg": "‘else’ without a previous ‘if’"
    },
    {
      "mod_line": [
        8,
        2
      ],
      "mod_code": [
        "else if ( x == \" X \" || x == \" - \" || x == \" - \" ) s -- ;",
        "char a [ 10 ] ;"
      ],
      "err_line": 5,
      "err_msg": "‘x’ was not declared in this scope"
    },
    {
      "mod_line": [
        8,
        2,
        4
      ],
      "mod_code": [
        "else if ( x == \" X \" || x == \" - \" || x == \" - \" ) s -- ;",
        "char a [ 10 ] ;",
        "for ( i = 1 ; i <= t ; i ++ )"
      ],
      "err_line": 4,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        8,
        2,
        4,
        10
      ],
      "mod_code": [
        "else if ( x == \" X \" || x == \" - \" || x == \" - \" ) s -- ;",
        "char a [ 10 ] ;",
        "for ( i = 1 ; i <= t ; i ++ )",
        "* s = s ;"
      ],
      "err_line": 4,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        8,
        2,
        4,
        5
      ],
      "mod_code": [
        "else if ( x == \" X \" || x == \" - \" || x == \" - \" ) s -- ;",
        "char a [ 10 ] ;",
        "for ( i = 1 ; i <= t ; i ++ )",
        "cout << x << endl ;"
      ],
      "err_line": 4,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        8,
        2,
        10
      ],
      "mod_code": [
        "else if ( x == \" X \" || x == \" - \" || x == \" - \" ) s -- ;",
        "char a [ 10 ] ;",
        "* s = s ;"
      ],
      "err_line": 5,
      "err_msg": "‘x’ was not declared in this scope"
    },
    {
      "mod_line": [
        8,
        2,
        10,
        5
      ],
      "mod_code": [
        "else if ( x == \" X \" || x == \" - \" || x == \" - \" ) s -- ;",
        "char a [ 10 ] ;",
        "* s = s ;",
        "cout << x << endl ;"
      ],
      "err_line": 5,
      "err_msg": "‘x’ was not declared in this scope"
    },
    {
      "mod_line": [
        8,
        2,
        5
      ],
      "mod_code": [
        "else if ( x == \" X \" || x == \" - \" || x == \" - \" ) s -- ;",
        "char a [ 10 ] ;",
        "cout << x << endl ;"
      ],
      "err_line": 5,
      "err_msg": "‘x’ was not declared in this scope"
    },
    {
      "mod_line": [
        8,
        4
      ],
      "mod_code": [
        "else if ( x == \" X \" || x == \" - \" || x == \" - \" ) s -- ;",
        "for ( i = 1 ; i <= t ; i ++ )"
      ],
      "err_line": 4,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        8,
        4,
        10
      ],
      "mod_code": [
        "else if ( x == \" X \" || x == \" - \" || x == \" - \" ) s -- ;",
        "for ( i = 1 ; i <= t ; i ++ )",
        "* s = s ;"
      ],
      "err_line": 4,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        8,
        4,
        10,
        5
      ],
      "mod_code": [
        "else if ( x == \" X \" || x == \" - \" || x == \" - \" ) s -- ;",
        "for ( i = 1 ; i <= t ; i ++ )",
        "* s = s ;",
        "cout << x << endl ;"
      ],
      "err_line": 4,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        8,
        4,
        5
      ],
      "mod_code": [
        "else if ( x == \" X \" || x == \" - \" || x == \" - \" ) s -- ;",
        "for ( i = 1 ; i <= t ; i ++ )",
        "cout << x << endl ;"
      ],
      "err_line": 4,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        8,
        10
      ],
      "mod_code": [
        "else if ( x == \" X \" || x == \" - \" || x == \" - \" ) s -- ;",
        "* s = s ;"
      ],
      "err_line": 10,
      "err_msg": "invalid type argument of unary ‘*’ (have ‘int’)"
    },
    {
      "mod_line": [
        8,
        10,
        5
      ],
      "mod_code": [
        "else if ( x == \" X \" || x == \" - \" || x == \" - \" ) s -- ;",
        "* s = s ;",
        "cout << x << endl ;"
      ],
      "err_line": 10,
      "err_msg": "invalid type argument of unary ‘*’ (have ‘int’)"
    },
    {
      "mod_line": [
        2,
        4
      ],
      "mod_code": [
        "char a [ 10 ] ;",
        "for ( i = 1 ; i <= t ; i ++ )"
      ],
      "err_line": 4,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        2,
        4,
        10
      ],
      "mod_code": [
        "char a [ 10 ] ;",
        "for ( i = 1 ; i <= t ; i ++ )",
        "* s = s ;"
      ],
      "err_line": 4,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        2,
        4,
        10,
        5
      ],
      "mod_code": [
        "char a [ 10 ] ;",
        "for ( i = 1 ; i <= t ; i ++ )",
        "* s = s ;",
        "cout << x << endl ;"
      ],
      "err_line": 4,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        2,
        4,
        5
      ],
      "mod_code": [
        "char a [ 10 ] ;",
        "for ( i = 1 ; i <= t ; i ++ )",
        "cout << x << endl ;"
      ],
      "err_line": 4,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        2,
        10
      ],
      "mod_code": [
        "char a [ 10 ] ;",
        "* s = s ;"
      ],
      "err_line": 5,
      "err_msg": "‘x’ was not declared in this scope"
    },
    {
      "mod_line": [
        2,
        10,
        5
      ],
      "mod_code": [
        "char a [ 10 ] ;",
        "* s = s ;",
        "cout << x << endl ;"
      ],
      "err_line": 5,
      "err_msg": "‘x’ was not declared in this scope"
    },
    {
      "mod_line": [
        2,
        5
      ],
      "mod_code": [
        "char a [ 10 ] ;",
        "cout << x << endl ;"
      ],
      "err_line": 5,
      "err_msg": "‘x’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        10
      ],
      "mod_code": [
        "for ( i = 1 ; i <= t ; i ++ )",
        "* s = s ;"
      ],
      "err_line": 4,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        10,
        5
      ],
      "mod_code": [
        "for ( i = 1 ; i <= t ; i ++ )",
        "* s = s ;",
        "cout << x << endl ;"
      ],
      "err_line": 4,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        5
      ],
      "mod_code": [
        "for ( i = 1 ; i <= t ; i ++ )",
        "cout << x << endl ;"
      ],
      "err_line": 4,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        10,
        5
      ],
      "mod_code": [
        "* s = s ;",
        "cout << x << endl ;"
      ],
      "err_line": 10,
      "err_msg": "invalid type argument of unary ‘*’ (have ‘int’)"
    }
  ]
}