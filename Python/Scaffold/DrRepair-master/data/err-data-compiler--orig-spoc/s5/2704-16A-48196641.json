{
  "meta": {
    "index": 2704,
    "hitid": "36MUZ9VAE6WY1FF2BN2MRO9P8RXDEQ",
    "workerid": "A1APYLD4DUK33J",
    "probid": "16A",
    "subid": "48196641"
  },
  "lines": [
    {
      "line": 0,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 1,
      "text": "create integer n with n = 0",
      "code": "int n = 0 ;",
      "indent": 1
    },
    {
      "line": 2,
      "text": "create integer m with m = 0",
      "code": "int m = 0 ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "read n read m",
      "code": "cin >> n >> m ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "create integer i with i = 0",
      "code": "int i = 0 ;",
      "indent": 1
    },
    {
      "line": 5,
      "text": "create integer j with j = 0",
      "code": "int j = 0 ;",
      "indent": 1
    },
    {
      "line": 6,
      "text": "create boolean ok with ok = true",
      "code": "bool ok = true ;",
      "indent": 1
    },
    {
      "line": 7,
      "text": "create integer last_stripe with last_stripe = - 1",
      "code": "int last_stripe = - 1 ;",
      "indent": 1
    },
    {
      "line": 8,
      "text": "while i is less than n and ok",
      "code": "while ( i < n && ok )",
      "indent": 1
    },
    {
      "line": 9,
      "text": "create character x",
      "code": "char x ;",
      "indent": 2
    },
    {
      "line": 10,
      "text": "read x",
      "code": "cin >> x ;",
      "indent": 2
    },
    {
      "line": 11,
      "text": "set ok to last_stripe is not equal to x",
      "code": "ok = last_stripe != x ;",
      "indent": 2
    },
    {
      "line": 12,
      "text": "set last_stripe to x",
      "code": "last_stripe = x ;",
      "indent": 2
    },
    {
      "line": 13,
      "text": "create integer current_stripe with current_stripe = x",
      "code": "int current_stripe = x ;",
      "indent": 2
    },
    {
      "line": 14,
      "text": "set j to 1",
      "code": "j = 1 ;",
      "indent": 2
    },
    {
      "line": 15,
      "text": "while j is less than m and ok",
      "code": "while ( j < m && ok )",
      "indent": 2
    },
    {
      "line": 16,
      "text": "read x",
      "code": "cin >> x ;",
      "indent": 3
    },
    {
      "line": 17,
      "text": "set ok to current stripe is equal to x",
      "code": "ok = current_stripe == x ;",
      "indent": 3
    },
    {
      "line": 18,
      "text": "increment j",
      "code": "j ++ ;",
      "indent": 3
    },
    {
      "line": 19,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 20,
      "text": "increment i",
      "code": "i ++ ;",
      "indent": 2
    },
    {
      "line": 21,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 22,
      "text": "if ok is true",
      "code": "if ( ok )",
      "indent": 1
    },
    {
      "line": 23,
      "text": "print \" YES \" print newline",
      "code": "cout << \" YES \" << endl ;",
      "indent": 2
    },
    {
      "line": 24,
      "text": "else",
      "code": "else",
      "indent": 1
    },
    {
      "line": 25,
      "text": "print \" NO \" print newline",
      "code": "cout << \" NO \" << endl ;",
      "indent": 2
    },
    {
      "line": 26,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 27,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 28,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        1
      ],
      "mod_code": [
        "int n , n ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int n’"
    },
    {
      "mod_line": [
        3
      ],
      "mod_code": [
        "cin >> n read m ;"
      ],
      "err_line": 3,
      "err_msg": "expected ‘;’ before ‘read’"
    },
    {
      "mod_line": [
        5
      ],
      "mod_code": [
        "int * j = 0 ;"
      ],
      "err_line": 14,
      "err_msg": "invalid conversion from ‘int’ to ‘int*’ [-fpermissive]"
    },
    {
      "mod_line": [
        9
      ],
      "mod_code": [
        "char x [ 8 ] ;"
      ],
      "err_line": 11,
      "err_msg": "ISO C++ forbids comparison between pointer and integer [-fpermissive]"
    },
    {
      "mod_line": [
        22
      ],
      "mod_code": [
        "if ( ok ) return ;"
      ],
      "err_line": 22,
      "err_msg": "return-statement with no value, in function returning ‘int’ [-fpermissive]"
    },
    {
      "mod_line": [
        17,
        22
      ],
      "mod_code": [
        "ok = x ;",
        "if ( ok ) return ;"
      ],
      "err_line": 22,
      "err_msg": "return-statement with no value, in function returning ‘int’ [-fpermissive]"
    },
    {
      "mod_line": [
        17,
        22,
        10
      ],
      "mod_code": [
        "ok = x ;",
        "if ( ok ) return ;",
        "cout << x << endl ;"
      ],
      "err_line": 22,
      "err_msg": "return-statement with no value, in function returning ‘int’ [-fpermissive]"
    },
    {
      "mod_line": [
        17,
        22,
        10,
        5
      ],
      "mod_code": [
        "ok = x ;",
        "if ( ok ) return ;",
        "cout << x << endl ;",
        "int * j = 0 ;"
      ],
      "err_line": 14,
      "err_msg": "invalid conversion from ‘int’ to ‘int*’ [-fpermissive]"
    },
    {
      "mod_line": [
        17,
        22,
        10,
        3
      ],
      "mod_code": [
        "ok = x ;",
        "if ( ok ) return ;",
        "cout << x << endl ;",
        "cin >> n read m ;"
      ],
      "err_line": 3,
      "err_msg": "expected ‘;’ before ‘read’"
    },
    {
      "mod_line": [
        17,
        22,
        10,
        12
      ],
      "mod_code": [
        "ok = x ;",
        "if ( ok ) return ;",
        "cout << x << endl ;",
        "int last_stripe = x ;"
      ],
      "err_line": 22,
      "err_msg": "return-statement with no value, in function returning ‘int’ [-fpermissive]"
    },
    {
      "mod_line": [
        17,
        22,
        5
      ],
      "mod_code": [
        "ok = x ;",
        "if ( ok ) return ;",
        "int * j = 0 ;"
      ],
      "err_line": 14,
      "err_msg": "invalid conversion from ‘int’ to ‘int*’ [-fpermissive]"
    },
    {
      "mod_line": [
        17,
        22,
        5,
        3
      ],
      "mod_code": [
        "ok = x ;",
        "if ( ok ) return ;",
        "int * j = 0 ;",
        "cin >> n read m ;"
      ],
      "err_line": 3,
      "err_msg": "expected ‘;’ before ‘read’"
    },
    {
      "mod_line": [
        17,
        22,
        5,
        12
      ],
      "mod_code": [
        "ok = x ;",
        "if ( ok ) return ;",
        "int * j = 0 ;",
        "int last_stripe = x ;"
      ],
      "err_line": 14,
      "err_msg": "invalid conversion from ‘int’ to ‘int*’ [-fpermissive]"
    },
    {
      "mod_line": [
        17,
        22,
        3
      ],
      "mod_code": [
        "ok = x ;",
        "if ( ok ) return ;",
        "cin >> n read m ;"
      ],
      "err_line": 3,
      "err_msg": "expected ‘;’ before ‘read’"
    },
    {
      "mod_line": [
        17,
        22,
        3,
        12
      ],
      "mod_code": [
        "ok = x ;",
        "if ( ok ) return ;",
        "cin >> n read m ;",
        "int last_stripe = x ;"
      ],
      "err_line": 3,
      "err_msg": "expected ‘;’ before ‘read’"
    },
    {
      "mod_line": [
        17,
        22,
        12
      ],
      "mod_code": [
        "ok = x ;",
        "if ( ok ) return ;",
        "int last_stripe = x ;"
      ],
      "err_line": 22,
      "err_msg": "return-statement with no value, in function returning ‘int’ [-fpermissive]"
    },
    {
      "mod_line": [
        17,
        10,
        5
      ],
      "mod_code": [
        "ok = x ;",
        "cout << x << endl ;",
        "int * j = 0 ;"
      ],
      "err_line": 14,
      "err_msg": "invalid conversion from ‘int’ to ‘int*’ [-fpermissive]"
    },
    {
      "mod_line": [
        17,
        10,
        5,
        3
      ],
      "mod_code": [
        "ok = x ;",
        "cout << x << endl ;",
        "int * j = 0 ;",
        "cin >> n read m ;"
      ],
      "err_line": 3,
      "err_msg": "expected ‘;’ before ‘read’"
    },
    {
      "mod_line": [
        17,
        10,
        5,
        12
      ],
      "mod_code": [
        "ok = x ;",
        "cout << x << endl ;",
        "int * j = 0 ;",
        "int last_stripe = x ;"
      ],
      "err_line": 14,
      "err_msg": "invalid conversion from ‘int’ to ‘int*’ [-fpermissive]"
    },
    {
      "mod_line": [
        17,
        10,
        3
      ],
      "mod_code": [
        "ok = x ;",
        "cout << x << endl ;",
        "cin >> n read m ;"
      ],
      "err_line": 3,
      "err_msg": "expected ‘;’ before ‘read’"
    },
    {
      "mod_line": [
        17,
        10,
        3,
        12
      ],
      "mod_code": [
        "ok = x ;",
        "cout << x << endl ;",
        "cin >> n read m ;",
        "int last_stripe = x ;"
      ],
      "err_line": 3,
      "err_msg": "expected ‘;’ before ‘read’"
    },
    {
      "mod_line": [
        17,
        5
      ],
      "mod_code": [
        "ok = x ;",
        "int * j = 0 ;"
      ],
      "err_line": 14,
      "err_msg": "invalid conversion from ‘int’ to ‘int*’ [-fpermissive]"
    },
    {
      "mod_line": [
        17,
        5,
        3
      ],
      "mod_code": [
        "ok = x ;",
        "int * j = 0 ;",
        "cin >> n read m ;"
      ],
      "err_line": 3,
      "err_msg": "expected ‘;’ before ‘read’"
    },
    {
      "mod_line": [
        17,
        5,
        3,
        12
      ],
      "mod_code": [
        "ok = x ;",
        "int * j = 0 ;",
        "cin >> n read m ;",
        "int last_stripe = x ;"
      ],
      "err_line": 3,
      "err_msg": "expected ‘;’ before ‘read’"
    },
    {
      "mod_line": [
        17,
        5,
        12
      ],
      "mod_code": [
        "ok = x ;",
        "int * j = 0 ;",
        "int last_stripe = x ;"
      ],
      "err_line": 14,
      "err_msg": "invalid conversion from ‘int’ to ‘int*’ [-fpermissive]"
    },
    {
      "mod_line": [
        17,
        3
      ],
      "mod_code": [
        "ok = x ;",
        "cin >> n read m ;"
      ],
      "err_line": 3,
      "err_msg": "expected ‘;’ before ‘read’"
    },
    {
      "mod_line": [
        17,
        3,
        12
      ],
      "mod_code": [
        "ok = x ;",
        "cin >> n read m ;",
        "int last_stripe = x ;"
      ],
      "err_line": 3,
      "err_msg": "expected ‘;’ before ‘read’"
    },
    {
      "mod_line": [
        22,
        10
      ],
      "mod_code": [
        "if ( ok ) return ;",
        "cout << x << endl ;"
      ],
      "err_line": 22,
      "err_msg": "return-statement with no value, in function returning ‘int’ [-fpermissive]"
    },
    {
      "mod_line": [
        22,
        10,
        5
      ],
      "mod_code": [
        "if ( ok ) return ;",
        "cout << x << endl ;",
        "int * j = 0 ;"
      ],
      "err_line": 14,
      "err_msg": "invalid conversion from ‘int’ to ‘int*’ [-fpermissive]"
    },
    {
      "mod_line": [
        22,
        10,
        5,
        3
      ],
      "mod_code": [
        "if ( ok ) return ;",
        "cout << x << endl ;",
        "int * j = 0 ;",
        "cin >> n read m ;"
      ],
      "err_line": 3,
      "err_msg": "expected ‘;’ before ‘read’"
    },
    {
      "mod_line": [
        22,
        10,
        5,
        12
      ],
      "mod_code": [
        "if ( ok ) return ;",
        "cout << x << endl ;",
        "int * j = 0 ;",
        "int last_stripe = x ;"
      ],
      "err_line": 14,
      "err_msg": "invalid conversion from ‘int’ to ‘int*’ [-fpermissive]"
    },
    {
      "mod_line": [
        22,
        10,
        3
      ],
      "mod_code": [
        "if ( ok ) return ;",
        "cout << x << endl ;",
        "cin >> n read m ;"
      ],
      "err_line": 3,
      "err_msg": "expected ‘;’ before ‘read’"
    },
    {
      "mod_line": [
        22,
        10,
        3,
        12
      ],
      "mod_code": [
        "if ( ok ) return ;",
        "cout << x << endl ;",
        "cin >> n read m ;",
        "int last_stripe = x ;"
      ],
      "err_line": 3,
      "err_msg": "expected ‘;’ before ‘read’"
    },
    {
      "mod_line": [
        22,
        10,
        12
      ],
      "mod_code": [
        "if ( ok ) return ;",
        "cout << x << endl ;",
        "int last_stripe = x ;"
      ],
      "err_line": 22,
      "err_msg": "return-statement with no value, in function returning ‘int’ [-fpermissive]"
    },
    {
      "mod_line": [
        22,
        5
      ],
      "mod_code": [
        "if ( ok ) return ;",
        "int * j = 0 ;"
      ],
      "err_line": 14,
      "err_msg": "invalid conversion from ‘int’ to ‘int*’ [-fpermissive]"
    },
    {
      "mod_line": [
        22,
        5,
        3
      ],
      "mod_code": [
        "if ( ok ) return ;",
        "int * j = 0 ;",
        "cin >> n read m ;"
      ],
      "err_line": 3,
      "err_msg": "expected ‘;’ before ‘read’"
    },
    {
      "mod_line": [
        22,
        5,
        3,
        12
      ],
      "mod_code": [
        "if ( ok ) return ;",
        "int * j = 0 ;",
        "cin >> n read m ;",
        "int last_stripe = x ;"
      ],
      "err_line": 3,
      "err_msg": "expected ‘;’ before ‘read’"
    },
    {
      "mod_line": [
        22,
        5,
        12
      ],
      "mod_code": [
        "if ( ok ) return ;",
        "int * j = 0 ;",
        "int last_stripe = x ;"
      ],
      "err_line": 14,
      "err_msg": "invalid conversion from ‘int’ to ‘int*’ [-fpermissive]"
    },
    {
      "mod_line": [
        22,
        3
      ],
      "mod_code": [
        "if ( ok ) return ;",
        "cin >> n read m ;"
      ],
      "err_line": 3,
      "err_msg": "expected ‘;’ before ‘read’"
    },
    {
      "mod_line": [
        22,
        3,
        12
      ],
      "mod_code": [
        "if ( ok ) return ;",
        "cin >> n read m ;",
        "int last_stripe = x ;"
      ],
      "err_line": 3,
      "err_msg": "expected ‘;’ before ‘read’"
    },
    {
      "mod_line": [
        22,
        12
      ],
      "mod_code": [
        "if ( ok ) return ;",
        "int last_stripe = x ;"
      ],
      "err_line": 22,
      "err_msg": "return-statement with no value, in function returning ‘int’ [-fpermissive]"
    },
    {
      "mod_line": [
        10,
        5
      ],
      "mod_code": [
        "cout << x << endl ;",
        "int * j = 0 ;"
      ],
      "err_line": 14,
      "err_msg": "invalid conversion from ‘int’ to ‘int*’ [-fpermissive]"
    },
    {
      "mod_line": [
        10,
        5,
        3
      ],
      "mod_code": [
        "cout << x << endl ;",
        "int * j = 0 ;",
        "cin >> n read m ;"
      ],
      "err_line": 3,
      "err_msg": "expected ‘;’ before ‘read’"
    },
    {
      "mod_line": [
        10,
        5,
        3,
        12
      ],
      "mod_code": [
        "cout << x << endl ;",
        "int * j = 0 ;",
        "cin >> n read m ;",
        "int last_stripe = x ;"
      ],
      "err_line": 3,
      "err_msg": "expected ‘;’ before ‘read’"
    },
    {
      "mod_line": [
        10,
        5,
        12
      ],
      "mod_code": [
        "cout << x << endl ;",
        "int * j = 0 ;",
        "int last_stripe = x ;"
      ],
      "err_line": 14,
      "err_msg": "invalid conversion from ‘int’ to ‘int*’ [-fpermissive]"
    },
    {
      "mod_line": [
        10,
        3
      ],
      "mod_code": [
        "cout << x << endl ;",
        "cin >> n read m ;"
      ],
      "err_line": 3,
      "err_msg": "expected ‘;’ before ‘read’"
    },
    {
      "mod_line": [
        10,
        3,
        12
      ],
      "mod_code": [
        "cout << x << endl ;",
        "cin >> n read m ;",
        "int last_stripe = x ;"
      ],
      "err_line": 3,
      "err_msg": "expected ‘;’ before ‘read’"
    },
    {
      "mod_line": [
        5,
        3
      ],
      "mod_code": [
        "int * j = 0 ;",
        "cin >> n read m ;"
      ],
      "err_line": 3,
      "err_msg": "expected ‘;’ before ‘read’"
    },
    {
      "mod_line": [
        5,
        3,
        12
      ],
      "mod_code": [
        "int * j = 0 ;",
        "cin >> n read m ;",
        "int last_stripe = x ;"
      ],
      "err_line": 3,
      "err_msg": "expected ‘;’ before ‘read’"
    },
    {
      "mod_line": [
        5,
        12
      ],
      "mod_code": [
        "int * j = 0 ;",
        "int last_stripe = x ;"
      ],
      "err_line": 14,
      "err_msg": "invalid conversion from ‘int’ to ‘int*’ [-fpermissive]"
    },
    {
      "mod_line": [
        3,
        12
      ],
      "mod_code": [
        "cin >> n read m ;",
        "int last_stripe = x ;"
      ],
      "err_line": 3,
      "err_msg": "expected ‘;’ before ‘read’"
    }
  ]
}