{
  "meta": {
    "index": 1658,
    "hitid": "30UZJB2POH60N4KC7X37ALH04L953J",
    "workerid": "AIWEXPJAU66D9",
    "probid": "17A",
    "subid": "48795079"
  },
  "lines": [
    {
      "line": 0,
      "text": "boolean function c with integer arguments a",
      "code": "bool c ( int a )",
      "indent": 0
    },
    {
      "line": 1,
      "text": "if a is less than 2 return false",
      "code": "if ( a < 2 ) return false ;",
      "indent": 1
    },
    {
      "line": 2,
      "text": "for integer i = 2 to i * i < = a",
      "code": "for ( int i = 2 ; i * i <= a ; ++ i )",
      "indent": 1
    },
    {
      "line": 3,
      "text": "if a % i is equal to 0 return false",
      "code": "if ( a % i == 0 ) return false ;",
      "indent": 2
    },
    {
      "line": 4,
      "text": "return true",
      "code": "return true ;",
      "indent": 1
    },
    {
      "line": 5,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    },
    {
      "line": 6,
      "text": "let g be an array of integers of size 1000005",
      "code": "int g [ 1000005 ] ;",
      "indent": 0
    },
    {
      "line": 7,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 8,
      "text": "assign value 2 to the integer l",
      "code": "int l = 2 ;",
      "indent": 1
    },
    {
      "line": 9,
      "text": "for i = 0 to 1000 inclusive",
      "code": "for ( int i = 0 ; i <= 1000 ; ++ i )",
      "indent": 1
    },
    {
      "line": 10,
      "text": "if c ( i ) is true",
      "code": "if ( c ( i ) )",
      "indent": 2
    },
    {
      "line": 11,
      "text": "if l ! = 2 set g [ l + 1 + i ] = true",
      "code": "if ( l != 2 ) g [ l + 1 + i ] = true ;",
      "indent": 3
    },
    {
      "line": 12,
      "text": "assign value of i to the l",
      "code": "l = i ;",
      "indent": 3
    },
    {
      "line": 13,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 14,
      "text": "for i = 0 to 1000 inclusive",
      "code": "for ( int i = 0 ; i <= 1000 ; ++ i )",
      "indent": 1
    },
    {
      "line": 15,
      "text": "if c ( i ) is not true , set g [ i ] = false",
      "code": "if ( ! c ( i ) ) g [ i ] = false ;",
      "indent": 2
    },
    {
      "line": 16,
      "text": "n and k = integers",
      "code": "int n , k ;",
      "indent": 1
    },
    {
      "line": 17,
      "text": "read n and k",
      "code": "cin >> n >> k ;",
      "indent": 1
    },
    {
      "line": 18,
      "text": "assign value 0 to the integer kol",
      "code": "int kol = 0 ;",
      "indent": 1
    },
    {
      "line": 19,
      "text": "for integer i = 2 to n inclusive",
      "code": "for ( int i = 2 ; i <= n ; ++ i )",
      "indent": 1
    },
    {
      "line": 20,
      "text": "if g [ i ] is true , increment kol",
      "code": "if ( g [ i ] ) kol ++ ;",
      "indent": 2
    },
    {
      "line": 21,
      "text": "if kol > = k",
      "code": "if ( kol >= k )",
      "indent": 1
    },
    {
      "line": 22,
      "text": "print \" YES \\ n \"",
      "code": "cout << \" YES\\n \" ;",
      "indent": 2
    },
    {
      "line": 23,
      "text": "else",
      "code": "else",
      "indent": 1
    },
    {
      "line": 24,
      "text": "print \" NO \\ n \"",
      "code": "cout << \" NO\\n \" ;",
      "indent": 2
    },
    {
      "line": 25,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 26,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        0
      ],
      "mod_code": [
        "bool c ( int a ) ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        8
      ],
      "mod_code": [
        "l = 2 ;"
      ],
      "err_line": 8,
      "err_msg": "‘l’ was not declared in this scope"
    },
    {
      "mod_line": [
        9
      ],
      "mod_code": [
        "for ( i = 0 ; i <= 1000 ; i ++ )"
      ],
      "err_line": 9,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        12
      ],
      "mod_code": [
        "* l = i ;"
      ],
      "err_line": 12,
      "err_msg": "invalid type argument of unary ‘*’ (have ‘int’)"
    },
    {
      "mod_line": [
        14
      ],
      "mod_code": [
        "for ( i = 0 ; i <= 1000 ; i ++ )"
      ],
      "err_line": 14,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        18
      ],
      "mod_code": [
        "kol = 0 ;"
      ],
      "err_line": 18,
      "err_msg": "‘kol’ was not declared in this scope"
    },
    {
      "mod_line": [
        21
      ],
      "mod_code": [
        "if ( kol >= k ) k ++ ;"
      ],
      "err_line": 23,
      "err_msg": "‘else’ without a previous ‘if’"
    },
    {
      "mod_line": [
        14,
        8
      ],
      "mod_code": [
        "for ( i = 0 ; i <= 1000 ; i ++ )",
        "l = 2 ;"
      ],
      "err_line": 8,
      "err_msg": "‘l’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        8,
        9
      ],
      "mod_code": [
        "for ( i = 0 ; i <= 1000 ; i ++ )",
        "l = 2 ;",
        "for ( i = 0 ; i <= 1000 ; i ++ )"
      ],
      "err_line": 8,
      "err_msg": "‘l’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        8,
        9,
        0
      ],
      "mod_code": [
        "for ( i = 0 ; i <= 1000 ; i ++ )",
        "l = 2 ;",
        "for ( i = 0 ; i <= 1000 ; i ++ )",
        "bool c ( int a ) ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        14,
        8,
        9,
        18
      ],
      "mod_code": [
        "for ( i = 0 ; i <= 1000 ; i ++ )",
        "l = 2 ;",
        "for ( i = 0 ; i <= 1000 ; i ++ )",
        "kol = 0 ;"
      ],
      "err_line": 8,
      "err_msg": "‘l’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        8,
        9,
        21
      ],
      "mod_code": [
        "for ( i = 0 ; i <= 1000 ; i ++ )",
        "l = 2 ;",
        "for ( i = 0 ; i <= 1000 ; i ++ )",
        "if ( kol >= k ) k ++ ;"
      ],
      "err_line": 8,
      "err_msg": "‘l’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        8,
        0
      ],
      "mod_code": [
        "for ( i = 0 ; i <= 1000 ; i ++ )",
        "l = 2 ;",
        "bool c ( int a ) ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        14,
        8,
        0,
        18
      ],
      "mod_code": [
        "for ( i = 0 ; i <= 1000 ; i ++ )",
        "l = 2 ;",
        "bool c ( int a ) ;",
        "kol = 0 ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        14,
        8,
        0,
        21
      ],
      "mod_code": [
        "for ( i = 0 ; i <= 1000 ; i ++ )",
        "l = 2 ;",
        "bool c ( int a ) ;",
        "if ( kol >= k ) k ++ ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        14,
        8,
        18
      ],
      "mod_code": [
        "for ( i = 0 ; i <= 1000 ; i ++ )",
        "l = 2 ;",
        "kol = 0 ;"
      ],
      "err_line": 8,
      "err_msg": "‘l’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        8,
        18,
        21
      ],
      "mod_code": [
        "for ( i = 0 ; i <= 1000 ; i ++ )",
        "l = 2 ;",
        "kol = 0 ;",
        "if ( kol >= k ) k ++ ;"
      ],
      "err_line": 8,
      "err_msg": "‘l’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        8,
        21
      ],
      "mod_code": [
        "for ( i = 0 ; i <= 1000 ; i ++ )",
        "l = 2 ;",
        "if ( kol >= k ) k ++ ;"
      ],
      "err_line": 8,
      "err_msg": "‘l’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        9
      ],
      "mod_code": [
        "for ( i = 0 ; i <= 1000 ; i ++ )",
        "for ( i = 0 ; i <= 1000 ; i ++ )"
      ],
      "err_line": 9,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        9,
        0
      ],
      "mod_code": [
        "for ( i = 0 ; i <= 1000 ; i ++ )",
        "for ( i = 0 ; i <= 1000 ; i ++ )",
        "bool c ( int a ) ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        14,
        9,
        0,
        18
      ],
      "mod_code": [
        "for ( i = 0 ; i <= 1000 ; i ++ )",
        "for ( i = 0 ; i <= 1000 ; i ++ )",
        "bool c ( int a ) ;",
        "kol = 0 ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        14,
        9,
        0,
        21
      ],
      "mod_code": [
        "for ( i = 0 ; i <= 1000 ; i ++ )",
        "for ( i = 0 ; i <= 1000 ; i ++ )",
        "bool c ( int a ) ;",
        "if ( kol >= k ) k ++ ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        14,
        9,
        18
      ],
      "mod_code": [
        "for ( i = 0 ; i <= 1000 ; i ++ )",
        "for ( i = 0 ; i <= 1000 ; i ++ )",
        "kol = 0 ;"
      ],
      "err_line": 9,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        9,
        18,
        21
      ],
      "mod_code": [
        "for ( i = 0 ; i <= 1000 ; i ++ )",
        "for ( i = 0 ; i <= 1000 ; i ++ )",
        "kol = 0 ;",
        "if ( kol >= k ) k ++ ;"
      ],
      "err_line": 9,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        9,
        21
      ],
      "mod_code": [
        "for ( i = 0 ; i <= 1000 ; i ++ )",
        "for ( i = 0 ; i <= 1000 ; i ++ )",
        "if ( kol >= k ) k ++ ;"
      ],
      "err_line": 9,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        0
      ],
      "mod_code": [
        "for ( i = 0 ; i <= 1000 ; i ++ )",
        "bool c ( int a ) ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        14,
        0,
        18
      ],
      "mod_code": [
        "for ( i = 0 ; i <= 1000 ; i ++ )",
        "bool c ( int a ) ;",
        "kol = 0 ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        14,
        0,
        18,
        21
      ],
      "mod_code": [
        "for ( i = 0 ; i <= 1000 ; i ++ )",
        "bool c ( int a ) ;",
        "kol = 0 ;",
        "if ( kol >= k ) k ++ ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        14,
        0,
        21
      ],
      "mod_code": [
        "for ( i = 0 ; i <= 1000 ; i ++ )",
        "bool c ( int a ) ;",
        "if ( kol >= k ) k ++ ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        14,
        18
      ],
      "mod_code": [
        "for ( i = 0 ; i <= 1000 ; i ++ )",
        "kol = 0 ;"
      ],
      "err_line": 14,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        14,
        18,
        21
      ],
      "mod_code": [
        "for ( i = 0 ; i <= 1000 ; i ++ )",
        "kol = 0 ;",
        "if ( kol >= k ) k ++ ;"
      ],
      "err_line": 14,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        14,
        21
      ],
      "mod_code": [
        "for ( i = 0 ; i <= 1000 ; i ++ )",
        "if ( kol >= k ) k ++ ;"
      ],
      "err_line": 14,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        8,
        9
      ],
      "mod_code": [
        "l = 2 ;",
        "for ( i = 0 ; i <= 1000 ; i ++ )"
      ],
      "err_line": 8,
      "err_msg": "‘l’ was not declared in this scope"
    },
    {
      "mod_line": [
        8,
        9,
        0
      ],
      "mod_code": [
        "l = 2 ;",
        "for ( i = 0 ; i <= 1000 ; i ++ )",
        "bool c ( int a ) ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        8,
        9,
        0,
        18
      ],
      "mod_code": [
        "l = 2 ;",
        "for ( i = 0 ; i <= 1000 ; i ++ )",
        "bool c ( int a ) ;",
        "kol = 0 ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        8,
        9,
        0,
        21
      ],
      "mod_code": [
        "l = 2 ;",
        "for ( i = 0 ; i <= 1000 ; i ++ )",
        "bool c ( int a ) ;",
        "if ( kol >= k ) k ++ ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        8,
        9,
        18
      ],
      "mod_code": [
        "l = 2 ;",
        "for ( i = 0 ; i <= 1000 ; i ++ )",
        "kol = 0 ;"
      ],
      "err_line": 8,
      "err_msg": "‘l’ was not declared in this scope"
    },
    {
      "mod_line": [
        8,
        9,
        18,
        21
      ],
      "mod_code": [
        "l = 2 ;",
        "for ( i = 0 ; i <= 1000 ; i ++ )",
        "kol = 0 ;",
        "if ( kol >= k ) k ++ ;"
      ],
      "err_line": 8,
      "err_msg": "‘l’ was not declared in this scope"
    },
    {
      "mod_line": [
        8,
        9,
        21
      ],
      "mod_code": [
        "l = 2 ;",
        "for ( i = 0 ; i <= 1000 ; i ++ )",
        "if ( kol >= k ) k ++ ;"
      ],
      "err_line": 8,
      "err_msg": "‘l’ was not declared in this scope"
    },
    {
      "mod_line": [
        8,
        0
      ],
      "mod_code": [
        "l = 2 ;",
        "bool c ( int a ) ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        8,
        0,
        18
      ],
      "mod_code": [
        "l = 2 ;",
        "bool c ( int a ) ;",
        "kol = 0 ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        8,
        0,
        18,
        21
      ],
      "mod_code": [
        "l = 2 ;",
        "bool c ( int a ) ;",
        "kol = 0 ;",
        "if ( kol >= k ) k ++ ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        8,
        0,
        21
      ],
      "mod_code": [
        "l = 2 ;",
        "bool c ( int a ) ;",
        "if ( kol >= k ) k ++ ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        8,
        18
      ],
      "mod_code": [
        "l = 2 ;",
        "kol = 0 ;"
      ],
      "err_line": 8,
      "err_msg": "‘l’ was not declared in this scope"
    },
    {
      "mod_line": [
        8,
        18,
        21
      ],
      "mod_code": [
        "l = 2 ;",
        "kol = 0 ;",
        "if ( kol >= k ) k ++ ;"
      ],
      "err_line": 8,
      "err_msg": "‘l’ was not declared in this scope"
    },
    {
      "mod_line": [
        8,
        21
      ],
      "mod_code": [
        "l = 2 ;",
        "if ( kol >= k ) k ++ ;"
      ],
      "err_line": 8,
      "err_msg": "‘l’ was not declared in this scope"
    },
    {
      "mod_line": [
        9,
        0
      ],
      "mod_code": [
        "for ( i = 0 ; i <= 1000 ; i ++ )",
        "bool c ( int a ) ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        9,
        0,
        18
      ],
      "mod_code": [
        "for ( i = 0 ; i <= 1000 ; i ++ )",
        "bool c ( int a ) ;",
        "kol = 0 ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        9,
        0,
        18,
        21
      ],
      "mod_code": [
        "for ( i = 0 ; i <= 1000 ; i ++ )",
        "bool c ( int a ) ;",
        "kol = 0 ;",
        "if ( kol >= k ) k ++ ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        9,
        0,
        21
      ],
      "mod_code": [
        "for ( i = 0 ; i <= 1000 ; i ++ )",
        "bool c ( int a ) ;",
        "if ( kol >= k ) k ++ ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        9,
        18
      ],
      "mod_code": [
        "for ( i = 0 ; i <= 1000 ; i ++ )",
        "kol = 0 ;"
      ],
      "err_line": 9,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        9,
        18,
        21
      ],
      "mod_code": [
        "for ( i = 0 ; i <= 1000 ; i ++ )",
        "kol = 0 ;",
        "if ( kol >= k ) k ++ ;"
      ],
      "err_line": 9,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        9,
        21
      ],
      "mod_code": [
        "for ( i = 0 ; i <= 1000 ; i ++ )",
        "if ( kol >= k ) k ++ ;"
      ],
      "err_line": 9,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        0,
        18
      ],
      "mod_code": [
        "bool c ( int a ) ;",
        "kol = 0 ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        0,
        18,
        21
      ],
      "mod_code": [
        "bool c ( int a ) ;",
        "kol = 0 ;",
        "if ( kol >= k ) k ++ ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        0,
        21
      ],
      "mod_code": [
        "bool c ( int a ) ;",
        "if ( kol >= k ) k ++ ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        18,
        21
      ],
      "mod_code": [
        "kol = 0 ;",
        "if ( kol >= k ) k ++ ;"
      ],
      "err_line": 18,
      "err_msg": "‘kol’ was not declared in this scope"
    }
  ]
}