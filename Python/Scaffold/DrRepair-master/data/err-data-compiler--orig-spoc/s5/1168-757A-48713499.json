{
  "meta": {
    "index": 1168,
    "hitid": "3J9L0X0VDFGGFPOCK7RQRYXZPCY9W1",
    "workerid": "A1APYLD4DUK33J",
    "probid": "757A",
    "subid": "48713499"
  },
  "lines": [
    {
      "line": 0,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 1,
      "text": "declare s as string",
      "code": "string s ;",
      "indent": 1
    },
    {
      "line": 2,
      "text": "read s",
      "code": "cin >> s ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "declare integer array b with size 26 = { 0 }",
      "code": "int b [ 26 ] = { 0 } ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "declare integer array l with size 26 = { 0 }",
      "code": "int l [ 26 ] = { 0 } ;",
      "indent": 1
    },
    {
      "line": 5,
      "text": "declare n = length of s",
      "code": "int n = s . length ( ) ;",
      "indent": 1
    },
    {
      "line": 6,
      "text": "for i = 0 to n exclusive",
      "code": "for ( int i = 0 ; i < n ; i ++ )",
      "indent": 1
    },
    {
      "line": 7,
      "text": "if s [ i ] is greater than or equal to ' a ' and s [ i ] is less than or equal to ' z '",
      "code": "if ( s [ i ] >= ' a ' && s [ i ] <= ' z ' )",
      "indent": 2
    },
    {
      "line": 8,
      "text": "increment l [ s [ i ] - ' a ' ]",
      "code": "l [ s [ i ] - ' a ' ] ++ ;",
      "indent": 3
    },
    {
      "line": 9,
      "text": "else",
      "code": "else",
      "indent": 2
    },
    {
      "line": 10,
      "text": "increment b [ s [ i ] - ' A ' ]",
      "code": "b [ s [ i ] - ' A ' ] ++ ;",
      "indent": 3
    },
    {
      "line": 11,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 12,
      "text": "declare count = b [ 1 ]",
      "code": "int count = b [ 1 ] ;",
      "indent": 1
    },
    {
      "line": 13,
      "text": "let count = minimum of count and l [ 1 ]",
      "code": "count = min ( count , l [ 1 ] ) ;",
      "indent": 1
    },
    {
      "line": 14,
      "text": "let count = minimum of count and l [ 0 ] / 2",
      "code": "count = min ( count , l [ 0 ] / 2 ) ;",
      "indent": 1
    },
    {
      "line": 15,
      "text": "let count = minimum of count and l [ 18 ]",
      "code": "count = min ( count , l [ 18 ] ) ;",
      "indent": 1
    },
    {
      "line": 16,
      "text": "let count = minimum of count and l [ 20 ] / 2",
      "code": "count = min ( count , l [ 20 ] / 2 ) ;",
      "indent": 1
    },
    {
      "line": 17,
      "text": "let count = minimum of count and l [ 11 ]",
      "code": "count = min ( count , l [ 11 ] ) ;",
      "indent": 1
    },
    {
      "line": 18,
      "text": "let count = minimum of count and l [ 17 ]",
      "code": "count = min ( count , l [ 17 ] ) ;",
      "indent": 1
    },
    {
      "line": 19,
      "text": "print count , newline",
      "code": "cout << count << endl ;",
      "indent": 1
    },
    {
      "line": 20,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        1
      ],
      "mod_code": [
        "vector < string > s ;"
      ],
      "err_line": 2,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘std::vector<std::__cxx11::basic_string<char> >’)"
    },
    {
      "mod_line": [
        3
      ],
      "mod_code": [
        "int b } = { 0 } ;"
      ],
      "err_line": 3,
      "err_msg": "expected initializer before ‘}’ token"
    },
    {
      "mod_line": [
        4
      ],
      "mod_code": [
        "int l } = { 0 } ;"
      ],
      "err_line": 4,
      "err_msg": "expected initializer before ‘}’ token"
    },
    {
      "mod_line": [
        6
      ],
      "mod_code": [
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 6,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        8
      ],
      "mod_code": [
        "l [ s [ i ] ] - ' a ' ] ++ ;"
      ],
      "err_line": 8,
      "err_msg": "expected ‘;’ before ‘]’ token"
    },
    {
      "mod_line": [
        10
      ],
      "mod_code": [
        "b [ s [ i ] ] - ' A ' ] ++ ;"
      ],
      "err_line": 10,
      "err_msg": "expected ‘;’ before ‘]’ token"
    },
    {
      "mod_line": [
        12
      ],
      "mod_code": [
        "count = b [ 1 ] ;"
      ],
      "err_line": 12,
      "err_msg": "overloaded function with no contextual type information"
    },
    {
      "mod_line": [
        13
      ],
      "mod_code": [
        "int count = min ( count , l [ 1 ] ) ;"
      ],
      "err_line": 13,
      "err_msg": "redeclaration of ‘int count’"
    },
    {
      "mod_line": [
        14
      ],
      "mod_code": [
        "int count = min ( count , l [ 0 ] / 2 ) ;"
      ],
      "err_line": 14,
      "err_msg": "redeclaration of ‘int count’"
    },
    {
      "mod_line": [
        15
      ],
      "mod_code": [
        "int count = min ( count , l [ 18 ] ) ;"
      ],
      "err_line": 15,
      "err_msg": "redeclaration of ‘int count’"
    },
    {
      "mod_line": [
        16
      ],
      "mod_code": [
        "int count = min ( count , l [ 20 ] / 2 ) ;"
      ],
      "err_line": 16,
      "err_msg": "redeclaration of ‘int count’"
    },
    {
      "mod_line": [
        17
      ],
      "mod_code": [
        "int count = min ( count , l [ 11 ] ) ;"
      ],
      "err_line": 17,
      "err_msg": "redeclaration of ‘int count’"
    },
    {
      "mod_line": [
        18
      ],
      "mod_code": [
        "int count = min ( count , l [ 17 ] ) ;"
      ],
      "err_line": 18,
      "err_msg": "redeclaration of ‘int count’"
    },
    {
      "mod_line": [
        8,
        10
      ],
      "mod_code": [
        "l [ s [ i ] ] - ' a ' ] ++ ;",
        "b [ s [ i ] ] - ' A ' ] ++ ;"
      ],
      "err_line": 8,
      "err_msg": "expected ‘;’ before ‘]’ token"
    },
    {
      "mod_line": [
        8,
        10,
        15
      ],
      "mod_code": [
        "l [ s [ i ] ] - ' a ' ] ++ ;",
        "b [ s [ i ] ] - ' A ' ] ++ ;",
        "int count = min ( count , l [ 18 ] ) ;"
      ],
      "err_line": 8,
      "err_msg": "expected ‘;’ before ‘]’ token"
    },
    {
      "mod_line": [
        8,
        10,
        15,
        13
      ],
      "mod_code": [
        "l [ s [ i ] ] - ' a ' ] ++ ;",
        "b [ s [ i ] ] - ' A ' ] ++ ;",
        "int count = min ( count , l [ 18 ] ) ;",
        "int count = min ( count , l [ 1 ] ) ;"
      ],
      "err_line": 8,
      "err_msg": "expected ‘;’ before ‘]’ token"
    },
    {
      "mod_line": [
        8,
        10,
        15,
        6
      ],
      "mod_code": [
        "l [ s [ i ] ] - ' a ' ] ++ ;",
        "b [ s [ i ] ] - ' A ' ] ++ ;",
        "int count = min ( count , l [ 18 ] ) ;",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 6,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        8,
        10,
        15,
        3
      ],
      "mod_code": [
        "l [ s [ i ] ] - ' a ' ] ++ ;",
        "b [ s [ i ] ] - ' A ' ] ++ ;",
        "int count = min ( count , l [ 18 ] ) ;",
        "int b } = { 0 } ;"
      ],
      "err_line": 3,
      "err_msg": "expected initializer before ‘}’ token"
    },
    {
      "mod_line": [
        8,
        10,
        13
      ],
      "mod_code": [
        "l [ s [ i ] ] - ' a ' ] ++ ;",
        "b [ s [ i ] ] - ' A ' ] ++ ;",
        "int count = min ( count , l [ 1 ] ) ;"
      ],
      "err_line": 8,
      "err_msg": "expected ‘;’ before ‘]’ token"
    },
    {
      "mod_line": [
        8,
        10,
        13,
        6
      ],
      "mod_code": [
        "l [ s [ i ] ] - ' a ' ] ++ ;",
        "b [ s [ i ] ] - ' A ' ] ++ ;",
        "int count = min ( count , l [ 1 ] ) ;",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 6,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        8,
        10,
        13,
        3
      ],
      "mod_code": [
        "l [ s [ i ] ] - ' a ' ] ++ ;",
        "b [ s [ i ] ] - ' A ' ] ++ ;",
        "int count = min ( count , l [ 1 ] ) ;",
        "int b } = { 0 } ;"
      ],
      "err_line": 3,
      "err_msg": "expected initializer before ‘}’ token"
    },
    {
      "mod_line": [
        8,
        10,
        6
      ],
      "mod_code": [
        "l [ s [ i ] ] - ' a ' ] ++ ;",
        "b [ s [ i ] ] - ' A ' ] ++ ;",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 6,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        8,
        10,
        6,
        3
      ],
      "mod_code": [
        "l [ s [ i ] ] - ' a ' ] ++ ;",
        "b [ s [ i ] ] - ' A ' ] ++ ;",
        "for ( i = 0 ; i < n ; i ++ )",
        "int b } = { 0 } ;"
      ],
      "err_line": 3,
      "err_msg": "expected initializer before ‘}’ token"
    },
    {
      "mod_line": [
        8,
        10,
        3
      ],
      "mod_code": [
        "l [ s [ i ] ] - ' a ' ] ++ ;",
        "b [ s [ i ] ] - ' A ' ] ++ ;",
        "int b } = { 0 } ;"
      ],
      "err_line": 3,
      "err_msg": "expected initializer before ‘}’ token"
    },
    {
      "mod_line": [
        8,
        15
      ],
      "mod_code": [
        "l [ s [ i ] ] - ' a ' ] ++ ;",
        "int count = min ( count , l [ 18 ] ) ;"
      ],
      "err_line": 8,
      "err_msg": "expected ‘;’ before ‘]’ token"
    },
    {
      "mod_line": [
        8,
        15,
        13
      ],
      "mod_code": [
        "l [ s [ i ] ] - ' a ' ] ++ ;",
        "int count = min ( count , l [ 18 ] ) ;",
        "int count = min ( count , l [ 1 ] ) ;"
      ],
      "err_line": 8,
      "err_msg": "expected ‘;’ before ‘]’ token"
    },
    {
      "mod_line": [
        8,
        15,
        13,
        6
      ],
      "mod_code": [
        "l [ s [ i ] ] - ' a ' ] ++ ;",
        "int count = min ( count , l [ 18 ] ) ;",
        "int count = min ( count , l [ 1 ] ) ;",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 6,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        8,
        15,
        13,
        3
      ],
      "mod_code": [
        "l [ s [ i ] ] - ' a ' ] ++ ;",
        "int count = min ( count , l [ 18 ] ) ;",
        "int count = min ( count , l [ 1 ] ) ;",
        "int b } = { 0 } ;"
      ],
      "err_line": 3,
      "err_msg": "expected initializer before ‘}’ token"
    },
    {
      "mod_line": [
        8,
        15,
        6
      ],
      "mod_code": [
        "l [ s [ i ] ] - ' a ' ] ++ ;",
        "int count = min ( count , l [ 18 ] ) ;",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 6,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        8,
        15,
        6,
        3
      ],
      "mod_code": [
        "l [ s [ i ] ] - ' a ' ] ++ ;",
        "int count = min ( count , l [ 18 ] ) ;",
        "for ( i = 0 ; i < n ; i ++ )",
        "int b } = { 0 } ;"
      ],
      "err_line": 3,
      "err_msg": "expected initializer before ‘}’ token"
    },
    {
      "mod_line": [
        8,
        15,
        3
      ],
      "mod_code": [
        "l [ s [ i ] ] - ' a ' ] ++ ;",
        "int count = min ( count , l [ 18 ] ) ;",
        "int b } = { 0 } ;"
      ],
      "err_line": 3,
      "err_msg": "expected initializer before ‘}’ token"
    },
    {
      "mod_line": [
        8,
        13
      ],
      "mod_code": [
        "l [ s [ i ] ] - ' a ' ] ++ ;",
        "int count = min ( count , l [ 1 ] ) ;"
      ],
      "err_line": 8,
      "err_msg": "expected ‘;’ before ‘]’ token"
    },
    {
      "mod_line": [
        8,
        13,
        6
      ],
      "mod_code": [
        "l [ s [ i ] ] - ' a ' ] ++ ;",
        "int count = min ( count , l [ 1 ] ) ;",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 6,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        8,
        13,
        6,
        3
      ],
      "mod_code": [
        "l [ s [ i ] ] - ' a ' ] ++ ;",
        "int count = min ( count , l [ 1 ] ) ;",
        "for ( i = 0 ; i < n ; i ++ )",
        "int b } = { 0 } ;"
      ],
      "err_line": 3,
      "err_msg": "expected initializer before ‘}’ token"
    },
    {
      "mod_line": [
        8,
        13,
        3
      ],
      "mod_code": [
        "l [ s [ i ] ] - ' a ' ] ++ ;",
        "int count = min ( count , l [ 1 ] ) ;",
        "int b } = { 0 } ;"
      ],
      "err_line": 3,
      "err_msg": "expected initializer before ‘}’ token"
    },
    {
      "mod_line": [
        8,
        6
      ],
      "mod_code": [
        "l [ s [ i ] ] - ' a ' ] ++ ;",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 6,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        8,
        6,
        3
      ],
      "mod_code": [
        "l [ s [ i ] ] - ' a ' ] ++ ;",
        "for ( i = 0 ; i < n ; i ++ )",
        "int b } = { 0 } ;"
      ],
      "err_line": 3,
      "err_msg": "expected initializer before ‘}’ token"
    },
    {
      "mod_line": [
        8,
        3
      ],
      "mod_code": [
        "l [ s [ i ] ] - ' a ' ] ++ ;",
        "int b } = { 0 } ;"
      ],
      "err_line": 3,
      "err_msg": "expected initializer before ‘}’ token"
    },
    {
      "mod_line": [
        10,
        15
      ],
      "mod_code": [
        "b [ s [ i ] ] - ' A ' ] ++ ;",
        "int count = min ( count , l [ 18 ] ) ;"
      ],
      "err_line": 10,
      "err_msg": "expected ‘;’ before ‘]’ token"
    },
    {
      "mod_line": [
        10,
        15,
        13
      ],
      "mod_code": [
        "b [ s [ i ] ] - ' A ' ] ++ ;",
        "int count = min ( count , l [ 18 ] ) ;",
        "int count = min ( count , l [ 1 ] ) ;"
      ],
      "err_line": 10,
      "err_msg": "expected ‘;’ before ‘]’ token"
    },
    {
      "mod_line": [
        10,
        15,
        13,
        6
      ],
      "mod_code": [
        "b [ s [ i ] ] - ' A ' ] ++ ;",
        "int count = min ( count , l [ 18 ] ) ;",
        "int count = min ( count , l [ 1 ] ) ;",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 6,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        10,
        15,
        13,
        3
      ],
      "mod_code": [
        "b [ s [ i ] ] - ' A ' ] ++ ;",
        "int count = min ( count , l [ 18 ] ) ;",
        "int count = min ( count , l [ 1 ] ) ;",
        "int b } = { 0 } ;"
      ],
      "err_line": 3,
      "err_msg": "expected initializer before ‘}’ token"
    },
    {
      "mod_line": [
        10,
        15,
        6
      ],
      "mod_code": [
        "b [ s [ i ] ] - ' A ' ] ++ ;",
        "int count = min ( count , l [ 18 ] ) ;",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 6,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        10,
        15,
        6,
        3
      ],
      "mod_code": [
        "b [ s [ i ] ] - ' A ' ] ++ ;",
        "int count = min ( count , l [ 18 ] ) ;",
        "for ( i = 0 ; i < n ; i ++ )",
        "int b } = { 0 } ;"
      ],
      "err_line": 3,
      "err_msg": "expected initializer before ‘}’ token"
    },
    {
      "mod_line": [
        10,
        15,
        3
      ],
      "mod_code": [
        "b [ s [ i ] ] - ' A ' ] ++ ;",
        "int count = min ( count , l [ 18 ] ) ;",
        "int b } = { 0 } ;"
      ],
      "err_line": 3,
      "err_msg": "expected initializer before ‘}’ token"
    },
    {
      "mod_line": [
        10,
        13
      ],
      "mod_code": [
        "b [ s [ i ] ] - ' A ' ] ++ ;",
        "int count = min ( count , l [ 1 ] ) ;"
      ],
      "err_line": 10,
      "err_msg": "expected ‘;’ before ‘]’ token"
    },
    {
      "mod_line": [
        10,
        13,
        6
      ],
      "mod_code": [
        "b [ s [ i ] ] - ' A ' ] ++ ;",
        "int count = min ( count , l [ 1 ] ) ;",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 6,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        10,
        13,
        6,
        3
      ],
      "mod_code": [
        "b [ s [ i ] ] - ' A ' ] ++ ;",
        "int count = min ( count , l [ 1 ] ) ;",
        "for ( i = 0 ; i < n ; i ++ )",
        "int b } = { 0 } ;"
      ],
      "err_line": 3,
      "err_msg": "expected initializer before ‘}’ token"
    },
    {
      "mod_line": [
        10,
        13,
        3
      ],
      "mod_code": [
        "b [ s [ i ] ] - ' A ' ] ++ ;",
        "int count = min ( count , l [ 1 ] ) ;",
        "int b } = { 0 } ;"
      ],
      "err_line": 3,
      "err_msg": "expected initializer before ‘}’ token"
    },
    {
      "mod_line": [
        10,
        6
      ],
      "mod_code": [
        "b [ s [ i ] ] - ' A ' ] ++ ;",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 6,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        10,
        6,
        3
      ],
      "mod_code": [
        "b [ s [ i ] ] - ' A ' ] ++ ;",
        "for ( i = 0 ; i < n ; i ++ )",
        "int b } = { 0 } ;"
      ],
      "err_line": 3,
      "err_msg": "expected initializer before ‘}’ token"
    },
    {
      "mod_line": [
        10,
        3
      ],
      "mod_code": [
        "b [ s [ i ] ] - ' A ' ] ++ ;",
        "int b } = { 0 } ;"
      ],
      "err_line": 3,
      "err_msg": "expected initializer before ‘}’ token"
    },
    {
      "mod_line": [
        15,
        13
      ],
      "mod_code": [
        "int count = min ( count , l [ 18 ] ) ;",
        "int count = min ( count , l [ 1 ] ) ;"
      ],
      "err_line": 13,
      "err_msg": "redeclaration of ‘int count’"
    },
    {
      "mod_line": [
        15,
        13,
        6
      ],
      "mod_code": [
        "int count = min ( count , l [ 18 ] ) ;",
        "int count = min ( count , l [ 1 ] ) ;",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 6,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        15,
        13,
        6,
        3
      ],
      "mod_code": [
        "int count = min ( count , l [ 18 ] ) ;",
        "int count = min ( count , l [ 1 ] ) ;",
        "for ( i = 0 ; i < n ; i ++ )",
        "int b } = { 0 } ;"
      ],
      "err_line": 3,
      "err_msg": "expected initializer before ‘}’ token"
    },
    {
      "mod_line": [
        15,
        13,
        3
      ],
      "mod_code": [
        "int count = min ( count , l [ 18 ] ) ;",
        "int count = min ( count , l [ 1 ] ) ;",
        "int b } = { 0 } ;"
      ],
      "err_line": 3,
      "err_msg": "expected initializer before ‘}’ token"
    },
    {
      "mod_line": [
        15,
        6
      ],
      "mod_code": [
        "int count = min ( count , l [ 18 ] ) ;",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 6,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        15,
        6,
        3
      ],
      "mod_code": [
        "int count = min ( count , l [ 18 ] ) ;",
        "for ( i = 0 ; i < n ; i ++ )",
        "int b } = { 0 } ;"
      ],
      "err_line": 3,
      "err_msg": "expected initializer before ‘}’ token"
    },
    {
      "mod_line": [
        15,
        3
      ],
      "mod_code": [
        "int count = min ( count , l [ 18 ] ) ;",
        "int b } = { 0 } ;"
      ],
      "err_line": 3,
      "err_msg": "expected initializer before ‘}’ token"
    },
    {
      "mod_line": [
        13,
        6
      ],
      "mod_code": [
        "int count = min ( count , l [ 1 ] ) ;",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 6,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        6,
        3
      ],
      "mod_code": [
        "int count = min ( count , l [ 1 ] ) ;",
        "for ( i = 0 ; i < n ; i ++ )",
        "int b } = { 0 } ;"
      ],
      "err_line": 3,
      "err_msg": "expected initializer before ‘}’ token"
    },
    {
      "mod_line": [
        13,
        3
      ],
      "mod_code": [
        "int count = min ( count , l [ 1 ] ) ;",
        "int b } = { 0 } ;"
      ],
      "err_line": 3,
      "err_msg": "expected initializer before ‘}’ token"
    },
    {
      "mod_line": [
        6,
        3
      ],
      "mod_code": [
        "for ( i = 0 ; i < n ; i ++ )",
        "int b } = { 0 } ;"
      ],
      "err_line": 3,
      "err_msg": "expected initializer before ‘}’ token"
    }
  ]
}