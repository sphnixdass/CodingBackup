{
  "meta": {
    "index": 1101,
    "hitid": "3NCN4N1H1GB9GOUVQQEZMLFYK03NB4",
    "workerid": "A1R0Q9CUUBSM5F",
    "probid": "23A",
    "subid": "41294461"
  },
  "lines": [
    {
      "line": 0,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 1,
      "text": "create string s",
      "code": "string s ;",
      "indent": 1
    },
    {
      "line": 2,
      "text": "read s",
      "code": "cin >> s ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "make integer s = 0",
      "code": "int S = 0 ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "for l = 1 to s . size ( )",
      "code": "for ( int l = 1 ; l <= ( ( int ) ( s ) . size ( ) ) ; l ++ )",
      "indent": 1
    },
    {
      "line": 5,
      "text": "create string vector v",
      "code": "vector < string > v ;",
      "indent": 2
    },
    {
      "line": 6,
      "text": "for i = 0 while i + 1 - 1 is less than size of s , append s . substr ( i , 1 ) to v",
      "code": "for ( int i = 0 ; i + l - 1 < ( ( int ) ( s ) . size ( ) ) ; i ++ ) v . push_back ( s . substr ( i , l ) ) ;",
      "indent": 2
    },
    {
      "line": 7,
      "text": "sort v",
      "code": "sort ( ( v ) . begin ( ) , ( v ) . end ( ) ) ;",
      "indent": 2
    },
    {
      "line": 8,
      "text": "for i = 0 to size of v exclusive",
      "code": "for ( int i = 0 ; i < ( ( int ) ( v ) . size ( ) ) - 1 ; i ++ )",
      "indent": 2
    },
    {
      "line": 9,
      "text": "if v [ i ] is equal to v [ i + 1 ]",
      "code": "if ( v [ i ] == v [ i + 1 ] )",
      "indent": 3
    },
    {
      "line": 10,
      "text": "set S to 1",
      "code": "S = l ;",
      "indent": 4
    },
    {
      "line": 11,
      "text": "break loop",
      "code": "break ;",
      "indent": 4
    },
    {
      "line": 12,
      "text": "DUMMY",
      "code": "}",
      "indent": 3
    },
    {
      "line": 13,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 14,
      "text": "show S",
      "code": "cout << S << endl ;",
      "indent": 1
    },
    {
      "line": 15,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 16,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        3
      ],
      "mod_code": [
        "int s = 0 ;"
      ],
      "err_line": 3,
      "err_msg": "conflicting declaration ‘int s’"
    },
    {
      "mod_line": [
        1
      ],
      "mod_code": [
        "string n ;"
      ],
      "err_line": 2,
      "err_msg": "‘s’ was not declared in this scope"
    },
    {
      "mod_line": [
        3
      ],
      "mod_code": [
        "long long s = 0 ;"
      ],
      "err_line": 3,
      "err_msg": "conflicting declaration ‘long long int s’"
    },
    {
      "mod_line": [
        4
      ],
      "mod_code": [
        "for ( l = 1 ; l < s . size ( ) ; l ++ )"
      ],
      "err_line": 4,
      "err_msg": "‘l’ was not declared in this scope"
    },
    {
      "mod_line": [
        5
      ],
      "mod_code": [
        "vector < string > :: v ;"
      ],
      "err_line": 5,
      "err_msg": "‘v’ is not a member of ‘std::vector<std::__cxx11::basic_string<char> >’"
    },
    {
      "mod_line": [
        7
      ],
      "mod_code": [
        "sort ( v , v + n ) ;"
      ],
      "err_line": 7,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        8
      ],
      "mod_code": [
        "for ( i = 0 ; i < v . size ( ) ; i ++ )"
      ],
      "err_line": 8,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        9
      ],
      "mod_code": [
        "if ( v [ i ] == v [ i + 1 )"
      ],
      "err_line": 9,
      "err_msg": "expected ‘]’ before ‘)’ token"
    },
    {
      "mod_line": [
        11
      ],
      "mod_code": [
        "break break ;"
      ],
      "err_line": 11,
      "err_msg": "expected ‘;’ before ‘break’"
    },
    {
      "mod_line": [
        3,
        6
      ],
      "mod_code": [
        "int s = 0 ;",
        "for ( int i = 0 ; i + 1 - 1 < s . size ( ) ; i ++ ) { v . push_back ( s . substr ( i , 1 ) ) ; }"
      ],
      "err_line": 3,
      "err_msg": "conflicting declaration ‘int s’"
    },
    {
      "mod_line": [
        3,
        6,
        10
      ],
      "mod_code": [
        "int s = 0 ;",
        "for ( int i = 0 ; i + 1 - 1 < s . size ( ) ; i ++ ) { v . push_back ( s . substr ( i , 1 ) ) ; }",
        "S = 1 ;"
      ],
      "err_line": 3,
      "err_msg": "conflicting declaration ‘int s’"
    },
    {
      "mod_line": [
        3,
        6,
        10,
        8
      ],
      "mod_code": [
        "int s = 0 ;",
        "for ( int i = 0 ; i + 1 - 1 < s . size ( ) ; i ++ ) { v . push_back ( s . substr ( i , 1 ) ) ; }",
        "S = 1 ;",
        "for ( i = 0 ; i < v . size ( ) ; i ++ )"
      ],
      "err_line": 3,
      "err_msg": "conflicting declaration ‘int s’"
    },
    {
      "mod_line": [
        3,
        6,
        10,
        9
      ],
      "mod_code": [
        "int s = 0 ;",
        "for ( int i = 0 ; i + 1 - 1 < s . size ( ) ; i ++ ) { v . push_back ( s . substr ( i , 1 ) ) ; }",
        "S = 1 ;",
        "if ( v [ i ] == v [ i + 1 )"
      ],
      "err_line": 3,
      "err_msg": "conflicting declaration ‘int s’"
    },
    {
      "mod_line": [
        3,
        6,
        8
      ],
      "mod_code": [
        "int s = 0 ;",
        "for ( int i = 0 ; i + 1 - 1 < s . size ( ) ; i ++ ) { v . push_back ( s . substr ( i , 1 ) ) ; }",
        "for ( i = 0 ; i < v . size ( ) ; i ++ )"
      ],
      "err_line": 3,
      "err_msg": "conflicting declaration ‘int s’"
    },
    {
      "mod_line": [
        3,
        6,
        8,
        9
      ],
      "mod_code": [
        "int s = 0 ;",
        "for ( int i = 0 ; i + 1 - 1 < s . size ( ) ; i ++ ) { v . push_back ( s . substr ( i , 1 ) ) ; }",
        "for ( i = 0 ; i < v . size ( ) ; i ++ )",
        "if ( v [ i ] == v [ i + 1 )"
      ],
      "err_line": 3,
      "err_msg": "conflicting declaration ‘int s’"
    },
    {
      "mod_line": [
        3,
        6,
        9
      ],
      "mod_code": [
        "int s = 0 ;",
        "for ( int i = 0 ; i + 1 - 1 < s . size ( ) ; i ++ ) { v . push_back ( s . substr ( i , 1 ) ) ; }",
        "if ( v [ i ] == v [ i + 1 )"
      ],
      "err_line": 3,
      "err_msg": "conflicting declaration ‘int s’"
    },
    {
      "mod_line": [
        3,
        10
      ],
      "mod_code": [
        "int s = 0 ;",
        "S = 1 ;"
      ],
      "err_line": 3,
      "err_msg": "conflicting declaration ‘int s’"
    },
    {
      "mod_line": [
        3,
        10,
        8
      ],
      "mod_code": [
        "int s = 0 ;",
        "S = 1 ;",
        "for ( i = 0 ; i < v . size ( ) ; i ++ )"
      ],
      "err_line": 3,
      "err_msg": "conflicting declaration ‘int s’"
    },
    {
      "mod_line": [
        3,
        10,
        8,
        6
      ],
      "mod_code": [
        "int s = 0 ;",
        "S = 1 ;",
        "for ( i = 0 ; i < v . size ( ) ; i ++ )",
        "for ( int i = 0 ; i + 1 - 1 < s . size ( ) ; i ++ ) v . push_back ( s . substr ( i , 1 ) ) ;"
      ],
      "err_line": 3,
      "err_msg": "conflicting declaration ‘int s’"
    },
    {
      "mod_line": [
        3,
        10,
        8,
        9
      ],
      "mod_code": [
        "int s = 0 ;",
        "S = 1 ;",
        "for ( i = 0 ; i < v . size ( ) ; i ++ )",
        "if ( v [ i ] == v [ i + 1 )"
      ],
      "err_line": 3,
      "err_msg": "conflicting declaration ‘int s’"
    },
    {
      "mod_line": [
        3,
        10,
        6
      ],
      "mod_code": [
        "int s = 0 ;",
        "S = 1 ;",
        "for ( int i = 0 ; i + 1 - 1 < s . size ( ) ; i ++ ) v . push_back ( s . substr ( i , 1 ) ) ;"
      ],
      "err_line": 3,
      "err_msg": "conflicting declaration ‘int s’"
    },
    {
      "mod_line": [
        3,
        10,
        6,
        9
      ],
      "mod_code": [
        "int s = 0 ;",
        "S = 1 ;",
        "for ( int i = 0 ; i + 1 - 1 < s . size ( ) ; i ++ ) v . push_back ( s . substr ( i , 1 ) ) ;",
        "if ( v [ i ] == v [ i + 1 )"
      ],
      "err_line": 3,
      "err_msg": "conflicting declaration ‘int s’"
    },
    {
      "mod_line": [
        3,
        10,
        9
      ],
      "mod_code": [
        "int s = 0 ;",
        "S = 1 ;",
        "if ( v [ i ] == v [ i + 1 )"
      ],
      "err_line": 3,
      "err_msg": "conflicting declaration ‘int s’"
    },
    {
      "mod_line": [
        3,
        8
      ],
      "mod_code": [
        "int s = 0 ;",
        "for ( i = 0 ; i < v . size ( ) ; i ++ )"
      ],
      "err_line": 3,
      "err_msg": "conflicting declaration ‘int s’"
    },
    {
      "mod_line": [
        3,
        8,
        6
      ],
      "mod_code": [
        "int s = 0 ;",
        "for ( i = 0 ; i < v . size ( ) ; i ++ )",
        "for ( int i = 0 ; i + 1 - 1 < s . size ( ) ; i ++ ) v . push_back ( s . substr ( i , 1 ) ) ;"
      ],
      "err_line": 3,
      "err_msg": "conflicting declaration ‘int s’"
    },
    {
      "mod_line": [
        3,
        8,
        6,
        9
      ],
      "mod_code": [
        "int s = 0 ;",
        "for ( i = 0 ; i < v . size ( ) ; i ++ )",
        "for ( int i = 0 ; i + 1 - 1 < s . size ( ) ; i ++ ) v . push_back ( s . substr ( i , 1 ) ) ;",
        "if ( v [ i ] == v [ i + 1 )"
      ],
      "err_line": 3,
      "err_msg": "conflicting declaration ‘int s’"
    },
    {
      "mod_line": [
        3,
        8,
        9
      ],
      "mod_code": [
        "int s = 0 ;",
        "for ( i = 0 ; i < v . size ( ) ; i ++ )",
        "if ( v [ i ] == v [ i + 1 )"
      ],
      "err_line": 3,
      "err_msg": "conflicting declaration ‘int s’"
    },
    {
      "mod_line": [
        3,
        6
      ],
      "mod_code": [
        "int s = 0 ;",
        "for ( int i = 0 ; i + 1 - 1 < s . size ( ) ; i ++ ) v . push_back ( s . substr ( i , 1 ) ) ;"
      ],
      "err_line": 3,
      "err_msg": "conflicting declaration ‘int s’"
    },
    {
      "mod_line": [
        3,
        6,
        9
      ],
      "mod_code": [
        "int s = 0 ;",
        "for ( int i = 0 ; i + 1 - 1 < s . size ( ) ; i ++ ) v . push_back ( s . substr ( i , 1 ) ) ;",
        "if ( v [ i ] == v [ i + 1 )"
      ],
      "err_line": 3,
      "err_msg": "conflicting declaration ‘int s’"
    },
    {
      "mod_line": [
        3,
        9
      ],
      "mod_code": [
        "int s = 0 ;",
        "if ( v [ i ] == v [ i + 1 )"
      ],
      "err_line": 3,
      "err_msg": "conflicting declaration ‘int s’"
    },
    {
      "mod_line": [
        6,
        10,
        8
      ],
      "mod_code": [
        "for ( int i = 0 ; i + 1 - 1 < s . size ( ) ; i ++ ) { v . push_back ( s . substr ( i , 1 ) ) ; }",
        "S = 1 ;",
        "for ( i = 0 ; i < v . size ( ) ; i ++ )"
      ],
      "err_line": 8,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        6,
        10,
        8,
        9
      ],
      "mod_code": [
        "for ( int i = 0 ; i + 1 - 1 < s . size ( ) ; i ++ ) { v . push_back ( s . substr ( i , 1 ) ) ; }",
        "S = 1 ;",
        "for ( i = 0 ; i < v . size ( ) ; i ++ )",
        "if ( v [ i ] == v [ i + 1 )"
      ],
      "err_line": 8,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        6,
        10,
        9
      ],
      "mod_code": [
        "for ( int i = 0 ; i + 1 - 1 < s . size ( ) ; i ++ ) { v . push_back ( s . substr ( i , 1 ) ) ; }",
        "S = 1 ;",
        "if ( v [ i ] == v [ i + 1 )"
      ],
      "err_line": 9,
      "err_msg": "expected ‘]’ before ‘)’ token"
    },
    {
      "mod_line": [
        6,
        8
      ],
      "mod_code": [
        "for ( int i = 0 ; i + 1 - 1 < s . size ( ) ; i ++ ) { v . push_back ( s . substr ( i , 1 ) ) ; }",
        "for ( i = 0 ; i < v . size ( ) ; i ++ )"
      ],
      "err_line": 8,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        6,
        8,
        9
      ],
      "mod_code": [
        "for ( int i = 0 ; i + 1 - 1 < s . size ( ) ; i ++ ) { v . push_back ( s . substr ( i , 1 ) ) ; }",
        "for ( i = 0 ; i < v . size ( ) ; i ++ )",
        "if ( v [ i ] == v [ i + 1 )"
      ],
      "err_line": 8,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        6,
        9
      ],
      "mod_code": [
        "for ( int i = 0 ; i + 1 - 1 < s . size ( ) ; i ++ ) { v . push_back ( s . substr ( i , 1 ) ) ; }",
        "if ( v [ i ] == v [ i + 1 )"
      ],
      "err_line": 9,
      "err_msg": "expected ‘]’ before ‘)’ token"
    },
    {
      "mod_line": [
        10,
        8
      ],
      "mod_code": [
        "S = 1 ;",
        "for ( i = 0 ; i < v . size ( ) ; i ++ )"
      ],
      "err_line": 8,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        10,
        8,
        6
      ],
      "mod_code": [
        "S = 1 ;",
        "for ( i = 0 ; i < v . size ( ) ; i ++ )",
        "for ( int i = 0 ; i + 1 - 1 < s . size ( ) ; i ++ ) v . push_back ( s . substr ( i , 1 ) ) ;"
      ],
      "err_line": 8,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        10,
        8,
        6,
        9
      ],
      "mod_code": [
        "S = 1 ;",
        "for ( i = 0 ; i < v . size ( ) ; i ++ )",
        "for ( int i = 0 ; i + 1 - 1 < s . size ( ) ; i ++ ) v . push_back ( s . substr ( i , 1 ) ) ;",
        "if ( v [ i ] == v [ i + 1 )"
      ],
      "err_line": 8,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        10,
        8,
        9
      ],
      "mod_code": [
        "S = 1 ;",
        "for ( i = 0 ; i < v . size ( ) ; i ++ )",
        "if ( v [ i ] == v [ i + 1 )"
      ],
      "err_line": 8,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        10,
        6,
        9
      ],
      "mod_code": [
        "S = 1 ;",
        "for ( int i = 0 ; i + 1 - 1 < s . size ( ) ; i ++ ) v . push_back ( s . substr ( i , 1 ) ) ;",
        "if ( v [ i ] == v [ i + 1 )"
      ],
      "err_line": 9,
      "err_msg": "expected ‘]’ before ‘)’ token"
    },
    {
      "mod_line": [
        10,
        9
      ],
      "mod_code": [
        "S = 1 ;",
        "if ( v [ i ] == v [ i + 1 )"
      ],
      "err_line": 9,
      "err_msg": "expected ‘]’ before ‘)’ token"
    },
    {
      "mod_line": [
        8,
        6
      ],
      "mod_code": [
        "for ( i = 0 ; i < v . size ( ) ; i ++ )",
        "for ( int i = 0 ; i + 1 - 1 < s . size ( ) ; i ++ ) v . push_back ( s . substr ( i , 1 ) ) ;"
      ],
      "err_line": 8,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        8,
        6,
        9
      ],
      "mod_code": [
        "for ( i = 0 ; i < v . size ( ) ; i ++ )",
        "for ( int i = 0 ; i + 1 - 1 < s . size ( ) ; i ++ ) v . push_back ( s . substr ( i , 1 ) ) ;",
        "if ( v [ i ] == v [ i + 1 )"
      ],
      "err_line": 8,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        8,
        9
      ],
      "mod_code": [
        "for ( i = 0 ; i < v . size ( ) ; i ++ )",
        "if ( v [ i ] == v [ i + 1 )"
      ],
      "err_line": 8,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        6,
        9
      ],
      "mod_code": [
        "for ( int i = 0 ; i + 1 - 1 < s . size ( ) ; i ++ ) v . push_back ( s . substr ( i , 1 ) ) ;",
        "if ( v [ i ] == v [ i + 1 )"
      ],
      "err_line": 9,
      "err_msg": "expected ‘]’ before ‘)’ token"
    }
  ]
}