{
  "meta": {
    "index": 49,
    "hitid": "3IWA71V4TIA8M6R4W5K097K48D2X6D",
    "workerid": "A1AYVATMT88U1W",
    "probid": "271A",
    "subid": "42325831"
  },
  "lines": [
    {
      "line": 0,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 1,
      "text": "let n be an integer",
      "code": "int n ;",
      "indent": 1
    },
    {
      "line": 2,
      "text": "read n",
      "code": "cin >> n ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "for integer i = n + 1 to 9999 inclusive",
      "code": "for ( int i = n + 1 ; i <= 9999 ; i ++ )",
      "indent": 1
    },
    {
      "line": 4,
      "text": "let a be an integer array , k and top be integers",
      "code": "int a [ 5 ] , k = i , top = 0 ;",
      "indent": 2
    },
    {
      "line": 5,
      "text": "while k is true",
      "code": "while ( k )",
      "indent": 2
    },
    {
      "line": 6,
      "text": "a [ top + + ] equals k % 10",
      "code": "a [ top ++ ] = k % 10 ;",
      "indent": 3
    },
    {
      "line": 7,
      "text": "divide n by 10",
      "code": "k = k / 10 ;",
      "indent": 3
    },
    {
      "line": 8,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 9,
      "text": "flag be integer 0",
      "code": "int flag = 0 ;",
      "indent": 2
    },
    {
      "line": 10,
      "text": "for integer i = 0 to top - 1 exclusive",
      "code": "for ( int i = 0 ; i < top - 1 ; i ++ )",
      "indent": 2
    },
    {
      "line": 11,
      "text": "for integer j = i + 1 to top - 1 exclusive",
      "code": "for ( int j = i + 1 ; j <= top - 1 ; j ++ )",
      "indent": 3
    },
    {
      "line": 12,
      "text": "a [ i ] equals a [ j ]",
      "code": "if ( a [ i ] == a [ j ] )",
      "indent": 4
    },
    {
      "line": 13,
      "text": "flag equals 1",
      "code": "flag = 1 ;",
      "indent": 5
    },
    {
      "line": 14,
      "text": "stop",
      "code": "break ;",
      "indent": 5
    },
    {
      "line": 15,
      "text": "DUMMY",
      "code": "}",
      "indent": 4
    },
    {
      "line": 16,
      "text": "if flag is not zero",
      "code": "if ( ! flag )",
      "indent": 2
    },
    {
      "line": 17,
      "text": "print i and endline",
      "code": "cout << i << endl ;",
      "indent": 3
    },
    {
      "line": 18,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 3
    },
    {
      "line": 19,
      "text": "goto AppEnd",
      "code": "goto AppEnd ;",
      "indent": 3
    },
    {
      "line": 20,
      "text": "exit",
      "code": "exit ( 0 ) ;",
      "indent": 3
    },
    {
      "line": 21,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 22,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 23,
      "text": "AppEnd",
      "code": "AppEnd :",
      "indent": 0
    },
    {
      "line": 24,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 25,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        4
      ],
      "mod_code": [
        "int a , k , top ;"
      ],
      "err_line": 6,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        23
      ],
      "mod_code": [
        "string AppEnd ;"
      ],
      "err_line": 19,
      "err_msg": "label ‘AppEnd’ used but not defined"
    },
    {
      "mod_line": [
        4
      ],
      "mod_code": [
        "int a [ k ] , top ;"
      ],
      "err_line": 4,
      "err_msg": "‘k’ was not declared in this scope"
    },
    {
      "mod_line": [
        14
      ],
      "mod_code": [
        "stop ;"
      ],
      "err_line": 14,
      "err_msg": "‘stop’ was not declared in this scope"
    },
    {
      "mod_line": [
        19
      ],
      "mod_code": [
        "goto n ;"
      ],
      "err_line": 19,
      "err_msg": "label ‘n’ used but not defined"
    },
    {
      "mod_line": [
        20
      ],
      "mod_code": [
        "exit ( exit ) ;"
      ],
      "err_line": 20,
      "err_msg": "invalid conversion from ‘void (*)(int) throw ()’ to ‘int’ [-fpermissive]"
    },
    {
      "mod_line": [
        23
      ],
      "mod_code": [
        "void AppEnd ;"
      ],
      "err_line": 23,
      "err_msg": "variable or field ‘AppEnd’ declared void"
    },
    {
      "mod_line": [
        4,
        7
      ],
      "mod_code": [
        "int a , k , top ;",
        "n /= 10 ;"
      ],
      "err_line": 6,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        4,
        7,
        11
      ],
      "mod_code": [
        "int a , k , top ;",
        "n /= 10 ;",
        "for ( int j = i + 1 ; j < top - 1 ; j ++ )"
      ],
      "err_line": 6,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        4,
        7,
        11,
        12
      ],
      "mod_code": [
        "int a , k , top ;",
        "n /= 10 ;",
        "for ( int j = i + 1 ; j < top - 1 ; j ++ )",
        "a [ i ] = a [ j ] ;"
      ],
      "err_line": 6,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        4,
        7,
        11,
        16
      ],
      "mod_code": [
        "int a , k , top ;",
        "n /= 10 ;",
        "for ( int j = i + 1 ; j < top - 1 ; j ++ )",
        "if ( flag )"
      ],
      "err_line": 6,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        4,
        7,
        11,
        23
      ],
      "mod_code": [
        "int a , k , top ;",
        "n /= 10 ;",
        "for ( int j = i + 1 ; j < top - 1 ; j ++ )",
        "string AppEnd ;"
      ],
      "err_line": 6,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        4,
        7,
        12
      ],
      "mod_code": [
        "int a , k , top ;",
        "n /= 10 ;",
        "a [ i ] = a [ j ] ;"
      ],
      "err_line": 6,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        4,
        7,
        12,
        16
      ],
      "mod_code": [
        "int a , k , top ;",
        "n /= 10 ;",
        "a [ i ] = a [ j ] ;",
        "if ( flag )"
      ],
      "err_line": 6,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        4,
        7,
        12,
        23
      ],
      "mod_code": [
        "int a , k , top ;",
        "n /= 10 ;",
        "a [ i ] = a [ j ] ;",
        "string AppEnd ;"
      ],
      "err_line": 6,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        4,
        7,
        16
      ],
      "mod_code": [
        "int a , k , top ;",
        "n /= 10 ;",
        "if ( flag )"
      ],
      "err_line": 6,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        4,
        7,
        16,
        23
      ],
      "mod_code": [
        "int a , k , top ;",
        "n /= 10 ;",
        "if ( flag )",
        "string AppEnd ;"
      ],
      "err_line": 6,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        4,
        7,
        23
      ],
      "mod_code": [
        "int a , k , top ;",
        "n /= 10 ;",
        "string AppEnd ;"
      ],
      "err_line": 6,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        4,
        11
      ],
      "mod_code": [
        "int a , k , top ;",
        "for ( int j = i + 1 ; j < top - 1 ; j ++ )"
      ],
      "err_line": 6,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        4,
        11,
        12
      ],
      "mod_code": [
        "int a , k , top ;",
        "for ( int j = i + 1 ; j < top - 1 ; j ++ )",
        "a [ i ] = a [ j ] ;"
      ],
      "err_line": 6,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        4,
        11,
        12,
        16
      ],
      "mod_code": [
        "int a , k , top ;",
        "for ( int j = i + 1 ; j < top - 1 ; j ++ )",
        "a [ i ] = a [ j ] ;",
        "if ( flag )"
      ],
      "err_line": 6,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        4,
        11,
        12,
        23
      ],
      "mod_code": [
        "int a , k , top ;",
        "for ( int j = i + 1 ; j < top - 1 ; j ++ )",
        "a [ i ] = a [ j ] ;",
        "string AppEnd ;"
      ],
      "err_line": 6,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        4,
        11,
        16
      ],
      "mod_code": [
        "int a , k , top ;",
        "for ( int j = i + 1 ; j < top - 1 ; j ++ )",
        "if ( flag )"
      ],
      "err_line": 6,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        4,
        11,
        16,
        23
      ],
      "mod_code": [
        "int a , k , top ;",
        "for ( int j = i + 1 ; j < top - 1 ; j ++ )",
        "if ( flag )",
        "string AppEnd ;"
      ],
      "err_line": 6,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        4,
        11,
        23
      ],
      "mod_code": [
        "int a , k , top ;",
        "for ( int j = i + 1 ; j < top - 1 ; j ++ )",
        "string AppEnd ;"
      ],
      "err_line": 6,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        4,
        12
      ],
      "mod_code": [
        "int a , k , top ;",
        "a [ i ] = a [ j ] ;"
      ],
      "err_line": 6,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        4,
        12,
        16
      ],
      "mod_code": [
        "int a , k , top ;",
        "a [ i ] = a [ j ] ;",
        "if ( flag )"
      ],
      "err_line": 6,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        4,
        12,
        16,
        23
      ],
      "mod_code": [
        "int a , k , top ;",
        "a [ i ] = a [ j ] ;",
        "if ( flag )",
        "string AppEnd ;"
      ],
      "err_line": 6,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        4,
        12,
        23
      ],
      "mod_code": [
        "int a , k , top ;",
        "a [ i ] = a [ j ] ;",
        "string AppEnd ;"
      ],
      "err_line": 6,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        4,
        16
      ],
      "mod_code": [
        "int a , k , top ;",
        "if ( flag )"
      ],
      "err_line": 6,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        4,
        16,
        23
      ],
      "mod_code": [
        "int a , k , top ;",
        "if ( flag )",
        "string AppEnd ;"
      ],
      "err_line": 6,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        4,
        23
      ],
      "mod_code": [
        "int a , k , top ;",
        "string AppEnd ;"
      ],
      "err_line": 6,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        7,
        11,
        12,
        23
      ],
      "mod_code": [
        "n /= 10 ;",
        "for ( int j = i + 1 ; j < top - 1 ; j ++ )",
        "a [ i ] = a [ j ] ;",
        "string AppEnd ;"
      ],
      "err_line": 19,
      "err_msg": "label ‘AppEnd’ used but not defined"
    },
    {
      "mod_line": [
        7,
        11,
        16,
        23
      ],
      "mod_code": [
        "n /= 10 ;",
        "for ( int j = i + 1 ; j < top - 1 ; j ++ )",
        "if ( flag )",
        "string AppEnd ;"
      ],
      "err_line": 19,
      "err_msg": "label ‘AppEnd’ used but not defined"
    },
    {
      "mod_line": [
        7,
        11,
        23
      ],
      "mod_code": [
        "n /= 10 ;",
        "for ( int j = i + 1 ; j < top - 1 ; j ++ )",
        "string AppEnd ;"
      ],
      "err_line": 19,
      "err_msg": "label ‘AppEnd’ used but not defined"
    },
    {
      "mod_line": [
        7,
        12,
        16,
        23
      ],
      "mod_code": [
        "n /= 10 ;",
        "a [ i ] = a [ j ] ;",
        "if ( flag )",
        "string AppEnd ;"
      ],
      "err_line": 19,
      "err_msg": "label ‘AppEnd’ used but not defined"
    },
    {
      "mod_line": [
        7,
        12,
        23
      ],
      "mod_code": [
        "n /= 10 ;",
        "a [ i ] = a [ j ] ;",
        "string AppEnd ;"
      ],
      "err_line": 19,
      "err_msg": "label ‘AppEnd’ used but not defined"
    },
    {
      "mod_line": [
        7,
        16,
        23
      ],
      "mod_code": [
        "n /= 10 ;",
        "if ( flag )",
        "string AppEnd ;"
      ],
      "err_line": 19,
      "err_msg": "label ‘AppEnd’ used but not defined"
    },
    {
      "mod_line": [
        7,
        23
      ],
      "mod_code": [
        "n /= 10 ;",
        "string AppEnd ;"
      ],
      "err_line": 19,
      "err_msg": "label ‘AppEnd’ used but not defined"
    },
    {
      "mod_line": [
        11,
        12,
        16,
        23
      ],
      "mod_code": [
        "for ( int j = i + 1 ; j < top - 1 ; j ++ )",
        "a [ i ] = a [ j ] ;",
        "if ( flag )",
        "string AppEnd ;"
      ],
      "err_line": 19,
      "err_msg": "label ‘AppEnd’ used but not defined"
    },
    {
      "mod_line": [
        11,
        12,
        23
      ],
      "mod_code": [
        "for ( int j = i + 1 ; j < top - 1 ; j ++ )",
        "a [ i ] = a [ j ] ;",
        "string AppEnd ;"
      ],
      "err_line": 19,
      "err_msg": "label ‘AppEnd’ used but not defined"
    },
    {
      "mod_line": [
        11,
        16,
        23
      ],
      "mod_code": [
        "for ( int j = i + 1 ; j < top - 1 ; j ++ )",
        "if ( flag )",
        "string AppEnd ;"
      ],
      "err_line": 19,
      "err_msg": "label ‘AppEnd’ used but not defined"
    },
    {
      "mod_line": [
        11,
        23
      ],
      "mod_code": [
        "for ( int j = i + 1 ; j < top - 1 ; j ++ )",
        "string AppEnd ;"
      ],
      "err_line": 19,
      "err_msg": "label ‘AppEnd’ used but not defined"
    },
    {
      "mod_line": [
        12,
        16,
        23
      ],
      "mod_code": [
        "a [ i ] = a [ j ] ;",
        "if ( flag )",
        "string AppEnd ;"
      ],
      "err_line": 19,
      "err_msg": "label ‘AppEnd’ used but not defined"
    },
    {
      "mod_line": [
        12,
        23
      ],
      "mod_code": [
        "a [ i ] = a [ j ] ;",
        "string AppEnd ;"
      ],
      "err_line": 19,
      "err_msg": "label ‘AppEnd’ used but not defined"
    },
    {
      "mod_line": [
        16,
        23
      ],
      "mod_code": [
        "if ( flag )",
        "string AppEnd ;"
      ],
      "err_line": 19,
      "err_msg": "label ‘AppEnd’ used but not defined"
    }
  ]
}