{
  "meta": {
    "index": 2629,
    "hitid": "34R0BODSP1T3X209WHK3TCLXWCHE56",
    "workerid": "A1R0Q9CUUBSM5F",
    "probid": "98A",
    "subid": "40811981"
  },
  "lines": [
    {
      "line": 0,
      "text": "create strings s and v",
      "code": "string s , v ;",
      "indent": 0
    },
    {
      "line": 1,
      "text": "make string vector matches",
      "code": "vector < string > matches ;",
      "indent": 0
    },
    {
      "line": 2,
      "text": "declare rotatex",
      "code": "void rotatex ( )",
      "indent": 0
    },
    {
      "line": 3,
      "text": "make char temp = v [ 2 ]",
      "code": "char temp = v [ 2 ] ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "set v [ 2 ] to v [ 4 ]",
      "code": "v [ 2 ] = v [ 4 ] ;",
      "indent": 1
    },
    {
      "line": 5,
      "text": "set v [ 4 ] to v [ 3 ]",
      "code": "v [ 4 ] = v [ 3 ] ;",
      "indent": 1
    },
    {
      "line": 6,
      "text": "set v [ 3 ] to v [ 5 ]",
      "code": "v [ 3 ] = v [ 5 ] ;",
      "indent": 1
    },
    {
      "line": 7,
      "text": "set v [ 5 ] to temp",
      "code": "v [ 5 ] = temp ;",
      "indent": 1
    },
    {
      "line": 8,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    },
    {
      "line": 9,
      "text": "declare rotatey",
      "code": "void rotatey ( )",
      "indent": 0
    },
    {
      "line": 10,
      "text": "make char temp = v [ 0 ]",
      "code": "char temp = v [ 0 ] ;",
      "indent": 1
    },
    {
      "line": 11,
      "text": "set v [ 0 ] to v [ 4 ]",
      "code": "v [ 0 ] = v [ 4 ] ;",
      "indent": 1
    },
    {
      "line": 12,
      "text": "set v [ 4 ] to v [ 1 ]",
      "code": "v [ 4 ] = v [ 1 ] ;",
      "indent": 1
    },
    {
      "line": 13,
      "text": "set v [ 1 ] to v [ 5 ]",
      "code": "v [ 1 ] = v [ 5 ] ;",
      "indent": 1
    },
    {
      "line": 14,
      "text": "set v [ 5 ] to temp",
      "code": "v [ 5 ] = temp ;",
      "indent": 1
    },
    {
      "line": 15,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    },
    {
      "line": 16,
      "text": "declare rotatez",
      "code": "void rotatez ( )",
      "indent": 0
    },
    {
      "line": 17,
      "text": "create char temp = v [ 0 ]",
      "code": "char temp = v [ 0 ] ;",
      "indent": 1
    },
    {
      "line": 18,
      "text": "set v [ 0 ] to v [ 2 ]",
      "code": "v [ 0 ] = v [ 2 ] ;",
      "indent": 1
    },
    {
      "line": 19,
      "text": "set v [ 2 ] to v [ 1 ]",
      "code": "v [ 2 ] = v [ 1 ] ;",
      "indent": 1
    },
    {
      "line": 20,
      "text": "set v [ 1 ] to v [ 3 ]",
      "code": "v [ 1 ] = v [ 3 ] ;",
      "indent": 1
    },
    {
      "line": 21,
      "text": "set v [ 3 ] to temp",
      "code": "v [ 3 ] = temp ;",
      "indent": 1
    },
    {
      "line": 22,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    },
    {
      "line": 23,
      "text": "declare check",
      "code": "void check ( )",
      "indent": 0
    },
    {
      "line": 24,
      "text": "set v to s",
      "code": "v = s ;",
      "indent": 1
    },
    {
      "line": 25,
      "text": "for k = 0 to 4 exclusive",
      "code": "for ( int k = 0 ; k < 4 ; k ++ )",
      "indent": 1
    },
    {
      "line": 26,
      "text": "for i = 0 to 4 exclusive",
      "code": "for ( int i = 0 ; i < 4 ; i ++ )",
      "indent": 2
    },
    {
      "line": 27,
      "text": "for j = 0 to 4 exclusive",
      "code": "for ( int j = 0 ; j < 4 ; j ++ )",
      "indent": 3
    },
    {
      "line": 28,
      "text": "if find ( matches . begin ( ) , matches . end ( ) , v ) is not equal to matches . end ( ) , return",
      "code": "if ( find ( matches . begin ( ) , matches . end ( ) , v ) != matches . end ( ) ) { return ; }",
      "indent": 4
    },
    {
      "line": 29,
      "text": "call rotatez ( )",
      "code": "rotatez ( ) ;",
      "indent": 4
    },
    {
      "line": 30,
      "text": "DUMMY",
      "code": "}",
      "indent": 3
    },
    {
      "line": 31,
      "text": "call rotatey ( )",
      "code": "rotatey ( ) ;",
      "indent": 3
    },
    {
      "line": 32,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 33,
      "text": "call rotatex ( )",
      "code": "rotatex ( ) ;",
      "indent": 2
    },
    {
      "line": 34,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 35,
      "text": "append s to matches",
      "code": "matches . push_back ( s ) ;",
      "indent": 1
    },
    {
      "line": 36,
      "text": "return",
      "code": "return ;",
      "indent": 1
    },
    {
      "line": 37,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    },
    {
      "line": 38,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 39,
      "text": "read s",
      "code": "cin >> s ;",
      "indent": 1
    },
    {
      "line": 40,
      "text": "sort s",
      "code": "sort ( s . begin ( ) , s . end ( ) ) ;",
      "indent": 1
    },
    {
      "line": 41,
      "text": "loop indefinitely",
      "code": "while ( true )",
      "indent": 1
    },
    {
      "line": 42,
      "text": "call check ( )",
      "code": "check ( ) ;",
      "indent": 2
    },
    {
      "line": 43,
      "text": "if ! next_permutation ( s . begin ( ) , s . end ( ) ) is truthy , break loop",
      "code": "if ( ! next_permutation ( s . begin ( ) , s . end ( ) ) ) break ;",
      "indent": 2
    },
    {
      "line": 44,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 45,
      "text": "show size of matches",
      "code": "cout << matches . size ( ) << endl ;",
      "indent": 1
    },
    {
      "line": 46,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 47,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        2
      ],
      "mod_code": [
        "int rotatex ;"
      ],
      "err_line": 3,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        9
      ],
      "mod_code": [
        "int rotatey ;"
      ],
      "err_line": 10,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        16
      ],
      "mod_code": [
        "int rotatez ;"
      ],
      "err_line": 17,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        28
      ],
      "mod_code": [
        "if ( find ( matches . begin ( ) , matches . end ( ) ) != matches . end ( ) ) return ;"
      ],
      "err_line": 28,
      "err_msg": "no matching function for call to ‘find(std::vector<std::__cxx11::basic_string<char> >::iterator, std::vector<std::__cxx11::basic_string<char> >::iterator)’"
    },
    {
      "mod_line": [
        0
      ],
      "mod_code": [
        "string s create v ;"
      ],
      "err_line": 0,
      "err_msg": "expected initializer before ‘create’"
    },
    {
      "mod_line": [
        1
      ],
      "mod_code": [
        "vector < int > matches ;"
      ],
      "err_line": 35,
      "err_msg": "no matching function for call to ‘std::vector<int>::push_back(std::__cxx11::string&)’"
    },
    {
      "mod_line": [
        5
      ],
      "mod_code": [
        "char v [ 4 ] = v [ 3 ] ;"
      ],
      "err_line": 5,
      "err_msg": "array must be initialized with a brace-enclosed initializer"
    },
    {
      "mod_line": [
        7
      ],
      "mod_code": [
        "v [ 5 ] = \" temp \" ;"
      ],
      "err_line": 7,
      "err_msg": "invalid conversion from ‘const char*’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        12
      ],
      "mod_code": [
        "char v [ 4 ] = v [ 1 ] ;"
      ],
      "err_line": 12,
      "err_msg": "array must be initialized with a brace-enclosed initializer"
    },
    {
      "mod_line": [
        14
      ],
      "mod_code": [
        "v [ 5 ] = \" temp \" ;"
      ],
      "err_line": 14,
      "err_msg": "invalid conversion from ‘const char*’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        17
      ],
      "mod_code": [
        "char temp = v [ 0 ++ ] ;"
      ],
      "err_line": 17,
      "err_msg": "lvalue required as increment operand"
    },
    {
      "mod_line": [
        21
      ],
      "mod_code": [
        "v [ 3 ] = \" temp \" ;"
      ],
      "err_line": 21,
      "err_msg": "invalid conversion from ‘const char*’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        23
      ],
      "mod_code": [
        "int check ( )"
      ],
      "err_line": 28,
      "err_msg": "return-statement with no value, in function returning ‘int’ [-fpermissive]"
    },
    {
      "mod_line": [
        24
      ],
      "mod_code": [
        "int v = s ;"
      ],
      "err_line": 24,
      "err_msg": "cannot convert ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ to ‘int’ in initialization"
    },
    {
      "mod_line": [
        25
      ],
      "mod_code": [
        "for ( k = 0 ; k < 4 ; k ++ )"
      ],
      "err_line": 25,
      "err_msg": "‘k’ was not declared in this scope"
    },
    {
      "mod_line": [
        26
      ],
      "mod_code": [
        "for ( i = 0 ; i < 4 ; i ++ )"
      ],
      "err_line": 26,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        27
      ],
      "mod_code": [
        "for ( j = 0 ; j < 4 ; j ++ )"
      ],
      "err_line": 27,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        28
      ],
      "mod_code": [
        "if ( find ( matches . begin ( ) , matches . end ( ) ) != matches . end ( ) ) return ) ;"
      ],
      "err_line": 28,
      "err_msg": "no matching function for call to ‘find(std::vector<std::__cxx11::basic_string<char> >::iterator, std::vector<std::__cxx11::basic_string<char> >::iterator)’"
    },
    {
      "mod_line": [
        35
      ],
      "mod_code": [
        "matches . push ( s ) ;"
      ],
      "err_line": 35,
      "err_msg": "‘class std::vector<std::__cxx11::basic_string<char> >’ has no member named ‘push’"
    },
    {
      "mod_line": [
        36
      ],
      "mod_code": [
        "return )"
      ],
      "err_line": 36,
      "err_msg": "expected primary-expression before ‘)’ token"
    },
    {
      "mod_line": [
        42
      ],
      "mod_code": [
        "check ( ) << endl ;"
      ],
      "err_line": 42,
      "err_msg": "invalid operands of types ‘void’ and ‘<unresolved overloaded function type>’ to binary ‘operator<<’"
    },
    {
      "mod_line": [
        2,
        9
      ],
      "mod_code": [
        "int rotatex ;",
        "int rotatey ;"
      ],
      "err_line": 3,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        2,
        9,
        16
      ],
      "mod_code": [
        "int rotatex ;",
        "int rotatey ;",
        "int rotatez ;"
      ],
      "err_line": 3,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        2,
        9,
        16,
        28
      ],
      "mod_code": [
        "int rotatex ;",
        "int rotatey ;",
        "int rotatez ;",
        "if ( find ( matches . begin ( ) , matches . end ( ) ) != matches . end ( ) ) return ;"
      ],
      "err_line": 3,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        2,
        9,
        16,
        43
      ],
      "mod_code": [
        "int rotatex ;",
        "int rotatey ;",
        "int rotatez ;",
        "if ( next_permutation ( s . begin ( ) , s . end ( ) ) ) { break ; }"
      ],
      "err_line": 3,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        2,
        9,
        16,
        35
      ],
      "mod_code": [
        "int rotatex ;",
        "int rotatey ;",
        "int rotatez ;",
        "matches . push ( s ) ;"
      ],
      "err_line": 3,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        2,
        9,
        28
      ],
      "mod_code": [
        "int rotatex ;",
        "int rotatey ;",
        "if ( find ( matches . begin ( ) , matches . end ( ) ) != matches . end ( ) ) return ;"
      ],
      "err_line": 3,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        2,
        9,
        28,
        43
      ],
      "mod_code": [
        "int rotatex ;",
        "int rotatey ;",
        "if ( find ( matches . begin ( ) , matches . end ( ) ) != matches . end ( ) ) return ;",
        "if ( next_permutation ( s . begin ( ) , s . end ( ) ) ) { break ; }"
      ],
      "err_line": 3,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        2,
        9,
        28,
        35
      ],
      "mod_code": [
        "int rotatex ;",
        "int rotatey ;",
        "if ( find ( matches . begin ( ) , matches . end ( ) ) != matches . end ( ) ) return ;",
        "matches . push ( s ) ;"
      ],
      "err_line": 3,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        2,
        9,
        43
      ],
      "mod_code": [
        "int rotatex ;",
        "int rotatey ;",
        "if ( next_permutation ( s . begin ( ) , s . end ( ) ) ) { break ; }"
      ],
      "err_line": 3,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        2,
        9,
        43,
        35
      ],
      "mod_code": [
        "int rotatex ;",
        "int rotatey ;",
        "if ( next_permutation ( s . begin ( ) , s . end ( ) ) ) { break ; }",
        "matches . push ( s ) ;"
      ],
      "err_line": 3,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        2,
        9,
        35
      ],
      "mod_code": [
        "int rotatex ;",
        "int rotatey ;",
        "matches . push ( s ) ;"
      ],
      "err_line": 3,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        2,
        16
      ],
      "mod_code": [
        "int rotatex ;",
        "int rotatez ;"
      ],
      "err_line": 3,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        2,
        16,
        28
      ],
      "mod_code": [
        "int rotatex ;",
        "int rotatez ;",
        "if ( find ( matches . begin ( ) , matches . end ( ) ) != matches . end ( ) ) return ;"
      ],
      "err_line": 3,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        2,
        16,
        28,
        43
      ],
      "mod_code": [
        "int rotatex ;",
        "int rotatez ;",
        "if ( find ( matches . begin ( ) , matches . end ( ) ) != matches . end ( ) ) return ;",
        "if ( next_permutation ( s . begin ( ) , s . end ( ) ) ) { break ; }"
      ],
      "err_line": 3,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        2,
        16,
        28,
        35
      ],
      "mod_code": [
        "int rotatex ;",
        "int rotatez ;",
        "if ( find ( matches . begin ( ) , matches . end ( ) ) != matches . end ( ) ) return ;",
        "matches . push ( s ) ;"
      ],
      "err_line": 3,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        2,
        16,
        43
      ],
      "mod_code": [
        "int rotatex ;",
        "int rotatez ;",
        "if ( next_permutation ( s . begin ( ) , s . end ( ) ) ) { break ; }"
      ],
      "err_line": 3,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        2,
        16,
        43,
        35
      ],
      "mod_code": [
        "int rotatex ;",
        "int rotatez ;",
        "if ( next_permutation ( s . begin ( ) , s . end ( ) ) ) { break ; }",
        "matches . push ( s ) ;"
      ],
      "err_line": 3,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        2,
        16,
        35
      ],
      "mod_code": [
        "int rotatex ;",
        "int rotatez ;",
        "matches . push ( s ) ;"
      ],
      "err_line": 3,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        2,
        28
      ],
      "mod_code": [
        "int rotatex ;",
        "if ( find ( matches . begin ( ) , matches . end ( ) ) != matches . end ( ) ) return ;"
      ],
      "err_line": 3,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        2,
        28,
        43
      ],
      "mod_code": [
        "int rotatex ;",
        "if ( find ( matches . begin ( ) , matches . end ( ) ) != matches . end ( ) ) return ;",
        "if ( next_permutation ( s . begin ( ) , s . end ( ) ) ) { break ; }"
      ],
      "err_line": 3,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        2,
        28,
        43,
        35
      ],
      "mod_code": [
        "int rotatex ;",
        "if ( find ( matches . begin ( ) , matches . end ( ) ) != matches . end ( ) ) return ;",
        "if ( next_permutation ( s . begin ( ) , s . end ( ) ) ) { break ; }",
        "matches . push ( s ) ;"
      ],
      "err_line": 3,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        2,
        28,
        35
      ],
      "mod_code": [
        "int rotatex ;",
        "if ( find ( matches . begin ( ) , matches . end ( ) ) != matches . end ( ) ) return ;",
        "matches . push ( s ) ;"
      ],
      "err_line": 3,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        2,
        43
      ],
      "mod_code": [
        "int rotatex ;",
        "if ( next_permutation ( s . begin ( ) , s . end ( ) ) ) { break ; }"
      ],
      "err_line": 3,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        2,
        43,
        35
      ],
      "mod_code": [
        "int rotatex ;",
        "if ( next_permutation ( s . begin ( ) , s . end ( ) ) ) { break ; }",
        "matches . push ( s ) ;"
      ],
      "err_line": 3,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        2,
        35
      ],
      "mod_code": [
        "int rotatex ;",
        "matches . push ( s ) ;"
      ],
      "err_line": 3,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        9,
        16
      ],
      "mod_code": [
        "int rotatey ;",
        "int rotatez ;"
      ],
      "err_line": 10,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        9,
        16,
        28
      ],
      "mod_code": [
        "int rotatey ;",
        "int rotatez ;",
        "if ( find ( matches . begin ( ) , matches . end ( ) ) != matches . end ( ) ) return ;"
      ],
      "err_line": 10,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        9,
        16,
        28,
        43
      ],
      "mod_code": [
        "int rotatey ;",
        "int rotatez ;",
        "if ( find ( matches . begin ( ) , matches . end ( ) ) != matches . end ( ) ) return ;",
        "if ( next_permutation ( s . begin ( ) , s . end ( ) ) ) { break ; }"
      ],
      "err_line": 10,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        9,
        16,
        28,
        35
      ],
      "mod_code": [
        "int rotatey ;",
        "int rotatez ;",
        "if ( find ( matches . begin ( ) , matches . end ( ) ) != matches . end ( ) ) return ;",
        "matches . push ( s ) ;"
      ],
      "err_line": 10,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        9,
        16,
        43
      ],
      "mod_code": [
        "int rotatey ;",
        "int rotatez ;",
        "if ( next_permutation ( s . begin ( ) , s . end ( ) ) ) { break ; }"
      ],
      "err_line": 10,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        9,
        16,
        43,
        35
      ],
      "mod_code": [
        "int rotatey ;",
        "int rotatez ;",
        "if ( next_permutation ( s . begin ( ) , s . end ( ) ) ) { break ; }",
        "matches . push ( s ) ;"
      ],
      "err_line": 10,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        9,
        16,
        35
      ],
      "mod_code": [
        "int rotatey ;",
        "int rotatez ;",
        "matches . push ( s ) ;"
      ],
      "err_line": 10,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        9,
        28
      ],
      "mod_code": [
        "int rotatey ;",
        "if ( find ( matches . begin ( ) , matches . end ( ) ) != matches . end ( ) ) return ;"
      ],
      "err_line": 10,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        9,
        28,
        43
      ],
      "mod_code": [
        "int rotatey ;",
        "if ( find ( matches . begin ( ) , matches . end ( ) ) != matches . end ( ) ) return ;",
        "if ( next_permutation ( s . begin ( ) , s . end ( ) ) ) { break ; }"
      ],
      "err_line": 10,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        9,
        28,
        43,
        35
      ],
      "mod_code": [
        "int rotatey ;",
        "if ( find ( matches . begin ( ) , matches . end ( ) ) != matches . end ( ) ) return ;",
        "if ( next_permutation ( s . begin ( ) , s . end ( ) ) ) { break ; }",
        "matches . push ( s ) ;"
      ],
      "err_line": 10,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        9,
        28,
        35
      ],
      "mod_code": [
        "int rotatey ;",
        "if ( find ( matches . begin ( ) , matches . end ( ) ) != matches . end ( ) ) return ;",
        "matches . push ( s ) ;"
      ],
      "err_line": 10,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        9,
        43
      ],
      "mod_code": [
        "int rotatey ;",
        "if ( next_permutation ( s . begin ( ) , s . end ( ) ) ) { break ; }"
      ],
      "err_line": 10,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        9,
        43,
        35
      ],
      "mod_code": [
        "int rotatey ;",
        "if ( next_permutation ( s . begin ( ) , s . end ( ) ) ) { break ; }",
        "matches . push ( s ) ;"
      ],
      "err_line": 10,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        9,
        35
      ],
      "mod_code": [
        "int rotatey ;",
        "matches . push ( s ) ;"
      ],
      "err_line": 10,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        16,
        28
      ],
      "mod_code": [
        "int rotatez ;",
        "if ( find ( matches . begin ( ) , matches . end ( ) ) != matches . end ( ) ) return ;"
      ],
      "err_line": 17,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        16,
        28,
        43
      ],
      "mod_code": [
        "int rotatez ;",
        "if ( find ( matches . begin ( ) , matches . end ( ) ) != matches . end ( ) ) return ;",
        "if ( next_permutation ( s . begin ( ) , s . end ( ) ) ) { break ; }"
      ],
      "err_line": 17,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        16,
        28,
        43,
        35
      ],
      "mod_code": [
        "int rotatez ;",
        "if ( find ( matches . begin ( ) , matches . end ( ) ) != matches . end ( ) ) return ;",
        "if ( next_permutation ( s . begin ( ) , s . end ( ) ) ) { break ; }",
        "matches . push ( s ) ;"
      ],
      "err_line": 17,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        16,
        28,
        35
      ],
      "mod_code": [
        "int rotatez ;",
        "if ( find ( matches . begin ( ) , matches . end ( ) ) != matches . end ( ) ) return ;",
        "matches . push ( s ) ;"
      ],
      "err_line": 17,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        16,
        43
      ],
      "mod_code": [
        "int rotatez ;",
        "if ( next_permutation ( s . begin ( ) , s . end ( ) ) ) { break ; }"
      ],
      "err_line": 17,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        16,
        43,
        35
      ],
      "mod_code": [
        "int rotatez ;",
        "if ( next_permutation ( s . begin ( ) , s . end ( ) ) ) { break ; }",
        "matches . push ( s ) ;"
      ],
      "err_line": 17,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        16,
        35
      ],
      "mod_code": [
        "int rotatez ;",
        "matches . push ( s ) ;"
      ],
      "err_line": 17,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        28,
        43
      ],
      "mod_code": [
        "if ( find ( matches . begin ( ) , matches . end ( ) ) != matches . end ( ) ) return ;",
        "if ( next_permutation ( s . begin ( ) , s . end ( ) ) ) { break ; }"
      ],
      "err_line": 28,
      "err_msg": "no matching function for call to ‘find(std::vector<std::__cxx11::basic_string<char> >::iterator, std::vector<std::__cxx11::basic_string<char> >::iterator)’"
    },
    {
      "mod_line": [
        28,
        43,
        35
      ],
      "mod_code": [
        "if ( find ( matches . begin ( ) , matches . end ( ) ) != matches . end ( ) ) return ;",
        "if ( next_permutation ( s . begin ( ) , s . end ( ) ) ) { break ; }",
        "matches . push ( s ) ;"
      ],
      "err_line": 28,
      "err_msg": "no matching function for call to ‘find(std::vector<std::__cxx11::basic_string<char> >::iterator, std::vector<std::__cxx11::basic_string<char> >::iterator)’"
    },
    {
      "mod_line": [
        28,
        35
      ],
      "mod_code": [
        "if ( find ( matches . begin ( ) , matches . end ( ) ) != matches . end ( ) ) return ;",
        "matches . push ( s ) ;"
      ],
      "err_line": 28,
      "err_msg": "no matching function for call to ‘find(std::vector<std::__cxx11::basic_string<char> >::iterator, std::vector<std::__cxx11::basic_string<char> >::iterator)’"
    },
    {
      "mod_line": [
        43,
        35
      ],
      "mod_code": [
        "if ( next_permutation ( s . begin ( ) , s . end ( ) ) ) { break ; }",
        "matches . push ( s ) ;"
      ],
      "err_line": 35,
      "err_msg": "‘class std::vector<std::__cxx11::basic_string<char> >’ has no member named ‘push’"
    }
  ]
}