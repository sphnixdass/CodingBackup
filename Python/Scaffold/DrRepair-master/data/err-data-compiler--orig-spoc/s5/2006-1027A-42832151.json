{
  "meta": {
    "index": 2006,
    "hitid": "3IVEC1GSLPTCK0LI9VTIN2L8P471JV",
    "workerid": "A1R0Q9CUUBSM5F",
    "probid": "1027A",
    "subid": "42832151"
  },
  "lines": [
    {
      "line": 0,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 1,
      "text": "make int loop",
      "code": "int loop ;",
      "indent": 1
    },
    {
      "line": 2,
      "text": "read loop",
      "code": "cin >> loop ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "let integer n",
      "code": "int n ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "make string s",
      "code": "string s ;",
      "indent": 1
    },
    {
      "line": 5,
      "text": "for _ = 0 to loop exclusive",
      "code": "for ( int _ = 0 ; _ < loop ; _ ++ )",
      "indent": 1
    },
    {
      "line": 6,
      "text": "read n and s",
      "code": "cin >> n >> s ;",
      "indent": 2
    },
    {
      "line": 7,
      "text": "make bool isP = true",
      "code": "bool isP = true ;",
      "indent": 2
    },
    {
      "line": 8,
      "text": "for i = 0 to n / 2 exclusive",
      "code": "for ( int i = 0 ; i < n / 2 ; i ++ )",
      "indent": 2
    },
    {
      "line": 9,
      "text": "create integer r = abs ( s . at ( i ) - s . at ( n - i - 1 ) )",
      "code": "int r = abs ( s . at ( i ) - s . at ( n - i - 1 ) ) ;",
      "indent": 3
    },
    {
      "line": 10,
      "text": "if neither r equals 2 or r equals 0",
      "code": "if ( ! ( r == 2 || r == 0 ) )",
      "indent": 3
    },
    {
      "line": 11,
      "text": "set isP to false",
      "code": "isP = false ;",
      "indent": 4
    },
    {
      "line": 12,
      "text": "break loop",
      "code": "break ;",
      "indent": 4
    },
    {
      "line": 13,
      "text": "DUMMY",
      "code": "}",
      "indent": 3
    },
    {
      "line": 14,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 15,
      "text": "show \" YES \" if isP is truthy or \" NO \" if not",
      "code": "cout << ( isP ? \" YES \" : \" NO \" ) << endl ;",
      "indent": 2
    },
    {
      "line": 16,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 17,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        1
      ],
      "mod_code": [
        "break ;"
      ],
      "err_line": 1,
      "err_msg": "break statement not within loop or switch"
    },
    {
      "mod_line": [
        2
      ],
      "mod_code": [
        "while ( cin >> s ) )"
      ],
      "err_line": 2,
      "err_msg": "‘s’ was not declared in this scope"
    },
    {
      "mod_line": [
        1
      ],
      "mod_code": [
        "do"
      ],
      "err_line": 2,
      "err_msg": "‘loop’ was not declared in this scope"
    },
    {
      "mod_line": [
        2
      ],
      "mod_code": [
        "while ( cin >> a )"
      ],
      "err_line": 2,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        4
      ],
      "mod_code": [
        "string n ;"
      ],
      "err_line": 4,
      "err_msg": "conflicting declaration ‘std::__cxx11::string n’"
    },
    {
      "mod_line": [
        8
      ],
      "mod_code": [
        "for ( i = 0 ; i < n / 2 ; i ++ )"
      ],
      "err_line": 8,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        9
      ],
      "mod_code": [
        "int r = abs ( s . at ( i ) - 1 ) . at ( n - i - 1 ) ;"
      ],
      "err_line": 9,
      "err_msg": "request for member ‘at’ in ‘__builtin_abs((int)*s.std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::at()((std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::size_type)i) + -1)’, which is of non-class type ‘int’"
    },
    {
      "mod_line": [
        12
      ],
      "mod_code": [
        "break break ;"
      ],
      "err_line": 12,
      "err_msg": "expected ‘;’ before ‘break’"
    },
    {
      "mod_line": [
        1,
        2
      ],
      "mod_code": [
        "break ;",
        "while ( cin >> s ) )"
      ],
      "err_line": 1,
      "err_msg": "break statement not within loop or switch"
    },
    {
      "mod_line": [
        1,
        2,
        5
      ],
      "mod_code": [
        "break ;",
        "while ( cin >> s ) )",
        "for ( int _ = 0 ; _ < 0 ; _ ++ )"
      ],
      "err_line": 1,
      "err_msg": "break statement not within loop or switch"
    },
    {
      "mod_line": [
        1,
        2,
        5,
        10
      ],
      "mod_code": [
        "break ;",
        "while ( cin >> s ) )",
        "for ( int _ = 0 ; _ < 0 ; _ ++ )",
        "if ( r == 2 || r == 0 )"
      ],
      "err_line": 1,
      "err_msg": "break statement not within loop or switch"
    },
    {
      "mod_line": [
        1,
        2,
        5,
        15
      ],
      "mod_code": [
        "break ;",
        "while ( cin >> s ) )",
        "for ( int _ = 0 ; _ < 0 ; _ ++ )",
        "cout << ( isP ? \" YES \" : \" YES \" ) << endl ;"
      ],
      "err_line": 1,
      "err_msg": "break statement not within loop or switch"
    },
    {
      "mod_line": [
        1,
        2,
        10
      ],
      "mod_code": [
        "break ;",
        "while ( cin >> s ) )",
        "if ( r == 2 || r == 0 )"
      ],
      "err_line": 1,
      "err_msg": "break statement not within loop or switch"
    },
    {
      "mod_line": [
        1,
        2,
        10,
        15
      ],
      "mod_code": [
        "break ;",
        "while ( cin >> s ) )",
        "if ( r == 2 || r == 0 )",
        "cout << ( isP ? \" YES \" : \" YES \" ) << endl ;"
      ],
      "err_line": 1,
      "err_msg": "break statement not within loop or switch"
    },
    {
      "mod_line": [
        1,
        2,
        15
      ],
      "mod_code": [
        "break ;",
        "while ( cin >> s ) )",
        "cout << ( isP ? \" YES \" : \" YES \" ) << endl ;"
      ],
      "err_line": 1,
      "err_msg": "break statement not within loop or switch"
    },
    {
      "mod_line": [
        1,
        5
      ],
      "mod_code": [
        "break ;",
        "for ( int _ = 0 ; _ < 0 ; _ ++ )"
      ],
      "err_line": 1,
      "err_msg": "break statement not within loop or switch"
    },
    {
      "mod_line": [
        1,
        5,
        10
      ],
      "mod_code": [
        "break ;",
        "for ( int _ = 0 ; _ < 0 ; _ ++ )",
        "if ( r == 2 || r == 0 )"
      ],
      "err_line": 1,
      "err_msg": "break statement not within loop or switch"
    },
    {
      "mod_line": [
        1,
        5,
        10,
        15
      ],
      "mod_code": [
        "break ;",
        "for ( int _ = 0 ; _ < 0 ; _ ++ )",
        "if ( r == 2 || r == 0 )",
        "cout << ( isP ? \" YES \" : \" YES \" ) << endl ;"
      ],
      "err_line": 1,
      "err_msg": "break statement not within loop or switch"
    },
    {
      "mod_line": [
        1,
        5,
        10,
        2
      ],
      "mod_code": [
        "break ;",
        "for ( int _ = 0 ; _ < 0 ; _ ++ )",
        "if ( r == 2 || r == 0 )",
        "while ( cin >> a )"
      ],
      "err_line": 1,
      "err_msg": "break statement not within loop or switch"
    },
    {
      "mod_line": [
        1,
        5,
        15
      ],
      "mod_code": [
        "break ;",
        "for ( int _ = 0 ; _ < 0 ; _ ++ )",
        "cout << ( isP ? \" YES \" : \" YES \" ) << endl ;"
      ],
      "err_line": 1,
      "err_msg": "break statement not within loop or switch"
    },
    {
      "mod_line": [
        1,
        5,
        15,
        2
      ],
      "mod_code": [
        "break ;",
        "for ( int _ = 0 ; _ < 0 ; _ ++ )",
        "cout << ( isP ? \" YES \" : \" YES \" ) << endl ;",
        "while ( cin >> a )"
      ],
      "err_line": 1,
      "err_msg": "break statement not within loop or switch"
    },
    {
      "mod_line": [
        1,
        5,
        2
      ],
      "mod_code": [
        "break ;",
        "for ( int _ = 0 ; _ < 0 ; _ ++ )",
        "while ( cin >> a )"
      ],
      "err_line": 1,
      "err_msg": "break statement not within loop or switch"
    },
    {
      "mod_line": [
        1,
        10
      ],
      "mod_code": [
        "break ;",
        "if ( r == 2 || r == 0 )"
      ],
      "err_line": 1,
      "err_msg": "break statement not within loop or switch"
    },
    {
      "mod_line": [
        1,
        10,
        15
      ],
      "mod_code": [
        "break ;",
        "if ( r == 2 || r == 0 )",
        "cout << ( isP ? \" YES \" : \" YES \" ) << endl ;"
      ],
      "err_line": 1,
      "err_msg": "break statement not within loop or switch"
    },
    {
      "mod_line": [
        1,
        10,
        15,
        2
      ],
      "mod_code": [
        "break ;",
        "if ( r == 2 || r == 0 )",
        "cout << ( isP ? \" YES \" : \" YES \" ) << endl ;",
        "while ( cin >> a )"
      ],
      "err_line": 1,
      "err_msg": "break statement not within loop or switch"
    },
    {
      "mod_line": [
        1,
        10,
        2
      ],
      "mod_code": [
        "break ;",
        "if ( r == 2 || r == 0 )",
        "while ( cin >> a )"
      ],
      "err_line": 1,
      "err_msg": "break statement not within loop or switch"
    },
    {
      "mod_line": [
        1,
        15
      ],
      "mod_code": [
        "break ;",
        "cout << ( isP ? \" YES \" : \" YES \" ) << endl ;"
      ],
      "err_line": 1,
      "err_msg": "break statement not within loop or switch"
    },
    {
      "mod_line": [
        1,
        15,
        2
      ],
      "mod_code": [
        "break ;",
        "cout << ( isP ? \" YES \" : \" YES \" ) << endl ;",
        "while ( cin >> a )"
      ],
      "err_line": 1,
      "err_msg": "break statement not within loop or switch"
    },
    {
      "mod_line": [
        1,
        2
      ],
      "mod_code": [
        "break ;",
        "while ( cin >> a )"
      ],
      "err_line": 1,
      "err_msg": "break statement not within loop or switch"
    },
    {
      "mod_line": [
        2,
        5
      ],
      "mod_code": [
        "while ( cin >> s ) )",
        "for ( int _ = 0 ; _ < 0 ; _ ++ )"
      ],
      "err_line": 2,
      "err_msg": "‘s’ was not declared in this scope"
    },
    {
      "mod_line": [
        2,
        5,
        10
      ],
      "mod_code": [
        "while ( cin >> s ) )",
        "for ( int _ = 0 ; _ < 0 ; _ ++ )",
        "if ( r == 2 || r == 0 )"
      ],
      "err_line": 2,
      "err_msg": "‘s’ was not declared in this scope"
    },
    {
      "mod_line": [
        2,
        5,
        10,
        15
      ],
      "mod_code": [
        "while ( cin >> s ) )",
        "for ( int _ = 0 ; _ < 0 ; _ ++ )",
        "if ( r == 2 || r == 0 )",
        "cout << ( isP ? \" YES \" : \" YES \" ) << endl ;"
      ],
      "err_line": 2,
      "err_msg": "‘s’ was not declared in this scope"
    },
    {
      "mod_line": [
        2,
        5,
        15
      ],
      "mod_code": [
        "while ( cin >> s ) )",
        "for ( int _ = 0 ; _ < 0 ; _ ++ )",
        "cout << ( isP ? \" YES \" : \" YES \" ) << endl ;"
      ],
      "err_line": 2,
      "err_msg": "‘s’ was not declared in this scope"
    },
    {
      "mod_line": [
        2,
        10
      ],
      "mod_code": [
        "while ( cin >> s ) )",
        "if ( r == 2 || r == 0 )"
      ],
      "err_line": 2,
      "err_msg": "‘s’ was not declared in this scope"
    },
    {
      "mod_line": [
        2,
        10,
        15
      ],
      "mod_code": [
        "while ( cin >> s ) )",
        "if ( r == 2 || r == 0 )",
        "cout << ( isP ? \" YES \" : \" YES \" ) << endl ;"
      ],
      "err_line": 2,
      "err_msg": "‘s’ was not declared in this scope"
    },
    {
      "mod_line": [
        2,
        15
      ],
      "mod_code": [
        "while ( cin >> s ) )",
        "cout << ( isP ? \" YES \" : \" YES \" ) << endl ;"
      ],
      "err_line": 2,
      "err_msg": "‘s’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        10,
        15,
        2
      ],
      "mod_code": [
        "for ( int _ = 0 ; _ < 0 ; _ ++ )",
        "if ( r == 2 || r == 0 )",
        "cout << ( isP ? \" YES \" : \" YES \" ) << endl ;",
        "while ( cin >> a )"
      ],
      "err_line": 2,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        10,
        2
      ],
      "mod_code": [
        "for ( int _ = 0 ; _ < 0 ; _ ++ )",
        "if ( r == 2 || r == 0 )",
        "while ( cin >> a )"
      ],
      "err_line": 2,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        15,
        2
      ],
      "mod_code": [
        "for ( int _ = 0 ; _ < 0 ; _ ++ )",
        "cout << ( isP ? \" YES \" : \" YES \" ) << endl ;",
        "while ( cin >> a )"
      ],
      "err_line": 2,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        2
      ],
      "mod_code": [
        "for ( int _ = 0 ; _ < 0 ; _ ++ )",
        "while ( cin >> a )"
      ],
      "err_line": 2,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        10,
        15,
        2
      ],
      "mod_code": [
        "if ( r == 2 || r == 0 )",
        "cout << ( isP ? \" YES \" : \" YES \" ) << endl ;",
        "while ( cin >> a )"
      ],
      "err_line": 2,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        10,
        2
      ],
      "mod_code": [
        "if ( r == 2 || r == 0 )",
        "while ( cin >> a )"
      ],
      "err_line": 2,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        15,
        2
      ],
      "mod_code": [
        "cout << ( isP ? \" YES \" : \" YES \" ) << endl ;",
        "while ( cin >> a )"
      ],
      "err_line": 2,
      "err_msg": "‘a’ was not declared in this scope"
    }
  ]
}