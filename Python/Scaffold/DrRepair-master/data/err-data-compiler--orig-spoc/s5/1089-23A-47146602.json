{
  "meta": {
    "index": 1089,
    "hitid": "33J5JKFMK6SPGQ3ARPRA8WCR1JDQ33",
    "workerid": "AIWEXPJAU66D9",
    "probid": "23A",
    "subid": "47146602"
  },
  "lines": [
    {
      "line": 0,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 1,
      "text": "declare string variable with name a",
      "code": "string a ;",
      "indent": 1
    },
    {
      "line": 2,
      "text": "read from the input to a",
      "code": "cin >> a ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "declare integer variable with name num with value 0",
      "code": "int num = 0 ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "for i = 0 to length of a - 1 exclusive",
      "code": "for ( int i = 0 ; i < a . length ( ) - 1 ; i ++ )",
      "indent": 1
    },
    {
      "line": 5,
      "text": "increment j in a loop from i + 1 to length of a exclusive",
      "code": "for ( int j = i + 1 ; j < a . length ( ) ; j ++ )",
      "indent": 2
    },
    {
      "line": 6,
      "text": "if a [ i ] = a [ j ]",
      "code": "if ( a [ i ] == a [ j ] )",
      "indent": 3
    },
    {
      "line": 7,
      "text": "declare integer variable nn = 1",
      "code": "int nn = 1 ;",
      "indent": 4
    },
    {
      "line": 8,
      "text": "in a for loop , change ii from i + 1 and jj from j + 1 , incrementing both",
      "code": "for ( int ii = i + 1 , jj = j + 1 ; jj < a . length ( ) ; jj ++ , ii ++ )",
      "indent": 4
    },
    {
      "line": 9,
      "text": "if a [ ii ] = a [ jj ]",
      "code": "if ( a [ ii ] == a [ jj ] )",
      "indent": 5
    },
    {
      "line": 10,
      "text": "increment nn",
      "code": "nn ++ ;",
      "indent": 6
    },
    {
      "line": 11,
      "text": "else",
      "code": "else",
      "indent": 5
    },
    {
      "line": 12,
      "text": "break the loop",
      "code": "break ;",
      "indent": 6
    },
    {
      "line": 13,
      "text": "DUMMY",
      "code": "}",
      "indent": 4
    },
    {
      "line": 14,
      "text": "if nn is greater than num , assign the new value = nn to num",
      "code": "if ( nn > num ) num = nn ;",
      "indent": 4
    },
    {
      "line": 15,
      "text": "DUMMY",
      "code": "}",
      "indent": 3
    },
    {
      "line": 16,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 17,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 18,
      "text": "print num",
      "code": "cout << num << endl ;",
      "indent": 1
    },
    {
      "line": 19,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 20,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        8
      ],
      "mod_code": [
        "for ( ii = i + 1 ; ii <= j ; ii ++ )"
      ],
      "err_line": 8,
      "err_msg": "‘ii’ was not declared in this scope"
    },
    {
      "mod_line": [
        1
      ],
      "mod_code": [
        "string n ;"
      ],
      "err_line": 2,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        2
      ],
      "mod_code": [
        "cin >> n ;"
      ],
      "err_line": 2,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        3
      ],
      "mod_code": [
        "int num declare 0 ;"
      ],
      "err_line": 3,
      "err_msg": "expected initializer before ‘declare’"
    },
    {
      "mod_line": [
        5
      ],
      "mod_code": [
        "for ( j = i + 1 ; j < a . length ( ) ; j ++ )"
      ],
      "err_line": 5,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        6
      ],
      "mod_code": [
        "if ( a [ i ] ] == a [ j ] )"
      ],
      "err_line": 6,
      "err_msg": "expected ‘)’ before ‘]’ token"
    },
    {
      "mod_line": [
        8
      ],
      "mod_code": [
        "for ( ii = i + 1 , jj ; ii <= j ; ii ++ )"
      ],
      "err_line": 8,
      "err_msg": "‘ii’ was not declared in this scope"
    },
    {
      "mod_line": [
        9
      ],
      "mod_code": [
        "if ( a [ ii ] ] == a [ jj ] )"
      ],
      "err_line": 9,
      "err_msg": "expected ‘)’ before ‘]’ token"
    },
    {
      "mod_line": [
        12
      ],
      "mod_code": [
        "break the ;"
      ],
      "err_line": 12,
      "err_msg": "expected ‘;’ before ‘the’"
    },
    {
      "mod_line": [
        8,
        5
      ],
      "mod_code": [
        "for ( ii = i + 1 ; ii <= j ; ii ++ )",
        "for ( j = i + 1 ; j < a . length ( ) ; j ++ )"
      ],
      "err_line": 5,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        8,
        5,
        12
      ],
      "mod_code": [
        "for ( ii = i + 1 ; ii <= j ; ii ++ )",
        "for ( j = i + 1 ; j < a . length ( ) ; j ++ )",
        "break the ;"
      ],
      "err_line": 5,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        8,
        5,
        12,
        6
      ],
      "mod_code": [
        "for ( ii = i + 1 ; ii <= j ; ii ++ )",
        "for ( j = i + 1 ; j < a . length ( ) ; j ++ )",
        "break the ;",
        "if ( a [ i ] ] == a [ j ] )"
      ],
      "err_line": 5,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        8,
        5,
        12,
        9
      ],
      "mod_code": [
        "for ( ii = i + 1 ; ii <= j ; ii ++ )",
        "for ( j = i + 1 ; j < a . length ( ) ; j ++ )",
        "break the ;",
        "if ( a [ ii ] ] == a [ jj ] )"
      ],
      "err_line": 5,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        8,
        5,
        6
      ],
      "mod_code": [
        "for ( ii = i + 1 ; ii <= j ; ii ++ )",
        "for ( j = i + 1 ; j < a . length ( ) ; j ++ )",
        "if ( a [ i ] ] == a [ j ] )"
      ],
      "err_line": 5,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        8,
        5,
        6,
        9
      ],
      "mod_code": [
        "for ( ii = i + 1 ; ii <= j ; ii ++ )",
        "for ( j = i + 1 ; j < a . length ( ) ; j ++ )",
        "if ( a [ i ] ] == a [ j ] )",
        "if ( a [ ii ] ] == a [ jj ] )"
      ],
      "err_line": 5,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        8,
        5,
        9
      ],
      "mod_code": [
        "for ( ii = i + 1 ; ii <= j ; ii ++ )",
        "for ( j = i + 1 ; j < a . length ( ) ; j ++ )",
        "if ( a [ ii ] ] == a [ jj ] )"
      ],
      "err_line": 5,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        8,
        12
      ],
      "mod_code": [
        "for ( ii = i + 1 ; ii <= j ; ii ++ )",
        "break the ;"
      ],
      "err_line": 8,
      "err_msg": "‘ii’ was not declared in this scope"
    },
    {
      "mod_line": [
        8,
        12,
        6
      ],
      "mod_code": [
        "for ( ii = i + 1 ; ii <= j ; ii ++ )",
        "break the ;",
        "if ( a [ i ] ] == a [ j ] )"
      ],
      "err_line": 6,
      "err_msg": "expected ‘)’ before ‘]’ token"
    },
    {
      "mod_line": [
        8,
        12,
        6,
        9
      ],
      "mod_code": [
        "for ( ii = i + 1 ; ii <= j ; ii ++ )",
        "break the ;",
        "if ( a [ i ] ] == a [ j ] )",
        "if ( a [ ii ] ] == a [ jj ] )"
      ],
      "err_line": 6,
      "err_msg": "expected ‘)’ before ‘]’ token"
    },
    {
      "mod_line": [
        8,
        12,
        9
      ],
      "mod_code": [
        "for ( ii = i + 1 ; ii <= j ; ii ++ )",
        "break the ;",
        "if ( a [ ii ] ] == a [ jj ] )"
      ],
      "err_line": 8,
      "err_msg": "‘ii’ was not declared in this scope"
    },
    {
      "mod_line": [
        8,
        6
      ],
      "mod_code": [
        "for ( ii = i + 1 ; ii <= j ; ii ++ )",
        "if ( a [ i ] ] == a [ j ] )"
      ],
      "err_line": 6,
      "err_msg": "expected ‘)’ before ‘]’ token"
    },
    {
      "mod_line": [
        8,
        6,
        9
      ],
      "mod_code": [
        "for ( ii = i + 1 ; ii <= j ; ii ++ )",
        "if ( a [ i ] ] == a [ j ] )",
        "if ( a [ ii ] ] == a [ jj ] )"
      ],
      "err_line": 6,
      "err_msg": "expected ‘)’ before ‘]’ token"
    },
    {
      "mod_line": [
        8,
        9
      ],
      "mod_code": [
        "for ( ii = i + 1 ; ii <= j ; ii ++ )",
        "if ( a [ ii ] ] == a [ jj ] )"
      ],
      "err_line": 8,
      "err_msg": "‘ii’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        12
      ],
      "mod_code": [
        "for ( j = i + 1 ; j < a . length ( ) ; j ++ )",
        "break the ;"
      ],
      "err_line": 5,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        12,
        6
      ],
      "mod_code": [
        "for ( j = i + 1 ; j < a . length ( ) ; j ++ )",
        "break the ;",
        "if ( a [ i ] ] == a [ j ] )"
      ],
      "err_line": 5,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        12,
        6,
        8
      ],
      "mod_code": [
        "for ( j = i + 1 ; j < a . length ( ) ; j ++ )",
        "break the ;",
        "if ( a [ i ] ] == a [ j ] )",
        "for ( ii = i + 1 , jj ; ii <= j ; ii ++ )"
      ],
      "err_line": 5,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        12,
        6,
        9
      ],
      "mod_code": [
        "for ( j = i + 1 ; j < a . length ( ) ; j ++ )",
        "break the ;",
        "if ( a [ i ] ] == a [ j ] )",
        "if ( a [ ii ] ] == a [ jj ] )"
      ],
      "err_line": 5,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        12,
        8
      ],
      "mod_code": [
        "for ( j = i + 1 ; j < a . length ( ) ; j ++ )",
        "break the ;",
        "for ( ii = i + 1 , jj ; ii <= j ; ii ++ )"
      ],
      "err_line": 5,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        12,
        8,
        9
      ],
      "mod_code": [
        "for ( j = i + 1 ; j < a . length ( ) ; j ++ )",
        "break the ;",
        "for ( ii = i + 1 , jj ; ii <= j ; ii ++ )",
        "if ( a [ ii ] ] == a [ jj ] )"
      ],
      "err_line": 5,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        12,
        9
      ],
      "mod_code": [
        "for ( j = i + 1 ; j < a . length ( ) ; j ++ )",
        "break the ;",
        "if ( a [ ii ] ] == a [ jj ] )"
      ],
      "err_line": 5,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        6
      ],
      "mod_code": [
        "for ( j = i + 1 ; j < a . length ( ) ; j ++ )",
        "if ( a [ i ] ] == a [ j ] )"
      ],
      "err_line": 5,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        6,
        8
      ],
      "mod_code": [
        "for ( j = i + 1 ; j < a . length ( ) ; j ++ )",
        "if ( a [ i ] ] == a [ j ] )",
        "for ( ii = i + 1 , jj ; ii <= j ; ii ++ )"
      ],
      "err_line": 5,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        6,
        8,
        9
      ],
      "mod_code": [
        "for ( j = i + 1 ; j < a . length ( ) ; j ++ )",
        "if ( a [ i ] ] == a [ j ] )",
        "for ( ii = i + 1 , jj ; ii <= j ; ii ++ )",
        "if ( a [ ii ] ] == a [ jj ] )"
      ],
      "err_line": 5,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        6,
        9
      ],
      "mod_code": [
        "for ( j = i + 1 ; j < a . length ( ) ; j ++ )",
        "if ( a [ i ] ] == a [ j ] )",
        "if ( a [ ii ] ] == a [ jj ] )"
      ],
      "err_line": 5,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        8
      ],
      "mod_code": [
        "for ( j = i + 1 ; j < a . length ( ) ; j ++ )",
        "for ( ii = i + 1 , jj ; ii <= j ; ii ++ )"
      ],
      "err_line": 5,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        8,
        9
      ],
      "mod_code": [
        "for ( j = i + 1 ; j < a . length ( ) ; j ++ )",
        "for ( ii = i + 1 , jj ; ii <= j ; ii ++ )",
        "if ( a [ ii ] ] == a [ jj ] )"
      ],
      "err_line": 5,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        9
      ],
      "mod_code": [
        "for ( j = i + 1 ; j < a . length ( ) ; j ++ )",
        "if ( a [ ii ] ] == a [ jj ] )"
      ],
      "err_line": 5,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        12,
        6
      ],
      "mod_code": [
        "break the ;",
        "if ( a [ i ] ] == a [ j ] )"
      ],
      "err_line": 6,
      "err_msg": "expected ‘)’ before ‘]’ token"
    },
    {
      "mod_line": [
        12,
        6,
        8
      ],
      "mod_code": [
        "break the ;",
        "if ( a [ i ] ] == a [ j ] )",
        "for ( ii = i + 1 , jj ; ii <= j ; ii ++ )"
      ],
      "err_line": 6,
      "err_msg": "expected ‘)’ before ‘]’ token"
    },
    {
      "mod_line": [
        12,
        6,
        8,
        9
      ],
      "mod_code": [
        "break the ;",
        "if ( a [ i ] ] == a [ j ] )",
        "for ( ii = i + 1 , jj ; ii <= j ; ii ++ )",
        "if ( a [ ii ] ] == a [ jj ] )"
      ],
      "err_line": 6,
      "err_msg": "expected ‘)’ before ‘]’ token"
    },
    {
      "mod_line": [
        12,
        6,
        9
      ],
      "mod_code": [
        "break the ;",
        "if ( a [ i ] ] == a [ j ] )",
        "if ( a [ ii ] ] == a [ jj ] )"
      ],
      "err_line": 6,
      "err_msg": "expected ‘)’ before ‘]’ token"
    },
    {
      "mod_line": [
        12,
        8
      ],
      "mod_code": [
        "break the ;",
        "for ( ii = i + 1 , jj ; ii <= j ; ii ++ )"
      ],
      "err_line": 8,
      "err_msg": "‘ii’ was not declared in this scope"
    },
    {
      "mod_line": [
        12,
        8,
        9
      ],
      "mod_code": [
        "break the ;",
        "for ( ii = i + 1 , jj ; ii <= j ; ii ++ )",
        "if ( a [ ii ] ] == a [ jj ] )"
      ],
      "err_line": 8,
      "err_msg": "‘ii’ was not declared in this scope"
    },
    {
      "mod_line": [
        12,
        9
      ],
      "mod_code": [
        "break the ;",
        "if ( a [ ii ] ] == a [ jj ] )"
      ],
      "err_line": 9,
      "err_msg": "expected ‘)’ before ‘]’ token"
    },
    {
      "mod_line": [
        6,
        8
      ],
      "mod_code": [
        "if ( a [ i ] ] == a [ j ] )",
        "for ( ii = i + 1 , jj ; ii <= j ; ii ++ )"
      ],
      "err_line": 6,
      "err_msg": "expected ‘)’ before ‘]’ token"
    },
    {
      "mod_line": [
        6,
        8,
        9
      ],
      "mod_code": [
        "if ( a [ i ] ] == a [ j ] )",
        "for ( ii = i + 1 , jj ; ii <= j ; ii ++ )",
        "if ( a [ ii ] ] == a [ jj ] )"
      ],
      "err_line": 6,
      "err_msg": "expected ‘)’ before ‘]’ token"
    },
    {
      "mod_line": [
        6,
        9
      ],
      "mod_code": [
        "if ( a [ i ] ] == a [ j ] )",
        "if ( a [ ii ] ] == a [ jj ] )"
      ],
      "err_line": 6,
      "err_msg": "expected ‘)’ before ‘]’ token"
    },
    {
      "mod_line": [
        8,
        9
      ],
      "mod_code": [
        "for ( ii = i + 1 , jj ; ii <= j ; ii ++ )",
        "if ( a [ ii ] ] == a [ jj ] )"
      ],
      "err_line": 8,
      "err_msg": "‘ii’ was not declared in this scope"
    }
  ]
}