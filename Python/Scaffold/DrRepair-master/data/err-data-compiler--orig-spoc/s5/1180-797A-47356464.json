{
  "meta": {
    "index": 1180,
    "hitid": "3FO95NVK5CUTC83PUJHBLUU8PL9RSS",
    "workerid": "A1APYLD4DUK33J",
    "probid": "797A",
    "subid": "47356464"
  },
  "lines": [
    {
      "line": 0,
      "text": "declare integers n , k , p",
      "code": "int n , k , p ;",
      "indent": 0
    },
    {
      "line": 1,
      "text": "declare integer arrays ivmind size 100005 , prime size 100005",
      "code": "int ivmind [ 100005 ] , prime [ 100005 ] ;",
      "indent": 0
    },
    {
      "line": 2,
      "text": "declare integer array a size 25 , integers num , fff",
      "code": "int a [ 25 ] , num , fff ;",
      "indent": 0
    },
    {
      "line": 3,
      "text": "declare ES with integer n as argument , returning void",
      "code": "void ES ( int n )",
      "indent": 0
    },
    {
      "line": 4,
      "text": "for i = 2 to n inclusive",
      "code": "for ( int i = 2 ; i <= n ; i ++ )",
      "indent": 1
    },
    {
      "line": 5,
      "text": "if not ivmind [ i ] , let ivmind [ i ] be i , let prime [ increment p ] be i",
      "code": "if ( ! ivmind [ i ] ) ivmind [ i ] = i , prime [ ++ p ] = i ;",
      "indent": 2
    },
    {
      "line": 6,
      "text": "for j = 1 to p inclusive and i * prime [ j ] is less than or equal to n , incrementing j",
      "code": "for ( int j = 1 ; j <= p && i * prime [ j ] <= n ; j ++ )",
      "indent": 2
    },
    {
      "line": 7,
      "text": "let ivmind [ i * prime [ j ] ] be 1",
      "code": "ivmind [ i * prime [ j ] ] = 1 ;",
      "indent": 3
    },
    {
      "line": 8,
      "text": "if i % prime [ j ] is 0 , end loop",
      "code": "if ( i % prime [ j ] == 0 ) break ;",
      "indent": 3
    },
    {
      "line": 9,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 10,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 11,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    },
    {
      "line": 12,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 13,
      "text": "read n and k",
      "code": "cin >> n >> k ;",
      "indent": 1
    },
    {
      "line": 14,
      "text": "run ES with n as argument",
      "code": "ES ( n ) ;",
      "indent": 1
    },
    {
      "line": 15,
      "text": "for i = 1 to k - 1 inclusive",
      "code": "for ( int i = 1 ; i <= k - 1 ; i ++ )",
      "indent": 1
    },
    {
      "line": 16,
      "text": "let fff = 0",
      "code": "fff = 0 ;",
      "indent": 2
    },
    {
      "line": 17,
      "text": "for j = 1 to prime [ j ] is less than or equal to n , incrementing j",
      "code": "for ( int j = 1 ; prime [ j ] <= n ; j ++ )",
      "indent": 2
    },
    {
      "line": 18,
      "text": "if n % prime [ j ] is 0",
      "code": "if ( n % prime [ j ] == 0 )",
      "indent": 3
    },
    {
      "line": 19,
      "text": "let a [ increment num ] be prime [ j ]",
      "code": "a [ ++ num ] = prime [ j ] ;",
      "indent": 4
    },
    {
      "line": 20,
      "text": "let n be n / prime [ j ]",
      "code": "n = n / prime [ j ] ;",
      "indent": 4
    },
    {
      "line": 21,
      "text": "let fff be 1",
      "code": "fff = 1 ;",
      "indent": 4
    },
    {
      "line": 22,
      "text": "end loop",
      "code": "break ;",
      "indent": 4
    },
    {
      "line": 23,
      "text": "DUMMY",
      "code": "}",
      "indent": 3
    },
    {
      "line": 24,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 25,
      "text": "if fff is 0 or n is 1",
      "code": "if ( fff == 0 || n == 1 )",
      "indent": 2
    },
    {
      "line": 26,
      "text": "print \" - 1 \" , newline",
      "code": "cout << \" -1 \" << endl ;",
      "indent": 3
    },
    {
      "line": 27,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 3
    },
    {
      "line": 28,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 29,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 30,
      "text": "for i = 1 to num inclusive , print a [ i ] , \" \"",
      "code": "for ( int i = 1 ; i <= num ; i ++ ) { cout << a [ i ] << \" \" ; }",
      "indent": 1
    },
    {
      "line": 31,
      "text": "print n , newline",
      "code": "cout << n << endl ;",
      "indent": 1
    },
    {
      "line": 32,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 33,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        5
      ],
      "mod_code": [
        "if ( ! ivmind [ i ] ) ivmind [ i ++ ] = i , prime = i ;"
      ],
      "err_line": 5,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [100005]’"
    },
    {
      "mod_line": [
        1
      ],
      "mod_code": [
        "int ivmind [ 100005 ] [ 100005 ] ;"
      ],
      "err_line": 5,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [100005]’"
    },
    {
      "mod_line": [
        2
      ],
      "mod_code": [
        "int a [ 25 ] , num [ 25 ] ;"
      ],
      "err_line": 16,
      "err_msg": "‘fff’ was not declared in this scope"
    },
    {
      "mod_line": [
        3
      ],
      "mod_code": [
        "void ES ( int n ) ;"
      ],
      "err_line": 4,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        4
      ],
      "mod_code": [
        "for ( i = 2 ; i <= n ; i ++ )"
      ],
      "err_line": 4,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        6
      ],
      "mod_code": [
        "for ( int j = 1 ; i <= p ; j ++ ) { i = i * prime [ j ] ; }"
      ],
      "err_line": 7,
      "err_msg": "name lookup of ‘j’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        7
      ],
      "mod_code": [
        "ivmind [ i * prime [ j ] ] be 1 ;"
      ],
      "err_line": 7,
      "err_msg": "expected ‘;’ before ‘be’"
    },
    {
      "mod_line": [
        15
      ],
      "mod_code": [
        "for ( i = 1 ; i <= k - 1 ; i ++ )"
      ],
      "err_line": 15,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        17
      ],
      "mod_code": [
        "for ( j = 1 ; prime [ j ] <= n ; j ++ )"
      ],
      "err_line": 17,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        19
      ],
      "mod_code": [
        "if ( ! ivmind [ i ] ) ivmind [ i ++ ] = i , prime = i ;",
        "a [ num ++ ] = prime [ j ] ;"
      ],
      "err_line": 5,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [100005]’"
    },
    {
      "mod_line": [
        5,
        19,
        15
      ],
      "mod_code": [
        "if ( ! ivmind [ i ] ) ivmind [ i ++ ] = i , prime = i ;",
        "a [ num ++ ] = prime [ j ] ;",
        "for ( i = 1 ; i <= k - 1 ; i ++ )"
      ],
      "err_line": 5,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [100005]’"
    },
    {
      "mod_line": [
        5,
        19,
        15,
        7
      ],
      "mod_code": [
        "if ( ! ivmind [ i ] ) ivmind [ i ++ ] = i , prime = i ;",
        "a [ num ++ ] = prime [ j ] ;",
        "for ( i = 1 ; i <= k - 1 ; i ++ )",
        "ivmind [ i * prime [ j ] ] be 1 ;"
      ],
      "err_line": 5,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [100005]’"
    },
    {
      "mod_line": [
        5,
        19,
        15,
        4
      ],
      "mod_code": [
        "if ( ! ivmind [ i ] ) ivmind [ i ++ ] = i , prime = i ;",
        "a [ num ++ ] = prime [ j ] ;",
        "for ( i = 1 ; i <= k - 1 ; i ++ )",
        "for ( i = 2 ; i <= n ; i ++ )"
      ],
      "err_line": 4,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        19,
        7
      ],
      "mod_code": [
        "if ( ! ivmind [ i ] ) ivmind [ i ++ ] = i , prime = i ;",
        "a [ num ++ ] = prime [ j ] ;",
        "ivmind [ i * prime [ j ] ] be 1 ;"
      ],
      "err_line": 5,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [100005]’"
    },
    {
      "mod_line": [
        5,
        19,
        7,
        4
      ],
      "mod_code": [
        "if ( ! ivmind [ i ] ) ivmind [ i ++ ] = i , prime = i ;",
        "a [ num ++ ] = prime [ j ] ;",
        "ivmind [ i * prime [ j ] ] be 1 ;",
        "for ( i = 2 ; i <= n ; i ++ )"
      ],
      "err_line": 4,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        19,
        4
      ],
      "mod_code": [
        "if ( ! ivmind [ i ] ) ivmind [ i ++ ] = i , prime = i ;",
        "a [ num ++ ] = prime [ j ] ;",
        "for ( i = 2 ; i <= n ; i ++ )"
      ],
      "err_line": 4,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        15
      ],
      "mod_code": [
        "if ( ! ivmind [ i ] ) ivmind [ i ++ ] = i , prime = i ;",
        "for ( i = 1 ; i <= k - 1 ; i ++ )"
      ],
      "err_line": 5,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [100005]’"
    },
    {
      "mod_line": [
        5,
        15,
        7
      ],
      "mod_code": [
        "if ( ! ivmind [ i ] ) ivmind [ i ++ ] = i , prime = i ;",
        "for ( i = 1 ; i <= k - 1 ; i ++ )",
        "ivmind [ i * prime [ j ] ] be 1 ;"
      ],
      "err_line": 5,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [100005]’"
    },
    {
      "mod_line": [
        5,
        15,
        7,
        4
      ],
      "mod_code": [
        "if ( ! ivmind [ i ] ) ivmind [ i ++ ] = i , prime = i ;",
        "for ( i = 1 ; i <= k - 1 ; i ++ )",
        "ivmind [ i * prime [ j ] ] be 1 ;",
        "for ( i = 2 ; i <= n ; i ++ )"
      ],
      "err_line": 4,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        15,
        4
      ],
      "mod_code": [
        "if ( ! ivmind [ i ] ) ivmind [ i ++ ] = i , prime = i ;",
        "for ( i = 1 ; i <= k - 1 ; i ++ )",
        "for ( i = 2 ; i <= n ; i ++ )"
      ],
      "err_line": 4,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        7
      ],
      "mod_code": [
        "if ( ! ivmind [ i ] ) ivmind [ i ++ ] = i , prime = i ;",
        "ivmind [ i * prime [ j ] ] be 1 ;"
      ],
      "err_line": 5,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [100005]’"
    },
    {
      "mod_line": [
        5,
        7,
        4
      ],
      "mod_code": [
        "if ( ! ivmind [ i ] ) ivmind [ i ++ ] = i , prime = i ;",
        "ivmind [ i * prime [ j ] ] be 1 ;",
        "for ( i = 2 ; i <= n ; i ++ )"
      ],
      "err_line": 4,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        4
      ],
      "mod_code": [
        "if ( ! ivmind [ i ] ) ivmind [ i ++ ] = i , prime = i ;",
        "for ( i = 2 ; i <= n ; i ++ )"
      ],
      "err_line": 4,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        19,
        15
      ],
      "mod_code": [
        "a [ num ++ ] = prime [ j ] ;",
        "for ( i = 1 ; i <= k - 1 ; i ++ )"
      ],
      "err_line": 15,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        19,
        15,
        5
      ],
      "mod_code": [
        "a [ num ++ ] = prime [ j ] ;",
        "for ( i = 1 ; i <= k - 1 ; i ++ )",
        "if ( ! ivmind [ i ] ) ivmind [ i ++ ] = i , prime [ p ++ ] = i ;"
      ],
      "err_line": 15,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        19,
        15,
        5,
        7
      ],
      "mod_code": [
        "a [ num ++ ] = prime [ j ] ;",
        "for ( i = 1 ; i <= k - 1 ; i ++ )",
        "if ( ! ivmind [ i ] ) ivmind [ i ++ ] = i , prime [ p ++ ] = i ;",
        "ivmind [ i * prime [ j ] ] be 1 ;"
      ],
      "err_line": 7,
      "err_msg": "expected ‘;’ before ‘be’"
    },
    {
      "mod_line": [
        19,
        15,
        5,
        4
      ],
      "mod_code": [
        "a [ num ++ ] = prime [ j ] ;",
        "for ( i = 1 ; i <= k - 1 ; i ++ )",
        "if ( ! ivmind [ i ] ) ivmind [ i ++ ] = i , prime [ p ++ ] = i ;",
        "for ( i = 2 ; i <= n ; i ++ )"
      ],
      "err_line": 4,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        19,
        15,
        7
      ],
      "mod_code": [
        "a [ num ++ ] = prime [ j ] ;",
        "for ( i = 1 ; i <= k - 1 ; i ++ )",
        "ivmind [ i * prime [ j ] ] be 1 ;"
      ],
      "err_line": 7,
      "err_msg": "expected ‘;’ before ‘be’"
    },
    {
      "mod_line": [
        19,
        15,
        7,
        4
      ],
      "mod_code": [
        "a [ num ++ ] = prime [ j ] ;",
        "for ( i = 1 ; i <= k - 1 ; i ++ )",
        "ivmind [ i * prime [ j ] ] be 1 ;",
        "for ( i = 2 ; i <= n ; i ++ )"
      ],
      "err_line": 4,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        19,
        15,
        4
      ],
      "mod_code": [
        "a [ num ++ ] = prime [ j ] ;",
        "for ( i = 1 ; i <= k - 1 ; i ++ )",
        "for ( i = 2 ; i <= n ; i ++ )"
      ],
      "err_line": 4,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        19,
        5,
        7
      ],
      "mod_code": [
        "a [ num ++ ] = prime [ j ] ;",
        "if ( ! ivmind [ i ] ) ivmind [ i ++ ] = i , prime [ p ++ ] = i ;",
        "ivmind [ i * prime [ j ] ] be 1 ;"
      ],
      "err_line": 7,
      "err_msg": "expected ‘;’ before ‘be’"
    },
    {
      "mod_line": [
        19,
        5,
        7,
        4
      ],
      "mod_code": [
        "a [ num ++ ] = prime [ j ] ;",
        "if ( ! ivmind [ i ] ) ivmind [ i ++ ] = i , prime [ p ++ ] = i ;",
        "ivmind [ i * prime [ j ] ] be 1 ;",
        "for ( i = 2 ; i <= n ; i ++ )"
      ],
      "err_line": 4,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        19,
        5,
        4
      ],
      "mod_code": [
        "a [ num ++ ] = prime [ j ] ;",
        "if ( ! ivmind [ i ] ) ivmind [ i ++ ] = i , prime [ p ++ ] = i ;",
        "for ( i = 2 ; i <= n ; i ++ )"
      ],
      "err_line": 4,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        19,
        7
      ],
      "mod_code": [
        "a [ num ++ ] = prime [ j ] ;",
        "ivmind [ i * prime [ j ] ] be 1 ;"
      ],
      "err_line": 7,
      "err_msg": "expected ‘;’ before ‘be’"
    },
    {
      "mod_line": [
        19,
        7,
        4
      ],
      "mod_code": [
        "a [ num ++ ] = prime [ j ] ;",
        "ivmind [ i * prime [ j ] ] be 1 ;",
        "for ( i = 2 ; i <= n ; i ++ )"
      ],
      "err_line": 4,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        19,
        4
      ],
      "mod_code": [
        "a [ num ++ ] = prime [ j ] ;",
        "for ( i = 2 ; i <= n ; i ++ )"
      ],
      "err_line": 4,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        15,
        5
      ],
      "mod_code": [
        "for ( i = 1 ; i <= k - 1 ; i ++ )",
        "if ( ! ivmind [ i ] ) ivmind [ i ++ ] = i , prime [ p ++ ] = i ;"
      ],
      "err_line": 15,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        15,
        5,
        7
      ],
      "mod_code": [
        "for ( i = 1 ; i <= k - 1 ; i ++ )",
        "if ( ! ivmind [ i ] ) ivmind [ i ++ ] = i , prime [ p ++ ] = i ;",
        "ivmind [ i * prime [ j ] ] be 1 ;"
      ],
      "err_line": 7,
      "err_msg": "expected ‘;’ before ‘be’"
    },
    {
      "mod_line": [
        15,
        5,
        7,
        4
      ],
      "mod_code": [
        "for ( i = 1 ; i <= k - 1 ; i ++ )",
        "if ( ! ivmind [ i ] ) ivmind [ i ++ ] = i , prime [ p ++ ] = i ;",
        "ivmind [ i * prime [ j ] ] be 1 ;",
        "for ( i = 2 ; i <= n ; i ++ )"
      ],
      "err_line": 4,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        15,
        5,
        4
      ],
      "mod_code": [
        "for ( i = 1 ; i <= k - 1 ; i ++ )",
        "if ( ! ivmind [ i ] ) ivmind [ i ++ ] = i , prime [ p ++ ] = i ;",
        "for ( i = 2 ; i <= n ; i ++ )"
      ],
      "err_line": 4,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        15,
        7
      ],
      "mod_code": [
        "for ( i = 1 ; i <= k - 1 ; i ++ )",
        "ivmind [ i * prime [ j ] ] be 1 ;"
      ],
      "err_line": 7,
      "err_msg": "expected ‘;’ before ‘be’"
    },
    {
      "mod_line": [
        15,
        7,
        4
      ],
      "mod_code": [
        "for ( i = 1 ; i <= k - 1 ; i ++ )",
        "ivmind [ i * prime [ j ] ] be 1 ;",
        "for ( i = 2 ; i <= n ; i ++ )"
      ],
      "err_line": 4,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        15,
        4
      ],
      "mod_code": [
        "for ( i = 1 ; i <= k - 1 ; i ++ )",
        "for ( i = 2 ; i <= n ; i ++ )"
      ],
      "err_line": 4,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        7
      ],
      "mod_code": [
        "if ( ! ivmind [ i ] ) ivmind [ i ++ ] = i , prime [ p ++ ] = i ;",
        "ivmind [ i * prime [ j ] ] be 1 ;"
      ],
      "err_line": 7,
      "err_msg": "expected ‘;’ before ‘be’"
    },
    {
      "mod_line": [
        5,
        7,
        4
      ],
      "mod_code": [
        "if ( ! ivmind [ i ] ) ivmind [ i ++ ] = i , prime [ p ++ ] = i ;",
        "ivmind [ i * prime [ j ] ] be 1 ;",
        "for ( i = 2 ; i <= n ; i ++ )"
      ],
      "err_line": 4,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        4
      ],
      "mod_code": [
        "if ( ! ivmind [ i ] ) ivmind [ i ++ ] = i , prime [ p ++ ] = i ;",
        "for ( i = 2 ; i <= n ; i ++ )"
      ],
      "err_line": 4,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        7,
        4
      ],
      "mod_code": [
        "ivmind [ i * prime [ j ] ] be 1 ;",
        "for ( i = 2 ; i <= n ; i ++ )"
      ],
      "err_line": 4,
      "err_msg": "‘i’ was not declared in this scope"
    }
  ]
}