{
  "meta": {
    "index": 2539,
    "hitid": "3GS542CVJVHM269SO64H1YKM5F159N",
    "workerid": "A2QLFQ2ZYR6B7M",
    "probid": "779A",
    "subid": "46904488"
  },
  "lines": [
    {
      "line": 0,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 1,
      "text": "n = int",
      "code": "int n ;",
      "indent": 1
    },
    {
      "line": 2,
      "text": "read n",
      "code": "cin >> n ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "a = array of 6 int",
      "code": "int a [ 6 ] ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "b = array of 6 int",
      "code": "int b [ 6 ] ;",
      "indent": 1
    },
    {
      "line": 5,
      "text": "fill a with 0",
      "code": "memset ( a , 0 , sizeof ( a ) ) ;",
      "indent": 1
    },
    {
      "line": 6,
      "text": "fill b with 0",
      "code": "memset ( b , 0 , sizeof ( b ) ) ;",
      "indent": 1
    },
    {
      "line": 7,
      "text": "for i = 0 to n exclusive",
      "code": "for ( int i = 0 ; i < n ; i ++ )",
      "indent": 1
    },
    {
      "line": 8,
      "text": "t = int",
      "code": "int t ;",
      "indent": 2
    },
    {
      "line": 9,
      "text": "read t",
      "code": "cin >> t ;",
      "indent": 2
    },
    {
      "line": 10,
      "text": "increment a [ t ]",
      "code": "a [ t ] ++ ;",
      "indent": 2
    },
    {
      "line": 11,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 12,
      "text": "for i = 0 to n exclusive",
      "code": "for ( int i = 0 ; i < n ; i ++ )",
      "indent": 1
    },
    {
      "line": 13,
      "text": "t = int",
      "code": "int t ;",
      "indent": 2
    },
    {
      "line": 14,
      "text": "read t",
      "code": "cin >> t ;",
      "indent": 2
    },
    {
      "line": 15,
      "text": "increment b [ t ]",
      "code": "b [ t ] ++ ;",
      "indent": 2
    },
    {
      "line": 16,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 17,
      "text": "cnt = 0",
      "code": "int cnt = 0 ;",
      "indent": 1
    },
    {
      "line": 18,
      "text": "judge = 1",
      "code": "int judge = 1 ;",
      "indent": 1
    },
    {
      "line": 19,
      "text": "for i = 1 to 5 inclusive",
      "code": "for ( int i = 1 ; i <= 5 ; i ++ )",
      "indent": 1
    },
    {
      "line": 20,
      "text": "if abs ( a [ i ] - b [ i ] ) is even",
      "code": "if ( abs ( ( a [ i ] - b [ i ] ) % 2 == 0 ) )",
      "indent": 2
    },
    {
      "line": 21,
      "text": "add abs ( ( a [ i ] - b [ i ] ) / 2 ) to cnt",
      "code": "cnt += abs ( ( ( a [ i ] - b [ i ] ) / 2 ) ) ;",
      "indent": 3
    },
    {
      "line": 22,
      "text": "else",
      "code": "else",
      "indent": 2
    },
    {
      "line": 23,
      "text": "judge = 0",
      "code": "judge = 0 ;",
      "indent": 3
    },
    {
      "line": 24,
      "text": "break",
      "code": "break ;",
      "indent": 3
    },
    {
      "line": 25,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 26,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 27,
      "text": "if judge is 1",
      "code": "if ( judge == 1 )",
      "indent": 1
    },
    {
      "line": 28,
      "text": "print cnt / 2",
      "code": "cout << cnt / 2 << endl ;",
      "indent": 2
    },
    {
      "line": 29,
      "text": "else",
      "code": "else",
      "indent": 1
    },
    {
      "line": 30,
      "text": "print - 1",
      "code": "cout << - 1 << endl ;",
      "indent": 2
    },
    {
      "line": 31,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        2
      ],
      "mod_code": [
        "while ( cin >> n )"
      ],
      "err_line": 5,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        7
      ],
      "mod_code": [
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 7,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        9
      ],
      "mod_code": [
        "cin . get ( t ) ;"
      ],
      "err_line": 9,
      "err_msg": "invalid initialization of non-const reference of type ‘std::basic_istream<char>::char_type& {aka char&}’ from an rvalue of type ‘std::basic_istream<char>::char_type {aka char}’"
    },
    {
      "mod_line": [
        12
      ],
      "mod_code": [
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 12,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        14
      ],
      "mod_code": [
        "cin . get ( t ) ;"
      ],
      "err_line": 14,
      "err_msg": "invalid initialization of non-const reference of type ‘std::basic_istream<char>::char_type& {aka char&}’ from an rvalue of type ‘std::basic_istream<char>::char_type {aka char}’"
    },
    {
      "mod_line": [
        18
      ],
      "mod_code": [
        "judge = 1 ;"
      ],
      "err_line": 18,
      "err_msg": "‘judge’ was not declared in this scope"
    },
    {
      "mod_line": [
        19
      ],
      "mod_code": [
        "for ( i = 1 ; i <= 5 ; i ++ )"
      ],
      "err_line": 19,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        24
      ],
      "mod_code": [
        "break break ;"
      ],
      "err_line": 24,
      "err_msg": "expected ‘;’ before ‘break’"
    },
    {
      "mod_line": [
        27
      ],
      "mod_code": [
        "else if ( judge == 1 )"
      ],
      "err_line": 27,
      "err_msg": "‘else’ without a previous ‘if’"
    },
    {
      "mod_line": [
        23,
        21,
        12
      ],
      "mod_code": [
        "int judge = 0 ;",
        "cnt += abs ( ( a [ i ] - b [ i ] ) ) ;",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 12,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        23,
        21,
        12,
        1
      ],
      "mod_code": [
        "int judge = 0 ;",
        "cnt += abs ( ( a [ i ] - b [ i ] ) ) ;",
        "for ( i = 0 ; i < n ; i ++ )",
        "char n ;"
      ],
      "err_line": 12,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        23,
        21,
        12,
        13
      ],
      "mod_code": [
        "int judge = 0 ;",
        "cnt += abs ( ( a [ i ] - b [ i ] ) ) ;",
        "for ( i = 0 ; i < n ; i ++ )",
        "char t ;"
      ],
      "err_line": 12,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        23,
        12
      ],
      "mod_code": [
        "int judge = 0 ;",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 12,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        23,
        12,
        1
      ],
      "mod_code": [
        "int judge = 0 ;",
        "for ( i = 0 ; i < n ; i ++ )",
        "char n ;"
      ],
      "err_line": 12,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        23,
        12,
        1,
        13
      ],
      "mod_code": [
        "int judge = 0 ;",
        "for ( i = 0 ; i < n ; i ++ )",
        "char n ;",
        "char t ;"
      ],
      "err_line": 12,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        23,
        12,
        13
      ],
      "mod_code": [
        "int judge = 0 ;",
        "for ( i = 0 ; i < n ; i ++ )",
        "char t ;"
      ],
      "err_line": 12,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        21,
        23,
        12
      ],
      "mod_code": [
        "cnt += abs ( ( a [ i ] - b [ i ] ) ) ;",
        "long long judge = 0 ;",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 12,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        21,
        23,
        12,
        1
      ],
      "mod_code": [
        "cnt += abs ( ( a [ i ] - b [ i ] ) ) ;",
        "long long judge = 0 ;",
        "for ( i = 0 ; i < n ; i ++ )",
        "char n ;"
      ],
      "err_line": 12,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        21,
        23,
        12,
        13
      ],
      "mod_code": [
        "cnt += abs ( ( a [ i ] - b [ i ] ) ) ;",
        "long long judge = 0 ;",
        "for ( i = 0 ; i < n ; i ++ )",
        "char t ;"
      ],
      "err_line": 12,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        21,
        12
      ],
      "mod_code": [
        "cnt += abs ( ( a [ i ] - b [ i ] ) ) ;",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 12,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        21,
        12,
        1
      ],
      "mod_code": [
        "cnt += abs ( ( a [ i ] - b [ i ] ) ) ;",
        "for ( i = 0 ; i < n ; i ++ )",
        "char n ;"
      ],
      "err_line": 12,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        21,
        12,
        1,
        13
      ],
      "mod_code": [
        "cnt += abs ( ( a [ i ] - b [ i ] ) ) ;",
        "for ( i = 0 ; i < n ; i ++ )",
        "char n ;",
        "char t ;"
      ],
      "err_line": 12,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        21,
        12,
        13
      ],
      "mod_code": [
        "cnt += abs ( ( a [ i ] - b [ i ] ) ) ;",
        "for ( i = 0 ; i < n ; i ++ )",
        "char t ;"
      ],
      "err_line": 12,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        23,
        12
      ],
      "mod_code": [
        "long long judge = 0 ;",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 12,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        23,
        12,
        1
      ],
      "mod_code": [
        "long long judge = 0 ;",
        "for ( i = 0 ; i < n ; i ++ )",
        "char n ;"
      ],
      "err_line": 12,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        23,
        12,
        1,
        13
      ],
      "mod_code": [
        "long long judge = 0 ;",
        "for ( i = 0 ; i < n ; i ++ )",
        "char n ;",
        "char t ;"
      ],
      "err_line": 12,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        23,
        12,
        13
      ],
      "mod_code": [
        "long long judge = 0 ;",
        "for ( i = 0 ; i < n ; i ++ )",
        "char t ;"
      ],
      "err_line": 12,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        12,
        1
      ],
      "mod_code": [
        "for ( i = 0 ; i < n ; i ++ )",
        "char n ;"
      ],
      "err_line": 12,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        12,
        1,
        13
      ],
      "mod_code": [
        "for ( i = 0 ; i < n ; i ++ )",
        "char n ;",
        "char t ;"
      ],
      "err_line": 12,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        12,
        13
      ],
      "mod_code": [
        "for ( i = 0 ; i < n ; i ++ )",
        "char t ;"
      ],
      "err_line": 12,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    }
  ]
}