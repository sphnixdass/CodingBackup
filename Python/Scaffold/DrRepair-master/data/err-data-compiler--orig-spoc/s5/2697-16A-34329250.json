{
  "meta": {
    "index": 2697,
    "hitid": "3FJ2RVH25Z0U39Q56N2J3RHAK3S923",
    "workerid": "A1APYLD4DUK33J",
    "probid": "16A",
    "subid": "34329250"
  },
  "lines": [
    {
      "line": 0,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 1,
      "text": "create integers n , m",
      "code": "int n , m ;",
      "indent": 1
    },
    {
      "line": 2,
      "text": "create 2d character array s with size 110 by 110",
      "code": "char s [ 110 ] [ 110 ] ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "create integer flag with flag = 1",
      "code": "int flag = 1 ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "read n read m",
      "code": "cin >> n >> m ;",
      "indent": 1
    },
    {
      "line": 5,
      "text": "for i = 0 to n exclusive",
      "code": "for ( int i = 0 ; i < n ; i ++ )",
      "indent": 1
    },
    {
      "line": 6,
      "text": "read s [ i ]",
      "code": "cin >> s [ i ] ;",
      "indent": 2
    },
    {
      "line": 7,
      "text": "for j = 0 to m exclusive",
      "code": "for ( int j = 0 ; j < m ; j ++ )",
      "indent": 2
    },
    {
      "line": 8,
      "text": "if j and s [ i ] [ j ] is not s [ i ] [ j - 1 ] , set flag to 0",
      "code": "if ( j && s [ i ] [ j ] != s [ i ] [ j - 1 ] ) flag = 0 ;",
      "indent": 3
    },
    {
      "line": 9,
      "text": "if i and s [ i ] [ j ] is s [ i - 1 ] [ j ] , set flag to 0",
      "code": "if ( i && s [ i ] [ j ] == s [ i - 1 ] [ j ] ) flag = 0 ;",
      "indent": 3
    },
    {
      "line": 10,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 11,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 12,
      "text": "if flag is true",
      "code": "if ( flag )",
      "indent": 1
    },
    {
      "line": 13,
      "text": "print \" YES \" print newline",
      "code": "cout << \" YES \" << endl ;",
      "indent": 2
    },
    {
      "line": 14,
      "text": "else",
      "code": "else",
      "indent": 1
    },
    {
      "line": 15,
      "text": "print \" NO \" print newline",
      "code": "cout << \" NO \" << endl ;",
      "indent": 2
    },
    {
      "line": 16,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 17,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        2
      ],
      "mod_code": [
        "char s [ 110 + 110 ] ;"
      ],
      "err_line": 8,
      "err_msg": "invalid types ‘char[int]’ for array subscript"
    },
    {
      "mod_line": [
        4
      ],
      "mod_code": [
        "cin >> n read m ;"
      ],
      "err_line": 4,
      "err_msg": "expected ‘;’ before ‘read’"
    },
    {
      "mod_line": [
        5
      ],
      "mod_code": [
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 5,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        7
      ],
      "mod_code": [
        "for ( j = 0 ; j < m ; j ++ )"
      ],
      "err_line": 7,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        12
      ],
      "mod_code": [
        "if ( flag ) return ;"
      ],
      "err_line": 12,
      "err_msg": "return-statement with no value, in function returning ‘int’ [-fpermissive]"
    },
    {
      "mod_line": [
        9,
        12
      ],
      "mod_code": [
        "if ( i == 0 && s [ i ] [ j ] == s [ i - 1 ] [ j ] ) flag = 0 ;",
        "if ( flag ) return ;"
      ],
      "err_line": 12,
      "err_msg": "return-statement with no value, in function returning ‘int’ [-fpermissive]"
    },
    {
      "mod_line": [
        9,
        12,
        2
      ],
      "mod_code": [
        "if ( i == 0 && s [ i ] [ j ] == s [ i - 1 ] [ j ] ) flag = 0 ;",
        "if ( flag ) return ;",
        "char s [ 110 + 110 ] ;"
      ],
      "err_line": 8,
      "err_msg": "invalid types ‘char[int]’ for array subscript"
    },
    {
      "mod_line": [
        9,
        12,
        2,
        13
      ],
      "mod_code": [
        "if ( i == 0 && s [ i ] [ j ] == s [ i - 1 ] [ j ] ) flag = 0 ;",
        "if ( flag ) return ;",
        "char s [ 110 + 110 ] ;",
        "cout << \" YES\\n \" << endl ;"
      ],
      "err_line": 8,
      "err_msg": "invalid types ‘char[int]’ for array subscript"
    },
    {
      "mod_line": [
        9,
        12,
        2,
        7
      ],
      "mod_code": [
        "if ( i == 0 && s [ i ] [ j ] == s [ i - 1 ] [ j ] ) flag = 0 ;",
        "if ( flag ) return ;",
        "char s [ 110 + 110 ] ;",
        "for ( j = 0 ; j < m ; j ++ )"
      ],
      "err_line": 7,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        9,
        12,
        2,
        6
      ],
      "mod_code": [
        "if ( i == 0 && s [ i ] [ j ] == s [ i - 1 ] [ j ] ) flag = 0 ;",
        "if ( flag ) return ;",
        "char s [ 110 + 110 ] ;",
        "cout << s [ i ] ;"
      ],
      "err_line": 8,
      "err_msg": "invalid types ‘char[int]’ for array subscript"
    },
    {
      "mod_line": [
        9,
        12,
        13
      ],
      "mod_code": [
        "if ( i == 0 && s [ i ] [ j ] == s [ i - 1 ] [ j ] ) flag = 0 ;",
        "if ( flag ) return ;",
        "cout << \" YES\\n \" << endl ;"
      ],
      "err_line": 12,
      "err_msg": "return-statement with no value, in function returning ‘int’ [-fpermissive]"
    },
    {
      "mod_line": [
        9,
        12,
        13,
        7
      ],
      "mod_code": [
        "if ( i == 0 && s [ i ] [ j ] == s [ i - 1 ] [ j ] ) flag = 0 ;",
        "if ( flag ) return ;",
        "cout << \" YES\\n \" << endl ;",
        "for ( j = 0 ; j < m ; j ++ )"
      ],
      "err_line": 7,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        9,
        12,
        13,
        6
      ],
      "mod_code": [
        "if ( i == 0 && s [ i ] [ j ] == s [ i - 1 ] [ j ] ) flag = 0 ;",
        "if ( flag ) return ;",
        "cout << \" YES\\n \" << endl ;",
        "cout << s [ i ] ;"
      ],
      "err_line": 12,
      "err_msg": "return-statement with no value, in function returning ‘int’ [-fpermissive]"
    },
    {
      "mod_line": [
        9,
        12,
        7
      ],
      "mod_code": [
        "if ( i == 0 && s [ i ] [ j ] == s [ i - 1 ] [ j ] ) flag = 0 ;",
        "if ( flag ) return ;",
        "for ( j = 0 ; j < m ; j ++ )"
      ],
      "err_line": 7,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        9,
        12,
        7,
        6
      ],
      "mod_code": [
        "if ( i == 0 && s [ i ] [ j ] == s [ i - 1 ] [ j ] ) flag = 0 ;",
        "if ( flag ) return ;",
        "for ( j = 0 ; j < m ; j ++ )",
        "cout << s [ i ] ;"
      ],
      "err_line": 7,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        9,
        12,
        6
      ],
      "mod_code": [
        "if ( i == 0 && s [ i ] [ j ] == s [ i - 1 ] [ j ] ) flag = 0 ;",
        "if ( flag ) return ;",
        "cout << s [ i ] ;"
      ],
      "err_line": 12,
      "err_msg": "return-statement with no value, in function returning ‘int’ [-fpermissive]"
    },
    {
      "mod_line": [
        9,
        2
      ],
      "mod_code": [
        "if ( i == 0 && s [ i ] [ j ] == s [ i - 1 ] [ j ] ) flag = 0 ;",
        "char s [ 110 + 110 ] ;"
      ],
      "err_line": 8,
      "err_msg": "invalid types ‘char[int]’ for array subscript"
    },
    {
      "mod_line": [
        9,
        2,
        13
      ],
      "mod_code": [
        "if ( i == 0 && s [ i ] [ j ] == s [ i - 1 ] [ j ] ) flag = 0 ;",
        "char s [ 110 + 110 ] ;",
        "cout << \" YES\\n \" << endl ;"
      ],
      "err_line": 8,
      "err_msg": "invalid types ‘char[int]’ for array subscript"
    },
    {
      "mod_line": [
        9,
        2,
        13,
        7
      ],
      "mod_code": [
        "if ( i == 0 && s [ i ] [ j ] == s [ i - 1 ] [ j ] ) flag = 0 ;",
        "char s [ 110 + 110 ] ;",
        "cout << \" YES\\n \" << endl ;",
        "for ( j = 0 ; j < m ; j ++ )"
      ],
      "err_line": 7,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        9,
        2,
        13,
        6
      ],
      "mod_code": [
        "if ( i == 0 && s [ i ] [ j ] == s [ i - 1 ] [ j ] ) flag = 0 ;",
        "char s [ 110 + 110 ] ;",
        "cout << \" YES\\n \" << endl ;",
        "cout << s [ i ] ;"
      ],
      "err_line": 8,
      "err_msg": "invalid types ‘char[int]’ for array subscript"
    },
    {
      "mod_line": [
        9,
        2,
        7
      ],
      "mod_code": [
        "if ( i == 0 && s [ i ] [ j ] == s [ i - 1 ] [ j ] ) flag = 0 ;",
        "char s [ 110 + 110 ] ;",
        "for ( j = 0 ; j < m ; j ++ )"
      ],
      "err_line": 7,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        9,
        2,
        7,
        6
      ],
      "mod_code": [
        "if ( i == 0 && s [ i ] [ j ] == s [ i - 1 ] [ j ] ) flag = 0 ;",
        "char s [ 110 + 110 ] ;",
        "for ( j = 0 ; j < m ; j ++ )",
        "cout << s [ i ] ;"
      ],
      "err_line": 7,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        9,
        2,
        6
      ],
      "mod_code": [
        "if ( i == 0 && s [ i ] [ j ] == s [ i - 1 ] [ j ] ) flag = 0 ;",
        "char s [ 110 + 110 ] ;",
        "cout << s [ i ] ;"
      ],
      "err_line": 8,
      "err_msg": "invalid types ‘char[int]’ for array subscript"
    },
    {
      "mod_line": [
        9,
        13,
        7
      ],
      "mod_code": [
        "if ( i == 0 && s [ i ] [ j ] == s [ i - 1 ] [ j ] ) flag = 0 ;",
        "cout << \" YES\\n \" << endl ;",
        "for ( j = 0 ; j < m ; j ++ )"
      ],
      "err_line": 7,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        9,
        13,
        7,
        6
      ],
      "mod_code": [
        "if ( i == 0 && s [ i ] [ j ] == s [ i - 1 ] [ j ] ) flag = 0 ;",
        "cout << \" YES\\n \" << endl ;",
        "for ( j = 0 ; j < m ; j ++ )",
        "cout << s [ i ] ;"
      ],
      "err_line": 7,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        9,
        7
      ],
      "mod_code": [
        "if ( i == 0 && s [ i ] [ j ] == s [ i - 1 ] [ j ] ) flag = 0 ;",
        "for ( j = 0 ; j < m ; j ++ )"
      ],
      "err_line": 7,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        9,
        7,
        6
      ],
      "mod_code": [
        "if ( i == 0 && s [ i ] [ j ] == s [ i - 1 ] [ j ] ) flag = 0 ;",
        "for ( j = 0 ; j < m ; j ++ )",
        "cout << s [ i ] ;"
      ],
      "err_line": 7,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        12,
        2
      ],
      "mod_code": [
        "if ( flag ) return ;",
        "char s [ 110 + 110 ] ;"
      ],
      "err_line": 8,
      "err_msg": "invalid types ‘char[int]’ for array subscript"
    },
    {
      "mod_line": [
        12,
        2,
        13
      ],
      "mod_code": [
        "if ( flag ) return ;",
        "char s [ 110 + 110 ] ;",
        "cout << \" YES\\n \" << endl ;"
      ],
      "err_line": 8,
      "err_msg": "invalid types ‘char[int]’ for array subscript"
    },
    {
      "mod_line": [
        12,
        2,
        13,
        7
      ],
      "mod_code": [
        "if ( flag ) return ;",
        "char s [ 110 + 110 ] ;",
        "cout << \" YES\\n \" << endl ;",
        "for ( j = 0 ; j < m ; j ++ )"
      ],
      "err_line": 7,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        12,
        2,
        13,
        6
      ],
      "mod_code": [
        "if ( flag ) return ;",
        "char s [ 110 + 110 ] ;",
        "cout << \" YES\\n \" << endl ;",
        "cout << s [ i ] ;"
      ],
      "err_line": 8,
      "err_msg": "invalid types ‘char[int]’ for array subscript"
    },
    {
      "mod_line": [
        12,
        2,
        7
      ],
      "mod_code": [
        "if ( flag ) return ;",
        "char s [ 110 + 110 ] ;",
        "for ( j = 0 ; j < m ; j ++ )"
      ],
      "err_line": 7,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        12,
        2,
        7,
        6
      ],
      "mod_code": [
        "if ( flag ) return ;",
        "char s [ 110 + 110 ] ;",
        "for ( j = 0 ; j < m ; j ++ )",
        "cout << s [ i ] ;"
      ],
      "err_line": 7,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        12,
        2,
        6
      ],
      "mod_code": [
        "if ( flag ) return ;",
        "char s [ 110 + 110 ] ;",
        "cout << s [ i ] ;"
      ],
      "err_line": 8,
      "err_msg": "invalid types ‘char[int]’ for array subscript"
    },
    {
      "mod_line": [
        12,
        13
      ],
      "mod_code": [
        "if ( flag ) return ;",
        "cout << \" YES\\n \" << endl ;"
      ],
      "err_line": 12,
      "err_msg": "return-statement with no value, in function returning ‘int’ [-fpermissive]"
    },
    {
      "mod_line": [
        12,
        13,
        7
      ],
      "mod_code": [
        "if ( flag ) return ;",
        "cout << \" YES\\n \" << endl ;",
        "for ( j = 0 ; j < m ; j ++ )"
      ],
      "err_line": 7,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        12,
        13,
        7,
        6
      ],
      "mod_code": [
        "if ( flag ) return ;",
        "cout << \" YES\\n \" << endl ;",
        "for ( j = 0 ; j < m ; j ++ )",
        "cout << s [ i ] ;"
      ],
      "err_line": 7,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        12,
        13,
        6
      ],
      "mod_code": [
        "if ( flag ) return ;",
        "cout << \" YES\\n \" << endl ;",
        "cout << s [ i ] ;"
      ],
      "err_line": 12,
      "err_msg": "return-statement with no value, in function returning ‘int’ [-fpermissive]"
    },
    {
      "mod_line": [
        12,
        7
      ],
      "mod_code": [
        "if ( flag ) return ;",
        "for ( j = 0 ; j < m ; j ++ )"
      ],
      "err_line": 7,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        12,
        7,
        6
      ],
      "mod_code": [
        "if ( flag ) return ;",
        "for ( j = 0 ; j < m ; j ++ )",
        "cout << s [ i ] ;"
      ],
      "err_line": 7,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        12,
        6
      ],
      "mod_code": [
        "if ( flag ) return ;",
        "cout << s [ i ] ;"
      ],
      "err_line": 12,
      "err_msg": "return-statement with no value, in function returning ‘int’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        13
      ],
      "mod_code": [
        "char s [ 110 + 110 ] ;",
        "cout << \" YES\\n \" << endl ;"
      ],
      "err_line": 8,
      "err_msg": "invalid types ‘char[int]’ for array subscript"
    },
    {
      "mod_line": [
        2,
        13,
        7
      ],
      "mod_code": [
        "char s [ 110 + 110 ] ;",
        "cout << \" YES\\n \" << endl ;",
        "for ( j = 0 ; j < m ; j ++ )"
      ],
      "err_line": 7,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        2,
        13,
        7,
        6
      ],
      "mod_code": [
        "char s [ 110 + 110 ] ;",
        "cout << \" YES\\n \" << endl ;",
        "for ( j = 0 ; j < m ; j ++ )",
        "cout << s [ i ] ;"
      ],
      "err_line": 7,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        2,
        13,
        6
      ],
      "mod_code": [
        "char s [ 110 + 110 ] ;",
        "cout << \" YES\\n \" << endl ;",
        "cout << s [ i ] ;"
      ],
      "err_line": 8,
      "err_msg": "invalid types ‘char[int]’ for array subscript"
    },
    {
      "mod_line": [
        2,
        7
      ],
      "mod_code": [
        "char s [ 110 + 110 ] ;",
        "for ( j = 0 ; j < m ; j ++ )"
      ],
      "err_line": 7,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        2,
        7,
        6
      ],
      "mod_code": [
        "char s [ 110 + 110 ] ;",
        "for ( j = 0 ; j < m ; j ++ )",
        "cout << s [ i ] ;"
      ],
      "err_line": 7,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        2,
        6
      ],
      "mod_code": [
        "char s [ 110 + 110 ] ;",
        "cout << s [ i ] ;"
      ],
      "err_line": 8,
      "err_msg": "invalid types ‘char[int]’ for array subscript"
    },
    {
      "mod_line": [
        13,
        7
      ],
      "mod_code": [
        "cout << \" YES\\n \" << endl ;",
        "for ( j = 0 ; j < m ; j ++ )"
      ],
      "err_line": 7,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        7,
        6
      ],
      "mod_code": [
        "cout << \" YES\\n \" << endl ;",
        "for ( j = 0 ; j < m ; j ++ )",
        "cout << s [ i ] ;"
      ],
      "err_line": 7,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        7,
        6
      ],
      "mod_code": [
        "for ( j = 0 ; j < m ; j ++ )",
        "cout << s [ i ] ;"
      ],
      "err_line": 7,
      "err_msg": "‘j’ was not declared in this scope"
    }
  ]
}