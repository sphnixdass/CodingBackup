{
  "meta": {
    "index": 300,
    "hitid": "3EGKVCRQFWM3SNY9XSNA31D5OK0BYB",
    "workerid": "A1APYLD4DUK33J",
    "probid": "61A",
    "subid": "48573112"
  },
  "lines": [
    {
      "line": 0,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 1,
      "text": "create strings s1 , s2",
      "code": "string s1 , s2 ;",
      "indent": 1
    },
    {
      "line": 2,
      "text": "read s1",
      "code": "cin >> s1 ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "read s2",
      "code": "cin >> s2 ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "create integer l with l = length of s1",
      "code": "int l = s1 . length ( ) ;",
      "indent": 1
    },
    {
      "line": 5,
      "text": "for i = 0 to l exclusive",
      "code": "for ( int i = 0 ; i < l ; i ++ )",
      "indent": 1
    },
    {
      "line": 6,
      "text": "if s1 [ i ] is not s2 [ i ]",
      "code": "if ( s1 [ i ] != s2 [ i ] )",
      "indent": 2
    },
    {
      "line": 7,
      "text": "print \" 1 \"",
      "code": "cout << \" 1 \" ;",
      "indent": 3
    },
    {
      "line": 8,
      "text": "else",
      "code": "else",
      "indent": 2
    },
    {
      "line": 9,
      "text": "print \" 0 \"",
      "code": "cout << \" 0 \" ;",
      "indent": 3
    },
    {
      "line": 10,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 11,
      "text": "print newline",
      "code": "cout << endl ;",
      "indent": 1
    },
    {
      "line": 12,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        1
      ],
      "mod_code": [
        "strings , s2 ;"
      ],
      "err_line": 1,
      "err_msg": "‘strings’ was not declared in this scope"
    },
    {
      "mod_line": [
        2
      ],
      "mod_code": [
        "gets ( s1 ) ;"
      ],
      "err_line": 2,
      "err_msg": "cannot convert ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ to ‘char*’ for argument ‘1’ to ‘char* gets(char*)’"
    },
    {
      "mod_line": [
        5
      ],
      "mod_code": [
        "for ( i = 0 ; i < l ; i ++ )"
      ],
      "err_line": 5,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        6
      ],
      "mod_code": [
        "if ( s1 [ i ] [ i ] != s2 [ i ] )"
      ],
      "err_line": 6,
      "err_msg": "invalid types ‘char[int]’ for array subscript"
    },
    {
      "mod_line": [
        7,
        9,
        1
      ],
      "mod_code": [
        "cout << \" 1 \" << endl ;",
        "cout << \" 0 \" << endl ;",
        "strings , s2 ;"
      ],
      "err_line": 1,
      "err_msg": "‘strings’ was not declared in this scope"
    },
    {
      "mod_line": [
        7,
        9,
        1,
        5
      ],
      "mod_code": [
        "cout << \" 1 \" << endl ;",
        "cout << \" 0 \" << endl ;",
        "strings , s2 ;",
        "for ( i = 0 ; i < l ; i ++ )"
      ],
      "err_line": 1,
      "err_msg": "‘strings’ was not declared in this scope"
    },
    {
      "mod_line": [
        7,
        9,
        1,
        3
      ],
      "mod_code": [
        "cout << \" 1 \" << endl ;",
        "cout << \" 0 \" << endl ;",
        "strings , s2 ;",
        "cout << s2 << endl ;"
      ],
      "err_line": 1,
      "err_msg": "‘strings’ was not declared in this scope"
    },
    {
      "mod_line": [
        7,
        9,
        1,
        6
      ],
      "mod_code": [
        "cout << \" 1 \" << endl ;",
        "cout << \" 0 \" << endl ;",
        "strings , s2 ;",
        "if ( s1 [ i ] [ i ] != s2 [ i ] )"
      ],
      "err_line": 1,
      "err_msg": "‘strings’ was not declared in this scope"
    },
    {
      "mod_line": [
        7,
        9,
        5
      ],
      "mod_code": [
        "cout << \" 1 \" << endl ;",
        "cout << \" 0 \" << endl ;",
        "for ( i = 0 ; i < l ; i ++ )"
      ],
      "err_line": 5,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        7,
        9,
        5,
        3
      ],
      "mod_code": [
        "cout << \" 1 \" << endl ;",
        "cout << \" 0 \" << endl ;",
        "for ( i = 0 ; i < l ; i ++ )",
        "cout << s2 << endl ;"
      ],
      "err_line": 5,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        7,
        9,
        5,
        6
      ],
      "mod_code": [
        "cout << \" 1 \" << endl ;",
        "cout << \" 0 \" << endl ;",
        "for ( i = 0 ; i < l ; i ++ )",
        "if ( s1 [ i ] [ i ] != s2 [ i ] )"
      ],
      "err_line": 5,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        7,
        9,
        3,
        6
      ],
      "mod_code": [
        "cout << \" 1 \" << endl ;",
        "cout << \" 0 \" << endl ;",
        "cout << s2 << endl ;",
        "if ( s1 [ i ] [ i ] != s2 [ i ] )"
      ],
      "err_line": 6,
      "err_msg": "invalid types ‘char[int]’ for array subscript"
    },
    {
      "mod_line": [
        7,
        9,
        6
      ],
      "mod_code": [
        "cout << \" 1 \" << endl ;",
        "cout << \" 0 \" << endl ;",
        "if ( s1 [ i ] [ i ] != s2 [ i ] )"
      ],
      "err_line": 6,
      "err_msg": "invalid types ‘char[int]’ for array subscript"
    },
    {
      "mod_line": [
        7,
        1
      ],
      "mod_code": [
        "cout << \" 1 \" << endl ;",
        "strings , s2 ;"
      ],
      "err_line": 1,
      "err_msg": "‘strings’ was not declared in this scope"
    },
    {
      "mod_line": [
        7,
        1,
        5
      ],
      "mod_code": [
        "cout << \" 1 \" << endl ;",
        "strings , s2 ;",
        "for ( i = 0 ; i < l ; i ++ )"
      ],
      "err_line": 1,
      "err_msg": "‘strings’ was not declared in this scope"
    },
    {
      "mod_line": [
        7,
        1,
        5,
        3
      ],
      "mod_code": [
        "cout << \" 1 \" << endl ;",
        "strings , s2 ;",
        "for ( i = 0 ; i < l ; i ++ )",
        "cout << s2 << endl ;"
      ],
      "err_line": 1,
      "err_msg": "‘strings’ was not declared in this scope"
    },
    {
      "mod_line": [
        7,
        1,
        5,
        6
      ],
      "mod_code": [
        "cout << \" 1 \" << endl ;",
        "strings , s2 ;",
        "for ( i = 0 ; i < l ; i ++ )",
        "if ( s1 [ i ] [ i ] != s2 [ i ] )"
      ],
      "err_line": 1,
      "err_msg": "‘strings’ was not declared in this scope"
    },
    {
      "mod_line": [
        7,
        1,
        3
      ],
      "mod_code": [
        "cout << \" 1 \" << endl ;",
        "strings , s2 ;",
        "cout << s2 << endl ;"
      ],
      "err_line": 1,
      "err_msg": "‘strings’ was not declared in this scope"
    },
    {
      "mod_line": [
        7,
        1,
        3,
        6
      ],
      "mod_code": [
        "cout << \" 1 \" << endl ;",
        "strings , s2 ;",
        "cout << s2 << endl ;",
        "if ( s1 [ i ] [ i ] != s2 [ i ] )"
      ],
      "err_line": 1,
      "err_msg": "‘strings’ was not declared in this scope"
    },
    {
      "mod_line": [
        7,
        1,
        6
      ],
      "mod_code": [
        "cout << \" 1 \" << endl ;",
        "strings , s2 ;",
        "if ( s1 [ i ] [ i ] != s2 [ i ] )"
      ],
      "err_line": 1,
      "err_msg": "‘strings’ was not declared in this scope"
    },
    {
      "mod_line": [
        7,
        5
      ],
      "mod_code": [
        "cout << \" 1 \" << endl ;",
        "for ( i = 0 ; i < l ; i ++ )"
      ],
      "err_line": 5,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        7,
        5,
        3
      ],
      "mod_code": [
        "cout << \" 1 \" << endl ;",
        "for ( i = 0 ; i < l ; i ++ )",
        "cout << s2 << endl ;"
      ],
      "err_line": 5,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        7,
        5,
        3,
        6
      ],
      "mod_code": [
        "cout << \" 1 \" << endl ;",
        "for ( i = 0 ; i < l ; i ++ )",
        "cout << s2 << endl ;",
        "if ( s1 [ i ] [ i ] != s2 [ i ] )"
      ],
      "err_line": 5,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        7,
        5,
        6
      ],
      "mod_code": [
        "cout << \" 1 \" << endl ;",
        "for ( i = 0 ; i < l ; i ++ )",
        "if ( s1 [ i ] [ i ] != s2 [ i ] )"
      ],
      "err_line": 5,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        7,
        3,
        6
      ],
      "mod_code": [
        "cout << \" 1 \" << endl ;",
        "cout << s2 << endl ;",
        "if ( s1 [ i ] [ i ] != s2 [ i ] )"
      ],
      "err_line": 6,
      "err_msg": "invalid types ‘char[int]’ for array subscript"
    },
    {
      "mod_line": [
        7,
        6
      ],
      "mod_code": [
        "cout << \" 1 \" << endl ;",
        "if ( s1 [ i ] [ i ] != s2 [ i ] )"
      ],
      "err_line": 6,
      "err_msg": "invalid types ‘char[int]’ for array subscript"
    },
    {
      "mod_line": [
        9,
        1
      ],
      "mod_code": [
        "cout << \" 0 \" << endl ;",
        "strings , s2 ;"
      ],
      "err_line": 1,
      "err_msg": "‘strings’ was not declared in this scope"
    },
    {
      "mod_line": [
        9,
        1,
        5
      ],
      "mod_code": [
        "cout << \" 0 \" << endl ;",
        "strings , s2 ;",
        "for ( i = 0 ; i < l ; i ++ )"
      ],
      "err_line": 1,
      "err_msg": "‘strings’ was not declared in this scope"
    },
    {
      "mod_line": [
        9,
        1,
        5,
        3
      ],
      "mod_code": [
        "cout << \" 0 \" << endl ;",
        "strings , s2 ;",
        "for ( i = 0 ; i < l ; i ++ )",
        "cout << s2 << endl ;"
      ],
      "err_line": 1,
      "err_msg": "‘strings’ was not declared in this scope"
    },
    {
      "mod_line": [
        9,
        1,
        5,
        6
      ],
      "mod_code": [
        "cout << \" 0 \" << endl ;",
        "strings , s2 ;",
        "for ( i = 0 ; i < l ; i ++ )",
        "if ( s1 [ i ] [ i ] != s2 [ i ] )"
      ],
      "err_line": 1,
      "err_msg": "‘strings’ was not declared in this scope"
    },
    {
      "mod_line": [
        9,
        1,
        3
      ],
      "mod_code": [
        "cout << \" 0 \" << endl ;",
        "strings , s2 ;",
        "cout << s2 << endl ;"
      ],
      "err_line": 1,
      "err_msg": "‘strings’ was not declared in this scope"
    },
    {
      "mod_line": [
        9,
        1,
        3,
        6
      ],
      "mod_code": [
        "cout << \" 0 \" << endl ;",
        "strings , s2 ;",
        "cout << s2 << endl ;",
        "if ( s1 [ i ] [ i ] != s2 [ i ] )"
      ],
      "err_line": 1,
      "err_msg": "‘strings’ was not declared in this scope"
    },
    {
      "mod_line": [
        9,
        1,
        6
      ],
      "mod_code": [
        "cout << \" 0 \" << endl ;",
        "strings , s2 ;",
        "if ( s1 [ i ] [ i ] != s2 [ i ] )"
      ],
      "err_line": 1,
      "err_msg": "‘strings’ was not declared in this scope"
    },
    {
      "mod_line": [
        9,
        5
      ],
      "mod_code": [
        "cout << \" 0 \" << endl ;",
        "for ( i = 0 ; i < l ; i ++ )"
      ],
      "err_line": 5,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        9,
        5,
        3
      ],
      "mod_code": [
        "cout << \" 0 \" << endl ;",
        "for ( i = 0 ; i < l ; i ++ )",
        "cout << s2 << endl ;"
      ],
      "err_line": 5,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        9,
        5,
        3,
        6
      ],
      "mod_code": [
        "cout << \" 0 \" << endl ;",
        "for ( i = 0 ; i < l ; i ++ )",
        "cout << s2 << endl ;",
        "if ( s1 [ i ] [ i ] != s2 [ i ] )"
      ],
      "err_line": 5,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        9,
        5,
        6
      ],
      "mod_code": [
        "cout << \" 0 \" << endl ;",
        "for ( i = 0 ; i < l ; i ++ )",
        "if ( s1 [ i ] [ i ] != s2 [ i ] )"
      ],
      "err_line": 5,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        9,
        3,
        6
      ],
      "mod_code": [
        "cout << \" 0 \" << endl ;",
        "cout << s2 << endl ;",
        "if ( s1 [ i ] [ i ] != s2 [ i ] )"
      ],
      "err_line": 6,
      "err_msg": "invalid types ‘char[int]’ for array subscript"
    },
    {
      "mod_line": [
        9,
        6
      ],
      "mod_code": [
        "cout << \" 0 \" << endl ;",
        "if ( s1 [ i ] [ i ] != s2 [ i ] )"
      ],
      "err_line": 6,
      "err_msg": "invalid types ‘char[int]’ for array subscript"
    },
    {
      "mod_line": [
        1,
        5
      ],
      "mod_code": [
        "strings , s2 ;",
        "for ( i = 0 ; i < l ; i ++ )"
      ],
      "err_line": 1,
      "err_msg": "‘strings’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        5,
        3
      ],
      "mod_code": [
        "strings , s2 ;",
        "for ( i = 0 ; i < l ; i ++ )",
        "cout << s2 << endl ;"
      ],
      "err_line": 1,
      "err_msg": "‘strings’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        5,
        3,
        6
      ],
      "mod_code": [
        "strings , s2 ;",
        "for ( i = 0 ; i < l ; i ++ )",
        "cout << s2 << endl ;",
        "if ( s1 [ i ] [ i ] != s2 [ i ] )"
      ],
      "err_line": 1,
      "err_msg": "‘strings’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        5,
        6
      ],
      "mod_code": [
        "strings , s2 ;",
        "for ( i = 0 ; i < l ; i ++ )",
        "if ( s1 [ i ] [ i ] != s2 [ i ] )"
      ],
      "err_line": 1,
      "err_msg": "‘strings’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        3
      ],
      "mod_code": [
        "strings , s2 ;",
        "cout << s2 << endl ;"
      ],
      "err_line": 1,
      "err_msg": "‘strings’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        3,
        6
      ],
      "mod_code": [
        "strings , s2 ;",
        "cout << s2 << endl ;",
        "if ( s1 [ i ] [ i ] != s2 [ i ] )"
      ],
      "err_line": 1,
      "err_msg": "‘strings’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        6
      ],
      "mod_code": [
        "strings , s2 ;",
        "if ( s1 [ i ] [ i ] != s2 [ i ] )"
      ],
      "err_line": 1,
      "err_msg": "‘strings’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        3
      ],
      "mod_code": [
        "for ( i = 0 ; i < l ; i ++ )",
        "cout << s2 << endl ;"
      ],
      "err_line": 5,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        3,
        6
      ],
      "mod_code": [
        "for ( i = 0 ; i < l ; i ++ )",
        "cout << s2 << endl ;",
        "if ( s1 [ i ] [ i ] != s2 [ i ] )"
      ],
      "err_line": 5,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        6
      ],
      "mod_code": [
        "for ( i = 0 ; i < l ; i ++ )",
        "if ( s1 [ i ] [ i ] != s2 [ i ] )"
      ],
      "err_line": 5,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        6
      ],
      "mod_code": [
        "cout << s2 << endl ;",
        "if ( s1 [ i ] [ i ] != s2 [ i ] )"
      ],
      "err_line": 6,
      "err_msg": "invalid types ‘char[int]’ for array subscript"
    }
  ]
}