{
  "meta": {
    "index": 2196,
    "hitid": "3FCO4VKOZ47IK6ESKAZ0RWZTNI97EB",
    "workerid": "AIWEXPJAU66D9",
    "probid": "540A",
    "subid": "48778416"
  },
  "lines": [
    {
      "line": 0,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 1,
      "text": "create string variables called n and m = \" \"",
      "code": "string n = \" \" , m = \" \" ;",
      "indent": 1
    },
    {
      "line": 2,
      "text": "new integers i , j , a , b = 0 , c = 0 , d = 0 , e = 0 , mn = 0 , s = 0",
      "code": "int i , j , a , b = 0 , c = 0 , d = 0 , e = 0 , mn = 0 , s = 0 ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "read from the input to a",
      "code": "cin >> a ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "read n from the user input",
      "code": "cin >> n ;",
      "indent": 1
    },
    {
      "line": 5,
      "text": "read from the input to m",
      "code": "cin >> m ;",
      "indent": 1
    },
    {
      "line": 6,
      "text": "start for loop from i = 0 to length of n exclusive",
      "code": "for ( i = 0 ; i < n . size ( ) ; i ++ )",
      "indent": 1
    },
    {
      "line": 7,
      "text": "in a for loop from j = 0 to length of m exclusive",
      "code": "for ( j = 0 ; j < m . size ( ) ; j ++ )",
      "indent": 2
    },
    {
      "line": 8,
      "text": "if i = j",
      "code": "if ( i == j )",
      "indent": 3
    },
    {
      "line": 9,
      "text": "change the value of b to abs ( n [ i ] - m [ j ] )",
      "code": "b = abs ( n [ i ] - m [ j ] ) ;",
      "indent": 4
    },
    {
      "line": 10,
      "text": "assign abs ( ( n [ i ] + 10 ) - m [ j ] ) to c",
      "code": "c = abs ( ( n [ i ] + 10 ) - m [ j ] ) ;",
      "indent": 4
    },
    {
      "line": 11,
      "text": "set d to abs ( m [ j ] - n [ i ] )",
      "code": "d = abs ( m [ j ] - n [ i ] ) ;",
      "indent": 4
    },
    {
      "line": 12,
      "text": "change e to abs ( m [ j ] + 10 - n [ i ] )",
      "code": "e = abs ( m [ j ] + 10 - n [ i ] ) ;",
      "indent": 4
    },
    {
      "line": 13,
      "text": "change the value of mn to min ( b , min ( c , min ( d , e ) ) )",
      "code": "mn = min ( b , min ( c , min ( d , e ) ) ) ;",
      "indent": 4
    },
    {
      "line": 14,
      "text": "assign s + mn to s",
      "code": "s = s + mn ;",
      "indent": 4
    },
    {
      "line": 15,
      "text": "assign the new value = 0 to b",
      "code": "b = 0 ;",
      "indent": 4
    },
    {
      "line": 16,
      "text": "assign 0 to c",
      "code": "c = 0 ;",
      "indent": 4
    },
    {
      "line": 17,
      "text": "assign 0 to d",
      "code": "d = 0 ;",
      "indent": 4
    },
    {
      "line": 18,
      "text": "change e to 0",
      "code": "e = 0 ;",
      "indent": 4
    },
    {
      "line": 19,
      "text": "change mn to 0",
      "code": "mn = 0 ;",
      "indent": 4
    },
    {
      "line": 20,
      "text": "DUMMY",
      "code": "}",
      "indent": 3
    },
    {
      "line": 21,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 22,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 23,
      "text": "print s",
      "code": "cout << s << endl ;",
      "indent": 1
    },
    {
      "line": 24,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 25,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        2
      ],
      "mod_code": [
        "int i , j , a , b = 0 , c = 0 , d = 0 , e = 0 , s = 0 ;"
      ],
      "err_line": 13,
      "err_msg": "‘mn’ was not declared in this scope"
    },
    {
      "mod_line": [
        2
      ],
      "mod_code": [
        "int i , j , a , b = 0 , c = 0 , d = 0 , e = 0 , s = 0 , s = 0 ;"
      ],
      "err_line": 2,
      "err_msg": "redeclaration of ‘int s’"
    },
    {
      "mod_line": [
        9
      ],
      "mod_code": [
        "* b = abs ( n [ i ] - m [ j ] ) ;"
      ],
      "err_line": 9,
      "err_msg": "invalid type argument of unary ‘*’ (have ‘int’)"
    },
    {
      "mod_line": [
        2,
        8
      ],
      "mod_code": [
        "int i , j , a , b = 0 , c = 0 , d = 0 , e = 0 , s = 0 ;",
        "if ( i == j ) continue ;"
      ],
      "err_line": 13,
      "err_msg": "‘mn’ was not declared in this scope"
    },
    {
      "mod_line": [
        2,
        8,
        5
      ],
      "mod_code": [
        "int i , j , a , b = 0 , c = 0 , d = 0 , e = 0 , s = 0 ;",
        "if ( i == j ) continue ;",
        "cin >> n ;"
      ],
      "err_line": 13,
      "err_msg": "‘mn’ was not declared in this scope"
    },
    {
      "mod_line": [
        2,
        8,
        5,
        9
      ],
      "mod_code": [
        "int i , j , a , b = 0 , c = 0 , d = 0 , e = 0 , s = 0 ;",
        "if ( i == j ) continue ;",
        "cin >> n ;",
        "* b = abs ( n [ i ] - m [ j ] ) ;"
      ],
      "err_line": 9,
      "err_msg": "invalid type argument of unary ‘*’ (have ‘int’)"
    },
    {
      "mod_line": [
        2,
        8,
        9
      ],
      "mod_code": [
        "int i , j , a , b = 0 , c = 0 , d = 0 , e = 0 , s = 0 ;",
        "if ( i == j ) continue ;",
        "* b = abs ( n [ i ] - m [ j ] ) ;"
      ],
      "err_line": 9,
      "err_msg": "invalid type argument of unary ‘*’ (have ‘int’)"
    },
    {
      "mod_line": [
        2,
        5
      ],
      "mod_code": [
        "int i , j , a , b = 0 , c = 0 , d = 0 , e = 0 , s = 0 ;",
        "cin >> n ;"
      ],
      "err_line": 13,
      "err_msg": "‘mn’ was not declared in this scope"
    },
    {
      "mod_line": [
        2,
        5,
        9
      ],
      "mod_code": [
        "int i , j , a , b = 0 , c = 0 , d = 0 , e = 0 , s = 0 ;",
        "cin >> n ;",
        "* b = abs ( n [ i ] - m [ j ] ) ;"
      ],
      "err_line": 9,
      "err_msg": "invalid type argument of unary ‘*’ (have ‘int’)"
    },
    {
      "mod_line": [
        2,
        9
      ],
      "mod_code": [
        "int i , j , a , b = 0 , c = 0 , d = 0 , e = 0 , s = 0 ;",
        "* b = abs ( n [ i ] - m [ j ] ) ;"
      ],
      "err_line": 9,
      "err_msg": "invalid type argument of unary ‘*’ (have ‘int’)"
    },
    {
      "mod_line": [
        8,
        5,
        2
      ],
      "mod_code": [
        "if ( i == j ) continue ;",
        "cin >> n ;",
        "int i , j , a , b = 0 , c = 0 , d = 0 , e = 0 , s = 0 , s = 0 ;"
      ],
      "err_line": 2,
      "err_msg": "redeclaration of ‘int s’"
    },
    {
      "mod_line": [
        8,
        5,
        2,
        9
      ],
      "mod_code": [
        "if ( i == j ) continue ;",
        "cin >> n ;",
        "int i , j , a , b = 0 , c = 0 , d = 0 , e = 0 , s = 0 , s = 0 ;",
        "* b = abs ( n [ i ] - m [ j ] ) ;"
      ],
      "err_line": 2,
      "err_msg": "redeclaration of ‘int s’"
    },
    {
      "mod_line": [
        8,
        5,
        9
      ],
      "mod_code": [
        "if ( i == j ) continue ;",
        "cin >> n ;",
        "* b = abs ( n [ i ] - m [ j ] ) ;"
      ],
      "err_line": 9,
      "err_msg": "invalid type argument of unary ‘*’ (have ‘int’)"
    },
    {
      "mod_line": [
        8,
        2
      ],
      "mod_code": [
        "if ( i == j ) continue ;",
        "int i , j , a , b = 0 , c = 0 , d = 0 , e = 0 , s = 0 , s = 0 ;"
      ],
      "err_line": 2,
      "err_msg": "redeclaration of ‘int s’"
    },
    {
      "mod_line": [
        8,
        2,
        9
      ],
      "mod_code": [
        "if ( i == j ) continue ;",
        "int i , j , a , b = 0 , c = 0 , d = 0 , e = 0 , s = 0 , s = 0 ;",
        "* b = abs ( n [ i ] - m [ j ] ) ;"
      ],
      "err_line": 2,
      "err_msg": "redeclaration of ‘int s’"
    },
    {
      "mod_line": [
        8,
        9
      ],
      "mod_code": [
        "if ( i == j ) continue ;",
        "* b = abs ( n [ i ] - m [ j ] ) ;"
      ],
      "err_line": 9,
      "err_msg": "invalid type argument of unary ‘*’ (have ‘int’)"
    },
    {
      "mod_line": [
        5,
        2
      ],
      "mod_code": [
        "cin >> n ;",
        "int i , j , a , b = 0 , c = 0 , d = 0 , e = 0 , s = 0 , s = 0 ;"
      ],
      "err_line": 2,
      "err_msg": "redeclaration of ‘int s’"
    },
    {
      "mod_line": [
        5,
        2,
        9
      ],
      "mod_code": [
        "cin >> n ;",
        "int i , j , a , b = 0 , c = 0 , d = 0 , e = 0 , s = 0 , s = 0 ;",
        "* b = abs ( n [ i ] - m [ j ] ) ;"
      ],
      "err_line": 2,
      "err_msg": "redeclaration of ‘int s’"
    },
    {
      "mod_line": [
        5,
        9
      ],
      "mod_code": [
        "cin >> n ;",
        "* b = abs ( n [ i ] - m [ j ] ) ;"
      ],
      "err_line": 9,
      "err_msg": "invalid type argument of unary ‘*’ (have ‘int’)"
    },
    {
      "mod_line": [
        2,
        9
      ],
      "mod_code": [
        "int i , j , a , b = 0 , c = 0 , d = 0 , e = 0 , s = 0 , s = 0 ;",
        "* b = abs ( n [ i ] - m [ j ] ) ;"
      ],
      "err_line": 2,
      "err_msg": "redeclaration of ‘int s’"
    }
  ]
}