{
  "meta": {
    "index": 2162,
    "hitid": "3MJ9GGZYO3088S0AYTGJZMSURNIA2W",
    "workerid": "A1MJVTR0PCKBWW",
    "probid": "745A",
    "subid": "40683857"
  },
  "lines": [
    {
      "line": 0,
      "text": "s = string",
      "code": "string s ;",
      "indent": 0
    },
    {
      "line": 1,
      "text": "create map called m using string and integer",
      "code": "map < string , int > m ;",
      "indent": 0
    },
    {
      "line": 2,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 3,
      "text": "read s",
      "code": "cin >> s ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "set int ans to 0",
      "code": "int ans = 0 ;",
      "indent": 1
    },
    {
      "line": 5,
      "text": "for i = 0 to less than s . size do the following",
      "code": "for ( int i = 0 ; i < s . size ( ) ; i ++ )",
      "indent": 1
    },
    {
      "line": 6,
      "text": "set string x to s . substr ( i , s . size ( ) - i ) + s . substr ( 0 , i )",
      "code": "string x = s . substr ( i , s . size ( ) - i ) + s . substr ( 0 , i ) ;",
      "indent": 2
    },
    {
      "line": 7,
      "text": "if m [ x ] is 0 then do",
      "code": "if ( m [ x ] == 0 )",
      "indent": 2
    },
    {
      "line": 8,
      "text": "add one to ans",
      "code": "ans ++ ;",
      "indent": 3
    },
    {
      "line": 9,
      "text": "set m [ x ] to 1",
      "code": "m [ x ] = 1 ;",
      "indent": 3
    },
    {
      "line": 10,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 11,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 12,
      "text": "output ans",
      "code": "cout << ans << \" \\n \" ;",
      "indent": 1
    },
    {
      "line": 13,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 14,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        0
      ],
      "mod_code": [
        "char s ;"
      ],
      "err_line": 5,
      "err_msg": "request for member ‘size’ in ‘s’, which is of non-class type ‘char’"
    },
    {
      "mod_line": [
        1
      ],
      "mod_code": [
        "map < string , string > m ;"
      ],
      "err_line": 7,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::map<std::__cxx11::basic_string<char>, std::__cxx11::basic_string<char> >::mapped_type {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        4
      ],
      "mod_code": [
        "int ans to 0 ;"
      ],
      "err_line": 4,
      "err_msg": "expected initializer before ‘to’"
    },
    {
      "mod_line": [
        5
      ],
      "mod_code": [
        "for ( i = 0 ; i < s . size ( ) ; i ++ )"
      ],
      "err_line": 5,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        9
      ],
      "mod_code": [
        "m [ ' x ' ] = 1 ;"
      ],
      "err_line": 9,
      "err_msg": "no match for ‘operator[]’ (operand types are ‘std::map<std::__cxx11::basic_string<char>, int>’ and ‘char’)"
    },
    {
      "mod_line": [
        6,
        1
      ],
      "mod_code": [
        "string x = s . substr ( i , s . size ( ) - i ) + s . substr ( 0 , 1 ) ;",
        "map < string , string > m ;"
      ],
      "err_line": 7,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::map<std::__cxx11::basic_string<char>, std::__cxx11::basic_string<char> >::mapped_type {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        6,
        1,
        4
      ],
      "mod_code": [
        "string x = s . substr ( i , s . size ( ) - i ) + s . substr ( 0 , 1 ) ;",
        "map < string , string > m ;",
        "int ans to 0 ;"
      ],
      "err_line": 4,
      "err_msg": "expected initializer before ‘to’"
    },
    {
      "mod_line": [
        6,
        1,
        4,
        7
      ],
      "mod_code": [
        "string x = s . substr ( i , s . size ( ) - i ) + s . substr ( 0 , 1 ) ;",
        "map < string , string > m ;",
        "int ans to 0 ;",
        "if ( m [ x ] == ' 0 ' )"
      ],
      "err_line": 4,
      "err_msg": "expected initializer before ‘to’"
    },
    {
      "mod_line": [
        6,
        1,
        4,
        3
      ],
      "mod_code": [
        "string x = s . substr ( i , s . size ( ) - i ) + s . substr ( 0 , 1 ) ;",
        "map < string , string > m ;",
        "int ans to 0 ;",
        "cout << s << endl ;"
      ],
      "err_line": 4,
      "err_msg": "expected initializer before ‘to’"
    },
    {
      "mod_line": [
        6,
        1,
        4,
        5
      ],
      "mod_code": [
        "string x = s . substr ( i , s . size ( ) - i ) + s . substr ( 0 , 1 ) ;",
        "map < string , string > m ;",
        "int ans to 0 ;",
        "for ( i = 0 ; i < s . size ( ) ; i ++ )"
      ],
      "err_line": 4,
      "err_msg": "expected initializer before ‘to’"
    },
    {
      "mod_line": [
        6,
        1,
        7
      ],
      "mod_code": [
        "string x = s . substr ( i , s . size ( ) - i ) + s . substr ( 0 , 1 ) ;",
        "map < string , string > m ;",
        "if ( m [ x ] == ' 0 ' )"
      ],
      "err_line": 7,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::map<std::__cxx11::basic_string<char>, std::__cxx11::basic_string<char> >::mapped_type {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        6,
        1,
        7,
        3
      ],
      "mod_code": [
        "string x = s . substr ( i , s . size ( ) - i ) + s . substr ( 0 , 1 ) ;",
        "map < string , string > m ;",
        "if ( m [ x ] == ' 0 ' )",
        "cout << s << endl ;"
      ],
      "err_line": 7,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::map<std::__cxx11::basic_string<char>, std::__cxx11::basic_string<char> >::mapped_type {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        6,
        1,
        7,
        5
      ],
      "mod_code": [
        "string x = s . substr ( i , s . size ( ) - i ) + s . substr ( 0 , 1 ) ;",
        "map < string , string > m ;",
        "if ( m [ x ] == ' 0 ' )",
        "for ( i = 0 ; i < s . size ( ) ; i ++ )"
      ],
      "err_line": 5,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        1,
        3
      ],
      "mod_code": [
        "string x = s . substr ( i , s . size ( ) - i ) + s . substr ( 0 , 1 ) ;",
        "map < string , string > m ;",
        "cout << s << endl ;"
      ],
      "err_line": 7,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::map<std::__cxx11::basic_string<char>, std::__cxx11::basic_string<char> >::mapped_type {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        6,
        1,
        3,
        5
      ],
      "mod_code": [
        "string x = s . substr ( i , s . size ( ) - i ) + s . substr ( 0 , 1 ) ;",
        "map < string , string > m ;",
        "cout << s << endl ;",
        "for ( i = 0 ; i < s . size ( ) ; i ++ )"
      ],
      "err_line": 5,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        1,
        5
      ],
      "mod_code": [
        "string x = s . substr ( i , s . size ( ) - i ) + s . substr ( 0 , 1 ) ;",
        "map < string , string > m ;",
        "for ( i = 0 ; i < s . size ( ) ; i ++ )"
      ],
      "err_line": 5,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        4
      ],
      "mod_code": [
        "string x = s . substr ( i , s . size ( ) - i ) + s . substr ( 0 , 1 ) ;",
        "int ans to 0 ;"
      ],
      "err_line": 4,
      "err_msg": "expected initializer before ‘to’"
    },
    {
      "mod_line": [
        6,
        4,
        7
      ],
      "mod_code": [
        "string x = s . substr ( i , s . size ( ) - i ) + s . substr ( 0 , 1 ) ;",
        "int ans to 0 ;",
        "if ( m [ x ] == ' 0 ' )"
      ],
      "err_line": 4,
      "err_msg": "expected initializer before ‘to’"
    },
    {
      "mod_line": [
        6,
        4,
        7,
        3
      ],
      "mod_code": [
        "string x = s . substr ( i , s . size ( ) - i ) + s . substr ( 0 , 1 ) ;",
        "int ans to 0 ;",
        "if ( m [ x ] == ' 0 ' )",
        "cout << s << endl ;"
      ],
      "err_line": 4,
      "err_msg": "expected initializer before ‘to’"
    },
    {
      "mod_line": [
        6,
        4,
        7,
        5
      ],
      "mod_code": [
        "string x = s . substr ( i , s . size ( ) - i ) + s . substr ( 0 , 1 ) ;",
        "int ans to 0 ;",
        "if ( m [ x ] == ' 0 ' )",
        "for ( i = 0 ; i < s . size ( ) ; i ++ )"
      ],
      "err_line": 4,
      "err_msg": "expected initializer before ‘to’"
    },
    {
      "mod_line": [
        6,
        4,
        3
      ],
      "mod_code": [
        "string x = s . substr ( i , s . size ( ) - i ) + s . substr ( 0 , 1 ) ;",
        "int ans to 0 ;",
        "cout << s << endl ;"
      ],
      "err_line": 4,
      "err_msg": "expected initializer before ‘to’"
    },
    {
      "mod_line": [
        6,
        4,
        3,
        5
      ],
      "mod_code": [
        "string x = s . substr ( i , s . size ( ) - i ) + s . substr ( 0 , 1 ) ;",
        "int ans to 0 ;",
        "cout << s << endl ;",
        "for ( i = 0 ; i < s . size ( ) ; i ++ )"
      ],
      "err_line": 4,
      "err_msg": "expected initializer before ‘to’"
    },
    {
      "mod_line": [
        6,
        4,
        5
      ],
      "mod_code": [
        "string x = s . substr ( i , s . size ( ) - i ) + s . substr ( 0 , 1 ) ;",
        "int ans to 0 ;",
        "for ( i = 0 ; i < s . size ( ) ; i ++ )"
      ],
      "err_line": 4,
      "err_msg": "expected initializer before ‘to’"
    },
    {
      "mod_line": [
        6,
        7,
        3,
        5
      ],
      "mod_code": [
        "string x = s . substr ( i , s . size ( ) - i ) + s . substr ( 0 , 1 ) ;",
        "if ( m [ x ] == ' 0 ' )",
        "cout << s << endl ;",
        "for ( i = 0 ; i < s . size ( ) ; i ++ )"
      ],
      "err_line": 5,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        7,
        5
      ],
      "mod_code": [
        "string x = s . substr ( i , s . size ( ) - i ) + s . substr ( 0 , 1 ) ;",
        "if ( m [ x ] == ' 0 ' )",
        "for ( i = 0 ; i < s . size ( ) ; i ++ )"
      ],
      "err_line": 5,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        3,
        5
      ],
      "mod_code": [
        "string x = s . substr ( i , s . size ( ) - i ) + s . substr ( 0 , 1 ) ;",
        "cout << s << endl ;",
        "for ( i = 0 ; i < s . size ( ) ; i ++ )"
      ],
      "err_line": 5,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        5
      ],
      "mod_code": [
        "string x = s . substr ( i , s . size ( ) - i ) + s . substr ( 0 , 1 ) ;",
        "for ( i = 0 ; i < s . size ( ) ; i ++ )"
      ],
      "err_line": 5,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        4
      ],
      "mod_code": [
        "map < string , string > m ;",
        "int ans to 0 ;"
      ],
      "err_line": 4,
      "err_msg": "expected initializer before ‘to’"
    },
    {
      "mod_line": [
        1,
        4,
        7
      ],
      "mod_code": [
        "map < string , string > m ;",
        "int ans to 0 ;",
        "if ( m [ x ] == ' 0 ' )"
      ],
      "err_line": 4,
      "err_msg": "expected initializer before ‘to’"
    },
    {
      "mod_line": [
        1,
        4,
        7,
        3
      ],
      "mod_code": [
        "map < string , string > m ;",
        "int ans to 0 ;",
        "if ( m [ x ] == ' 0 ' )",
        "cout << s << endl ;"
      ],
      "err_line": 4,
      "err_msg": "expected initializer before ‘to’"
    },
    {
      "mod_line": [
        1,
        4,
        7,
        5
      ],
      "mod_code": [
        "map < string , string > m ;",
        "int ans to 0 ;",
        "if ( m [ x ] == ' 0 ' )",
        "for ( i = 0 ; i < s . size ( ) ; i ++ )"
      ],
      "err_line": 4,
      "err_msg": "expected initializer before ‘to’"
    },
    {
      "mod_line": [
        1,
        4,
        3
      ],
      "mod_code": [
        "map < string , string > m ;",
        "int ans to 0 ;",
        "cout << s << endl ;"
      ],
      "err_line": 4,
      "err_msg": "expected initializer before ‘to’"
    },
    {
      "mod_line": [
        1,
        4,
        3,
        5
      ],
      "mod_code": [
        "map < string , string > m ;",
        "int ans to 0 ;",
        "cout << s << endl ;",
        "for ( i = 0 ; i < s . size ( ) ; i ++ )"
      ],
      "err_line": 4,
      "err_msg": "expected initializer before ‘to’"
    },
    {
      "mod_line": [
        1,
        4,
        5
      ],
      "mod_code": [
        "map < string , string > m ;",
        "int ans to 0 ;",
        "for ( i = 0 ; i < s . size ( ) ; i ++ )"
      ],
      "err_line": 4,
      "err_msg": "expected initializer before ‘to’"
    },
    {
      "mod_line": [
        1,
        7
      ],
      "mod_code": [
        "map < string , string > m ;",
        "if ( m [ x ] == ' 0 ' )"
      ],
      "err_line": 7,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::map<std::__cxx11::basic_string<char>, std::__cxx11::basic_string<char> >::mapped_type {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        1,
        7,
        3
      ],
      "mod_code": [
        "map < string , string > m ;",
        "if ( m [ x ] == ' 0 ' )",
        "cout << s << endl ;"
      ],
      "err_line": 7,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::map<std::__cxx11::basic_string<char>, std::__cxx11::basic_string<char> >::mapped_type {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        1,
        7,
        3,
        5
      ],
      "mod_code": [
        "map < string , string > m ;",
        "if ( m [ x ] == ' 0 ' )",
        "cout << s << endl ;",
        "for ( i = 0 ; i < s . size ( ) ; i ++ )"
      ],
      "err_line": 5,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        7,
        5
      ],
      "mod_code": [
        "map < string , string > m ;",
        "if ( m [ x ] == ' 0 ' )",
        "for ( i = 0 ; i < s . size ( ) ; i ++ )"
      ],
      "err_line": 5,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        3
      ],
      "mod_code": [
        "map < string , string > m ;",
        "cout << s << endl ;"
      ],
      "err_line": 7,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::map<std::__cxx11::basic_string<char>, std::__cxx11::basic_string<char> >::mapped_type {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        1,
        3,
        5
      ],
      "mod_code": [
        "map < string , string > m ;",
        "cout << s << endl ;",
        "for ( i = 0 ; i < s . size ( ) ; i ++ )"
      ],
      "err_line": 5,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        5
      ],
      "mod_code": [
        "map < string , string > m ;",
        "for ( i = 0 ; i < s . size ( ) ; i ++ )"
      ],
      "err_line": 5,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        7
      ],
      "mod_code": [
        "int ans to 0 ;",
        "if ( m [ x ] == ' 0 ' )"
      ],
      "err_line": 4,
      "err_msg": "expected initializer before ‘to’"
    },
    {
      "mod_line": [
        4,
        7,
        3
      ],
      "mod_code": [
        "int ans to 0 ;",
        "if ( m [ x ] == ' 0 ' )",
        "cout << s << endl ;"
      ],
      "err_line": 4,
      "err_msg": "expected initializer before ‘to’"
    },
    {
      "mod_line": [
        4,
        7,
        3,
        5
      ],
      "mod_code": [
        "int ans to 0 ;",
        "if ( m [ x ] == ' 0 ' )",
        "cout << s << endl ;",
        "for ( i = 0 ; i < s . size ( ) ; i ++ )"
      ],
      "err_line": 4,
      "err_msg": "expected initializer before ‘to’"
    },
    {
      "mod_line": [
        4,
        7,
        5
      ],
      "mod_code": [
        "int ans to 0 ;",
        "if ( m [ x ] == ' 0 ' )",
        "for ( i = 0 ; i < s . size ( ) ; i ++ )"
      ],
      "err_line": 4,
      "err_msg": "expected initializer before ‘to’"
    },
    {
      "mod_line": [
        4,
        3
      ],
      "mod_code": [
        "int ans to 0 ;",
        "cout << s << endl ;"
      ],
      "err_line": 4,
      "err_msg": "expected initializer before ‘to’"
    },
    {
      "mod_line": [
        4,
        3,
        5
      ],
      "mod_code": [
        "int ans to 0 ;",
        "cout << s << endl ;",
        "for ( i = 0 ; i < s . size ( ) ; i ++ )"
      ],
      "err_line": 4,
      "err_msg": "expected initializer before ‘to’"
    },
    {
      "mod_line": [
        4,
        5
      ],
      "mod_code": [
        "int ans to 0 ;",
        "for ( i = 0 ; i < s . size ( ) ; i ++ )"
      ],
      "err_line": 4,
      "err_msg": "expected initializer before ‘to’"
    },
    {
      "mod_line": [
        7,
        3,
        5
      ],
      "mod_code": [
        "if ( m [ x ] == ' 0 ' )",
        "cout << s << endl ;",
        "for ( i = 0 ; i < s . size ( ) ; i ++ )"
      ],
      "err_line": 5,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        7,
        5
      ],
      "mod_code": [
        "if ( m [ x ] == ' 0 ' )",
        "for ( i = 0 ; i < s . size ( ) ; i ++ )"
      ],
      "err_line": 5,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        5
      ],
      "mod_code": [
        "cout << s << endl ;",
        "for ( i = 0 ; i < s . size ( ) ; i ++ )"
      ],
      "err_line": 5,
      "err_msg": "‘i’ was not declared in this scope"
    }
  ]
}