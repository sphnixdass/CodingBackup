{
  "meta": {
    "index": 208,
    "hitid": "3M7OI89LVYIKJ8G959ODVUZU6TX6CY",
    "workerid": "AIWEXPJAU66D9",
    "probid": "9A",
    "subid": "48528373"
  },
  "lines": [
    {
      "line": 0,
      "text": "function gcd with integer arguments a and b and return type of integer",
      "code": "int gcd ( int a , int b )",
      "indent": 0
    },
    {
      "line": 1,
      "text": "if b is equal to 0",
      "code": "if ( b == 0 )",
      "indent": 1
    },
    {
      "line": 2,
      "text": "return a",
      "code": "return a ;",
      "indent": 2
    },
    {
      "line": 3,
      "text": "else",
      "code": "else",
      "indent": 1
    },
    {
      "line": 4,
      "text": "return gcd of b and a % b",
      "code": "return gcd ( b , a % b ) ;",
      "indent": 2
    },
    {
      "line": 5,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    },
    {
      "line": 6,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 7,
      "text": "create integers w and y",
      "code": "int w , y ;",
      "indent": 1
    },
    {
      "line": 8,
      "text": "read w and y",
      "code": "cin >> w >> y ;",
      "indent": 1
    },
    {
      "line": 9,
      "text": "set integer b to 6 - max of w and y + 1",
      "code": "int b = 6 - max ( w , y ) + 1 ;",
      "indent": 1
    },
    {
      "line": 10,
      "text": "set integer gc to gcd of b and 6",
      "code": "int gc = gcd ( b , 6 ) ;",
      "indent": 1
    },
    {
      "line": 11,
      "text": "divide b by gc",
      "code": "b /= gc ;",
      "indent": 1
    },
    {
      "line": 12,
      "text": "print b , \" / \" and 6 / gc and a new line",
      "code": "cout << b << \" / \" << 6 / gc << endl ;",
      "indent": 1
    },
    {
      "line": 13,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        0
      ],
      "mod_code": [
        "return gcd ( int a , int b )"
      ],
      "err_line": 0,
      "err_msg": "expected unqualified-id before ‘return’"
    },
    {
      "mod_line": [
        4
      ],
      "mod_code": [
        "return gcd ( b and a % b ) ;"
      ],
      "err_line": 4,
      "err_msg": "too few arguments to function ‘int gcd(int, int)’"
    },
    {
      "mod_line": [
        10
      ],
      "mod_code": [
        "int gc gc = gcd ( b , 6 ) ;"
      ],
      "err_line": 10,
      "err_msg": "expected initializer before ‘gc’"
    },
    {
      "mod_line": [
        9,
        1,
        12,
        10
      ],
      "mod_code": [
        "int b = 6 - max ( w , y + 1 ) ;",
        "if ( b == ' 0 ' )",
        "cout << b << \" \" << 6 / gc << endl ;",
        "int gc gc = gcd ( b , 6 ) ;"
      ],
      "err_line": 10,
      "err_msg": "expected initializer before ‘gc’"
    },
    {
      "mod_line": [
        9,
        1,
        12,
        0
      ],
      "mod_code": [
        "int b = 6 - max ( w , y + 1 ) ;",
        "if ( b == ' 0 ' )",
        "cout << b << \" \" << 6 / gc << endl ;",
        "return gcd ( int a , int b )"
      ],
      "err_line": 0,
      "err_msg": "expected unqualified-id before ‘return’"
    },
    {
      "mod_line": [
        9,
        1,
        10
      ],
      "mod_code": [
        "int b = 6 - max ( w , y + 1 ) ;",
        "if ( b == ' 0 ' )",
        "int gc gc = gcd ( b , 6 ) ;"
      ],
      "err_line": 10,
      "err_msg": "expected initializer before ‘gc’"
    },
    {
      "mod_line": [
        9,
        1,
        10,
        0
      ],
      "mod_code": [
        "int b = 6 - max ( w , y + 1 ) ;",
        "if ( b == ' 0 ' )",
        "int gc gc = gcd ( b , 6 ) ;",
        "return gcd ( int a , int b )"
      ],
      "err_line": 0,
      "err_msg": "expected unqualified-id before ‘return’"
    },
    {
      "mod_line": [
        9,
        1,
        10,
        8
      ],
      "mod_code": [
        "int b = 6 - max ( w , y + 1 ) ;",
        "if ( b == ' 0 ' )",
        "int gc gc = gcd ( b , 6 ) ;",
        "cin >> w >> w ;"
      ],
      "err_line": 10,
      "err_msg": "expected initializer before ‘gc’"
    },
    {
      "mod_line": [
        9,
        1,
        0
      ],
      "mod_code": [
        "int b = 6 - max ( w , y + 1 ) ;",
        "if ( b == ' 0 ' )",
        "return gcd ( int a , int b )"
      ],
      "err_line": 0,
      "err_msg": "expected unqualified-id before ‘return’"
    },
    {
      "mod_line": [
        9,
        1,
        0,
        8
      ],
      "mod_code": [
        "int b = 6 - max ( w , y + 1 ) ;",
        "if ( b == ' 0 ' )",
        "return gcd ( int a , int b )",
        "cin >> w >> w ;"
      ],
      "err_line": 0,
      "err_msg": "expected unqualified-id before ‘return’"
    },
    {
      "mod_line": [
        9,
        12,
        10
      ],
      "mod_code": [
        "int b = 6 - max ( w , y + 1 ) ;",
        "cout << b << \" \" << 6 / gc << endl ;",
        "int gc gc = gcd ( b , 6 ) ;"
      ],
      "err_line": 10,
      "err_msg": "expected initializer before ‘gc’"
    },
    {
      "mod_line": [
        9,
        12,
        10,
        0
      ],
      "mod_code": [
        "int b = 6 - max ( w , y + 1 ) ;",
        "cout << b << \" \" << 6 / gc << endl ;",
        "int gc gc = gcd ( b , 6 ) ;",
        "return gcd ( int a , int b )"
      ],
      "err_line": 0,
      "err_msg": "expected unqualified-id before ‘return’"
    },
    {
      "mod_line": [
        9,
        12,
        10,
        8
      ],
      "mod_code": [
        "int b = 6 - max ( w , y + 1 ) ;",
        "cout << b << \" \" << 6 / gc << endl ;",
        "int gc gc = gcd ( b , 6 ) ;",
        "cin >> w >> w ;"
      ],
      "err_line": 10,
      "err_msg": "expected initializer before ‘gc’"
    },
    {
      "mod_line": [
        9,
        12,
        0
      ],
      "mod_code": [
        "int b = 6 - max ( w , y + 1 ) ;",
        "cout << b << \" \" << 6 / gc << endl ;",
        "return gcd ( int a , int b )"
      ],
      "err_line": 0,
      "err_msg": "expected unqualified-id before ‘return’"
    },
    {
      "mod_line": [
        9,
        12,
        0,
        8
      ],
      "mod_code": [
        "int b = 6 - max ( w , y + 1 ) ;",
        "cout << b << \" \" << 6 / gc << endl ;",
        "return gcd ( int a , int b )",
        "cin >> w >> w ;"
      ],
      "err_line": 0,
      "err_msg": "expected unqualified-id before ‘return’"
    },
    {
      "mod_line": [
        9,
        10
      ],
      "mod_code": [
        "int b = 6 - max ( w , y + 1 ) ;",
        "int gc gc = gcd ( b , 6 ) ;"
      ],
      "err_line": 10,
      "err_msg": "expected initializer before ‘gc’"
    },
    {
      "mod_line": [
        9,
        10,
        0
      ],
      "mod_code": [
        "int b = 6 - max ( w , y + 1 ) ;",
        "int gc gc = gcd ( b , 6 ) ;",
        "return gcd ( int a , int b )"
      ],
      "err_line": 0,
      "err_msg": "expected unqualified-id before ‘return’"
    },
    {
      "mod_line": [
        9,
        10,
        0,
        8
      ],
      "mod_code": [
        "int b = 6 - max ( w , y + 1 ) ;",
        "int gc gc = gcd ( b , 6 ) ;",
        "return gcd ( int a , int b )",
        "cin >> w >> w ;"
      ],
      "err_line": 0,
      "err_msg": "expected unqualified-id before ‘return’"
    },
    {
      "mod_line": [
        9,
        10,
        8
      ],
      "mod_code": [
        "int b = 6 - max ( w , y + 1 ) ;",
        "int gc gc = gcd ( b , 6 ) ;",
        "cin >> w >> w ;"
      ],
      "err_line": 10,
      "err_msg": "expected initializer before ‘gc’"
    },
    {
      "mod_line": [
        9,
        0
      ],
      "mod_code": [
        "int b = 6 - max ( w , y + 1 ) ;",
        "return gcd ( int a , int b )"
      ],
      "err_line": 0,
      "err_msg": "expected unqualified-id before ‘return’"
    },
    {
      "mod_line": [
        9,
        0,
        8
      ],
      "mod_code": [
        "int b = 6 - max ( w , y + 1 ) ;",
        "return gcd ( int a , int b )",
        "cin >> w >> w ;"
      ],
      "err_line": 0,
      "err_msg": "expected unqualified-id before ‘return’"
    },
    {
      "mod_line": [
        1,
        12,
        10
      ],
      "mod_code": [
        "if ( b == ' 0 ' )",
        "cout << b << \" \" << 6 / gc << endl ;",
        "int gc gc = gcd ( b , 6 ) ;"
      ],
      "err_line": 10,
      "err_msg": "expected initializer before ‘gc’"
    },
    {
      "mod_line": [
        1,
        12,
        10,
        0
      ],
      "mod_code": [
        "if ( b == ' 0 ' )",
        "cout << b << \" \" << 6 / gc << endl ;",
        "int gc gc = gcd ( b , 6 ) ;",
        "return gcd ( int a , int b )"
      ],
      "err_line": 0,
      "err_msg": "expected unqualified-id before ‘return’"
    },
    {
      "mod_line": [
        1,
        12,
        10,
        8
      ],
      "mod_code": [
        "if ( b == ' 0 ' )",
        "cout << b << \" \" << 6 / gc << endl ;",
        "int gc gc = gcd ( b , 6 ) ;",
        "cin >> w >> w ;"
      ],
      "err_line": 10,
      "err_msg": "expected initializer before ‘gc’"
    },
    {
      "mod_line": [
        1,
        12,
        0
      ],
      "mod_code": [
        "if ( b == ' 0 ' )",
        "cout << b << \" \" << 6 / gc << endl ;",
        "return gcd ( int a , int b )"
      ],
      "err_line": 0,
      "err_msg": "expected unqualified-id before ‘return’"
    },
    {
      "mod_line": [
        1,
        12,
        0,
        8
      ],
      "mod_code": [
        "if ( b == ' 0 ' )",
        "cout << b << \" \" << 6 / gc << endl ;",
        "return gcd ( int a , int b )",
        "cin >> w >> w ;"
      ],
      "err_line": 0,
      "err_msg": "expected unqualified-id before ‘return’"
    },
    {
      "mod_line": [
        1,
        10
      ],
      "mod_code": [
        "if ( b == ' 0 ' )",
        "int gc gc = gcd ( b , 6 ) ;"
      ],
      "err_line": 10,
      "err_msg": "expected initializer before ‘gc’"
    },
    {
      "mod_line": [
        1,
        10,
        0
      ],
      "mod_code": [
        "if ( b == ' 0 ' )",
        "int gc gc = gcd ( b , 6 ) ;",
        "return gcd ( int a , int b )"
      ],
      "err_line": 0,
      "err_msg": "expected unqualified-id before ‘return’"
    },
    {
      "mod_line": [
        1,
        10,
        0,
        8
      ],
      "mod_code": [
        "if ( b == ' 0 ' )",
        "int gc gc = gcd ( b , 6 ) ;",
        "return gcd ( int a , int b )",
        "cin >> w >> w ;"
      ],
      "err_line": 0,
      "err_msg": "expected unqualified-id before ‘return’"
    },
    {
      "mod_line": [
        1,
        10,
        8
      ],
      "mod_code": [
        "if ( b == ' 0 ' )",
        "int gc gc = gcd ( b , 6 ) ;",
        "cin >> w >> w ;"
      ],
      "err_line": 10,
      "err_msg": "expected initializer before ‘gc’"
    },
    {
      "mod_line": [
        1,
        0
      ],
      "mod_code": [
        "if ( b == ' 0 ' )",
        "return gcd ( int a , int b )"
      ],
      "err_line": 0,
      "err_msg": "expected unqualified-id before ‘return’"
    },
    {
      "mod_line": [
        1,
        0,
        8
      ],
      "mod_code": [
        "if ( b == ' 0 ' )",
        "return gcd ( int a , int b )",
        "cin >> w >> w ;"
      ],
      "err_line": 0,
      "err_msg": "expected unqualified-id before ‘return’"
    },
    {
      "mod_line": [
        12,
        10
      ],
      "mod_code": [
        "cout << b << \" \" << 6 / gc << endl ;",
        "int gc gc = gcd ( b , 6 ) ;"
      ],
      "err_line": 10,
      "err_msg": "expected initializer before ‘gc’"
    },
    {
      "mod_line": [
        12,
        10,
        0
      ],
      "mod_code": [
        "cout << b << \" \" << 6 / gc << endl ;",
        "int gc gc = gcd ( b , 6 ) ;",
        "return gcd ( int a , int b )"
      ],
      "err_line": 0,
      "err_msg": "expected unqualified-id before ‘return’"
    },
    {
      "mod_line": [
        12,
        10,
        0,
        8
      ],
      "mod_code": [
        "cout << b << \" \" << 6 / gc << endl ;",
        "int gc gc = gcd ( b , 6 ) ;",
        "return gcd ( int a , int b )",
        "cin >> w >> w ;"
      ],
      "err_line": 0,
      "err_msg": "expected unqualified-id before ‘return’"
    },
    {
      "mod_line": [
        12,
        10,
        8
      ],
      "mod_code": [
        "cout << b << \" \" << 6 / gc << endl ;",
        "int gc gc = gcd ( b , 6 ) ;",
        "cin >> w >> w ;"
      ],
      "err_line": 10,
      "err_msg": "expected initializer before ‘gc’"
    },
    {
      "mod_line": [
        12,
        0
      ],
      "mod_code": [
        "cout << b << \" \" << 6 / gc << endl ;",
        "return gcd ( int a , int b )"
      ],
      "err_line": 0,
      "err_msg": "expected unqualified-id before ‘return’"
    },
    {
      "mod_line": [
        12,
        0,
        8
      ],
      "mod_code": [
        "cout << b << \" \" << 6 / gc << endl ;",
        "return gcd ( int a , int b )",
        "cin >> w >> w ;"
      ],
      "err_line": 0,
      "err_msg": "expected unqualified-id before ‘return’"
    },
    {
      "mod_line": [
        10,
        0
      ],
      "mod_code": [
        "int gc gc = gcd ( b , 6 ) ;",
        "return gcd ( int a , int b )"
      ],
      "err_line": 0,
      "err_msg": "expected unqualified-id before ‘return’"
    },
    {
      "mod_line": [
        10,
        0,
        8
      ],
      "mod_code": [
        "int gc gc = gcd ( b , 6 ) ;",
        "return gcd ( int a , int b )",
        "cin >> w >> w ;"
      ],
      "err_line": 0,
      "err_msg": "expected unqualified-id before ‘return’"
    },
    {
      "mod_line": [
        10,
        8
      ],
      "mod_code": [
        "int gc gc = gcd ( b , 6 ) ;",
        "cin >> w >> w ;"
      ],
      "err_line": 10,
      "err_msg": "expected initializer before ‘gc’"
    },
    {
      "mod_line": [
        0,
        8
      ],
      "mod_code": [
        "return gcd ( int a , int b )",
        "cin >> w >> w ;"
      ],
      "err_line": 0,
      "err_msg": "expected unqualified-id before ‘return’"
    }
  ]
}