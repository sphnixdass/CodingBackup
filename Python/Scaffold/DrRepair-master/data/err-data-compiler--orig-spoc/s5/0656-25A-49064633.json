{
  "meta": {
    "index": 656,
    "hitid": "363A7XIFV4GH5JYCM30U1RP5OLJVAX",
    "workerid": "A1C6BNLZXBOMT7",
    "probid": "25A",
    "subid": "49064633"
  },
  "lines": [
    {
      "line": 0,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 1,
      "text": "n = integer",
      "code": "int n ;",
      "indent": 1
    },
    {
      "line": 2,
      "text": "Read n",
      "code": "cin >> n ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "arr = array of n integers",
      "code": "int arr [ n ] ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "even , odd = integers , both set to 0",
      "code": "int even = 0 , odd = 0 ;",
      "indent": 1
    },
    {
      "line": 5,
      "text": "for i = 0 to n exclusive",
      "code": "for ( int i = 0 ; i < n ; i ++ )",
      "indent": 1
    },
    {
      "line": 6,
      "text": "Read n values into array arr",
      "code": "cin >> arr [ i ] ;",
      "indent": 2
    },
    {
      "line": 7,
      "text": "if arr [ i ] modulo 2 is 0",
      "code": "if ( arr [ i ] % 2 == 0 )",
      "indent": 2
    },
    {
      "line": 8,
      "text": "increment even",
      "code": "even ++ ;",
      "indent": 3
    },
    {
      "line": 9,
      "text": "else do the following",
      "code": "else",
      "indent": 2
    },
    {
      "line": 10,
      "text": "increment odd",
      "code": "odd ++ ;",
      "indent": 3
    },
    {
      "line": 11,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 12,
      "text": "if odd is equal to 1",
      "code": "if ( odd == 1 )",
      "indent": 1
    },
    {
      "line": 13,
      "text": "for i = 0 to n exclusive",
      "code": "for ( int i = 0 ; i < n ; i ++ )",
      "indent": 2
    },
    {
      "line": 14,
      "text": "if arr [ i ] modulo 2 is 1",
      "code": "if ( arr [ i ] % 2 == 1 )",
      "indent": 3
    },
    {
      "line": 15,
      "text": "print i + 1 and new line",
      "code": "cout << i + 1 << endl ;",
      "indent": 4
    },
    {
      "line": 16,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 4
    },
    {
      "line": 17,
      "text": "DUMMY",
      "code": "}",
      "indent": 3
    },
    {
      "line": 18,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 19,
      "text": "else do the following",
      "code": "else",
      "indent": 1
    },
    {
      "line": 20,
      "text": "for i = 0 to n exclusive",
      "code": "for ( int i = 0 ; i < n ; i ++ )",
      "indent": 2
    },
    {
      "line": 21,
      "text": "if arr [ i ] modulo 2 is 0",
      "code": "if ( arr [ i ] % 2 == 0 )",
      "indent": 3
    },
    {
      "line": 22,
      "text": "print i + 1 and new line",
      "code": "cout << i + 1 << endl ;",
      "indent": 4
    },
    {
      "line": 23,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 4
    },
    {
      "line": 24,
      "text": "DUMMY",
      "code": "}",
      "indent": 3
    },
    {
      "line": 25,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 26,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 27,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        2
      ],
      "mod_code": [
        "{ cin >> n ;"
      ],
      "err_line": 27,
      "err_msg": "expected ‘}’ at end of input"
    },
    {
      "mod_line": [
        4
      ],
      "mod_code": [
        "int even = 0 , 0 = 0 ;"
      ],
      "err_line": 4,
      "err_msg": "expected unqualified-id before numeric constant"
    },
    {
      "mod_line": [
        5
      ],
      "mod_code": [
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 5,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        8
      ],
      "mod_code": [
        "j ++ ;"
      ],
      "err_line": 8,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        13
      ],
      "mod_code": [
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 13,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        20
      ],
      "mod_code": [
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 20,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        5,
        6
      ],
      "mod_code": [
        "for ( i = 0 ; i < n ; i ++ )",
        "for ( int i = 1 ; i <= n ; i ++ ) { cin >> arr [ i ] ; }"
      ],
      "err_line": 5,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        6,
        12
      ],
      "mod_code": [
        "for ( i = 0 ; i < n ; i ++ )",
        "for ( int i = 1 ; i <= n ; i ++ ) { cin >> arr [ i ] ; }",
        "if ( odd != 1 )"
      ],
      "err_line": 5,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        6,
        12,
        9
      ],
      "mod_code": [
        "for ( i = 0 ; i < n ; i ++ )",
        "for ( int i = 1 ; i <= n ; i ++ ) { cin >> arr [ i ] ; }",
        "if ( odd != 1 )",
        "while ( 1 )"
      ],
      "err_line": 5,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        6,
        12,
        13
      ],
      "mod_code": [
        "for ( i = 0 ; i < n ; i ++ )",
        "for ( int i = 1 ; i <= n ; i ++ ) { cin >> arr [ i ] ; }",
        "if ( odd != 1 )",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 5,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        6,
        12,
        2
      ],
      "mod_code": [
        "for ( i = 0 ; i < n ; i ++ )",
        "for ( int i = 1 ; i <= n ; i ++ ) { cin >> arr [ i ] ; }",
        "if ( odd != 1 )",
        "{ cin >> n ;"
      ],
      "err_line": 5,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        6,
        9
      ],
      "mod_code": [
        "for ( i = 0 ; i < n ; i ++ )",
        "for ( int i = 1 ; i <= n ; i ++ ) { cin >> arr [ i ] ; }",
        "while ( 1 )"
      ],
      "err_line": 5,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        6,
        9,
        13
      ],
      "mod_code": [
        "for ( i = 0 ; i < n ; i ++ )",
        "for ( int i = 1 ; i <= n ; i ++ ) { cin >> arr [ i ] ; }",
        "while ( 1 )",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 5,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        6,
        9,
        2
      ],
      "mod_code": [
        "for ( i = 0 ; i < n ; i ++ )",
        "for ( int i = 1 ; i <= n ; i ++ ) { cin >> arr [ i ] ; }",
        "while ( 1 )",
        "{ cin >> n ;"
      ],
      "err_line": 5,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        6,
        13
      ],
      "mod_code": [
        "for ( i = 0 ; i < n ; i ++ )",
        "for ( int i = 1 ; i <= n ; i ++ ) { cin >> arr [ i ] ; }",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 5,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        6,
        13,
        2
      ],
      "mod_code": [
        "for ( i = 0 ; i < n ; i ++ )",
        "for ( int i = 1 ; i <= n ; i ++ ) { cin >> arr [ i ] ; }",
        "for ( i = 0 ; i < n ; i ++ )",
        "{ cin >> n ;"
      ],
      "err_line": 5,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        6,
        2
      ],
      "mod_code": [
        "for ( i = 0 ; i < n ; i ++ )",
        "for ( int i = 1 ; i <= n ; i ++ ) { cin >> arr [ i ] ; }",
        "{ cin >> n ;"
      ],
      "err_line": 5,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        12
      ],
      "mod_code": [
        "for ( i = 0 ; i < n ; i ++ )",
        "if ( odd != 1 )"
      ],
      "err_line": 5,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        12,
        9
      ],
      "mod_code": [
        "for ( i = 0 ; i < n ; i ++ )",
        "if ( odd != 1 )",
        "while ( 1 )"
      ],
      "err_line": 5,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        12,
        9,
        13
      ],
      "mod_code": [
        "for ( i = 0 ; i < n ; i ++ )",
        "if ( odd != 1 )",
        "while ( 1 )",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 5,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        12,
        9,
        2
      ],
      "mod_code": [
        "for ( i = 0 ; i < n ; i ++ )",
        "if ( odd != 1 )",
        "while ( 1 )",
        "{ cin >> n ;"
      ],
      "err_line": 5,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        12,
        13
      ],
      "mod_code": [
        "for ( i = 0 ; i < n ; i ++ )",
        "if ( odd != 1 )",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 5,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        12,
        13,
        2
      ],
      "mod_code": [
        "for ( i = 0 ; i < n ; i ++ )",
        "if ( odd != 1 )",
        "for ( i = 0 ; i < n ; i ++ )",
        "{ cin >> n ;"
      ],
      "err_line": 5,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        12,
        2
      ],
      "mod_code": [
        "for ( i = 0 ; i < n ; i ++ )",
        "if ( odd != 1 )",
        "{ cin >> n ;"
      ],
      "err_line": 5,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        9
      ],
      "mod_code": [
        "for ( i = 0 ; i < n ; i ++ )",
        "while ( 1 )"
      ],
      "err_line": 5,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        9,
        13
      ],
      "mod_code": [
        "for ( i = 0 ; i < n ; i ++ )",
        "while ( 1 )",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 5,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        9,
        13,
        2
      ],
      "mod_code": [
        "for ( i = 0 ; i < n ; i ++ )",
        "while ( 1 )",
        "for ( i = 0 ; i < n ; i ++ )",
        "{ cin >> n ;"
      ],
      "err_line": 5,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        9,
        2
      ],
      "mod_code": [
        "for ( i = 0 ; i < n ; i ++ )",
        "while ( 1 )",
        "{ cin >> n ;"
      ],
      "err_line": 5,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        13
      ],
      "mod_code": [
        "for ( i = 0 ; i < n ; i ++ )",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 5,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        13,
        2
      ],
      "mod_code": [
        "for ( i = 0 ; i < n ; i ++ )",
        "for ( i = 0 ; i < n ; i ++ )",
        "{ cin >> n ;"
      ],
      "err_line": 5,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        2
      ],
      "mod_code": [
        "for ( i = 0 ; i < n ; i ++ )",
        "{ cin >> n ;"
      ],
      "err_line": 5,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        12,
        9,
        13
      ],
      "mod_code": [
        "for ( int i = 1 ; i <= n ; i ++ ) { cin >> arr [ i ] ; }",
        "if ( odd != 1 )",
        "while ( 1 )",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 13,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        6,
        12,
        9,
        2
      ],
      "mod_code": [
        "for ( int i = 1 ; i <= n ; i ++ ) { cin >> arr [ i ] ; }",
        "if ( odd != 1 )",
        "while ( 1 )",
        "{ cin >> n ;"
      ],
      "err_line": 27,
      "err_msg": "expected ‘}’ at end of input"
    },
    {
      "mod_line": [
        6,
        12,
        13
      ],
      "mod_code": [
        "for ( int i = 1 ; i <= n ; i ++ ) { cin >> arr [ i ] ; }",
        "if ( odd != 1 )",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 13,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        6,
        12,
        13,
        2
      ],
      "mod_code": [
        "for ( int i = 1 ; i <= n ; i ++ ) { cin >> arr [ i ] ; }",
        "if ( odd != 1 )",
        "for ( i = 0 ; i < n ; i ++ )",
        "{ cin >> n ;"
      ],
      "err_line": 13,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        6,
        12,
        2
      ],
      "mod_code": [
        "for ( int i = 1 ; i <= n ; i ++ ) { cin >> arr [ i ] ; }",
        "if ( odd != 1 )",
        "{ cin >> n ;"
      ],
      "err_line": 27,
      "err_msg": "expected ‘}’ at end of input"
    },
    {
      "mod_line": [
        6,
        9,
        13
      ],
      "mod_code": [
        "for ( int i = 1 ; i <= n ; i ++ ) { cin >> arr [ i ] ; }",
        "while ( 1 )",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 13,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        6,
        9,
        13,
        2
      ],
      "mod_code": [
        "for ( int i = 1 ; i <= n ; i ++ ) { cin >> arr [ i ] ; }",
        "while ( 1 )",
        "for ( i = 0 ; i < n ; i ++ )",
        "{ cin >> n ;"
      ],
      "err_line": 13,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        6,
        9,
        2
      ],
      "mod_code": [
        "for ( int i = 1 ; i <= n ; i ++ ) { cin >> arr [ i ] ; }",
        "while ( 1 )",
        "{ cin >> n ;"
      ],
      "err_line": 27,
      "err_msg": "expected ‘}’ at end of input"
    },
    {
      "mod_line": [
        6,
        13
      ],
      "mod_code": [
        "for ( int i = 1 ; i <= n ; i ++ ) { cin >> arr [ i ] ; }",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 13,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        6,
        13,
        2
      ],
      "mod_code": [
        "for ( int i = 1 ; i <= n ; i ++ ) { cin >> arr [ i ] ; }",
        "for ( i = 0 ; i < n ; i ++ )",
        "{ cin >> n ;"
      ],
      "err_line": 13,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        6,
        2
      ],
      "mod_code": [
        "for ( int i = 1 ; i <= n ; i ++ ) { cin >> arr [ i ] ; }",
        "{ cin >> n ;"
      ],
      "err_line": 27,
      "err_msg": "expected ‘}’ at end of input"
    },
    {
      "mod_line": [
        12,
        9,
        13
      ],
      "mod_code": [
        "if ( odd != 1 )",
        "while ( 1 )",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 13,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        12,
        9,
        13,
        2
      ],
      "mod_code": [
        "if ( odd != 1 )",
        "while ( 1 )",
        "for ( i = 0 ; i < n ; i ++ )",
        "{ cin >> n ;"
      ],
      "err_line": 13,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        12,
        9,
        2
      ],
      "mod_code": [
        "if ( odd != 1 )",
        "while ( 1 )",
        "{ cin >> n ;"
      ],
      "err_line": 27,
      "err_msg": "expected ‘}’ at end of input"
    },
    {
      "mod_line": [
        12,
        13
      ],
      "mod_code": [
        "if ( odd != 1 )",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 13,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        12,
        13,
        2
      ],
      "mod_code": [
        "if ( odd != 1 )",
        "for ( i = 0 ; i < n ; i ++ )",
        "{ cin >> n ;"
      ],
      "err_line": 13,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        12,
        2
      ],
      "mod_code": [
        "if ( odd != 1 )",
        "{ cin >> n ;"
      ],
      "err_line": 27,
      "err_msg": "expected ‘}’ at end of input"
    },
    {
      "mod_line": [
        9,
        13
      ],
      "mod_code": [
        "while ( 1 )",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 13,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        9,
        13,
        2
      ],
      "mod_code": [
        "while ( 1 )",
        "for ( i = 0 ; i < n ; i ++ )",
        "{ cin >> n ;"
      ],
      "err_line": 13,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        9,
        2
      ],
      "mod_code": [
        "while ( 1 )",
        "{ cin >> n ;"
      ],
      "err_line": 27,
      "err_msg": "expected ‘}’ at end of input"
    },
    {
      "mod_line": [
        13,
        2
      ],
      "mod_code": [
        "for ( i = 0 ; i < n ; i ++ )",
        "{ cin >> n ;"
      ],
      "err_line": 13,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    }
  ]
}