{
  "meta": {
    "index": 1946,
    "hitid": "3PKJ68EHDNQNOB6WBKW3FP1F6TVJH4",
    "workerid": "AIWEXPJAU66D9",
    "probid": "688A",
    "subid": "47687774"
  },
  "lines": [
    {
      "line": 0,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 1,
      "text": "create ints n and d",
      "code": "int n , d ;",
      "indent": 1
    },
    {
      "line": 2,
      "text": "read n and d",
      "code": "cin >> n >> d ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "create string all_present with length n filled with ' 1 '",
      "code": "string all_present ( n , ' 1 ' ) ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "create ints count and cdays = 0",
      "code": "int count = 0 , cdays = 0 ;",
      "indent": 1
    },
    {
      "line": 5,
      "text": "decrement d and loop further , while d is not 0",
      "code": "while ( d -- )",
      "indent": 1
    },
    {
      "line": 6,
      "text": "declare string day",
      "code": "string day ;",
      "indent": 2
    },
    {
      "line": 7,
      "text": "read day",
      "code": "cin >> day ;",
      "indent": 2
    },
    {
      "line": 8,
      "text": "if day is all_present",
      "code": "if ( day == all_present )",
      "indent": 2
    },
    {
      "line": 9,
      "text": "change cdays to max of cdays and count , and assign 0 to count",
      "code": "cdays = max ( cdays , count ) , count = 0 ;",
      "indent": 3
    },
    {
      "line": 10,
      "text": "else",
      "code": "else",
      "indent": 2
    },
    {
      "line": 11,
      "text": "increment count by one",
      "code": "count ++ ;",
      "indent": 3
    },
    {
      "line": 12,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 13,
      "text": "change cdays to max of cdays and count",
      "code": "cdays = max ( cdays , count ) ;",
      "indent": 1
    },
    {
      "line": 14,
      "text": "print cdays",
      "code": "cout << cdays << endl ;",
      "indent": 1
    },
    {
      "line": 15,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 16,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        3
      ],
      "mod_code": [
        "string all_present = ' 1 ' ;"
      ],
      "err_line": 3,
      "err_msg": "conversion from ‘char’ to non-scalar type ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ requested"
    },
    {
      "mod_line": [
        2
      ],
      "mod_code": [
        "while ( cin >> n >> d )"
      ],
      "err_line": 8,
      "err_msg": "‘all_present’ was not declared in this scope"
    },
    {
      "mod_line": [
        3
      ],
      "mod_code": [
        "string all_present = ' 1 ' , all_present = ' 1 ' ;"
      ],
      "err_line": 3,
      "err_msg": "conversion from ‘char’ to non-scalar type ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ requested"
    },
    {
      "mod_line": [
        6
      ],
      "mod_code": [
        "string n ;"
      ],
      "err_line": 7,
      "err_msg": "‘day’ was not declared in this scope"
    },
    {
      "mod_line": [
        7
      ],
      "mod_code": [
        "{ cin >> day ;"
      ],
      "err_line": 16,
      "err_msg": "expected ‘}’ at end of input"
    },
    {
      "mod_line": [
        8
      ],
      "mod_code": [
        "if ( day == ' all_present ' )"
      ],
      "err_line": 8,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        13
      ],
      "mod_code": [
        "cdays = max ( cdays and count ) ;"
      ],
      "err_line": 13,
      "err_msg": "no matching function for call to ‘max(bool)’"
    },
    {
      "mod_line": [
        3,
        8
      ],
      "mod_code": [
        "string all_present = ' 1 ' ;",
        "if ( day == ' all_present ' )"
      ],
      "err_line": 3,
      "err_msg": "conversion from ‘char’ to non-scalar type ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ requested"
    },
    {
      "mod_line": [
        3,
        8,
        9
      ],
      "mod_code": [
        "string all_present = ' 1 ' ;",
        "if ( day == ' all_present ' )",
        "cdays = max ( cdays , count ) ;"
      ],
      "err_line": 3,
      "err_msg": "conversion from ‘char’ to non-scalar type ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ requested"
    },
    {
      "mod_line": [
        3,
        8,
        9,
        6
      ],
      "mod_code": [
        "string all_present = ' 1 ' ;",
        "if ( day == ' all_present ' )",
        "cdays = max ( cdays , count ) ;",
        "string n ;"
      ],
      "err_line": 3,
      "err_msg": "conversion from ‘char’ to non-scalar type ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ requested"
    },
    {
      "mod_line": [
        3,
        8,
        9,
        14
      ],
      "mod_code": [
        "string all_present = ' 1 ' ;",
        "if ( day == ' all_present ' )",
        "cdays = max ( cdays , count ) ;",
        "cout << cdays ;"
      ],
      "err_line": 3,
      "err_msg": "conversion from ‘char’ to non-scalar type ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ requested"
    },
    {
      "mod_line": [
        3,
        8,
        6
      ],
      "mod_code": [
        "string all_present = ' 1 ' ;",
        "if ( day == ' all_present ' )",
        "string n ;"
      ],
      "err_line": 3,
      "err_msg": "conversion from ‘char’ to non-scalar type ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ requested"
    },
    {
      "mod_line": [
        3,
        8,
        6,
        14
      ],
      "mod_code": [
        "string all_present = ' 1 ' ;",
        "if ( day == ' all_present ' )",
        "string n ;",
        "cout << cdays ;"
      ],
      "err_line": 3,
      "err_msg": "conversion from ‘char’ to non-scalar type ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ requested"
    },
    {
      "mod_line": [
        3,
        8,
        14
      ],
      "mod_code": [
        "string all_present = ' 1 ' ;",
        "if ( day == ' all_present ' )",
        "cout << cdays ;"
      ],
      "err_line": 3,
      "err_msg": "conversion from ‘char’ to non-scalar type ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ requested"
    },
    {
      "mod_line": [
        3,
        9
      ],
      "mod_code": [
        "string all_present = ' 1 ' ;",
        "cdays = max ( cdays , count ) ;"
      ],
      "err_line": 3,
      "err_msg": "conversion from ‘char’ to non-scalar type ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ requested"
    },
    {
      "mod_line": [
        3,
        9,
        6
      ],
      "mod_code": [
        "string all_present = ' 1 ' ;",
        "cdays = max ( cdays , count ) ;",
        "string n ;"
      ],
      "err_line": 3,
      "err_msg": "conversion from ‘char’ to non-scalar type ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ requested"
    },
    {
      "mod_line": [
        3,
        9,
        6,
        14
      ],
      "mod_code": [
        "string all_present = ' 1 ' ;",
        "cdays = max ( cdays , count ) ;",
        "string n ;",
        "cout << cdays ;"
      ],
      "err_line": 3,
      "err_msg": "conversion from ‘char’ to non-scalar type ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ requested"
    },
    {
      "mod_line": [
        3,
        9,
        14
      ],
      "mod_code": [
        "string all_present = ' 1 ' ;",
        "cdays = max ( cdays , count ) ;",
        "cout << cdays ;"
      ],
      "err_line": 3,
      "err_msg": "conversion from ‘char’ to non-scalar type ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ requested"
    },
    {
      "mod_line": [
        3,
        6
      ],
      "mod_code": [
        "string all_present = ' 1 ' ;",
        "string n ;"
      ],
      "err_line": 3,
      "err_msg": "conversion from ‘char’ to non-scalar type ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ requested"
    },
    {
      "mod_line": [
        3,
        6,
        14
      ],
      "mod_code": [
        "string all_present = ' 1 ' ;",
        "string n ;",
        "cout << cdays ;"
      ],
      "err_line": 3,
      "err_msg": "conversion from ‘char’ to non-scalar type ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ requested"
    },
    {
      "mod_line": [
        3,
        14
      ],
      "mod_code": [
        "string all_present = ' 1 ' ;",
        "cout << cdays ;"
      ],
      "err_line": 3,
      "err_msg": "conversion from ‘char’ to non-scalar type ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ requested"
    },
    {
      "mod_line": [
        8,
        9
      ],
      "mod_code": [
        "if ( day == ' all_present ' )",
        "cdays = max ( cdays , count ) ;"
      ],
      "err_line": 8,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        8,
        9,
        6
      ],
      "mod_code": [
        "if ( day == ' all_present ' )",
        "cdays = max ( cdays , count ) ;",
        "string n ;"
      ],
      "err_line": 7,
      "err_msg": "‘day’ was not declared in this scope"
    },
    {
      "mod_line": [
        8,
        9,
        6,
        14
      ],
      "mod_code": [
        "if ( day == ' all_present ' )",
        "cdays = max ( cdays , count ) ;",
        "string n ;",
        "cout << cdays ;"
      ],
      "err_line": 7,
      "err_msg": "‘day’ was not declared in this scope"
    },
    {
      "mod_line": [
        8,
        9,
        6,
        3
      ],
      "mod_code": [
        "if ( day == ' all_present ' )",
        "cdays = max ( cdays , count ) ;",
        "string n ;",
        "string all_present = ' 1 ' , all_present = ' 1 ' ;"
      ],
      "err_line": 3,
      "err_msg": "conversion from ‘char’ to non-scalar type ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ requested"
    },
    {
      "mod_line": [
        8,
        9,
        14
      ],
      "mod_code": [
        "if ( day == ' all_present ' )",
        "cdays = max ( cdays , count ) ;",
        "cout << cdays ;"
      ],
      "err_line": 8,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        8,
        9,
        14,
        3
      ],
      "mod_code": [
        "if ( day == ' all_present ' )",
        "cdays = max ( cdays , count ) ;",
        "cout << cdays ;",
        "string all_present = ' 1 ' , all_present = ' 1 ' ;"
      ],
      "err_line": 3,
      "err_msg": "conversion from ‘char’ to non-scalar type ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ requested"
    },
    {
      "mod_line": [
        8,
        9,
        3
      ],
      "mod_code": [
        "if ( day == ' all_present ' )",
        "cdays = max ( cdays , count ) ;",
        "string all_present = ' 1 ' , all_present = ' 1 ' ;"
      ],
      "err_line": 3,
      "err_msg": "conversion from ‘char’ to non-scalar type ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ requested"
    },
    {
      "mod_line": [
        8,
        6
      ],
      "mod_code": [
        "if ( day == ' all_present ' )",
        "string n ;"
      ],
      "err_line": 7,
      "err_msg": "‘day’ was not declared in this scope"
    },
    {
      "mod_line": [
        8,
        6,
        14
      ],
      "mod_code": [
        "if ( day == ' all_present ' )",
        "string n ;",
        "cout << cdays ;"
      ],
      "err_line": 7,
      "err_msg": "‘day’ was not declared in this scope"
    },
    {
      "mod_line": [
        8,
        6,
        14,
        3
      ],
      "mod_code": [
        "if ( day == ' all_present ' )",
        "string n ;",
        "cout << cdays ;",
        "string all_present = ' 1 ' , all_present = ' 1 ' ;"
      ],
      "err_line": 3,
      "err_msg": "conversion from ‘char’ to non-scalar type ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ requested"
    },
    {
      "mod_line": [
        8,
        6,
        3
      ],
      "mod_code": [
        "if ( day == ' all_present ' )",
        "string n ;",
        "string all_present = ' 1 ' , all_present = ' 1 ' ;"
      ],
      "err_line": 3,
      "err_msg": "conversion from ‘char’ to non-scalar type ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ requested"
    },
    {
      "mod_line": [
        8,
        14
      ],
      "mod_code": [
        "if ( day == ' all_present ' )",
        "cout << cdays ;"
      ],
      "err_line": 8,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        8,
        14,
        3
      ],
      "mod_code": [
        "if ( day == ' all_present ' )",
        "cout << cdays ;",
        "string all_present = ' 1 ' , all_present = ' 1 ' ;"
      ],
      "err_line": 3,
      "err_msg": "conversion from ‘char’ to non-scalar type ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ requested"
    },
    {
      "mod_line": [
        8,
        3
      ],
      "mod_code": [
        "if ( day == ' all_present ' )",
        "string all_present = ' 1 ' , all_present = ' 1 ' ;"
      ],
      "err_line": 3,
      "err_msg": "conversion from ‘char’ to non-scalar type ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ requested"
    },
    {
      "mod_line": [
        9,
        6
      ],
      "mod_code": [
        "cdays = max ( cdays , count ) ;",
        "string n ;"
      ],
      "err_line": 7,
      "err_msg": "‘day’ was not declared in this scope"
    },
    {
      "mod_line": [
        9,
        6,
        14
      ],
      "mod_code": [
        "cdays = max ( cdays , count ) ;",
        "string n ;",
        "cout << cdays ;"
      ],
      "err_line": 7,
      "err_msg": "‘day’ was not declared in this scope"
    },
    {
      "mod_line": [
        9,
        6,
        14,
        3
      ],
      "mod_code": [
        "cdays = max ( cdays , count ) ;",
        "string n ;",
        "cout << cdays ;",
        "string all_present = ' 1 ' , all_present = ' 1 ' ;"
      ],
      "err_line": 3,
      "err_msg": "conversion from ‘char’ to non-scalar type ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ requested"
    },
    {
      "mod_line": [
        9,
        6,
        3
      ],
      "mod_code": [
        "cdays = max ( cdays , count ) ;",
        "string n ;",
        "string all_present = ' 1 ' , all_present = ' 1 ' ;"
      ],
      "err_line": 3,
      "err_msg": "conversion from ‘char’ to non-scalar type ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ requested"
    },
    {
      "mod_line": [
        9,
        14,
        3
      ],
      "mod_code": [
        "cdays = max ( cdays , count ) ;",
        "cout << cdays ;",
        "string all_present = ' 1 ' , all_present = ' 1 ' ;"
      ],
      "err_line": 3,
      "err_msg": "conversion from ‘char’ to non-scalar type ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ requested"
    },
    {
      "mod_line": [
        9,
        3
      ],
      "mod_code": [
        "cdays = max ( cdays , count ) ;",
        "string all_present = ' 1 ' , all_present = ' 1 ' ;"
      ],
      "err_line": 3,
      "err_msg": "conversion from ‘char’ to non-scalar type ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ requested"
    },
    {
      "mod_line": [
        6,
        14
      ],
      "mod_code": [
        "string n ;",
        "cout << cdays ;"
      ],
      "err_line": 7,
      "err_msg": "‘day’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        14,
        3
      ],
      "mod_code": [
        "string n ;",
        "cout << cdays ;",
        "string all_present = ' 1 ' , all_present = ' 1 ' ;"
      ],
      "err_line": 3,
      "err_msg": "conversion from ‘char’ to non-scalar type ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ requested"
    },
    {
      "mod_line": [
        6,
        3
      ],
      "mod_code": [
        "string n ;",
        "string all_present = ' 1 ' , all_present = ' 1 ' ;"
      ],
      "err_line": 3,
      "err_msg": "conversion from ‘char’ to non-scalar type ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ requested"
    },
    {
      "mod_line": [
        14,
        3
      ],
      "mod_code": [
        "cout << cdays ;",
        "string all_present = ' 1 ' , all_present = ' 1 ' ;"
      ],
      "err_line": 3,
      "err_msg": "conversion from ‘char’ to non-scalar type ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ requested"
    }
  ]
}