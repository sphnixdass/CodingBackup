{
  "meta": {
    "index": 805,
    "hitid": "335HHSX8CDZALP641OASCR620M5HDK",
    "workerid": "A1AYVATMT88U1W",
    "probid": "455A",
    "subid": "48797144"
  },
  "lines": [
    {
      "line": 0,
      "text": "let a = array of long integers of length 100005",
      "code": "long long a [ 100005 ] ;",
      "indent": 0
    },
    {
      "line": 1,
      "text": "let dp = array of long integers of length 100005",
      "code": "long long dp [ 100005 ] ;",
      "indent": 0
    },
    {
      "line": 2,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 3,
      "text": "let n be a integer",
      "code": "int n ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "read n",
      "code": "cin >> n ;",
      "indent": 1
    },
    {
      "line": 5,
      "text": "for ( integer i = 0 to n exclusive ) , read ith element from array a",
      "code": "for ( int i = 0 ; i < n ; i ++ ) { cin >> a [ i ] ; }",
      "indent": 1
    },
    {
      "line": 6,
      "text": "sort the values a , a + n",
      "code": "sort ( a , a + n ) ;",
      "indent": 1
    },
    {
      "line": 7,
      "text": "let cnt be a integer with value 1",
      "code": "int cnt = 1 ;",
      "indent": 1
    },
    {
      "line": 8,
      "text": "0th element in array dp is equal to 0th element in array a",
      "code": "dp [ 0 ] = a [ 0 ] ;",
      "indent": 1
    },
    {
      "line": 9,
      "text": "for i = 0 to n exclusive",
      "code": "for ( int i = 0 ; i < n ; i ++ )",
      "indent": 1
    },
    {
      "line": 10,
      "text": "let ele be a integer with value as a [ i ] - 1",
      "code": "int ele = a [ i ] - 1 ;",
      "indent": 2
    },
    {
      "line": 11,
      "text": "if ( ith element of array a is equal to [ i - 1 ] th element in array a )",
      "code": "if ( a [ i ] == a [ i - 1 ] )",
      "indent": 2
    },
    {
      "line": 12,
      "text": "increase cnt value by 1",
      "code": "cnt ++ ;",
      "indent": 3
    },
    {
      "line": 13,
      "text": "else do the following",
      "code": "else",
      "indent": 2
    },
    {
      "line": 14,
      "text": "cnt value is initialized to 1",
      "code": "cnt = 1 ;",
      "indent": 3
    },
    {
      "line": 15,
      "text": "let p be a integer with value as p = lower_bound ( a , a + n , ele ) - a",
      "code": "int p = lower_bound ( a , a + n , ele ) - a ;",
      "indent": 2
    },
    {
      "line": 16,
      "text": "[ i + 1 ] th element in array dp is equal to ith element in array dp",
      "code": "dp [ i + 1 ] = dp [ i ] ;",
      "indent": 2
    },
    {
      "line": 17,
      "text": "if ( p is not equal to 0 ) , { dp [ i + 1 ] is equal to maximum of ( dp [ i + 1 ] ) , dp [ p ] + cnt * a [ i ] )",
      "code": "if ( p != 0 ) { dp [ i + 1 ] = max ( dp [ i + 1 ] , dp [ p ] + cnt * a [ i ] ) ; }",
      "indent": 2
    },
    {
      "line": 18,
      "text": "[ i + 1 ] th element in array dp is equal to maximum of dp [ i + 1 ] , a [ i ] * cnt",
      "code": "dp [ i + 1 ] = max ( dp [ i + 1 ] , a [ i ] * cnt ) ;",
      "indent": 2
    },
    {
      "line": 19,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 20,
      "text": "print nth element in array dp and newline",
      "code": "cout << dp [ n ] << endl ;",
      "indent": 1
    },
    {
      "line": 21,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        8
      ],
      "mod_code": [
        "dp . resize ( a ) ;"
      ],
      "err_line": 8,
      "err_msg": "request for member ‘resize’ in ‘dp’, which is of non-class type ‘long long int [100005]’"
    },
    {
      "mod_line": [
        16
      ],
      "mod_code": [
        "( dp [ i ] [ 1 ] ) ;"
      ],
      "err_line": 16,
      "err_msg": "invalid types ‘long long int[int]’ for array subscript"
    },
    {
      "mod_line": [
        17
      ],
      "mod_code": [
        "if ( p != 0 ) { dp [ i + 1 ] = max ( dp [ i + 1 ] ) = dp [ p ] + cnt * a [ i ] ) ; }"
      ],
      "err_line": 17,
      "err_msg": "no matching function for call to ‘max(long long int&)’"
    },
    {
      "mod_line": [
        18
      ],
      "mod_code": [
        "int dp [ i + 1 ] [ 1 ] , dp [ i ] * cnt , a [ i ] * cnt ;"
      ],
      "err_line": 18,
      "err_msg": "expected initializer before ‘*’ token"
    },
    {
      "mod_line": [
        20
      ],
      "mod_code": [
        "cout << dp [ i ] << endl ;"
      ],
      "err_line": 20,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        6
      ],
      "mod_code": [
        "sort ( a , b + n ) ;"
      ],
      "err_line": 6,
      "err_msg": "‘b’ was not declared in this scope"
    },
    {
      "mod_line": [
        8
      ],
      "mod_code": [
        "dp . 0th ( a , a + n ) ;"
      ],
      "err_line": 8,
      "err_msg": "invalid suffix \"th\" on integer constant"
    },
    {
      "mod_line": [
        9
      ],
      "mod_code": [
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 9,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        14
      ],
      "mod_code": [
        "cnt = 1 = 1 ;"
      ],
      "err_line": 14,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        15
      ],
      "mod_code": [
        "int p = lower_bound ( a , a + n , ele ) - ' a ' ;"
      ],
      "err_line": 15,
      "err_msg": "invalid conversion from ‘long long int*’ to ‘int’ [-fpermissive]"
    },
    {
      "mod_line": [
        16
      ],
      "mod_code": [
        "[ i + 1 ] = dp [ i + 1 ] ;"
      ],
      "err_line": 16,
      "err_msg": "expected ‘,’ before ‘+’ token"
    },
    {
      "mod_line": [
        17
      ],
      "mod_code": [
        "if ( p != 0 ) { dp [ i + 1 ] = max ( dp [ i + 1 ] ) , dp [ p ] + cnt * a [ i ] ) ; }"
      ],
      "err_line": 17,
      "err_msg": "no matching function for call to ‘max(long long int&)’"
    },
    {
      "mod_line": [
        18
      ],
      "mod_code": [
        "( dp [ i ] [ 1 ] , a [ i ] * 1 ] , a [ i ] * cnt ) ;"
      ],
      "err_line": 18,
      "err_msg": "invalid types ‘long long int[int]’ for array subscript"
    },
    {
      "mod_line": [
        8,
        16
      ],
      "mod_code": [
        "dp . resize ( a ) ;",
        "( dp [ i ] [ 1 ] ) ;"
      ],
      "err_line": 8,
      "err_msg": "request for member ‘resize’ in ‘dp’, which is of non-class type ‘long long int [100005]’"
    },
    {
      "mod_line": [
        8,
        16,
        17
      ],
      "mod_code": [
        "dp . resize ( a ) ;",
        "( dp [ i ] [ 1 ] ) ;",
        "if ( p != 0 ) { dp [ i + 1 ] = max ( dp [ i + 1 ] ) = dp [ p ] + cnt * a [ i ] ) ; }"
      ],
      "err_line": 8,
      "err_msg": "request for member ‘resize’ in ‘dp’, which is of non-class type ‘long long int [100005]’"
    },
    {
      "mod_line": [
        8,
        16,
        17,
        18
      ],
      "mod_code": [
        "dp . resize ( a ) ;",
        "( dp [ i ] [ 1 ] ) ;",
        "if ( p != 0 ) { dp [ i + 1 ] = max ( dp [ i + 1 ] ) = dp [ p ] + cnt * a [ i ] ) ; }",
        "int dp [ i + 1 ] [ 1 ] , dp [ i ] * cnt , a [ i ] * cnt ;"
      ],
      "err_line": 8,
      "err_msg": "request for member ‘resize’ in ‘dp’, which is of non-class type ‘long long int [100005]’"
    },
    {
      "mod_line": [
        8,
        16,
        17,
        20
      ],
      "mod_code": [
        "dp . resize ( a ) ;",
        "( dp [ i ] [ 1 ] ) ;",
        "if ( p != 0 ) { dp [ i + 1 ] = max ( dp [ i + 1 ] ) = dp [ p ] + cnt * a [ i ] ) ; }",
        "cout << dp [ i ] << endl ;"
      ],
      "err_line": 8,
      "err_msg": "request for member ‘resize’ in ‘dp’, which is of non-class type ‘long long int [100005]’"
    },
    {
      "mod_line": [
        8,
        16,
        17,
        18
      ],
      "mod_code": [
        "dp . resize ( a ) ;",
        "( dp [ i ] [ 1 ] ) ;",
        "if ( p != 0 ) { dp [ i + 1 ] = max ( dp [ i + 1 ] ) = dp [ p ] + cnt * a [ i ] ) ; }",
        "( dp [ i ] [ 1 ] , a [ i ] * 1 ] , a [ i ] * cnt ) ;"
      ],
      "err_line": 8,
      "err_msg": "request for member ‘resize’ in ‘dp’, which is of non-class type ‘long long int [100005]’"
    },
    {
      "mod_line": [
        8,
        16,
        18
      ],
      "mod_code": [
        "dp . resize ( a ) ;",
        "( dp [ i ] [ 1 ] ) ;",
        "int dp [ i + 1 ] [ 1 ] , dp [ i ] * cnt , a [ i ] * cnt ;"
      ],
      "err_line": 8,
      "err_msg": "request for member ‘resize’ in ‘dp’, which is of non-class type ‘long long int [100005]’"
    },
    {
      "mod_line": [
        8,
        16,
        18,
        20
      ],
      "mod_code": [
        "dp . resize ( a ) ;",
        "( dp [ i ] [ 1 ] ) ;",
        "int dp [ i + 1 ] [ 1 ] , dp [ i ] * cnt , a [ i ] * cnt ;",
        "cout << dp [ i ] << endl ;"
      ],
      "err_line": 8,
      "err_msg": "request for member ‘resize’ in ‘dp’, which is of non-class type ‘long long int [100005]’"
    },
    {
      "mod_line": [
        8,
        16,
        20
      ],
      "mod_code": [
        "dp . resize ( a ) ;",
        "( dp [ i ] [ 1 ] ) ;",
        "cout << dp [ i ] << endl ;"
      ],
      "err_line": 8,
      "err_msg": "request for member ‘resize’ in ‘dp’, which is of non-class type ‘long long int [100005]’"
    },
    {
      "mod_line": [
        8,
        16,
        20,
        18
      ],
      "mod_code": [
        "dp . resize ( a ) ;",
        "( dp [ i ] [ 1 ] ) ;",
        "cout << dp [ i ] << endl ;",
        "( dp [ i ] [ 1 ] , a [ i ] * 1 ] , a [ i ] * cnt ) ;"
      ],
      "err_line": 8,
      "err_msg": "request for member ‘resize’ in ‘dp’, which is of non-class type ‘long long int [100005]’"
    },
    {
      "mod_line": [
        8,
        16,
        18
      ],
      "mod_code": [
        "dp . resize ( a ) ;",
        "( dp [ i ] [ 1 ] ) ;",
        "( dp [ i ] [ 1 ] , a [ i ] * 1 ] , a [ i ] * cnt ) ;"
      ],
      "err_line": 8,
      "err_msg": "request for member ‘resize’ in ‘dp’, which is of non-class type ‘long long int [100005]’"
    },
    {
      "mod_line": [
        8,
        17
      ],
      "mod_code": [
        "dp . resize ( a ) ;",
        "if ( p != 0 ) { dp [ i + 1 ] = max ( dp [ i + 1 ] ) = dp [ p ] + cnt * a [ i ] ) ; }"
      ],
      "err_line": 8,
      "err_msg": "request for member ‘resize’ in ‘dp’, which is of non-class type ‘long long int [100005]’"
    },
    {
      "mod_line": [
        8,
        17,
        18
      ],
      "mod_code": [
        "dp . resize ( a ) ;",
        "if ( p != 0 ) { dp [ i + 1 ] = max ( dp [ i + 1 ] ) = dp [ p ] + cnt * a [ i ] ) ; }",
        "int dp [ i + 1 ] [ 1 ] , dp [ i ] * cnt , a [ i ] * cnt ;"
      ],
      "err_line": 8,
      "err_msg": "request for member ‘resize’ in ‘dp’, which is of non-class type ‘long long int [100005]’"
    },
    {
      "mod_line": [
        8,
        17,
        18,
        20
      ],
      "mod_code": [
        "dp . resize ( a ) ;",
        "if ( p != 0 ) { dp [ i + 1 ] = max ( dp [ i + 1 ] ) = dp [ p ] + cnt * a [ i ] ) ; }",
        "int dp [ i + 1 ] [ 1 ] , dp [ i ] * cnt , a [ i ] * cnt ;",
        "cout << dp [ i ] << endl ;"
      ],
      "err_line": 8,
      "err_msg": "request for member ‘resize’ in ‘dp’, which is of non-class type ‘long long int [100005]’"
    },
    {
      "mod_line": [
        8,
        17,
        20
      ],
      "mod_code": [
        "dp . resize ( a ) ;",
        "if ( p != 0 ) { dp [ i + 1 ] = max ( dp [ i + 1 ] ) = dp [ p ] + cnt * a [ i ] ) ; }",
        "cout << dp [ i ] << endl ;"
      ],
      "err_line": 8,
      "err_msg": "request for member ‘resize’ in ‘dp’, which is of non-class type ‘long long int [100005]’"
    },
    {
      "mod_line": [
        8,
        17,
        20,
        18
      ],
      "mod_code": [
        "dp . resize ( a ) ;",
        "if ( p != 0 ) { dp [ i + 1 ] = max ( dp [ i + 1 ] ) = dp [ p ] + cnt * a [ i ] ) ; }",
        "cout << dp [ i ] << endl ;",
        "( dp [ i ] [ 1 ] , a [ i ] * 1 ] , a [ i ] * cnt ) ;"
      ],
      "err_line": 8,
      "err_msg": "request for member ‘resize’ in ‘dp’, which is of non-class type ‘long long int [100005]’"
    },
    {
      "mod_line": [
        8,
        17,
        18
      ],
      "mod_code": [
        "dp . resize ( a ) ;",
        "if ( p != 0 ) { dp [ i + 1 ] = max ( dp [ i + 1 ] ) = dp [ p ] + cnt * a [ i ] ) ; }",
        "( dp [ i ] [ 1 ] , a [ i ] * 1 ] , a [ i ] * cnt ) ;"
      ],
      "err_line": 8,
      "err_msg": "request for member ‘resize’ in ‘dp’, which is of non-class type ‘long long int [100005]’"
    },
    {
      "mod_line": [
        8,
        18
      ],
      "mod_code": [
        "dp . resize ( a ) ;",
        "int dp [ i + 1 ] [ 1 ] , dp [ i ] * cnt , a [ i ] * cnt ;"
      ],
      "err_line": 8,
      "err_msg": "request for member ‘resize’ in ‘dp’, which is of non-class type ‘long long int [100005]’"
    },
    {
      "mod_line": [
        8,
        18,
        20
      ],
      "mod_code": [
        "dp . resize ( a ) ;",
        "int dp [ i + 1 ] [ 1 ] , dp [ i ] * cnt , a [ i ] * cnt ;",
        "cout << dp [ i ] << endl ;"
      ],
      "err_line": 8,
      "err_msg": "request for member ‘resize’ in ‘dp’, which is of non-class type ‘long long int [100005]’"
    },
    {
      "mod_line": [
        8,
        20
      ],
      "mod_code": [
        "dp . resize ( a ) ;",
        "cout << dp [ i ] << endl ;"
      ],
      "err_line": 8,
      "err_msg": "request for member ‘resize’ in ‘dp’, which is of non-class type ‘long long int [100005]’"
    },
    {
      "mod_line": [
        8,
        20,
        18
      ],
      "mod_code": [
        "dp . resize ( a ) ;",
        "cout << dp [ i ] << endl ;",
        "( dp [ i ] [ 1 ] , a [ i ] * 1 ] , a [ i ] * cnt ) ;"
      ],
      "err_line": 8,
      "err_msg": "request for member ‘resize’ in ‘dp’, which is of non-class type ‘long long int [100005]’"
    },
    {
      "mod_line": [
        8,
        18
      ],
      "mod_code": [
        "dp . resize ( a ) ;",
        "( dp [ i ] [ 1 ] , a [ i ] * 1 ] , a [ i ] * cnt ) ;"
      ],
      "err_line": 8,
      "err_msg": "request for member ‘resize’ in ‘dp’, which is of non-class type ‘long long int [100005]’"
    },
    {
      "mod_line": [
        16,
        17
      ],
      "mod_code": [
        "( dp [ i ] [ 1 ] ) ;",
        "if ( p != 0 ) { dp [ i + 1 ] = max ( dp [ i + 1 ] ) = dp [ p ] + cnt * a [ i ] ) ; }"
      ],
      "err_line": 16,
      "err_msg": "invalid types ‘long long int[int]’ for array subscript"
    },
    {
      "mod_line": [
        16,
        17,
        18
      ],
      "mod_code": [
        "( dp [ i ] [ 1 ] ) ;",
        "if ( p != 0 ) { dp [ i + 1 ] = max ( dp [ i + 1 ] ) = dp [ p ] + cnt * a [ i ] ) ; }",
        "int dp [ i + 1 ] [ 1 ] , dp [ i ] * cnt , a [ i ] * cnt ;"
      ],
      "err_line": 16,
      "err_msg": "invalid types ‘long long int[int]’ for array subscript"
    },
    {
      "mod_line": [
        16,
        17,
        18,
        20
      ],
      "mod_code": [
        "( dp [ i ] [ 1 ] ) ;",
        "if ( p != 0 ) { dp [ i + 1 ] = max ( dp [ i + 1 ] ) = dp [ p ] + cnt * a [ i ] ) ; }",
        "int dp [ i + 1 ] [ 1 ] , dp [ i ] * cnt , a [ i ] * cnt ;",
        "cout << dp [ i ] << endl ;"
      ],
      "err_line": 16,
      "err_msg": "invalid types ‘long long int[int]’ for array subscript"
    },
    {
      "mod_line": [
        16,
        17,
        20
      ],
      "mod_code": [
        "( dp [ i ] [ 1 ] ) ;",
        "if ( p != 0 ) { dp [ i + 1 ] = max ( dp [ i + 1 ] ) = dp [ p ] + cnt * a [ i ] ) ; }",
        "cout << dp [ i ] << endl ;"
      ],
      "err_line": 16,
      "err_msg": "invalid types ‘long long int[int]’ for array subscript"
    },
    {
      "mod_line": [
        16,
        17,
        20,
        18
      ],
      "mod_code": [
        "( dp [ i ] [ 1 ] ) ;",
        "if ( p != 0 ) { dp [ i + 1 ] = max ( dp [ i + 1 ] ) = dp [ p ] + cnt * a [ i ] ) ; }",
        "cout << dp [ i ] << endl ;",
        "( dp [ i ] [ 1 ] , a [ i ] * 1 ] , a [ i ] * cnt ) ;"
      ],
      "err_line": 16,
      "err_msg": "invalid types ‘long long int[int]’ for array subscript"
    },
    {
      "mod_line": [
        16,
        17,
        18
      ],
      "mod_code": [
        "( dp [ i ] [ 1 ] ) ;",
        "if ( p != 0 ) { dp [ i + 1 ] = max ( dp [ i + 1 ] ) = dp [ p ] + cnt * a [ i ] ) ; }",
        "( dp [ i ] [ 1 ] , a [ i ] * 1 ] , a [ i ] * cnt ) ;"
      ],
      "err_line": 16,
      "err_msg": "invalid types ‘long long int[int]’ for array subscript"
    },
    {
      "mod_line": [
        16,
        18
      ],
      "mod_code": [
        "( dp [ i ] [ 1 ] ) ;",
        "int dp [ i + 1 ] [ 1 ] , dp [ i ] * cnt , a [ i ] * cnt ;"
      ],
      "err_line": 16,
      "err_msg": "invalid types ‘long long int[int]’ for array subscript"
    },
    {
      "mod_line": [
        16,
        18,
        20
      ],
      "mod_code": [
        "( dp [ i ] [ 1 ] ) ;",
        "int dp [ i + 1 ] [ 1 ] , dp [ i ] * cnt , a [ i ] * cnt ;",
        "cout << dp [ i ] << endl ;"
      ],
      "err_line": 16,
      "err_msg": "invalid types ‘long long int[int]’ for array subscript"
    },
    {
      "mod_line": [
        16,
        20
      ],
      "mod_code": [
        "( dp [ i ] [ 1 ] ) ;",
        "cout << dp [ i ] << endl ;"
      ],
      "err_line": 16,
      "err_msg": "invalid types ‘long long int[int]’ for array subscript"
    },
    {
      "mod_line": [
        16,
        20,
        18
      ],
      "mod_code": [
        "( dp [ i ] [ 1 ] ) ;",
        "cout << dp [ i ] << endl ;",
        "( dp [ i ] [ 1 ] , a [ i ] * 1 ] , a [ i ] * cnt ) ;"
      ],
      "err_line": 16,
      "err_msg": "invalid types ‘long long int[int]’ for array subscript"
    },
    {
      "mod_line": [
        16,
        18
      ],
      "mod_code": [
        "( dp [ i ] [ 1 ] ) ;",
        "( dp [ i ] [ 1 ] , a [ i ] * 1 ] , a [ i ] * cnt ) ;"
      ],
      "err_line": 16,
      "err_msg": "invalid types ‘long long int[int]’ for array subscript"
    },
    {
      "mod_line": [
        17,
        18
      ],
      "mod_code": [
        "if ( p != 0 ) { dp [ i + 1 ] = max ( dp [ i + 1 ] ) = dp [ p ] + cnt * a [ i ] ) ; }",
        "int dp [ i + 1 ] [ 1 ] , dp [ i ] * cnt , a [ i ] * cnt ;"
      ],
      "err_line": 17,
      "err_msg": "no matching function for call to ‘max(long long int&)’"
    },
    {
      "mod_line": [
        17,
        18,
        20
      ],
      "mod_code": [
        "if ( p != 0 ) { dp [ i + 1 ] = max ( dp [ i + 1 ] ) = dp [ p ] + cnt * a [ i ] ) ; }",
        "int dp [ i + 1 ] [ 1 ] , dp [ i ] * cnt , a [ i ] * cnt ;",
        "cout << dp [ i ] << endl ;"
      ],
      "err_line": 17,
      "err_msg": "no matching function for call to ‘max(long long int&)’"
    },
    {
      "mod_line": [
        17,
        20
      ],
      "mod_code": [
        "if ( p != 0 ) { dp [ i + 1 ] = max ( dp [ i + 1 ] ) = dp [ p ] + cnt * a [ i ] ) ; }",
        "cout << dp [ i ] << endl ;"
      ],
      "err_line": 17,
      "err_msg": "no matching function for call to ‘max(long long int&)’"
    },
    {
      "mod_line": [
        17,
        20,
        18
      ],
      "mod_code": [
        "if ( p != 0 ) { dp [ i + 1 ] = max ( dp [ i + 1 ] ) = dp [ p ] + cnt * a [ i ] ) ; }",
        "cout << dp [ i ] << endl ;",
        "( dp [ i ] [ 1 ] , a [ i ] * 1 ] , a [ i ] * cnt ) ;"
      ],
      "err_line": 17,
      "err_msg": "no matching function for call to ‘max(long long int&)’"
    },
    {
      "mod_line": [
        17,
        18
      ],
      "mod_code": [
        "if ( p != 0 ) { dp [ i + 1 ] = max ( dp [ i + 1 ] ) = dp [ p ] + cnt * a [ i ] ) ; }",
        "( dp [ i ] [ 1 ] , a [ i ] * 1 ] , a [ i ] * cnt ) ;"
      ],
      "err_line": 17,
      "err_msg": "no matching function for call to ‘max(long long int&)’"
    },
    {
      "mod_line": [
        18,
        20
      ],
      "mod_code": [
        "int dp [ i + 1 ] [ 1 ] , dp [ i ] * cnt , a [ i ] * cnt ;",
        "cout << dp [ i ] << endl ;"
      ],
      "err_line": 18,
      "err_msg": "expected initializer before ‘*’ token"
    },
    {
      "mod_line": [
        20,
        18
      ],
      "mod_code": [
        "cout << dp [ i ] << endl ;",
        "( dp [ i ] [ 1 ] , a [ i ] * 1 ] , a [ i ] * cnt ) ;"
      ],
      "err_line": 18,
      "err_msg": "invalid types ‘long long int[int]’ for array subscript"
    }
  ]
}