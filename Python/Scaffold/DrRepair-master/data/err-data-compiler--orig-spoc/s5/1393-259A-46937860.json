{
  "meta": {
    "index": 1393,
    "hitid": "30Y6N4AHYPQNAJK7XTMMQV88OI2DRN",
    "workerid": "A1AYVATMT88U1W",
    "probid": "259A",
    "subid": "46937860"
  },
  "lines": [
    {
      "line": 0,
      "text": "let N be a constant integer with N = 1e5 + 100",
      "code": "const int N = 1e5 + 100 ;",
      "indent": 0
    },
    {
      "line": 1,
      "text": "a = 2d array of characters with 8 rows and 8 columns respectively",
      "code": "char a [ 8 ] [ 8 ] ;",
      "indent": 0
    },
    {
      "line": 2,
      "text": "in the function check which is of boolean type",
      "code": "bool check ( )",
      "indent": 0
    },
    {
      "line": 3,
      "text": "for i = 0 to 7 exclusive",
      "code": "for ( int i = 0 ; i < 7 ; i ++ )",
      "indent": 1
    },
    {
      "line": 4,
      "text": "if a [ i ] [ 0 ] is equal to a [ i + 1 ] [ 0 ] , return false",
      "code": "if ( a [ i ] [ 0 ] == a [ i + 1 ] [ 0 ] ) return false ;",
      "indent": 2
    },
    {
      "line": 5,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 6,
      "text": "return true",
      "code": "return true ;",
      "indent": 1
    },
    {
      "line": 7,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    },
    {
      "line": 8,
      "text": "in the function num",
      "code": "int num ( )",
      "indent": 0
    },
    {
      "line": 9,
      "text": "for i = 0 to 7 exclusive",
      "code": "for ( int i = 0 ; i < 7 ; i ++ )",
      "indent": 1
    },
    {
      "line": 10,
      "text": "if a [ i ] [ 0 ] is equal to a [ i + 1 ] [ 0 ] , return the value of i + 1",
      "code": "if ( a [ i ] [ 0 ] == a [ i + 1 ] [ 0 ] ) return i + 1 ;",
      "indent": 2
    },
    {
      "line": 11,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 12,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    },
    {
      "line": 13,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 14,
      "text": "for i = 0 to 8 exclusive",
      "code": "for ( int i = 0 ; i < 8 ; i ++ )",
      "indent": 1
    },
    {
      "line": 15,
      "text": "for j = 0 to 8 exclusive , read a [ i ] [ j ]",
      "code": "for ( int j = 0 ; j < 8 ; j ++ ) { cin >> a [ i ] [ j ] ; }",
      "indent": 2
    },
    {
      "line": 16,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 17,
      "text": "for i = 0 to 8 exclusive",
      "code": "for ( int i = 0 ; i < 8 ; i ++ )",
      "indent": 1
    },
    {
      "line": 18,
      "text": "for j = 0 to 7 exclusive",
      "code": "for ( int j = 0 ; j < 7 ; j ++ )",
      "indent": 2
    },
    {
      "line": 19,
      "text": "if a [ i ] [ j ] is equal to a [ i ] [ j + 1 ]",
      "code": "if ( a [ i ] [ j ] == a [ i ] [ j + 1 ] )",
      "indent": 3
    },
    {
      "line": 20,
      "text": "print NO and newline",
      "code": "cout << \" NO \" << endl ;",
      "indent": 4
    },
    {
      "line": 21,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 4
    },
    {
      "line": 22,
      "text": "DUMMY",
      "code": "}",
      "indent": 3
    },
    {
      "line": 23,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 24,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 25,
      "text": "if check ( ) is true",
      "code": "if ( check ( ) )",
      "indent": 1
    },
    {
      "line": 26,
      "text": "print NO and newline",
      "code": "cout << \" NO \" << endl ;",
      "indent": 2
    },
    {
      "line": 27,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 2
    },
    {
      "line": 28,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 29,
      "text": "while not check ( )",
      "code": "while ( ! check ( ) )",
      "indent": 1
    },
    {
      "line": 30,
      "text": "let x be a integer with x = num ( )",
      "code": "int x = num ( ) ;",
      "indent": 2
    },
    {
      "line": 31,
      "text": "if a [ x ] [ 0 ] is equal to W",
      "code": "if ( a [ x ] [ 0 ] == ' W ' )",
      "indent": 2
    },
    {
      "line": 32,
      "text": "a [ x ] [ 0 ] is equal to B",
      "code": "a [ x ] [ 0 ] = ' B ' ;",
      "indent": 3
    },
    {
      "line": 33,
      "text": "a [ x ] [ 7 ] is equal to W",
      "code": "a [ x ] [ 7 ] = ' W ' ;",
      "indent": 3
    },
    {
      "line": 34,
      "text": "else do the following",
      "code": "else",
      "indent": 2
    },
    {
      "line": 35,
      "text": "a [ x ] [ 0 ] is equal to W",
      "code": "a [ x ] [ 0 ] = ' W ' ;",
      "indent": 3
    },
    {
      "line": 36,
      "text": "a [ x ] [ 7 ] is equal to B",
      "code": "a [ x ] [ 7 ] = ' B ' ;",
      "indent": 3
    },
    {
      "line": 37,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 38,
      "text": "if x is equal to 7 , stop",
      "code": "if ( x == 7 ) break ;",
      "indent": 2
    },
    {
      "line": 39,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 40,
      "text": "if check ( ) is true",
      "code": "if ( check ( ) )",
      "indent": 1
    },
    {
      "line": 41,
      "text": "print YES and new line",
      "code": "cout << \" YES \" << endl ;",
      "indent": 2
    },
    {
      "line": 42,
      "text": "else do the following",
      "code": "else",
      "indent": 1
    },
    {
      "line": 43,
      "text": "print NO and new line",
      "code": "cout << \" NO \" << endl ;",
      "indent": 2
    },
    {
      "line": 44,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 45,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        2
      ],
      "mod_code": [
        "bool check ( bool type )"
      ],
      "err_line": 25,
      "err_msg": "too few arguments to function ‘bool check(bool)’"
    },
    {
      "mod_line": [
        8
      ],
      "mod_code": [
        "void num ( )"
      ],
      "err_line": 10,
      "err_msg": "return-statement with a value, in function returning 'void' [-fpermissive]"
    },
    {
      "mod_line": [
        1
      ],
      "mod_code": [
        "char arr [ 8 ] [ 8 ] ;"
      ],
      "err_line": 4,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        2
      ],
      "mod_code": [
        "bool check ( bool x )"
      ],
      "err_line": 25,
      "err_msg": "too few arguments to function ‘bool check(bool)’"
    },
    {
      "mod_line": [
        3
      ],
      "mod_code": [
        "for ( i = 0 ; i < 7 ; i ++ )"
      ],
      "err_line": 3,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        8
      ],
      "mod_code": [
        "void num ( ) { }"
      ],
      "err_line": 9,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        9
      ],
      "mod_code": [
        "for ( i = 0 ; i < 7 ; i ++ )"
      ],
      "err_line": 9,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        14
      ],
      "mod_code": [
        "for ( i = 0 ; i < 8 ; i ++ )"
      ],
      "err_line": 14,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        17
      ],
      "mod_code": [
        "for ( i = 0 ; i < 8 ; i ++ )"
      ],
      "err_line": 17,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        18
      ],
      "mod_code": [
        "for ( j = 0 ; j < 7 ; j ++ )"
      ],
      "err_line": 18,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        30
      ],
      "mod_code": [
        "int x = num ;"
      ],
      "err_line": 30,
      "err_msg": "invalid conversion from ‘int (*)()’ to ‘int’ [-fpermissive]"
    },
    {
      "mod_line": [
        32
      ],
      "mod_code": [
        "a [ x ] [ j ] = ' B ' ;"
      ],
      "err_line": 32,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        36
      ],
      "mod_code": [
        "a [ x ] [ 7 ] = B ;"
      ],
      "err_line": 36,
      "err_msg": "‘B’ was not declared in this scope"
    },
    {
      "mod_line": [
        2,
        8
      ],
      "mod_code": [
        "bool check ( bool type )",
        "void num ( )"
      ],
      "err_line": 10,
      "err_msg": "return-statement with a value, in function returning 'void' [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        8,
        9
      ],
      "mod_code": [
        "bool check ( bool type )",
        "void num ( )",
        "for ( i = 0 ; i < 7 ; i ++ )"
      ],
      "err_line": 9,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        2,
        8,
        9,
        29
      ],
      "mod_code": [
        "bool check ( bool type )",
        "void num ( )",
        "for ( i = 0 ; i < 7 ; i ++ )",
        "while ( check ( ) )"
      ],
      "err_line": 9,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        2,
        8,
        9,
        31
      ],
      "mod_code": [
        "bool check ( bool type )",
        "void num ( )",
        "for ( i = 0 ; i < 7 ; i ++ )",
        "if ( a [ x ] [ 0 ] == ' \\0 ' )"
      ],
      "err_line": 9,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        2,
        8,
        9,
        36
      ],
      "mod_code": [
        "bool check ( bool type )",
        "void num ( )",
        "for ( i = 0 ; i < 7 ; i ++ )",
        "a [ x ] [ 7 ] = B ;"
      ],
      "err_line": 9,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        2,
        8,
        29
      ],
      "mod_code": [
        "bool check ( bool type )",
        "void num ( )",
        "while ( check ( ) )"
      ],
      "err_line": 10,
      "err_msg": "return-statement with a value, in function returning 'void' [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        8,
        29,
        31
      ],
      "mod_code": [
        "bool check ( bool type )",
        "void num ( )",
        "while ( check ( ) )",
        "if ( a [ x ] [ 0 ] == ' \\0 ' )"
      ],
      "err_line": 10,
      "err_msg": "return-statement with a value, in function returning 'void' [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        8,
        29,
        36
      ],
      "mod_code": [
        "bool check ( bool type )",
        "void num ( )",
        "while ( check ( ) )",
        "a [ x ] [ 7 ] = B ;"
      ],
      "err_line": 10,
      "err_msg": "return-statement with a value, in function returning 'void' [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        8,
        31
      ],
      "mod_code": [
        "bool check ( bool type )",
        "void num ( )",
        "if ( a [ x ] [ 0 ] == ' \\0 ' )"
      ],
      "err_line": 10,
      "err_msg": "return-statement with a value, in function returning 'void' [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        8,
        31,
        36
      ],
      "mod_code": [
        "bool check ( bool type )",
        "void num ( )",
        "if ( a [ x ] [ 0 ] == ' \\0 ' )",
        "a [ x ] [ 7 ] = B ;"
      ],
      "err_line": 10,
      "err_msg": "return-statement with a value, in function returning 'void' [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        8,
        36
      ],
      "mod_code": [
        "bool check ( bool type )",
        "void num ( )",
        "a [ x ] [ 7 ] = B ;"
      ],
      "err_line": 10,
      "err_msg": "return-statement with a value, in function returning 'void' [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        9
      ],
      "mod_code": [
        "bool check ( bool type )",
        "for ( i = 0 ; i < 7 ; i ++ )"
      ],
      "err_line": 9,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        2,
        9,
        29
      ],
      "mod_code": [
        "bool check ( bool type )",
        "for ( i = 0 ; i < 7 ; i ++ )",
        "while ( check ( ) )"
      ],
      "err_line": 9,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        2,
        9,
        29,
        31
      ],
      "mod_code": [
        "bool check ( bool type )",
        "for ( i = 0 ; i < 7 ; i ++ )",
        "while ( check ( ) )",
        "if ( a [ x ] [ 0 ] == ' \\0 ' )"
      ],
      "err_line": 9,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        2,
        9,
        29,
        36
      ],
      "mod_code": [
        "bool check ( bool type )",
        "for ( i = 0 ; i < 7 ; i ++ )",
        "while ( check ( ) )",
        "a [ x ] [ 7 ] = B ;"
      ],
      "err_line": 9,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        2,
        9,
        31
      ],
      "mod_code": [
        "bool check ( bool type )",
        "for ( i = 0 ; i < 7 ; i ++ )",
        "if ( a [ x ] [ 0 ] == ' \\0 ' )"
      ],
      "err_line": 9,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        2,
        9,
        31,
        36
      ],
      "mod_code": [
        "bool check ( bool type )",
        "for ( i = 0 ; i < 7 ; i ++ )",
        "if ( a [ x ] [ 0 ] == ' \\0 ' )",
        "a [ x ] [ 7 ] = B ;"
      ],
      "err_line": 9,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        2,
        9,
        36
      ],
      "mod_code": [
        "bool check ( bool type )",
        "for ( i = 0 ; i < 7 ; i ++ )",
        "a [ x ] [ 7 ] = B ;"
      ],
      "err_line": 9,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        2,
        29
      ],
      "mod_code": [
        "bool check ( bool type )",
        "while ( check ( ) )"
      ],
      "err_line": 25,
      "err_msg": "too few arguments to function ‘bool check(bool)’"
    },
    {
      "mod_line": [
        2,
        29,
        31
      ],
      "mod_code": [
        "bool check ( bool type )",
        "while ( check ( ) )",
        "if ( a [ x ] [ 0 ] == ' \\0 ' )"
      ],
      "err_line": 25,
      "err_msg": "too few arguments to function ‘bool check(bool)’"
    },
    {
      "mod_line": [
        2,
        29,
        31,
        36
      ],
      "mod_code": [
        "bool check ( bool type )",
        "while ( check ( ) )",
        "if ( a [ x ] [ 0 ] == ' \\0 ' )",
        "a [ x ] [ 7 ] = B ;"
      ],
      "err_line": 25,
      "err_msg": "too few arguments to function ‘bool check(bool)’"
    },
    {
      "mod_line": [
        2,
        29,
        36
      ],
      "mod_code": [
        "bool check ( bool type )",
        "while ( check ( ) )",
        "a [ x ] [ 7 ] = B ;"
      ],
      "err_line": 25,
      "err_msg": "too few arguments to function ‘bool check(bool)’"
    },
    {
      "mod_line": [
        2,
        31
      ],
      "mod_code": [
        "bool check ( bool type )",
        "if ( a [ x ] [ 0 ] == ' \\0 ' )"
      ],
      "err_line": 25,
      "err_msg": "too few arguments to function ‘bool check(bool)’"
    },
    {
      "mod_line": [
        2,
        31,
        36
      ],
      "mod_code": [
        "bool check ( bool type )",
        "if ( a [ x ] [ 0 ] == ' \\0 ' )",
        "a [ x ] [ 7 ] = B ;"
      ],
      "err_line": 25,
      "err_msg": "too few arguments to function ‘bool check(bool)’"
    },
    {
      "mod_line": [
        2,
        36
      ],
      "mod_code": [
        "bool check ( bool type )",
        "a [ x ] [ 7 ] = B ;"
      ],
      "err_line": 25,
      "err_msg": "too few arguments to function ‘bool check(bool)’"
    },
    {
      "mod_line": [
        8,
        9
      ],
      "mod_code": [
        "void num ( )",
        "for ( i = 0 ; i < 7 ; i ++ )"
      ],
      "err_line": 9,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        8,
        9,
        29
      ],
      "mod_code": [
        "void num ( )",
        "for ( i = 0 ; i < 7 ; i ++ )",
        "while ( check ( ) )"
      ],
      "err_line": 9,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        8,
        9,
        29,
        31
      ],
      "mod_code": [
        "void num ( )",
        "for ( i = 0 ; i < 7 ; i ++ )",
        "while ( check ( ) )",
        "if ( a [ x ] [ 0 ] == ' \\0 ' )"
      ],
      "err_line": 9,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        8,
        9,
        29,
        36
      ],
      "mod_code": [
        "void num ( )",
        "for ( i = 0 ; i < 7 ; i ++ )",
        "while ( check ( ) )",
        "a [ x ] [ 7 ] = B ;"
      ],
      "err_line": 9,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        8,
        9,
        31
      ],
      "mod_code": [
        "void num ( )",
        "for ( i = 0 ; i < 7 ; i ++ )",
        "if ( a [ x ] [ 0 ] == ' \\0 ' )"
      ],
      "err_line": 9,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        8,
        9,
        31,
        36
      ],
      "mod_code": [
        "void num ( )",
        "for ( i = 0 ; i < 7 ; i ++ )",
        "if ( a [ x ] [ 0 ] == ' \\0 ' )",
        "a [ x ] [ 7 ] = B ;"
      ],
      "err_line": 9,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        8,
        9,
        36
      ],
      "mod_code": [
        "void num ( )",
        "for ( i = 0 ; i < 7 ; i ++ )",
        "a [ x ] [ 7 ] = B ;"
      ],
      "err_line": 9,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        8,
        29
      ],
      "mod_code": [
        "void num ( )",
        "while ( check ( ) )"
      ],
      "err_line": 10,
      "err_msg": "return-statement with a value, in function returning 'void' [-fpermissive]"
    },
    {
      "mod_line": [
        8,
        29,
        31
      ],
      "mod_code": [
        "void num ( )",
        "while ( check ( ) )",
        "if ( a [ x ] [ 0 ] == ' \\0 ' )"
      ],
      "err_line": 10,
      "err_msg": "return-statement with a value, in function returning 'void' [-fpermissive]"
    },
    {
      "mod_line": [
        8,
        29,
        31,
        36
      ],
      "mod_code": [
        "void num ( )",
        "while ( check ( ) )",
        "if ( a [ x ] [ 0 ] == ' \\0 ' )",
        "a [ x ] [ 7 ] = B ;"
      ],
      "err_line": 10,
      "err_msg": "return-statement with a value, in function returning 'void' [-fpermissive]"
    },
    {
      "mod_line": [
        8,
        29,
        36
      ],
      "mod_code": [
        "void num ( )",
        "while ( check ( ) )",
        "a [ x ] [ 7 ] = B ;"
      ],
      "err_line": 10,
      "err_msg": "return-statement with a value, in function returning 'void' [-fpermissive]"
    },
    {
      "mod_line": [
        8,
        31
      ],
      "mod_code": [
        "void num ( )",
        "if ( a [ x ] [ 0 ] == ' \\0 ' )"
      ],
      "err_line": 10,
      "err_msg": "return-statement with a value, in function returning 'void' [-fpermissive]"
    },
    {
      "mod_line": [
        8,
        31,
        36
      ],
      "mod_code": [
        "void num ( )",
        "if ( a [ x ] [ 0 ] == ' \\0 ' )",
        "a [ x ] [ 7 ] = B ;"
      ],
      "err_line": 10,
      "err_msg": "return-statement with a value, in function returning 'void' [-fpermissive]"
    },
    {
      "mod_line": [
        8,
        36
      ],
      "mod_code": [
        "void num ( )",
        "a [ x ] [ 7 ] = B ;"
      ],
      "err_line": 10,
      "err_msg": "return-statement with a value, in function returning 'void' [-fpermissive]"
    },
    {
      "mod_line": [
        9,
        29
      ],
      "mod_code": [
        "for ( i = 0 ; i < 7 ; i ++ )",
        "while ( check ( ) )"
      ],
      "err_line": 9,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        9,
        29,
        31
      ],
      "mod_code": [
        "for ( i = 0 ; i < 7 ; i ++ )",
        "while ( check ( ) )",
        "if ( a [ x ] [ 0 ] == ' \\0 ' )"
      ],
      "err_line": 9,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        9,
        29,
        31,
        36
      ],
      "mod_code": [
        "for ( i = 0 ; i < 7 ; i ++ )",
        "while ( check ( ) )",
        "if ( a [ x ] [ 0 ] == ' \\0 ' )",
        "a [ x ] [ 7 ] = B ;"
      ],
      "err_line": 9,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        9,
        29,
        36
      ],
      "mod_code": [
        "for ( i = 0 ; i < 7 ; i ++ )",
        "while ( check ( ) )",
        "a [ x ] [ 7 ] = B ;"
      ],
      "err_line": 9,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        9,
        31
      ],
      "mod_code": [
        "for ( i = 0 ; i < 7 ; i ++ )",
        "if ( a [ x ] [ 0 ] == ' \\0 ' )"
      ],
      "err_line": 9,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        9,
        31,
        36
      ],
      "mod_code": [
        "for ( i = 0 ; i < 7 ; i ++ )",
        "if ( a [ x ] [ 0 ] == ' \\0 ' )",
        "a [ x ] [ 7 ] = B ;"
      ],
      "err_line": 9,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        9,
        36
      ],
      "mod_code": [
        "for ( i = 0 ; i < 7 ; i ++ )",
        "a [ x ] [ 7 ] = B ;"
      ],
      "err_line": 9,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        29,
        31,
        36
      ],
      "mod_code": [
        "while ( check ( ) )",
        "if ( a [ x ] [ 0 ] == ' \\0 ' )",
        "a [ x ] [ 7 ] = B ;"
      ],
      "err_line": 36,
      "err_msg": "‘B’ was not declared in this scope"
    },
    {
      "mod_line": [
        29,
        36
      ],
      "mod_code": [
        "while ( check ( ) )",
        "a [ x ] [ 7 ] = B ;"
      ],
      "err_line": 36,
      "err_msg": "‘B’ was not declared in this scope"
    },
    {
      "mod_line": [
        31,
        36
      ],
      "mod_code": [
        "if ( a [ x ] [ 0 ] == ' \\0 ' )",
        "a [ x ] [ 7 ] = B ;"
      ],
      "err_line": 36,
      "err_msg": "‘B’ was not declared in this scope"
    }
  ]
}