{
  "meta": {
    "index": 2098,
    "hitid": "3PUV2Q8SV4Y0UC3I1W0WQG346WZDBA",
    "workerid": "AUD1I8FZAO4VF",
    "probid": "723A",
    "subid": "47842163"
  },
  "lines": [
    {
      "line": 0,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 1,
      "text": "let a be a vector of ints with initial size 3",
      "code": "vector < int > a ( 3 ) ;",
      "indent": 1
    },
    {
      "line": 2,
      "text": "for i = 0 to 3 exclusive read a [ i ]",
      "code": "for ( int i = 0 ; i < 3 ; i ++ ) cin >> a [ i ] ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "sort a",
      "code": "sort ( a . begin ( ) , a . end ( ) ) ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "print sum of a [ 1 ] - a [ 0 ] and a [ 2 ] - a [ 1 ] and newline",
      "code": "cout << ( a [ 1 ] - a [ 0 ] ) + ( a [ 2 ] - a [ 1 ] ) << \" \\n \" ;",
      "indent": 1
    },
    {
      "line": 5,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        3
      ],
      "mod_code": [
        "sort ( a , a + n ) ;"
      ],
      "err_line": 3,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        1
      ],
      "mod_code": [
        "vector < int > a [ 3 ] ;"
      ],
      "err_line": 2,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘std::vector<int>’)"
    },
    {
      "mod_line": [
        4
      ],
      "mod_code": [
        "cout << a [ 1 ] - a [ 0 ] >> a [ 2 ] - a [ 1 ] << endl ;"
      ],
      "err_line": 4,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::basic_ostream<char>’ and ‘int’)"
    },
    {
      "mod_line": [
        3,
        4
      ],
      "mod_code": [
        "sort ( a , a + n ) ;",
        "cout << a [ 1 ] - a [ 0 ] << a [ 2 ] - a [ 1 ] << endl ;"
      ],
      "err_line": 3,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        4,
        1
      ],
      "mod_code": [
        "sort ( a , a + n ) ;",
        "cout << a [ 1 ] - a [ 0 ] << a [ 2 ] - a [ 1 ] << endl ;",
        "vector < int > a [ 3 ] ;"
      ],
      "err_line": 2,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘std::vector<int>’)"
    },
    {
      "mod_line": [
        3,
        4
      ],
      "mod_code": [
        "sort ( a , a + n ) ;",
        "cout << a [ 1 ] - a [ 0 ] >> a [ 2 ] - a [ 1 ] << endl ;"
      ],
      "err_line": 3,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        4,
        1
      ],
      "mod_code": [
        "sort ( a , a + n ) ;",
        "cout << a [ 1 ] - a [ 0 ] >> a [ 2 ] - a [ 1 ] << endl ;",
        "vector < int > a [ 3 ] ;"
      ],
      "err_line": 2,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘std::vector<int>’)"
    },
    {
      "mod_line": [
        3,
        1
      ],
      "mod_code": [
        "sort ( a , a + n ) ;",
        "vector < int > a [ 3 ] ;"
      ],
      "err_line": 2,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘std::vector<int>’)"
    },
    {
      "mod_line": [
        4,
        1
      ],
      "mod_code": [
        "cout << a [ 1 ] - a [ 0 ] << a [ 2 ] - a [ 1 ] << endl ;",
        "vector < int > a [ 3 ] ;"
      ],
      "err_line": 2,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘std::vector<int>’)"
    },
    {
      "mod_line": [
        4,
        1
      ],
      "mod_code": [
        "cout << a [ 1 ] - a [ 0 ] >> a [ 2 ] - a [ 1 ] << endl ;",
        "vector < int > a [ 3 ] ;"
      ],
      "err_line": 2,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘std::vector<int>’)"
    }
  ]
}