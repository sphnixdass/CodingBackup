{
  "meta": {
    "index": 218,
    "hitid": "3LB1BGHFL2Q3O9SQXEEV3VJRTPPYT8",
    "workerid": "AIWEXPJAU66D9",
    "probid": "9A",
    "subid": "48770578"
  },
  "lines": [
    {
      "line": 0,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 1,
      "text": "integers A , B and pro with pro = 0",
      "code": "int A , B , pro = 0 ;",
      "indent": 1
    },
    {
      "line": 2,
      "text": "read A and B",
      "code": "cin >> A >> B ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "if A is greater than B",
      "code": "if ( A > B )",
      "indent": 1
    },
    {
      "line": 4,
      "text": "for i = A to 6 inclusive , increase pro",
      "code": "for ( int i = A ; i <= 6 ; i ++ ) { pro ++ ; }",
      "indent": 2
    },
    {
      "line": 5,
      "text": "else",
      "code": "else",
      "indent": 1
    },
    {
      "line": 6,
      "text": "for integer i = B to 6 inclusive , increase pro",
      "code": "for ( int i = B ; i <= 6 ; i ++ ) { pro ++ ; }",
      "indent": 2
    },
    {
      "line": 7,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 8,
      "text": "result = _gcd of pro and 6",
      "code": "int result = __gcd ( pro , 6 ) ;",
      "indent": 1
    },
    {
      "line": 9,
      "text": "if pro is equal to 0",
      "code": "if ( pro == 0 )",
      "indent": 1
    },
    {
      "line": 10,
      "text": "print \" 0 / 1 \" and a new line",
      "code": "cout << \" 0/1 \" << endl ;",
      "indent": 2
    },
    {
      "line": 11,
      "text": "else",
      "code": "else",
      "indent": 1
    },
    {
      "line": 12,
      "text": "print pro / result , \" / \" , 6 / result and a new line",
      "code": "cout << pro / result << \" / \" << 6 / result << endl ;",
      "indent": 2
    },
    {
      "line": 13,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 14,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        8
      ],
      "mod_code": [
        "result = _gcd ( pro , 6 ) ;"
      ],
      "err_line": 8,
      "err_msg": "‘result’ was not declared in this scope"
    },
    {
      "mod_line": [
        2
      ],
      "mod_code": [
        "cin >> A >> k ;"
      ],
      "err_line": 2,
      "err_msg": "‘k’ was not declared in this scope"
    },
    {
      "mod_line": [
        8
      ],
      "mod_code": [
        "int result = _gcd ( pro , 6 ) ;"
      ],
      "err_line": 8,
      "err_msg": "‘_gcd’ was not declared in this scope"
    },
    {
      "mod_line": [
        12
      ],
      "mod_code": [
        "cout << pro / result , \" / \" << 6 / result << endl ;"
      ],
      "err_line": 12,
      "err_msg": "invalid operands of types ‘const char [2]’ and ‘int’ to binary ‘operator<<’"
    },
    {
      "mod_line": [
        8,
        3
      ],
      "mod_code": [
        "result = _gcd ( pro , 6 ) ;",
        "if ( A > ' B ' )"
      ],
      "err_line": 8,
      "err_msg": "‘result’ was not declared in this scope"
    },
    {
      "mod_line": [
        8,
        3,
        12
      ],
      "mod_code": [
        "result = _gcd ( pro , 6 ) ;",
        "if ( A > ' B ' )",
        "cout << pro / result , \" / \" << 6 / result << endl ;"
      ],
      "err_line": 8,
      "err_msg": "‘result’ was not declared in this scope"
    },
    {
      "mod_line": [
        8,
        3,
        12,
        2
      ],
      "mod_code": [
        "result = _gcd ( pro , 6 ) ;",
        "if ( A > ' B ' )",
        "cout << pro / result , \" / \" << 6 / result << endl ;",
        "cin >> A >> k ;"
      ],
      "err_line": 2,
      "err_msg": "‘k’ was not declared in this scope"
    },
    {
      "mod_line": [
        8,
        3,
        2
      ],
      "mod_code": [
        "result = _gcd ( pro , 6 ) ;",
        "if ( A > ' B ' )",
        "cin >> A >> k ;"
      ],
      "err_line": 2,
      "err_msg": "‘k’ was not declared in this scope"
    },
    {
      "mod_line": [
        8,
        12
      ],
      "mod_code": [
        "result = _gcd ( pro , 6 ) ;",
        "cout << pro / result , \" / \" << 6 / result << endl ;"
      ],
      "err_line": 8,
      "err_msg": "‘result’ was not declared in this scope"
    },
    {
      "mod_line": [
        8,
        12,
        2
      ],
      "mod_code": [
        "result = _gcd ( pro , 6 ) ;",
        "cout << pro / result , \" / \" << 6 / result << endl ;",
        "cin >> A >> k ;"
      ],
      "err_line": 2,
      "err_msg": "‘k’ was not declared in this scope"
    },
    {
      "mod_line": [
        8,
        2
      ],
      "mod_code": [
        "result = _gcd ( pro , 6 ) ;",
        "cin >> A >> k ;"
      ],
      "err_line": 2,
      "err_msg": "‘k’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        8
      ],
      "mod_code": [
        "if ( A > ' B ' )",
        "int result = _gcd ( pro , 6 ) ;"
      ],
      "err_line": 8,
      "err_msg": "‘_gcd’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        8,
        12
      ],
      "mod_code": [
        "if ( A > ' B ' )",
        "int result = _gcd ( pro , 6 ) ;",
        "cout << pro / result , \" / \" << 6 / result << endl ;"
      ],
      "err_line": 8,
      "err_msg": "‘_gcd’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        8,
        12,
        2
      ],
      "mod_code": [
        "if ( A > ' B ' )",
        "int result = _gcd ( pro , 6 ) ;",
        "cout << pro / result , \" / \" << 6 / result << endl ;",
        "cin >> A >> k ;"
      ],
      "err_line": 2,
      "err_msg": "‘k’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        8,
        2
      ],
      "mod_code": [
        "if ( A > ' B ' )",
        "int result = _gcd ( pro , 6 ) ;",
        "cin >> A >> k ;"
      ],
      "err_line": 2,
      "err_msg": "‘k’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        12
      ],
      "mod_code": [
        "if ( A > ' B ' )",
        "cout << pro / result , \" / \" << 6 / result << endl ;"
      ],
      "err_line": 12,
      "err_msg": "invalid operands of types ‘const char [2]’ and ‘int’ to binary ‘operator<<’"
    },
    {
      "mod_line": [
        3,
        12,
        2
      ],
      "mod_code": [
        "if ( A > ' B ' )",
        "cout << pro / result , \" / \" << 6 / result << endl ;",
        "cin >> A >> k ;"
      ],
      "err_line": 2,
      "err_msg": "‘k’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        2
      ],
      "mod_code": [
        "if ( A > ' B ' )",
        "cin >> A >> k ;"
      ],
      "err_line": 2,
      "err_msg": "‘k’ was not declared in this scope"
    },
    {
      "mod_line": [
        8,
        12
      ],
      "mod_code": [
        "int result = _gcd ( pro , 6 ) ;",
        "cout << pro / result , \" / \" << 6 / result << endl ;"
      ],
      "err_line": 8,
      "err_msg": "‘_gcd’ was not declared in this scope"
    },
    {
      "mod_line": [
        8,
        12,
        2
      ],
      "mod_code": [
        "int result = _gcd ( pro , 6 ) ;",
        "cout << pro / result , \" / \" << 6 / result << endl ;",
        "cin >> A >> k ;"
      ],
      "err_line": 2,
      "err_msg": "‘k’ was not declared in this scope"
    },
    {
      "mod_line": [
        8,
        2
      ],
      "mod_code": [
        "int result = _gcd ( pro , 6 ) ;",
        "cin >> A >> k ;"
      ],
      "err_line": 2,
      "err_msg": "‘k’ was not declared in this scope"
    },
    {
      "mod_line": [
        12,
        2
      ],
      "mod_code": [
        "cout << pro / result , \" / \" << 6 / result << endl ;",
        "cin >> A >> k ;"
      ],
      "err_line": 2,
      "err_msg": "‘k’ was not declared in this scope"
    }
  ]
}