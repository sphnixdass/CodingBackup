{
  "meta": {
    "index": 1668,
    "hitid": "3PA41K45VNYMHX3ITOFBL8YX0NW7PC",
    "workerid": "AIWEXPJAU66D9",
    "probid": "17A",
    "subid": "47350498"
  },
  "lines": [
    {
      "line": 0,
      "text": "set constant integer N to 1005",
      "code": "const int N = 1005 ;",
      "indent": 0
    },
    {
      "line": 1,
      "text": "create array of bool a with size N + 1",
      "code": "bool a [ N + 1 ] ;",
      "indent": 0
    },
    {
      "line": 2,
      "text": "s = set of integers",
      "code": "set < int > s ;",
      "indent": 0
    },
    {
      "line": 3,
      "text": "create array of bool x with size N + 1",
      "code": "bool x [ N + 1 ] ;",
      "indent": 0
    },
    {
      "line": 4,
      "text": "define function get_prime",
      "code": "void get_prime ( )",
      "indent": 0
    },
    {
      "line": 5,
      "text": "call memset with arguments a , true and sizeof ( a )",
      "code": "memset ( a , true , sizeof ( a ) ) ;",
      "indent": 1
    },
    {
      "line": 6,
      "text": "call memset with arguments x , false and sizeof ( x )",
      "code": "memset ( x , false , sizeof ( x ) ) ;",
      "indent": 1
    },
    {
      "line": 7,
      "text": "for i = 2 to N inclusive",
      "code": "for ( int i = 2 ; i <= N ; i ++ )",
      "indent": 1
    },
    {
      "line": 8,
      "text": "if a [ i ] is true",
      "code": "if ( a [ i ] )",
      "indent": 2
    },
    {
      "line": 9,
      "text": "add i to set s",
      "code": "s . insert ( i ) ;",
      "indent": 3
    },
    {
      "line": 10,
      "text": "for j = 2 * i to N inclusive with step of i , set a [ j ] to false",
      "code": "for ( int j = 2 * i ; j <= N ; j += i ) a [ j ] = false ;",
      "indent": 3
    },
    {
      "line": 11,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 12,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 13,
      "text": "it is an iterator for a set of integers",
      "code": "set < int > :: iterator it ;",
      "indent": 1
    },
    {
      "line": 14,
      "text": "set it to the start of s",
      "code": "it = s . begin ( ) ;",
      "indent": 1
    },
    {
      "line": 15,
      "text": "iterate it in loop until it is not at the end of s",
      "code": "for ( ; it != s . end ( ) ; )",
      "indent": 1
    },
    {
      "line": 16,
      "text": "create integer q with value * it",
      "code": "int q = * it ;",
      "indent": 2
    },
    {
      "line": 17,
      "text": "increment it",
      "code": "it ++ ;",
      "indent": 2
    },
    {
      "line": 18,
      "text": "increase q by * it",
      "code": "q += * it ;",
      "indent": 2
    },
    {
      "line": 19,
      "text": "increase q by 1",
      "code": "q += 1 ;",
      "indent": 2
    },
    {
      "line": 20,
      "text": "if q is not the last element of s , set x [ q ] to 1",
      "code": "if ( s . find ( q ) != s . end ( ) ) { x [ q ] = 1 ; }",
      "indent": 2
    },
    {
      "line": 21,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 22,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    },
    {
      "line": 23,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 24,
      "text": "call get_prime ( )",
      "code": "get_prime ( ) ;",
      "indent": 1
    },
    {
      "line": 25,
      "text": "let n and k be integers",
      "code": "int n , k ;",
      "indent": 1
    },
    {
      "line": 26,
      "text": "read n and k",
      "code": "cin >> n >> k ;",
      "indent": 1
    },
    {
      "line": 27,
      "text": "set integer w to 0",
      "code": "int w = 0 ;",
      "indent": 1
    },
    {
      "line": 28,
      "text": "for integer i = 2 to n inclusive",
      "code": "for ( int i = 2 ; i <= n ; i ++ )",
      "indent": 1
    },
    {
      "line": 29,
      "text": "if x [ i ] is true , increment w",
      "code": "if ( x [ i ] ) { w += 1 ; }",
      "indent": 2
    },
    {
      "line": 30,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 31,
      "text": "if w > = k",
      "code": "if ( w >= k )",
      "indent": 1
    },
    {
      "line": 32,
      "text": "print \" YES \" and a new line",
      "code": "cout << \" YES \" << endl ;",
      "indent": 2
    },
    {
      "line": 33,
      "text": "else",
      "code": "else",
      "indent": 1
    },
    {
      "line": 34,
      "text": "print \" NO \" and a new line",
      "code": "cout << \" NO \" << endl ;",
      "indent": 2
    },
    {
      "line": 35,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 36,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 37,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        15
      ],
      "mod_code": [
        "for ( int it = 1 ; ; it != s . end ( ) ; it ++ )"
      ],
      "err_line": 15,
      "err_msg": "no match for ‘operator!=’ (operand types are ‘int’ and ‘std::set<int>::iterator {aka std::_Rb_tree_const_iterator<int>}’)"
    },
    {
      "mod_line": [
        2
      ],
      "mod_code": [
        "set < int > :: s ;"
      ],
      "err_line": 2,
      "err_msg": "‘s’ in ‘class std::set<int>’ does not name a type"
    },
    {
      "mod_line": [
        4
      ],
      "mod_code": [
        "get_prime ( ) ;"
      ],
      "err_line": 4,
      "err_msg": "expected constructor, destructor, or type conversion before ‘;’ token"
    },
    {
      "mod_line": [
        5
      ],
      "mod_code": [
        "memset ( a , true , sizeof ( a ) ) << endl ;"
      ],
      "err_line": 5,
      "err_msg": "invalid operands of types ‘void*’ and ‘<unresolved overloaded function type>’ to binary ‘operator<<’"
    },
    {
      "mod_line": [
        7
      ],
      "mod_code": [
        "for ( i = 2 ; i <= N ; i ++ )"
      ],
      "err_line": 7,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        9
      ],
      "mod_code": [
        "s . push_back ( i ) ;"
      ],
      "err_line": 9,
      "err_msg": "‘class std::set<int>’ has no member named ‘push_back’"
    },
    {
      "mod_line": [
        14
      ],
      "mod_code": [
        "it = 1 ;"
      ],
      "err_line": 14,
      "err_msg": "no match for ‘operator=’ (operand types are ‘std::set<int>::iterator {aka std::_Rb_tree_const_iterator<int>}’ and ‘int’)"
    },
    {
      "mod_line": [
        15
      ],
      "mod_code": [
        "for ( it = 1 ; ; it != s . end ( ) ; it ++ )"
      ],
      "err_line": 15,
      "err_msg": "no match for ‘operator=’ (operand types are ‘std::set<int>::iterator {aka std::_Rb_tree_const_iterator<int>}’ and ‘int’)"
    },
    {
      "mod_line": [
        16
      ],
      "mod_code": [
        "int q = * 1 ;"
      ],
      "err_line": 16,
      "err_msg": "invalid type argument of unary ‘*’ (have ‘int’)"
    },
    {
      "mod_line": [
        24
      ],
      "mod_code": [
        "get_prime ( ) << endl ;"
      ],
      "err_line": 24,
      "err_msg": "invalid operands of types ‘void’ and ‘<unresolved overloaded function type>’ to binary ‘operator<<’"
    },
    {
      "mod_line": [
        10,
        14,
        15
      ],
      "mod_code": [
        "for ( int j = 2 * i ; j <= N ; j ++ ) a [ j ] = false ;",
        "it = s . end ( ) ;",
        "for ( int it = 1 ; ; it != s . end ( ) ; it ++ )"
      ],
      "err_line": 15,
      "err_msg": "no match for ‘operator!=’ (operand types are ‘int’ and ‘std::set<int>::iterator {aka std::_Rb_tree_const_iterator<int>}’)"
    },
    {
      "mod_line": [
        10,
        14,
        15,
        20
      ],
      "mod_code": [
        "for ( int j = 2 * i ; j <= N ; j ++ ) a [ j ] = false ;",
        "it = s . end ( ) ;",
        "for ( int it = 1 ; ; it != s . end ( ) ; it ++ )",
        "if ( q != s . size ( ) ) x [ q ] = 1 ;"
      ],
      "err_line": 15,
      "err_msg": "no match for ‘operator!=’ (operand types are ‘int’ and ‘std::set<int>::iterator {aka std::_Rb_tree_const_iterator<int>}’)"
    },
    {
      "mod_line": [
        10,
        14,
        15,
        26
      ],
      "mod_code": [
        "for ( int j = 2 * i ; j <= N ; j ++ ) a [ j ] = false ;",
        "it = s . end ( ) ;",
        "for ( int it = 1 ; ; it != s . end ( ) ; it ++ )",
        "cin >> n and k ;"
      ],
      "err_line": 15,
      "err_msg": "no match for ‘operator!=’ (operand types are ‘int’ and ‘std::set<int>::iterator {aka std::_Rb_tree_const_iterator<int>}’)"
    },
    {
      "mod_line": [
        10,
        15
      ],
      "mod_code": [
        "for ( int j = 2 * i ; j <= N ; j ++ ) a [ j ] = false ;",
        "for ( int it = 1 ; ; it != s . end ( ) ; it ++ )"
      ],
      "err_line": 15,
      "err_msg": "no match for ‘operator!=’ (operand types are ‘int’ and ‘std::set<int>::iterator {aka std::_Rb_tree_const_iterator<int>}’)"
    },
    {
      "mod_line": [
        10,
        15,
        20
      ],
      "mod_code": [
        "for ( int j = 2 * i ; j <= N ; j ++ ) a [ j ] = false ;",
        "for ( int it = 1 ; ; it != s . end ( ) ; it ++ )",
        "if ( q != s . size ( ) ) x [ q ] = 1 ;"
      ],
      "err_line": 15,
      "err_msg": "no match for ‘operator!=’ (operand types are ‘int’ and ‘std::set<int>::iterator {aka std::_Rb_tree_const_iterator<int>}’)"
    },
    {
      "mod_line": [
        10,
        15,
        20,
        14
      ],
      "mod_code": [
        "for ( int j = 2 * i ; j <= N ; j ++ ) a [ j ] = false ;",
        "for ( int it = 1 ; ; it != s . end ( ) ; it ++ )",
        "if ( q != s . size ( ) ) x [ q ] = 1 ;",
        "it = 1 ;"
      ],
      "err_line": 14,
      "err_msg": "no match for ‘operator=’ (operand types are ‘std::set<int>::iterator {aka std::_Rb_tree_const_iterator<int>}’ and ‘int’)"
    },
    {
      "mod_line": [
        10,
        15,
        20,
        26
      ],
      "mod_code": [
        "for ( int j = 2 * i ; j <= N ; j ++ ) a [ j ] = false ;",
        "for ( int it = 1 ; ; it != s . end ( ) ; it ++ )",
        "if ( q != s . size ( ) ) x [ q ] = 1 ;",
        "cin >> n and k ;"
      ],
      "err_line": 15,
      "err_msg": "no match for ‘operator!=’ (operand types are ‘int’ and ‘std::set<int>::iterator {aka std::_Rb_tree_const_iterator<int>}’)"
    },
    {
      "mod_line": [
        10,
        15,
        14
      ],
      "mod_code": [
        "for ( int j = 2 * i ; j <= N ; j ++ ) a [ j ] = false ;",
        "for ( int it = 1 ; ; it != s . end ( ) ; it ++ )",
        "it = 1 ;"
      ],
      "err_line": 14,
      "err_msg": "no match for ‘operator=’ (operand types are ‘std::set<int>::iterator {aka std::_Rb_tree_const_iterator<int>}’ and ‘int’)"
    },
    {
      "mod_line": [
        10,
        15,
        14,
        26
      ],
      "mod_code": [
        "for ( int j = 2 * i ; j <= N ; j ++ ) a [ j ] = false ;",
        "for ( int it = 1 ; ; it != s . end ( ) ; it ++ )",
        "it = 1 ;",
        "cin >> n and k ;"
      ],
      "err_line": 14,
      "err_msg": "no match for ‘operator=’ (operand types are ‘std::set<int>::iterator {aka std::_Rb_tree_const_iterator<int>}’ and ‘int’)"
    },
    {
      "mod_line": [
        10,
        15,
        26
      ],
      "mod_code": [
        "for ( int j = 2 * i ; j <= N ; j ++ ) a [ j ] = false ;",
        "for ( int it = 1 ; ; it != s . end ( ) ; it ++ )",
        "cin >> n and k ;"
      ],
      "err_line": 15,
      "err_msg": "no match for ‘operator!=’ (operand types are ‘int’ and ‘std::set<int>::iterator {aka std::_Rb_tree_const_iterator<int>}’)"
    },
    {
      "mod_line": [
        10,
        20,
        14
      ],
      "mod_code": [
        "for ( int j = 2 * i ; j <= N ; j ++ ) a [ j ] = false ;",
        "if ( q != s . size ( ) ) x [ q ] = 1 ;",
        "it = 1 ;"
      ],
      "err_line": 14,
      "err_msg": "no match for ‘operator=’ (operand types are ‘std::set<int>::iterator {aka std::_Rb_tree_const_iterator<int>}’ and ‘int’)"
    },
    {
      "mod_line": [
        10,
        20,
        14,
        26
      ],
      "mod_code": [
        "for ( int j = 2 * i ; j <= N ; j ++ ) a [ j ] = false ;",
        "if ( q != s . size ( ) ) x [ q ] = 1 ;",
        "it = 1 ;",
        "cin >> n and k ;"
      ],
      "err_line": 14,
      "err_msg": "no match for ‘operator=’ (operand types are ‘std::set<int>::iterator {aka std::_Rb_tree_const_iterator<int>}’ and ‘int’)"
    },
    {
      "mod_line": [
        10,
        14
      ],
      "mod_code": [
        "for ( int j = 2 * i ; j <= N ; j ++ ) a [ j ] = false ;",
        "it = 1 ;"
      ],
      "err_line": 14,
      "err_msg": "no match for ‘operator=’ (operand types are ‘std::set<int>::iterator {aka std::_Rb_tree_const_iterator<int>}’ and ‘int’)"
    },
    {
      "mod_line": [
        10,
        14,
        26
      ],
      "mod_code": [
        "for ( int j = 2 * i ; j <= N ; j ++ ) a [ j ] = false ;",
        "it = 1 ;",
        "cin >> n and k ;"
      ],
      "err_line": 14,
      "err_msg": "no match for ‘operator=’ (operand types are ‘std::set<int>::iterator {aka std::_Rb_tree_const_iterator<int>}’ and ‘int’)"
    },
    {
      "mod_line": [
        14,
        15
      ],
      "mod_code": [
        "it = s . end ( ) ;",
        "for ( int it = 1 ; ; it != s . end ( ) ; it ++ )"
      ],
      "err_line": 15,
      "err_msg": "no match for ‘operator!=’ (operand types are ‘int’ and ‘std::set<int>::iterator {aka std::_Rb_tree_const_iterator<int>}’)"
    },
    {
      "mod_line": [
        14,
        15,
        20
      ],
      "mod_code": [
        "it = s . end ( ) ;",
        "for ( int it = 1 ; ; it != s . end ( ) ; it ++ )",
        "if ( q != s . size ( ) ) x [ q ] = 1 ;"
      ],
      "err_line": 15,
      "err_msg": "no match for ‘operator!=’ (operand types are ‘int’ and ‘std::set<int>::iterator {aka std::_Rb_tree_const_iterator<int>}’)"
    },
    {
      "mod_line": [
        14,
        15,
        20,
        26
      ],
      "mod_code": [
        "it = s . end ( ) ;",
        "for ( int it = 1 ; ; it != s . end ( ) ; it ++ )",
        "if ( q != s . size ( ) ) x [ q ] = 1 ;",
        "cin >> n and k ;"
      ],
      "err_line": 15,
      "err_msg": "no match for ‘operator!=’ (operand types are ‘int’ and ‘std::set<int>::iterator {aka std::_Rb_tree_const_iterator<int>}’)"
    },
    {
      "mod_line": [
        14,
        15,
        26
      ],
      "mod_code": [
        "it = s . end ( ) ;",
        "for ( int it = 1 ; ; it != s . end ( ) ; it ++ )",
        "cin >> n and k ;"
      ],
      "err_line": 15,
      "err_msg": "no match for ‘operator!=’ (operand types are ‘int’ and ‘std::set<int>::iterator {aka std::_Rb_tree_const_iterator<int>}’)"
    },
    {
      "mod_line": [
        15,
        20
      ],
      "mod_code": [
        "for ( int it = 1 ; ; it != s . end ( ) ; it ++ )",
        "if ( q != s . size ( ) ) x [ q ] = 1 ;"
      ],
      "err_line": 15,
      "err_msg": "no match for ‘operator!=’ (operand types are ‘int’ and ‘std::set<int>::iterator {aka std::_Rb_tree_const_iterator<int>}’)"
    },
    {
      "mod_line": [
        15,
        20,
        14
      ],
      "mod_code": [
        "for ( int it = 1 ; ; it != s . end ( ) ; it ++ )",
        "if ( q != s . size ( ) ) x [ q ] = 1 ;",
        "it = 1 ;"
      ],
      "err_line": 14,
      "err_msg": "no match for ‘operator=’ (operand types are ‘std::set<int>::iterator {aka std::_Rb_tree_const_iterator<int>}’ and ‘int’)"
    },
    {
      "mod_line": [
        15,
        20,
        14,
        26
      ],
      "mod_code": [
        "for ( int it = 1 ; ; it != s . end ( ) ; it ++ )",
        "if ( q != s . size ( ) ) x [ q ] = 1 ;",
        "it = 1 ;",
        "cin >> n and k ;"
      ],
      "err_line": 14,
      "err_msg": "no match for ‘operator=’ (operand types are ‘std::set<int>::iterator {aka std::_Rb_tree_const_iterator<int>}’ and ‘int’)"
    },
    {
      "mod_line": [
        15,
        20,
        26
      ],
      "mod_code": [
        "for ( int it = 1 ; ; it != s . end ( ) ; it ++ )",
        "if ( q != s . size ( ) ) x [ q ] = 1 ;",
        "cin >> n and k ;"
      ],
      "err_line": 15,
      "err_msg": "no match for ‘operator!=’ (operand types are ‘int’ and ‘std::set<int>::iterator {aka std::_Rb_tree_const_iterator<int>}’)"
    },
    {
      "mod_line": [
        15,
        14
      ],
      "mod_code": [
        "for ( int it = 1 ; ; it != s . end ( ) ; it ++ )",
        "it = 1 ;"
      ],
      "err_line": 14,
      "err_msg": "no match for ‘operator=’ (operand types are ‘std::set<int>::iterator {aka std::_Rb_tree_const_iterator<int>}’ and ‘int’)"
    },
    {
      "mod_line": [
        15,
        14,
        26
      ],
      "mod_code": [
        "for ( int it = 1 ; ; it != s . end ( ) ; it ++ )",
        "it = 1 ;",
        "cin >> n and k ;"
      ],
      "err_line": 14,
      "err_msg": "no match for ‘operator=’ (operand types are ‘std::set<int>::iterator {aka std::_Rb_tree_const_iterator<int>}’ and ‘int’)"
    },
    {
      "mod_line": [
        15,
        26
      ],
      "mod_code": [
        "for ( int it = 1 ; ; it != s . end ( ) ; it ++ )",
        "cin >> n and k ;"
      ],
      "err_line": 15,
      "err_msg": "no match for ‘operator!=’ (operand types are ‘int’ and ‘std::set<int>::iterator {aka std::_Rb_tree_const_iterator<int>}’)"
    },
    {
      "mod_line": [
        20,
        14
      ],
      "mod_code": [
        "if ( q != s . size ( ) ) x [ q ] = 1 ;",
        "it = 1 ;"
      ],
      "err_line": 14,
      "err_msg": "no match for ‘operator=’ (operand types are ‘std::set<int>::iterator {aka std::_Rb_tree_const_iterator<int>}’ and ‘int’)"
    },
    {
      "mod_line": [
        20,
        14,
        26
      ],
      "mod_code": [
        "if ( q != s . size ( ) ) x [ q ] = 1 ;",
        "it = 1 ;",
        "cin >> n and k ;"
      ],
      "err_line": 14,
      "err_msg": "no match for ‘operator=’ (operand types are ‘std::set<int>::iterator {aka std::_Rb_tree_const_iterator<int>}’ and ‘int’)"
    },
    {
      "mod_line": [
        14,
        26
      ],
      "mod_code": [
        "it = 1 ;",
        "cin >> n and k ;"
      ],
      "err_line": 14,
      "err_msg": "no match for ‘operator=’ (operand types are ‘std::set<int>::iterator {aka std::_Rb_tree_const_iterator<int>}’ and ‘int’)"
    }
  ]
}