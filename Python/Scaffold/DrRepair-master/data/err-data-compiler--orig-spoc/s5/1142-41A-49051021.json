{
  "meta": {
    "index": 1142,
    "hitid": "3MQKOF1EE2ISIF1TWNWSDUGPFV2DW6",
    "workerid": "AIWEXPJAU66D9",
    "probid": "41A",
    "subid": "49051021"
  },
  "lines": [
    {
      "line": 0,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 1,
      "text": "str1 and str2 = strings",
      "code": "string str1 , str2 ;",
      "indent": 1
    },
    {
      "line": 2,
      "text": "read str1 and str2",
      "code": "cin >> str1 >> str2 ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "reverse str1",
      "code": "reverse ( str1 . begin ( ) , str1 . end ( ) ) ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "if content of str1 is not equal to that of str2",
      "code": "if ( str1 . compare ( str2 ) != 0 )",
      "indent": 1
    },
    {
      "line": 5,
      "text": "print \" NO \" and a new line",
      "code": "cout << \" NO \" << endl ;",
      "indent": 2
    },
    {
      "line": 6,
      "text": "else",
      "code": "else",
      "indent": 1
    },
    {
      "line": 7,
      "text": "print \" YES \" and a new line",
      "code": "cout << \" YES \" << endl ;",
      "indent": 2
    },
    {
      "line": 8,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 9,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        1
      ],
      "mod_code": [
        "string s , str2 ;"
      ],
      "err_line": 2,
      "err_msg": "‘str1’ was not declared in this scope"
    },
    {
      "mod_line": [
        2
      ],
      "mod_code": [
        "int str1 >> str2 ;"
      ],
      "err_line": 2,
      "err_msg": "expected initializer before ‘>>’ token"
    },
    {
      "mod_line": [
        3
      ],
      "mod_code": [
        "reverse ( str1 . begin ( ) + str1 . end ( ) ) ;"
      ],
      "err_line": 3,
      "err_msg": "no match for ‘operator+’ (operand types are ‘std::__cxx11::basic_string<char>::iterator {aka __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> >}’ and ‘std::__cxx11::basic_string<char>::iterator {aka __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> >}’)"
    },
    {
      "mod_line": [
        4
      ],
      "mod_code": [
        "if ( strcmp ( str1 ) != 0 )"
      ],
      "err_line": 4,
      "err_msg": "cannot convert ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ to ‘const char*’ for argument ‘1’ to ‘int strcmp(const char*, const char*)’"
    },
    {
      "mod_line": [
        3,
        4
      ],
      "mod_code": [
        "reverse ( str1 . begin ( ) + str1 . end ( ) ) ;",
        "if ( strcmp ( str1 ) != 0 )"
      ],
      "err_line": 3,
      "err_msg": "no match for ‘operator+’ (operand types are ‘std::__cxx11::basic_string<char>::iterator {aka __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> >}’ and ‘std::__cxx11::basic_string<char>::iterator {aka __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> >}’)"
    },
    {
      "mod_line": [
        3,
        4,
        2
      ],
      "mod_code": [
        "reverse ( str1 . begin ( ) + str1 . end ( ) ) ;",
        "if ( strcmp ( str1 ) != 0 )",
        "int str1 >> str2 ;"
      ],
      "err_line": 2,
      "err_msg": "expected initializer before ‘>>’ token"
    },
    {
      "mod_line": [
        3,
        4,
        2,
        7
      ],
      "mod_code": [
        "reverse ( str1 . begin ( ) + str1 . end ( ) ) ;",
        "if ( strcmp ( str1 ) != 0 )",
        "int str1 >> str2 ;",
        "cout << \" YES\\n \" << endl ;"
      ],
      "err_line": 2,
      "err_msg": "expected initializer before ‘>>’ token"
    },
    {
      "mod_line": [
        3,
        4,
        2,
        1
      ],
      "mod_code": [
        "reverse ( str1 . begin ( ) + str1 . end ( ) ) ;",
        "if ( strcmp ( str1 ) != 0 )",
        "int str1 >> str2 ;",
        "string s , str2 ;"
      ],
      "err_line": 2,
      "err_msg": "expected initializer before ‘>>’ token"
    },
    {
      "mod_line": [
        3,
        4,
        7
      ],
      "mod_code": [
        "reverse ( str1 . begin ( ) + str1 . end ( ) ) ;",
        "if ( strcmp ( str1 ) != 0 )",
        "cout << \" YES\\n \" << endl ;"
      ],
      "err_line": 3,
      "err_msg": "no match for ‘operator+’ (operand types are ‘std::__cxx11::basic_string<char>::iterator {aka __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> >}’ and ‘std::__cxx11::basic_string<char>::iterator {aka __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> >}’)"
    },
    {
      "mod_line": [
        3,
        4,
        7,
        1
      ],
      "mod_code": [
        "reverse ( str1 . begin ( ) + str1 . end ( ) ) ;",
        "if ( strcmp ( str1 ) != 0 )",
        "cout << \" YES\\n \" << endl ;",
        "string s , str2 ;"
      ],
      "err_line": 2,
      "err_msg": "‘str1’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        4,
        1
      ],
      "mod_code": [
        "reverse ( str1 . begin ( ) + str1 . end ( ) ) ;",
        "if ( strcmp ( str1 ) != 0 )",
        "string s , str2 ;"
      ],
      "err_line": 2,
      "err_msg": "‘str1’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        2
      ],
      "mod_code": [
        "reverse ( str1 . begin ( ) + str1 . end ( ) ) ;",
        "int str1 >> str2 ;"
      ],
      "err_line": 2,
      "err_msg": "expected initializer before ‘>>’ token"
    },
    {
      "mod_line": [
        3,
        2,
        7
      ],
      "mod_code": [
        "reverse ( str1 . begin ( ) + str1 . end ( ) ) ;",
        "int str1 >> str2 ;",
        "cout << \" YES\\n \" << endl ;"
      ],
      "err_line": 2,
      "err_msg": "expected initializer before ‘>>’ token"
    },
    {
      "mod_line": [
        3,
        2,
        7,
        1
      ],
      "mod_code": [
        "reverse ( str1 . begin ( ) + str1 . end ( ) ) ;",
        "int str1 >> str2 ;",
        "cout << \" YES\\n \" << endl ;",
        "string s , str2 ;"
      ],
      "err_line": 2,
      "err_msg": "expected initializer before ‘>>’ token"
    },
    {
      "mod_line": [
        3,
        2,
        1
      ],
      "mod_code": [
        "reverse ( str1 . begin ( ) + str1 . end ( ) ) ;",
        "int str1 >> str2 ;",
        "string s , str2 ;"
      ],
      "err_line": 2,
      "err_msg": "expected initializer before ‘>>’ token"
    },
    {
      "mod_line": [
        3,
        7
      ],
      "mod_code": [
        "reverse ( str1 . begin ( ) + str1 . end ( ) ) ;",
        "cout << \" YES\\n \" << endl ;"
      ],
      "err_line": 3,
      "err_msg": "no match for ‘operator+’ (operand types are ‘std::__cxx11::basic_string<char>::iterator {aka __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> >}’ and ‘std::__cxx11::basic_string<char>::iterator {aka __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> >}’)"
    },
    {
      "mod_line": [
        3,
        7,
        1
      ],
      "mod_code": [
        "reverse ( str1 . begin ( ) + str1 . end ( ) ) ;",
        "cout << \" YES\\n \" << endl ;",
        "string s , str2 ;"
      ],
      "err_line": 2,
      "err_msg": "‘str1’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        1
      ],
      "mod_code": [
        "reverse ( str1 . begin ( ) + str1 . end ( ) ) ;",
        "string s , str2 ;"
      ],
      "err_line": 2,
      "err_msg": "‘str1’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        2
      ],
      "mod_code": [
        "if ( strcmp ( str1 ) != 0 )",
        "int str1 >> str2 ;"
      ],
      "err_line": 2,
      "err_msg": "expected initializer before ‘>>’ token"
    },
    {
      "mod_line": [
        4,
        2,
        7
      ],
      "mod_code": [
        "if ( strcmp ( str1 ) != 0 )",
        "int str1 >> str2 ;",
        "cout << \" YES\\n \" << endl ;"
      ],
      "err_line": 2,
      "err_msg": "expected initializer before ‘>>’ token"
    },
    {
      "mod_line": [
        4,
        2,
        7,
        1
      ],
      "mod_code": [
        "if ( strcmp ( str1 ) != 0 )",
        "int str1 >> str2 ;",
        "cout << \" YES\\n \" << endl ;",
        "string s , str2 ;"
      ],
      "err_line": 2,
      "err_msg": "expected initializer before ‘>>’ token"
    },
    {
      "mod_line": [
        4,
        2,
        1
      ],
      "mod_code": [
        "if ( strcmp ( str1 ) != 0 )",
        "int str1 >> str2 ;",
        "string s , str2 ;"
      ],
      "err_line": 2,
      "err_msg": "expected initializer before ‘>>’ token"
    },
    {
      "mod_line": [
        4,
        7
      ],
      "mod_code": [
        "if ( strcmp ( str1 ) != 0 )",
        "cout << \" YES\\n \" << endl ;"
      ],
      "err_line": 4,
      "err_msg": "cannot convert ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ to ‘const char*’ for argument ‘1’ to ‘int strcmp(const char*, const char*)’"
    },
    {
      "mod_line": [
        4,
        7,
        1
      ],
      "mod_code": [
        "if ( strcmp ( str1 ) != 0 )",
        "cout << \" YES\\n \" << endl ;",
        "string s , str2 ;"
      ],
      "err_line": 2,
      "err_msg": "‘str1’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        1
      ],
      "mod_code": [
        "if ( strcmp ( str1 ) != 0 )",
        "string s , str2 ;"
      ],
      "err_line": 2,
      "err_msg": "‘str1’ was not declared in this scope"
    },
    {
      "mod_line": [
        2,
        7
      ],
      "mod_code": [
        "int str1 >> str2 ;",
        "cout << \" YES\\n \" << endl ;"
      ],
      "err_line": 2,
      "err_msg": "expected initializer before ‘>>’ token"
    },
    {
      "mod_line": [
        2,
        7,
        1
      ],
      "mod_code": [
        "int str1 >> str2 ;",
        "cout << \" YES\\n \" << endl ;",
        "string s , str2 ;"
      ],
      "err_line": 2,
      "err_msg": "expected initializer before ‘>>’ token"
    },
    {
      "mod_line": [
        2,
        1
      ],
      "mod_code": [
        "int str1 >> str2 ;",
        "string s , str2 ;"
      ],
      "err_line": 2,
      "err_msg": "expected initializer before ‘>>’ token"
    },
    {
      "mod_line": [
        7,
        1
      ],
      "mod_code": [
        "cout << \" YES\\n \" << endl ;",
        "string s , str2 ;"
      ],
      "err_line": 2,
      "err_msg": "‘str1’ was not declared in this scope"
    }
  ]
}