{
  "meta": {
    "index": 2692,
    "hitid": "3OREP8RUT2536WD93M14W161IM0BGY",
    "workerid": "A1APYLD4DUK33J",
    "probid": "16A",
    "subid": "48945664"
  },
  "lines": [
    {
      "line": 0,
      "text": "create 2d integer array matriz with size 110 by 110",
      "code": "int matriz [ 110 ] [ 110 ] ;",
      "indent": 0
    },
    {
      "line": 1,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 2,
      "text": "create integers n , m , suma",
      "code": "int n , m , suma ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "create string aux",
      "code": "string aux ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "set bytes from matriz to size of matriz , to value - 1",
      "code": "memset ( matriz , - 1 , sizeof matriz ) ;",
      "indent": 1
    },
    {
      "line": 5,
      "text": "read n read m",
      "code": "cin >> n >> m ;",
      "indent": 1
    },
    {
      "line": 6,
      "text": "read line from cin to aux",
      "code": "getline ( cin , aux ) ;",
      "indent": 1
    },
    {
      "line": 7,
      "text": "for i = integer casted 0 to integer casted n exclusive",
      "code": "for ( int i = int ( 0 ) ; i < int ( n ) ; i ++ )",
      "indent": 1
    },
    {
      "line": 8,
      "text": "read line from cin to aux",
      "code": "getline ( cin , aux ) ;",
      "indent": 2
    },
    {
      "line": 9,
      "text": "for j = integer casted 0 to integer casted m exclusive , set matriz [ i ] [ j ] to integer casted ( aux [ j ] ) - 48",
      "code": "for ( int j = int ( 0 ) ; j < int ( m ) ; j ++ ) { matriz [ i ] [ j ] = int ( aux [ j ] ) - 48 ; }",
      "indent": 2
    },
    {
      "line": 10,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 11,
      "text": "create integer prom with prom = 0",
      "code": "int prom = 0 ;",
      "indent": 1
    },
    {
      "line": 12,
      "text": "create boolean pass with pass = true",
      "code": "bool pass = true ;",
      "indent": 1
    },
    {
      "line": 13,
      "text": "for i = integer casted 0 to integer casted n",
      "code": "for ( int i = int ( 0 ) ; i < int ( n ) ; i ++ )",
      "indent": 1
    },
    {
      "line": 14,
      "text": "set suma to 0",
      "code": "suma = 0 ;",
      "indent": 2
    },
    {
      "line": 15,
      "text": "for j = integer casted 0 to integer casted ( m - 1 )",
      "code": "for ( int j = int ( 0 ) ; j < int ( m - 1 ) ; j ++ )",
      "indent": 2
    },
    {
      "line": 16,
      "text": "if matriz [ i ] [ j + 1 ] is matriz [ i ] [ j ]",
      "code": "if ( matriz [ i ] [ j + 1 ] == matriz [ i ] [ j ] )",
      "indent": 3
    },
    {
      "line": 17,
      "text": "set pass to pass and true",
      "code": "pass = pass && true ;",
      "indent": 4
    },
    {
      "line": 18,
      "text": "else",
      "code": "else",
      "indent": 3
    },
    {
      "line": 19,
      "text": "set pass to false",
      "code": "pass = false ;",
      "indent": 4
    },
    {
      "line": 20,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 21,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 22,
      "text": "if pass is true",
      "code": "if ( pass )",
      "indent": 1
    },
    {
      "line": 23,
      "text": "for k = integer casted 0 to integer casted ( n - 1 ) exclusive",
      "code": "for ( int k = int ( 0 ) ; k < int ( n - 1 ) ; k ++ )",
      "indent": 2
    },
    {
      "line": 24,
      "text": "if matriz [ k ] [ 0 ] is not matriz [ k + 1 ] [ 0 ]",
      "code": "if ( matriz [ k ] [ 0 ] != matriz [ k + 1 ] [ 0 ] )",
      "indent": 3
    },
    {
      "line": 25,
      "text": "set pass to pass and true",
      "code": "pass = pass && true ;",
      "indent": 4
    },
    {
      "line": 26,
      "text": "else",
      "code": "else",
      "indent": 3
    },
    {
      "line": 27,
      "text": "set pass to false",
      "code": "pass = false ;",
      "indent": 4
    },
    {
      "line": 28,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 29,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 30,
      "text": "if pass is true",
      "code": "if ( pass )",
      "indent": 1
    },
    {
      "line": 31,
      "text": "print \" YES \" print newline",
      "code": "cout << \" YES \" << endl ;",
      "indent": 2
    },
    {
      "line": 32,
      "text": "else",
      "code": "else",
      "indent": 1
    },
    {
      "line": 33,
      "text": "print \" NO \" print newline",
      "code": "cout << \" NO \" << endl ;",
      "indent": 2
    },
    {
      "line": 34,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 35,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        4
      ],
      "mod_code": [
        "memset ( matriz , value , sizeof ( matriz ) ) ;"
      ],
      "err_line": 4,
      "err_msg": "‘value’ was not declared in this scope"
    },
    {
      "mod_line": [
        0
      ],
      "mod_code": [
        "int * matriz [ 110 ] [ 110 ] ;"
      ],
      "err_line": 9,
      "err_msg": "invalid conversion from ‘int’ to ‘int*’ [-fpermissive]"
    },
    {
      "mod_line": [
        3
      ],
      "mod_code": [
        "string n ;"
      ],
      "err_line": 3,
      "err_msg": "conflicting declaration ‘std::__cxx11::string n’"
    },
    {
      "mod_line": [
        5
      ],
      "mod_code": [
        "cin >> n read m ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘read’"
    },
    {
      "mod_line": [
        6
      ],
      "mod_code": [
        "gets ( cin , aux ) ;"
      ],
      "err_line": 6,
      "err_msg": "invalid user-defined conversion from ‘std::istream {aka std::basic_istream<char>}’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        8
      ],
      "mod_code": [
        "gets ( cin , aux ) ;"
      ],
      "err_line": 8,
      "err_msg": "invalid user-defined conversion from ‘std::istream {aka std::basic_istream<char>}’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        24
      ],
      "mod_code": [
        "if ( matriz [ k ] [ 0 ] != matriz [ k + 1 ] [ ' 0 ' )"
      ],
      "err_line": 24,
      "err_msg": "expected ‘]’ before ‘)’ token"
    },
    {
      "mod_line": [
        4,
        17
      ],
      "mod_code": [
        "memset ( matriz , value , sizeof ( matriz ) ) ;",
        "pass = pass = true ;"
      ],
      "err_line": 4,
      "err_msg": "‘value’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        17,
        25
      ],
      "mod_code": [
        "memset ( matriz , value , sizeof ( matriz ) ) ;",
        "pass = pass = true ;",
        "pass = pass = true ;"
      ],
      "err_line": 4,
      "err_msg": "‘value’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        17,
        25,
        6
      ],
      "mod_code": [
        "memset ( matriz , value , sizeof ( matriz ) ) ;",
        "pass = pass = true ;",
        "pass = pass = true ;",
        "gets ( cin , aux ) ;"
      ],
      "err_line": 4,
      "err_msg": "‘value’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        17,
        25,
        24
      ],
      "mod_code": [
        "memset ( matriz , value , sizeof ( matriz ) ) ;",
        "pass = pass = true ;",
        "pass = pass = true ;",
        "if ( matriz [ k ] [ 0 ] != matriz [ k + 1 ] [ ' 0 ' )"
      ],
      "err_line": 4,
      "err_msg": "‘value’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        17,
        25,
        3
      ],
      "mod_code": [
        "memset ( matriz , value , sizeof ( matriz ) ) ;",
        "pass = pass = true ;",
        "pass = pass = true ;",
        "string n ;"
      ],
      "err_line": 3,
      "err_msg": "conflicting declaration ‘std::__cxx11::string n’"
    },
    {
      "mod_line": [
        4,
        17,
        6
      ],
      "mod_code": [
        "memset ( matriz , value , sizeof ( matriz ) ) ;",
        "pass = pass = true ;",
        "gets ( cin , aux ) ;"
      ],
      "err_line": 4,
      "err_msg": "‘value’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        17,
        6,
        24
      ],
      "mod_code": [
        "memset ( matriz , value , sizeof ( matriz ) ) ;",
        "pass = pass = true ;",
        "gets ( cin , aux ) ;",
        "if ( matriz [ k ] [ 0 ] != matriz [ k + 1 ] [ ' 0 ' )"
      ],
      "err_line": 4,
      "err_msg": "‘value’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        17,
        6,
        3
      ],
      "mod_code": [
        "memset ( matriz , value , sizeof ( matriz ) ) ;",
        "pass = pass = true ;",
        "gets ( cin , aux ) ;",
        "string n ;"
      ],
      "err_line": 3,
      "err_msg": "conflicting declaration ‘std::__cxx11::string n’"
    },
    {
      "mod_line": [
        4,
        17,
        24
      ],
      "mod_code": [
        "memset ( matriz , value , sizeof ( matriz ) ) ;",
        "pass = pass = true ;",
        "if ( matriz [ k ] [ 0 ] != matriz [ k + 1 ] [ ' 0 ' )"
      ],
      "err_line": 4,
      "err_msg": "‘value’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        17,
        24,
        3
      ],
      "mod_code": [
        "memset ( matriz , value , sizeof ( matriz ) ) ;",
        "pass = pass = true ;",
        "if ( matriz [ k ] [ 0 ] != matriz [ k + 1 ] [ ' 0 ' )",
        "string n ;"
      ],
      "err_line": 3,
      "err_msg": "conflicting declaration ‘std::__cxx11::string n’"
    },
    {
      "mod_line": [
        4,
        17,
        3
      ],
      "mod_code": [
        "memset ( matriz , value , sizeof ( matriz ) ) ;",
        "pass = pass = true ;",
        "string n ;"
      ],
      "err_line": 3,
      "err_msg": "conflicting declaration ‘std::__cxx11::string n’"
    },
    {
      "mod_line": [
        4,
        25
      ],
      "mod_code": [
        "memset ( matriz , value , sizeof ( matriz ) ) ;",
        "pass = pass = true ;"
      ],
      "err_line": 4,
      "err_msg": "‘value’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        25,
        6
      ],
      "mod_code": [
        "memset ( matriz , value , sizeof ( matriz ) ) ;",
        "pass = pass = true ;",
        "gets ( cin , aux ) ;"
      ],
      "err_line": 4,
      "err_msg": "‘value’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        25,
        6,
        24
      ],
      "mod_code": [
        "memset ( matriz , value , sizeof ( matriz ) ) ;",
        "pass = pass = true ;",
        "gets ( cin , aux ) ;",
        "if ( matriz [ k ] [ 0 ] != matriz [ k + 1 ] [ ' 0 ' )"
      ],
      "err_line": 4,
      "err_msg": "‘value’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        25,
        6,
        3
      ],
      "mod_code": [
        "memset ( matriz , value , sizeof ( matriz ) ) ;",
        "pass = pass = true ;",
        "gets ( cin , aux ) ;",
        "string n ;"
      ],
      "err_line": 3,
      "err_msg": "conflicting declaration ‘std::__cxx11::string n’"
    },
    {
      "mod_line": [
        4,
        25,
        24
      ],
      "mod_code": [
        "memset ( matriz , value , sizeof ( matriz ) ) ;",
        "pass = pass = true ;",
        "if ( matriz [ k ] [ 0 ] != matriz [ k + 1 ] [ ' 0 ' )"
      ],
      "err_line": 4,
      "err_msg": "‘value’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        25,
        24,
        3
      ],
      "mod_code": [
        "memset ( matriz , value , sizeof ( matriz ) ) ;",
        "pass = pass = true ;",
        "if ( matriz [ k ] [ 0 ] != matriz [ k + 1 ] [ ' 0 ' )",
        "string n ;"
      ],
      "err_line": 3,
      "err_msg": "conflicting declaration ‘std::__cxx11::string n’"
    },
    {
      "mod_line": [
        4,
        25,
        3
      ],
      "mod_code": [
        "memset ( matriz , value , sizeof ( matriz ) ) ;",
        "pass = pass = true ;",
        "string n ;"
      ],
      "err_line": 3,
      "err_msg": "conflicting declaration ‘std::__cxx11::string n’"
    },
    {
      "mod_line": [
        4,
        6
      ],
      "mod_code": [
        "memset ( matriz , value , sizeof ( matriz ) ) ;",
        "gets ( cin , aux ) ;"
      ],
      "err_line": 4,
      "err_msg": "‘value’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        6,
        24
      ],
      "mod_code": [
        "memset ( matriz , value , sizeof ( matriz ) ) ;",
        "gets ( cin , aux ) ;",
        "if ( matriz [ k ] [ 0 ] != matriz [ k + 1 ] [ ' 0 ' )"
      ],
      "err_line": 4,
      "err_msg": "‘value’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        6,
        24,
        3
      ],
      "mod_code": [
        "memset ( matriz , value , sizeof ( matriz ) ) ;",
        "gets ( cin , aux ) ;",
        "if ( matriz [ k ] [ 0 ] != matriz [ k + 1 ] [ ' 0 ' )",
        "string n ;"
      ],
      "err_line": 3,
      "err_msg": "conflicting declaration ‘std::__cxx11::string n’"
    },
    {
      "mod_line": [
        4,
        6,
        3
      ],
      "mod_code": [
        "memset ( matriz , value , sizeof ( matriz ) ) ;",
        "gets ( cin , aux ) ;",
        "string n ;"
      ],
      "err_line": 3,
      "err_msg": "conflicting declaration ‘std::__cxx11::string n’"
    },
    {
      "mod_line": [
        4,
        24
      ],
      "mod_code": [
        "memset ( matriz , value , sizeof ( matriz ) ) ;",
        "if ( matriz [ k ] [ 0 ] != matriz [ k + 1 ] [ ' 0 ' )"
      ],
      "err_line": 4,
      "err_msg": "‘value’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        24,
        3
      ],
      "mod_code": [
        "memset ( matriz , value , sizeof ( matriz ) ) ;",
        "if ( matriz [ k ] [ 0 ] != matriz [ k + 1 ] [ ' 0 ' )",
        "string n ;"
      ],
      "err_line": 3,
      "err_msg": "conflicting declaration ‘std::__cxx11::string n’"
    },
    {
      "mod_line": [
        4,
        3
      ],
      "mod_code": [
        "memset ( matriz , value , sizeof ( matriz ) ) ;",
        "string n ;"
      ],
      "err_line": 3,
      "err_msg": "conflicting declaration ‘std::__cxx11::string n’"
    },
    {
      "mod_line": [
        17,
        25,
        6
      ],
      "mod_code": [
        "pass = pass = true ;",
        "pass = pass = true ;",
        "gets ( cin , aux ) ;"
      ],
      "err_line": 6,
      "err_msg": "invalid user-defined conversion from ‘std::istream {aka std::basic_istream<char>}’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        17,
        25,
        6,
        24
      ],
      "mod_code": [
        "pass = pass = true ;",
        "pass = pass = true ;",
        "gets ( cin , aux ) ;",
        "if ( matriz [ k ] [ 0 ] != matriz [ k + 1 ] [ ' 0 ' )"
      ],
      "err_line": 6,
      "err_msg": "invalid user-defined conversion from ‘std::istream {aka std::basic_istream<char>}’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        17,
        25,
        6,
        3
      ],
      "mod_code": [
        "pass = pass = true ;",
        "pass = pass = true ;",
        "gets ( cin , aux ) ;",
        "string n ;"
      ],
      "err_line": 3,
      "err_msg": "conflicting declaration ‘std::__cxx11::string n’"
    },
    {
      "mod_line": [
        17,
        25,
        24
      ],
      "mod_code": [
        "pass = pass = true ;",
        "pass = pass = true ;",
        "if ( matriz [ k ] [ 0 ] != matriz [ k + 1 ] [ ' 0 ' )"
      ],
      "err_line": 24,
      "err_msg": "expected ‘]’ before ‘)’ token"
    },
    {
      "mod_line": [
        17,
        25,
        24,
        3
      ],
      "mod_code": [
        "pass = pass = true ;",
        "pass = pass = true ;",
        "if ( matriz [ k ] [ 0 ] != matriz [ k + 1 ] [ ' 0 ' )",
        "string n ;"
      ],
      "err_line": 3,
      "err_msg": "conflicting declaration ‘std::__cxx11::string n’"
    },
    {
      "mod_line": [
        17,
        25,
        3
      ],
      "mod_code": [
        "pass = pass = true ;",
        "pass = pass = true ;",
        "string n ;"
      ],
      "err_line": 3,
      "err_msg": "conflicting declaration ‘std::__cxx11::string n’"
    },
    {
      "mod_line": [
        17,
        6
      ],
      "mod_code": [
        "pass = pass = true ;",
        "gets ( cin , aux ) ;"
      ],
      "err_line": 6,
      "err_msg": "invalid user-defined conversion from ‘std::istream {aka std::basic_istream<char>}’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        17,
        6,
        24
      ],
      "mod_code": [
        "pass = pass = true ;",
        "gets ( cin , aux ) ;",
        "if ( matriz [ k ] [ 0 ] != matriz [ k + 1 ] [ ' 0 ' )"
      ],
      "err_line": 6,
      "err_msg": "invalid user-defined conversion from ‘std::istream {aka std::basic_istream<char>}’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        17,
        6,
        24,
        3
      ],
      "mod_code": [
        "pass = pass = true ;",
        "gets ( cin , aux ) ;",
        "if ( matriz [ k ] [ 0 ] != matriz [ k + 1 ] [ ' 0 ' )",
        "string n ;"
      ],
      "err_line": 3,
      "err_msg": "conflicting declaration ‘std::__cxx11::string n’"
    },
    {
      "mod_line": [
        17,
        6,
        3
      ],
      "mod_code": [
        "pass = pass = true ;",
        "gets ( cin , aux ) ;",
        "string n ;"
      ],
      "err_line": 3,
      "err_msg": "conflicting declaration ‘std::__cxx11::string n’"
    },
    {
      "mod_line": [
        17,
        24
      ],
      "mod_code": [
        "pass = pass = true ;",
        "if ( matriz [ k ] [ 0 ] != matriz [ k + 1 ] [ ' 0 ' )"
      ],
      "err_line": 24,
      "err_msg": "expected ‘]’ before ‘)’ token"
    },
    {
      "mod_line": [
        17,
        24,
        3
      ],
      "mod_code": [
        "pass = pass = true ;",
        "if ( matriz [ k ] [ 0 ] != matriz [ k + 1 ] [ ' 0 ' )",
        "string n ;"
      ],
      "err_line": 3,
      "err_msg": "conflicting declaration ‘std::__cxx11::string n’"
    },
    {
      "mod_line": [
        17,
        3
      ],
      "mod_code": [
        "pass = pass = true ;",
        "string n ;"
      ],
      "err_line": 3,
      "err_msg": "conflicting declaration ‘std::__cxx11::string n’"
    },
    {
      "mod_line": [
        25,
        6
      ],
      "mod_code": [
        "pass = pass = true ;",
        "gets ( cin , aux ) ;"
      ],
      "err_line": 6,
      "err_msg": "invalid user-defined conversion from ‘std::istream {aka std::basic_istream<char>}’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        25,
        6,
        24
      ],
      "mod_code": [
        "pass = pass = true ;",
        "gets ( cin , aux ) ;",
        "if ( matriz [ k ] [ 0 ] != matriz [ k + 1 ] [ ' 0 ' )"
      ],
      "err_line": 6,
      "err_msg": "invalid user-defined conversion from ‘std::istream {aka std::basic_istream<char>}’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        25,
        6,
        24,
        3
      ],
      "mod_code": [
        "pass = pass = true ;",
        "gets ( cin , aux ) ;",
        "if ( matriz [ k ] [ 0 ] != matriz [ k + 1 ] [ ' 0 ' )",
        "string n ;"
      ],
      "err_line": 3,
      "err_msg": "conflicting declaration ‘std::__cxx11::string n’"
    },
    {
      "mod_line": [
        25,
        6,
        3
      ],
      "mod_code": [
        "pass = pass = true ;",
        "gets ( cin , aux ) ;",
        "string n ;"
      ],
      "err_line": 3,
      "err_msg": "conflicting declaration ‘std::__cxx11::string n’"
    },
    {
      "mod_line": [
        25,
        24
      ],
      "mod_code": [
        "pass = pass = true ;",
        "if ( matriz [ k ] [ 0 ] != matriz [ k + 1 ] [ ' 0 ' )"
      ],
      "err_line": 24,
      "err_msg": "expected ‘]’ before ‘)’ token"
    },
    {
      "mod_line": [
        25,
        24,
        3
      ],
      "mod_code": [
        "pass = pass = true ;",
        "if ( matriz [ k ] [ 0 ] != matriz [ k + 1 ] [ ' 0 ' )",
        "string n ;"
      ],
      "err_line": 3,
      "err_msg": "conflicting declaration ‘std::__cxx11::string n’"
    },
    {
      "mod_line": [
        25,
        3
      ],
      "mod_code": [
        "pass = pass = true ;",
        "string n ;"
      ],
      "err_line": 3,
      "err_msg": "conflicting declaration ‘std::__cxx11::string n’"
    },
    {
      "mod_line": [
        6,
        24
      ],
      "mod_code": [
        "gets ( cin , aux ) ;",
        "if ( matriz [ k ] [ 0 ] != matriz [ k + 1 ] [ ' 0 ' )"
      ],
      "err_line": 6,
      "err_msg": "invalid user-defined conversion from ‘std::istream {aka std::basic_istream<char>}’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        6,
        24,
        3
      ],
      "mod_code": [
        "gets ( cin , aux ) ;",
        "if ( matriz [ k ] [ 0 ] != matriz [ k + 1 ] [ ' 0 ' )",
        "string n ;"
      ],
      "err_line": 3,
      "err_msg": "conflicting declaration ‘std::__cxx11::string n’"
    },
    {
      "mod_line": [
        6,
        3
      ],
      "mod_code": [
        "gets ( cin , aux ) ;",
        "string n ;"
      ],
      "err_line": 3,
      "err_msg": "conflicting declaration ‘std::__cxx11::string n’"
    },
    {
      "mod_line": [
        24,
        3
      ],
      "mod_code": [
        "if ( matriz [ k ] [ 0 ] != matriz [ k + 1 ] [ ' 0 ' )",
        "string n ;"
      ],
      "err_line": 3,
      "err_msg": "conflicting declaration ‘std::__cxx11::string n’"
    }
  ]
}