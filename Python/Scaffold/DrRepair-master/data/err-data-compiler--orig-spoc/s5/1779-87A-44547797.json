{
  "meta": {
    "index": 1779,
    "hitid": "3AQN9REUTFAW7KWTBOEGYR15R5FYD8",
    "workerid": "A1NBHCFZKJGHKW",
    "probid": "87A",
    "subid": "44547797"
  },
  "lines": [
    {
      "line": 0,
      "text": "INF = const int with INF = 0x3f3f3f3f",
      "code": "const int INF = 0x3f3f3f3f ;",
      "indent": 0
    },
    {
      "line": 1,
      "text": "in function gcd taking long long a , long long b and returning long long",
      "code": "long long gcd ( long long a , long long b )",
      "indent": 0
    },
    {
      "line": 2,
      "text": "if not b return a",
      "code": "if ( ! b ) return a ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "return gcd of b , a mod b",
      "code": "return gcd ( b , a % b ) ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    },
    {
      "line": 5,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 6,
      "text": "i , j , k , l = long long with l = 0",
      "code": "long long i , j , k , l = 0 ;",
      "indent": 1
    },
    {
      "line": 7,
      "text": "n , m , s = long long with s = 0",
      "code": "long long n , m , s = 0 ;",
      "indent": 1
    },
    {
      "line": 8,
      "text": "rad n then m",
      "code": "cin >> n >> m ;",
      "indent": 1
    },
    {
      "line": 9,
      "text": "if n > m",
      "code": "if ( n > m )",
      "indent": 1
    },
    {
      "line": 10,
      "text": "set k to gcd of n , m",
      "code": "k = gcd ( n , m ) ;",
      "indent": 2
    },
    {
      "line": 11,
      "text": "set n to n / k",
      "code": "n /= k ;",
      "indent": 2
    },
    {
      "line": 12,
      "text": "set m to m / k",
      "code": "m /= k ;",
      "indent": 2
    },
    {
      "line": 13,
      "text": "set k to n * m",
      "code": "k = n * m ;",
      "indent": 2
    },
    {
      "line": 14,
      "text": "set j to k / n",
      "code": "j = k / n ;",
      "indent": 2
    },
    {
      "line": 15,
      "text": "set s to 0",
      "code": "s = 0 ;",
      "indent": 2
    },
    {
      "line": 16,
      "text": "for i = 1 to j inclusive increment s by i",
      "code": "for ( i = 1 ; i <= j ; i ++ ) s += i ;",
      "indent": 2
    },
    {
      "line": 17,
      "text": "if s is k - s",
      "code": "if ( s == k - s )",
      "indent": 2
    },
    {
      "line": 18,
      "text": "print \" Equal \"",
      "code": "cout << \" Equal \" << endl ;",
      "indent": 3
    },
    {
      "line": 19,
      "text": "else",
      "code": "else",
      "indent": 2
    },
    {
      "line": 20,
      "text": "if k - s > s",
      "code": "if ( k - s > s )",
      "indent": 3
    },
    {
      "line": 21,
      "text": "print \" Masha \"",
      "code": "cout << \" Masha \" << endl ;",
      "indent": 4
    },
    {
      "line": 22,
      "text": "else",
      "code": "else",
      "indent": 3
    },
    {
      "line": 23,
      "text": "print \" Dasha \"",
      "code": "cout << \" Dasha \" << endl ;",
      "indent": 4
    },
    {
      "line": 24,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 25,
      "text": "else",
      "code": "else",
      "indent": 1
    },
    {
      "line": 26,
      "text": "set k to gcd of m , n",
      "code": "k = gcd ( m , n ) ;",
      "indent": 2
    },
    {
      "line": 27,
      "text": "set m to m / k",
      "code": "m /= k ;",
      "indent": 2
    },
    {
      "line": 28,
      "text": "set n to n / k",
      "code": "n /= k ;",
      "indent": 2
    },
    {
      "line": 29,
      "text": "set k to m * n",
      "code": "k = m * n ;",
      "indent": 2
    },
    {
      "line": 30,
      "text": "set j to k / m",
      "code": "j = k / m ;",
      "indent": 2
    },
    {
      "line": 31,
      "text": "set s to 0",
      "code": "s = 0 ;",
      "indent": 2
    },
    {
      "line": 32,
      "text": "for i = 1 to j inclusive increment s by i",
      "code": "for ( i = 1 ; i <= j ; i ++ ) s += i ;",
      "indent": 2
    },
    {
      "line": 33,
      "text": "if s is k - s",
      "code": "if ( s == k - s )",
      "indent": 2
    },
    {
      "line": 34,
      "text": "print \" Equal \"",
      "code": "cout << \" Equal \" << endl ;",
      "indent": 3
    },
    {
      "line": 35,
      "text": "else",
      "code": "else",
      "indent": 2
    },
    {
      "line": 36,
      "text": "if k - s > s",
      "code": "if ( k - s > s )",
      "indent": 3
    },
    {
      "line": 37,
      "text": "print \" Dasha \"",
      "code": "cout << \" Dasha \" << endl ;",
      "indent": 4
    },
    {
      "line": 38,
      "text": "else",
      "code": "else",
      "indent": 3
    },
    {
      "line": 39,
      "text": "print \" Masha \"",
      "code": "cout << \" Masha \" << endl ;",
      "indent": 4
    },
    {
      "line": 40,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 41,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 42,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 43,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        1
      ],
      "mod_code": [
        "long long gcd ( long long a , long long b ) ;"
      ],
      "err_line": 2,
      "err_msg": "expected unqualified-id before ‘{’ token"
    }
  ]
}