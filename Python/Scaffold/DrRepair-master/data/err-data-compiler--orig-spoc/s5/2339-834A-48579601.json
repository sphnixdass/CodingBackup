{
  "meta": {
    "index": 2339,
    "hitid": "3NC6WP7WJHERRL1KDI1I5I5ANDPWWK",
    "workerid": "A1APYLD4DUK33J",
    "probid": "834A",
    "subid": "48579601"
  },
  "lines": [
    {
      "line": 0,
      "text": "declare char_to_angle with character c as argument , returning integer",
      "code": "int char_to_angle ( char c )",
      "indent": 0
    },
    {
      "line": 1,
      "text": "if c is ' ^ ' , return 0 from function",
      "code": "if ( c == ' ^ ' ) return 0 ;",
      "indent": 1
    },
    {
      "line": 2,
      "text": "if c is ' > ' , return 90",
      "code": "if ( c == ' > ' ) return 90 ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "if c is ' v ' , return 180",
      "code": "if ( c == ' v ' ) return 180 ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "if c is ' < ' , return 270",
      "code": "if ( c == ' < ' ) return 270 ;",
      "indent": 1
    },
    {
      "line": 5,
      "text": "return - 1",
      "code": "return - 1 ;",
      "indent": 1
    },
    {
      "line": 6,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    },
    {
      "line": 7,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 8,
      "text": "declare characters c1 , c2",
      "code": "char c1 , c2 ;",
      "indent": 1
    },
    {
      "line": 9,
      "text": "read c1 , c2",
      "code": "cin >> c1 >> c2 ;",
      "indent": 1
    },
    {
      "line": 10,
      "text": "declare 64 bit integer n",
      "code": "int64_t n ;",
      "indent": 1
    },
    {
      "line": 11,
      "text": "read n",
      "code": "cin >> n ;",
      "indent": 1
    },
    {
      "line": 12,
      "text": "declare integer d1 = result of run char_to_angle with c1 as argument",
      "code": "int d1 = char_to_angle ( c1 ) ;",
      "indent": 1
    },
    {
      "line": 13,
      "text": "declare integer d2 = result of run char_to_angle ( c2 )",
      "code": "int d2 = char_to_angle ( c2 ) ;",
      "indent": 1
    },
    {
      "line": 14,
      "text": "declare string ans",
      "code": "string ans ;",
      "indent": 1
    },
    {
      "line": 15,
      "text": "if absolute value of ( d1 - d2 ) is 180 or d1 is d2",
      "code": "if ( abs ( d1 - d2 ) == 180 || d1 == d2 )",
      "indent": 1
    },
    {
      "line": 16,
      "text": "let ans be \" undefined \"",
      "code": "ans = \" undefined \" ;",
      "indent": 2
    },
    {
      "line": 17,
      "text": "else",
      "code": "else",
      "indent": 1
    },
    {
      "line": 18,
      "text": "declare integer diff = d2 - d1",
      "code": "int diff = d2 - d1 ;",
      "indent": 2
    },
    {
      "line": 19,
      "text": "if diff is 90 and n % 4 is 1 , let ans be \" cw \"",
      "code": "if ( diff == 90 && n % 4 == 1 ) { ans = \" cw \" ; }",
      "indent": 2
    },
    {
      "line": 20,
      "text": "if diff is - 90 and n % 4 is 1 , let ans be \" ccw \"",
      "code": "if ( diff == - 90 && n % 4 == 1 ) { ans = \" ccw \" ; }",
      "indent": 2
    },
    {
      "line": 21,
      "text": "if diff is 90 and n % 4 is 3 , let ans be \" ccw \"",
      "code": "if ( diff == 90 && n % 4 == 3 ) { ans = \" ccw \" ; }",
      "indent": 2
    },
    {
      "line": 22,
      "text": "if diff is - 90 and n % 4 is 3 , let ans be \" cw \"",
      "code": "if ( diff == - 90 && n % 4 == 3 ) { ans = \" cw \" ; }",
      "indent": 2
    },
    {
      "line": 23,
      "text": "if diff is 270 and n % 4 is 1 , let ans be \" ccw \"",
      "code": "if ( diff == 270 && n % 4 == 1 ) { ans = \" ccw \" ; }",
      "indent": 2
    },
    {
      "line": 24,
      "text": "if diff is - 270 and n % 4 is 1 , let ans be \" cw \"",
      "code": "if ( diff == - 270 && n % 4 == 1 ) { ans = \" cw \" ; }",
      "indent": 2
    },
    {
      "line": 25,
      "text": "if diff is 270 and n % 4 is 3 , let ans be \" cw \"",
      "code": "if ( diff == 270 && n % 4 == 3 ) { ans = \" cw \" ; }",
      "indent": 2
    },
    {
      "line": 26,
      "text": "if diff is - 270 and n % 4 is 3 , let ans be \" ccw \"",
      "code": "if ( diff == - 270 && n % 4 == 3 ) { ans = \" ccw \" ; }",
      "indent": 2
    },
    {
      "line": 27,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 28,
      "text": "print ans and newline",
      "code": "cout << ans << endl ;",
      "indent": 1
    },
    {
      "line": 29,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 30,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        8
      ],
      "mod_code": [
        "characters , c2 ;"
      ],
      "err_line": 8,
      "err_msg": "‘characters’ was not declared in this scope"
    },
    {
      "mod_line": [
        9
      ],
      "mod_code": [
        "while ( cin >> c1 >> c2 )"
      ],
      "err_line": 11,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        11
      ],
      "mod_code": [
        "while ( cin >> n )"
      ],
      "err_line": 15,
      "err_msg": "‘d1’ was not declared in this scope"
    },
    {
      "mod_line": [
        12
      ],
      "mod_code": [
        "int d1 = ( char_to_angle ) ;"
      ],
      "err_line": 12,
      "err_msg": "invalid conversion from ‘int (*)(char)’ to ‘int’ [-fpermissive]"
    },
    {
      "mod_line": [
        14
      ],
      "mod_code": [
        "string n ;"
      ],
      "err_line": 14,
      "err_msg": "conflicting declaration ‘std::__cxx11::string n’"
    },
    {
      "mod_line": [
        18
      ],
      "mod_code": [
        "int diff -= d1 ;"
      ],
      "err_line": 18,
      "err_msg": "expected initializer before ‘-=’ token"
    },
    {
      "mod_line": [
        16,
        8
      ],
      "mod_code": [
        "ans = \" \" ;",
        "characters , c2 ;"
      ],
      "err_line": 8,
      "err_msg": "‘characters’ was not declared in this scope"
    },
    {
      "mod_line": [
        16,
        8,
        15
      ],
      "mod_code": [
        "ans = \" \" ;",
        "characters , c2 ;",
        "if ( abs ( d1 - d2 ) == ' 180 ' || abs ( d2 ) == d2 )"
      ],
      "err_line": 8,
      "err_msg": "‘characters’ was not declared in this scope"
    },
    {
      "mod_line": [
        16,
        8,
        15,
        12
      ],
      "mod_code": [
        "ans = \" \" ;",
        "characters , c2 ;",
        "if ( abs ( d1 - d2 ) == ' 180 ' || abs ( d2 ) == d2 )",
        "int d1 = ( char_to_angle ) ;"
      ],
      "err_line": 8,
      "err_msg": "‘characters’ was not declared in this scope"
    },
    {
      "mod_line": [
        16,
        8,
        15,
        0
      ],
      "mod_code": [
        "ans = \" \" ;",
        "characters , c2 ;",
        "if ( abs ( d1 - d2 ) == ' 180 ' || abs ( d2 ) == d2 )",
        "char char_to_angle ( char c )"
      ],
      "err_line": 8,
      "err_msg": "‘characters’ was not declared in this scope"
    },
    {
      "mod_line": [
        16,
        8,
        15,
        9
      ],
      "mod_code": [
        "ans = \" \" ;",
        "characters , c2 ;",
        "if ( abs ( d1 - d2 ) == ' 180 ' || abs ( d2 ) == d2 )",
        "while ( cin >> c1 >> c2 )"
      ],
      "err_line": 8,
      "err_msg": "‘characters’ was not declared in this scope"
    },
    {
      "mod_line": [
        16,
        8,
        12
      ],
      "mod_code": [
        "ans = \" \" ;",
        "characters , c2 ;",
        "int d1 = ( char_to_angle ) ;"
      ],
      "err_line": 8,
      "err_msg": "‘characters’ was not declared in this scope"
    },
    {
      "mod_line": [
        16,
        8,
        12,
        0
      ],
      "mod_code": [
        "ans = \" \" ;",
        "characters , c2 ;",
        "int d1 = ( char_to_angle ) ;",
        "char char_to_angle ( char c )"
      ],
      "err_line": 8,
      "err_msg": "‘characters’ was not declared in this scope"
    },
    {
      "mod_line": [
        16,
        8,
        12,
        9
      ],
      "mod_code": [
        "ans = \" \" ;",
        "characters , c2 ;",
        "int d1 = ( char_to_angle ) ;",
        "while ( cin >> c1 >> c2 )"
      ],
      "err_line": 8,
      "err_msg": "‘characters’ was not declared in this scope"
    },
    {
      "mod_line": [
        16,
        8,
        0
      ],
      "mod_code": [
        "ans = \" \" ;",
        "characters , c2 ;",
        "char char_to_angle ( char c )"
      ],
      "err_line": 8,
      "err_msg": "‘characters’ was not declared in this scope"
    },
    {
      "mod_line": [
        16,
        8,
        0,
        9
      ],
      "mod_code": [
        "ans = \" \" ;",
        "characters , c2 ;",
        "char char_to_angle ( char c )",
        "while ( cin >> c1 >> c2 )"
      ],
      "err_line": 8,
      "err_msg": "‘characters’ was not declared in this scope"
    },
    {
      "mod_line": [
        16,
        8,
        9
      ],
      "mod_code": [
        "ans = \" \" ;",
        "characters , c2 ;",
        "while ( cin >> c1 >> c2 )"
      ],
      "err_line": 8,
      "err_msg": "‘characters’ was not declared in this scope"
    },
    {
      "mod_line": [
        16,
        15,
        12
      ],
      "mod_code": [
        "ans = \" \" ;",
        "if ( abs ( d1 - d2 ) == ' 180 ' || abs ( d2 ) == d2 )",
        "int d1 = ( char_to_angle ) ;"
      ],
      "err_line": 12,
      "err_msg": "invalid conversion from ‘int (*)(char)’ to ‘int’ [-fpermissive]"
    },
    {
      "mod_line": [
        16,
        15,
        12,
        0
      ],
      "mod_code": [
        "ans = \" \" ;",
        "if ( abs ( d1 - d2 ) == ' 180 ' || abs ( d2 ) == d2 )",
        "int d1 = ( char_to_angle ) ;",
        "char char_to_angle ( char c )"
      ],
      "err_line": 12,
      "err_msg": "invalid conversion from ‘char (*)(char)’ to ‘int’ [-fpermissive]"
    },
    {
      "mod_line": [
        16,
        15,
        12,
        9
      ],
      "mod_code": [
        "ans = \" \" ;",
        "if ( abs ( d1 - d2 ) == ' 180 ' || abs ( d2 ) == d2 )",
        "int d1 = ( char_to_angle ) ;",
        "while ( cin >> c1 >> c2 )"
      ],
      "err_line": 11,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        16,
        15,
        0,
        9
      ],
      "mod_code": [
        "ans = \" \" ;",
        "if ( abs ( d1 - d2 ) == ' 180 ' || abs ( d2 ) == d2 )",
        "char char_to_angle ( char c )",
        "while ( cin >> c1 >> c2 )"
      ],
      "err_line": 11,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        16,
        15,
        9
      ],
      "mod_code": [
        "ans = \" \" ;",
        "if ( abs ( d1 - d2 ) == ' 180 ' || abs ( d2 ) == d2 )",
        "while ( cin >> c1 >> c2 )"
      ],
      "err_line": 11,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        16,
        12
      ],
      "mod_code": [
        "ans = \" \" ;",
        "int d1 = ( char_to_angle ) ;"
      ],
      "err_line": 12,
      "err_msg": "invalid conversion from ‘int (*)(char)’ to ‘int’ [-fpermissive]"
    },
    {
      "mod_line": [
        16,
        12,
        0
      ],
      "mod_code": [
        "ans = \" \" ;",
        "int d1 = ( char_to_angle ) ;",
        "char char_to_angle ( char c )"
      ],
      "err_line": 12,
      "err_msg": "invalid conversion from ‘char (*)(char)’ to ‘int’ [-fpermissive]"
    },
    {
      "mod_line": [
        16,
        12,
        0,
        9
      ],
      "mod_code": [
        "ans = \" \" ;",
        "int d1 = ( char_to_angle ) ;",
        "char char_to_angle ( char c )",
        "while ( cin >> c1 >> c2 )"
      ],
      "err_line": 11,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        16,
        12,
        9
      ],
      "mod_code": [
        "ans = \" \" ;",
        "int d1 = ( char_to_angle ) ;",
        "while ( cin >> c1 >> c2 )"
      ],
      "err_line": 11,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        16,
        0,
        9
      ],
      "mod_code": [
        "ans = \" \" ;",
        "char char_to_angle ( char c )",
        "while ( cin >> c1 >> c2 )"
      ],
      "err_line": 11,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        16,
        9
      ],
      "mod_code": [
        "ans = \" \" ;",
        "while ( cin >> c1 >> c2 )"
      ],
      "err_line": 11,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        8,
        15
      ],
      "mod_code": [
        "characters , c2 ;",
        "if ( abs ( d1 - d2 ) == ' 180 ' || abs ( d2 ) == d2 )"
      ],
      "err_line": 8,
      "err_msg": "‘characters’ was not declared in this scope"
    },
    {
      "mod_line": [
        8,
        15,
        12
      ],
      "mod_code": [
        "characters , c2 ;",
        "if ( abs ( d1 - d2 ) == ' 180 ' || abs ( d2 ) == d2 )",
        "int d1 = ( char_to_angle ) ;"
      ],
      "err_line": 8,
      "err_msg": "‘characters’ was not declared in this scope"
    },
    {
      "mod_line": [
        8,
        15,
        12,
        0
      ],
      "mod_code": [
        "characters , c2 ;",
        "if ( abs ( d1 - d2 ) == ' 180 ' || abs ( d2 ) == d2 )",
        "int d1 = ( char_to_angle ) ;",
        "char char_to_angle ( char c )"
      ],
      "err_line": 8,
      "err_msg": "‘characters’ was not declared in this scope"
    },
    {
      "mod_line": [
        8,
        15,
        12,
        9
      ],
      "mod_code": [
        "characters , c2 ;",
        "if ( abs ( d1 - d2 ) == ' 180 ' || abs ( d2 ) == d2 )",
        "int d1 = ( char_to_angle ) ;",
        "while ( cin >> c1 >> c2 )"
      ],
      "err_line": 8,
      "err_msg": "‘characters’ was not declared in this scope"
    },
    {
      "mod_line": [
        8,
        15,
        0
      ],
      "mod_code": [
        "characters , c2 ;",
        "if ( abs ( d1 - d2 ) == ' 180 ' || abs ( d2 ) == d2 )",
        "char char_to_angle ( char c )"
      ],
      "err_line": 8,
      "err_msg": "‘characters’ was not declared in this scope"
    },
    {
      "mod_line": [
        8,
        15,
        0,
        9
      ],
      "mod_code": [
        "characters , c2 ;",
        "if ( abs ( d1 - d2 ) == ' 180 ' || abs ( d2 ) == d2 )",
        "char char_to_angle ( char c )",
        "while ( cin >> c1 >> c2 )"
      ],
      "err_line": 8,
      "err_msg": "‘characters’ was not declared in this scope"
    },
    {
      "mod_line": [
        8,
        15,
        9
      ],
      "mod_code": [
        "characters , c2 ;",
        "if ( abs ( d1 - d2 ) == ' 180 ' || abs ( d2 ) == d2 )",
        "while ( cin >> c1 >> c2 )"
      ],
      "err_line": 8,
      "err_msg": "‘characters’ was not declared in this scope"
    },
    {
      "mod_line": [
        8,
        12
      ],
      "mod_code": [
        "characters , c2 ;",
        "int d1 = ( char_to_angle ) ;"
      ],
      "err_line": 8,
      "err_msg": "‘characters’ was not declared in this scope"
    },
    {
      "mod_line": [
        8,
        12,
        0
      ],
      "mod_code": [
        "characters , c2 ;",
        "int d1 = ( char_to_angle ) ;",
        "char char_to_angle ( char c )"
      ],
      "err_line": 8,
      "err_msg": "‘characters’ was not declared in this scope"
    },
    {
      "mod_line": [
        8,
        12,
        0,
        9
      ],
      "mod_code": [
        "characters , c2 ;",
        "int d1 = ( char_to_angle ) ;",
        "char char_to_angle ( char c )",
        "while ( cin >> c1 >> c2 )"
      ],
      "err_line": 8,
      "err_msg": "‘characters’ was not declared in this scope"
    },
    {
      "mod_line": [
        8,
        12,
        9
      ],
      "mod_code": [
        "characters , c2 ;",
        "int d1 = ( char_to_angle ) ;",
        "while ( cin >> c1 >> c2 )"
      ],
      "err_line": 8,
      "err_msg": "‘characters’ was not declared in this scope"
    },
    {
      "mod_line": [
        8,
        0
      ],
      "mod_code": [
        "characters , c2 ;",
        "char char_to_angle ( char c )"
      ],
      "err_line": 8,
      "err_msg": "‘characters’ was not declared in this scope"
    },
    {
      "mod_line": [
        8,
        0,
        9
      ],
      "mod_code": [
        "characters , c2 ;",
        "char char_to_angle ( char c )",
        "while ( cin >> c1 >> c2 )"
      ],
      "err_line": 8,
      "err_msg": "‘characters’ was not declared in this scope"
    },
    {
      "mod_line": [
        8,
        9
      ],
      "mod_code": [
        "characters , c2 ;",
        "while ( cin >> c1 >> c2 )"
      ],
      "err_line": 8,
      "err_msg": "‘characters’ was not declared in this scope"
    },
    {
      "mod_line": [
        15,
        12
      ],
      "mod_code": [
        "if ( abs ( d1 - d2 ) == ' 180 ' || abs ( d2 ) == d2 )",
        "int d1 = ( char_to_angle ) ;"
      ],
      "err_line": 12,
      "err_msg": "invalid conversion from ‘int (*)(char)’ to ‘int’ [-fpermissive]"
    },
    {
      "mod_line": [
        15,
        12,
        0
      ],
      "mod_code": [
        "if ( abs ( d1 - d2 ) == ' 180 ' || abs ( d2 ) == d2 )",
        "int d1 = ( char_to_angle ) ;",
        "char char_to_angle ( char c )"
      ],
      "err_line": 12,
      "err_msg": "invalid conversion from ‘char (*)(char)’ to ‘int’ [-fpermissive]"
    },
    {
      "mod_line": [
        15,
        12,
        0,
        9
      ],
      "mod_code": [
        "if ( abs ( d1 - d2 ) == ' 180 ' || abs ( d2 ) == d2 )",
        "int d1 = ( char_to_angle ) ;",
        "char char_to_angle ( char c )",
        "while ( cin >> c1 >> c2 )"
      ],
      "err_line": 11,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        15,
        12,
        9
      ],
      "mod_code": [
        "if ( abs ( d1 - d2 ) == ' 180 ' || abs ( d2 ) == d2 )",
        "int d1 = ( char_to_angle ) ;",
        "while ( cin >> c1 >> c2 )"
      ],
      "err_line": 11,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        15,
        0,
        9
      ],
      "mod_code": [
        "if ( abs ( d1 - d2 ) == ' 180 ' || abs ( d2 ) == d2 )",
        "char char_to_angle ( char c )",
        "while ( cin >> c1 >> c2 )"
      ],
      "err_line": 11,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        15,
        9
      ],
      "mod_code": [
        "if ( abs ( d1 - d2 ) == ' 180 ' || abs ( d2 ) == d2 )",
        "while ( cin >> c1 >> c2 )"
      ],
      "err_line": 11,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        12,
        0
      ],
      "mod_code": [
        "int d1 = ( char_to_angle ) ;",
        "char char_to_angle ( char c )"
      ],
      "err_line": 12,
      "err_msg": "invalid conversion from ‘char (*)(char)’ to ‘int’ [-fpermissive]"
    },
    {
      "mod_line": [
        12,
        0,
        9
      ],
      "mod_code": [
        "int d1 = ( char_to_angle ) ;",
        "char char_to_angle ( char c )",
        "while ( cin >> c1 >> c2 )"
      ],
      "err_line": 11,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        12,
        9
      ],
      "mod_code": [
        "int d1 = ( char_to_angle ) ;",
        "while ( cin >> c1 >> c2 )"
      ],
      "err_line": 11,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        0,
        9
      ],
      "mod_code": [
        "char char_to_angle ( char c )",
        "while ( cin >> c1 >> c2 )"
      ],
      "err_line": 11,
      "err_msg": "‘n’ was not declared in this scope"
    }
  ]
}