{
  "meta": {
    "index": 372,
    "hitid": "3XUSYT70ITVZAP083G376Z7LFS00D9",
    "workerid": "AIWEXPJAU66D9",
    "probid": "845A",
    "subid": "47321683"
  },
  "lines": [
    {
      "line": 0,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 1,
      "text": "n is a new long long variable",
      "code": "long long n ;",
      "indent": 1
    },
    {
      "line": 2,
      "text": "read standard input to n",
      "code": "cin >> n ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "p is a new long long with value 2 * n",
      "code": "long long p = 2 * n ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "create new array of long longs arr with p elements",
      "code": "long long arr [ p ] ;",
      "indent": 1
    },
    {
      "line": 5,
      "text": "start for loop from i = 0 to 2 * n exclusive , read input to arr [ i ] on each loop",
      "code": "for ( long long i = 0 ; i < 2 * n ; i ++ ) { cin >> arr [ i ] ; }",
      "indent": 1
    },
    {
      "line": 6,
      "text": "sort arr",
      "code": "sort ( arr , arr + p ) ;",
      "indent": 1
    },
    {
      "line": 7,
      "text": "if arr [ n - 1 ] = arr [ n ]",
      "code": "if ( arr [ n - 1 ] == arr [ n ] )",
      "indent": 1
    },
    {
      "line": 8,
      "text": "print \" NO \" to the standard output",
      "code": "cout << \" NO \" << endl ;",
      "indent": 2
    },
    {
      "line": 9,
      "text": "else",
      "code": "else",
      "indent": 1
    },
    {
      "line": 10,
      "text": "print \" YES \"",
      "code": "cout << \" YES \" << endl ;",
      "indent": 2
    },
    {
      "line": 11,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 12,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        2
      ],
      "mod_code": [
        "{ cin >> n ;"
      ],
      "err_line": 12,
      "err_msg": "expected ‘}’ at end of input"
    },
    {
      "mod_line": [
        4
      ],
      "mod_code": [
        "long long arr [ p ] [ p ] ;"
      ],
      "err_line": 5,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘long long int [p]’)"
    },
    {
      "mod_line": [
        6
      ],
      "mod_code": [
        "sort ( arr . begin ( ) , arr . end ( ) ) ;"
      ],
      "err_line": 6,
      "err_msg": "request for member ‘begin’ in ‘arr’, which is of non-class type ‘long long int [p]’"
    },
    {
      "mod_line": [
        4,
        6
      ],
      "mod_code": [
        "long long arr [ p ] [ p ] ;",
        "sort ( arr . begin ( ) , arr . end ( ) ) ;"
      ],
      "err_line": 5,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘long long int [p]’)"
    },
    {
      "mod_line": [
        4,
        6,
        2
      ],
      "mod_code": [
        "long long arr [ p ] [ p ] ;",
        "sort ( arr . begin ( ) , arr . end ( ) ) ;",
        "{ cin >> n ;"
      ],
      "err_line": 5,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘long long int [p]’)"
    },
    {
      "mod_line": [
        4,
        2
      ],
      "mod_code": [
        "long long arr [ p ] [ p ] ;",
        "{ cin >> n ;"
      ],
      "err_line": 5,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘long long int [p]’)"
    },
    {
      "mod_line": [
        6,
        2
      ],
      "mod_code": [
        "sort ( arr . begin ( ) , arr . end ( ) ) ;",
        "{ cin >> n ;"
      ],
      "err_line": 6,
      "err_msg": "request for member ‘begin’ in ‘arr’, which is of non-class type ‘long long int [p]’"
    }
  ]
}