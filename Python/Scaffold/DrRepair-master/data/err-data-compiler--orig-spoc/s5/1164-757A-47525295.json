{
  "meta": {
    "index": 1164,
    "hitid": "3HY86PZXPYC49KZQVUIRQM8GKW5E1H",
    "workerid": "A1NBHCFZKJGHKW",
    "probid": "757A",
    "subid": "47525295"
  },
  "lines": [
    {
      "line": 0,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 1,
      "text": "s = string",
      "code": "string s ;",
      "indent": 1
    },
    {
      "line": 2,
      "text": "read s",
      "code": "cin >> s ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "m = char and int map",
      "code": "map < char , int > m ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "for i = 0 to length of s increment m [ s [ i ] ]",
      "code": "for ( int i = 0 ; i < s . length ( ) ; i ++ ) m [ s [ i ] ] ++ ;",
      "indent": 1
    },
    {
      "line": 5,
      "text": "ans = int with ans = m [ ' B ' ]",
      "code": "int ans = m [ ' B ' ] ;",
      "indent": 1
    },
    {
      "line": 6,
      "text": "set ans to min of ans and m [ ' u ' ] / 2",
      "code": "ans = min ( ans , m [ ' u ' ] / 2 ) ;",
      "indent": 1
    },
    {
      "line": 7,
      "text": "set ans to min of ans and m [ ' l ' ]",
      "code": "ans = min ( ans , m [ ' l ' ] ) ;",
      "indent": 1
    },
    {
      "line": 8,
      "text": "set ans to min of ans and m [ ' b ' ]",
      "code": "ans = min ( ans , m [ ' b ' ] ) ;",
      "indent": 1
    },
    {
      "line": 9,
      "text": "set ans to min of ans and m [ ' a ' ] / 2",
      "code": "ans = min ( ans , m [ ' a ' ] / 2 ) ;",
      "indent": 1
    },
    {
      "line": 10,
      "text": "set ans to min of ans and m [ ' s ' ]",
      "code": "ans = min ( ans , m [ ' s ' ] ) ;",
      "indent": 1
    },
    {
      "line": 11,
      "text": "set ans to min of ans and m [ ' r ' ]",
      "code": "ans = min ( ans , m [ ' r ' ] ) ;",
      "indent": 1
    },
    {
      "line": 12,
      "text": "print ans",
      "code": "cout << ans << endl ;",
      "indent": 1
    },
    {
      "line": 13,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 14,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        1
      ],
      "mod_code": [
        "char s ;"
      ],
      "err_line": 4,
      "err_msg": "request for member ‘length’ in ‘s’, which is of non-class type ‘char’"
    },
    {
      "mod_line": [
        6
      ],
      "mod_code": [
        "ans = min ( ans , m [ ' u ' ) / 2 ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘]’ before ‘)’ token"
    },
    {
      "mod_line": [
        7
      ],
      "mod_code": [
        "ans = min ( ans , m [ ' l ' ) ;"
      ],
      "err_line": 7,
      "err_msg": "expected ‘]’ before ‘)’ token"
    },
    {
      "mod_line": [
        8
      ],
      "mod_code": [
        "ans = min ( ans , m [ ' b ' ) ;"
      ],
      "err_line": 8,
      "err_msg": "expected ‘]’ before ‘)’ token"
    },
    {
      "mod_line": [
        9
      ],
      "mod_code": [
        "ans = min ( ans , m [ ' a ' ) / 2 ;"
      ],
      "err_line": 9,
      "err_msg": "expected ‘]’ before ‘)’ token"
    },
    {
      "mod_line": [
        10
      ],
      "mod_code": [
        "ans = min ( ans , m [ ' s ' ) ;"
      ],
      "err_line": 10,
      "err_msg": "expected ‘]’ before ‘)’ token"
    },
    {
      "mod_line": [
        11
      ],
      "mod_code": [
        "ans = min ( ans , m [ ' r ' ) ;"
      ],
      "err_line": 11,
      "err_msg": "expected ‘]’ before ‘)’ token"
    },
    {
      "mod_line": [
        11,
        10
      ],
      "mod_code": [
        "ans = min ( ans , m [ ' r ' ) ;",
        "ans = min ( ans , m [ ' s ' ) ;"
      ],
      "err_line": 10,
      "err_msg": "expected ‘]’ before ‘)’ token"
    },
    {
      "mod_line": [
        11,
        10,
        1
      ],
      "mod_code": [
        "ans = min ( ans , m [ ' r ' ) ;",
        "ans = min ( ans , m [ ' s ' ) ;",
        "char s ;"
      ],
      "err_line": 4,
      "err_msg": "request for member ‘length’ in ‘s’, which is of non-class type ‘char’"
    },
    {
      "mod_line": [
        11,
        10,
        1,
        2
      ],
      "mod_code": [
        "ans = min ( ans , m [ ' r ' ) ;",
        "ans = min ( ans , m [ ' s ' ) ;",
        "char s ;",
        "cout << s << endl ;"
      ],
      "err_line": 4,
      "err_msg": "request for member ‘length’ in ‘s’, which is of non-class type ‘char’"
    },
    {
      "mod_line": [
        11,
        10,
        1,
        8
      ],
      "mod_code": [
        "ans = min ( ans , m [ ' r ' ) ;",
        "ans = min ( ans , m [ ' s ' ) ;",
        "char s ;",
        "ans = min ( ans , m [ ' b ' ) ;"
      ],
      "err_line": 4,
      "err_msg": "request for member ‘length’ in ‘s’, which is of non-class type ‘char’"
    },
    {
      "mod_line": [
        11,
        10,
        1,
        7
      ],
      "mod_code": [
        "ans = min ( ans , m [ ' r ' ) ;",
        "ans = min ( ans , m [ ' s ' ) ;",
        "char s ;",
        "ans = min ( ans , m [ ' l ' ) ;"
      ],
      "err_line": 4,
      "err_msg": "request for member ‘length’ in ‘s’, which is of non-class type ‘char’"
    },
    {
      "mod_line": [
        11,
        10,
        2
      ],
      "mod_code": [
        "ans = min ( ans , m [ ' r ' ) ;",
        "ans = min ( ans , m [ ' s ' ) ;",
        "cout << s << endl ;"
      ],
      "err_line": 10,
      "err_msg": "expected ‘]’ before ‘)’ token"
    },
    {
      "mod_line": [
        11,
        10,
        2,
        8
      ],
      "mod_code": [
        "ans = min ( ans , m [ ' r ' ) ;",
        "ans = min ( ans , m [ ' s ' ) ;",
        "cout << s << endl ;",
        "ans = min ( ans , m [ ' b ' ) ;"
      ],
      "err_line": 8,
      "err_msg": "expected ‘]’ before ‘)’ token"
    },
    {
      "mod_line": [
        11,
        10,
        2,
        7
      ],
      "mod_code": [
        "ans = min ( ans , m [ ' r ' ) ;",
        "ans = min ( ans , m [ ' s ' ) ;",
        "cout << s << endl ;",
        "ans = min ( ans , m [ ' l ' ) ;"
      ],
      "err_line": 7,
      "err_msg": "expected ‘]’ before ‘)’ token"
    },
    {
      "mod_line": [
        11,
        10,
        8
      ],
      "mod_code": [
        "ans = min ( ans , m [ ' r ' ) ;",
        "ans = min ( ans , m [ ' s ' ) ;",
        "ans = min ( ans , m [ ' b ' ) ;"
      ],
      "err_line": 8,
      "err_msg": "expected ‘]’ before ‘)’ token"
    },
    {
      "mod_line": [
        11,
        10,
        8,
        7
      ],
      "mod_code": [
        "ans = min ( ans , m [ ' r ' ) ;",
        "ans = min ( ans , m [ ' s ' ) ;",
        "ans = min ( ans , m [ ' b ' ) ;",
        "ans = min ( ans , m [ ' l ' ) ;"
      ],
      "err_line": 7,
      "err_msg": "expected ‘]’ before ‘)’ token"
    },
    {
      "mod_line": [
        11,
        10,
        7
      ],
      "mod_code": [
        "ans = min ( ans , m [ ' r ' ) ;",
        "ans = min ( ans , m [ ' s ' ) ;",
        "ans = min ( ans , m [ ' l ' ) ;"
      ],
      "err_line": 7,
      "err_msg": "expected ‘]’ before ‘)’ token"
    },
    {
      "mod_line": [
        11,
        1
      ],
      "mod_code": [
        "ans = min ( ans , m [ ' r ' ) ;",
        "char s ;"
      ],
      "err_line": 4,
      "err_msg": "request for member ‘length’ in ‘s’, which is of non-class type ‘char’"
    },
    {
      "mod_line": [
        11,
        1,
        2
      ],
      "mod_code": [
        "ans = min ( ans , m [ ' r ' ) ;",
        "char s ;",
        "cout << s << endl ;"
      ],
      "err_line": 4,
      "err_msg": "request for member ‘length’ in ‘s’, which is of non-class type ‘char’"
    },
    {
      "mod_line": [
        11,
        1,
        2,
        8
      ],
      "mod_code": [
        "ans = min ( ans , m [ ' r ' ) ;",
        "char s ;",
        "cout << s << endl ;",
        "ans = min ( ans , m [ ' b ' ) ;"
      ],
      "err_line": 4,
      "err_msg": "request for member ‘length’ in ‘s’, which is of non-class type ‘char’"
    },
    {
      "mod_line": [
        11,
        1,
        2,
        7
      ],
      "mod_code": [
        "ans = min ( ans , m [ ' r ' ) ;",
        "char s ;",
        "cout << s << endl ;",
        "ans = min ( ans , m [ ' l ' ) ;"
      ],
      "err_line": 4,
      "err_msg": "request for member ‘length’ in ‘s’, which is of non-class type ‘char’"
    },
    {
      "mod_line": [
        11,
        1,
        8
      ],
      "mod_code": [
        "ans = min ( ans , m [ ' r ' ) ;",
        "char s ;",
        "ans = min ( ans , m [ ' b ' ) ;"
      ],
      "err_line": 4,
      "err_msg": "request for member ‘length’ in ‘s’, which is of non-class type ‘char’"
    },
    {
      "mod_line": [
        11,
        1,
        8,
        7
      ],
      "mod_code": [
        "ans = min ( ans , m [ ' r ' ) ;",
        "char s ;",
        "ans = min ( ans , m [ ' b ' ) ;",
        "ans = min ( ans , m [ ' l ' ) ;"
      ],
      "err_line": 4,
      "err_msg": "request for member ‘length’ in ‘s’, which is of non-class type ‘char’"
    },
    {
      "mod_line": [
        11,
        1,
        7
      ],
      "mod_code": [
        "ans = min ( ans , m [ ' r ' ) ;",
        "char s ;",
        "ans = min ( ans , m [ ' l ' ) ;"
      ],
      "err_line": 4,
      "err_msg": "request for member ‘length’ in ‘s’, which is of non-class type ‘char’"
    },
    {
      "mod_line": [
        11,
        2
      ],
      "mod_code": [
        "ans = min ( ans , m [ ' r ' ) ;",
        "cout << s << endl ;"
      ],
      "err_line": 11,
      "err_msg": "expected ‘]’ before ‘)’ token"
    },
    {
      "mod_line": [
        11,
        2,
        8
      ],
      "mod_code": [
        "ans = min ( ans , m [ ' r ' ) ;",
        "cout << s << endl ;",
        "ans = min ( ans , m [ ' b ' ) ;"
      ],
      "err_line": 8,
      "err_msg": "expected ‘]’ before ‘)’ token"
    },
    {
      "mod_line": [
        11,
        2,
        8,
        7
      ],
      "mod_code": [
        "ans = min ( ans , m [ ' r ' ) ;",
        "cout << s << endl ;",
        "ans = min ( ans , m [ ' b ' ) ;",
        "ans = min ( ans , m [ ' l ' ) ;"
      ],
      "err_line": 7,
      "err_msg": "expected ‘]’ before ‘)’ token"
    },
    {
      "mod_line": [
        11,
        2,
        7
      ],
      "mod_code": [
        "ans = min ( ans , m [ ' r ' ) ;",
        "cout << s << endl ;",
        "ans = min ( ans , m [ ' l ' ) ;"
      ],
      "err_line": 7,
      "err_msg": "expected ‘]’ before ‘)’ token"
    },
    {
      "mod_line": [
        11,
        8
      ],
      "mod_code": [
        "ans = min ( ans , m [ ' r ' ) ;",
        "ans = min ( ans , m [ ' b ' ) ;"
      ],
      "err_line": 8,
      "err_msg": "expected ‘]’ before ‘)’ token"
    },
    {
      "mod_line": [
        11,
        8,
        7
      ],
      "mod_code": [
        "ans = min ( ans , m [ ' r ' ) ;",
        "ans = min ( ans , m [ ' b ' ) ;",
        "ans = min ( ans , m [ ' l ' ) ;"
      ],
      "err_line": 7,
      "err_msg": "expected ‘]’ before ‘)’ token"
    },
    {
      "mod_line": [
        11,
        7
      ],
      "mod_code": [
        "ans = min ( ans , m [ ' r ' ) ;",
        "ans = min ( ans , m [ ' l ' ) ;"
      ],
      "err_line": 7,
      "err_msg": "expected ‘]’ before ‘)’ token"
    },
    {
      "mod_line": [
        10,
        1
      ],
      "mod_code": [
        "ans = min ( ans , m [ ' s ' ) ;",
        "char s ;"
      ],
      "err_line": 4,
      "err_msg": "request for member ‘length’ in ‘s’, which is of non-class type ‘char’"
    },
    {
      "mod_line": [
        10,
        1,
        2
      ],
      "mod_code": [
        "ans = min ( ans , m [ ' s ' ) ;",
        "char s ;",
        "cout << s << endl ;"
      ],
      "err_line": 4,
      "err_msg": "request for member ‘length’ in ‘s’, which is of non-class type ‘char’"
    },
    {
      "mod_line": [
        10,
        1,
        2,
        8
      ],
      "mod_code": [
        "ans = min ( ans , m [ ' s ' ) ;",
        "char s ;",
        "cout << s << endl ;",
        "ans = min ( ans , m [ ' b ' ) ;"
      ],
      "err_line": 4,
      "err_msg": "request for member ‘length’ in ‘s’, which is of non-class type ‘char’"
    },
    {
      "mod_line": [
        10,
        1,
        2,
        7
      ],
      "mod_code": [
        "ans = min ( ans , m [ ' s ' ) ;",
        "char s ;",
        "cout << s << endl ;",
        "ans = min ( ans , m [ ' l ' ) ;"
      ],
      "err_line": 4,
      "err_msg": "request for member ‘length’ in ‘s’, which is of non-class type ‘char’"
    },
    {
      "mod_line": [
        10,
        1,
        8
      ],
      "mod_code": [
        "ans = min ( ans , m [ ' s ' ) ;",
        "char s ;",
        "ans = min ( ans , m [ ' b ' ) ;"
      ],
      "err_line": 4,
      "err_msg": "request for member ‘length’ in ‘s’, which is of non-class type ‘char’"
    },
    {
      "mod_line": [
        10,
        1,
        8,
        7
      ],
      "mod_code": [
        "ans = min ( ans , m [ ' s ' ) ;",
        "char s ;",
        "ans = min ( ans , m [ ' b ' ) ;",
        "ans = min ( ans , m [ ' l ' ) ;"
      ],
      "err_line": 4,
      "err_msg": "request for member ‘length’ in ‘s’, which is of non-class type ‘char’"
    },
    {
      "mod_line": [
        10,
        1,
        7
      ],
      "mod_code": [
        "ans = min ( ans , m [ ' s ' ) ;",
        "char s ;",
        "ans = min ( ans , m [ ' l ' ) ;"
      ],
      "err_line": 4,
      "err_msg": "request for member ‘length’ in ‘s’, which is of non-class type ‘char’"
    },
    {
      "mod_line": [
        10,
        2
      ],
      "mod_code": [
        "ans = min ( ans , m [ ' s ' ) ;",
        "cout << s << endl ;"
      ],
      "err_line": 10,
      "err_msg": "expected ‘]’ before ‘)’ token"
    },
    {
      "mod_line": [
        10,
        2,
        8
      ],
      "mod_code": [
        "ans = min ( ans , m [ ' s ' ) ;",
        "cout << s << endl ;",
        "ans = min ( ans , m [ ' b ' ) ;"
      ],
      "err_line": 8,
      "err_msg": "expected ‘]’ before ‘)’ token"
    },
    {
      "mod_line": [
        10,
        2,
        8,
        7
      ],
      "mod_code": [
        "ans = min ( ans , m [ ' s ' ) ;",
        "cout << s << endl ;",
        "ans = min ( ans , m [ ' b ' ) ;",
        "ans = min ( ans , m [ ' l ' ) ;"
      ],
      "err_line": 7,
      "err_msg": "expected ‘]’ before ‘)’ token"
    },
    {
      "mod_line": [
        10,
        2,
        7
      ],
      "mod_code": [
        "ans = min ( ans , m [ ' s ' ) ;",
        "cout << s << endl ;",
        "ans = min ( ans , m [ ' l ' ) ;"
      ],
      "err_line": 7,
      "err_msg": "expected ‘]’ before ‘)’ token"
    },
    {
      "mod_line": [
        10,
        8
      ],
      "mod_code": [
        "ans = min ( ans , m [ ' s ' ) ;",
        "ans = min ( ans , m [ ' b ' ) ;"
      ],
      "err_line": 8,
      "err_msg": "expected ‘]’ before ‘)’ token"
    },
    {
      "mod_line": [
        10,
        8,
        7
      ],
      "mod_code": [
        "ans = min ( ans , m [ ' s ' ) ;",
        "ans = min ( ans , m [ ' b ' ) ;",
        "ans = min ( ans , m [ ' l ' ) ;"
      ],
      "err_line": 7,
      "err_msg": "expected ‘]’ before ‘)’ token"
    },
    {
      "mod_line": [
        10,
        7
      ],
      "mod_code": [
        "ans = min ( ans , m [ ' s ' ) ;",
        "ans = min ( ans , m [ ' l ' ) ;"
      ],
      "err_line": 7,
      "err_msg": "expected ‘]’ before ‘)’ token"
    },
    {
      "mod_line": [
        1,
        2
      ],
      "mod_code": [
        "char s ;",
        "cout << s << endl ;"
      ],
      "err_line": 4,
      "err_msg": "request for member ‘length’ in ‘s’, which is of non-class type ‘char’"
    },
    {
      "mod_line": [
        1,
        2,
        8
      ],
      "mod_code": [
        "char s ;",
        "cout << s << endl ;",
        "ans = min ( ans , m [ ' b ' ) ;"
      ],
      "err_line": 4,
      "err_msg": "request for member ‘length’ in ‘s’, which is of non-class type ‘char’"
    },
    {
      "mod_line": [
        1,
        2,
        8,
        7
      ],
      "mod_code": [
        "char s ;",
        "cout << s << endl ;",
        "ans = min ( ans , m [ ' b ' ) ;",
        "ans = min ( ans , m [ ' l ' ) ;"
      ],
      "err_line": 4,
      "err_msg": "request for member ‘length’ in ‘s’, which is of non-class type ‘char’"
    },
    {
      "mod_line": [
        1,
        2,
        7
      ],
      "mod_code": [
        "char s ;",
        "cout << s << endl ;",
        "ans = min ( ans , m [ ' l ' ) ;"
      ],
      "err_line": 4,
      "err_msg": "request for member ‘length’ in ‘s’, which is of non-class type ‘char’"
    },
    {
      "mod_line": [
        1,
        8
      ],
      "mod_code": [
        "char s ;",
        "ans = min ( ans , m [ ' b ' ) ;"
      ],
      "err_line": 4,
      "err_msg": "request for member ‘length’ in ‘s’, which is of non-class type ‘char’"
    },
    {
      "mod_line": [
        1,
        8,
        7
      ],
      "mod_code": [
        "char s ;",
        "ans = min ( ans , m [ ' b ' ) ;",
        "ans = min ( ans , m [ ' l ' ) ;"
      ],
      "err_line": 4,
      "err_msg": "request for member ‘length’ in ‘s’, which is of non-class type ‘char’"
    },
    {
      "mod_line": [
        1,
        7
      ],
      "mod_code": [
        "char s ;",
        "ans = min ( ans , m [ ' l ' ) ;"
      ],
      "err_line": 4,
      "err_msg": "request for member ‘length’ in ‘s’, which is of non-class type ‘char’"
    },
    {
      "mod_line": [
        2,
        8
      ],
      "mod_code": [
        "cout << s << endl ;",
        "ans = min ( ans , m [ ' b ' ) ;"
      ],
      "err_line": 8,
      "err_msg": "expected ‘]’ before ‘)’ token"
    },
    {
      "mod_line": [
        2,
        8,
        7
      ],
      "mod_code": [
        "cout << s << endl ;",
        "ans = min ( ans , m [ ' b ' ) ;",
        "ans = min ( ans , m [ ' l ' ) ;"
      ],
      "err_line": 7,
      "err_msg": "expected ‘]’ before ‘)’ token"
    },
    {
      "mod_line": [
        2,
        7
      ],
      "mod_code": [
        "cout << s << endl ;",
        "ans = min ( ans , m [ ' l ' ) ;"
      ],
      "err_line": 7,
      "err_msg": "expected ‘]’ before ‘)’ token"
    },
    {
      "mod_line": [
        8,
        7
      ],
      "mod_code": [
        "ans = min ( ans , m [ ' b ' ) ;",
        "ans = min ( ans , m [ ' l ' ) ;"
      ],
      "err_line": 7,
      "err_msg": "expected ‘]’ before ‘)’ token"
    }
  ]
}