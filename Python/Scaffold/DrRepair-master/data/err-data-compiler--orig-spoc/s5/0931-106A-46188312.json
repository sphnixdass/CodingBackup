{
  "meta": {
    "index": 931,
    "hitid": "3HXCEECSQMNZAL1P363DPJK8FNOZY7",
    "workerid": "A2QLFQ2ZYR6B7M",
    "probid": "106A",
    "subid": "46188312"
  },
  "lines": [
    {
      "line": 0,
      "text": "function busca ( get char x , array of char v , return int )",
      "code": "int busca ( char x , char v [ ] )",
      "indent": 0
    },
    {
      "line": 1,
      "text": "pos = int",
      "code": "int pos ;",
      "indent": 1
    },
    {
      "line": 2,
      "text": "for i = 0 to 9 exclusive",
      "code": "for ( int i = 0 ; i < 9 ; i ++ )",
      "indent": 1
    },
    {
      "line": 3,
      "text": "if v [ i ] is x pos = i",
      "code": "if ( v [ i ] == x ) pos = i ;",
      "indent": 2
    },
    {
      "line": 4,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 5,
      "text": "return pos",
      "code": "return pos ;",
      "indent": 1
    },
    {
      "line": 6,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    },
    {
      "line": 7,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 8,
      "text": "v = array of 9 char filled with ' 6 ' , ' 7 ' , ' 8 ' , ' 9 ' , ' T ' , ' J ' , ' Q ' , ' K ' , ' A '",
      "code": "char v [ 9 ] = { ' 6 ' , ' 7 ' , ' 8 ' , ' 9 ' , ' T ' , ' J ' , ' Q ' , ' K ' , ' A ' } ;",
      "indent": 1
    },
    {
      "line": 9,
      "text": "x = char",
      "code": "char x ;",
      "indent": 1
    },
    {
      "line": 10,
      "text": "a , b = string",
      "code": "string a , b ;",
      "indent": 1
    },
    {
      "line": 11,
      "text": "read x",
      "code": "cin >> x ;",
      "indent": 1
    },
    {
      "line": 12,
      "text": "read a , b",
      "code": "cin >> a >> b ;",
      "indent": 1
    },
    {
      "line": 13,
      "text": "if x is a [ 1 ] and x is b [ 1 ]",
      "code": "if ( x == a [ 1 ] && x == b [ 1 ] )",
      "indent": 1
    },
    {
      "line": 14,
      "text": "if busca ( a [ 0 ] , v ) > busca ( b [ 0 ] , v )",
      "code": "if ( busca ( a [ 0 ] , v ) > busca ( b [ 0 ] , v ) )",
      "indent": 2
    },
    {
      "line": 15,
      "text": "print \" YES \"",
      "code": "cout << \" YES \" << endl ;",
      "indent": 3
    },
    {
      "line": 16,
      "text": "else",
      "code": "else",
      "indent": 2
    },
    {
      "line": 17,
      "text": "print \" NO \"",
      "code": "cout << \" NO \" << endl ;",
      "indent": 3
    },
    {
      "line": 18,
      "text": "else",
      "code": "else",
      "indent": 1
    },
    {
      "line": 19,
      "text": "if x is a [ 1 ]",
      "code": "if ( x == a [ 1 ] )",
      "indent": 2
    },
    {
      "line": 20,
      "text": "print \" YES \"",
      "code": "cout << \" YES \" << endl ;",
      "indent": 3
    },
    {
      "line": 21,
      "text": "else",
      "code": "else",
      "indent": 2
    },
    {
      "line": 22,
      "text": "if a [ 1 ] is b [ 1 ]",
      "code": "if ( a [ 1 ] == b [ 1 ] )",
      "indent": 3
    },
    {
      "line": 23,
      "text": "if busca ( a [ 0 ] , v ) > busca ( b [ 0 ] , v )",
      "code": "if ( busca ( a [ 0 ] , v ) > busca ( b [ 0 ] , v ) )",
      "indent": 4
    },
    {
      "line": 24,
      "text": "print \" YES \"",
      "code": "cout << \" YES \" << endl ;",
      "indent": 5
    },
    {
      "line": 25,
      "text": "else",
      "code": "else",
      "indent": 4
    },
    {
      "line": 26,
      "text": "print \" NO \"",
      "code": "cout << \" NO \" << endl ;",
      "indent": 5
    },
    {
      "line": 27,
      "text": "else",
      "code": "else",
      "indent": 3
    },
    {
      "line": 28,
      "text": "print \" NO \"",
      "code": "cout << \" NO \" << endl ;",
      "indent": 4
    },
    {
      "line": 29,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 30,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 31,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 32,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        0
      ],
      "mod_code": [
        "int busca ( char x , char v [ ] ) ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        8
      ],
      "mod_code": [
        "char v = 9 ;"
      ],
      "err_line": 14,
      "err_msg": "invalid conversion from ‘char’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        14
      ],
      "mod_code": [
        "if ( busca ( a [ 0 ] , v ) > busca ( b [ 0 ] ) )"
      ],
      "err_line": 14,
      "err_msg": "too few arguments to function ‘int busca(char, char*)’"
    },
    {
      "mod_line": [
        23
      ],
      "mod_code": [
        "if ( busca ( a [ 0 ] , v ) > busca ( b [ 0 ] ) )"
      ],
      "err_line": 23,
      "err_msg": "too few arguments to function ‘int busca(char, char*)’"
    },
    {
      "mod_line": [
        2
      ],
      "mod_code": [
        "for ( i = 0 ; i < 9 ; i ++ )"
      ],
      "err_line": 2,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        10
      ],
      "mod_code": [
        "char a , b ;"
      ],
      "err_line": 13,
      "err_msg": "invalid types ‘char[int]’ for array subscript"
    },
    {
      "mod_line": [
        19
      ],
      "mod_code": [
        "if ( x [ 1 ] == a [ 1 ] )"
      ],
      "err_line": 19,
      "err_msg": "invalid types ‘char[int]’ for array subscript"
    },
    {
      "mod_line": [
        0,
        8
      ],
      "mod_code": [
        "int busca ( char x , char v [ ] ) ;",
        "char v = 9 ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        0,
        8,
        14
      ],
      "mod_code": [
        "int busca ( char x , char v [ ] ) ;",
        "char v = 9 ;",
        "if ( busca ( a [ 0 ] , v ) > busca ( b [ 0 ] ) )"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        0,
        8,
        14,
        23
      ],
      "mod_code": [
        "int busca ( char x , char v [ ] ) ;",
        "char v = 9 ;",
        "if ( busca ( a [ 0 ] , v ) > busca ( b [ 0 ] ) )",
        "if ( busca ( a [ 0 ] , v ) > busca ( b [ 0 ] ) )"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        0,
        8,
        14,
        2
      ],
      "mod_code": [
        "int busca ( char x , char v [ ] ) ;",
        "char v = 9 ;",
        "if ( busca ( a [ 0 ] , v ) > busca ( b [ 0 ] ) )",
        "for ( i = 0 ; i < 9 ; i ++ )"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        0,
        8,
        14,
        19
      ],
      "mod_code": [
        "int busca ( char x , char v [ ] ) ;",
        "char v = 9 ;",
        "if ( busca ( a [ 0 ] , v ) > busca ( b [ 0 ] ) )",
        "if ( x [ 1 ] == a [ 1 ] )"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        0,
        8,
        23
      ],
      "mod_code": [
        "int busca ( char x , char v [ ] ) ;",
        "char v = 9 ;",
        "if ( busca ( a [ 0 ] , v ) > busca ( b [ 0 ] ) )"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        0,
        8,
        23,
        2
      ],
      "mod_code": [
        "int busca ( char x , char v [ ] ) ;",
        "char v = 9 ;",
        "if ( busca ( a [ 0 ] , v ) > busca ( b [ 0 ] ) )",
        "for ( i = 0 ; i < 9 ; i ++ )"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        0,
        8,
        23,
        19
      ],
      "mod_code": [
        "int busca ( char x , char v [ ] ) ;",
        "char v = 9 ;",
        "if ( busca ( a [ 0 ] , v ) > busca ( b [ 0 ] ) )",
        "if ( x [ 1 ] == a [ 1 ] )"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        0,
        8,
        2
      ],
      "mod_code": [
        "int busca ( char x , char v [ ] ) ;",
        "char v = 9 ;",
        "for ( i = 0 ; i < 9 ; i ++ )"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        0,
        8,
        2,
        19
      ],
      "mod_code": [
        "int busca ( char x , char v [ ] ) ;",
        "char v = 9 ;",
        "for ( i = 0 ; i < 9 ; i ++ )",
        "if ( x [ 1 ] == a [ 1 ] )"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        0,
        8,
        19
      ],
      "mod_code": [
        "int busca ( char x , char v [ ] ) ;",
        "char v = 9 ;",
        "if ( x [ 1 ] == a [ 1 ] )"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        0,
        14
      ],
      "mod_code": [
        "int busca ( char x , char v [ ] ) ;",
        "if ( busca ( a [ 0 ] , v ) > busca ( b [ 0 ] ) )"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        0,
        14,
        23
      ],
      "mod_code": [
        "int busca ( char x , char v [ ] ) ;",
        "if ( busca ( a [ 0 ] , v ) > busca ( b [ 0 ] ) )",
        "if ( busca ( a [ 0 ] , v ) > busca ( b [ 0 ] ) )"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        0,
        14,
        23,
        2
      ],
      "mod_code": [
        "int busca ( char x , char v [ ] ) ;",
        "if ( busca ( a [ 0 ] , v ) > busca ( b [ 0 ] ) )",
        "if ( busca ( a [ 0 ] , v ) > busca ( b [ 0 ] ) )",
        "for ( i = 0 ; i < 9 ; i ++ )"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        0,
        14,
        23,
        19
      ],
      "mod_code": [
        "int busca ( char x , char v [ ] ) ;",
        "if ( busca ( a [ 0 ] , v ) > busca ( b [ 0 ] ) )",
        "if ( busca ( a [ 0 ] , v ) > busca ( b [ 0 ] ) )",
        "if ( x [ 1 ] == a [ 1 ] )"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        0,
        14,
        2
      ],
      "mod_code": [
        "int busca ( char x , char v [ ] ) ;",
        "if ( busca ( a [ 0 ] , v ) > busca ( b [ 0 ] ) )",
        "for ( i = 0 ; i < 9 ; i ++ )"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        0,
        14,
        2,
        19
      ],
      "mod_code": [
        "int busca ( char x , char v [ ] ) ;",
        "if ( busca ( a [ 0 ] , v ) > busca ( b [ 0 ] ) )",
        "for ( i = 0 ; i < 9 ; i ++ )",
        "if ( x [ 1 ] == a [ 1 ] )"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        0,
        14,
        19
      ],
      "mod_code": [
        "int busca ( char x , char v [ ] ) ;",
        "if ( busca ( a [ 0 ] , v ) > busca ( b [ 0 ] ) )",
        "if ( x [ 1 ] == a [ 1 ] )"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        0,
        23
      ],
      "mod_code": [
        "int busca ( char x , char v [ ] ) ;",
        "if ( busca ( a [ 0 ] , v ) > busca ( b [ 0 ] ) )"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        0,
        23,
        2
      ],
      "mod_code": [
        "int busca ( char x , char v [ ] ) ;",
        "if ( busca ( a [ 0 ] , v ) > busca ( b [ 0 ] ) )",
        "for ( i = 0 ; i < 9 ; i ++ )"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        0,
        23,
        2,
        19
      ],
      "mod_code": [
        "int busca ( char x , char v [ ] ) ;",
        "if ( busca ( a [ 0 ] , v ) > busca ( b [ 0 ] ) )",
        "for ( i = 0 ; i < 9 ; i ++ )",
        "if ( x [ 1 ] == a [ 1 ] )"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        0,
        23,
        19
      ],
      "mod_code": [
        "int busca ( char x , char v [ ] ) ;",
        "if ( busca ( a [ 0 ] , v ) > busca ( b [ 0 ] ) )",
        "if ( x [ 1 ] == a [ 1 ] )"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        0,
        2
      ],
      "mod_code": [
        "int busca ( char x , char v [ ] ) ;",
        "for ( i = 0 ; i < 9 ; i ++ )"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        0,
        2,
        19
      ],
      "mod_code": [
        "int busca ( char x , char v [ ] ) ;",
        "for ( i = 0 ; i < 9 ; i ++ )",
        "if ( x [ 1 ] == a [ 1 ] )"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        0,
        19
      ],
      "mod_code": [
        "int busca ( char x , char v [ ] ) ;",
        "if ( x [ 1 ] == a [ 1 ] )"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        8,
        14
      ],
      "mod_code": [
        "char v = 9 ;",
        "if ( busca ( a [ 0 ] , v ) > busca ( b [ 0 ] ) )"
      ],
      "err_line": 14,
      "err_msg": "invalid conversion from ‘char’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        8,
        14,
        23
      ],
      "mod_code": [
        "char v = 9 ;",
        "if ( busca ( a [ 0 ] , v ) > busca ( b [ 0 ] ) )",
        "if ( busca ( a [ 0 ] , v ) > busca ( b [ 0 ] ) )"
      ],
      "err_line": 14,
      "err_msg": "invalid conversion from ‘char’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        8,
        14,
        23,
        2
      ],
      "mod_code": [
        "char v = 9 ;",
        "if ( busca ( a [ 0 ] , v ) > busca ( b [ 0 ] ) )",
        "if ( busca ( a [ 0 ] , v ) > busca ( b [ 0 ] ) )",
        "for ( i = 0 ; i < 9 ; i ++ )"
      ],
      "err_line": 2,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        8,
        14,
        23,
        19
      ],
      "mod_code": [
        "char v = 9 ;",
        "if ( busca ( a [ 0 ] , v ) > busca ( b [ 0 ] ) )",
        "if ( busca ( a [ 0 ] , v ) > busca ( b [ 0 ] ) )",
        "if ( x [ 1 ] == a [ 1 ] )"
      ],
      "err_line": 14,
      "err_msg": "invalid conversion from ‘char’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        8,
        14,
        2
      ],
      "mod_code": [
        "char v = 9 ;",
        "if ( busca ( a [ 0 ] , v ) > busca ( b [ 0 ] ) )",
        "for ( i = 0 ; i < 9 ; i ++ )"
      ],
      "err_line": 2,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        8,
        14,
        2,
        19
      ],
      "mod_code": [
        "char v = 9 ;",
        "if ( busca ( a [ 0 ] , v ) > busca ( b [ 0 ] ) )",
        "for ( i = 0 ; i < 9 ; i ++ )",
        "if ( x [ 1 ] == a [ 1 ] )"
      ],
      "err_line": 2,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        8,
        14,
        19
      ],
      "mod_code": [
        "char v = 9 ;",
        "if ( busca ( a [ 0 ] , v ) > busca ( b [ 0 ] ) )",
        "if ( x [ 1 ] == a [ 1 ] )"
      ],
      "err_line": 14,
      "err_msg": "invalid conversion from ‘char’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        8,
        23
      ],
      "mod_code": [
        "char v = 9 ;",
        "if ( busca ( a [ 0 ] , v ) > busca ( b [ 0 ] ) )"
      ],
      "err_line": 14,
      "err_msg": "invalid conversion from ‘char’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        8,
        23,
        2
      ],
      "mod_code": [
        "char v = 9 ;",
        "if ( busca ( a [ 0 ] , v ) > busca ( b [ 0 ] ) )",
        "for ( i = 0 ; i < 9 ; i ++ )"
      ],
      "err_line": 2,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        8,
        23,
        2,
        19
      ],
      "mod_code": [
        "char v = 9 ;",
        "if ( busca ( a [ 0 ] , v ) > busca ( b [ 0 ] ) )",
        "for ( i = 0 ; i < 9 ; i ++ )",
        "if ( x [ 1 ] == a [ 1 ] )"
      ],
      "err_line": 2,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        8,
        23,
        19
      ],
      "mod_code": [
        "char v = 9 ;",
        "if ( busca ( a [ 0 ] , v ) > busca ( b [ 0 ] ) )",
        "if ( x [ 1 ] == a [ 1 ] )"
      ],
      "err_line": 14,
      "err_msg": "invalid conversion from ‘char’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        8,
        2
      ],
      "mod_code": [
        "char v = 9 ;",
        "for ( i = 0 ; i < 9 ; i ++ )"
      ],
      "err_line": 2,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        8,
        2,
        19
      ],
      "mod_code": [
        "char v = 9 ;",
        "for ( i = 0 ; i < 9 ; i ++ )",
        "if ( x [ 1 ] == a [ 1 ] )"
      ],
      "err_line": 2,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        8,
        19
      ],
      "mod_code": [
        "char v = 9 ;",
        "if ( x [ 1 ] == a [ 1 ] )"
      ],
      "err_line": 14,
      "err_msg": "invalid conversion from ‘char’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        14,
        23
      ],
      "mod_code": [
        "if ( busca ( a [ 0 ] , v ) > busca ( b [ 0 ] ) )",
        "if ( busca ( a [ 0 ] , v ) > busca ( b [ 0 ] ) )"
      ],
      "err_line": 14,
      "err_msg": "too few arguments to function ‘int busca(char, char*)’"
    },
    {
      "mod_line": [
        14,
        23,
        2
      ],
      "mod_code": [
        "if ( busca ( a [ 0 ] , v ) > busca ( b [ 0 ] ) )",
        "if ( busca ( a [ 0 ] , v ) > busca ( b [ 0 ] ) )",
        "for ( i = 0 ; i < 9 ; i ++ )"
      ],
      "err_line": 2,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        23,
        2,
        19
      ],
      "mod_code": [
        "if ( busca ( a [ 0 ] , v ) > busca ( b [ 0 ] ) )",
        "if ( busca ( a [ 0 ] , v ) > busca ( b [ 0 ] ) )",
        "for ( i = 0 ; i < 9 ; i ++ )",
        "if ( x [ 1 ] == a [ 1 ] )"
      ],
      "err_line": 2,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        23,
        19
      ],
      "mod_code": [
        "if ( busca ( a [ 0 ] , v ) > busca ( b [ 0 ] ) )",
        "if ( busca ( a [ 0 ] , v ) > busca ( b [ 0 ] ) )",
        "if ( x [ 1 ] == a [ 1 ] )"
      ],
      "err_line": 14,
      "err_msg": "too few arguments to function ‘int busca(char, char*)’"
    },
    {
      "mod_line": [
        14,
        2
      ],
      "mod_code": [
        "if ( busca ( a [ 0 ] , v ) > busca ( b [ 0 ] ) )",
        "for ( i = 0 ; i < 9 ; i ++ )"
      ],
      "err_line": 2,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        2,
        19
      ],
      "mod_code": [
        "if ( busca ( a [ 0 ] , v ) > busca ( b [ 0 ] ) )",
        "for ( i = 0 ; i < 9 ; i ++ )",
        "if ( x [ 1 ] == a [ 1 ] )"
      ],
      "err_line": 2,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        19
      ],
      "mod_code": [
        "if ( busca ( a [ 0 ] , v ) > busca ( b [ 0 ] ) )",
        "if ( x [ 1 ] == a [ 1 ] )"
      ],
      "err_line": 14,
      "err_msg": "too few arguments to function ‘int busca(char, char*)’"
    },
    {
      "mod_line": [
        23,
        2
      ],
      "mod_code": [
        "if ( busca ( a [ 0 ] , v ) > busca ( b [ 0 ] ) )",
        "for ( i = 0 ; i < 9 ; i ++ )"
      ],
      "err_line": 2,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        23,
        2,
        19
      ],
      "mod_code": [
        "if ( busca ( a [ 0 ] , v ) > busca ( b [ 0 ] ) )",
        "for ( i = 0 ; i < 9 ; i ++ )",
        "if ( x [ 1 ] == a [ 1 ] )"
      ],
      "err_line": 2,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        23,
        19
      ],
      "mod_code": [
        "if ( busca ( a [ 0 ] , v ) > busca ( b [ 0 ] ) )",
        "if ( x [ 1 ] == a [ 1 ] )"
      ],
      "err_line": 19,
      "err_msg": "invalid types ‘char[int]’ for array subscript"
    },
    {
      "mod_line": [
        2,
        19
      ],
      "mod_code": [
        "for ( i = 0 ; i < 9 ; i ++ )",
        "if ( x [ 1 ] == a [ 1 ] )"
      ],
      "err_line": 2,
      "err_msg": "‘i’ was not declared in this scope"
    }
  ]
}