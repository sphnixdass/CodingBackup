{
  "meta": {
    "index": 1586,
    "hitid": "3TL87MO8CMJ9553QJFKGSJ2UU3NFL4",
    "workerid": "A1EKVUFWL7OJMO",
    "probid": "161A",
    "subid": "42297021"
  },
  "lines": [
    {
      "line": 0,
      "text": "a , vest , match , n , m , x , y = long with a , vest , match = array of size 100010",
      "code": "long a [ 100000 + 10 ] , vest [ 100000 + 10 ] , match [ 100000 + 10 ] , n , m , x , y ;",
      "indent": 0
    },
    {
      "line": 1,
      "text": "check = bool with check = array of size 100010",
      "code": "bool check [ 100000 + 10 ] ;",
      "indent": 0
    },
    {
      "line": 2,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 3,
      "text": "read n , m , x , y",
      "code": "cin >> n >> m >> x >> y ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "for i = 1 to n , read a [ i ]",
      "code": "for ( int i = 1 ; i <= n ; i ++ ) cin >> a [ i ] ;",
      "indent": 1
    },
    {
      "line": 5,
      "text": "for i = 1 to m , read vest [ i ]",
      "code": "for ( int i = 1 ; i <= m ; i ++ ) cin >> vest [ i ] ;",
      "indent": 1
    },
    {
      "line": 6,
      "text": "res = long with res = 0",
      "code": "long res = 0 ;",
      "indent": 1
    },
    {
      "line": 7,
      "text": "i = long with i = 0",
      "code": "long i = 0 ;",
      "indent": 1
    },
    {
      "line": 8,
      "text": "j = long with j = 1",
      "code": "long j = 1 ;",
      "indent": 1
    },
    {
      "line": 9,
      "text": "set all contents of check to true",
      "code": "memset ( check , true , sizeof ( check ) ) ;",
      "indent": 1
    },
    {
      "line": 10,
      "text": "while i < n",
      "code": "while ( i < n )",
      "indent": 1
    },
    {
      "line": 11,
      "text": "increment i",
      "code": "i ++ ;",
      "indent": 2
    },
    {
      "line": 12,
      "text": "if a [ i ] + y < vest [ j ] , continue next iteration",
      "code": "if ( a [ i ] + y < vest [ j ] ) continue ;",
      "indent": 2
    },
    {
      "line": 13,
      "text": "while ( a [ i ] - x > vest [ j ] or ! check [ j ] ) and j < m , increment j",
      "code": "while ( ( a [ i ] - x > vest [ j ] || ! check [ j ] ) && j < m ) j ++ ;",
      "indent": 2
    },
    {
      "line": 14,
      "text": "if j > m , continue next iteration",
      "code": "if ( j > m ) continue ;",
      "indent": 2
    },
    {
      "line": 15,
      "text": "if a [ i ] - x < = vest [ j ] and vest [ j ] < = a [ i ] + y and check [ j ]",
      "code": "if ( a [ i ] - x <= vest [ j ] && vest [ j ] <= a [ i ] + y && check [ j ] )",
      "indent": 2
    },
    {
      "line": 16,
      "text": "match [ i ] = j",
      "code": "match [ i ] = j ;",
      "indent": 3
    },
    {
      "line": 17,
      "text": "increment res",
      "code": "res ++ ;",
      "indent": 3
    },
    {
      "line": 18,
      "text": "check [ j ] = false",
      "code": "check [ j ] = false ;",
      "indent": 3
    },
    {
      "line": 19,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 20,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 21,
      "text": "print res",
      "code": "cout << res << \" \\n \" ;",
      "indent": 1
    },
    {
      "line": 22,
      "text": "for i = 1 to n",
      "code": "for ( int i = 1 ; i <= n ; i ++ )",
      "indent": 1
    },
    {
      "line": 23,
      "text": "if match [ i ] is not 0 , print i , \" \" , match [ i ]",
      "code": "if ( match [ i ] != 0 ) cout << i << \" \" << match [ i ] << \" \\n \" ;",
      "indent": 2
    },
    {
      "line": 24,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 25,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        0
      ],
      "mod_code": [
        "long long a , vest , match , n , m , m , y , y [ 100010 ] ;"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘long long int m’"
    },
    {
      "mod_line": [
        0
      ],
      "mod_code": [
        "long long a , vest , match , n , m , x , y , y [ 100010 ] ;"
      ],
      "err_line": 0,
      "err_msg": "conflicting declaration ‘long long int y [100010]’"
    },
    {
      "mod_line": [
        10
      ],
      "mod_code": [
        "while ( i < n ) ;"
      ],
      "err_line": 12,
      "err_msg": "continue statement not within a loop"
    },
    {
      "mod_line": [
        0,
        13
      ],
      "mod_code": [
        "long long a , vest , match , n , m , m , y , y [ 100010 ] ;",
        "while ( a [ i ] - x > vest [ j ] || ! check [ j ] ) { j ++ ; }"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘long long int m’"
    },
    {
      "mod_line": [
        0,
        13,
        3
      ],
      "mod_code": [
        "long long a , vest , match , n , m , m , y , y [ 100010 ] ;",
        "while ( a [ i ] - x > vest [ j ] || ! check [ j ] ) { j ++ ; }",
        "int n , m , x , y ;"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘long long int m’"
    },
    {
      "mod_line": [
        0,
        13,
        3,
        18
      ],
      "mod_code": [
        "long long a , vest , match , n , m , m , y , y [ 100010 ] ;",
        "while ( a [ i ] - x > vest [ j ] || ! check [ j ] ) { j ++ ; }",
        "int n , m , x , y ;",
        "check [ j ] = ' false ' ;"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘long long int m’"
    },
    {
      "mod_line": [
        0,
        13,
        3,
        16
      ],
      "mod_code": [
        "long long a , vest , match , n , m , m , y , y [ 100010 ] ;",
        "while ( a [ i ] - x > vest [ j ] || ! check [ j ] ) { j ++ ; }",
        "int n , m , x , y ;",
        "match [ i ] = ' j ' ;"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘long long int m’"
    },
    {
      "mod_line": [
        0,
        13,
        18
      ],
      "mod_code": [
        "long long a , vest , match , n , m , m , y , y [ 100010 ] ;",
        "while ( a [ i ] - x > vest [ j ] || ! check [ j ] ) { j ++ ; }",
        "check [ j ] = ' false ' ;"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘long long int m’"
    },
    {
      "mod_line": [
        0,
        13,
        18,
        16
      ],
      "mod_code": [
        "long long a , vest , match , n , m , m , y , y [ 100010 ] ;",
        "while ( a [ i ] - x > vest [ j ] || ! check [ j ] ) { j ++ ; }",
        "check [ j ] = ' false ' ;",
        "match [ i ] = ' j ' ;"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘long long int m’"
    },
    {
      "mod_line": [
        0,
        13,
        16
      ],
      "mod_code": [
        "long long a , vest , match , n , m , m , y , y [ 100010 ] ;",
        "while ( a [ i ] - x > vest [ j ] || ! check [ j ] ) { j ++ ; }",
        "match [ i ] = ' j ' ;"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘long long int m’"
    },
    {
      "mod_line": [
        0,
        13
      ],
      "mod_code": [
        "long long a , vest , match , n , m , m , y , y [ 100010 ] ;",
        "while ( a [ i ] - x > vest [ j ] || ! check [ j ] ) j ++ , j ++ ;"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘long long int m’"
    },
    {
      "mod_line": [
        0,
        13,
        3
      ],
      "mod_code": [
        "long long a , vest , match , n , m , m , y , y [ 100010 ] ;",
        "while ( a [ i ] - x > vest [ j ] || ! check [ j ] ) j ++ , j ++ ;",
        "int n , m , x , y ;"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘long long int m’"
    },
    {
      "mod_line": [
        0,
        13,
        3,
        18
      ],
      "mod_code": [
        "long long a , vest , match , n , m , m , y , y [ 100010 ] ;",
        "while ( a [ i ] - x > vest [ j ] || ! check [ j ] ) j ++ , j ++ ;",
        "int n , m , x , y ;",
        "check [ j ] = ' false ' ;"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘long long int m’"
    },
    {
      "mod_line": [
        0,
        13,
        3,
        16
      ],
      "mod_code": [
        "long long a , vest , match , n , m , m , y , y [ 100010 ] ;",
        "while ( a [ i ] - x > vest [ j ] || ! check [ j ] ) j ++ , j ++ ;",
        "int n , m , x , y ;",
        "match [ i ] = ' j ' ;"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘long long int m’"
    },
    {
      "mod_line": [
        0,
        13,
        18
      ],
      "mod_code": [
        "long long a , vest , match , n , m , m , y , y [ 100010 ] ;",
        "while ( a [ i ] - x > vest [ j ] || ! check [ j ] ) j ++ , j ++ ;",
        "check [ j ] = ' false ' ;"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘long long int m’"
    },
    {
      "mod_line": [
        0,
        13,
        18,
        16
      ],
      "mod_code": [
        "long long a , vest , match , n , m , m , y , y [ 100010 ] ;",
        "while ( a [ i ] - x > vest [ j ] || ! check [ j ] ) j ++ , j ++ ;",
        "check [ j ] = ' false ' ;",
        "match [ i ] = ' j ' ;"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘long long int m’"
    },
    {
      "mod_line": [
        0,
        13,
        16
      ],
      "mod_code": [
        "long long a , vest , match , n , m , m , y , y [ 100010 ] ;",
        "while ( a [ i ] - x > vest [ j ] || ! check [ j ] ) j ++ , j ++ ;",
        "match [ i ] = ' j ' ;"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘long long int m’"
    },
    {
      "mod_line": [
        0,
        3
      ],
      "mod_code": [
        "long long a , vest , match , n , m , m , y , y [ 100010 ] ;",
        "int n , m , x , y ;"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘long long int m’"
    },
    {
      "mod_line": [
        0,
        3,
        18
      ],
      "mod_code": [
        "long long a , vest , match , n , m , m , y , y [ 100010 ] ;",
        "int n , m , x , y ;",
        "check [ j ] = ' false ' ;"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘long long int m’"
    },
    {
      "mod_line": [
        0,
        3,
        18,
        16
      ],
      "mod_code": [
        "long long a , vest , match , n , m , m , y , y [ 100010 ] ;",
        "int n , m , x , y ;",
        "check [ j ] = ' false ' ;",
        "match [ i ] = ' j ' ;"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘long long int m’"
    },
    {
      "mod_line": [
        0,
        3,
        16
      ],
      "mod_code": [
        "long long a , vest , match , n , m , m , y , y [ 100010 ] ;",
        "int n , m , x , y ;",
        "match [ i ] = ' j ' ;"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘long long int m’"
    },
    {
      "mod_line": [
        0,
        18
      ],
      "mod_code": [
        "long long a , vest , match , n , m , m , y , y [ 100010 ] ;",
        "check [ j ] = ' false ' ;"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘long long int m’"
    },
    {
      "mod_line": [
        0,
        18,
        16
      ],
      "mod_code": [
        "long long a , vest , match , n , m , m , y , y [ 100010 ] ;",
        "check [ j ] = ' false ' ;",
        "match [ i ] = ' j ' ;"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘long long int m’"
    },
    {
      "mod_line": [
        0,
        16
      ],
      "mod_code": [
        "long long a , vest , match , n , m , m , y , y [ 100010 ] ;",
        "match [ i ] = ' j ' ;"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘long long int m’"
    }
  ]
}