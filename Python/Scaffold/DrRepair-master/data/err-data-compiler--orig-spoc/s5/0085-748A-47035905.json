{
  "meta": {
    "index": 85,
    "hitid": "3DWGDA5POFYLBVLCQK71QQW2J4D1V4",
    "workerid": "AIWEXPJAU66D9",
    "probid": "748A",
    "subid": "47035905"
  },
  "lines": [
    {
      "line": 0,
      "text": "declare void function preprocess",
      "code": "void preprocess ( void )",
      "indent": 0
    },
    {
      "line": 1,
      "text": "return",
      "code": "return ;",
      "indent": 1
    },
    {
      "line": 2,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    },
    {
      "line": 3,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 4,
      "text": "set decimal precision of the output to 20",
      "code": "cout . precision ( 20 ) ;",
      "indent": 1
    },
    {
      "line": 5,
      "text": "call function preprocess",
      "code": "preprocess ( ) ;",
      "indent": 1
    },
    {
      "line": 6,
      "text": "create integers n , m and k",
      "code": "int n , m , k ;",
      "indent": 1
    },
    {
      "line": 7,
      "text": "read n , m and k",
      "code": "cin >> n >> m >> k ;",
      "indent": 1
    },
    {
      "line": 8,
      "text": "create integer lane = ( k + 2 * m - 1 ) / ( 2 * m )",
      "code": "int lane = ( k + 2 * m - 1 ) / ( 2 * m ) ;",
      "indent": 1
    },
    {
      "line": 9,
      "text": "declare integer desk = k % ( 2 * m )",
      "code": "int desk = k % ( 2 * m ) ;",
      "indent": 1
    },
    {
      "line": 10,
      "text": "if desk = 0",
      "code": "if ( desk == 0 )",
      "indent": 1
    },
    {
      "line": 11,
      "text": "increase desk by m",
      "code": "desk += m ;",
      "indent": 2
    },
    {
      "line": 12,
      "text": "else",
      "code": "else",
      "indent": 1
    },
    {
      "line": 13,
      "text": "desk = ( desk + 1 ) / 2",
      "code": "desk = ( desk + 1 ) / 2 ;",
      "indent": 2
    },
    {
      "line": 14,
      "text": "print lane , \" \" , desk and \" \"",
      "code": "cout << lane << \" \" << desk << \" \" ;",
      "indent": 1
    },
    {
      "line": 15,
      "text": "if k % 2 is 1",
      "code": "if ( k % 2 )",
      "indent": 1
    },
    {
      "line": 16,
      "text": "print \" L \"",
      "code": "cout << \" L \" << endl ;",
      "indent": 2
    },
    {
      "line": 17,
      "text": "else",
      "code": "else",
      "indent": 1
    },
    {
      "line": 18,
      "text": "print \" R \"",
      "code": "cout << \" R \" << endl ;",
      "indent": 2
    },
    {
      "line": 19,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        0
      ],
      "mod_code": [
        "void preprocess ( ) { }"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        1
      ],
      "mod_code": [
        "return )"
      ],
      "err_line": 1,
      "err_msg": "expected primary-expression before ‘)’ token"
    },
    {
      "mod_line": [
        4
      ],
      "mod_code": [
        "cout . setf ( 20 ) ;"
      ],
      "err_line": 4,
      "err_msg": "invalid conversion from ‘int’ to ‘std::ios_base::fmtflags {aka std::_Ios_Fmtflags}’ [-fpermissive]"
    },
    {
      "mod_line": [
        5
      ],
      "mod_code": [
        "preprocess ( )"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before ‘int’"
    },
    {
      "mod_line": [
        8
      ],
      "mod_code": [
        "int * lane = ( k + 2 * m - 1 ) / ( 2 * m ) ;"
      ],
      "err_line": 8,
      "err_msg": "invalid conversion from ‘int’ to ‘int*’ [-fpermissive]"
    },
    {
      "mod_line": [
        10
      ],
      "mod_code": [
        "if ( desk == 0 ) continue ;"
      ],
      "err_line": 10,
      "err_msg": "continue statement not within a loop"
    },
    {
      "mod_line": [
        0,
        16
      ],
      "mod_code": [
        "void preprocess ( ) { }",
        "cout << \" L \" ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        0,
        16,
        18
      ],
      "mod_code": [
        "void preprocess ( ) { }",
        "cout << \" L \" ;",
        "cout << \" R \" ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        0,
        16,
        18,
        5
      ],
      "mod_code": [
        "void preprocess ( ) { }",
        "cout << \" L \" ;",
        "cout << \" R \" ;",
        "preprocess ( )"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        0,
        16,
        18,
        8
      ],
      "mod_code": [
        "void preprocess ( ) { }",
        "cout << \" L \" ;",
        "cout << \" R \" ;",
        "int * lane = ( k + 2 * m - 1 ) / ( 2 * m ) ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        0,
        16,
        18,
        13
      ],
      "mod_code": [
        "void preprocess ( ) { }",
        "cout << \" L \" ;",
        "cout << \" R \" ;",
        "int desk = ( desk + 1 ) / 2 ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        0,
        16,
        5
      ],
      "mod_code": [
        "void preprocess ( ) { }",
        "cout << \" L \" ;",
        "preprocess ( )"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        0,
        16,
        5,
        8
      ],
      "mod_code": [
        "void preprocess ( ) { }",
        "cout << \" L \" ;",
        "preprocess ( )",
        "int * lane = ( k + 2 * m - 1 ) / ( 2 * m ) ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        0,
        16,
        5,
        13
      ],
      "mod_code": [
        "void preprocess ( ) { }",
        "cout << \" L \" ;",
        "preprocess ( )",
        "int desk = ( desk + 1 ) / 2 ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        0,
        16,
        8
      ],
      "mod_code": [
        "void preprocess ( ) { }",
        "cout << \" L \" ;",
        "int * lane = ( k + 2 * m - 1 ) / ( 2 * m ) ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        0,
        16,
        8,
        13
      ],
      "mod_code": [
        "void preprocess ( ) { }",
        "cout << \" L \" ;",
        "int * lane = ( k + 2 * m - 1 ) / ( 2 * m ) ;",
        "int desk = ( desk + 1 ) / 2 ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        0,
        16,
        13
      ],
      "mod_code": [
        "void preprocess ( ) { }",
        "cout << \" L \" ;",
        "int desk = ( desk + 1 ) / 2 ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        0,
        18
      ],
      "mod_code": [
        "void preprocess ( ) { }",
        "cout << \" R \" ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        0,
        18,
        5
      ],
      "mod_code": [
        "void preprocess ( ) { }",
        "cout << \" R \" ;",
        "preprocess ( )"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        0,
        18,
        5,
        8
      ],
      "mod_code": [
        "void preprocess ( ) { }",
        "cout << \" R \" ;",
        "preprocess ( )",
        "int * lane = ( k + 2 * m - 1 ) / ( 2 * m ) ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        0,
        18,
        5,
        13
      ],
      "mod_code": [
        "void preprocess ( ) { }",
        "cout << \" R \" ;",
        "preprocess ( )",
        "int desk = ( desk + 1 ) / 2 ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        0,
        18,
        8
      ],
      "mod_code": [
        "void preprocess ( ) { }",
        "cout << \" R \" ;",
        "int * lane = ( k + 2 * m - 1 ) / ( 2 * m ) ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        0,
        18,
        8,
        13
      ],
      "mod_code": [
        "void preprocess ( ) { }",
        "cout << \" R \" ;",
        "int * lane = ( k + 2 * m - 1 ) / ( 2 * m ) ;",
        "int desk = ( desk + 1 ) / 2 ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        0,
        18,
        13
      ],
      "mod_code": [
        "void preprocess ( ) { }",
        "cout << \" R \" ;",
        "int desk = ( desk + 1 ) / 2 ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        0,
        5
      ],
      "mod_code": [
        "void preprocess ( ) { }",
        "preprocess ( )"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        0,
        5,
        8
      ],
      "mod_code": [
        "void preprocess ( ) { }",
        "preprocess ( )",
        "int * lane = ( k + 2 * m - 1 ) / ( 2 * m ) ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        0,
        5,
        8,
        13
      ],
      "mod_code": [
        "void preprocess ( ) { }",
        "preprocess ( )",
        "int * lane = ( k + 2 * m - 1 ) / ( 2 * m ) ;",
        "int desk = ( desk + 1 ) / 2 ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        0,
        5,
        13
      ],
      "mod_code": [
        "void preprocess ( ) { }",
        "preprocess ( )",
        "int desk = ( desk + 1 ) / 2 ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        0,
        8
      ],
      "mod_code": [
        "void preprocess ( ) { }",
        "int * lane = ( k + 2 * m - 1 ) / ( 2 * m ) ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        0,
        8,
        13
      ],
      "mod_code": [
        "void preprocess ( ) { }",
        "int * lane = ( k + 2 * m - 1 ) / ( 2 * m ) ;",
        "int desk = ( desk + 1 ) / 2 ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        0,
        13
      ],
      "mod_code": [
        "void preprocess ( ) { }",
        "int desk = ( desk + 1 ) / 2 ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        16,
        18,
        5
      ],
      "mod_code": [
        "cout << \" L \" ;",
        "cout << \" R \" ;",
        "preprocess ( )"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before ‘int’"
    },
    {
      "mod_line": [
        16,
        18,
        5,
        8
      ],
      "mod_code": [
        "cout << \" L \" ;",
        "cout << \" R \" ;",
        "preprocess ( )",
        "int * lane = ( k + 2 * m - 1 ) / ( 2 * m ) ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before ‘int’"
    },
    {
      "mod_line": [
        16,
        18,
        5,
        13
      ],
      "mod_code": [
        "cout << \" L \" ;",
        "cout << \" R \" ;",
        "preprocess ( )",
        "int desk = ( desk + 1 ) / 2 ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before ‘int’"
    },
    {
      "mod_line": [
        16,
        18,
        8
      ],
      "mod_code": [
        "cout << \" L \" ;",
        "cout << \" R \" ;",
        "int * lane = ( k + 2 * m - 1 ) / ( 2 * m ) ;"
      ],
      "err_line": 8,
      "err_msg": "invalid conversion from ‘int’ to ‘int*’ [-fpermissive]"
    },
    {
      "mod_line": [
        16,
        18,
        8,
        13
      ],
      "mod_code": [
        "cout << \" L \" ;",
        "cout << \" R \" ;",
        "int * lane = ( k + 2 * m - 1 ) / ( 2 * m ) ;",
        "int desk = ( desk + 1 ) / 2 ;"
      ],
      "err_line": 8,
      "err_msg": "invalid conversion from ‘int’ to ‘int*’ [-fpermissive]"
    },
    {
      "mod_line": [
        16,
        5
      ],
      "mod_code": [
        "cout << \" L \" ;",
        "preprocess ( )"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before ‘int’"
    },
    {
      "mod_line": [
        16,
        5,
        8
      ],
      "mod_code": [
        "cout << \" L \" ;",
        "preprocess ( )",
        "int * lane = ( k + 2 * m - 1 ) / ( 2 * m ) ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before ‘int’"
    },
    {
      "mod_line": [
        16,
        5,
        8,
        13
      ],
      "mod_code": [
        "cout << \" L \" ;",
        "preprocess ( )",
        "int * lane = ( k + 2 * m - 1 ) / ( 2 * m ) ;",
        "int desk = ( desk + 1 ) / 2 ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before ‘int’"
    },
    {
      "mod_line": [
        16,
        5,
        13
      ],
      "mod_code": [
        "cout << \" L \" ;",
        "preprocess ( )",
        "int desk = ( desk + 1 ) / 2 ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before ‘int’"
    },
    {
      "mod_line": [
        16,
        8
      ],
      "mod_code": [
        "cout << \" L \" ;",
        "int * lane = ( k + 2 * m - 1 ) / ( 2 * m ) ;"
      ],
      "err_line": 8,
      "err_msg": "invalid conversion from ‘int’ to ‘int*’ [-fpermissive]"
    },
    {
      "mod_line": [
        16,
        8,
        13
      ],
      "mod_code": [
        "cout << \" L \" ;",
        "int * lane = ( k + 2 * m - 1 ) / ( 2 * m ) ;",
        "int desk = ( desk + 1 ) / 2 ;"
      ],
      "err_line": 8,
      "err_msg": "invalid conversion from ‘int’ to ‘int*’ [-fpermissive]"
    },
    {
      "mod_line": [
        18,
        5
      ],
      "mod_code": [
        "cout << \" R \" ;",
        "preprocess ( )"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before ‘int’"
    },
    {
      "mod_line": [
        18,
        5,
        8
      ],
      "mod_code": [
        "cout << \" R \" ;",
        "preprocess ( )",
        "int * lane = ( k + 2 * m - 1 ) / ( 2 * m ) ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before ‘int’"
    },
    {
      "mod_line": [
        18,
        5,
        8,
        13
      ],
      "mod_code": [
        "cout << \" R \" ;",
        "preprocess ( )",
        "int * lane = ( k + 2 * m - 1 ) / ( 2 * m ) ;",
        "int desk = ( desk + 1 ) / 2 ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before ‘int’"
    },
    {
      "mod_line": [
        18,
        5,
        13
      ],
      "mod_code": [
        "cout << \" R \" ;",
        "preprocess ( )",
        "int desk = ( desk + 1 ) / 2 ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before ‘int’"
    },
    {
      "mod_line": [
        18,
        8
      ],
      "mod_code": [
        "cout << \" R \" ;",
        "int * lane = ( k + 2 * m - 1 ) / ( 2 * m ) ;"
      ],
      "err_line": 8,
      "err_msg": "invalid conversion from ‘int’ to ‘int*’ [-fpermissive]"
    },
    {
      "mod_line": [
        18,
        8,
        13
      ],
      "mod_code": [
        "cout << \" R \" ;",
        "int * lane = ( k + 2 * m - 1 ) / ( 2 * m ) ;",
        "int desk = ( desk + 1 ) / 2 ;"
      ],
      "err_line": 8,
      "err_msg": "invalid conversion from ‘int’ to ‘int*’ [-fpermissive]"
    },
    {
      "mod_line": [
        5,
        8
      ],
      "mod_code": [
        "preprocess ( )",
        "int * lane = ( k + 2 * m - 1 ) / ( 2 * m ) ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before ‘int’"
    },
    {
      "mod_line": [
        5,
        8,
        13
      ],
      "mod_code": [
        "preprocess ( )",
        "int * lane = ( k + 2 * m - 1 ) / ( 2 * m ) ;",
        "int desk = ( desk + 1 ) / 2 ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before ‘int’"
    },
    {
      "mod_line": [
        5,
        13
      ],
      "mod_code": [
        "preprocess ( )",
        "int desk = ( desk + 1 ) / 2 ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before ‘int’"
    },
    {
      "mod_line": [
        8,
        13
      ],
      "mod_code": [
        "int * lane = ( k + 2 * m - 1 ) / ( 2 * m ) ;",
        "int desk = ( desk + 1 ) / 2 ;"
      ],
      "err_line": 8,
      "err_msg": "invalid conversion from ‘int’ to ‘int*’ [-fpermissive]"
    }
  ]
}