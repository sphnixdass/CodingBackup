{
  "meta": {
    "index": 1640,
    "hitid": "3G3AJKPCXLMJ7OD0IDDNVN7ZDQ94YJ",
    "workerid": "A1APYLD4DUK33J",
    "probid": "17A",
    "subid": "48105678"
  },
  "lines": [
    {
      "line": 0,
      "text": "create integer vector prime",
      "code": "vector < int > prime ;",
      "indent": 0
    },
    {
      "line": 1,
      "text": "declare sieve with integer n as argument , returning void",
      "code": "void sieve ( int n )",
      "indent": 0
    },
    {
      "line": 2,
      "text": "create boolean isprime with size 4000",
      "code": "bool isprime [ 4000 ] ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "for i = 0 to 4000 exclusive , set isprime [ i ] to true",
      "code": "for ( int i = 0 ; i < 4000 ; i ++ ) isprime [ i ] = true ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "for i = 3 to i * i is less than 4000 , incrementing i by 2",
      "code": "for ( int i = 3 ; i * i <= 4000 ; i += 2 )",
      "indent": 1
    },
    {
      "line": 5,
      "text": "if isprime [ i ] is true",
      "code": "if ( isprime [ i ] )",
      "indent": 2
    },
    {
      "line": 6,
      "text": "for j = i * i to 4000 exclusive , incrementing j by i , set isprime [ j ] to false",
      "code": "for ( int j = i * i ; j < 4000 ; j += i ) { isprime [ j ] = false ; }",
      "indent": 3
    },
    {
      "line": 7,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 8,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 9,
      "text": "add element 2 to end of prime",
      "code": "prime . push_back ( 2 ) ;",
      "indent": 1
    },
    {
      "line": 10,
      "text": "for i = 3 to n inclusive , increment i by 2",
      "code": "for ( int i = 3 ; i <= n ; i += 2 )",
      "indent": 1
    },
    {
      "line": 11,
      "text": "if isprime [ i ] is true , add element i by prime",
      "code": "if ( isprime [ i ] ) { prime . push_back ( i ) ; }",
      "indent": 2
    },
    {
      "line": 12,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 13,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    },
    {
      "line": 14,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 15,
      "text": "create integers n , k",
      "code": "int n , k ;",
      "indent": 1
    },
    {
      "line": 16,
      "text": "read n read k",
      "code": "cin >> n >> k ;",
      "indent": 1
    },
    {
      "line": 17,
      "text": "run sieve with n as argument",
      "code": "sieve ( n ) ;",
      "indent": 1
    },
    {
      "line": 18,
      "text": "create integer cnt with cnt = 0",
      "code": "int cnt = 0 ;",
      "indent": 1
    },
    {
      "line": 19,
      "text": "for i = 0 to size of prime - 1 exclusive",
      "code": "for ( int i = 0 ; i < prime . size ( ) - 1 ; i ++ )",
      "indent": 1
    },
    {
      "line": 20,
      "text": "create integer num with num = reference to element at i in prime + reference to element at ( i + 1 ) in prime + 1",
      "code": "int num = prime . at ( i ) + prime . at ( i + 1 ) + 1 ;",
      "indent": 2
    },
    {
      "line": 21,
      "text": "if result of run binary_search with arguments beginning of prime , end of prime , num is true , increment cnt",
      "code": "if ( binary_search ( prime . begin ( ) , prime . end ( ) , num ) ) { cnt ++ ; }",
      "indent": 2
    },
    {
      "line": 22,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 23,
      "text": "if cnt is k",
      "code": "if ( cnt == k )",
      "indent": 1
    },
    {
      "line": 24,
      "text": "print \" YES \" print newline",
      "code": "cout << \" YES \" << endl ;",
      "indent": 2
    },
    {
      "line": 25,
      "text": "else",
      "code": "else",
      "indent": 1
    },
    {
      "line": 26,
      "text": "if k is 0",
      "code": "if ( k == 0 )",
      "indent": 2
    },
    {
      "line": 27,
      "text": "print \" YES \" print newline",
      "code": "cout << \" YES \" << endl ;",
      "indent": 3
    },
    {
      "line": 28,
      "text": "else",
      "code": "else",
      "indent": 2
    },
    {
      "line": 29,
      "text": "print \" NO \" print newline",
      "code": "cout << \" NO \" << endl ;",
      "indent": 3
    },
    {
      "line": 30,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 31,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 32,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 33,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        9
      ],
      "mod_code": [
        "prime . push ( 2 ) ;"
      ],
      "err_line": 9,
      "err_msg": "‘class std::vector<int>’ has no member named ‘push’"
    },
    {
      "mod_line": [
        11
      ],
      "mod_code": [
        "if ( isprime [ i ] ) isprime . push_back ( i ) ;"
      ],
      "err_line": 11,
      "err_msg": "request for member ‘push_back’ in ‘isprime’, which is of non-class type ‘bool [4000]’"
    },
    {
      "mod_line": [
        20
      ],
      "mod_code": [
        "int num = abs ( prime ( i + 1 ) ) + abs ( i + 1 ) ;"
      ],
      "err_line": 20,
      "err_msg": "no match for call to ‘(std::vector<int>) (int)’"
    },
    {
      "mod_line": [
        1
      ],
      "mod_code": [
        "void sieve ( int n ) ;"
      ],
      "err_line": 2,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        2
      ],
      "mod_code": [
        "bool isprime ( 4000 ) ;"
      ],
      "err_line": 3,
      "err_msg": "invalid types ‘bool[int]’ for array subscript"
    },
    {
      "mod_line": [
        4
      ],
      "mod_code": [
        "for ( i = 3 ; i * i < 4000 ; i += 2 )"
      ],
      "err_line": 4,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        6
      ],
      "mod_code": [
        "for ( j = i * i ; j < 4000 ; j += i ) { isprime [ j ] = false ; }"
      ],
      "err_line": 6,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        10
      ],
      "mod_code": [
        "for ( i = 3 ; i <= n ; i += 2 )"
      ],
      "err_line": 10,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        11
      ],
      "mod_code": [
        "if ( isprime [ i ] ) { isprime += i ; }"
      ],
      "err_line": 11,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘bool [4000]’"
    },
    {
      "mod_line": [
        19
      ],
      "mod_code": [
        "for ( i = 0 ; i < prime . size ( ) - 1 ; i ++ )"
      ],
      "err_line": 19,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        20
      ],
      "mod_code": [
        "int num = ceil ( prime ( i + 1 ) ) + abs ( i + 1 ) ;"
      ],
      "err_line": 20,
      "err_msg": "no match for call to ‘(std::vector<int>) (int)’"
    },
    {
      "mod_line": [
        9,
        11
      ],
      "mod_code": [
        "prime . push ( 2 ) ;",
        "if ( isprime [ i ] ) isprime . push_back ( i ) ;"
      ],
      "err_line": 9,
      "err_msg": "‘class std::vector<int>’ has no member named ‘push’"
    },
    {
      "mod_line": [
        9,
        11,
        20
      ],
      "mod_code": [
        "prime . push ( 2 ) ;",
        "if ( isprime [ i ] ) isprime . push_back ( i ) ;",
        "int num = abs ( prime ( i + 1 ) ) + abs ( i + 1 ) ;"
      ],
      "err_line": 9,
      "err_msg": "‘class std::vector<int>’ has no member named ‘push’"
    },
    {
      "mod_line": [
        9,
        11,
        20,
        1
      ],
      "mod_code": [
        "prime . push ( 2 ) ;",
        "if ( isprime [ i ] ) isprime . push_back ( i ) ;",
        "int num = abs ( prime ( i + 1 ) ) + abs ( i + 1 ) ;",
        "void sieve ( int n ) ;"
      ],
      "err_line": 2,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        9,
        11,
        20,
        19
      ],
      "mod_code": [
        "prime . push ( 2 ) ;",
        "if ( isprime [ i ] ) isprime . push_back ( i ) ;",
        "int num = abs ( prime ( i + 1 ) ) + abs ( i + 1 ) ;",
        "for ( i = 0 ; i < prime . size ( ) - 1 ; i ++ )"
      ],
      "err_line": 9,
      "err_msg": "‘class std::vector<int>’ has no member named ‘push’"
    },
    {
      "mod_line": [
        9,
        11,
        20
      ],
      "mod_code": [
        "prime . push ( 2 ) ;",
        "if ( isprime [ i ] ) isprime . push_back ( i ) ;",
        "int num = ceil ( prime ( i + 1 ) ) + abs ( i + 1 ) ;"
      ],
      "err_line": 9,
      "err_msg": "‘class std::vector<int>’ has no member named ‘push’"
    },
    {
      "mod_line": [
        9,
        11,
        20,
        1
      ],
      "mod_code": [
        "prime . push ( 2 ) ;",
        "if ( isprime [ i ] ) isprime . push_back ( i ) ;",
        "int num = ceil ( prime ( i + 1 ) ) + abs ( i + 1 ) ;",
        "void sieve ( int n ) ;"
      ],
      "err_line": 2,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        9,
        11,
        20,
        19
      ],
      "mod_code": [
        "prime . push ( 2 ) ;",
        "if ( isprime [ i ] ) isprime . push_back ( i ) ;",
        "int num = ceil ( prime ( i + 1 ) ) + abs ( i + 1 ) ;",
        "for ( i = 0 ; i < prime . size ( ) - 1 ; i ++ )"
      ],
      "err_line": 9,
      "err_msg": "‘class std::vector<int>’ has no member named ‘push’"
    },
    {
      "mod_line": [
        9,
        11,
        1
      ],
      "mod_code": [
        "prime . push ( 2 ) ;",
        "if ( isprime [ i ] ) isprime . push_back ( i ) ;",
        "void sieve ( int n ) ;"
      ],
      "err_line": 2,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        9,
        11,
        1,
        19
      ],
      "mod_code": [
        "prime . push ( 2 ) ;",
        "if ( isprime [ i ] ) isprime . push_back ( i ) ;",
        "void sieve ( int n ) ;",
        "for ( i = 0 ; i < prime . size ( ) - 1 ; i ++ )"
      ],
      "err_line": 2,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        9,
        11,
        19
      ],
      "mod_code": [
        "prime . push ( 2 ) ;",
        "if ( isprime [ i ] ) isprime . push_back ( i ) ;",
        "for ( i = 0 ; i < prime . size ( ) - 1 ; i ++ )"
      ],
      "err_line": 9,
      "err_msg": "‘class std::vector<int>’ has no member named ‘push’"
    },
    {
      "mod_line": [
        9,
        20
      ],
      "mod_code": [
        "prime . push ( 2 ) ;",
        "int num = abs ( prime ( i + 1 ) ) + abs ( i + 1 ) ;"
      ],
      "err_line": 9,
      "err_msg": "‘class std::vector<int>’ has no member named ‘push’"
    },
    {
      "mod_line": [
        9,
        20,
        1
      ],
      "mod_code": [
        "prime . push ( 2 ) ;",
        "int num = abs ( prime ( i + 1 ) ) + abs ( i + 1 ) ;",
        "void sieve ( int n ) ;"
      ],
      "err_line": 2,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        9,
        20,
        1,
        19
      ],
      "mod_code": [
        "prime . push ( 2 ) ;",
        "int num = abs ( prime ( i + 1 ) ) + abs ( i + 1 ) ;",
        "void sieve ( int n ) ;",
        "for ( i = 0 ; i < prime . size ( ) - 1 ; i ++ )"
      ],
      "err_line": 2,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        9,
        20,
        19
      ],
      "mod_code": [
        "prime . push ( 2 ) ;",
        "int num = abs ( prime ( i + 1 ) ) + abs ( i + 1 ) ;",
        "for ( i = 0 ; i < prime . size ( ) - 1 ; i ++ )"
      ],
      "err_line": 9,
      "err_msg": "‘class std::vector<int>’ has no member named ‘push’"
    },
    {
      "mod_line": [
        9,
        20
      ],
      "mod_code": [
        "prime . push ( 2 ) ;",
        "int num = ceil ( prime ( i + 1 ) ) + abs ( i + 1 ) ;"
      ],
      "err_line": 9,
      "err_msg": "‘class std::vector<int>’ has no member named ‘push’"
    },
    {
      "mod_line": [
        9,
        20,
        1
      ],
      "mod_code": [
        "prime . push ( 2 ) ;",
        "int num = ceil ( prime ( i + 1 ) ) + abs ( i + 1 ) ;",
        "void sieve ( int n ) ;"
      ],
      "err_line": 2,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        9,
        20,
        1,
        19
      ],
      "mod_code": [
        "prime . push ( 2 ) ;",
        "int num = ceil ( prime ( i + 1 ) ) + abs ( i + 1 ) ;",
        "void sieve ( int n ) ;",
        "for ( i = 0 ; i < prime . size ( ) - 1 ; i ++ )"
      ],
      "err_line": 2,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        9,
        20,
        19
      ],
      "mod_code": [
        "prime . push ( 2 ) ;",
        "int num = ceil ( prime ( i + 1 ) ) + abs ( i + 1 ) ;",
        "for ( i = 0 ; i < prime . size ( ) - 1 ; i ++ )"
      ],
      "err_line": 9,
      "err_msg": "‘class std::vector<int>’ has no member named ‘push’"
    },
    {
      "mod_line": [
        9,
        1
      ],
      "mod_code": [
        "prime . push ( 2 ) ;",
        "void sieve ( int n ) ;"
      ],
      "err_line": 2,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        9,
        1,
        19
      ],
      "mod_code": [
        "prime . push ( 2 ) ;",
        "void sieve ( int n ) ;",
        "for ( i = 0 ; i < prime . size ( ) - 1 ; i ++ )"
      ],
      "err_line": 2,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        9,
        19
      ],
      "mod_code": [
        "prime . push ( 2 ) ;",
        "for ( i = 0 ; i < prime . size ( ) - 1 ; i ++ )"
      ],
      "err_line": 9,
      "err_msg": "‘class std::vector<int>’ has no member named ‘push’"
    },
    {
      "mod_line": [
        11,
        20
      ],
      "mod_code": [
        "if ( isprime [ i ] ) isprime . push_back ( i ) ;",
        "int num = abs ( prime ( i + 1 ) ) + abs ( i + 1 ) ;"
      ],
      "err_line": 11,
      "err_msg": "request for member ‘push_back’ in ‘isprime’, which is of non-class type ‘bool [4000]’"
    },
    {
      "mod_line": [
        11,
        20,
        1
      ],
      "mod_code": [
        "if ( isprime [ i ] ) isprime . push_back ( i ) ;",
        "int num = abs ( prime ( i + 1 ) ) + abs ( i + 1 ) ;",
        "void sieve ( int n ) ;"
      ],
      "err_line": 2,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        11,
        20,
        1,
        19
      ],
      "mod_code": [
        "if ( isprime [ i ] ) isprime . push_back ( i ) ;",
        "int num = abs ( prime ( i + 1 ) ) + abs ( i + 1 ) ;",
        "void sieve ( int n ) ;",
        "for ( i = 0 ; i < prime . size ( ) - 1 ; i ++ )"
      ],
      "err_line": 2,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        11,
        20,
        19
      ],
      "mod_code": [
        "if ( isprime [ i ] ) isprime . push_back ( i ) ;",
        "int num = abs ( prime ( i + 1 ) ) + abs ( i + 1 ) ;",
        "for ( i = 0 ; i < prime . size ( ) - 1 ; i ++ )"
      ],
      "err_line": 11,
      "err_msg": "request for member ‘push_back’ in ‘isprime’, which is of non-class type ‘bool [4000]’"
    },
    {
      "mod_line": [
        11,
        20
      ],
      "mod_code": [
        "if ( isprime [ i ] ) isprime . push_back ( i ) ;",
        "int num = ceil ( prime ( i + 1 ) ) + abs ( i + 1 ) ;"
      ],
      "err_line": 11,
      "err_msg": "request for member ‘push_back’ in ‘isprime’, which is of non-class type ‘bool [4000]’"
    },
    {
      "mod_line": [
        11,
        20,
        1
      ],
      "mod_code": [
        "if ( isprime [ i ] ) isprime . push_back ( i ) ;",
        "int num = ceil ( prime ( i + 1 ) ) + abs ( i + 1 ) ;",
        "void sieve ( int n ) ;"
      ],
      "err_line": 2,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        11,
        20,
        1,
        19
      ],
      "mod_code": [
        "if ( isprime [ i ] ) isprime . push_back ( i ) ;",
        "int num = ceil ( prime ( i + 1 ) ) + abs ( i + 1 ) ;",
        "void sieve ( int n ) ;",
        "for ( i = 0 ; i < prime . size ( ) - 1 ; i ++ )"
      ],
      "err_line": 2,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        11,
        20,
        19
      ],
      "mod_code": [
        "if ( isprime [ i ] ) isprime . push_back ( i ) ;",
        "int num = ceil ( prime ( i + 1 ) ) + abs ( i + 1 ) ;",
        "for ( i = 0 ; i < prime . size ( ) - 1 ; i ++ )"
      ],
      "err_line": 11,
      "err_msg": "request for member ‘push_back’ in ‘isprime’, which is of non-class type ‘bool [4000]’"
    },
    {
      "mod_line": [
        11,
        1
      ],
      "mod_code": [
        "if ( isprime [ i ] ) isprime . push_back ( i ) ;",
        "void sieve ( int n ) ;"
      ],
      "err_line": 2,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        11,
        1,
        19
      ],
      "mod_code": [
        "if ( isprime [ i ] ) isprime . push_back ( i ) ;",
        "void sieve ( int n ) ;",
        "for ( i = 0 ; i < prime . size ( ) - 1 ; i ++ )"
      ],
      "err_line": 2,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        11,
        19
      ],
      "mod_code": [
        "if ( isprime [ i ] ) isprime . push_back ( i ) ;",
        "for ( i = 0 ; i < prime . size ( ) - 1 ; i ++ )"
      ],
      "err_line": 11,
      "err_msg": "request for member ‘push_back’ in ‘isprime’, which is of non-class type ‘bool [4000]’"
    },
    {
      "mod_line": [
        20,
        1
      ],
      "mod_code": [
        "int num = abs ( prime ( i + 1 ) ) + abs ( i + 1 ) ;",
        "void sieve ( int n ) ;"
      ],
      "err_line": 2,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        20,
        1,
        19
      ],
      "mod_code": [
        "int num = abs ( prime ( i + 1 ) ) + abs ( i + 1 ) ;",
        "void sieve ( int n ) ;",
        "for ( i = 0 ; i < prime . size ( ) - 1 ; i ++ )"
      ],
      "err_line": 2,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        20,
        19
      ],
      "mod_code": [
        "int num = abs ( prime ( i + 1 ) ) + abs ( i + 1 ) ;",
        "for ( i = 0 ; i < prime . size ( ) - 1 ; i ++ )"
      ],
      "err_line": 19,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        1
      ],
      "mod_code": [
        "int num = ceil ( prime ( i + 1 ) ) + abs ( i + 1 ) ;",
        "void sieve ( int n ) ;"
      ],
      "err_line": 2,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        20,
        1,
        19
      ],
      "mod_code": [
        "int num = ceil ( prime ( i + 1 ) ) + abs ( i + 1 ) ;",
        "void sieve ( int n ) ;",
        "for ( i = 0 ; i < prime . size ( ) - 1 ; i ++ )"
      ],
      "err_line": 2,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        20,
        19
      ],
      "mod_code": [
        "int num = ceil ( prime ( i + 1 ) ) + abs ( i + 1 ) ;",
        "for ( i = 0 ; i < prime . size ( ) - 1 ; i ++ )"
      ],
      "err_line": 19,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        19
      ],
      "mod_code": [
        "void sieve ( int n ) ;",
        "for ( i = 0 ; i < prime . size ( ) - 1 ; i ++ )"
      ],
      "err_line": 2,
      "err_msg": "expected unqualified-id before ‘{’ token"
    }
  ]
}