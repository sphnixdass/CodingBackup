{
  "meta": {
    "index": 1031,
    "hitid": "3T2EL38U0ME1WOAOBEYYFC1V7RCQXQ",
    "workerid": "A1APYLD4DUK33J",
    "probid": "282A",
    "subid": "48554923"
  },
  "lines": [
    {
      "line": 0,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 1,
      "text": "create integers t , s , with s = 0",
      "code": "int t , s = 0 ;",
      "indent": 1
    },
    {
      "line": 2,
      "text": "create character array x with size 10",
      "code": "char x [ 10 ] ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "read t",
      "code": "cin >> t ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "for i = 1 to t inclusive",
      "code": "for ( int i = 1 ; i <= t ; i ++ )",
      "indent": 1
    },
    {
      "line": 5,
      "text": "read x",
      "code": "cin >> x ;",
      "indent": 2
    },
    {
      "line": 6,
      "text": "if string compare between x and \" X + + \" is 0 or string compare b etween x and \" + + X \" is 0",
      "code": "if ( strcmp ( x , \" X++ \" ) == 0 || strcmp ( x , \" ++X \" ) == 0 )",
      "indent": 2
    },
    {
      "line": 7,
      "text": "increment s by 1",
      "code": "s += 1 ;",
      "indent": 3
    },
    {
      "line": 8,
      "text": "else if string compare between x and \" X - - \" is 0 or string compare between x and \" - - X \" is 0",
      "code": "else if ( strcmp ( x , \" X-- \" ) == 0 || strcmp ( x , \" --X \" ) == 0 )",
      "indent": 2
    },
    {
      "line": 9,
      "text": "decrement s by 1",
      "code": "s -= 1 ;",
      "indent": 3
    },
    {
      "line": 10,
      "text": "set s to s",
      "code": "s = s ;",
      "indent": 2
    },
    {
      "line": 11,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 12,
      "text": "print s print newline",
      "code": "cout << s << endl ;",
      "indent": 1
    },
    {
      "line": 13,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 14,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        8
      ],
      "mod_code": [
        "else if ( strcmp ( x , \" - \" ) == 0 || x . substr ( x , - X ) == 0 )"
      ],
      "err_line": 8,
      "err_msg": "request for member ‘substr’ in ‘x’, which is of non-class type ‘char [10]’"
    },
    {
      "mod_line": [
        2
      ],
      "mod_code": [
        "char * x [ 10 ] ;"
      ],
      "err_line": 5,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘char* [10]’)"
    },
    {
      "mod_line": [
        3
      ],
      "mod_code": [
        "cin . get ( t ) ;"
      ],
      "err_line": 3,
      "err_msg": "invalid initialization of non-const reference of type ‘std::basic_istream<char>::char_type& {aka char&}’ from an rvalue of type ‘std::basic_istream<char>::char_type {aka char}’"
    },
    {
      "mod_line": [
        4
      ],
      "mod_code": [
        "for ( i = 1 ; i <= t ; i ++ )"
      ],
      "err_line": 4,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        5
      ],
      "mod_code": [
        "cin >> n ;"
      ],
      "err_line": 5,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        6
      ],
      "mod_code": [
        "if ( strcmp ( x , \" X \" ) == 0 || b . find ( b + x , \" + X ) == 0 )"
      ],
      "err_line": 6,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        8
      ],
      "mod_code": [
        "else if ( strcmp ( x , \" X \" ) == 0 || x . substr ( x , - X ) == 0 )"
      ],
      "err_line": 8,
      "err_msg": "request for member ‘substr’ in ‘x’, which is of non-class type ‘char [10]’"
    },
    {
      "mod_line": [
        6,
        8
      ],
      "mod_code": [
        "if ( strcmp ( x , \" X \" ) )",
        "else if ( strcmp ( x , \" - \" ) == 0 || x . substr ( x , - X ) == 0 )"
      ],
      "err_line": 8,
      "err_msg": "request for member ‘substr’ in ‘x’, which is of non-class type ‘char [10]’"
    },
    {
      "mod_line": [
        6,
        8,
        2
      ],
      "mod_code": [
        "if ( strcmp ( x , \" X \" ) )",
        "else if ( strcmp ( x , \" - \" ) == 0 || x . substr ( x , - X ) == 0 )",
        "char * x [ 10 ] ;"
      ],
      "err_line": 5,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘char* [10]’)"
    },
    {
      "mod_line": [
        6,
        8,
        2,
        4
      ],
      "mod_code": [
        "if ( strcmp ( x , \" X \" ) )",
        "else if ( strcmp ( x , \" - \" ) == 0 || x . substr ( x , - X ) == 0 )",
        "char * x [ 10 ] ;",
        "for ( i = 1 ; i <= t ; i ++ )"
      ],
      "err_line": 4,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        8,
        2,
        3
      ],
      "mod_code": [
        "if ( strcmp ( x , \" X \" ) )",
        "else if ( strcmp ( x , \" - \" ) == 0 || x . substr ( x , - X ) == 0 )",
        "char * x [ 10 ] ;",
        "cin . get ( t ) ;"
      ],
      "err_line": 3,
      "err_msg": "invalid initialization of non-const reference of type ‘std::basic_istream<char>::char_type& {aka char&}’ from an rvalue of type ‘std::basic_istream<char>::char_type {aka char}’"
    },
    {
      "mod_line": [
        6,
        8,
        4
      ],
      "mod_code": [
        "if ( strcmp ( x , \" X \" ) )",
        "else if ( strcmp ( x , \" - \" ) == 0 || x . substr ( x , - X ) == 0 )",
        "for ( i = 1 ; i <= t ; i ++ )"
      ],
      "err_line": 4,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        8,
        4,
        3
      ],
      "mod_code": [
        "if ( strcmp ( x , \" X \" ) )",
        "else if ( strcmp ( x , \" - \" ) == 0 || x . substr ( x , - X ) == 0 )",
        "for ( i = 1 ; i <= t ; i ++ )",
        "cin . get ( t ) ;"
      ],
      "err_line": 3,
      "err_msg": "invalid initialization of non-const reference of type ‘std::basic_istream<char>::char_type& {aka char&}’ from an rvalue of type ‘std::basic_istream<char>::char_type {aka char}’"
    },
    {
      "mod_line": [
        6,
        8,
        3
      ],
      "mod_code": [
        "if ( strcmp ( x , \" X \" ) )",
        "else if ( strcmp ( x , \" - \" ) == 0 || x . substr ( x , - X ) == 0 )",
        "cin . get ( t ) ;"
      ],
      "err_line": 3,
      "err_msg": "invalid initialization of non-const reference of type ‘std::basic_istream<char>::char_type& {aka char&}’ from an rvalue of type ‘std::basic_istream<char>::char_type {aka char}’"
    },
    {
      "mod_line": [
        6,
        2
      ],
      "mod_code": [
        "if ( strcmp ( x , \" X \" ) )",
        "char * x [ 10 ] ;"
      ],
      "err_line": 5,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘char* [10]’)"
    },
    {
      "mod_line": [
        6,
        2,
        4
      ],
      "mod_code": [
        "if ( strcmp ( x , \" X \" ) )",
        "char * x [ 10 ] ;",
        "for ( i = 1 ; i <= t ; i ++ )"
      ],
      "err_line": 4,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        2,
        4,
        3
      ],
      "mod_code": [
        "if ( strcmp ( x , \" X \" ) )",
        "char * x [ 10 ] ;",
        "for ( i = 1 ; i <= t ; i ++ )",
        "cin . get ( t ) ;"
      ],
      "err_line": 3,
      "err_msg": "invalid initialization of non-const reference of type ‘std::basic_istream<char>::char_type& {aka char&}’ from an rvalue of type ‘std::basic_istream<char>::char_type {aka char}’"
    },
    {
      "mod_line": [
        6,
        2,
        3
      ],
      "mod_code": [
        "if ( strcmp ( x , \" X \" ) )",
        "char * x [ 10 ] ;",
        "cin . get ( t ) ;"
      ],
      "err_line": 3,
      "err_msg": "invalid initialization of non-const reference of type ‘std::basic_istream<char>::char_type& {aka char&}’ from an rvalue of type ‘std::basic_istream<char>::char_type {aka char}’"
    },
    {
      "mod_line": [
        6,
        4
      ],
      "mod_code": [
        "if ( strcmp ( x , \" X \" ) )",
        "for ( i = 1 ; i <= t ; i ++ )"
      ],
      "err_line": 4,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        4,
        3
      ],
      "mod_code": [
        "if ( strcmp ( x , \" X \" ) )",
        "for ( i = 1 ; i <= t ; i ++ )",
        "cin . get ( t ) ;"
      ],
      "err_line": 3,
      "err_msg": "invalid initialization of non-const reference of type ‘std::basic_istream<char>::char_type& {aka char&}’ from an rvalue of type ‘std::basic_istream<char>::char_type {aka char}’"
    },
    {
      "mod_line": [
        6,
        3
      ],
      "mod_code": [
        "if ( strcmp ( x , \" X \" ) )",
        "cin . get ( t ) ;"
      ],
      "err_line": 3,
      "err_msg": "invalid initialization of non-const reference of type ‘std::basic_istream<char>::char_type& {aka char&}’ from an rvalue of type ‘std::basic_istream<char>::char_type {aka char}’"
    },
    {
      "mod_line": [
        8,
        6
      ],
      "mod_code": [
        "else if ( strcmp ( x , \" - \" ) == 0 || x . substr ( x , - X ) == 0 )",
        "if ( strcmp ( x , \" X \" ) == 0 || b . find ( b + x , \" + X ) == 0 )"
      ],
      "err_line": 6,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        8,
        6,
        2
      ],
      "mod_code": [
        "else if ( strcmp ( x , \" - \" ) == 0 || x . substr ( x , - X ) == 0 )",
        "if ( strcmp ( x , \" X \" ) == 0 || b . find ( b + x , \" + X ) == 0 )",
        "char * x [ 10 ] ;"
      ],
      "err_line": 6,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        8,
        6,
        2,
        4
      ],
      "mod_code": [
        "else if ( strcmp ( x , \" - \" ) == 0 || x . substr ( x , - X ) == 0 )",
        "if ( strcmp ( x , \" X \" ) == 0 || b . find ( b + x , \" + X ) == 0 )",
        "char * x [ 10 ] ;",
        "for ( i = 1 ; i <= t ; i ++ )"
      ],
      "err_line": 6,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        8,
        6,
        2,
        3
      ],
      "mod_code": [
        "else if ( strcmp ( x , \" - \" ) == 0 || x . substr ( x , - X ) == 0 )",
        "if ( strcmp ( x , \" X \" ) == 0 || b . find ( b + x , \" + X ) == 0 )",
        "char * x [ 10 ] ;",
        "cin . get ( t ) ;"
      ],
      "err_line": 6,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        8,
        6,
        4
      ],
      "mod_code": [
        "else if ( strcmp ( x , \" - \" ) == 0 || x . substr ( x , - X ) == 0 )",
        "if ( strcmp ( x , \" X \" ) == 0 || b . find ( b + x , \" + X ) == 0 )",
        "for ( i = 1 ; i <= t ; i ++ )"
      ],
      "err_line": 6,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        8,
        6,
        4,
        3
      ],
      "mod_code": [
        "else if ( strcmp ( x , \" - \" ) == 0 || x . substr ( x , - X ) == 0 )",
        "if ( strcmp ( x , \" X \" ) == 0 || b . find ( b + x , \" + X ) == 0 )",
        "for ( i = 1 ; i <= t ; i ++ )",
        "cin . get ( t ) ;"
      ],
      "err_line": 6,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        8,
        6,
        3
      ],
      "mod_code": [
        "else if ( strcmp ( x , \" - \" ) == 0 || x . substr ( x , - X ) == 0 )",
        "if ( strcmp ( x , \" X \" ) == 0 || b . find ( b + x , \" + X ) == 0 )",
        "cin . get ( t ) ;"
      ],
      "err_line": 6,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        8,
        2
      ],
      "mod_code": [
        "else if ( strcmp ( x , \" - \" ) == 0 || x . substr ( x , - X ) == 0 )",
        "char * x [ 10 ] ;"
      ],
      "err_line": 5,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘char* [10]’)"
    },
    {
      "mod_line": [
        8,
        2,
        4
      ],
      "mod_code": [
        "else if ( strcmp ( x , \" - \" ) == 0 || x . substr ( x , - X ) == 0 )",
        "char * x [ 10 ] ;",
        "for ( i = 1 ; i <= t ; i ++ )"
      ],
      "err_line": 4,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        8,
        2,
        4,
        3
      ],
      "mod_code": [
        "else if ( strcmp ( x , \" - \" ) == 0 || x . substr ( x , - X ) == 0 )",
        "char * x [ 10 ] ;",
        "for ( i = 1 ; i <= t ; i ++ )",
        "cin . get ( t ) ;"
      ],
      "err_line": 3,
      "err_msg": "invalid initialization of non-const reference of type ‘std::basic_istream<char>::char_type& {aka char&}’ from an rvalue of type ‘std::basic_istream<char>::char_type {aka char}’"
    },
    {
      "mod_line": [
        8,
        2,
        3
      ],
      "mod_code": [
        "else if ( strcmp ( x , \" - \" ) == 0 || x . substr ( x , - X ) == 0 )",
        "char * x [ 10 ] ;",
        "cin . get ( t ) ;"
      ],
      "err_line": 3,
      "err_msg": "invalid initialization of non-const reference of type ‘std::basic_istream<char>::char_type& {aka char&}’ from an rvalue of type ‘std::basic_istream<char>::char_type {aka char}’"
    },
    {
      "mod_line": [
        8,
        4
      ],
      "mod_code": [
        "else if ( strcmp ( x , \" - \" ) == 0 || x . substr ( x , - X ) == 0 )",
        "for ( i = 1 ; i <= t ; i ++ )"
      ],
      "err_line": 4,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        8,
        4,
        3
      ],
      "mod_code": [
        "else if ( strcmp ( x , \" - \" ) == 0 || x . substr ( x , - X ) == 0 )",
        "for ( i = 1 ; i <= t ; i ++ )",
        "cin . get ( t ) ;"
      ],
      "err_line": 3,
      "err_msg": "invalid initialization of non-const reference of type ‘std::basic_istream<char>::char_type& {aka char&}’ from an rvalue of type ‘std::basic_istream<char>::char_type {aka char}’"
    },
    {
      "mod_line": [
        8,
        3
      ],
      "mod_code": [
        "else if ( strcmp ( x , \" - \" ) == 0 || x . substr ( x , - X ) == 0 )",
        "cin . get ( t ) ;"
      ],
      "err_line": 3,
      "err_msg": "invalid initialization of non-const reference of type ‘std::basic_istream<char>::char_type& {aka char&}’ from an rvalue of type ‘std::basic_istream<char>::char_type {aka char}’"
    },
    {
      "mod_line": [
        6,
        2
      ],
      "mod_code": [
        "if ( strcmp ( x , \" X \" ) == 0 || b . find ( b + x , \" + X ) == 0 )",
        "char * x [ 10 ] ;"
      ],
      "err_line": 6,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        6,
        2,
        4
      ],
      "mod_code": [
        "if ( strcmp ( x , \" X \" ) == 0 || b . find ( b + x , \" + X ) == 0 )",
        "char * x [ 10 ] ;",
        "for ( i = 1 ; i <= t ; i ++ )"
      ],
      "err_line": 6,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        6,
        2,
        4,
        3
      ],
      "mod_code": [
        "if ( strcmp ( x , \" X \" ) == 0 || b . find ( b + x , \" + X ) == 0 )",
        "char * x [ 10 ] ;",
        "for ( i = 1 ; i <= t ; i ++ )",
        "cin . get ( t ) ;"
      ],
      "err_line": 6,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        6,
        2,
        3
      ],
      "mod_code": [
        "if ( strcmp ( x , \" X \" ) == 0 || b . find ( b + x , \" + X ) == 0 )",
        "char * x [ 10 ] ;",
        "cin . get ( t ) ;"
      ],
      "err_line": 6,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        6,
        4
      ],
      "mod_code": [
        "if ( strcmp ( x , \" X \" ) == 0 || b . find ( b + x , \" + X ) == 0 )",
        "for ( i = 1 ; i <= t ; i ++ )"
      ],
      "err_line": 6,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        6,
        4,
        3
      ],
      "mod_code": [
        "if ( strcmp ( x , \" X \" ) == 0 || b . find ( b + x , \" + X ) == 0 )",
        "for ( i = 1 ; i <= t ; i ++ )",
        "cin . get ( t ) ;"
      ],
      "err_line": 6,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        6,
        3
      ],
      "mod_code": [
        "if ( strcmp ( x , \" X \" ) == 0 || b . find ( b + x , \" + X ) == 0 )",
        "cin . get ( t ) ;"
      ],
      "err_line": 6,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        2,
        4
      ],
      "mod_code": [
        "char * x [ 10 ] ;",
        "for ( i = 1 ; i <= t ; i ++ )"
      ],
      "err_line": 4,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        2,
        4,
        3
      ],
      "mod_code": [
        "char * x [ 10 ] ;",
        "for ( i = 1 ; i <= t ; i ++ )",
        "cin . get ( t ) ;"
      ],
      "err_line": 3,
      "err_msg": "invalid initialization of non-const reference of type ‘std::basic_istream<char>::char_type& {aka char&}’ from an rvalue of type ‘std::basic_istream<char>::char_type {aka char}’"
    },
    {
      "mod_line": [
        2,
        3
      ],
      "mod_code": [
        "char * x [ 10 ] ;",
        "cin . get ( t ) ;"
      ],
      "err_line": 3,
      "err_msg": "invalid initialization of non-const reference of type ‘std::basic_istream<char>::char_type& {aka char&}’ from an rvalue of type ‘std::basic_istream<char>::char_type {aka char}’"
    },
    {
      "mod_line": [
        4,
        3
      ],
      "mod_code": [
        "for ( i = 1 ; i <= t ; i ++ )",
        "cin . get ( t ) ;"
      ],
      "err_line": 3,
      "err_msg": "invalid initialization of non-const reference of type ‘std::basic_istream<char>::char_type& {aka char&}’ from an rvalue of type ‘std::basic_istream<char>::char_type {aka char}’"
    }
  ]
}