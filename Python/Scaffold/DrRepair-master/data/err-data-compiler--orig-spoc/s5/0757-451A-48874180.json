{
  "meta": {
    "index": 757,
    "hitid": "3I7SHAD35MQGWU6518NJ4442WKW7MW",
    "workerid": "A1APYLD4DUK33J",
    "probid": "451A",
    "subid": "48874180"
  },
  "lines": [
    {
      "line": 0,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 1,
      "text": "declare integers n , m",
      "code": "int n , m ;",
      "indent": 1
    },
    {
      "line": 2,
      "text": "read n and m",
      "code": "cin >> n >> m ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "declare ans with ans = minimum of n and m",
      "code": "int ans = min ( n , m ) ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "if ans % 2 is 0",
      "code": "if ( ans % 2 == 0 )",
      "indent": 1
    },
    {
      "line": 5,
      "text": "print \" Malvika \"",
      "code": "cout << \" Malvika \"",
      "indent": 2
    },
    {
      "line": 6,
      "text": "print \" \\ n \"",
      "code": "<< \" \\n \" ;",
      "indent": 3
    },
    {
      "line": 7,
      "text": "else",
      "code": "else",
      "indent": 1
    },
    {
      "line": 8,
      "text": "print \" Akshat \"",
      "code": "cout << \" Akshat \"",
      "indent": 2
    },
    {
      "line": 9,
      "text": "print \" \\ n \"",
      "code": "<< \" \\n \" ;",
      "indent": 3
    },
    {
      "line": 10,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 11,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        5
      ],
      "mod_code": [
        "cout << \" Malvika \" << endl ;"
      ],
      "err_line": 6,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        8
      ],
      "mod_code": [
        "cout << \" Akshat \" << endl ;"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        3
      ],
      "mod_code": [
        "ans = min ( n , m ) ;"
      ],
      "err_line": 3,
      "err_msg": "‘ans’ was not declared in this scope"
    },
    {
      "mod_line": [
        5
      ],
      "mod_code": [
        "cout << \" Malvika \" ;"
      ],
      "err_line": 6,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        6
      ],
      "mod_code": [
        "cout << \" \\n \" ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        8
      ],
      "mod_code": [
        "cout << \" Akshat \" ;"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        9
      ],
      "mod_code": [
        "cout << \" \\n \" ;"
      ],
      "err_line": 9,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        5,
        8
      ],
      "mod_code": [
        "cout << \" Malvika \" << endl ;",
        "cout << \" Akshat \" << endl ;"
      ],
      "err_line": 6,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        5,
        8,
        6
      ],
      "mod_code": [
        "cout << \" Malvika \" << endl ;",
        "cout << \" Akshat \" << endl ;",
        "cout << \" \\n \" ;"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        5,
        8,
        6,
        2
      ],
      "mod_code": [
        "cout << \" Malvika \" << endl ;",
        "cout << \" Akshat \" << endl ;",
        "cout << \" \\n \" ;",
        "cin >> m >> m ;"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        5,
        8,
        2
      ],
      "mod_code": [
        "cout << \" Malvika \" << endl ;",
        "cout << \" Akshat \" << endl ;",
        "cin >> m >> m ;"
      ],
      "err_line": 6,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        5,
        8,
        2,
        9
      ],
      "mod_code": [
        "cout << \" Malvika \" << endl ;",
        "cout << \" Akshat \" << endl ;",
        "cin >> m >> m ;",
        "cout << \" \\n \" ;"
      ],
      "err_line": 6,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        5,
        8,
        9
      ],
      "mod_code": [
        "cout << \" Malvika \" << endl ;",
        "cout << \" Akshat \" << endl ;",
        "cout << \" \\n \" ;"
      ],
      "err_line": 6,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        5,
        6,
        2,
        8
      ],
      "mod_code": [
        "cout << \" Malvika \" << endl ;",
        "cout << \" \\n \" ;",
        "cin >> m >> m ;",
        "cout << \" Akshat \" ;"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        5,
        6,
        2,
        9
      ],
      "mod_code": [
        "cout << \" Malvika \" << endl ;",
        "cout << \" \\n \" ;",
        "cin >> m >> m ;",
        "cout << \" \\n \" ;"
      ],
      "err_line": 9,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        5,
        6,
        8
      ],
      "mod_code": [
        "cout << \" Malvika \" << endl ;",
        "cout << \" \\n \" ;",
        "cout << \" Akshat \" ;"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        5,
        6,
        9
      ],
      "mod_code": [
        "cout << \" Malvika \" << endl ;",
        "cout << \" \\n \" ;",
        "cout << \" \\n \" ;"
      ],
      "err_line": 9,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        5,
        2
      ],
      "mod_code": [
        "cout << \" Malvika \" << endl ;",
        "cin >> m >> m ;"
      ],
      "err_line": 6,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        5,
        2,
        8
      ],
      "mod_code": [
        "cout << \" Malvika \" << endl ;",
        "cin >> m >> m ;",
        "cout << \" Akshat \" ;"
      ],
      "err_line": 6,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        5,
        2,
        8,
        9
      ],
      "mod_code": [
        "cout << \" Malvika \" << endl ;",
        "cin >> m >> m ;",
        "cout << \" Akshat \" ;",
        "cout << \" \\n \" ;"
      ],
      "err_line": 6,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        5,
        2,
        9
      ],
      "mod_code": [
        "cout << \" Malvika \" << endl ;",
        "cin >> m >> m ;",
        "cout << \" \\n \" ;"
      ],
      "err_line": 6,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        5,
        8
      ],
      "mod_code": [
        "cout << \" Malvika \" << endl ;",
        "cout << \" Akshat \" ;"
      ],
      "err_line": 6,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        5,
        8,
        9
      ],
      "mod_code": [
        "cout << \" Malvika \" << endl ;",
        "cout << \" Akshat \" ;",
        "cout << \" \\n \" ;"
      ],
      "err_line": 6,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        5,
        9
      ],
      "mod_code": [
        "cout << \" Malvika \" << endl ;",
        "cout << \" \\n \" ;"
      ],
      "err_line": 6,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        8,
        6
      ],
      "mod_code": [
        "cout << \" Akshat \" << endl ;",
        "cout << \" \\n \" ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        8,
        6,
        2
      ],
      "mod_code": [
        "cout << \" Akshat \" << endl ;",
        "cout << \" \\n \" ;",
        "cin >> m >> m ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        8,
        6,
        2,
        9
      ],
      "mod_code": [
        "cout << \" Akshat \" << endl ;",
        "cout << \" \\n \" ;",
        "cin >> m >> m ;",
        "cout << \" \\n \" ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        8,
        6,
        9
      ],
      "mod_code": [
        "cout << \" Akshat \" << endl ;",
        "cout << \" \\n \" ;",
        "cout << \" \\n \" ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        8,
        2
      ],
      "mod_code": [
        "cout << \" Akshat \" << endl ;",
        "cin >> m >> m ;"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        6,
        2
      ],
      "mod_code": [
        "cout << \" \\n \" ;",
        "cin >> m >> m ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        6,
        2,
        8
      ],
      "mod_code": [
        "cout << \" \\n \" ;",
        "cin >> m >> m ;",
        "cout << \" Akshat \" ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        6,
        2,
        8,
        9
      ],
      "mod_code": [
        "cout << \" \\n \" ;",
        "cin >> m >> m ;",
        "cout << \" Akshat \" ;",
        "cout << \" \\n \" ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        6,
        2,
        9
      ],
      "mod_code": [
        "cout << \" \\n \" ;",
        "cin >> m >> m ;",
        "cout << \" \\n \" ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        6,
        8
      ],
      "mod_code": [
        "cout << \" \\n \" ;",
        "cout << \" Akshat \" ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        6,
        8,
        9
      ],
      "mod_code": [
        "cout << \" \\n \" ;",
        "cout << \" Akshat \" ;",
        "cout << \" \\n \" ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        6,
        9
      ],
      "mod_code": [
        "cout << \" \\n \" ;",
        "cout << \" \\n \" ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        2,
        8
      ],
      "mod_code": [
        "cin >> m >> m ;",
        "cout << \" Akshat \" ;"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        2,
        9
      ],
      "mod_code": [
        "cin >> m >> m ;",
        "cout << \" \\n \" ;"
      ],
      "err_line": 9,
      "err_msg": "expected ‘;’ before ‘cout’"
    }
  ]
}