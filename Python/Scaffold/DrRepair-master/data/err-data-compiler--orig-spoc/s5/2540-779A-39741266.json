{
  "meta": {
    "index": 2540,
    "hitid": "3ICOHX7ENC542VE8ZBERCHP6F460E7",
    "workerid": "A1APYLD4DUK33J",
    "probid": "779A",
    "subid": "39741266"
  },
  "lines": [
    {
      "line": 0,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 1,
      "text": "declare integer array a size 10",
      "code": "int a [ 10 ] ;",
      "indent": 1
    },
    {
      "line": 2,
      "text": "declare integer array b size 10",
      "code": "int b [ 10 ] ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "declare integer array c size 10",
      "code": "int c [ 10 ] ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "declare integers n , m , sum = 0",
      "code": "int n , m , sum = 0 ;",
      "indent": 1
    },
    {
      "line": 5,
      "text": "set bytes from a to size of a to value 0",
      "code": "memset ( a , 0 , sizeof ( a ) ) ;",
      "indent": 1
    },
    {
      "line": 6,
      "text": "set bytes from b to size of b to value 0",
      "code": "memset ( b , 0 , sizeof ( b ) ) ;",
      "indent": 1
    },
    {
      "line": 7,
      "text": "set bytes from c to size of c to value 0",
      "code": "memset ( c , 0 , sizeof ( c ) ) ;",
      "indent": 1
    },
    {
      "line": 8,
      "text": "read n",
      "code": "cin >> n ;",
      "indent": 1
    },
    {
      "line": 9,
      "text": "for i = 0 to n exclusive",
      "code": "for ( int i = 0 ; i < n ; i ++ )",
      "indent": 1
    },
    {
      "line": 10,
      "text": "read m",
      "code": "cin >> m ;",
      "indent": 2
    },
    {
      "line": 11,
      "text": "increment a [ m ]",
      "code": "a [ m ] ++ ;",
      "indent": 2
    },
    {
      "line": 12,
      "text": "increment c [ m ]",
      "code": "c [ m ] ++ ;",
      "indent": 2
    },
    {
      "line": 13,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 14,
      "text": "for i = 0 to n exclusive",
      "code": "for ( int i = 0 ; i < n ; i ++ )",
      "indent": 1
    },
    {
      "line": 15,
      "text": "read m",
      "code": "cin >> m ;",
      "indent": 2
    },
    {
      "line": 16,
      "text": "increment b [ m ]",
      "code": "b [ m ] ++ ;",
      "indent": 2
    },
    {
      "line": 17,
      "text": "increment c [ m ]",
      "code": "c [ m ] ++ ;",
      "indent": 2
    },
    {
      "line": 18,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 19,
      "text": "for i = 1 to 5 inclusive",
      "code": "for ( int i = 1 ; i <= 5 ; i ++ )",
      "indent": 1
    },
    {
      "line": 20,
      "text": "if c [ i ] % 2",
      "code": "if ( c [ i ] % 2 )",
      "indent": 2
    },
    {
      "line": 21,
      "text": "print - 1 and newline",
      "code": "cout << - 1 << endl ;",
      "indent": 3
    },
    {
      "line": 22,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 3
    },
    {
      "line": 23,
      "text": "else",
      "code": "else",
      "indent": 2
    },
    {
      "line": 24,
      "text": "increment sum by absolute value of ( c [ i ] / 2 - a [ i ] )",
      "code": "sum += abs ( c [ i ] / 2 - a [ i ] ) ;",
      "indent": 3
    },
    {
      "line": 25,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 26,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 27,
      "text": "print sum / 2 and newline",
      "code": "cout << sum / 2 << endl ;",
      "indent": 1
    },
    {
      "line": 28,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 29,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        3
      ],
      "mod_code": [
        "int * c [ 10 ] ;"
      ],
      "err_line": 20,
      "err_msg": "invalid operands of types ‘int*’ and ‘int’ to binary ‘operator%’"
    },
    {
      "mod_line": [
        9
      ],
      "mod_code": [
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 9,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        14
      ],
      "mod_code": [
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 14,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        19
      ],
      "mod_code": [
        "for ( i = 1 ; i <= 5 ; i ++ )"
      ],
      "err_line": 19,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        10,
        9
      ],
      "mod_code": [
        "cin >> n ;",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 9,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        10,
        9,
        3
      ],
      "mod_code": [
        "cin >> n ;",
        "for ( i = 0 ; i < n ; i ++ )",
        "int * c [ 10 ] ;"
      ],
      "err_line": 9,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        10,
        9,
        3,
        8
      ],
      "mod_code": [
        "cin >> n ;",
        "for ( i = 0 ; i < n ; i ++ )",
        "int * c [ 10 ] ;",
        "while ( cin >> n )"
      ],
      "err_line": 9,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        10,
        9,
        3,
        15
      ],
      "mod_code": [
        "cin >> n ;",
        "for ( i = 0 ; i < n ; i ++ )",
        "int * c [ 10 ] ;",
        "cin >> n ;"
      ],
      "err_line": 9,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        10,
        9,
        3,
        20
      ],
      "mod_code": [
        "cin >> n ;",
        "for ( i = 0 ; i < n ; i ++ )",
        "int * c [ 10 ] ;",
        "if ( c [ i ] % 2 == 0 )"
      ],
      "err_line": 9,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        10,
        9,
        8
      ],
      "mod_code": [
        "cin >> n ;",
        "for ( i = 0 ; i < n ; i ++ )",
        "while ( cin >> n )"
      ],
      "err_line": 9,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        10,
        9,
        8,
        15
      ],
      "mod_code": [
        "cin >> n ;",
        "for ( i = 0 ; i < n ; i ++ )",
        "while ( cin >> n )",
        "cin >> n ;"
      ],
      "err_line": 9,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        10,
        9,
        8,
        20
      ],
      "mod_code": [
        "cin >> n ;",
        "for ( i = 0 ; i < n ; i ++ )",
        "while ( cin >> n )",
        "if ( c [ i ] % 2 == 0 )"
      ],
      "err_line": 9,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        10,
        9,
        15
      ],
      "mod_code": [
        "cin >> n ;",
        "for ( i = 0 ; i < n ; i ++ )",
        "cin >> n ;"
      ],
      "err_line": 9,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        10,
        9,
        15,
        20
      ],
      "mod_code": [
        "cin >> n ;",
        "for ( i = 0 ; i < n ; i ++ )",
        "cin >> n ;",
        "if ( c [ i ] % 2 == 0 )"
      ],
      "err_line": 9,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        10,
        9,
        20
      ],
      "mod_code": [
        "cin >> n ;",
        "for ( i = 0 ; i < n ; i ++ )",
        "if ( c [ i ] % 2 == 0 )"
      ],
      "err_line": 9,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        10,
        3
      ],
      "mod_code": [
        "cin >> n ;",
        "int * c [ 10 ] ;"
      ],
      "err_line": 20,
      "err_msg": "invalid operands of types ‘int*’ and ‘int’ to binary ‘operator%’"
    },
    {
      "mod_line": [
        10,
        3,
        8
      ],
      "mod_code": [
        "cin >> n ;",
        "int * c [ 10 ] ;",
        "while ( cin >> n )"
      ],
      "err_line": 20,
      "err_msg": "invalid operands of types ‘int*’ and ‘int’ to binary ‘operator%’"
    },
    {
      "mod_line": [
        10,
        3,
        8,
        15
      ],
      "mod_code": [
        "cin >> n ;",
        "int * c [ 10 ] ;",
        "while ( cin >> n )",
        "cin >> n ;"
      ],
      "err_line": 20,
      "err_msg": "invalid operands of types ‘int*’ and ‘int’ to binary ‘operator%’"
    },
    {
      "mod_line": [
        10,
        3,
        8,
        20
      ],
      "mod_code": [
        "cin >> n ;",
        "int * c [ 10 ] ;",
        "while ( cin >> n )",
        "if ( c [ i ] % 2 == 0 )"
      ],
      "err_line": 20,
      "err_msg": "invalid operands of types ‘int*’ and ‘int’ to binary ‘operator%’"
    },
    {
      "mod_line": [
        10,
        3,
        15
      ],
      "mod_code": [
        "cin >> n ;",
        "int * c [ 10 ] ;",
        "cin >> n ;"
      ],
      "err_line": 20,
      "err_msg": "invalid operands of types ‘int*’ and ‘int’ to binary ‘operator%’"
    },
    {
      "mod_line": [
        10,
        3,
        15,
        20
      ],
      "mod_code": [
        "cin >> n ;",
        "int * c [ 10 ] ;",
        "cin >> n ;",
        "if ( c [ i ] % 2 == 0 )"
      ],
      "err_line": 20,
      "err_msg": "invalid operands of types ‘int*’ and ‘int’ to binary ‘operator%’"
    },
    {
      "mod_line": [
        10,
        3,
        20
      ],
      "mod_code": [
        "cin >> n ;",
        "int * c [ 10 ] ;",
        "if ( c [ i ] % 2 == 0 )"
      ],
      "err_line": 20,
      "err_msg": "invalid operands of types ‘int*’ and ‘int’ to binary ‘operator%’"
    },
    {
      "mod_line": [
        9,
        3
      ],
      "mod_code": [
        "for ( i = 0 ; i < n ; i ++ )",
        "int * c [ 10 ] ;"
      ],
      "err_line": 9,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        9,
        3,
        8
      ],
      "mod_code": [
        "for ( i = 0 ; i < n ; i ++ )",
        "int * c [ 10 ] ;",
        "while ( cin >> n )"
      ],
      "err_line": 9,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        9,
        3,
        8,
        15
      ],
      "mod_code": [
        "for ( i = 0 ; i < n ; i ++ )",
        "int * c [ 10 ] ;",
        "while ( cin >> n )",
        "cin >> n ;"
      ],
      "err_line": 9,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        9,
        3,
        8,
        20
      ],
      "mod_code": [
        "for ( i = 0 ; i < n ; i ++ )",
        "int * c [ 10 ] ;",
        "while ( cin >> n )",
        "if ( c [ i ] % 2 == 0 )"
      ],
      "err_line": 9,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        9,
        3,
        15
      ],
      "mod_code": [
        "for ( i = 0 ; i < n ; i ++ )",
        "int * c [ 10 ] ;",
        "cin >> n ;"
      ],
      "err_line": 9,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        9,
        3,
        15,
        20
      ],
      "mod_code": [
        "for ( i = 0 ; i < n ; i ++ )",
        "int * c [ 10 ] ;",
        "cin >> n ;",
        "if ( c [ i ] % 2 == 0 )"
      ],
      "err_line": 9,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        9,
        3,
        20
      ],
      "mod_code": [
        "for ( i = 0 ; i < n ; i ++ )",
        "int * c [ 10 ] ;",
        "if ( c [ i ] % 2 == 0 )"
      ],
      "err_line": 9,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        9,
        8
      ],
      "mod_code": [
        "for ( i = 0 ; i < n ; i ++ )",
        "while ( cin >> n )"
      ],
      "err_line": 9,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        9,
        8,
        15
      ],
      "mod_code": [
        "for ( i = 0 ; i < n ; i ++ )",
        "while ( cin >> n )",
        "cin >> n ;"
      ],
      "err_line": 9,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        9,
        8,
        15,
        20
      ],
      "mod_code": [
        "for ( i = 0 ; i < n ; i ++ )",
        "while ( cin >> n )",
        "cin >> n ;",
        "if ( c [ i ] % 2 == 0 )"
      ],
      "err_line": 9,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        9,
        8,
        20
      ],
      "mod_code": [
        "for ( i = 0 ; i < n ; i ++ )",
        "while ( cin >> n )",
        "if ( c [ i ] % 2 == 0 )"
      ],
      "err_line": 9,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        9,
        15
      ],
      "mod_code": [
        "for ( i = 0 ; i < n ; i ++ )",
        "cin >> n ;"
      ],
      "err_line": 9,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        9,
        15,
        20
      ],
      "mod_code": [
        "for ( i = 0 ; i < n ; i ++ )",
        "cin >> n ;",
        "if ( c [ i ] % 2 == 0 )"
      ],
      "err_line": 9,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        9,
        20
      ],
      "mod_code": [
        "for ( i = 0 ; i < n ; i ++ )",
        "if ( c [ i ] % 2 == 0 )"
      ],
      "err_line": 9,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        8
      ],
      "mod_code": [
        "int * c [ 10 ] ;",
        "while ( cin >> n )"
      ],
      "err_line": 20,
      "err_msg": "invalid operands of types ‘int*’ and ‘int’ to binary ‘operator%’"
    },
    {
      "mod_line": [
        3,
        8,
        15
      ],
      "mod_code": [
        "int * c [ 10 ] ;",
        "while ( cin >> n )",
        "cin >> n ;"
      ],
      "err_line": 20,
      "err_msg": "invalid operands of types ‘int*’ and ‘int’ to binary ‘operator%’"
    },
    {
      "mod_line": [
        3,
        8,
        15,
        20
      ],
      "mod_code": [
        "int * c [ 10 ] ;",
        "while ( cin >> n )",
        "cin >> n ;",
        "if ( c [ i ] % 2 == 0 )"
      ],
      "err_line": 20,
      "err_msg": "invalid operands of types ‘int*’ and ‘int’ to binary ‘operator%’"
    },
    {
      "mod_line": [
        3,
        8,
        20
      ],
      "mod_code": [
        "int * c [ 10 ] ;",
        "while ( cin >> n )",
        "if ( c [ i ] % 2 == 0 )"
      ],
      "err_line": 20,
      "err_msg": "invalid operands of types ‘int*’ and ‘int’ to binary ‘operator%’"
    },
    {
      "mod_line": [
        3,
        15
      ],
      "mod_code": [
        "int * c [ 10 ] ;",
        "cin >> n ;"
      ],
      "err_line": 20,
      "err_msg": "invalid operands of types ‘int*’ and ‘int’ to binary ‘operator%’"
    },
    {
      "mod_line": [
        3,
        15,
        20
      ],
      "mod_code": [
        "int * c [ 10 ] ;",
        "cin >> n ;",
        "if ( c [ i ] % 2 == 0 )"
      ],
      "err_line": 20,
      "err_msg": "invalid operands of types ‘int*’ and ‘int’ to binary ‘operator%’"
    },
    {
      "mod_line": [
        3,
        20
      ],
      "mod_code": [
        "int * c [ 10 ] ;",
        "if ( c [ i ] % 2 == 0 )"
      ],
      "err_line": 20,
      "err_msg": "invalid operands of types ‘int*’ and ‘int’ to binary ‘operator%’"
    }
  ]
}