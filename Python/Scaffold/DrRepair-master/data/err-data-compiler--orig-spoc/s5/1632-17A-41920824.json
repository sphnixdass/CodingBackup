{
  "meta": {
    "index": 1632,
    "hitid": "3VIVIU06FK6DLEN1KZRGVTUB9YVIML",
    "workerid": "AIWEXPJAU66D9",
    "probid": "17A",
    "subid": "41920824"
  },
  "lines": [
    {
      "line": 0,
      "text": "bool function isPrime with int argument n",
      "code": "bool isPrime ( int n )",
      "indent": 0
    },
    {
      "line": 1,
      "text": "if n is equal to 1 return false",
      "code": "if ( n == 1 ) { return false ; }",
      "indent": 1
    },
    {
      "line": 2,
      "text": "for i = 2 to sqrt ( n ) inclusive",
      "code": "for ( int i = 2 ; i <= sqrt ( n ) ; i ++ )",
      "indent": 1
    },
    {
      "line": 3,
      "text": "if n % i is equal to 0 return false",
      "code": "if ( n % i == 0 ) { return false ; }",
      "indent": 2
    },
    {
      "line": 4,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 5,
      "text": "return true",
      "code": "return true ;",
      "indent": 1
    },
    {
      "line": 6,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    },
    {
      "line": 7,
      "text": "int function nextPrime with int argument n",
      "code": "int nextPrime ( int n )",
      "indent": 0
    },
    {
      "line": 8,
      "text": "create integer ans with value n + 1",
      "code": "int ans = n + 1 ;",
      "indent": 1
    },
    {
      "line": 9,
      "text": "increment ans while isPrime ( ans ) returns false",
      "code": "while ( ! isPrime ( ans ) ) ans ++ ;",
      "indent": 1
    },
    {
      "line": 10,
      "text": "return ans",
      "code": "return ans ;",
      "indent": 1
    },
    {
      "line": 11,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    },
    {
      "line": 12,
      "text": "bool function noldbach with int argument n",
      "code": "bool noldbach ( int n )",
      "indent": 0
    },
    {
      "line": 13,
      "text": "for i = 2 to n exclusive",
      "code": "for ( int i = 2 ; i < n ; i ++ )",
      "indent": 1
    },
    {
      "line": 14,
      "text": "if isPrime ( i )",
      "code": "if ( isPrime ( i ) )",
      "indent": 2
    },
    {
      "line": 15,
      "text": "integer nextPrimeNum = nextPrime ( i )",
      "code": "int nextPrimeNum = nextPrime ( i ) ;",
      "indent": 3
    },
    {
      "line": 16,
      "text": "if nextPrimeNum + i + 1 is equal to n , return true",
      "code": "if ( nextPrimeNum + i + 1 == n ) { return true ; }",
      "indent": 3
    },
    {
      "line": 17,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 18,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 19,
      "text": "return false",
      "code": "return false ;",
      "indent": 1
    },
    {
      "line": 20,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    },
    {
      "line": 21,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 22,
      "text": "declare integers called n and k",
      "code": "int n , k ;",
      "indent": 1
    },
    {
      "line": 23,
      "text": "read n and k",
      "code": "cin >> n >> k ;",
      "indent": 1
    },
    {
      "line": 24,
      "text": "for i = 2 to n inclusive",
      "code": "for ( int i = 2 ; i <= n ; i ++ )",
      "indent": 1
    },
    {
      "line": 25,
      "text": "if isPrime ( i )",
      "code": "if ( isPrime ( i ) )",
      "indent": 2
    },
    {
      "line": 26,
      "text": "if noldbach ( i )",
      "code": "if ( noldbach ( i ) )",
      "indent": 3
    },
    {
      "line": 27,
      "text": "decrement k",
      "code": "k -- ;",
      "indent": 4
    },
    {
      "line": 28,
      "text": "print i + ' ' into error stream",
      "code": "cerr << i << ' ' ;",
      "indent": 4
    },
    {
      "line": 29,
      "text": "DUMMY",
      "code": "}",
      "indent": 3
    },
    {
      "line": 30,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 31,
      "text": "print ' \\ n ' into error stream",
      "code": "cerr << ' \\n ' ;",
      "indent": 1
    },
    {
      "line": 32,
      "text": "print \" YES \" if 0 > = k and \" NO \" otherwise , then ' \\ n '",
      "code": "cout << ( 0 >= k ? \" YES \" : \" NO \" ) << ' \\n ' ;",
      "indent": 1
    },
    {
      "line": 33,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 34,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        0
      ],
      "mod_code": [
        "bool isPrime ( int n ) ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        7
      ],
      "mod_code": [
        "int nextPrime ( int n ) ;"
      ],
      "err_line": 8,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        8
      ],
      "mod_code": [
        "int * ans = n + 1 ;"
      ],
      "err_line": 8,
      "err_msg": "invalid conversion from ‘int’ to ‘int*’ [-fpermissive]"
    },
    {
      "mod_line": [
        12
      ],
      "mod_code": [
        "bool noldbach ( int n ) ;"
      ],
      "err_line": 13,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        13
      ],
      "mod_code": [
        "for ( i = 2 ; i < n ; i ++ )"
      ],
      "err_line": 13,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        24
      ],
      "mod_code": [
        "for ( i = 2 ; i <= n ; i ++ )"
      ],
      "err_line": 24,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        28
      ],
      "mod_code": [
        "puts ( i + ' ' ) ;"
      ],
      "err_line": 28,
      "err_msg": "invalid conversion from ‘int’ to ‘const char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        9,
        28,
        31,
        13
      ],
      "mod_code": [
        "while ( isPrime ( ans ) ) { ans ++ ; }",
        "cout << ( i + ' ' ) ;",
        "cout << ' \\n ' ;",
        "for ( i = 2 ; i < n ; i ++ )"
      ],
      "err_line": 13,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        9,
        28,
        31,
        0
      ],
      "mod_code": [
        "while ( isPrime ( ans ) ) { ans ++ ; }",
        "cout << ( i + ' ' ) ;",
        "cout << ' \\n ' ;",
        "bool isPrime ( int n ) ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        9,
        28,
        32,
        13
      ],
      "mod_code": [
        "while ( isPrime ( ans ) ) { ans ++ ; }",
        "cout << ( i + ' ' ) ;",
        "cout << ( 0 >= k ? \" YES \" : \" YES \" ) << ' \\n ' ;",
        "for ( i = 2 ; i < n ; i ++ )"
      ],
      "err_line": 13,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        9,
        28,
        32,
        0
      ],
      "mod_code": [
        "while ( isPrime ( ans ) ) { ans ++ ; }",
        "cout << ( i + ' ' ) ;",
        "cout << ( 0 >= k ? \" YES \" : \" YES \" ) << ' \\n ' ;",
        "bool isPrime ( int n ) ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        9,
        28,
        13
      ],
      "mod_code": [
        "while ( isPrime ( ans ) ) { ans ++ ; }",
        "cout << ( i + ' ' ) ;",
        "for ( i = 2 ; i < n ; i ++ )"
      ],
      "err_line": 13,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        9,
        28,
        13,
        0
      ],
      "mod_code": [
        "while ( isPrime ( ans ) ) { ans ++ ; }",
        "cout << ( i + ' ' ) ;",
        "for ( i = 2 ; i < n ; i ++ )",
        "bool isPrime ( int n ) ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        9,
        28,
        0
      ],
      "mod_code": [
        "while ( isPrime ( ans ) ) { ans ++ ; }",
        "cout << ( i + ' ' ) ;",
        "bool isPrime ( int n ) ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        9,
        31,
        32,
        13
      ],
      "mod_code": [
        "while ( isPrime ( ans ) ) { ans ++ ; }",
        "cout << ' \\n ' ;",
        "cout << ( 0 >= k ? \" YES \" : \" YES \" ) << ' \\n ' ;",
        "for ( i = 2 ; i < n ; i ++ )"
      ],
      "err_line": 13,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        9,
        31,
        32,
        0
      ],
      "mod_code": [
        "while ( isPrime ( ans ) ) { ans ++ ; }",
        "cout << ' \\n ' ;",
        "cout << ( 0 >= k ? \" YES \" : \" YES \" ) << ' \\n ' ;",
        "bool isPrime ( int n ) ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        9,
        31,
        13
      ],
      "mod_code": [
        "while ( isPrime ( ans ) ) { ans ++ ; }",
        "cout << ' \\n ' ;",
        "for ( i = 2 ; i < n ; i ++ )"
      ],
      "err_line": 13,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        9,
        31,
        13,
        0
      ],
      "mod_code": [
        "while ( isPrime ( ans ) ) { ans ++ ; }",
        "cout << ' \\n ' ;",
        "for ( i = 2 ; i < n ; i ++ )",
        "bool isPrime ( int n ) ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        9,
        31,
        0
      ],
      "mod_code": [
        "while ( isPrime ( ans ) ) { ans ++ ; }",
        "cout << ' \\n ' ;",
        "bool isPrime ( int n ) ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        9,
        32,
        13
      ],
      "mod_code": [
        "while ( isPrime ( ans ) ) { ans ++ ; }",
        "cout << ( 0 >= k ? \" YES \" : \" YES \" ) << ' \\n ' ;",
        "for ( i = 2 ; i < n ; i ++ )"
      ],
      "err_line": 13,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        9,
        32,
        13,
        0
      ],
      "mod_code": [
        "while ( isPrime ( ans ) ) { ans ++ ; }",
        "cout << ( 0 >= k ? \" YES \" : \" YES \" ) << ' \\n ' ;",
        "for ( i = 2 ; i < n ; i ++ )",
        "bool isPrime ( int n ) ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        9,
        32,
        0
      ],
      "mod_code": [
        "while ( isPrime ( ans ) ) { ans ++ ; }",
        "cout << ( 0 >= k ? \" YES \" : \" YES \" ) << ' \\n ' ;",
        "bool isPrime ( int n ) ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        9,
        13
      ],
      "mod_code": [
        "while ( isPrime ( ans ) ) { ans ++ ; }",
        "for ( i = 2 ; i < n ; i ++ )"
      ],
      "err_line": 13,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        9,
        13,
        0
      ],
      "mod_code": [
        "while ( isPrime ( ans ) ) { ans ++ ; }",
        "for ( i = 2 ; i < n ; i ++ )",
        "bool isPrime ( int n ) ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        9,
        0
      ],
      "mod_code": [
        "while ( isPrime ( ans ) ) { ans ++ ; }",
        "bool isPrime ( int n ) ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        28,
        31,
        32,
        13
      ],
      "mod_code": [
        "cout << ( i + ' ' ) ;",
        "cout << ' \\n ' ;",
        "cout << ( 0 >= k ? \" YES \" : \" YES \" ) << ' \\n ' ;",
        "for ( i = 2 ; i < n ; i ++ )"
      ],
      "err_line": 13,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        28,
        31,
        32,
        0
      ],
      "mod_code": [
        "cout << ( i + ' ' ) ;",
        "cout << ' \\n ' ;",
        "cout << ( 0 >= k ? \" YES \" : \" YES \" ) << ' \\n ' ;",
        "bool isPrime ( int n ) ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        28,
        31,
        13
      ],
      "mod_code": [
        "cout << ( i + ' ' ) ;",
        "cout << ' \\n ' ;",
        "for ( i = 2 ; i < n ; i ++ )"
      ],
      "err_line": 13,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        28,
        31,
        13,
        0
      ],
      "mod_code": [
        "cout << ( i + ' ' ) ;",
        "cout << ' \\n ' ;",
        "for ( i = 2 ; i < n ; i ++ )",
        "bool isPrime ( int n ) ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        28,
        31,
        0
      ],
      "mod_code": [
        "cout << ( i + ' ' ) ;",
        "cout << ' \\n ' ;",
        "bool isPrime ( int n ) ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        28,
        32,
        13
      ],
      "mod_code": [
        "cout << ( i + ' ' ) ;",
        "cout << ( 0 >= k ? \" YES \" : \" YES \" ) << ' \\n ' ;",
        "for ( i = 2 ; i < n ; i ++ )"
      ],
      "err_line": 13,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        28,
        32,
        13,
        0
      ],
      "mod_code": [
        "cout << ( i + ' ' ) ;",
        "cout << ( 0 >= k ? \" YES \" : \" YES \" ) << ' \\n ' ;",
        "for ( i = 2 ; i < n ; i ++ )",
        "bool isPrime ( int n ) ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        28,
        32,
        0
      ],
      "mod_code": [
        "cout << ( i + ' ' ) ;",
        "cout << ( 0 >= k ? \" YES \" : \" YES \" ) << ' \\n ' ;",
        "bool isPrime ( int n ) ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        28,
        13
      ],
      "mod_code": [
        "cout << ( i + ' ' ) ;",
        "for ( i = 2 ; i < n ; i ++ )"
      ],
      "err_line": 13,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        28,
        13,
        0
      ],
      "mod_code": [
        "cout << ( i + ' ' ) ;",
        "for ( i = 2 ; i < n ; i ++ )",
        "bool isPrime ( int n ) ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        28,
        0
      ],
      "mod_code": [
        "cout << ( i + ' ' ) ;",
        "bool isPrime ( int n ) ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        31,
        32,
        13
      ],
      "mod_code": [
        "cout << ' \\n ' ;",
        "cout << ( 0 >= k ? \" YES \" : \" YES \" ) << ' \\n ' ;",
        "for ( i = 2 ; i < n ; i ++ )"
      ],
      "err_line": 13,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        31,
        32,
        13,
        0
      ],
      "mod_code": [
        "cout << ' \\n ' ;",
        "cout << ( 0 >= k ? \" YES \" : \" YES \" ) << ' \\n ' ;",
        "for ( i = 2 ; i < n ; i ++ )",
        "bool isPrime ( int n ) ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        31,
        32,
        0
      ],
      "mod_code": [
        "cout << ' \\n ' ;",
        "cout << ( 0 >= k ? \" YES \" : \" YES \" ) << ' \\n ' ;",
        "bool isPrime ( int n ) ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        31,
        13
      ],
      "mod_code": [
        "cout << ' \\n ' ;",
        "for ( i = 2 ; i < n ; i ++ )"
      ],
      "err_line": 13,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        31,
        13,
        0
      ],
      "mod_code": [
        "cout << ' \\n ' ;",
        "for ( i = 2 ; i < n ; i ++ )",
        "bool isPrime ( int n ) ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        31,
        0
      ],
      "mod_code": [
        "cout << ' \\n ' ;",
        "bool isPrime ( int n ) ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        32,
        13
      ],
      "mod_code": [
        "cout << ( 0 >= k ? \" YES \" : \" YES \" ) << ' \\n ' ;",
        "for ( i = 2 ; i < n ; i ++ )"
      ],
      "err_line": 13,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        32,
        13,
        0
      ],
      "mod_code": [
        "cout << ( 0 >= k ? \" YES \" : \" YES \" ) << ' \\n ' ;",
        "for ( i = 2 ; i < n ; i ++ )",
        "bool isPrime ( int n ) ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        32,
        0
      ],
      "mod_code": [
        "cout << ( 0 >= k ? \" YES \" : \" YES \" ) << ' \\n ' ;",
        "bool isPrime ( int n ) ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        13,
        0
      ],
      "mod_code": [
        "for ( i = 2 ; i < n ; i ++ )",
        "bool isPrime ( int n ) ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    }
  ]
}