{
  "meta": {
    "index": 2119,
    "hitid": "366FYU4PTGJ6FLLC34O9V14FT26EKL",
    "workerid": "A1R0Q9CUUBSM5F",
    "probid": "698A",
    "subid": "48870223"
  },
  "lines": [
    {
      "line": 0,
      "text": "create long long integer M = 100000000000000",
      "code": "long long int M = 100000000000000 ;",
      "indent": 0
    },
    {
      "line": 1,
      "text": "make long long integer M1 = 1000000007",
      "code": "long long int M1 = 1000000007 ;",
      "indent": 0
    },
    {
      "line": 2,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 3,
      "text": "create integers n , i , x1 , x2 , ans , and x3",
      "code": "int n , i , x1 , x2 , ans , x3 ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "read n",
      "code": "cin >> n ;",
      "indent": 1
    },
    {
      "line": 5,
      "text": "make long long int vector v of size n",
      "code": "vector < long long int > v ( n ) ;",
      "indent": 1
    },
    {
      "line": 6,
      "text": "for i = 0 to n exclusive , read v [ i ]",
      "code": "for ( i = 0 ; i < n ; i ++ ) cin >> v [ i ] ;",
      "indent": 1
    },
    {
      "line": 7,
      "text": "create integer dp of size 105 with array of size 3",
      "code": "int dp [ 105 ] [ 3 ] ;",
      "indent": 1
    },
    {
      "line": 8,
      "text": "for i = 0 to 3 exclusive , set dp [ 0 ] [ i ] to 1",
      "code": "for ( i = 0 ; i < 3 ; i ++ ) { dp [ 0 ] [ i ] = 1 ; }",
      "indent": 1
    },
    {
      "line": 9,
      "text": "if v [ 0 ] is 1",
      "code": "if ( v [ 0 ] == 1 )",
      "indent": 1
    },
    {
      "line": 10,
      "text": "set dp [ 0 ] [ 1 ] to 0",
      "code": "dp [ 0 ] [ 1 ] = 0 ;",
      "indent": 2
    },
    {
      "line": 11,
      "text": "else if v [ 0 ] is equal to 2",
      "code": "else if ( v [ 0 ] == 2 )",
      "indent": 1
    },
    {
      "line": 12,
      "text": "set dp [ 0 ] [ 0 ] to 0",
      "code": "dp [ 0 ] [ 0 ] = 0 ;",
      "indent": 2
    },
    {
      "line": 13,
      "text": "else if v [ 0 ] is equal to 3",
      "code": "else if ( v [ 0 ] == 3 )",
      "indent": 1
    },
    {
      "line": 14,
      "text": "set dp [ 0 ] [ 0 ] to 0",
      "code": "dp [ 0 ] [ 0 ] = 0 ;",
      "indent": 2
    },
    {
      "line": 15,
      "text": "set dp [ 0 ] [ 1 ] to 0",
      "code": "dp [ 0 ] [ 1 ] = 0 ;",
      "indent": 2
    },
    {
      "line": 16,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 17,
      "text": "if n is 1",
      "code": "if ( n == 1 )",
      "indent": 1
    },
    {
      "line": 18,
      "text": "set ans to min ( dp [ 0 ] [ 0 ] , min ( dp [ 0 ] [ 1 ] , dp [ 0 ] [ 2 ] ) )",
      "code": "ans = min ( dp [ 0 ] [ 0 ] , min ( dp [ 0 ] [ 1 ] , dp [ 0 ] [ 2 ] ) ) ;",
      "indent": 2
    },
    {
      "line": 19,
      "text": "print ans",
      "code": "cout << ans << endl ;",
      "indent": 2
    },
    {
      "line": 20,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 2
    },
    {
      "line": 21,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 22,
      "text": "for i = 1 to n exclusive",
      "code": "for ( i = 1 ; i < n ; i ++ )",
      "indent": 1
    },
    {
      "line": 23,
      "text": "if v [ i ] is 0",
      "code": "if ( v [ i ] == 0 )",
      "indent": 2
    },
    {
      "line": 24,
      "text": "set x1 to min ( dp [ i - 1 ] [ 0 ] , min ( dp [ i - 1 ] [ 1 ] , dp [ i - 1 ] [ 2 ] ) )",
      "code": "x1 = min ( dp [ i - 1 ] [ 0 ] , min ( dp [ i - 1 ] [ 1 ] , dp [ i - 1 ] [ 2 ] ) ) ;",
      "indent": 3
    },
    {
      "line": 25,
      "text": "set dp [ i ] [ 0 ] to 1 + x1",
      "code": "dp [ i ] [ 0 ] = 1 + x1 ;",
      "indent": 3
    },
    {
      "line": 26,
      "text": "set dp [ i ] [ 1 ] to 1 + x1",
      "code": "dp [ i ] [ 1 ] = 1 + x1 ;",
      "indent": 3
    },
    {
      "line": 27,
      "text": "set dp [ i ] [ 2 ] to 1 + x1",
      "code": "dp [ i ] [ 2 ] = 1 + x1 ;",
      "indent": 3
    },
    {
      "line": 28,
      "text": "else if v [ i ] is equal to 1",
      "code": "else if ( v [ i ] == 1 )",
      "indent": 2
    },
    {
      "line": 29,
      "text": "set x1 to min ( dp [ i - 1 ] [ 0 ] , dp [ i - 1 ] [ 2 ] )",
      "code": "x1 = min ( dp [ i - 1 ] [ 0 ] , dp [ i - 1 ] [ 2 ] ) ;",
      "indent": 3
    },
    {
      "line": 30,
      "text": "set x2 to min ( dp [ i - 1 ] [ 0 ] , min ( dp [ i - 1 ] [ 1 ] , dp [ i - 1 ] [ 2 ] ) )",
      "code": "x2 = min ( dp [ i - 1 ] [ 0 ] , min ( dp [ i - 1 ] [ 1 ] , dp [ i - 1 ] [ 2 ] ) ) ;",
      "indent": 3
    },
    {
      "line": 31,
      "text": "set dp [ i ] [ 0 ] to 1 + x2",
      "code": "dp [ i ] [ 0 ] = 1 + x2 ;",
      "indent": 3
    },
    {
      "line": 32,
      "text": "set dp [ i ] [ 2 ] to 1 + x2",
      "code": "dp [ i ] [ 2 ] = 1 + x2 ;",
      "indent": 3
    },
    {
      "line": 33,
      "text": "set dp [ i ] [ 1 ] to x1",
      "code": "dp [ i ] [ 1 ] = x1 ;",
      "indent": 3
    },
    {
      "line": 34,
      "text": "else if v [ i ] is equal to 2",
      "code": "else if ( v [ i ] == 2 )",
      "indent": 2
    },
    {
      "line": 35,
      "text": "set x1 to min ( dp [ i - 1 ] [ 1 ] , dp [ i - 1 ] [ 2 ] )",
      "code": "x1 = min ( dp [ i - 1 ] [ 1 ] , dp [ i - 1 ] [ 2 ] ) ;",
      "indent": 3
    },
    {
      "line": 36,
      "text": "set x2 to min ( dp [ i - 1 ] [ 0 ] , min ( dp [ i - 1 ] [ 1 ] , dp [ i - 1 ] [ 2 ] ) )",
      "code": "x2 = min ( dp [ i - 1 ] [ 0 ] , min ( dp [ i - 1 ] [ 1 ] , dp [ i - 1 ] [ 2 ] ) ) ;",
      "indent": 3
    },
    {
      "line": 37,
      "text": "set dp [ i ] [ 1 ] to 1 + x2",
      "code": "dp [ i ] [ 1 ] = 1 + x2 ;",
      "indent": 3
    },
    {
      "line": 38,
      "text": "set dp [ i ] [ 2 ] to 1 + x2",
      "code": "dp [ i ] [ 2 ] = 1 + x2 ;",
      "indent": 3
    },
    {
      "line": 39,
      "text": "set dp [ i ] [ 0 ] to x1",
      "code": "dp [ i ] [ 0 ] = x1 ;",
      "indent": 3
    },
    {
      "line": 40,
      "text": "else do",
      "code": "else",
      "indent": 2
    },
    {
      "line": 41,
      "text": "set x1 to min ( dp [ i - 1 ] [ 0 ] , dp [ i - 1 ] [ 2 ] )",
      "code": "x1 = min ( dp [ i - 1 ] [ 0 ] , dp [ i - 1 ] [ 2 ] ) ;",
      "indent": 3
    },
    {
      "line": 42,
      "text": "set x2 to min ( dp [ i - 1 ] [ 1 ] , dp [ i - 1 ] [ 2 ] )",
      "code": "x2 = min ( dp [ i - 1 ] [ 1 ] , dp [ i - 1 ] [ 2 ] ) ;",
      "indent": 3
    },
    {
      "line": 43,
      "text": "set dp [ i ] [ 1 ] to x1",
      "code": "dp [ i ] [ 1 ] = x1 ;",
      "indent": 3
    },
    {
      "line": 44,
      "text": "set dp [ i ] [ 0 ] to x2",
      "code": "dp [ i ] [ 0 ] = x2 ;",
      "indent": 3
    },
    {
      "line": 45,
      "text": "set x3 to min ( dp [ i - 1 ] [ 0 ] , min ( dp [ i - 1 ] [ 1 ] , dp [ i - 1 ] [ 2 ] ) )",
      "code": "x3 = min ( dp [ i - 1 ] [ 0 ] , min ( dp [ i - 1 ] [ 1 ] , dp [ i - 1 ] [ 2 ] ) ) ;",
      "indent": 3
    },
    {
      "line": 46,
      "text": "set dp [ i ] [ 2 ] to 1 + x3",
      "code": "dp [ i ] [ 2 ] = 1 + x3 ;",
      "indent": 3
    },
    {
      "line": 47,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 48,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 49,
      "text": "set ans to min ( dp [ n - 1 ] [ 0 ] , min ( dp [ n - 1 ] [ 1 ] , dp [ n - 1 ] [ 2 ] ) )",
      "code": "ans = min ( dp [ n - 1 ] [ 0 ] , min ( dp [ n - 1 ] [ 1 ] , dp [ n - 1 ] [ 2 ] ) ) ;",
      "indent": 1
    },
    {
      "line": 50,
      "text": "print ans",
      "code": "cout << ans << endl ;",
      "indent": 1
    },
    {
      "line": 51,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        4
      ],
      "mod_code": [
        "while ( cin >> n )"
      ],
      "err_line": 6,
      "err_msg": "‘v’ was not declared in this scope"
    },
    {
      "mod_line": [
        24
      ],
      "mod_code": [
        "x1 = min ( dp [ i - 1 ] [ 0 ] , min ( dp [ i - 1 ] [ 1 ] , dp [ i - 1 ] [ 2 ] ) ;"
      ],
      "err_line": 24,
      "err_msg": "expected ‘)’ before ‘;’ token"
    },
    {
      "mod_line": [
        29
      ],
      "mod_code": [
        "for ( x1 = min ( dp [ i - 1 ] [ 0 ] , dp [ i - 1 ] [ 2 ] ) ;"
      ],
      "err_line": 31,
      "err_msg": "expected ‘)’ before ‘;’ token"
    },
    {
      "mod_line": [
        30
      ],
      "mod_code": [
        "x2 = min ( dp [ i - 1 ] [ 0 ] , min ( dp [ i - 1 ] [ 1 ] , dp [ i - 1 ] [ 2 ] ) ;"
      ],
      "err_line": 30,
      "err_msg": "expected ‘)’ before ‘;’ token"
    },
    {
      "mod_line": [
        35
      ],
      "mod_code": [
        "for ( int 2 = min ( dp [ i - 1 ] [ 1 ] , dp [ i - 1 ] [ 2 ] ) ;"
      ],
      "err_line": 35,
      "err_msg": "expected unqualified-id before numeric constant"
    },
    {
      "mod_line": [
        36
      ],
      "mod_code": [
        "x2 = min ( dp [ i - 1 ] [ 0 ] , min ( dp [ i - 1 ] [ 1 ] , dp [ i - 1 ] [ 2 ] ) ;"
      ],
      "err_line": 36,
      "err_msg": "expected ‘)’ before ‘;’ token"
    },
    {
      "mod_line": [
        40
      ],
      "mod_code": [
        "else do"
      ],
      "err_line": 48,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        41
      ],
      "mod_code": [
        "for ( x1 = min ( dp [ i - 1 ] [ 0 ] , dp [ i - 1 ] [ 2 ] ) ;"
      ],
      "err_line": 43,
      "err_msg": "expected ‘)’ before ‘;’ token"
    },
    {
      "mod_line": [
        42
      ],
      "mod_code": [
        "for ( int 2 = min ( dp [ i - 1 ] [ 1 ] , dp [ i - 1 ] [ 2 ] ) ;"
      ],
      "err_line": 42,
      "err_msg": "expected unqualified-id before numeric constant"
    },
    {
      "mod_line": [
        45
      ],
      "mod_code": [
        "x3 = min ( dp [ i - 1 ] [ 0 ] , min ( dp [ i - 1 ] [ 1 ] , dp [ i - 1 ] [ 2 ] ) ;"
      ],
      "err_line": 45,
      "err_msg": "expected ‘)’ before ‘;’ token"
    },
    {
      "mod_line": [
        49
      ],
      "mod_code": [
        "int ans = min ( dp [ n - 1 ] [ 0 ] , min ( dp [ n - 1 ] [ 1 ] , dp [ n - 1 ] [ 2 ] ) ) ;"
      ],
      "err_line": 49,
      "err_msg": "redeclaration of ‘int ans’"
    },
    {
      "mod_line": [
        45,
        42
      ],
      "mod_code": [
        "x3 = min ( dp [ i - 1 ] [ 0 ] , min ( dp [ i - 1 ] [ 1 ] , dp [ i - 1 ] [ 2 ] ) ;",
        "for ( int 2 = min ( dp [ i - 1 ] [ 1 ] , dp [ i - 1 ] [ 2 ] ) ;"
      ],
      "err_line": 42,
      "err_msg": "expected unqualified-id before numeric constant"
    },
    {
      "mod_line": [
        45,
        42,
        4
      ],
      "mod_code": [
        "x3 = min ( dp [ i - 1 ] [ 0 ] , min ( dp [ i - 1 ] [ 1 ] , dp [ i - 1 ] [ 2 ] ) ;",
        "for ( int 2 = min ( dp [ i - 1 ] [ 1 ] , dp [ i - 1 ] [ 2 ] ) ;",
        "while ( cin >> n )"
      ],
      "err_line": 6,
      "err_msg": "‘v’ was not declared in this scope"
    },
    {
      "mod_line": [
        45,
        42,
        4,
        23
      ],
      "mod_code": [
        "x3 = min ( dp [ i - 1 ] [ 0 ] , min ( dp [ i - 1 ] [ 1 ] , dp [ i - 1 ] [ 2 ] ) ;",
        "for ( int 2 = min ( dp [ i - 1 ] [ 1 ] , dp [ i - 1 ] [ 2 ] ) ;",
        "while ( cin >> n )",
        "if ( v [ i ] == ' 0 ' )"
      ],
      "err_line": 6,
      "err_msg": "‘v’ was not declared in this scope"
    },
    {
      "mod_line": [
        45,
        42,
        4,
        28
      ],
      "mod_code": [
        "x3 = min ( dp [ i - 1 ] [ 0 ] , min ( dp [ i - 1 ] [ 1 ] , dp [ i - 1 ] [ 2 ] ) ;",
        "for ( int 2 = min ( dp [ i - 1 ] [ 1 ] , dp [ i - 1 ] [ 2 ] ) ;",
        "while ( cin >> n )",
        "else if ( v [ i ] == ' 1 ' )"
      ],
      "err_line": 6,
      "err_msg": "‘v’ was not declared in this scope"
    },
    {
      "mod_line": [
        45,
        42,
        4,
        24
      ],
      "mod_code": [
        "x3 = min ( dp [ i - 1 ] [ 0 ] , min ( dp [ i - 1 ] [ 1 ] , dp [ i - 1 ] [ 2 ] ) ;",
        "for ( int 2 = min ( dp [ i - 1 ] [ 1 ] , dp [ i - 1 ] [ 2 ] ) ;",
        "while ( cin >> n )",
        "x1 = min ( dp [ i - 1 ] [ 0 ] , min ( dp [ i - 1 ] [ 1 ] , dp [ i - 1 ] [ 2 ] ) ;"
      ],
      "err_line": 6,
      "err_msg": "‘v’ was not declared in this scope"
    },
    {
      "mod_line": [
        45,
        42,
        23
      ],
      "mod_code": [
        "x3 = min ( dp [ i - 1 ] [ 0 ] , min ( dp [ i - 1 ] [ 1 ] , dp [ i - 1 ] [ 2 ] ) ;",
        "for ( int 2 = min ( dp [ i - 1 ] [ 1 ] , dp [ i - 1 ] [ 2 ] ) ;",
        "if ( v [ i ] == ' 0 ' )"
      ],
      "err_line": 42,
      "err_msg": "expected unqualified-id before numeric constant"
    },
    {
      "mod_line": [
        45,
        42,
        23,
        28
      ],
      "mod_code": [
        "x3 = min ( dp [ i - 1 ] [ 0 ] , min ( dp [ i - 1 ] [ 1 ] , dp [ i - 1 ] [ 2 ] ) ;",
        "for ( int 2 = min ( dp [ i - 1 ] [ 1 ] , dp [ i - 1 ] [ 2 ] ) ;",
        "if ( v [ i ] == ' 0 ' )",
        "else if ( v [ i ] == ' 1 ' )"
      ],
      "err_line": 42,
      "err_msg": "expected unqualified-id before numeric constant"
    },
    {
      "mod_line": [
        45,
        42,
        23,
        24
      ],
      "mod_code": [
        "x3 = min ( dp [ i - 1 ] [ 0 ] , min ( dp [ i - 1 ] [ 1 ] , dp [ i - 1 ] [ 2 ] ) ;",
        "for ( int 2 = min ( dp [ i - 1 ] [ 1 ] , dp [ i - 1 ] [ 2 ] ) ;",
        "if ( v [ i ] == ' 0 ' )",
        "x1 = min ( dp [ i - 1 ] [ 0 ] , min ( dp [ i - 1 ] [ 1 ] , dp [ i - 1 ] [ 2 ] ) ;"
      ],
      "err_line": 24,
      "err_msg": "expected ‘)’ before ‘;’ token"
    },
    {
      "mod_line": [
        45,
        42,
        28
      ],
      "mod_code": [
        "x3 = min ( dp [ i - 1 ] [ 0 ] , min ( dp [ i - 1 ] [ 1 ] , dp [ i - 1 ] [ 2 ] ) ;",
        "for ( int 2 = min ( dp [ i - 1 ] [ 1 ] , dp [ i - 1 ] [ 2 ] ) ;",
        "else if ( v [ i ] == ' 1 ' )"
      ],
      "err_line": 42,
      "err_msg": "expected unqualified-id before numeric constant"
    },
    {
      "mod_line": [
        45,
        42,
        28,
        24
      ],
      "mod_code": [
        "x3 = min ( dp [ i - 1 ] [ 0 ] , min ( dp [ i - 1 ] [ 1 ] , dp [ i - 1 ] [ 2 ] ) ;",
        "for ( int 2 = min ( dp [ i - 1 ] [ 1 ] , dp [ i - 1 ] [ 2 ] ) ;",
        "else if ( v [ i ] == ' 1 ' )",
        "x1 = min ( dp [ i - 1 ] [ 0 ] , min ( dp [ i - 1 ] [ 1 ] , dp [ i - 1 ] [ 2 ] ) ;"
      ],
      "err_line": 24,
      "err_msg": "expected ‘)’ before ‘;’ token"
    },
    {
      "mod_line": [
        45,
        42,
        24
      ],
      "mod_code": [
        "x3 = min ( dp [ i - 1 ] [ 0 ] , min ( dp [ i - 1 ] [ 1 ] , dp [ i - 1 ] [ 2 ] ) ;",
        "for ( int 2 = min ( dp [ i - 1 ] [ 1 ] , dp [ i - 1 ] [ 2 ] ) ;",
        "x1 = min ( dp [ i - 1 ] [ 0 ] , min ( dp [ i - 1 ] [ 1 ] , dp [ i - 1 ] [ 2 ] ) ;"
      ],
      "err_line": 24,
      "err_msg": "expected ‘)’ before ‘;’ token"
    },
    {
      "mod_line": [
        45,
        4
      ],
      "mod_code": [
        "x3 = min ( dp [ i - 1 ] [ 0 ] , min ( dp [ i - 1 ] [ 1 ] , dp [ i - 1 ] [ 2 ] ) ;",
        "while ( cin >> n )"
      ],
      "err_line": 6,
      "err_msg": "‘v’ was not declared in this scope"
    },
    {
      "mod_line": [
        45,
        4,
        23
      ],
      "mod_code": [
        "x3 = min ( dp [ i - 1 ] [ 0 ] , min ( dp [ i - 1 ] [ 1 ] , dp [ i - 1 ] [ 2 ] ) ;",
        "while ( cin >> n )",
        "if ( v [ i ] == ' 0 ' )"
      ],
      "err_line": 6,
      "err_msg": "‘v’ was not declared in this scope"
    },
    {
      "mod_line": [
        45,
        4,
        23,
        28
      ],
      "mod_code": [
        "x3 = min ( dp [ i - 1 ] [ 0 ] , min ( dp [ i - 1 ] [ 1 ] , dp [ i - 1 ] [ 2 ] ) ;",
        "while ( cin >> n )",
        "if ( v [ i ] == ' 0 ' )",
        "else if ( v [ i ] == ' 1 ' )"
      ],
      "err_line": 6,
      "err_msg": "‘v’ was not declared in this scope"
    },
    {
      "mod_line": [
        45,
        4,
        23,
        24
      ],
      "mod_code": [
        "x3 = min ( dp [ i - 1 ] [ 0 ] , min ( dp [ i - 1 ] [ 1 ] , dp [ i - 1 ] [ 2 ] ) ;",
        "while ( cin >> n )",
        "if ( v [ i ] == ' 0 ' )",
        "x1 = min ( dp [ i - 1 ] [ 0 ] , min ( dp [ i - 1 ] [ 1 ] , dp [ i - 1 ] [ 2 ] ) ;"
      ],
      "err_line": 6,
      "err_msg": "‘v’ was not declared in this scope"
    },
    {
      "mod_line": [
        45,
        4,
        28
      ],
      "mod_code": [
        "x3 = min ( dp [ i - 1 ] [ 0 ] , min ( dp [ i - 1 ] [ 1 ] , dp [ i - 1 ] [ 2 ] ) ;",
        "while ( cin >> n )",
        "else if ( v [ i ] == ' 1 ' )"
      ],
      "err_line": 6,
      "err_msg": "‘v’ was not declared in this scope"
    },
    {
      "mod_line": [
        45,
        4,
        28,
        24
      ],
      "mod_code": [
        "x3 = min ( dp [ i - 1 ] [ 0 ] , min ( dp [ i - 1 ] [ 1 ] , dp [ i - 1 ] [ 2 ] ) ;",
        "while ( cin >> n )",
        "else if ( v [ i ] == ' 1 ' )",
        "x1 = min ( dp [ i - 1 ] [ 0 ] , min ( dp [ i - 1 ] [ 1 ] , dp [ i - 1 ] [ 2 ] ) ;"
      ],
      "err_line": 6,
      "err_msg": "‘v’ was not declared in this scope"
    },
    {
      "mod_line": [
        45,
        4,
        24
      ],
      "mod_code": [
        "x3 = min ( dp [ i - 1 ] [ 0 ] , min ( dp [ i - 1 ] [ 1 ] , dp [ i - 1 ] [ 2 ] ) ;",
        "while ( cin >> n )",
        "x1 = min ( dp [ i - 1 ] [ 0 ] , min ( dp [ i - 1 ] [ 1 ] , dp [ i - 1 ] [ 2 ] ) ;"
      ],
      "err_line": 6,
      "err_msg": "‘v’ was not declared in this scope"
    },
    {
      "mod_line": [
        45,
        23
      ],
      "mod_code": [
        "x3 = min ( dp [ i - 1 ] [ 0 ] , min ( dp [ i - 1 ] [ 1 ] , dp [ i - 1 ] [ 2 ] ) ;",
        "if ( v [ i ] == ' 0 ' )"
      ],
      "err_line": 45,
      "err_msg": "expected ‘)’ before ‘;’ token"
    },
    {
      "mod_line": [
        45,
        23,
        28
      ],
      "mod_code": [
        "x3 = min ( dp [ i - 1 ] [ 0 ] , min ( dp [ i - 1 ] [ 1 ] , dp [ i - 1 ] [ 2 ] ) ;",
        "if ( v [ i ] == ' 0 ' )",
        "else if ( v [ i ] == ' 1 ' )"
      ],
      "err_line": 45,
      "err_msg": "expected ‘)’ before ‘;’ token"
    },
    {
      "mod_line": [
        45,
        23,
        28,
        24
      ],
      "mod_code": [
        "x3 = min ( dp [ i - 1 ] [ 0 ] , min ( dp [ i - 1 ] [ 1 ] , dp [ i - 1 ] [ 2 ] ) ;",
        "if ( v [ i ] == ' 0 ' )",
        "else if ( v [ i ] == ' 1 ' )",
        "x1 = min ( dp [ i - 1 ] [ 0 ] , min ( dp [ i - 1 ] [ 1 ] , dp [ i - 1 ] [ 2 ] ) ;"
      ],
      "err_line": 24,
      "err_msg": "expected ‘)’ before ‘;’ token"
    },
    {
      "mod_line": [
        45,
        23,
        24
      ],
      "mod_code": [
        "x3 = min ( dp [ i - 1 ] [ 0 ] , min ( dp [ i - 1 ] [ 1 ] , dp [ i - 1 ] [ 2 ] ) ;",
        "if ( v [ i ] == ' 0 ' )",
        "x1 = min ( dp [ i - 1 ] [ 0 ] , min ( dp [ i - 1 ] [ 1 ] , dp [ i - 1 ] [ 2 ] ) ;"
      ],
      "err_line": 24,
      "err_msg": "expected ‘)’ before ‘;’ token"
    },
    {
      "mod_line": [
        45,
        28
      ],
      "mod_code": [
        "x3 = min ( dp [ i - 1 ] [ 0 ] , min ( dp [ i - 1 ] [ 1 ] , dp [ i - 1 ] [ 2 ] ) ;",
        "else if ( v [ i ] == ' 1 ' )"
      ],
      "err_line": 45,
      "err_msg": "expected ‘)’ before ‘;’ token"
    },
    {
      "mod_line": [
        45,
        28,
        24
      ],
      "mod_code": [
        "x3 = min ( dp [ i - 1 ] [ 0 ] , min ( dp [ i - 1 ] [ 1 ] , dp [ i - 1 ] [ 2 ] ) ;",
        "else if ( v [ i ] == ' 1 ' )",
        "x1 = min ( dp [ i - 1 ] [ 0 ] , min ( dp [ i - 1 ] [ 1 ] , dp [ i - 1 ] [ 2 ] ) ;"
      ],
      "err_line": 24,
      "err_msg": "expected ‘)’ before ‘;’ token"
    },
    {
      "mod_line": [
        45,
        24
      ],
      "mod_code": [
        "x3 = min ( dp [ i - 1 ] [ 0 ] , min ( dp [ i - 1 ] [ 1 ] , dp [ i - 1 ] [ 2 ] ) ;",
        "x1 = min ( dp [ i - 1 ] [ 0 ] , min ( dp [ i - 1 ] [ 1 ] , dp [ i - 1 ] [ 2 ] ) ;"
      ],
      "err_line": 24,
      "err_msg": "expected ‘)’ before ‘;’ token"
    },
    {
      "mod_line": [
        42,
        4
      ],
      "mod_code": [
        "for ( int 2 = min ( dp [ i - 1 ] [ 1 ] , dp [ i - 1 ] [ 2 ] ) ;",
        "while ( cin >> n )"
      ],
      "err_line": 6,
      "err_msg": "‘v’ was not declared in this scope"
    },
    {
      "mod_line": [
        42,
        4,
        23
      ],
      "mod_code": [
        "for ( int 2 = min ( dp [ i - 1 ] [ 1 ] , dp [ i - 1 ] [ 2 ] ) ;",
        "while ( cin >> n )",
        "if ( v [ i ] == ' 0 ' )"
      ],
      "err_line": 6,
      "err_msg": "‘v’ was not declared in this scope"
    },
    {
      "mod_line": [
        42,
        4,
        23,
        28
      ],
      "mod_code": [
        "for ( int 2 = min ( dp [ i - 1 ] [ 1 ] , dp [ i - 1 ] [ 2 ] ) ;",
        "while ( cin >> n )",
        "if ( v [ i ] == ' 0 ' )",
        "else if ( v [ i ] == ' 1 ' )"
      ],
      "err_line": 6,
      "err_msg": "‘v’ was not declared in this scope"
    },
    {
      "mod_line": [
        42,
        4,
        23,
        24
      ],
      "mod_code": [
        "for ( int 2 = min ( dp [ i - 1 ] [ 1 ] , dp [ i - 1 ] [ 2 ] ) ;",
        "while ( cin >> n )",
        "if ( v [ i ] == ' 0 ' )",
        "x1 = min ( dp [ i - 1 ] [ 0 ] , min ( dp [ i - 1 ] [ 1 ] , dp [ i - 1 ] [ 2 ] ) ;"
      ],
      "err_line": 6,
      "err_msg": "‘v’ was not declared in this scope"
    },
    {
      "mod_line": [
        42,
        4,
        28
      ],
      "mod_code": [
        "for ( int 2 = min ( dp [ i - 1 ] [ 1 ] , dp [ i - 1 ] [ 2 ] ) ;",
        "while ( cin >> n )",
        "else if ( v [ i ] == ' 1 ' )"
      ],
      "err_line": 6,
      "err_msg": "‘v’ was not declared in this scope"
    },
    {
      "mod_line": [
        42,
        4,
        28,
        24
      ],
      "mod_code": [
        "for ( int 2 = min ( dp [ i - 1 ] [ 1 ] , dp [ i - 1 ] [ 2 ] ) ;",
        "while ( cin >> n )",
        "else if ( v [ i ] == ' 1 ' )",
        "x1 = min ( dp [ i - 1 ] [ 0 ] , min ( dp [ i - 1 ] [ 1 ] , dp [ i - 1 ] [ 2 ] ) ;"
      ],
      "err_line": 6,
      "err_msg": "‘v’ was not declared in this scope"
    },
    {
      "mod_line": [
        42,
        4,
        24
      ],
      "mod_code": [
        "for ( int 2 = min ( dp [ i - 1 ] [ 1 ] , dp [ i - 1 ] [ 2 ] ) ;",
        "while ( cin >> n )",
        "x1 = min ( dp [ i - 1 ] [ 0 ] , min ( dp [ i - 1 ] [ 1 ] , dp [ i - 1 ] [ 2 ] ) ;"
      ],
      "err_line": 6,
      "err_msg": "‘v’ was not declared in this scope"
    },
    {
      "mod_line": [
        42,
        23
      ],
      "mod_code": [
        "for ( int 2 = min ( dp [ i - 1 ] [ 1 ] , dp [ i - 1 ] [ 2 ] ) ;",
        "if ( v [ i ] == ' 0 ' )"
      ],
      "err_line": 42,
      "err_msg": "expected unqualified-id before numeric constant"
    },
    {
      "mod_line": [
        42,
        23,
        28
      ],
      "mod_code": [
        "for ( int 2 = min ( dp [ i - 1 ] [ 1 ] , dp [ i - 1 ] [ 2 ] ) ;",
        "if ( v [ i ] == ' 0 ' )",
        "else if ( v [ i ] == ' 1 ' )"
      ],
      "err_line": 42,
      "err_msg": "expected unqualified-id before numeric constant"
    },
    {
      "mod_line": [
        42,
        23,
        28,
        24
      ],
      "mod_code": [
        "for ( int 2 = min ( dp [ i - 1 ] [ 1 ] , dp [ i - 1 ] [ 2 ] ) ;",
        "if ( v [ i ] == ' 0 ' )",
        "else if ( v [ i ] == ' 1 ' )",
        "x1 = min ( dp [ i - 1 ] [ 0 ] , min ( dp [ i - 1 ] [ 1 ] , dp [ i - 1 ] [ 2 ] ) ;"
      ],
      "err_line": 24,
      "err_msg": "expected ‘)’ before ‘;’ token"
    },
    {
      "mod_line": [
        42,
        23,
        24
      ],
      "mod_code": [
        "for ( int 2 = min ( dp [ i - 1 ] [ 1 ] , dp [ i - 1 ] [ 2 ] ) ;",
        "if ( v [ i ] == ' 0 ' )",
        "x1 = min ( dp [ i - 1 ] [ 0 ] , min ( dp [ i - 1 ] [ 1 ] , dp [ i - 1 ] [ 2 ] ) ;"
      ],
      "err_line": 24,
      "err_msg": "expected ‘)’ before ‘;’ token"
    },
    {
      "mod_line": [
        42,
        28
      ],
      "mod_code": [
        "for ( int 2 = min ( dp [ i - 1 ] [ 1 ] , dp [ i - 1 ] [ 2 ] ) ;",
        "else if ( v [ i ] == ' 1 ' )"
      ],
      "err_line": 42,
      "err_msg": "expected unqualified-id before numeric constant"
    },
    {
      "mod_line": [
        42,
        28,
        24
      ],
      "mod_code": [
        "for ( int 2 = min ( dp [ i - 1 ] [ 1 ] , dp [ i - 1 ] [ 2 ] ) ;",
        "else if ( v [ i ] == ' 1 ' )",
        "x1 = min ( dp [ i - 1 ] [ 0 ] , min ( dp [ i - 1 ] [ 1 ] , dp [ i - 1 ] [ 2 ] ) ;"
      ],
      "err_line": 24,
      "err_msg": "expected ‘)’ before ‘;’ token"
    },
    {
      "mod_line": [
        42,
        24
      ],
      "mod_code": [
        "for ( int 2 = min ( dp [ i - 1 ] [ 1 ] , dp [ i - 1 ] [ 2 ] ) ;",
        "x1 = min ( dp [ i - 1 ] [ 0 ] , min ( dp [ i - 1 ] [ 1 ] , dp [ i - 1 ] [ 2 ] ) ;"
      ],
      "err_line": 24,
      "err_msg": "expected ‘)’ before ‘;’ token"
    },
    {
      "mod_line": [
        4,
        23
      ],
      "mod_code": [
        "while ( cin >> n )",
        "if ( v [ i ] == ' 0 ' )"
      ],
      "err_line": 6,
      "err_msg": "‘v’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        23,
        28
      ],
      "mod_code": [
        "while ( cin >> n )",
        "if ( v [ i ] == ' 0 ' )",
        "else if ( v [ i ] == ' 1 ' )"
      ],
      "err_line": 6,
      "err_msg": "‘v’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        23,
        28,
        24
      ],
      "mod_code": [
        "while ( cin >> n )",
        "if ( v [ i ] == ' 0 ' )",
        "else if ( v [ i ] == ' 1 ' )",
        "x1 = min ( dp [ i - 1 ] [ 0 ] , min ( dp [ i - 1 ] [ 1 ] , dp [ i - 1 ] [ 2 ] ) ;"
      ],
      "err_line": 6,
      "err_msg": "‘v’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        23,
        24
      ],
      "mod_code": [
        "while ( cin >> n )",
        "if ( v [ i ] == ' 0 ' )",
        "x1 = min ( dp [ i - 1 ] [ 0 ] , min ( dp [ i - 1 ] [ 1 ] , dp [ i - 1 ] [ 2 ] ) ;"
      ],
      "err_line": 6,
      "err_msg": "‘v’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        28
      ],
      "mod_code": [
        "while ( cin >> n )",
        "else if ( v [ i ] == ' 1 ' )"
      ],
      "err_line": 6,
      "err_msg": "‘v’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        28,
        24
      ],
      "mod_code": [
        "while ( cin >> n )",
        "else if ( v [ i ] == ' 1 ' )",
        "x1 = min ( dp [ i - 1 ] [ 0 ] , min ( dp [ i - 1 ] [ 1 ] , dp [ i - 1 ] [ 2 ] ) ;"
      ],
      "err_line": 6,
      "err_msg": "‘v’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        24
      ],
      "mod_code": [
        "while ( cin >> n )",
        "x1 = min ( dp [ i - 1 ] [ 0 ] , min ( dp [ i - 1 ] [ 1 ] , dp [ i - 1 ] [ 2 ] ) ;"
      ],
      "err_line": 6,
      "err_msg": "‘v’ was not declared in this scope"
    },
    {
      "mod_line": [
        23,
        28,
        24
      ],
      "mod_code": [
        "if ( v [ i ] == ' 0 ' )",
        "else if ( v [ i ] == ' 1 ' )",
        "x1 = min ( dp [ i - 1 ] [ 0 ] , min ( dp [ i - 1 ] [ 1 ] , dp [ i - 1 ] [ 2 ] ) ;"
      ],
      "err_line": 24,
      "err_msg": "expected ‘)’ before ‘;’ token"
    },
    {
      "mod_line": [
        23,
        24
      ],
      "mod_code": [
        "if ( v [ i ] == ' 0 ' )",
        "x1 = min ( dp [ i - 1 ] [ 0 ] , min ( dp [ i - 1 ] [ 1 ] , dp [ i - 1 ] [ 2 ] ) ;"
      ],
      "err_line": 24,
      "err_msg": "expected ‘)’ before ‘;’ token"
    },
    {
      "mod_line": [
        28,
        24
      ],
      "mod_code": [
        "else if ( v [ i ] == ' 1 ' )",
        "x1 = min ( dp [ i - 1 ] [ 0 ] , min ( dp [ i - 1 ] [ 1 ] , dp [ i - 1 ] [ 2 ] ) ;"
      ],
      "err_line": 24,
      "err_msg": "expected ‘)’ before ‘;’ token"
    }
  ]
}