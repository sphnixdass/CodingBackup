{
  "meta": {
    "index": 874,
    "hitid": "3YD0MU1NC2VFUTXG45XEVD921GBA78",
    "workerid": "AIWEXPJAU66D9",
    "probid": "322A",
    "subid": "45466704"
  },
  "lines": [
    {
      "line": 0,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 1,
      "text": "declare integers n , m , i and p",
      "code": "int n , m , i , p ;",
      "indent": 1
    },
    {
      "line": 2,
      "text": "read n and m",
      "code": "cin >> n >> m ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "print n + m - 1 and a new line",
      "code": "cout << n + m - 1 << endl ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "for i = 1 to m inclusive",
      "code": "for ( i = 1 ; i <= m ; i ++ )",
      "indent": 1
    },
    {
      "line": 5,
      "text": "print \" 1 \"",
      "code": "cout << \" 1 \"",
      "indent": 2
    },
    {
      "line": 6,
      "text": "print \" \" , i and a new line",
      "code": "<< \" \" << i << endl ;",
      "indent": 3
    },
    {
      "line": 7,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 8,
      "text": "for p = 2 to n inclusive",
      "code": "for ( p = 2 ; p <= n ; p ++ )",
      "indent": 1
    },
    {
      "line": 9,
      "text": "print p and \" \"",
      "code": "cout << p << \" \"",
      "indent": 2
    },
    {
      "line": 10,
      "text": "print \" 1 \" and a new line",
      "code": "<< \" 1 \" << endl ;",
      "indent": 3
    },
    {
      "line": 11,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 12,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 13,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        5
      ],
      "mod_code": [
        "cout << \" 1 \" << endl ;"
      ],
      "err_line": 6,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        6
      ],
      "mod_code": [
        "cout << \" \" << i << endl ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        9
      ],
      "mod_code": [
        "cout << p << \" \" ;"
      ],
      "err_line": 10,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        10
      ],
      "mod_code": [
        "cout << \" 1 \" << endl ;"
      ],
      "err_line": 10,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        5
      ],
      "mod_code": [
        "cout << \" 1 \" ;"
      ],
      "err_line": 6,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        6
      ],
      "mod_code": [
        "cout << \" \" , i << endl ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        9
      ],
      "mod_code": [
        "cout << p << \" \" << endl ;"
      ],
      "err_line": 10,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        10
      ],
      "mod_code": [
        "cout << \" 0\\n \" << endl ;"
      ],
      "err_line": 10,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        5,
        6,
        9
      ],
      "mod_code": [
        "cout << \" 1 \" << endl ;",
        "cout << \" \" << i << endl ;",
        "cout << p << \" \" ;"
      ],
      "err_line": 10,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        5,
        6,
        9,
        2
      ],
      "mod_code": [
        "cout << \" 1 \" << endl ;",
        "cout << \" \" << i << endl ;",
        "cout << p << \" \" ;",
        "cin >> m >> m ;"
      ],
      "err_line": 10,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        5,
        6,
        10
      ],
      "mod_code": [
        "cout << \" 1 \" << endl ;",
        "cout << \" \" << i << endl ;",
        "cout << \" 1 \" << endl ;"
      ],
      "err_line": 10,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        5,
        6,
        10,
        2
      ],
      "mod_code": [
        "cout << \" 1 \" << endl ;",
        "cout << \" \" << i << endl ;",
        "cout << \" 1 \" << endl ;",
        "cin >> m >> m ;"
      ],
      "err_line": 10,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        5,
        6,
        10
      ],
      "mod_code": [
        "cout << \" 1 \" << endl ;",
        "cout << \" \" << i << endl ;",
        "cout << \" 0\\n \" << endl ;"
      ],
      "err_line": 10,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        5,
        6,
        10,
        2
      ],
      "mod_code": [
        "cout << \" 1 \" << endl ;",
        "cout << \" \" << i << endl ;",
        "cout << \" 0\\n \" << endl ;",
        "cin >> m >> m ;"
      ],
      "err_line": 10,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        5,
        9
      ],
      "mod_code": [
        "cout << \" 1 \" << endl ;",
        "cout << p << \" \" ;"
      ],
      "err_line": 6,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        5,
        9,
        10
      ],
      "mod_code": [
        "cout << \" 1 \" << endl ;",
        "cout << p << \" \" ;",
        "cout << \" 1 \" << endl ;"
      ],
      "err_line": 6,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        5,
        9,
        10,
        2
      ],
      "mod_code": [
        "cout << \" 1 \" << endl ;",
        "cout << p << \" \" ;",
        "cout << \" 1 \" << endl ;",
        "cin >> m >> m ;"
      ],
      "err_line": 6,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        5,
        9,
        10
      ],
      "mod_code": [
        "cout << \" 1 \" << endl ;",
        "cout << p << \" \" ;",
        "cout << \" 0\\n \" << endl ;"
      ],
      "err_line": 6,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        5,
        9,
        10,
        2
      ],
      "mod_code": [
        "cout << \" 1 \" << endl ;",
        "cout << p << \" \" ;",
        "cout << \" 0\\n \" << endl ;",
        "cin >> m >> m ;"
      ],
      "err_line": 6,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        5,
        9,
        2
      ],
      "mod_code": [
        "cout << \" 1 \" << endl ;",
        "cout << p << \" \" ;",
        "cin >> m >> m ;"
      ],
      "err_line": 6,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        5,
        10
      ],
      "mod_code": [
        "cout << \" 1 \" << endl ;",
        "cout << \" 1 \" << endl ;"
      ],
      "err_line": 6,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        5,
        10,
        2
      ],
      "mod_code": [
        "cout << \" 1 \" << endl ;",
        "cout << \" 1 \" << endl ;",
        "cin >> m >> m ;"
      ],
      "err_line": 6,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        5,
        10
      ],
      "mod_code": [
        "cout << \" 1 \" << endl ;",
        "cout << \" 0\\n \" << endl ;"
      ],
      "err_line": 6,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        5,
        10,
        2
      ],
      "mod_code": [
        "cout << \" 1 \" << endl ;",
        "cout << \" 0\\n \" << endl ;",
        "cin >> m >> m ;"
      ],
      "err_line": 6,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        5,
        2
      ],
      "mod_code": [
        "cout << \" 1 \" << endl ;",
        "cin >> m >> m ;"
      ],
      "err_line": 6,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        6,
        9
      ],
      "mod_code": [
        "cout << \" \" << i << endl ;",
        "cout << p << \" \" ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        6,
        9,
        10
      ],
      "mod_code": [
        "cout << \" \" << i << endl ;",
        "cout << p << \" \" ;",
        "cout << \" 1 \" << endl ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        6,
        9,
        10,
        2
      ],
      "mod_code": [
        "cout << \" \" << i << endl ;",
        "cout << p << \" \" ;",
        "cout << \" 1 \" << endl ;",
        "cin >> m >> m ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        6,
        9,
        10
      ],
      "mod_code": [
        "cout << \" \" << i << endl ;",
        "cout << p << \" \" ;",
        "cout << \" 0\\n \" << endl ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        6,
        9,
        10,
        2
      ],
      "mod_code": [
        "cout << \" \" << i << endl ;",
        "cout << p << \" \" ;",
        "cout << \" 0\\n \" << endl ;",
        "cin >> m >> m ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        6,
        9,
        2
      ],
      "mod_code": [
        "cout << \" \" << i << endl ;",
        "cout << p << \" \" ;",
        "cin >> m >> m ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        6,
        10
      ],
      "mod_code": [
        "cout << \" \" << i << endl ;",
        "cout << \" 1 \" << endl ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        6,
        10,
        2
      ],
      "mod_code": [
        "cout << \" \" << i << endl ;",
        "cout << \" 1 \" << endl ;",
        "cin >> m >> m ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        6,
        10
      ],
      "mod_code": [
        "cout << \" \" << i << endl ;",
        "cout << \" 0\\n \" << endl ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        6,
        10,
        2
      ],
      "mod_code": [
        "cout << \" \" << i << endl ;",
        "cout << \" 0\\n \" << endl ;",
        "cin >> m >> m ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        6,
        2
      ],
      "mod_code": [
        "cout << \" \" << i << endl ;",
        "cin >> m >> m ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        9,
        2
      ],
      "mod_code": [
        "cout << p << \" \" ;",
        "cin >> m >> m ;"
      ],
      "err_line": 10,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        10,
        2
      ],
      "mod_code": [
        "cout << \" 1 \" << endl ;",
        "cin >> m >> m ;"
      ],
      "err_line": 10,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        10,
        2
      ],
      "mod_code": [
        "cout << \" 0\\n \" << endl ;",
        "cin >> m >> m ;"
      ],
      "err_line": 10,
      "err_msg": "expected ‘;’ before ‘cout’"
    }
  ]
}