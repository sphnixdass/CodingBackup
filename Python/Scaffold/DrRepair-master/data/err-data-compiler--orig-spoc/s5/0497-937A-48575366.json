{
  "meta": {
    "index": 497,
    "hitid": "3MDWE879UHWORMQ1PGVU4KKEFBIB9P",
    "workerid": "A1AYVATMT88U1W",
    "probid": "937A",
    "subid": "48575366"
  },
  "lines": [
    {
      "line": 0,
      "text": "it is an inline function",
      "code": "inline int read ( )",
      "indent": 0
    },
    {
      "line": 1,
      "text": "let x , ff be integers with x = 0 , ff = 1",
      "code": "int x = 0 , ff = 1 ;",
      "indent": 1
    },
    {
      "line": 2,
      "text": "this reads a single character from a given input stream and returns to c",
      "code": "char c = getchar ( ) ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "while c is less than 0 or c is greater than 9",
      "code": "while ( c < ' 0 ' || c > ' 9 ' )",
      "indent": 1
    },
    {
      "line": 4,
      "text": "if c is equal to - , ff is equal to - 1",
      "code": "if ( c == ' - ' ) ff = - 1 ;",
      "indent": 2
    },
    {
      "line": 5,
      "text": "this reads a single character from a given input stream and returns to c",
      "code": "c = getchar ( ) ;",
      "indent": 2
    },
    {
      "line": 6,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 7,
      "text": "while c > = 0 and c < = 9",
      "code": "while ( c >= ' 0 ' && c <= ' 9 ' )",
      "indent": 1
    },
    {
      "line": 8,
      "text": "x is equal to ( x < < 1 ) + ( x < < 3 ) + ( c ^ 48 )",
      "code": "x = ( x << 1 ) + ( x << 3 ) + ( c ^ 48 ) ;",
      "indent": 2
    },
    {
      "line": 9,
      "text": "this reads a single character from a given input stream and returns to c",
      "code": "c = getchar ( ) ;",
      "indent": 2
    },
    {
      "line": 10,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 11,
      "text": "return the value of x * ff",
      "code": "return x * ff ;",
      "indent": 1
    },
    {
      "line": 12,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    },
    {
      "line": 13,
      "text": "it is an inline integer function",
      "code": "inline int in ( )",
      "indent": 0
    },
    {
      "line": 14,
      "text": "let ff be a integer",
      "code": "int ff ;",
      "indent": 1
    },
    {
      "line": 15,
      "text": "read ff",
      "code": "cin >> ff ;",
      "indent": 1
    },
    {
      "line": 16,
      "text": "return the value of ff",
      "code": "return ff ;",
      "indent": 1
    },
    {
      "line": 17,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    },
    {
      "line": 18,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 19,
      "text": "b = array of boolean values of length 1002",
      "code": "bool b [ 1002 ] ;",
      "indent": 1
    },
    {
      "line": 20,
      "text": "memset of b , 0 , length of b",
      "code": "memset ( b , 0 , sizeof ( b ) ) ;",
      "indent": 1
    },
    {
      "line": 21,
      "text": "let n , x , k be integers with k = 0",
      "code": "int n , x , k = 0 ;",
      "indent": 1
    },
    {
      "line": 22,
      "text": "call the in function and assign to n",
      "code": "n = in ( ) ;",
      "indent": 1
    },
    {
      "line": 23,
      "text": "while n is decremented by 1",
      "code": "while ( n -- )",
      "indent": 1
    },
    {
      "line": 24,
      "text": "call the in function and assign to x",
      "code": "x = in ( ) ;",
      "indent": 2
    },
    {
      "line": 25,
      "text": "if x and b [ x ] is equal to 0 , increment k by 1 , b [ x ] is equal to 1",
      "code": "if ( x && b [ x ] == 0 ) { k ++ , b [ x ] = 1 ; }",
      "indent": 2
    },
    {
      "line": 26,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 27,
      "text": "print k and newline",
      "code": "cout << k << endl ;",
      "indent": 1
    },
    {
      "line": 28,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 29,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        0
      ],
      "mod_code": [
        "inline void it ( )"
      ],
      "err_line": 11,
      "err_msg": "return-statement with a value, in function returning 'void' [-fpermissive]"
    },
    {
      "mod_line": [
        2
      ],
      "mod_code": [
        "c = getchar ( ) ;"
      ],
      "err_line": 2,
      "err_msg": "‘c’ was not declared in this scope"
    },
    {
      "mod_line": [
        8
      ],
      "mod_code": [
        "x = ( x << 1 ) + ( x << 3 ) + ( c . 48 ) ;"
      ],
      "err_line": 8,
      "err_msg": "expected unqualified-id before numeric constant"
    },
    {
      "mod_line": [
        13
      ],
      "mod_code": [
        "inline int it ( )"
      ],
      "err_line": 22,
      "err_msg": "‘in’ was not declared in this scope"
    },
    {
      "mod_line": [
        22
      ],
      "mod_code": [
        "a ( n ) ;"
      ],
      "err_line": 22,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        2
      ],
      "mod_code": [
        "a = getchar ( ) ;"
      ],
      "err_line": 2,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        5
      ],
      "mod_code": [
        "a = getchar ( ) ;"
      ],
      "err_line": 5,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        8
      ],
      "mod_code": [
        "x = ( x << 1 ) + ( x << 3 ) + ( c ;"
      ],
      "err_line": 8,
      "err_msg": "expected ‘)’ before ‘;’ token"
    },
    {
      "mod_line": [
        9
      ],
      "mod_code": [
        "a = getchar ( ) ;"
      ],
      "err_line": 9,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        13
      ],
      "mod_code": [
        "inline int it ( ) ;"
      ],
      "err_line": 14,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        20
      ],
      "mod_code": [
        "memset ( b , 0 , b . size ( ) ) ;"
      ],
      "err_line": 20,
      "err_msg": "request for member ‘size’ in ‘b’, which is of non-class type ‘bool [1002]’"
    },
    {
      "mod_line": [
        22
      ],
      "mod_code": [
        "in ( n ) ;"
      ],
      "err_line": 22,
      "err_msg": "too many arguments to function ‘int in()’"
    },
    {
      "mod_line": [
        24
      ],
      "mod_code": [
        "in ( x ) ;"
      ],
      "err_line": 24,
      "err_msg": "too many arguments to function ‘int in()’"
    },
    {
      "mod_line": [
        0,
        2
      ],
      "mod_code": [
        "inline void it ( )",
        "c = getchar ( ) ;"
      ],
      "err_line": 2,
      "err_msg": "‘c’ was not declared in this scope"
    },
    {
      "mod_line": [
        0,
        2,
        8
      ],
      "mod_code": [
        "inline void it ( )",
        "c = getchar ( ) ;",
        "x = ( x << 1 ) + ( x << 3 ) + ( c . 48 ) ;"
      ],
      "err_line": 2,
      "err_msg": "‘c’ was not declared in this scope"
    },
    {
      "mod_line": [
        0,
        2,
        8,
        13
      ],
      "mod_code": [
        "inline void it ( )",
        "c = getchar ( ) ;",
        "x = ( x << 1 ) + ( x << 3 ) + ( c . 48 ) ;",
        "inline int it ( )"
      ],
      "err_line": 2,
      "err_msg": "‘c’ was not declared in this scope"
    },
    {
      "mod_line": [
        0,
        2,
        8,
        22
      ],
      "mod_code": [
        "inline void it ( )",
        "c = getchar ( ) ;",
        "x = ( x << 1 ) + ( x << 3 ) + ( c . 48 ) ;",
        "a ( n ) ;"
      ],
      "err_line": 2,
      "err_msg": "‘c’ was not declared in this scope"
    },
    {
      "mod_line": [
        0,
        2,
        8,
        24
      ],
      "mod_code": [
        "inline void it ( )",
        "c = getchar ( ) ;",
        "x = ( x << 1 ) + ( x << 3 ) + ( c . 48 ) ;",
        "x = x ;"
      ],
      "err_line": 2,
      "err_msg": "‘c’ was not declared in this scope"
    },
    {
      "mod_line": [
        0,
        2,
        8,
        25
      ],
      "mod_code": [
        "inline void it ( )",
        "c = getchar ( ) ;",
        "x = ( x << 1 ) + ( x << 3 ) + ( c . 48 ) ;",
        "if ( x == 0 && b [ x ] == 0 ) k ++ ;"
      ],
      "err_line": 2,
      "err_msg": "‘c’ was not declared in this scope"
    },
    {
      "mod_line": [
        0,
        2,
        13
      ],
      "mod_code": [
        "inline void it ( )",
        "c = getchar ( ) ;",
        "inline int it ( )"
      ],
      "err_line": 2,
      "err_msg": "‘c’ was not declared in this scope"
    },
    {
      "mod_line": [
        0,
        2,
        13,
        22
      ],
      "mod_code": [
        "inline void it ( )",
        "c = getchar ( ) ;",
        "inline int it ( )",
        "a ( n ) ;"
      ],
      "err_line": 2,
      "err_msg": "‘c’ was not declared in this scope"
    },
    {
      "mod_line": [
        0,
        2,
        13,
        24
      ],
      "mod_code": [
        "inline void it ( )",
        "c = getchar ( ) ;",
        "inline int it ( )",
        "x = x ;"
      ],
      "err_line": 2,
      "err_msg": "‘c’ was not declared in this scope"
    },
    {
      "mod_line": [
        0,
        2,
        13,
        25
      ],
      "mod_code": [
        "inline void it ( )",
        "c = getchar ( ) ;",
        "inline int it ( )",
        "if ( x == 0 && b [ x ] == 0 ) k ++ ;"
      ],
      "err_line": 2,
      "err_msg": "‘c’ was not declared in this scope"
    },
    {
      "mod_line": [
        0,
        2,
        22
      ],
      "mod_code": [
        "inline void it ( )",
        "c = getchar ( ) ;",
        "a ( n ) ;"
      ],
      "err_line": 2,
      "err_msg": "‘c’ was not declared in this scope"
    },
    {
      "mod_line": [
        0,
        2,
        22,
        24
      ],
      "mod_code": [
        "inline void it ( )",
        "c = getchar ( ) ;",
        "a ( n ) ;",
        "x = x ;"
      ],
      "err_line": 2,
      "err_msg": "‘c’ was not declared in this scope"
    },
    {
      "mod_line": [
        0,
        2,
        22,
        25
      ],
      "mod_code": [
        "inline void it ( )",
        "c = getchar ( ) ;",
        "a ( n ) ;",
        "if ( x == 0 && b [ x ] == 0 ) k ++ ;"
      ],
      "err_line": 2,
      "err_msg": "‘c’ was not declared in this scope"
    },
    {
      "mod_line": [
        0,
        2,
        24
      ],
      "mod_code": [
        "inline void it ( )",
        "c = getchar ( ) ;",
        "x = x ;"
      ],
      "err_line": 2,
      "err_msg": "‘c’ was not declared in this scope"
    },
    {
      "mod_line": [
        0,
        2,
        24,
        25
      ],
      "mod_code": [
        "inline void it ( )",
        "c = getchar ( ) ;",
        "x = x ;",
        "if ( x == 0 && b [ x ] == 0 ) k ++ ;"
      ],
      "err_line": 2,
      "err_msg": "‘c’ was not declared in this scope"
    },
    {
      "mod_line": [
        0,
        2,
        25
      ],
      "mod_code": [
        "inline void it ( )",
        "c = getchar ( ) ;",
        "if ( x == 0 && b [ x ] == 0 ) k ++ ;"
      ],
      "err_line": 2,
      "err_msg": "‘c’ was not declared in this scope"
    },
    {
      "mod_line": [
        0,
        8
      ],
      "mod_code": [
        "inline void it ( )",
        "x = ( x << 1 ) + ( x << 3 ) + ( c . 48 ) ;"
      ],
      "err_line": 8,
      "err_msg": "expected unqualified-id before numeric constant"
    },
    {
      "mod_line": [
        0,
        8,
        13
      ],
      "mod_code": [
        "inline void it ( )",
        "x = ( x << 1 ) + ( x << 3 ) + ( c . 48 ) ;",
        "inline int it ( )"
      ],
      "err_line": 8,
      "err_msg": "expected unqualified-id before numeric constant"
    },
    {
      "mod_line": [
        0,
        8,
        13,
        22
      ],
      "mod_code": [
        "inline void it ( )",
        "x = ( x << 1 ) + ( x << 3 ) + ( c . 48 ) ;",
        "inline int it ( )",
        "a ( n ) ;"
      ],
      "err_line": 8,
      "err_msg": "expected unqualified-id before numeric constant"
    },
    {
      "mod_line": [
        0,
        8,
        13,
        24
      ],
      "mod_code": [
        "inline void it ( )",
        "x = ( x << 1 ) + ( x << 3 ) + ( c . 48 ) ;",
        "inline int it ( )",
        "x = x ;"
      ],
      "err_line": 8,
      "err_msg": "expected unqualified-id before numeric constant"
    },
    {
      "mod_line": [
        0,
        8,
        13,
        25
      ],
      "mod_code": [
        "inline void it ( )",
        "x = ( x << 1 ) + ( x << 3 ) + ( c . 48 ) ;",
        "inline int it ( )",
        "if ( x == 0 && b [ x ] == 0 ) k ++ ;"
      ],
      "err_line": 8,
      "err_msg": "expected unqualified-id before numeric constant"
    },
    {
      "mod_line": [
        0,
        8,
        22
      ],
      "mod_code": [
        "inline void it ( )",
        "x = ( x << 1 ) + ( x << 3 ) + ( c . 48 ) ;",
        "a ( n ) ;"
      ],
      "err_line": 8,
      "err_msg": "expected unqualified-id before numeric constant"
    },
    {
      "mod_line": [
        0,
        8,
        22,
        24
      ],
      "mod_code": [
        "inline void it ( )",
        "x = ( x << 1 ) + ( x << 3 ) + ( c . 48 ) ;",
        "a ( n ) ;",
        "x = x ;"
      ],
      "err_line": 8,
      "err_msg": "expected unqualified-id before numeric constant"
    },
    {
      "mod_line": [
        0,
        8,
        22,
        25
      ],
      "mod_code": [
        "inline void it ( )",
        "x = ( x << 1 ) + ( x << 3 ) + ( c . 48 ) ;",
        "a ( n ) ;",
        "if ( x == 0 && b [ x ] == 0 ) k ++ ;"
      ],
      "err_line": 8,
      "err_msg": "expected unqualified-id before numeric constant"
    },
    {
      "mod_line": [
        0,
        8,
        24
      ],
      "mod_code": [
        "inline void it ( )",
        "x = ( x << 1 ) + ( x << 3 ) + ( c . 48 ) ;",
        "x = x ;"
      ],
      "err_line": 8,
      "err_msg": "expected unqualified-id before numeric constant"
    },
    {
      "mod_line": [
        0,
        8,
        24,
        25
      ],
      "mod_code": [
        "inline void it ( )",
        "x = ( x << 1 ) + ( x << 3 ) + ( c . 48 ) ;",
        "x = x ;",
        "if ( x == 0 && b [ x ] == 0 ) k ++ ;"
      ],
      "err_line": 8,
      "err_msg": "expected unqualified-id before numeric constant"
    },
    {
      "mod_line": [
        0,
        8,
        25
      ],
      "mod_code": [
        "inline void it ( )",
        "x = ( x << 1 ) + ( x << 3 ) + ( c . 48 ) ;",
        "if ( x == 0 && b [ x ] == 0 ) k ++ ;"
      ],
      "err_line": 8,
      "err_msg": "expected unqualified-id before numeric constant"
    },
    {
      "mod_line": [
        0,
        13
      ],
      "mod_code": [
        "inline void it ( )",
        "inline int it ( )"
      ],
      "err_line": 11,
      "err_msg": "return-statement with a value, in function returning 'void' [-fpermissive]"
    },
    {
      "mod_line": [
        0,
        13,
        22
      ],
      "mod_code": [
        "inline void it ( )",
        "inline int it ( )",
        "a ( n ) ;"
      ],
      "err_line": 11,
      "err_msg": "return-statement with a value, in function returning 'void' [-fpermissive]"
    },
    {
      "mod_line": [
        0,
        13,
        22,
        24
      ],
      "mod_code": [
        "inline void it ( )",
        "inline int it ( )",
        "a ( n ) ;",
        "x = x ;"
      ],
      "err_line": 11,
      "err_msg": "return-statement with a value, in function returning 'void' [-fpermissive]"
    },
    {
      "mod_line": [
        0,
        13,
        22,
        25
      ],
      "mod_code": [
        "inline void it ( )",
        "inline int it ( )",
        "a ( n ) ;",
        "if ( x == 0 && b [ x ] == 0 ) k ++ ;"
      ],
      "err_line": 11,
      "err_msg": "return-statement with a value, in function returning 'void' [-fpermissive]"
    },
    {
      "mod_line": [
        0,
        13,
        24
      ],
      "mod_code": [
        "inline void it ( )",
        "inline int it ( )",
        "x = x ;"
      ],
      "err_line": 11,
      "err_msg": "return-statement with a value, in function returning 'void' [-fpermissive]"
    },
    {
      "mod_line": [
        0,
        13,
        24,
        25
      ],
      "mod_code": [
        "inline void it ( )",
        "inline int it ( )",
        "x = x ;",
        "if ( x == 0 && b [ x ] == 0 ) k ++ ;"
      ],
      "err_line": 11,
      "err_msg": "return-statement with a value, in function returning 'void' [-fpermissive]"
    },
    {
      "mod_line": [
        0,
        13,
        25
      ],
      "mod_code": [
        "inline void it ( )",
        "inline int it ( )",
        "if ( x == 0 && b [ x ] == 0 ) k ++ ;"
      ],
      "err_line": 11,
      "err_msg": "return-statement with a value, in function returning 'void' [-fpermissive]"
    },
    {
      "mod_line": [
        0,
        22
      ],
      "mod_code": [
        "inline void it ( )",
        "a ( n ) ;"
      ],
      "err_line": 11,
      "err_msg": "return-statement with a value, in function returning 'void' [-fpermissive]"
    },
    {
      "mod_line": [
        0,
        22,
        24
      ],
      "mod_code": [
        "inline void it ( )",
        "a ( n ) ;",
        "x = x ;"
      ],
      "err_line": 11,
      "err_msg": "return-statement with a value, in function returning 'void' [-fpermissive]"
    },
    {
      "mod_line": [
        0,
        22,
        24,
        25
      ],
      "mod_code": [
        "inline void it ( )",
        "a ( n ) ;",
        "x = x ;",
        "if ( x == 0 && b [ x ] == 0 ) k ++ ;"
      ],
      "err_line": 11,
      "err_msg": "return-statement with a value, in function returning 'void' [-fpermissive]"
    },
    {
      "mod_line": [
        0,
        22,
        25
      ],
      "mod_code": [
        "inline void it ( )",
        "a ( n ) ;",
        "if ( x == 0 && b [ x ] == 0 ) k ++ ;"
      ],
      "err_line": 11,
      "err_msg": "return-statement with a value, in function returning 'void' [-fpermissive]"
    },
    {
      "mod_line": [
        0,
        24
      ],
      "mod_code": [
        "inline void it ( )",
        "x = x ;"
      ],
      "err_line": 11,
      "err_msg": "return-statement with a value, in function returning 'void' [-fpermissive]"
    },
    {
      "mod_line": [
        0,
        24,
        25
      ],
      "mod_code": [
        "inline void it ( )",
        "x = x ;",
        "if ( x == 0 && b [ x ] == 0 ) k ++ ;"
      ],
      "err_line": 11,
      "err_msg": "return-statement with a value, in function returning 'void' [-fpermissive]"
    },
    {
      "mod_line": [
        0,
        25
      ],
      "mod_code": [
        "inline void it ( )",
        "if ( x == 0 && b [ x ] == 0 ) k ++ ;"
      ],
      "err_line": 11,
      "err_msg": "return-statement with a value, in function returning 'void' [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        8
      ],
      "mod_code": [
        "c = getchar ( ) ;",
        "x = ( x << 1 ) + ( x << 3 ) + ( c . 48 ) ;"
      ],
      "err_line": 2,
      "err_msg": "‘c’ was not declared in this scope"
    },
    {
      "mod_line": [
        2,
        8,
        13
      ],
      "mod_code": [
        "c = getchar ( ) ;",
        "x = ( x << 1 ) + ( x << 3 ) + ( c . 48 ) ;",
        "inline int it ( )"
      ],
      "err_line": 2,
      "err_msg": "‘c’ was not declared in this scope"
    },
    {
      "mod_line": [
        2,
        8,
        13,
        22
      ],
      "mod_code": [
        "c = getchar ( ) ;",
        "x = ( x << 1 ) + ( x << 3 ) + ( c . 48 ) ;",
        "inline int it ( )",
        "a ( n ) ;"
      ],
      "err_line": 2,
      "err_msg": "‘c’ was not declared in this scope"
    },
    {
      "mod_line": [
        2,
        8,
        13,
        24
      ],
      "mod_code": [
        "c = getchar ( ) ;",
        "x = ( x << 1 ) + ( x << 3 ) + ( c . 48 ) ;",
        "inline int it ( )",
        "x = x ;"
      ],
      "err_line": 2,
      "err_msg": "‘c’ was not declared in this scope"
    },
    {
      "mod_line": [
        2,
        8,
        13,
        25
      ],
      "mod_code": [
        "c = getchar ( ) ;",
        "x = ( x << 1 ) + ( x << 3 ) + ( c . 48 ) ;",
        "inline int it ( )",
        "if ( x == 0 && b [ x ] == 0 ) k ++ ;"
      ],
      "err_line": 2,
      "err_msg": "‘c’ was not declared in this scope"
    },
    {
      "mod_line": [
        2,
        8,
        22
      ],
      "mod_code": [
        "c = getchar ( ) ;",
        "x = ( x << 1 ) + ( x << 3 ) + ( c . 48 ) ;",
        "a ( n ) ;"
      ],
      "err_line": 2,
      "err_msg": "‘c’ was not declared in this scope"
    },
    {
      "mod_line": [
        2,
        8,
        22,
        24
      ],
      "mod_code": [
        "c = getchar ( ) ;",
        "x = ( x << 1 ) + ( x << 3 ) + ( c . 48 ) ;",
        "a ( n ) ;",
        "x = x ;"
      ],
      "err_line": 2,
      "err_msg": "‘c’ was not declared in this scope"
    },
    {
      "mod_line": [
        2,
        8,
        22,
        25
      ],
      "mod_code": [
        "c = getchar ( ) ;",
        "x = ( x << 1 ) + ( x << 3 ) + ( c . 48 ) ;",
        "a ( n ) ;",
        "if ( x == 0 && b [ x ] == 0 ) k ++ ;"
      ],
      "err_line": 2,
      "err_msg": "‘c’ was not declared in this scope"
    },
    {
      "mod_line": [
        2,
        8,
        24
      ],
      "mod_code": [
        "c = getchar ( ) ;",
        "x = ( x << 1 ) + ( x << 3 ) + ( c . 48 ) ;",
        "x = x ;"
      ],
      "err_line": 2,
      "err_msg": "‘c’ was not declared in this scope"
    },
    {
      "mod_line": [
        2,
        8,
        24,
        25
      ],
      "mod_code": [
        "c = getchar ( ) ;",
        "x = ( x << 1 ) + ( x << 3 ) + ( c . 48 ) ;",
        "x = x ;",
        "if ( x == 0 && b [ x ] == 0 ) k ++ ;"
      ],
      "err_line": 2,
      "err_msg": "‘c’ was not declared in this scope"
    },
    {
      "mod_line": [
        2,
        8,
        25
      ],
      "mod_code": [
        "c = getchar ( ) ;",
        "x = ( x << 1 ) + ( x << 3 ) + ( c . 48 ) ;",
        "if ( x == 0 && b [ x ] == 0 ) k ++ ;"
      ],
      "err_line": 2,
      "err_msg": "‘c’ was not declared in this scope"
    },
    {
      "mod_line": [
        2,
        13
      ],
      "mod_code": [
        "c = getchar ( ) ;",
        "inline int it ( )"
      ],
      "err_line": 2,
      "err_msg": "‘c’ was not declared in this scope"
    },
    {
      "mod_line": [
        2,
        13,
        22
      ],
      "mod_code": [
        "c = getchar ( ) ;",
        "inline int it ( )",
        "a ( n ) ;"
      ],
      "err_line": 2,
      "err_msg": "‘c’ was not declared in this scope"
    },
    {
      "mod_line": [
        2,
        13,
        22,
        24
      ],
      "mod_code": [
        "c = getchar ( ) ;",
        "inline int it ( )",
        "a ( n ) ;",
        "x = x ;"
      ],
      "err_line": 2,
      "err_msg": "‘c’ was not declared in this scope"
    },
    {
      "mod_line": [
        2,
        13,
        22,
        25
      ],
      "mod_code": [
        "c = getchar ( ) ;",
        "inline int it ( )",
        "a ( n ) ;",
        "if ( x == 0 && b [ x ] == 0 ) k ++ ;"
      ],
      "err_line": 2,
      "err_msg": "‘c’ was not declared in this scope"
    },
    {
      "mod_line": [
        2,
        13,
        24
      ],
      "mod_code": [
        "c = getchar ( ) ;",
        "inline int it ( )",
        "x = x ;"
      ],
      "err_line": 2,
      "err_msg": "‘c’ was not declared in this scope"
    },
    {
      "mod_line": [
        2,
        13,
        24,
        25
      ],
      "mod_code": [
        "c = getchar ( ) ;",
        "inline int it ( )",
        "x = x ;",
        "if ( x == 0 && b [ x ] == 0 ) k ++ ;"
      ],
      "err_line": 2,
      "err_msg": "‘c’ was not declared in this scope"
    },
    {
      "mod_line": [
        2,
        13,
        25
      ],
      "mod_code": [
        "c = getchar ( ) ;",
        "inline int it ( )",
        "if ( x == 0 && b [ x ] == 0 ) k ++ ;"
      ],
      "err_line": 2,
      "err_msg": "‘c’ was not declared in this scope"
    },
    {
      "mod_line": [
        2,
        22
      ],
      "mod_code": [
        "c = getchar ( ) ;",
        "a ( n ) ;"
      ],
      "err_line": 2,
      "err_msg": "‘c’ was not declared in this scope"
    },
    {
      "mod_line": [
        2,
        22,
        24
      ],
      "mod_code": [
        "c = getchar ( ) ;",
        "a ( n ) ;",
        "x = x ;"
      ],
      "err_line": 2,
      "err_msg": "‘c’ was not declared in this scope"
    },
    {
      "mod_line": [
        2,
        22,
        24,
        25
      ],
      "mod_code": [
        "c = getchar ( ) ;",
        "a ( n ) ;",
        "x = x ;",
        "if ( x == 0 && b [ x ] == 0 ) k ++ ;"
      ],
      "err_line": 2,
      "err_msg": "‘c’ was not declared in this scope"
    },
    {
      "mod_line": [
        2,
        22,
        25
      ],
      "mod_code": [
        "c = getchar ( ) ;",
        "a ( n ) ;",
        "if ( x == 0 && b [ x ] == 0 ) k ++ ;"
      ],
      "err_line": 2,
      "err_msg": "‘c’ was not declared in this scope"
    },
    {
      "mod_line": [
        2,
        24
      ],
      "mod_code": [
        "c = getchar ( ) ;",
        "x = x ;"
      ],
      "err_line": 2,
      "err_msg": "‘c’ was not declared in this scope"
    },
    {
      "mod_line": [
        2,
        24,
        25
      ],
      "mod_code": [
        "c = getchar ( ) ;",
        "x = x ;",
        "if ( x == 0 && b [ x ] == 0 ) k ++ ;"
      ],
      "err_line": 2,
      "err_msg": "‘c’ was not declared in this scope"
    },
    {
      "mod_line": [
        2,
        25
      ],
      "mod_code": [
        "c = getchar ( ) ;",
        "if ( x == 0 && b [ x ] == 0 ) k ++ ;"
      ],
      "err_line": 2,
      "err_msg": "‘c’ was not declared in this scope"
    },
    {
      "mod_line": [
        8,
        13
      ],
      "mod_code": [
        "x = ( x << 1 ) + ( x << 3 ) + ( c . 48 ) ;",
        "inline int it ( )"
      ],
      "err_line": 8,
      "err_msg": "expected unqualified-id before numeric constant"
    },
    {
      "mod_line": [
        8,
        13,
        22
      ],
      "mod_code": [
        "x = ( x << 1 ) + ( x << 3 ) + ( c . 48 ) ;",
        "inline int it ( )",
        "a ( n ) ;"
      ],
      "err_line": 8,
      "err_msg": "expected unqualified-id before numeric constant"
    },
    {
      "mod_line": [
        8,
        13,
        22,
        24
      ],
      "mod_code": [
        "x = ( x << 1 ) + ( x << 3 ) + ( c . 48 ) ;",
        "inline int it ( )",
        "a ( n ) ;",
        "x = x ;"
      ],
      "err_line": 8,
      "err_msg": "expected unqualified-id before numeric constant"
    },
    {
      "mod_line": [
        8,
        13,
        22,
        25
      ],
      "mod_code": [
        "x = ( x << 1 ) + ( x << 3 ) + ( c . 48 ) ;",
        "inline int it ( )",
        "a ( n ) ;",
        "if ( x == 0 && b [ x ] == 0 ) k ++ ;"
      ],
      "err_line": 8,
      "err_msg": "expected unqualified-id before numeric constant"
    },
    {
      "mod_line": [
        8,
        13,
        24
      ],
      "mod_code": [
        "x = ( x << 1 ) + ( x << 3 ) + ( c . 48 ) ;",
        "inline int it ( )",
        "x = x ;"
      ],
      "err_line": 8,
      "err_msg": "expected unqualified-id before numeric constant"
    },
    {
      "mod_line": [
        8,
        13,
        24,
        25
      ],
      "mod_code": [
        "x = ( x << 1 ) + ( x << 3 ) + ( c . 48 ) ;",
        "inline int it ( )",
        "x = x ;",
        "if ( x == 0 && b [ x ] == 0 ) k ++ ;"
      ],
      "err_line": 8,
      "err_msg": "expected unqualified-id before numeric constant"
    },
    {
      "mod_line": [
        8,
        13,
        25
      ],
      "mod_code": [
        "x = ( x << 1 ) + ( x << 3 ) + ( c . 48 ) ;",
        "inline int it ( )",
        "if ( x == 0 && b [ x ] == 0 ) k ++ ;"
      ],
      "err_line": 8,
      "err_msg": "expected unqualified-id before numeric constant"
    },
    {
      "mod_line": [
        8,
        22
      ],
      "mod_code": [
        "x = ( x << 1 ) + ( x << 3 ) + ( c . 48 ) ;",
        "a ( n ) ;"
      ],
      "err_line": 8,
      "err_msg": "expected unqualified-id before numeric constant"
    },
    {
      "mod_line": [
        8,
        22,
        24
      ],
      "mod_code": [
        "x = ( x << 1 ) + ( x << 3 ) + ( c . 48 ) ;",
        "a ( n ) ;",
        "x = x ;"
      ],
      "err_line": 8,
      "err_msg": "expected unqualified-id before numeric constant"
    },
    {
      "mod_line": [
        8,
        22,
        24,
        25
      ],
      "mod_code": [
        "x = ( x << 1 ) + ( x << 3 ) + ( c . 48 ) ;",
        "a ( n ) ;",
        "x = x ;",
        "if ( x == 0 && b [ x ] == 0 ) k ++ ;"
      ],
      "err_line": 8,
      "err_msg": "expected unqualified-id before numeric constant"
    },
    {
      "mod_line": [
        8,
        22,
        25
      ],
      "mod_code": [
        "x = ( x << 1 ) + ( x << 3 ) + ( c . 48 ) ;",
        "a ( n ) ;",
        "if ( x == 0 && b [ x ] == 0 ) k ++ ;"
      ],
      "err_line": 8,
      "err_msg": "expected unqualified-id before numeric constant"
    },
    {
      "mod_line": [
        8,
        24
      ],
      "mod_code": [
        "x = ( x << 1 ) + ( x << 3 ) + ( c . 48 ) ;",
        "x = x ;"
      ],
      "err_line": 8,
      "err_msg": "expected unqualified-id before numeric constant"
    },
    {
      "mod_line": [
        8,
        24,
        25
      ],
      "mod_code": [
        "x = ( x << 1 ) + ( x << 3 ) + ( c . 48 ) ;",
        "x = x ;",
        "if ( x == 0 && b [ x ] == 0 ) k ++ ;"
      ],
      "err_line": 8,
      "err_msg": "expected unqualified-id before numeric constant"
    },
    {
      "mod_line": [
        8,
        25
      ],
      "mod_code": [
        "x = ( x << 1 ) + ( x << 3 ) + ( c . 48 ) ;",
        "if ( x == 0 && b [ x ] == 0 ) k ++ ;"
      ],
      "err_line": 8,
      "err_msg": "expected unqualified-id before numeric constant"
    },
    {
      "mod_line": [
        13,
        22
      ],
      "mod_code": [
        "inline int it ( )",
        "a ( n ) ;"
      ],
      "err_line": 22,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        22,
        24
      ],
      "mod_code": [
        "inline int it ( )",
        "a ( n ) ;",
        "x = x ;"
      ],
      "err_line": 22,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        22,
        24,
        25
      ],
      "mod_code": [
        "inline int it ( )",
        "a ( n ) ;",
        "x = x ;",
        "if ( x == 0 && b [ x ] == 0 ) k ++ ;"
      ],
      "err_line": 22,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        22,
        25
      ],
      "mod_code": [
        "inline int it ( )",
        "a ( n ) ;",
        "if ( x == 0 && b [ x ] == 0 ) k ++ ;"
      ],
      "err_line": 22,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        24
      ],
      "mod_code": [
        "inline int it ( )",
        "x = x ;"
      ],
      "err_line": 22,
      "err_msg": "‘in’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        24,
        25
      ],
      "mod_code": [
        "inline int it ( )",
        "x = x ;",
        "if ( x == 0 && b [ x ] == 0 ) k ++ ;"
      ],
      "err_line": 22,
      "err_msg": "‘in’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        25
      ],
      "mod_code": [
        "inline int it ( )",
        "if ( x == 0 && b [ x ] == 0 ) k ++ ;"
      ],
      "err_line": 22,
      "err_msg": "‘in’ was not declared in this scope"
    },
    {
      "mod_line": [
        22,
        24
      ],
      "mod_code": [
        "a ( n ) ;",
        "x = x ;"
      ],
      "err_line": 22,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        22,
        24,
        25
      ],
      "mod_code": [
        "a ( n ) ;",
        "x = x ;",
        "if ( x == 0 && b [ x ] == 0 ) k ++ ;"
      ],
      "err_line": 22,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        22,
        25
      ],
      "mod_code": [
        "a ( n ) ;",
        "if ( x == 0 && b [ x ] == 0 ) k ++ ;"
      ],
      "err_line": 22,
      "err_msg": "‘a’ was not declared in this scope"
    }
  ]
}