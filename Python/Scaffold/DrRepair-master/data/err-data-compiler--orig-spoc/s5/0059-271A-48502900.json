{
  "meta": {
    "index": 59,
    "hitid": "3TZDZ3Y0JS0NEO89NJ25Y875TZW919",
    "workerid": "A1APYLD4DUK33J",
    "probid": "271A",
    "subid": "48502900"
  },
  "lines": [
    {
      "line": 0,
      "text": "declare test with integer num as argument , returning boolean",
      "code": "bool test ( int num )",
      "indent": 0
    },
    {
      "line": 1,
      "text": "declare integer a = 0",
      "code": "int a = 0 ;",
      "indent": 1
    },
    {
      "line": 2,
      "text": "declare integer b = 0",
      "code": "int b = 0 ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "declare integer c = 0",
      "code": "int c = 0 ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "declare integer d = 0",
      "code": "int d = 0 ;",
      "indent": 1
    },
    {
      "line": 5,
      "text": "let a be num % 10",
      "code": "a = num % 10 ;",
      "indent": 1
    },
    {
      "line": 6,
      "text": "let num be num / 10",
      "code": "num /= 10 ;",
      "indent": 1
    },
    {
      "line": 7,
      "text": "let b be num % 10",
      "code": "b = num % 10 ;",
      "indent": 1
    },
    {
      "line": 8,
      "text": "let num be num / 10",
      "code": "num /= 10 ;",
      "indent": 1
    },
    {
      "line": 9,
      "text": "let c be num % 10",
      "code": "c = num % 10 ;",
      "indent": 1
    },
    {
      "line": 10,
      "text": "let num be num / 10",
      "code": "num /= 10 ;",
      "indent": 1
    },
    {
      "line": 11,
      "text": "let d be num % 10",
      "code": "d = num % 10 ;",
      "indent": 1
    },
    {
      "line": 12,
      "text": "let num be num / 10",
      "code": "num /= 10 ;",
      "indent": 1
    },
    {
      "line": 13,
      "text": "if a is not b and a is not c and a is not d and b is not c and b is not d and c is not d",
      "code": "if ( a != b && a != c && a != d && b != c && b != d && c != d )",
      "indent": 1
    },
    {
      "line": 14,
      "text": "return 1 from function",
      "code": "return 1 ;",
      "indent": 2
    },
    {
      "line": 15,
      "text": "else",
      "code": "else",
      "indent": 1
    },
    {
      "line": 16,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 2
    },
    {
      "line": 17,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    },
    {
      "line": 18,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 19,
      "text": "declare integer year",
      "code": "int year ;",
      "indent": 1
    },
    {
      "line": 20,
      "text": "while read year",
      "code": "while ( cin >> year )",
      "indent": 1
    },
    {
      "line": 21,
      "text": "for i = year + 1 to 10000 inclusive",
      "code": "for ( int i = year + 1 ; i <= 10000 ; i ++ )",
      "indent": 2
    },
    {
      "line": 22,
      "text": "if test ( i ) is 1",
      "code": "if ( test ( i ) == 1 )",
      "indent": 3
    },
    {
      "line": 23,
      "text": "print i and newline",
      "code": "cout << i << endl ;",
      "indent": 4
    },
    {
      "line": 24,
      "text": "end loop",
      "code": "break ;",
      "indent": 4
    },
    {
      "line": 25,
      "text": "DUMMY",
      "code": "}",
      "indent": 3
    },
    {
      "line": 26,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 27,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 28,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        0
      ],
      "mod_code": [
        "bool test ( int num ) ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        21
      ],
      "mod_code": [
        "for ( i = year + 1 ; i <= 10000 ; i ++ )"
      ],
      "err_line": 21,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        0,
        7
      ],
      "mod_code": [
        "bool test ( int num ) ;",
        "b %= 10 ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        0,
        7,
        21
      ],
      "mod_code": [
        "bool test ( int num ) ;",
        "b %= 10 ;",
        "for ( i = year + 1 ; i <= 10000 ; i ++ )"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        0,
        7,
        21,
        13
      ],
      "mod_code": [
        "bool test ( int num ) ;",
        "b %= 10 ;",
        "for ( i = year + 1 ; i <= 10000 ; i ++ )",
        "if ( a != b && a != c && a != c && b != c && b != d )"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        0,
        7,
        21,
        11
      ],
      "mod_code": [
        "bool test ( int num ) ;",
        "b %= 10 ;",
        "for ( i = year + 1 ; i <= 10000 ; i ++ )",
        "d %= 10 ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        0,
        7,
        21,
        22
      ],
      "mod_code": [
        "bool test ( int num ) ;",
        "b %= 10 ;",
        "for ( i = year + 1 ; i <= 10000 ; i ++ )",
        "if ( test ( i ) == ' 1 ' )"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        0,
        7,
        13
      ],
      "mod_code": [
        "bool test ( int num ) ;",
        "b %= 10 ;",
        "if ( a != b && a != c && a != c && b != c && b != d )"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        0,
        7,
        13,
        11
      ],
      "mod_code": [
        "bool test ( int num ) ;",
        "b %= 10 ;",
        "if ( a != b && a != c && a != c && b != c && b != d )",
        "d %= 10 ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        0,
        7,
        13,
        22
      ],
      "mod_code": [
        "bool test ( int num ) ;",
        "b %= 10 ;",
        "if ( a != b && a != c && a != c && b != c && b != d )",
        "if ( test ( i ) == ' 1 ' )"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        0,
        7,
        11
      ],
      "mod_code": [
        "bool test ( int num ) ;",
        "b %= 10 ;",
        "d %= 10 ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        0,
        7,
        11,
        22
      ],
      "mod_code": [
        "bool test ( int num ) ;",
        "b %= 10 ;",
        "d %= 10 ;",
        "if ( test ( i ) == ' 1 ' )"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        0,
        7,
        22
      ],
      "mod_code": [
        "bool test ( int num ) ;",
        "b %= 10 ;",
        "if ( test ( i ) == ' 1 ' )"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        0,
        21
      ],
      "mod_code": [
        "bool test ( int num ) ;",
        "for ( i = year + 1 ; i <= 10000 ; i ++ )"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        0,
        21,
        13
      ],
      "mod_code": [
        "bool test ( int num ) ;",
        "for ( i = year + 1 ; i <= 10000 ; i ++ )",
        "if ( a != b && a != c && a != c && b != c && b != d )"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        0,
        21,
        13,
        11
      ],
      "mod_code": [
        "bool test ( int num ) ;",
        "for ( i = year + 1 ; i <= 10000 ; i ++ )",
        "if ( a != b && a != c && a != c && b != c && b != d )",
        "d %= 10 ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        0,
        21,
        13,
        22
      ],
      "mod_code": [
        "bool test ( int num ) ;",
        "for ( i = year + 1 ; i <= 10000 ; i ++ )",
        "if ( a != b && a != c && a != c && b != c && b != d )",
        "if ( test ( i ) == ' 1 ' )"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        0,
        21,
        11
      ],
      "mod_code": [
        "bool test ( int num ) ;",
        "for ( i = year + 1 ; i <= 10000 ; i ++ )",
        "d %= 10 ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        0,
        21,
        11,
        22
      ],
      "mod_code": [
        "bool test ( int num ) ;",
        "for ( i = year + 1 ; i <= 10000 ; i ++ )",
        "d %= 10 ;",
        "if ( test ( i ) == ' 1 ' )"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        0,
        21,
        22
      ],
      "mod_code": [
        "bool test ( int num ) ;",
        "for ( i = year + 1 ; i <= 10000 ; i ++ )",
        "if ( test ( i ) == ' 1 ' )"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        0,
        13
      ],
      "mod_code": [
        "bool test ( int num ) ;",
        "if ( a != b && a != c && a != c && b != c && b != d )"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        0,
        13,
        11
      ],
      "mod_code": [
        "bool test ( int num ) ;",
        "if ( a != b && a != c && a != c && b != c && b != d )",
        "d %= 10 ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        0,
        13,
        11,
        22
      ],
      "mod_code": [
        "bool test ( int num ) ;",
        "if ( a != b && a != c && a != c && b != c && b != d )",
        "d %= 10 ;",
        "if ( test ( i ) == ' 1 ' )"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        0,
        13,
        22
      ],
      "mod_code": [
        "bool test ( int num ) ;",
        "if ( a != b && a != c && a != c && b != c && b != d )",
        "if ( test ( i ) == ' 1 ' )"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        0,
        11
      ],
      "mod_code": [
        "bool test ( int num ) ;",
        "d %= 10 ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        0,
        11,
        22
      ],
      "mod_code": [
        "bool test ( int num ) ;",
        "d %= 10 ;",
        "if ( test ( i ) == ' 1 ' )"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        0,
        22
      ],
      "mod_code": [
        "bool test ( int num ) ;",
        "if ( test ( i ) == ' 1 ' )"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        7,
        21
      ],
      "mod_code": [
        "b %= 10 ;",
        "for ( i = year + 1 ; i <= 10000 ; i ++ )"
      ],
      "err_line": 21,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        7,
        21,
        13
      ],
      "mod_code": [
        "b %= 10 ;",
        "for ( i = year + 1 ; i <= 10000 ; i ++ )",
        "if ( a != b && a != c && a != c && b != c && b != d )"
      ],
      "err_line": 21,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        7,
        21,
        13,
        11
      ],
      "mod_code": [
        "b %= 10 ;",
        "for ( i = year + 1 ; i <= 10000 ; i ++ )",
        "if ( a != b && a != c && a != c && b != c && b != d )",
        "d %= 10 ;"
      ],
      "err_line": 21,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        7,
        21,
        13,
        22
      ],
      "mod_code": [
        "b %= 10 ;",
        "for ( i = year + 1 ; i <= 10000 ; i ++ )",
        "if ( a != b && a != c && a != c && b != c && b != d )",
        "if ( test ( i ) == ' 1 ' )"
      ],
      "err_line": 21,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        7,
        21,
        11
      ],
      "mod_code": [
        "b %= 10 ;",
        "for ( i = year + 1 ; i <= 10000 ; i ++ )",
        "d %= 10 ;"
      ],
      "err_line": 21,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        7,
        21,
        11,
        22
      ],
      "mod_code": [
        "b %= 10 ;",
        "for ( i = year + 1 ; i <= 10000 ; i ++ )",
        "d %= 10 ;",
        "if ( test ( i ) == ' 1 ' )"
      ],
      "err_line": 21,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        7,
        21,
        22
      ],
      "mod_code": [
        "b %= 10 ;",
        "for ( i = year + 1 ; i <= 10000 ; i ++ )",
        "if ( test ( i ) == ' 1 ' )"
      ],
      "err_line": 21,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        21,
        13
      ],
      "mod_code": [
        "for ( i = year + 1 ; i <= 10000 ; i ++ )",
        "if ( a != b && a != c && a != c && b != c && b != d )"
      ],
      "err_line": 21,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        21,
        13,
        11
      ],
      "mod_code": [
        "for ( i = year + 1 ; i <= 10000 ; i ++ )",
        "if ( a != b && a != c && a != c && b != c && b != d )",
        "d %= 10 ;"
      ],
      "err_line": 21,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        21,
        13,
        11,
        22
      ],
      "mod_code": [
        "for ( i = year + 1 ; i <= 10000 ; i ++ )",
        "if ( a != b && a != c && a != c && b != c && b != d )",
        "d %= 10 ;",
        "if ( test ( i ) == ' 1 ' )"
      ],
      "err_line": 21,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        21,
        13,
        22
      ],
      "mod_code": [
        "for ( i = year + 1 ; i <= 10000 ; i ++ )",
        "if ( a != b && a != c && a != c && b != c && b != d )",
        "if ( test ( i ) == ' 1 ' )"
      ],
      "err_line": 21,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        21,
        11
      ],
      "mod_code": [
        "for ( i = year + 1 ; i <= 10000 ; i ++ )",
        "d %= 10 ;"
      ],
      "err_line": 21,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        21,
        11,
        22
      ],
      "mod_code": [
        "for ( i = year + 1 ; i <= 10000 ; i ++ )",
        "d %= 10 ;",
        "if ( test ( i ) == ' 1 ' )"
      ],
      "err_line": 21,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        21,
        22
      ],
      "mod_code": [
        "for ( i = year + 1 ; i <= 10000 ; i ++ )",
        "if ( test ( i ) == ' 1 ' )"
      ],
      "err_line": 21,
      "err_msg": "‘i’ was not declared in this scope"
    }
  ]
}