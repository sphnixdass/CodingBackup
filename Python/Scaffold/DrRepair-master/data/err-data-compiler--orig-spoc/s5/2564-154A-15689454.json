{
  "meta": {
    "index": 2564,
    "hitid": "3CO05SML7VZTBZJDLHYRBOOPT6UR0Y",
    "workerid": "A1APYLD4DUK33J",
    "probid": "154A",
    "subid": "15689454"
  },
  "lines": [
    {
      "line": 0,
      "text": "create integer n",
      "code": "int n ;",
      "indent": 0
    },
    {
      "line": 1,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 2,
      "text": "create character array fb with size 2",
      "code": "char fb [ 2 ] ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "create string str",
      "code": "string str ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "read str read n",
      "code": "cin >> str >> n ;",
      "indent": 1
    },
    {
      "line": 5,
      "text": "create integer ans with ans = 0",
      "code": "int ans = 0 ;",
      "indent": 1
    },
    {
      "line": 6,
      "text": "while decrement n is true",
      "code": "while ( n -- )",
      "indent": 1
    },
    {
      "line": 7,
      "text": "read fb",
      "code": "cin >> fb ;",
      "indent": 2
    },
    {
      "line": 8,
      "text": "for i = 0 to length of str exclusive",
      "code": "for ( int i = 0 ; i < str . length ( ) ; i ++ )",
      "indent": 2
    },
    {
      "line": 9,
      "text": "create integers num1 , num2 with num1 = 0 , num2 = 0",
      "code": "int num1 = 0 , num2 = 0 ;",
      "indent": 3
    },
    {
      "line": 10,
      "text": "while str [ i ] is fb [ 0 ] or str [ i ] is fb [ 1 ]",
      "code": "while ( str [ i ] == fb [ 0 ] || str [ i ] == fb [ 1 ] )",
      "indent": 3
    },
    {
      "line": 11,
      "text": "if str [ i ] is fb [ 0 ] , increment sum",
      "code": "if ( str [ i ] == fb [ 0 ] ) num1 ++ ;",
      "indent": 4
    },
    {
      "line": 12,
      "text": "if str [ i ] is fb [ 1 ] , increment sum2",
      "code": "if ( str [ i ] == fb [ 1 ] ) num2 ++ ;",
      "indent": 4
    },
    {
      "line": 13,
      "text": "increment i",
      "code": "i ++ ;",
      "indent": 4
    },
    {
      "line": 14,
      "text": "DUMMY",
      "code": "}",
      "indent": 3
    },
    {
      "line": 15,
      "text": "increment ans by minimum of num1 and num2",
      "code": "ans += min ( num1 , num2 ) ;",
      "indent": 3
    },
    {
      "line": 16,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 17,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 18,
      "text": "print ans print newline",
      "code": "cout << ans << endl ;",
      "indent": 1
    },
    {
      "line": 19,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        11
      ],
      "mod_code": [
        "if ( str [ i ] == fb [ 0 ] ) sum ++ ;"
      ],
      "err_line": 11,
      "err_msg": "‘sum’ was not declared in this scope"
    },
    {
      "mod_line": [
        12
      ],
      "mod_code": [
        "if ( str [ i ] == fb [ 1 ] ) sum2 ++ ;"
      ],
      "err_line": 12,
      "err_msg": "‘sum2’ was not declared in this scope"
    },
    {
      "mod_line": [
        2
      ],
      "mod_code": [
        "char * fb [ 2 ] ;"
      ],
      "err_line": 7,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘char* [2]’)"
    },
    {
      "mod_line": [
        3
      ],
      "mod_code": [
        "string n ;"
      ],
      "err_line": 4,
      "err_msg": "‘str’ was not declared in this scope"
    },
    {
      "mod_line": [
        7
      ],
      "mod_code": [
        "{ cin >> fb ;"
      ],
      "err_line": 19,
      "err_msg": "expected ‘}’ at end of input"
    },
    {
      "mod_line": [
        8
      ],
      "mod_code": [
        "for ( i = 0 ; i < str . length ( ) ; i ++ )"
      ],
      "err_line": 8,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        9
      ],
      "mod_code": [
        "int num1 , num2 = 0 , num2 = 0 ;"
      ],
      "err_line": 9,
      "err_msg": "redeclaration of ‘int num2’"
    },
    {
      "mod_line": [
        10
      ],
      "mod_code": [
        "while ( str [ i ] == fb [ 0 ] || str [ i ] == fb [ 1 ] ) str ++ ;"
      ],
      "err_line": 10,
      "err_msg": "no ‘operator++(int)’ declared for postfix ‘++’ [-fpermissive]"
    },
    {
      "mod_line": [
        11
      ],
      "mod_code": [
        "if ( str [ i ] == fb [ 0 ] ) { sum ++ ; }"
      ],
      "err_line": 11,
      "err_msg": "‘sum’ was not declared in this scope"
    },
    {
      "mod_line": [
        12
      ],
      "mod_code": [
        "if ( str [ i ] == fb [ 1 ] ) { sum2 ++ ; }"
      ],
      "err_line": 12,
      "err_msg": "‘sum2’ was not declared in this scope"
    },
    {
      "mod_line": [
        15
      ],
      "mod_code": [
        "ans += min ( num1 and num2 ) ;"
      ],
      "err_line": 15,
      "err_msg": "no matching function for call to ‘min(bool)’"
    },
    {
      "mod_line": [
        11,
        12
      ],
      "mod_code": [
        "if ( str [ i ] == fb [ 0 ] ) sum ++ ;",
        "if ( str [ i ] == fb [ 1 ] ) sum2 ++ ;"
      ],
      "err_line": 11,
      "err_msg": "‘sum’ was not declared in this scope"
    },
    {
      "mod_line": [
        11,
        12,
        7
      ],
      "mod_code": [
        "if ( str [ i ] == fb [ 0 ] ) sum ++ ;",
        "if ( str [ i ] == fb [ 1 ] ) sum2 ++ ;",
        "{ cin >> fb ;"
      ],
      "err_line": 11,
      "err_msg": "‘sum’ was not declared in this scope"
    },
    {
      "mod_line": [
        11,
        12,
        7,
        10
      ],
      "mod_code": [
        "if ( str [ i ] == fb [ 0 ] ) sum ++ ;",
        "if ( str [ i ] == fb [ 1 ] ) sum2 ++ ;",
        "{ cin >> fb ;",
        "while ( str [ i ] == fb [ 0 ] || str [ i ] == fb [ 1 ] ) str ++ ;"
      ],
      "err_line": 10,
      "err_msg": "no ‘operator++(int)’ declared for postfix ‘++’ [-fpermissive]"
    },
    {
      "mod_line": [
        11,
        12,
        7,
        2
      ],
      "mod_code": [
        "if ( str [ i ] == fb [ 0 ] ) sum ++ ;",
        "if ( str [ i ] == fb [ 1 ] ) sum2 ++ ;",
        "{ cin >> fb ;",
        "char * fb [ 2 ] ;"
      ],
      "err_line": 7,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘char* [2]’)"
    },
    {
      "mod_line": [
        11,
        12,
        7,
        15
      ],
      "mod_code": [
        "if ( str [ i ] == fb [ 0 ] ) sum ++ ;",
        "if ( str [ i ] == fb [ 1 ] ) sum2 ++ ;",
        "{ cin >> fb ;",
        "ans += min ( num1 and num2 ) ;"
      ],
      "err_line": 11,
      "err_msg": "‘sum’ was not declared in this scope"
    },
    {
      "mod_line": [
        11,
        12,
        10
      ],
      "mod_code": [
        "if ( str [ i ] == fb [ 0 ] ) sum ++ ;",
        "if ( str [ i ] == fb [ 1 ] ) sum2 ++ ;",
        "while ( str [ i ] == fb [ 0 ] || str [ i ] == fb [ 1 ] ) str ++ ;"
      ],
      "err_line": 10,
      "err_msg": "no ‘operator++(int)’ declared for postfix ‘++’ [-fpermissive]"
    },
    {
      "mod_line": [
        11,
        12,
        10,
        2
      ],
      "mod_code": [
        "if ( str [ i ] == fb [ 0 ] ) sum ++ ;",
        "if ( str [ i ] == fb [ 1 ] ) sum2 ++ ;",
        "while ( str [ i ] == fb [ 0 ] || str [ i ] == fb [ 1 ] ) str ++ ;",
        "char * fb [ 2 ] ;"
      ],
      "err_line": 7,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘char* [2]’)"
    },
    {
      "mod_line": [
        11,
        12,
        10,
        15
      ],
      "mod_code": [
        "if ( str [ i ] == fb [ 0 ] ) sum ++ ;",
        "if ( str [ i ] == fb [ 1 ] ) sum2 ++ ;",
        "while ( str [ i ] == fb [ 0 ] || str [ i ] == fb [ 1 ] ) str ++ ;",
        "ans += min ( num1 and num2 ) ;"
      ],
      "err_line": 10,
      "err_msg": "no ‘operator++(int)’ declared for postfix ‘++’ [-fpermissive]"
    },
    {
      "mod_line": [
        11,
        12,
        2
      ],
      "mod_code": [
        "if ( str [ i ] == fb [ 0 ] ) sum ++ ;",
        "if ( str [ i ] == fb [ 1 ] ) sum2 ++ ;",
        "char * fb [ 2 ] ;"
      ],
      "err_line": 7,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘char* [2]’)"
    },
    {
      "mod_line": [
        11,
        12,
        2,
        15
      ],
      "mod_code": [
        "if ( str [ i ] == fb [ 0 ] ) sum ++ ;",
        "if ( str [ i ] == fb [ 1 ] ) sum2 ++ ;",
        "char * fb [ 2 ] ;",
        "ans += min ( num1 and num2 ) ;"
      ],
      "err_line": 7,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘char* [2]’)"
    },
    {
      "mod_line": [
        11,
        12,
        15
      ],
      "mod_code": [
        "if ( str [ i ] == fb [ 0 ] ) sum ++ ;",
        "if ( str [ i ] == fb [ 1 ] ) sum2 ++ ;",
        "ans += min ( num1 and num2 ) ;"
      ],
      "err_line": 11,
      "err_msg": "‘sum’ was not declared in this scope"
    },
    {
      "mod_line": [
        11,
        7
      ],
      "mod_code": [
        "if ( str [ i ] == fb [ 0 ] ) sum ++ ;",
        "{ cin >> fb ;"
      ],
      "err_line": 11,
      "err_msg": "‘sum’ was not declared in this scope"
    },
    {
      "mod_line": [
        11,
        7,
        10
      ],
      "mod_code": [
        "if ( str [ i ] == fb [ 0 ] ) sum ++ ;",
        "{ cin >> fb ;",
        "while ( str [ i ] == fb [ 0 ] || str [ i ] == fb [ 1 ] ) str ++ ;"
      ],
      "err_line": 10,
      "err_msg": "no ‘operator++(int)’ declared for postfix ‘++’ [-fpermissive]"
    },
    {
      "mod_line": [
        11,
        7,
        10,
        2
      ],
      "mod_code": [
        "if ( str [ i ] == fb [ 0 ] ) sum ++ ;",
        "{ cin >> fb ;",
        "while ( str [ i ] == fb [ 0 ] || str [ i ] == fb [ 1 ] ) str ++ ;",
        "char * fb [ 2 ] ;"
      ],
      "err_line": 7,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘char* [2]’)"
    },
    {
      "mod_line": [
        11,
        7,
        10,
        15
      ],
      "mod_code": [
        "if ( str [ i ] == fb [ 0 ] ) sum ++ ;",
        "{ cin >> fb ;",
        "while ( str [ i ] == fb [ 0 ] || str [ i ] == fb [ 1 ] ) str ++ ;",
        "ans += min ( num1 and num2 ) ;"
      ],
      "err_line": 10,
      "err_msg": "no ‘operator++(int)’ declared for postfix ‘++’ [-fpermissive]"
    },
    {
      "mod_line": [
        11,
        7,
        2
      ],
      "mod_code": [
        "if ( str [ i ] == fb [ 0 ] ) sum ++ ;",
        "{ cin >> fb ;",
        "char * fb [ 2 ] ;"
      ],
      "err_line": 7,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘char* [2]’)"
    },
    {
      "mod_line": [
        11,
        7,
        2,
        15
      ],
      "mod_code": [
        "if ( str [ i ] == fb [ 0 ] ) sum ++ ;",
        "{ cin >> fb ;",
        "char * fb [ 2 ] ;",
        "ans += min ( num1 and num2 ) ;"
      ],
      "err_line": 7,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘char* [2]’)"
    },
    {
      "mod_line": [
        11,
        7,
        15
      ],
      "mod_code": [
        "if ( str [ i ] == fb [ 0 ] ) sum ++ ;",
        "{ cin >> fb ;",
        "ans += min ( num1 and num2 ) ;"
      ],
      "err_line": 11,
      "err_msg": "‘sum’ was not declared in this scope"
    },
    {
      "mod_line": [
        11,
        10
      ],
      "mod_code": [
        "if ( str [ i ] == fb [ 0 ] ) sum ++ ;",
        "while ( str [ i ] == fb [ 0 ] || str [ i ] == fb [ 1 ] ) str ++ ;"
      ],
      "err_line": 10,
      "err_msg": "no ‘operator++(int)’ declared for postfix ‘++’ [-fpermissive]"
    },
    {
      "mod_line": [
        11,
        10,
        2
      ],
      "mod_code": [
        "if ( str [ i ] == fb [ 0 ] ) sum ++ ;",
        "while ( str [ i ] == fb [ 0 ] || str [ i ] == fb [ 1 ] ) str ++ ;",
        "char * fb [ 2 ] ;"
      ],
      "err_line": 7,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘char* [2]’)"
    },
    {
      "mod_line": [
        11,
        10,
        2,
        15
      ],
      "mod_code": [
        "if ( str [ i ] == fb [ 0 ] ) sum ++ ;",
        "while ( str [ i ] == fb [ 0 ] || str [ i ] == fb [ 1 ] ) str ++ ;",
        "char * fb [ 2 ] ;",
        "ans += min ( num1 and num2 ) ;"
      ],
      "err_line": 7,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘char* [2]’)"
    },
    {
      "mod_line": [
        11,
        10,
        15
      ],
      "mod_code": [
        "if ( str [ i ] == fb [ 0 ] ) sum ++ ;",
        "while ( str [ i ] == fb [ 0 ] || str [ i ] == fb [ 1 ] ) str ++ ;",
        "ans += min ( num1 and num2 ) ;"
      ],
      "err_line": 10,
      "err_msg": "no ‘operator++(int)’ declared for postfix ‘++’ [-fpermissive]"
    },
    {
      "mod_line": [
        11,
        2
      ],
      "mod_code": [
        "if ( str [ i ] == fb [ 0 ] ) sum ++ ;",
        "char * fb [ 2 ] ;"
      ],
      "err_line": 7,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘char* [2]’)"
    },
    {
      "mod_line": [
        11,
        2,
        15
      ],
      "mod_code": [
        "if ( str [ i ] == fb [ 0 ] ) sum ++ ;",
        "char * fb [ 2 ] ;",
        "ans += min ( num1 and num2 ) ;"
      ],
      "err_line": 7,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘char* [2]’)"
    },
    {
      "mod_line": [
        11,
        15
      ],
      "mod_code": [
        "if ( str [ i ] == fb [ 0 ] ) sum ++ ;",
        "ans += min ( num1 and num2 ) ;"
      ],
      "err_line": 11,
      "err_msg": "‘sum’ was not declared in this scope"
    },
    {
      "mod_line": [
        12,
        7
      ],
      "mod_code": [
        "if ( str [ i ] == fb [ 1 ] ) sum2 ++ ;",
        "{ cin >> fb ;"
      ],
      "err_line": 12,
      "err_msg": "‘sum2’ was not declared in this scope"
    },
    {
      "mod_line": [
        12,
        7,
        10
      ],
      "mod_code": [
        "if ( str [ i ] == fb [ 1 ] ) sum2 ++ ;",
        "{ cin >> fb ;",
        "while ( str [ i ] == fb [ 0 ] || str [ i ] == fb [ 1 ] ) str ++ ;"
      ],
      "err_line": 10,
      "err_msg": "no ‘operator++(int)’ declared for postfix ‘++’ [-fpermissive]"
    },
    {
      "mod_line": [
        12,
        7,
        10,
        2
      ],
      "mod_code": [
        "if ( str [ i ] == fb [ 1 ] ) sum2 ++ ;",
        "{ cin >> fb ;",
        "while ( str [ i ] == fb [ 0 ] || str [ i ] == fb [ 1 ] ) str ++ ;",
        "char * fb [ 2 ] ;"
      ],
      "err_line": 7,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘char* [2]’)"
    },
    {
      "mod_line": [
        12,
        7,
        10,
        15
      ],
      "mod_code": [
        "if ( str [ i ] == fb [ 1 ] ) sum2 ++ ;",
        "{ cin >> fb ;",
        "while ( str [ i ] == fb [ 0 ] || str [ i ] == fb [ 1 ] ) str ++ ;",
        "ans += min ( num1 and num2 ) ;"
      ],
      "err_line": 10,
      "err_msg": "no ‘operator++(int)’ declared for postfix ‘++’ [-fpermissive]"
    },
    {
      "mod_line": [
        12,
        7,
        2
      ],
      "mod_code": [
        "if ( str [ i ] == fb [ 1 ] ) sum2 ++ ;",
        "{ cin >> fb ;",
        "char * fb [ 2 ] ;"
      ],
      "err_line": 7,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘char* [2]’)"
    },
    {
      "mod_line": [
        12,
        7,
        2,
        15
      ],
      "mod_code": [
        "if ( str [ i ] == fb [ 1 ] ) sum2 ++ ;",
        "{ cin >> fb ;",
        "char * fb [ 2 ] ;",
        "ans += min ( num1 and num2 ) ;"
      ],
      "err_line": 7,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘char* [2]’)"
    },
    {
      "mod_line": [
        12,
        7,
        15
      ],
      "mod_code": [
        "if ( str [ i ] == fb [ 1 ] ) sum2 ++ ;",
        "{ cin >> fb ;",
        "ans += min ( num1 and num2 ) ;"
      ],
      "err_line": 12,
      "err_msg": "‘sum2’ was not declared in this scope"
    },
    {
      "mod_line": [
        12,
        10
      ],
      "mod_code": [
        "if ( str [ i ] == fb [ 1 ] ) sum2 ++ ;",
        "while ( str [ i ] == fb [ 0 ] || str [ i ] == fb [ 1 ] ) str ++ ;"
      ],
      "err_line": 10,
      "err_msg": "no ‘operator++(int)’ declared for postfix ‘++’ [-fpermissive]"
    },
    {
      "mod_line": [
        12,
        10,
        2
      ],
      "mod_code": [
        "if ( str [ i ] == fb [ 1 ] ) sum2 ++ ;",
        "while ( str [ i ] == fb [ 0 ] || str [ i ] == fb [ 1 ] ) str ++ ;",
        "char * fb [ 2 ] ;"
      ],
      "err_line": 7,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘char* [2]’)"
    },
    {
      "mod_line": [
        12,
        10,
        2,
        15
      ],
      "mod_code": [
        "if ( str [ i ] == fb [ 1 ] ) sum2 ++ ;",
        "while ( str [ i ] == fb [ 0 ] || str [ i ] == fb [ 1 ] ) str ++ ;",
        "char * fb [ 2 ] ;",
        "ans += min ( num1 and num2 ) ;"
      ],
      "err_line": 7,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘char* [2]’)"
    },
    {
      "mod_line": [
        12,
        10,
        15
      ],
      "mod_code": [
        "if ( str [ i ] == fb [ 1 ] ) sum2 ++ ;",
        "while ( str [ i ] == fb [ 0 ] || str [ i ] == fb [ 1 ] ) str ++ ;",
        "ans += min ( num1 and num2 ) ;"
      ],
      "err_line": 10,
      "err_msg": "no ‘operator++(int)’ declared for postfix ‘++’ [-fpermissive]"
    },
    {
      "mod_line": [
        12,
        2
      ],
      "mod_code": [
        "if ( str [ i ] == fb [ 1 ] ) sum2 ++ ;",
        "char * fb [ 2 ] ;"
      ],
      "err_line": 7,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘char* [2]’)"
    },
    {
      "mod_line": [
        12,
        2,
        15
      ],
      "mod_code": [
        "if ( str [ i ] == fb [ 1 ] ) sum2 ++ ;",
        "char * fb [ 2 ] ;",
        "ans += min ( num1 and num2 ) ;"
      ],
      "err_line": 7,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘char* [2]’)"
    },
    {
      "mod_line": [
        12,
        15
      ],
      "mod_code": [
        "if ( str [ i ] == fb [ 1 ] ) sum2 ++ ;",
        "ans += min ( num1 and num2 ) ;"
      ],
      "err_line": 12,
      "err_msg": "‘sum2’ was not declared in this scope"
    },
    {
      "mod_line": [
        7,
        10
      ],
      "mod_code": [
        "{ cin >> fb ;",
        "while ( str [ i ] == fb [ 0 ] || str [ i ] == fb [ 1 ] ) str ++ ;"
      ],
      "err_line": 10,
      "err_msg": "no ‘operator++(int)’ declared for postfix ‘++’ [-fpermissive]"
    },
    {
      "mod_line": [
        7,
        10,
        2
      ],
      "mod_code": [
        "{ cin >> fb ;",
        "while ( str [ i ] == fb [ 0 ] || str [ i ] == fb [ 1 ] ) str ++ ;",
        "char * fb [ 2 ] ;"
      ],
      "err_line": 7,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘char* [2]’)"
    },
    {
      "mod_line": [
        7,
        10,
        2,
        15
      ],
      "mod_code": [
        "{ cin >> fb ;",
        "while ( str [ i ] == fb [ 0 ] || str [ i ] == fb [ 1 ] ) str ++ ;",
        "char * fb [ 2 ] ;",
        "ans += min ( num1 and num2 ) ;"
      ],
      "err_line": 7,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘char* [2]’)"
    },
    {
      "mod_line": [
        7,
        10,
        15
      ],
      "mod_code": [
        "{ cin >> fb ;",
        "while ( str [ i ] == fb [ 0 ] || str [ i ] == fb [ 1 ] ) str ++ ;",
        "ans += min ( num1 and num2 ) ;"
      ],
      "err_line": 10,
      "err_msg": "no ‘operator++(int)’ declared for postfix ‘++’ [-fpermissive]"
    },
    {
      "mod_line": [
        7,
        2
      ],
      "mod_code": [
        "{ cin >> fb ;",
        "char * fb [ 2 ] ;"
      ],
      "err_line": 7,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘char* [2]’)"
    },
    {
      "mod_line": [
        7,
        2,
        15
      ],
      "mod_code": [
        "{ cin >> fb ;",
        "char * fb [ 2 ] ;",
        "ans += min ( num1 and num2 ) ;"
      ],
      "err_line": 7,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘char* [2]’)"
    },
    {
      "mod_line": [
        7,
        15
      ],
      "mod_code": [
        "{ cin >> fb ;",
        "ans += min ( num1 and num2 ) ;"
      ],
      "err_line": 15,
      "err_msg": "no matching function for call to ‘min(bool)’"
    },
    {
      "mod_line": [
        10,
        2
      ],
      "mod_code": [
        "while ( str [ i ] == fb [ 0 ] || str [ i ] == fb [ 1 ] ) str ++ ;",
        "char * fb [ 2 ] ;"
      ],
      "err_line": 7,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘char* [2]’)"
    },
    {
      "mod_line": [
        10,
        2,
        15
      ],
      "mod_code": [
        "while ( str [ i ] == fb [ 0 ] || str [ i ] == fb [ 1 ] ) str ++ ;",
        "char * fb [ 2 ] ;",
        "ans += min ( num1 and num2 ) ;"
      ],
      "err_line": 7,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘char* [2]’)"
    },
    {
      "mod_line": [
        10,
        15
      ],
      "mod_code": [
        "while ( str [ i ] == fb [ 0 ] || str [ i ] == fb [ 1 ] ) str ++ ;",
        "ans += min ( num1 and num2 ) ;"
      ],
      "err_line": 10,
      "err_msg": "no ‘operator++(int)’ declared for postfix ‘++’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        15
      ],
      "mod_code": [
        "char * fb [ 2 ] ;",
        "ans += min ( num1 and num2 ) ;"
      ],
      "err_line": 7,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘char* [2]’)"
    }
  ]
}