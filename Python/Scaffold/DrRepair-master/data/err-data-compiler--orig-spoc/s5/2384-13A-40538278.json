{
  "meta": {
    "index": 2384,
    "hitid": "3AC6MFV69KCDOQB0T6ZP3JP5OPYZHQ",
    "workerid": "AIWEXPJAU66D9",
    "probid": "13A",
    "subid": "40538278"
  },
  "lines": [
    {
      "line": 0,
      "text": "define function gcd with integer arguments a and b",
      "code": "int gcd ( int a , int b )",
      "indent": 0
    },
    {
      "line": 1,
      "text": "if b is equal to 0 return a",
      "code": "if ( b == 0 ) { return a ; }",
      "indent": 1
    },
    {
      "line": 2,
      "text": "return gcd of b and a % b",
      "code": "return gcd ( b , a % b ) ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    },
    {
      "line": 4,
      "text": "declare integer variable A",
      "code": "int A ;",
      "indent": 0
    },
    {
      "line": 5,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 6,
      "text": "read A",
      "code": "cin >> A ;",
      "indent": 1
    },
    {
      "line": 7,
      "text": "s = long long with value 0",
      "code": "long long s = 0 ;",
      "indent": 1
    },
    {
      "line": 8,
      "text": "for integer i = 2 to A exclusive",
      "code": "for ( int i = 2 ; i < A ; i ++ )",
      "indent": 1
    },
    {
      "line": 9,
      "text": "set integer x to A",
      "code": "int x = A ;",
      "indent": 2
    },
    {
      "line": 10,
      "text": "while x is not equal to 0",
      "code": "while ( x != 0 )",
      "indent": 2
    },
    {
      "line": 11,
      "text": "increase s by x % i",
      "code": "s += x % i ;",
      "indent": 3
    },
    {
      "line": 12,
      "text": "divide x by i",
      "code": "x /= i ;",
      "indent": 3
    },
    {
      "line": 13,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 14,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 15,
      "text": "integer g = gcd of A - 2 and s",
      "code": "int g = gcd ( A - 2 , s ) ;",
      "indent": 1
    },
    {
      "line": 16,
      "text": "print s / g , ' / ' , A - 2 / g and a new line",
      "code": "cout << s / g << ' / ' << ( A - 2 ) / g << endl ;",
      "indent": 1
    },
    {
      "line": 17,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 18,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        16
      ],
      "mod_code": [
        "cout << s / g / ' / ' , A - 2 / g << endl ;"
      ],
      "err_line": 16,
      "err_msg": "invalid operands of types ‘int’ and ‘<unresolved overloaded function type>’ to binary ‘operator<<’"
    },
    {
      "mod_line": [
        0
      ],
      "mod_code": [
        "void gcd ( int a , int b )"
      ],
      "err_line": 1,
      "err_msg": "return-statement with a value, in function returning 'void' [-fpermissive]"
    },
    {
      "mod_line": [
        2
      ],
      "mod_code": [
        "return gcd ( b and a % b ) ;"
      ],
      "err_line": 2,
      "err_msg": "too few arguments to function ‘int gcd(int, int)’"
    },
    {
      "mod_line": [
        4
      ],
      "mod_code": [
        "int n ;"
      ],
      "err_line": 6,
      "err_msg": "‘A’ was not declared in this scope"
    },
    {
      "mod_line": [
        6
      ],
      "mod_code": [
        "cin >> n ;"
      ],
      "err_line": 6,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        15
      ],
      "mod_code": [
        "int g = gcd ( A - 2 and s ) ;"
      ],
      "err_line": 15,
      "err_msg": "too few arguments to function ‘int gcd(int, int)’"
    },
    {
      "mod_line": [
        16
      ],
      "mod_code": [
        "cout << s / g , ' / ' << A - 2 / g << endl ;"
      ],
      "err_line": 16,
      "err_msg": "invalid operands of types ‘int’ and ‘<unresolved overloaded function type>’ to binary ‘operator<<’"
    },
    {
      "mod_line": [
        16,
        4
      ],
      "mod_code": [
        "cout << s / g / ' / ' , A - 2 / g << endl ;",
        "int n ;"
      ],
      "err_line": 6,
      "err_msg": "‘A’ was not declared in this scope"
    },
    {
      "mod_line": [
        16,
        4,
        2
      ],
      "mod_code": [
        "cout << s / g / ' / ' , A - 2 / g << endl ;",
        "int n ;",
        "return gcd ( b and a % b ) ;"
      ],
      "err_line": 2,
      "err_msg": "too few arguments to function ‘int gcd(int, int)’"
    },
    {
      "mod_line": [
        16,
        4,
        2,
        0
      ],
      "mod_code": [
        "cout << s / g / ' / ' , A - 2 / g << endl ;",
        "int n ;",
        "return gcd ( b and a % b ) ;",
        "void gcd ( int a , int b )"
      ],
      "err_line": 1,
      "err_msg": "return-statement with a value, in function returning 'void' [-fpermissive]"
    },
    {
      "mod_line": [
        16,
        4,
        2,
        15
      ],
      "mod_code": [
        "cout << s / g / ' / ' , A - 2 / g << endl ;",
        "int n ;",
        "return gcd ( b and a % b ) ;",
        "int g = gcd ( A - 2 and s ) ;"
      ],
      "err_line": 2,
      "err_msg": "too few arguments to function ‘int gcd(int, int)’"
    },
    {
      "mod_line": [
        16,
        4,
        2,
        9
      ],
      "mod_code": [
        "cout << s / g / ' / ' , A - 2 / g << endl ;",
        "int n ;",
        "return gcd ( b and a % b ) ;",
        "int x = ' A ' ;"
      ],
      "err_line": 2,
      "err_msg": "too few arguments to function ‘int gcd(int, int)’"
    },
    {
      "mod_line": [
        16,
        4,
        0
      ],
      "mod_code": [
        "cout << s / g / ' / ' , A - 2 / g << endl ;",
        "int n ;",
        "void gcd ( int a , int b )"
      ],
      "err_line": 1,
      "err_msg": "return-statement with a value, in function returning 'void' [-fpermissive]"
    },
    {
      "mod_line": [
        16,
        4,
        0,
        15
      ],
      "mod_code": [
        "cout << s / g / ' / ' , A - 2 / g << endl ;",
        "int n ;",
        "void gcd ( int a , int b )",
        "int g = gcd ( A - 2 and s ) ;"
      ],
      "err_line": 1,
      "err_msg": "return-statement with a value, in function returning 'void' [-fpermissive]"
    },
    {
      "mod_line": [
        16,
        4,
        0,
        9
      ],
      "mod_code": [
        "cout << s / g / ' / ' , A - 2 / g << endl ;",
        "int n ;",
        "void gcd ( int a , int b )",
        "int x = ' A ' ;"
      ],
      "err_line": 1,
      "err_msg": "return-statement with a value, in function returning 'void' [-fpermissive]"
    },
    {
      "mod_line": [
        16,
        4,
        15
      ],
      "mod_code": [
        "cout << s / g / ' / ' , A - 2 / g << endl ;",
        "int n ;",
        "int g = gcd ( A - 2 and s ) ;"
      ],
      "err_line": 6,
      "err_msg": "‘A’ was not declared in this scope"
    },
    {
      "mod_line": [
        16,
        4,
        15,
        9
      ],
      "mod_code": [
        "cout << s / g / ' / ' , A - 2 / g << endl ;",
        "int n ;",
        "int g = gcd ( A - 2 and s ) ;",
        "int x = ' A ' ;"
      ],
      "err_line": 6,
      "err_msg": "‘A’ was not declared in this scope"
    },
    {
      "mod_line": [
        16,
        4,
        9
      ],
      "mod_code": [
        "cout << s / g / ' / ' , A - 2 / g << endl ;",
        "int n ;",
        "int x = ' A ' ;"
      ],
      "err_line": 6,
      "err_msg": "‘A’ was not declared in this scope"
    },
    {
      "mod_line": [
        16,
        2
      ],
      "mod_code": [
        "cout << s / g / ' / ' , A - 2 / g << endl ;",
        "return gcd ( b and a % b ) ;"
      ],
      "err_line": 2,
      "err_msg": "too few arguments to function ‘int gcd(int, int)’"
    },
    {
      "mod_line": [
        16,
        2,
        0
      ],
      "mod_code": [
        "cout << s / g / ' / ' , A - 2 / g << endl ;",
        "return gcd ( b and a % b ) ;",
        "void gcd ( int a , int b )"
      ],
      "err_line": 1,
      "err_msg": "return-statement with a value, in function returning 'void' [-fpermissive]"
    },
    {
      "mod_line": [
        16,
        2,
        0,
        15
      ],
      "mod_code": [
        "cout << s / g / ' / ' , A - 2 / g << endl ;",
        "return gcd ( b and a % b ) ;",
        "void gcd ( int a , int b )",
        "int g = gcd ( A - 2 and s ) ;"
      ],
      "err_line": 1,
      "err_msg": "return-statement with a value, in function returning 'void' [-fpermissive]"
    },
    {
      "mod_line": [
        16,
        2,
        0,
        9
      ],
      "mod_code": [
        "cout << s / g / ' / ' , A - 2 / g << endl ;",
        "return gcd ( b and a % b ) ;",
        "void gcd ( int a , int b )",
        "int x = ' A ' ;"
      ],
      "err_line": 1,
      "err_msg": "return-statement with a value, in function returning 'void' [-fpermissive]"
    },
    {
      "mod_line": [
        16,
        2,
        15
      ],
      "mod_code": [
        "cout << s / g / ' / ' , A - 2 / g << endl ;",
        "return gcd ( b and a % b ) ;",
        "int g = gcd ( A - 2 and s ) ;"
      ],
      "err_line": 2,
      "err_msg": "too few arguments to function ‘int gcd(int, int)’"
    },
    {
      "mod_line": [
        16,
        2,
        15,
        9
      ],
      "mod_code": [
        "cout << s / g / ' / ' , A - 2 / g << endl ;",
        "return gcd ( b and a % b ) ;",
        "int g = gcd ( A - 2 and s ) ;",
        "int x = ' A ' ;"
      ],
      "err_line": 2,
      "err_msg": "too few arguments to function ‘int gcd(int, int)’"
    },
    {
      "mod_line": [
        16,
        2,
        9
      ],
      "mod_code": [
        "cout << s / g / ' / ' , A - 2 / g << endl ;",
        "return gcd ( b and a % b ) ;",
        "int x = ' A ' ;"
      ],
      "err_line": 2,
      "err_msg": "too few arguments to function ‘int gcd(int, int)’"
    },
    {
      "mod_line": [
        16,
        0
      ],
      "mod_code": [
        "cout << s / g / ' / ' , A - 2 / g << endl ;",
        "void gcd ( int a , int b )"
      ],
      "err_line": 1,
      "err_msg": "return-statement with a value, in function returning 'void' [-fpermissive]"
    },
    {
      "mod_line": [
        16,
        0,
        15
      ],
      "mod_code": [
        "cout << s / g / ' / ' , A - 2 / g << endl ;",
        "void gcd ( int a , int b )",
        "int g = gcd ( A - 2 and s ) ;"
      ],
      "err_line": 1,
      "err_msg": "return-statement with a value, in function returning 'void' [-fpermissive]"
    },
    {
      "mod_line": [
        16,
        0,
        15,
        9
      ],
      "mod_code": [
        "cout << s / g / ' / ' , A - 2 / g << endl ;",
        "void gcd ( int a , int b )",
        "int g = gcd ( A - 2 and s ) ;",
        "int x = ' A ' ;"
      ],
      "err_line": 1,
      "err_msg": "return-statement with a value, in function returning 'void' [-fpermissive]"
    },
    {
      "mod_line": [
        16,
        0,
        9
      ],
      "mod_code": [
        "cout << s / g / ' / ' , A - 2 / g << endl ;",
        "void gcd ( int a , int b )",
        "int x = ' A ' ;"
      ],
      "err_line": 1,
      "err_msg": "return-statement with a value, in function returning 'void' [-fpermissive]"
    },
    {
      "mod_line": [
        16,
        15
      ],
      "mod_code": [
        "cout << s / g / ' / ' , A - 2 / g << endl ;",
        "int g = gcd ( A - 2 and s ) ;"
      ],
      "err_line": 15,
      "err_msg": "too few arguments to function ‘int gcd(int, int)’"
    },
    {
      "mod_line": [
        16,
        15,
        9
      ],
      "mod_code": [
        "cout << s / g / ' / ' , A - 2 / g << endl ;",
        "int g = gcd ( A - 2 and s ) ;",
        "int x = ' A ' ;"
      ],
      "err_line": 15,
      "err_msg": "too few arguments to function ‘int gcd(int, int)’"
    },
    {
      "mod_line": [
        16,
        9
      ],
      "mod_code": [
        "cout << s / g / ' / ' , A - 2 / g << endl ;",
        "int x = ' A ' ;"
      ],
      "err_line": 16,
      "err_msg": "invalid operands of types ‘int’ and ‘<unresolved overloaded function type>’ to binary ‘operator<<’"
    },
    {
      "mod_line": [
        4,
        2
      ],
      "mod_code": [
        "int n ;",
        "return gcd ( b and a % b ) ;"
      ],
      "err_line": 2,
      "err_msg": "too few arguments to function ‘int gcd(int, int)’"
    },
    {
      "mod_line": [
        4,
        2,
        0
      ],
      "mod_code": [
        "int n ;",
        "return gcd ( b and a % b ) ;",
        "void gcd ( int a , int b )"
      ],
      "err_line": 1,
      "err_msg": "return-statement with a value, in function returning 'void' [-fpermissive]"
    },
    {
      "mod_line": [
        4,
        2,
        0,
        15
      ],
      "mod_code": [
        "int n ;",
        "return gcd ( b and a % b ) ;",
        "void gcd ( int a , int b )",
        "int g = gcd ( A - 2 and s ) ;"
      ],
      "err_line": 1,
      "err_msg": "return-statement with a value, in function returning 'void' [-fpermissive]"
    },
    {
      "mod_line": [
        4,
        2,
        0,
        9
      ],
      "mod_code": [
        "int n ;",
        "return gcd ( b and a % b ) ;",
        "void gcd ( int a , int b )",
        "int x = ' A ' ;"
      ],
      "err_line": 1,
      "err_msg": "return-statement with a value, in function returning 'void' [-fpermissive]"
    },
    {
      "mod_line": [
        4,
        2,
        15
      ],
      "mod_code": [
        "int n ;",
        "return gcd ( b and a % b ) ;",
        "int g = gcd ( A - 2 and s ) ;"
      ],
      "err_line": 2,
      "err_msg": "too few arguments to function ‘int gcd(int, int)’"
    },
    {
      "mod_line": [
        4,
        2,
        15,
        9
      ],
      "mod_code": [
        "int n ;",
        "return gcd ( b and a % b ) ;",
        "int g = gcd ( A - 2 and s ) ;",
        "int x = ' A ' ;"
      ],
      "err_line": 2,
      "err_msg": "too few arguments to function ‘int gcd(int, int)’"
    },
    {
      "mod_line": [
        4,
        2,
        9
      ],
      "mod_code": [
        "int n ;",
        "return gcd ( b and a % b ) ;",
        "int x = ' A ' ;"
      ],
      "err_line": 2,
      "err_msg": "too few arguments to function ‘int gcd(int, int)’"
    },
    {
      "mod_line": [
        4,
        0
      ],
      "mod_code": [
        "int n ;",
        "void gcd ( int a , int b )"
      ],
      "err_line": 1,
      "err_msg": "return-statement with a value, in function returning 'void' [-fpermissive]"
    },
    {
      "mod_line": [
        4,
        0,
        15
      ],
      "mod_code": [
        "int n ;",
        "void gcd ( int a , int b )",
        "int g = gcd ( A - 2 and s ) ;"
      ],
      "err_line": 1,
      "err_msg": "return-statement with a value, in function returning 'void' [-fpermissive]"
    },
    {
      "mod_line": [
        4,
        0,
        15,
        9
      ],
      "mod_code": [
        "int n ;",
        "void gcd ( int a , int b )",
        "int g = gcd ( A - 2 and s ) ;",
        "int x = ' A ' ;"
      ],
      "err_line": 1,
      "err_msg": "return-statement with a value, in function returning 'void' [-fpermissive]"
    },
    {
      "mod_line": [
        4,
        0,
        9
      ],
      "mod_code": [
        "int n ;",
        "void gcd ( int a , int b )",
        "int x = ' A ' ;"
      ],
      "err_line": 1,
      "err_msg": "return-statement with a value, in function returning 'void' [-fpermissive]"
    },
    {
      "mod_line": [
        4,
        15
      ],
      "mod_code": [
        "int n ;",
        "int g = gcd ( A - 2 and s ) ;"
      ],
      "err_line": 6,
      "err_msg": "‘A’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        15,
        9
      ],
      "mod_code": [
        "int n ;",
        "int g = gcd ( A - 2 and s ) ;",
        "int x = ' A ' ;"
      ],
      "err_line": 6,
      "err_msg": "‘A’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        9
      ],
      "mod_code": [
        "int n ;",
        "int x = ' A ' ;"
      ],
      "err_line": 6,
      "err_msg": "‘A’ was not declared in this scope"
    },
    {
      "mod_line": [
        2,
        0
      ],
      "mod_code": [
        "return gcd ( b and a % b ) ;",
        "void gcd ( int a , int b )"
      ],
      "err_line": 1,
      "err_msg": "return-statement with a value, in function returning 'void' [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        0,
        15
      ],
      "mod_code": [
        "return gcd ( b and a % b ) ;",
        "void gcd ( int a , int b )",
        "int g = gcd ( A - 2 and s ) ;"
      ],
      "err_line": 1,
      "err_msg": "return-statement with a value, in function returning 'void' [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        0,
        15,
        9
      ],
      "mod_code": [
        "return gcd ( b and a % b ) ;",
        "void gcd ( int a , int b )",
        "int g = gcd ( A - 2 and s ) ;",
        "int x = ' A ' ;"
      ],
      "err_line": 1,
      "err_msg": "return-statement with a value, in function returning 'void' [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        0,
        9
      ],
      "mod_code": [
        "return gcd ( b and a % b ) ;",
        "void gcd ( int a , int b )",
        "int x = ' A ' ;"
      ],
      "err_line": 1,
      "err_msg": "return-statement with a value, in function returning 'void' [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        15
      ],
      "mod_code": [
        "return gcd ( b and a % b ) ;",
        "int g = gcd ( A - 2 and s ) ;"
      ],
      "err_line": 2,
      "err_msg": "too few arguments to function ‘int gcd(int, int)’"
    },
    {
      "mod_line": [
        2,
        15,
        9
      ],
      "mod_code": [
        "return gcd ( b and a % b ) ;",
        "int g = gcd ( A - 2 and s ) ;",
        "int x = ' A ' ;"
      ],
      "err_line": 2,
      "err_msg": "too few arguments to function ‘int gcd(int, int)’"
    },
    {
      "mod_line": [
        2,
        9
      ],
      "mod_code": [
        "return gcd ( b and a % b ) ;",
        "int x = ' A ' ;"
      ],
      "err_line": 2,
      "err_msg": "too few arguments to function ‘int gcd(int, int)’"
    },
    {
      "mod_line": [
        0,
        15
      ],
      "mod_code": [
        "void gcd ( int a , int b )",
        "int g = gcd ( A - 2 and s ) ;"
      ],
      "err_line": 1,
      "err_msg": "return-statement with a value, in function returning 'void' [-fpermissive]"
    },
    {
      "mod_line": [
        0,
        15,
        9
      ],
      "mod_code": [
        "void gcd ( int a , int b )",
        "int g = gcd ( A - 2 and s ) ;",
        "int x = ' A ' ;"
      ],
      "err_line": 1,
      "err_msg": "return-statement with a value, in function returning 'void' [-fpermissive]"
    },
    {
      "mod_line": [
        0,
        9
      ],
      "mod_code": [
        "void gcd ( int a , int b )",
        "int x = ' A ' ;"
      ],
      "err_line": 1,
      "err_msg": "return-statement with a value, in function returning 'void' [-fpermissive]"
    },
    {
      "mod_line": [
        15,
        9
      ],
      "mod_code": [
        "int g = gcd ( A - 2 and s ) ;",
        "int x = ' A ' ;"
      ],
      "err_line": 15,
      "err_msg": "too few arguments to function ‘int gcd(int, int)’"
    }
  ]
}