{
  "meta": {
    "index": 1417,
    "hitid": "3MYASTQBG75NYI57KEXML5Y3SW0DQM",
    "workerid": "AIWEXPJAU66D9",
    "probid": "259A",
    "subid": "41214011"
  },
  "lines": [
    {
      "line": 0,
      "text": "m is a new 2d array of characters with size 10 by 20",
      "code": "char m [ 10 ] [ 20 ] ;",
      "indent": 0
    },
    {
      "line": 1,
      "text": "boolean function dfs with int argument line",
      "code": "bool dfs ( int line )",
      "indent": 0
    },
    {
      "line": 2,
      "text": "return true if line is equal to 8",
      "code": "if ( line == 8 ) return true ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "str is a new array of characters with size 15",
      "code": "char str [ 15 ] ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "in a for loop , change i from 0 to 8 exclusive",
      "code": "for ( int i = 0 ; i < 8 ; i ++ )",
      "indent": 1
    },
    {
      "line": 5,
      "text": "if m [ line - 1 ] [ i ] is equal to ' W '",
      "code": "if ( m [ line - 1 ] [ i ] == ' W ' )",
      "indent": 2
    },
    {
      "line": 6,
      "text": "assign ' B ' to str [ i ]",
      "code": "str [ i ] = ' B ' ;",
      "indent": 3
    },
    {
      "line": 7,
      "text": "else",
      "code": "else",
      "indent": 2
    },
    {
      "line": 8,
      "text": "set str [ i ] to ' W '",
      "code": "str [ i ] = ' W ' ;",
      "indent": 3
    },
    {
      "line": 9,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 10,
      "text": "assign 0 to str [ 8 ]",
      "code": "str [ 8 ] = 0 ;",
      "indent": 1
    },
    {
      "line": 11,
      "text": "if there are substrings \" WW \" or \" BB \" in str , return false",
      "code": "if ( strstr ( str , \" WW \" ) || strstr ( str , \" BB \" ) ) return false ;",
      "indent": 1
    },
    {
      "line": 12,
      "text": "if there is substring str in m [ line ] , return dfs ( line + 1 )",
      "code": "if ( strstr ( m [ line ] , str ) ) return dfs ( line + 1 ) ;",
      "indent": 1
    },
    {
      "line": 13,
      "text": "return false",
      "code": "return false ;",
      "indent": 1
    },
    {
      "line": 14,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    },
    {
      "line": 15,
      "text": "solve is a boolean function",
      "code": "bool solve ( )",
      "indent": 0
    },
    {
      "line": 16,
      "text": "create vector of characters v",
      "code": "vector < char > v ;",
      "indent": 1
    },
    {
      "line": 17,
      "text": "for i = 0 to 8 exclusive , push m [ 0 ] [ i ] to v",
      "code": "for ( int i = 0 ; i < 8 ; i ++ ) v . push_back ( m [ 0 ] [ i ] ) ;",
      "indent": 1
    },
    {
      "line": 18,
      "text": "for time from 0 to 8 exclusive",
      "code": "for ( int time = 0 ; time < 8 ; time ++ )",
      "indent": 1
    },
    {
      "line": 19,
      "text": "declare boolean variable flag with value true",
      "code": "bool flag = true ;",
      "indent": 2
    },
    {
      "line": 20,
      "text": "in a loop from i = 0 to 8 exclusive , change m [ 0 ] [ i ] to v [ i ]",
      "code": "for ( int i = 0 ; i < 8 ; i ++ ) { m [ 0 ] [ i ] = v [ i ] ; }",
      "indent": 2
    },
    {
      "line": 21,
      "text": "if there are substrings \" WW \" ) or \" BB \" in m [ 0 ] , change flag to false",
      "code": "if ( strstr ( m [ 0 ] , \" WW \" ) || strstr ( m [ 0 ] , \" BB \" ) ) flag = false ;",
      "indent": 2
    },
    {
      "line": 22,
      "text": "return true if flag is true , v [ 0 ] ! = ' B ' and dfs of 1 returned true",
      "code": "if ( flag && v [ 0 ] != ' B ' && dfs ( 1 ) ) { return true ; }",
      "indent": 2
    },
    {
      "line": 23,
      "text": "insert v [ 7 ] into v",
      "code": "v . insert ( v . begin ( ) , v [ 7 ] ) ;",
      "indent": 2
    },
    {
      "line": 24,
      "text": "remove last element from v",
      "code": "v . pop_back ( ) ;",
      "indent": 2
    },
    {
      "line": 25,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 26,
      "text": "return false",
      "code": "return false ;",
      "indent": 1
    },
    {
      "line": 27,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    },
    {
      "line": 28,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 29,
      "text": "read 8 elements from the user input to m",
      "code": "for ( int i = 0 ; i < 8 ; i ++ ) cin >> m [ i ] ;",
      "indent": 1
    },
    {
      "line": 30,
      "text": "for i from 1 to 8 exclusive",
      "code": "for ( int i = 1 ; i < 8 ; i ++ )",
      "indent": 1
    },
    {
      "line": 31,
      "text": "for j = 0 to 8 exclusive , change the value of m [ i ] [ j + 8 ] to m [ i ] [ j ]",
      "code": "for ( int j = 0 ; j < 8 ; j ++ ) { m [ i ] [ j + 8 ] = m [ i ] [ j ] ; }",
      "indent": 2
    },
    {
      "line": 32,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 33,
      "text": "if the result of solve ( ) is true",
      "code": "if ( solve ( ) )",
      "indent": 1
    },
    {
      "line": 34,
      "text": "print \" YES \\ n \" to the standard output",
      "code": "cout << \" YES\\n \" ;",
      "indent": 2
    },
    {
      "line": 35,
      "text": "else",
      "code": "else",
      "indent": 1
    },
    {
      "line": 36,
      "text": "print \" NO \\ n \"",
      "code": "cout << \" NO\\n \" ;",
      "indent": 2
    },
    {
      "line": 37,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 38,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        11
      ],
      "mod_code": [
        "if ( str == \" WW \" || substrings == \" WW \" || substrings == \" BB \" ) return false ;"
      ],
      "err_line": 11,
      "err_msg": "‘substrings’ was not declared in this scope"
    },
    {
      "mod_line": [
        12
      ],
      "mod_code": [
        "if ( ! m . substring ( ) ) return dfs ( line + 1 ) ;"
      ],
      "err_line": 12,
      "err_msg": "request for member ‘substring’ in ‘m’, which is of non-class type ‘char [10][20]’"
    },
    {
      "mod_line": [
        21
      ],
      "mod_code": [
        "if ( m == \" WW \" ) flag . push_back ( \" WW \" ) , flag = false ;"
      ],
      "err_line": 21,
      "err_msg": "comparison between distinct pointer types ‘char (*)[20]’ and ‘const char*’ lacks a cast [-fpermissive]"
    },
    {
      "mod_line": [
        23
      ],
      "mod_code": [
        "v . insert ( v [ 7 ] ) ;"
      ],
      "err_line": 23,
      "err_msg": "no matching function for call to ‘std::vector<char>::insert(char&)’"
    },
    {
      "mod_line": [
        24
      ],
      "mod_code": [
        "v . push_back ( v ) ;"
      ],
      "err_line": 24,
      "err_msg": "no matching function for call to ‘std::vector<char>::push_back(std::vector<char>&)’"
    },
    {
      "mod_line": [
        0
      ],
      "mod_code": [
        "char * m [ 10 ] [ 20 ] ;"
      ],
      "err_line": 5,
      "err_msg": "ISO C++ forbids comparison between pointer and integer [-fpermissive]"
    },
    {
      "mod_line": [
        1
      ],
      "mod_code": [
        "bool dfs ( int & line )"
      ],
      "err_line": 12,
      "err_msg": "invalid initialization of non-const reference of type ‘int&’ from an rvalue of type ‘int’"
    },
    {
      "mod_line": [
        4
      ],
      "mod_code": [
        "for ( i = 0 ; i < 8 ; i ++ )"
      ],
      "err_line": 4,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        5
      ],
      "mod_code": [
        "if ( m [ line - 1 ] == ' W ' )"
      ],
      "err_line": 5,
      "err_msg": "ISO C++ forbids comparison between pointer and integer [-fpermissive]"
    },
    {
      "mod_line": [
        8
      ],
      "mod_code": [
        "if ( str [ i ] == ' W ' )"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘}’ token"
    },
    {
      "mod_line": [
        10
      ],
      "mod_code": [
        "char str [ 8 ] = 0 ;"
      ],
      "err_line": 10,
      "err_msg": "conflicting declaration ‘char str [8]’"
    },
    {
      "mod_line": [
        11
      ],
      "mod_code": [
        "if ( str . find ( \" WW \" ) == \" WW \" || substrings == \" BB \" ) return false ;"
      ],
      "err_line": 11,
      "err_msg": "request for member ‘find’ in ‘str’, which is of non-class type ‘char [15]’"
    },
    {
      "mod_line": [
        12
      ],
      "mod_code": [
        "if ( ! m . find ( m ) ) return dfs ( line + 1 ) ;"
      ],
      "err_line": 12,
      "err_msg": "request for member ‘find’ in ‘m’, which is of non-class type ‘char [10][20]’"
    },
    {
      "mod_line": [
        15
      ],
      "mod_code": [
        "bool solve ( }"
      ],
      "err_line": 15,
      "err_msg": "expected primary-expression before ‘}’ token"
    },
    {
      "mod_line": [
        16
      ],
      "mod_code": [
        "vector < characters > v ;"
      ],
      "err_line": 16,
      "err_msg": "‘characters’ was not declared in this scope"
    },
    {
      "mod_line": [
        17
      ],
      "mod_code": [
        "for ( int i = 0 ; i < 8 ; i ++ ) { v . push ( m [ 0 ] [ i ] ) ; }"
      ],
      "err_line": 17,
      "err_msg": "‘class std::vector<char>’ has no member named ‘push’"
    },
    {
      "mod_line": [
        18
      ],
      "mod_code": [
        "for ( time = 0 ; time < 8 ; time ++ )"
      ],
      "err_line": 18,
      "err_msg": "assignment of function ‘time_t time(time_t*)’"
    },
    {
      "mod_line": [
        19
      ],
      "mod_code": [
        "bool flag declare true ;"
      ],
      "err_line": 19,
      "err_msg": "expected initializer before ‘declare’"
    },
    {
      "mod_line": [
        21
      ],
      "mod_code": [
        "if ( m . find ( \" WW \" ) == \" WW \" ) flag [ 0 ] = false ;"
      ],
      "err_line": 21,
      "err_msg": "request for member ‘find’ in ‘m’, which is of non-class type ‘char [10][20]’"
    },
    {
      "mod_line": [
        23
      ],
      "mod_code": [
        "v . push ( v [ 7 ] ) ;"
      ],
      "err_line": 23,
      "err_msg": "‘class std::vector<char>’ has no member named ‘push’"
    },
    {
      "mod_line": [
        30
      ],
      "mod_code": [
        "for ( i = 1 ; i < 8 ; i ++ )"
      ],
      "err_line": 30,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        11,
        12
      ],
      "mod_code": [
        "if ( str == \" WW \" || substrings == \" WW \" || substrings == \" BB \" ) return false ;",
        "if ( ! m . substring ( ) ) return dfs ( line + 1 ) ;"
      ],
      "err_line": 11,
      "err_msg": "‘substrings’ was not declared in this scope"
    },
    {
      "mod_line": [
        11,
        12,
        21
      ],
      "mod_code": [
        "if ( str == \" WW \" || substrings == \" WW \" || substrings == \" BB \" ) return false ;",
        "if ( ! m . substring ( ) ) return dfs ( line + 1 ) ;",
        "if ( m == \" WW \" ) flag . push_back ( \" WW \" ) , flag = false ;"
      ],
      "err_line": 11,
      "err_msg": "‘substrings’ was not declared in this scope"
    },
    {
      "mod_line": [
        11,
        12,
        21,
        22
      ],
      "mod_code": [
        "if ( str == \" WW \" || substrings == \" WW \" || substrings == \" BB \" ) return false ;",
        "if ( ! m . substring ( ) ) return dfs ( line + 1 ) ;",
        "if ( m == \" WW \" ) flag . push_back ( \" WW \" ) , flag = false ;",
        "if ( flag ) v [ 0 ] = ' B ' && dfs ( 1 ) ;"
      ],
      "err_line": 11,
      "err_msg": "‘substrings’ was not declared in this scope"
    },
    {
      "mod_line": [
        11,
        12,
        21,
        23
      ],
      "mod_code": [
        "if ( str == \" WW \" || substrings == \" WW \" || substrings == \" BB \" ) return false ;",
        "if ( ! m . substring ( ) ) return dfs ( line + 1 ) ;",
        "if ( m == \" WW \" ) flag . push_back ( \" WW \" ) , flag = false ;",
        "v . insert ( v [ 7 ] ) ;"
      ],
      "err_line": 11,
      "err_msg": "‘substrings’ was not declared in this scope"
    },
    {
      "mod_line": [
        11,
        12,
        21,
        24
      ],
      "mod_code": [
        "if ( str == \" WW \" || substrings == \" WW \" || substrings == \" BB \" ) return false ;",
        "if ( ! m . substring ( ) ) return dfs ( line + 1 ) ;",
        "if ( m == \" WW \" ) flag . push_back ( \" WW \" ) , flag = false ;",
        "v . push_back ( v ) ;"
      ],
      "err_line": 11,
      "err_msg": "‘substrings’ was not declared in this scope"
    },
    {
      "mod_line": [
        11,
        12,
        22
      ],
      "mod_code": [
        "if ( str == \" WW \" || substrings == \" WW \" || substrings == \" BB \" ) return false ;",
        "if ( ! m . substring ( ) ) return dfs ( line + 1 ) ;",
        "if ( flag ) v [ 0 ] = ' B ' && dfs ( 1 ) ;"
      ],
      "err_line": 11,
      "err_msg": "‘substrings’ was not declared in this scope"
    },
    {
      "mod_line": [
        11,
        12,
        22,
        23
      ],
      "mod_code": [
        "if ( str == \" WW \" || substrings == \" WW \" || substrings == \" BB \" ) return false ;",
        "if ( ! m . substring ( ) ) return dfs ( line + 1 ) ;",
        "if ( flag ) v [ 0 ] = ' B ' && dfs ( 1 ) ;",
        "v . insert ( v [ 7 ] ) ;"
      ],
      "err_line": 11,
      "err_msg": "‘substrings’ was not declared in this scope"
    },
    {
      "mod_line": [
        11,
        12,
        22,
        24
      ],
      "mod_code": [
        "if ( str == \" WW \" || substrings == \" WW \" || substrings == \" BB \" ) return false ;",
        "if ( ! m . substring ( ) ) return dfs ( line + 1 ) ;",
        "if ( flag ) v [ 0 ] = ' B ' && dfs ( 1 ) ;",
        "v . push_back ( v ) ;"
      ],
      "err_line": 11,
      "err_msg": "‘substrings’ was not declared in this scope"
    },
    {
      "mod_line": [
        11,
        12,
        23
      ],
      "mod_code": [
        "if ( str == \" WW \" || substrings == \" WW \" || substrings == \" BB \" ) return false ;",
        "if ( ! m . substring ( ) ) return dfs ( line + 1 ) ;",
        "v . insert ( v [ 7 ] ) ;"
      ],
      "err_line": 11,
      "err_msg": "‘substrings’ was not declared in this scope"
    },
    {
      "mod_line": [
        11,
        12,
        23,
        24
      ],
      "mod_code": [
        "if ( str == \" WW \" || substrings == \" WW \" || substrings == \" BB \" ) return false ;",
        "if ( ! m . substring ( ) ) return dfs ( line + 1 ) ;",
        "v . insert ( v [ 7 ] ) ;",
        "v . push_back ( v ) ;"
      ],
      "err_line": 11,
      "err_msg": "‘substrings’ was not declared in this scope"
    },
    {
      "mod_line": [
        11,
        12,
        24
      ],
      "mod_code": [
        "if ( str == \" WW \" || substrings == \" WW \" || substrings == \" BB \" ) return false ;",
        "if ( ! m . substring ( ) ) return dfs ( line + 1 ) ;",
        "v . push_back ( v ) ;"
      ],
      "err_line": 11,
      "err_msg": "‘substrings’ was not declared in this scope"
    },
    {
      "mod_line": [
        11,
        21
      ],
      "mod_code": [
        "if ( str == \" WW \" || substrings == \" WW \" || substrings == \" BB \" ) return false ;",
        "if ( m == \" WW \" ) flag . push_back ( \" WW \" ) , flag = false ;"
      ],
      "err_line": 11,
      "err_msg": "‘substrings’ was not declared in this scope"
    },
    {
      "mod_line": [
        11,
        21,
        22
      ],
      "mod_code": [
        "if ( str == \" WW \" || substrings == \" WW \" || substrings == \" BB \" ) return false ;",
        "if ( m == \" WW \" ) flag . push_back ( \" WW \" ) , flag = false ;",
        "if ( flag ) v [ 0 ] = ' B ' && dfs ( 1 ) ;"
      ],
      "err_line": 11,
      "err_msg": "‘substrings’ was not declared in this scope"
    },
    {
      "mod_line": [
        11,
        21,
        22,
        23
      ],
      "mod_code": [
        "if ( str == \" WW \" || substrings == \" WW \" || substrings == \" BB \" ) return false ;",
        "if ( m == \" WW \" ) flag . push_back ( \" WW \" ) , flag = false ;",
        "if ( flag ) v [ 0 ] = ' B ' && dfs ( 1 ) ;",
        "v . insert ( v [ 7 ] ) ;"
      ],
      "err_line": 11,
      "err_msg": "‘substrings’ was not declared in this scope"
    },
    {
      "mod_line": [
        11,
        21,
        22,
        24
      ],
      "mod_code": [
        "if ( str == \" WW \" || substrings == \" WW \" || substrings == \" BB \" ) return false ;",
        "if ( m == \" WW \" ) flag . push_back ( \" WW \" ) , flag = false ;",
        "if ( flag ) v [ 0 ] = ' B ' && dfs ( 1 ) ;",
        "v . push_back ( v ) ;"
      ],
      "err_line": 11,
      "err_msg": "‘substrings’ was not declared in this scope"
    },
    {
      "mod_line": [
        11,
        21,
        23
      ],
      "mod_code": [
        "if ( str == \" WW \" || substrings == \" WW \" || substrings == \" BB \" ) return false ;",
        "if ( m == \" WW \" ) flag . push_back ( \" WW \" ) , flag = false ;",
        "v . insert ( v [ 7 ] ) ;"
      ],
      "err_line": 11,
      "err_msg": "‘substrings’ was not declared in this scope"
    },
    {
      "mod_line": [
        11,
        21,
        23,
        24
      ],
      "mod_code": [
        "if ( str == \" WW \" || substrings == \" WW \" || substrings == \" BB \" ) return false ;",
        "if ( m == \" WW \" ) flag . push_back ( \" WW \" ) , flag = false ;",
        "v . insert ( v [ 7 ] ) ;",
        "v . push_back ( v ) ;"
      ],
      "err_line": 11,
      "err_msg": "‘substrings’ was not declared in this scope"
    },
    {
      "mod_line": [
        11,
        21,
        24
      ],
      "mod_code": [
        "if ( str == \" WW \" || substrings == \" WW \" || substrings == \" BB \" ) return false ;",
        "if ( m == \" WW \" ) flag . push_back ( \" WW \" ) , flag = false ;",
        "v . push_back ( v ) ;"
      ],
      "err_line": 11,
      "err_msg": "‘substrings’ was not declared in this scope"
    },
    {
      "mod_line": [
        11,
        22
      ],
      "mod_code": [
        "if ( str == \" WW \" || substrings == \" WW \" || substrings == \" BB \" ) return false ;",
        "if ( flag ) v [ 0 ] = ' B ' && dfs ( 1 ) ;"
      ],
      "err_line": 11,
      "err_msg": "‘substrings’ was not declared in this scope"
    },
    {
      "mod_line": [
        11,
        22,
        23
      ],
      "mod_code": [
        "if ( str == \" WW \" || substrings == \" WW \" || substrings == \" BB \" ) return false ;",
        "if ( flag ) v [ 0 ] = ' B ' && dfs ( 1 ) ;",
        "v . insert ( v [ 7 ] ) ;"
      ],
      "err_line": 11,
      "err_msg": "‘substrings’ was not declared in this scope"
    },
    {
      "mod_line": [
        11,
        22,
        23,
        24
      ],
      "mod_code": [
        "if ( str == \" WW \" || substrings == \" WW \" || substrings == \" BB \" ) return false ;",
        "if ( flag ) v [ 0 ] = ' B ' && dfs ( 1 ) ;",
        "v . insert ( v [ 7 ] ) ;",
        "v . push_back ( v ) ;"
      ],
      "err_line": 11,
      "err_msg": "‘substrings’ was not declared in this scope"
    },
    {
      "mod_line": [
        11,
        22,
        24
      ],
      "mod_code": [
        "if ( str == \" WW \" || substrings == \" WW \" || substrings == \" BB \" ) return false ;",
        "if ( flag ) v [ 0 ] = ' B ' && dfs ( 1 ) ;",
        "v . push_back ( v ) ;"
      ],
      "err_line": 11,
      "err_msg": "‘substrings’ was not declared in this scope"
    },
    {
      "mod_line": [
        11,
        23
      ],
      "mod_code": [
        "if ( str == \" WW \" || substrings == \" WW \" || substrings == \" BB \" ) return false ;",
        "v . insert ( v [ 7 ] ) ;"
      ],
      "err_line": 11,
      "err_msg": "‘substrings’ was not declared in this scope"
    },
    {
      "mod_line": [
        11,
        23,
        24
      ],
      "mod_code": [
        "if ( str == \" WW \" || substrings == \" WW \" || substrings == \" BB \" ) return false ;",
        "v . insert ( v [ 7 ] ) ;",
        "v . push_back ( v ) ;"
      ],
      "err_line": 11,
      "err_msg": "‘substrings’ was not declared in this scope"
    },
    {
      "mod_line": [
        11,
        24
      ],
      "mod_code": [
        "if ( str == \" WW \" || substrings == \" WW \" || substrings == \" BB \" ) return false ;",
        "v . push_back ( v ) ;"
      ],
      "err_line": 11,
      "err_msg": "‘substrings’ was not declared in this scope"
    },
    {
      "mod_line": [
        12,
        21
      ],
      "mod_code": [
        "if ( ! m . substring ( ) ) return dfs ( line + 1 ) ;",
        "if ( m == \" WW \" ) flag . push_back ( \" WW \" ) , flag = false ;"
      ],
      "err_line": 12,
      "err_msg": "request for member ‘substring’ in ‘m’, which is of non-class type ‘char [10][20]’"
    },
    {
      "mod_line": [
        12,
        21,
        22
      ],
      "mod_code": [
        "if ( ! m . substring ( ) ) return dfs ( line + 1 ) ;",
        "if ( m == \" WW \" ) flag . push_back ( \" WW \" ) , flag = false ;",
        "if ( flag ) v [ 0 ] = ' B ' && dfs ( 1 ) ;"
      ],
      "err_line": 12,
      "err_msg": "request for member ‘substring’ in ‘m’, which is of non-class type ‘char [10][20]’"
    },
    {
      "mod_line": [
        12,
        21,
        22,
        23
      ],
      "mod_code": [
        "if ( ! m . substring ( ) ) return dfs ( line + 1 ) ;",
        "if ( m == \" WW \" ) flag . push_back ( \" WW \" ) , flag = false ;",
        "if ( flag ) v [ 0 ] = ' B ' && dfs ( 1 ) ;",
        "v . insert ( v [ 7 ] ) ;"
      ],
      "err_line": 12,
      "err_msg": "request for member ‘substring’ in ‘m’, which is of non-class type ‘char [10][20]’"
    },
    {
      "mod_line": [
        12,
        21,
        22,
        24
      ],
      "mod_code": [
        "if ( ! m . substring ( ) ) return dfs ( line + 1 ) ;",
        "if ( m == \" WW \" ) flag . push_back ( \" WW \" ) , flag = false ;",
        "if ( flag ) v [ 0 ] = ' B ' && dfs ( 1 ) ;",
        "v . push_back ( v ) ;"
      ],
      "err_line": 12,
      "err_msg": "request for member ‘substring’ in ‘m’, which is of non-class type ‘char [10][20]’"
    },
    {
      "mod_line": [
        12,
        21,
        23
      ],
      "mod_code": [
        "if ( ! m . substring ( ) ) return dfs ( line + 1 ) ;",
        "if ( m == \" WW \" ) flag . push_back ( \" WW \" ) , flag = false ;",
        "v . insert ( v [ 7 ] ) ;"
      ],
      "err_line": 12,
      "err_msg": "request for member ‘substring’ in ‘m’, which is of non-class type ‘char [10][20]’"
    },
    {
      "mod_line": [
        12,
        21,
        23,
        24
      ],
      "mod_code": [
        "if ( ! m . substring ( ) ) return dfs ( line + 1 ) ;",
        "if ( m == \" WW \" ) flag . push_back ( \" WW \" ) , flag = false ;",
        "v . insert ( v [ 7 ] ) ;",
        "v . push_back ( v ) ;"
      ],
      "err_line": 12,
      "err_msg": "request for member ‘substring’ in ‘m’, which is of non-class type ‘char [10][20]’"
    },
    {
      "mod_line": [
        12,
        21,
        24
      ],
      "mod_code": [
        "if ( ! m . substring ( ) ) return dfs ( line + 1 ) ;",
        "if ( m == \" WW \" ) flag . push_back ( \" WW \" ) , flag = false ;",
        "v . push_back ( v ) ;"
      ],
      "err_line": 12,
      "err_msg": "request for member ‘substring’ in ‘m’, which is of non-class type ‘char [10][20]’"
    },
    {
      "mod_line": [
        12,
        22
      ],
      "mod_code": [
        "if ( ! m . substring ( ) ) return dfs ( line + 1 ) ;",
        "if ( flag ) v [ 0 ] = ' B ' && dfs ( 1 ) ;"
      ],
      "err_line": 12,
      "err_msg": "request for member ‘substring’ in ‘m’, which is of non-class type ‘char [10][20]’"
    },
    {
      "mod_line": [
        12,
        22,
        23
      ],
      "mod_code": [
        "if ( ! m . substring ( ) ) return dfs ( line + 1 ) ;",
        "if ( flag ) v [ 0 ] = ' B ' && dfs ( 1 ) ;",
        "v . insert ( v [ 7 ] ) ;"
      ],
      "err_line": 12,
      "err_msg": "request for member ‘substring’ in ‘m’, which is of non-class type ‘char [10][20]’"
    },
    {
      "mod_line": [
        12,
        22,
        23,
        24
      ],
      "mod_code": [
        "if ( ! m . substring ( ) ) return dfs ( line + 1 ) ;",
        "if ( flag ) v [ 0 ] = ' B ' && dfs ( 1 ) ;",
        "v . insert ( v [ 7 ] ) ;",
        "v . push_back ( v ) ;"
      ],
      "err_line": 12,
      "err_msg": "request for member ‘substring’ in ‘m’, which is of non-class type ‘char [10][20]’"
    },
    {
      "mod_line": [
        12,
        22,
        24
      ],
      "mod_code": [
        "if ( ! m . substring ( ) ) return dfs ( line + 1 ) ;",
        "if ( flag ) v [ 0 ] = ' B ' && dfs ( 1 ) ;",
        "v . push_back ( v ) ;"
      ],
      "err_line": 12,
      "err_msg": "request for member ‘substring’ in ‘m’, which is of non-class type ‘char [10][20]’"
    },
    {
      "mod_line": [
        12,
        23
      ],
      "mod_code": [
        "if ( ! m . substring ( ) ) return dfs ( line + 1 ) ;",
        "v . insert ( v [ 7 ] ) ;"
      ],
      "err_line": 12,
      "err_msg": "request for member ‘substring’ in ‘m’, which is of non-class type ‘char [10][20]’"
    },
    {
      "mod_line": [
        12,
        23,
        24
      ],
      "mod_code": [
        "if ( ! m . substring ( ) ) return dfs ( line + 1 ) ;",
        "v . insert ( v [ 7 ] ) ;",
        "v . push_back ( v ) ;"
      ],
      "err_line": 12,
      "err_msg": "request for member ‘substring’ in ‘m’, which is of non-class type ‘char [10][20]’"
    },
    {
      "mod_line": [
        12,
        24
      ],
      "mod_code": [
        "if ( ! m . substring ( ) ) return dfs ( line + 1 ) ;",
        "v . push_back ( v ) ;"
      ],
      "err_line": 12,
      "err_msg": "request for member ‘substring’ in ‘m’, which is of non-class type ‘char [10][20]’"
    },
    {
      "mod_line": [
        21,
        22
      ],
      "mod_code": [
        "if ( m == \" WW \" ) flag . push_back ( \" WW \" ) , flag = false ;",
        "if ( flag ) v [ 0 ] = ' B ' && dfs ( 1 ) ;"
      ],
      "err_line": 21,
      "err_msg": "comparison between distinct pointer types ‘char (*)[20]’ and ‘const char*’ lacks a cast [-fpermissive]"
    },
    {
      "mod_line": [
        21,
        22,
        23
      ],
      "mod_code": [
        "if ( m == \" WW \" ) flag . push_back ( \" WW \" ) , flag = false ;",
        "if ( flag ) v [ 0 ] = ' B ' && dfs ( 1 ) ;",
        "v . insert ( v [ 7 ] ) ;"
      ],
      "err_line": 21,
      "err_msg": "comparison between distinct pointer types ‘char (*)[20]’ and ‘const char*’ lacks a cast [-fpermissive]"
    },
    {
      "mod_line": [
        21,
        22,
        23,
        24
      ],
      "mod_code": [
        "if ( m == \" WW \" ) flag . push_back ( \" WW \" ) , flag = false ;",
        "if ( flag ) v [ 0 ] = ' B ' && dfs ( 1 ) ;",
        "v . insert ( v [ 7 ] ) ;",
        "v . push_back ( v ) ;"
      ],
      "err_line": 21,
      "err_msg": "comparison between distinct pointer types ‘char (*)[20]’ and ‘const char*’ lacks a cast [-fpermissive]"
    },
    {
      "mod_line": [
        21,
        22,
        24
      ],
      "mod_code": [
        "if ( m == \" WW \" ) flag . push_back ( \" WW \" ) , flag = false ;",
        "if ( flag ) v [ 0 ] = ' B ' && dfs ( 1 ) ;",
        "v . push_back ( v ) ;"
      ],
      "err_line": 21,
      "err_msg": "comparison between distinct pointer types ‘char (*)[20]’ and ‘const char*’ lacks a cast [-fpermissive]"
    },
    {
      "mod_line": [
        21,
        23
      ],
      "mod_code": [
        "if ( m == \" WW \" ) flag . push_back ( \" WW \" ) , flag = false ;",
        "v . insert ( v [ 7 ] ) ;"
      ],
      "err_line": 21,
      "err_msg": "comparison between distinct pointer types ‘char (*)[20]’ and ‘const char*’ lacks a cast [-fpermissive]"
    },
    {
      "mod_line": [
        21,
        23,
        24
      ],
      "mod_code": [
        "if ( m == \" WW \" ) flag . push_back ( \" WW \" ) , flag = false ;",
        "v . insert ( v [ 7 ] ) ;",
        "v . push_back ( v ) ;"
      ],
      "err_line": 21,
      "err_msg": "comparison between distinct pointer types ‘char (*)[20]’ and ‘const char*’ lacks a cast [-fpermissive]"
    },
    {
      "mod_line": [
        21,
        24
      ],
      "mod_code": [
        "if ( m == \" WW \" ) flag . push_back ( \" WW \" ) , flag = false ;",
        "v . push_back ( v ) ;"
      ],
      "err_line": 21,
      "err_msg": "comparison between distinct pointer types ‘char (*)[20]’ and ‘const char*’ lacks a cast [-fpermissive]"
    },
    {
      "mod_line": [
        22,
        23
      ],
      "mod_code": [
        "if ( flag ) v [ 0 ] = ' B ' && dfs ( 1 ) ;",
        "v . insert ( v [ 7 ] ) ;"
      ],
      "err_line": 23,
      "err_msg": "no matching function for call to ‘std::vector<char>::insert(char&)’"
    },
    {
      "mod_line": [
        22,
        23,
        24
      ],
      "mod_code": [
        "if ( flag ) v [ 0 ] = ' B ' && dfs ( 1 ) ;",
        "v . insert ( v [ 7 ] ) ;",
        "v . push_back ( v ) ;"
      ],
      "err_line": 23,
      "err_msg": "no matching function for call to ‘std::vector<char>::insert(char&)’"
    },
    {
      "mod_line": [
        22,
        24
      ],
      "mod_code": [
        "if ( flag ) v [ 0 ] = ' B ' && dfs ( 1 ) ;",
        "v . push_back ( v ) ;"
      ],
      "err_line": 24,
      "err_msg": "no matching function for call to ‘std::vector<char>::push_back(std::vector<char>&)’"
    },
    {
      "mod_line": [
        23,
        24
      ],
      "mod_code": [
        "v . insert ( v [ 7 ] ) ;",
        "v . push_back ( v ) ;"
      ],
      "err_line": 23,
      "err_msg": "no matching function for call to ‘std::vector<char>::insert(char&)’"
    }
  ]
}