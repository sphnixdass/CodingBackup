{
  "meta": {
    "index": 1549,
    "hitid": "38VTL6WC4A7137H0WIWX0FDDEOM5YC",
    "workerid": "A1MJVTR0PCKBWW",
    "probid": "1003A",
    "subid": "41828055"
  },
  "lines": [
    {
      "line": 0,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 1,
      "text": "integer as n , a [ 1000 ] , i , j",
      "code": "int n , a [ 1000 ] , i , j ;",
      "indent": 1
    },
    {
      "line": 2,
      "text": "create memset with pointer a , value of 0 , and byte size of a",
      "code": "memset ( a , 0 , sizeof ( a ) ) ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "read n",
      "code": "cin >> n ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "for = 0 to less than n do the following",
      "code": "for ( i = 0 ; i < n ; i ++ )",
      "indent": 1
    },
    {
      "line": 5,
      "text": "read j",
      "code": "cin >> j ;",
      "indent": 2
    },
    {
      "line": 6,
      "text": "add one to a [ j ]",
      "code": "a [ j ] ++ ;",
      "indent": 2
    },
    {
      "line": 7,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 8,
      "text": "integer as m = - 999",
      "code": "int m = - 999 ;",
      "indent": 1
    },
    {
      "line": 9,
      "text": "for = 0 to less than 1000 do the following",
      "code": "for ( i = 0 ; i < 1000 ; i ++ )",
      "indent": 1
    },
    {
      "line": 10,
      "text": "if a [ i ] is greater than m then do the following m = a [ i ]",
      "code": "if ( a [ i ] > m ) { m = a [ i ] ; }",
      "indent": 2
    },
    {
      "line": 11,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 12,
      "text": "output m",
      "code": "cout << m << endl ;",
      "indent": 1
    },
    {
      "line": 13,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 14,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        2
      ],
      "mod_code": [
        "memset ( * a , 0 , sizeof ( a ) ) ;"
      ],
      "err_line": 2,
      "err_msg": "invalid conversion from ‘int’ to ‘void*’ [-fpermissive]"
    },
    {
      "mod_line": [
        5
      ],
      "mod_code": [
        "{ cin >> j ;"
      ],
      "err_line": 14,
      "err_msg": "expected ‘}’ at end of input"
    },
    {
      "mod_line": [
        6
      ],
      "mod_code": [
        "a [ j ] += one ;"
      ],
      "err_line": 6,
      "err_msg": "‘one’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        9
      ],
      "mod_code": [
        "a [ j ] += one ;",
        "for ( i = 0 ; i < 1000 ; j ++ )"
      ],
      "err_line": 6,
      "err_msg": "‘one’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        9,
        5
      ],
      "mod_code": [
        "a [ j ] += one ;",
        "for ( i = 0 ; i < 1000 ; j ++ )",
        "{ cin >> j ;"
      ],
      "err_line": 6,
      "err_msg": "‘one’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        9,
        5,
        2
      ],
      "mod_code": [
        "a [ j ] += one ;",
        "for ( i = 0 ; i < 1000 ; j ++ )",
        "{ cin >> j ;",
        "memset ( * a , 0 , sizeof ( a ) ) ;"
      ],
      "err_line": 2,
      "err_msg": "invalid conversion from ‘int’ to ‘void*’ [-fpermissive]"
    },
    {
      "mod_line": [
        6,
        9,
        2
      ],
      "mod_code": [
        "a [ j ] += one ;",
        "for ( i = 0 ; i < 1000 ; j ++ )",
        "memset ( * a , 0 , sizeof ( a ) ) ;"
      ],
      "err_line": 2,
      "err_msg": "invalid conversion from ‘int’ to ‘void*’ [-fpermissive]"
    },
    {
      "mod_line": [
        6,
        5
      ],
      "mod_code": [
        "a [ j ] += one ;",
        "{ cin >> j ;"
      ],
      "err_line": 6,
      "err_msg": "‘one’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        5,
        2
      ],
      "mod_code": [
        "a [ j ] += one ;",
        "{ cin >> j ;",
        "memset ( * a , 0 , sizeof ( a ) ) ;"
      ],
      "err_line": 2,
      "err_msg": "invalid conversion from ‘int’ to ‘void*’ [-fpermissive]"
    },
    {
      "mod_line": [
        6,
        2
      ],
      "mod_code": [
        "a [ j ] += one ;",
        "memset ( * a , 0 , sizeof ( a ) ) ;"
      ],
      "err_line": 2,
      "err_msg": "invalid conversion from ‘int’ to ‘void*’ [-fpermissive]"
    },
    {
      "mod_line": [
        9,
        5
      ],
      "mod_code": [
        "for ( i = 0 ; i < 1000 ; j ++ )",
        "{ cin >> j ;"
      ],
      "err_line": 14,
      "err_msg": "expected ‘}’ at end of input"
    },
    {
      "mod_line": [
        9,
        5,
        2
      ],
      "mod_code": [
        "for ( i = 0 ; i < 1000 ; j ++ )",
        "{ cin >> j ;",
        "memset ( * a , 0 , sizeof ( a ) ) ;"
      ],
      "err_line": 2,
      "err_msg": "invalid conversion from ‘int’ to ‘void*’ [-fpermissive]"
    },
    {
      "mod_line": [
        9,
        2
      ],
      "mod_code": [
        "for ( i = 0 ; i < 1000 ; j ++ )",
        "memset ( * a , 0 , sizeof ( a ) ) ;"
      ],
      "err_line": 2,
      "err_msg": "invalid conversion from ‘int’ to ‘void*’ [-fpermissive]"
    },
    {
      "mod_line": [
        5,
        2
      ],
      "mod_code": [
        "{ cin >> j ;",
        "memset ( * a , 0 , sizeof ( a ) ) ;"
      ],
      "err_line": 2,
      "err_msg": "invalid conversion from ‘int’ to ‘void*’ [-fpermissive]"
    }
  ]
}