{
  "meta": {
    "index": 2029,
    "hitid": "3WYZV0QBFJ7ESI8ZSW18KN6WMEDBXC",
    "workerid": "A1R0Q9CUUBSM5F",
    "probid": "1027A",
    "subid": "43740051"
  },
  "lines": [
    {
      "line": 0,
      "text": "declare proverka taking in chars s1 and s2 and returning bool",
      "code": "bool proverka ( char s1 , char s2 )",
      "indent": 0
    },
    {
      "line": 1,
      "text": "if abs ( s2 - s1 ) is equal to 2 or abs ( s2 - s1 ) is equal to 0",
      "code": "if ( abs ( s2 - s1 ) == 2 || abs ( s2 - s1 ) == 0 )",
      "indent": 1
    },
    {
      "line": 2,
      "text": "return true",
      "code": "return true ;",
      "indent": 2
    },
    {
      "line": 3,
      "text": "otherwise",
      "code": "else",
      "indent": 1
    },
    {
      "line": 4,
      "text": "return false",
      "code": "return false ;",
      "indent": 2
    },
    {
      "line": 5,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    },
    {
      "line": 6,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 7,
      "text": "make ints N , n , and k",
      "code": "int N , n , k ;",
      "indent": 1
    },
    {
      "line": 8,
      "text": "make string s",
      "code": "string s ;",
      "indent": 1
    },
    {
      "line": 9,
      "text": "read N",
      "code": "cin >> N ;",
      "indent": 1
    },
    {
      "line": 10,
      "text": "for i = 0 to N exclusive",
      "code": "for ( int i = 0 ; i < N ; i ++ )",
      "indent": 1
    },
    {
      "line": 11,
      "text": "read n",
      "code": "cin >> n ;",
      "indent": 2
    },
    {
      "line": 12,
      "text": "read s",
      "code": "cin >> s ;",
      "indent": 2
    },
    {
      "line": 13,
      "text": "set k to 1",
      "code": "k = 1 ;",
      "indent": 2
    },
    {
      "line": 14,
      "text": "for j = 0 to n / 2 exclusive",
      "code": "for ( int j = 0 ; j < n / 2 ; j ++ )",
      "indent": 2
    },
    {
      "line": 15,
      "text": "if proverka ( s [ j ] , s [ n - j - 1 ] ) returns false , set k to 0",
      "code": "if ( ! proverka ( s [ j ] , s [ n - j - 1 ] ) ) k = 0 ;",
      "indent": 3
    },
    {
      "line": 16,
      "text": "if k is truthy",
      "code": "if ( k )",
      "indent": 2
    },
    {
      "line": 17,
      "text": "print \" YES \"",
      "code": "cout << \" YES \" << endl ;",
      "indent": 3
    },
    {
      "line": 18,
      "text": "othewise do",
      "code": "else",
      "indent": 2
    },
    {
      "line": 19,
      "text": "show \" NO \"",
      "code": "cout << \" NO \" << endl ;",
      "indent": 3
    },
    {
      "line": 20,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 21,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        18
      ],
      "mod_code": [
        "do"
      ],
      "err_line": 20,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        3
      ],
      "mod_code": [
        "otherwise"
      ],
      "err_line": 3,
      "err_msg": "‘otherwise’ was not declared in this scope"
    },
    {
      "mod_line": [
        8
      ],
      "mod_code": [
        "string n ;"
      ],
      "err_line": 8,
      "err_msg": "conflicting declaration ‘std::__cxx11::string n’"
    },
    {
      "mod_line": [
        10
      ],
      "mod_code": [
        "for ( i = 0 ; i < N ; i ++ )"
      ],
      "err_line": 10,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        14
      ],
      "mod_code": [
        "for ( j = 0 ; j < n / 2 ; j ++ )"
      ],
      "err_line": 14,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        16
      ],
      "mod_code": [
        "if ( k ) k ++ ;"
      ],
      "err_line": 18,
      "err_msg": "‘else’ without a previous ‘if’"
    },
    {
      "mod_line": [
        18
      ],
      "mod_code": [
        "othewise ;"
      ],
      "err_line": 18,
      "err_msg": "‘othewise’ was not declared in this scope"
    },
    {
      "mod_line": [
        15,
        18
      ],
      "mod_code": [
        "if ( proverka ( s [ j ] , s [ n - j - 1 ] ) ) { k = 0 ; }",
        "do"
      ],
      "err_line": 20,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        15,
        18,
        3
      ],
      "mod_code": [
        "if ( proverka ( s [ j ] , s [ n - j - 1 ] ) ) { k = 0 ; }",
        "do",
        "otherwise"
      ],
      "err_line": 3,
      "err_msg": "‘otherwise’ was not declared in this scope"
    },
    {
      "mod_line": [
        15,
        18,
        3,
        12
      ],
      "mod_code": [
        "if ( proverka ( s [ j ] , s [ n - j - 1 ] ) ) { k = 0 ; }",
        "do",
        "otherwise",
        "cout << s << endl ;"
      ],
      "err_line": 3,
      "err_msg": "‘otherwise’ was not declared in this scope"
    },
    {
      "mod_line": [
        15,
        18,
        3,
        16
      ],
      "mod_code": [
        "if ( proverka ( s [ j ] , s [ n - j - 1 ] ) ) { k = 0 ; }",
        "do",
        "otherwise",
        "if ( k ) k ++ ;"
      ],
      "err_line": 3,
      "err_msg": "‘otherwise’ was not declared in this scope"
    },
    {
      "mod_line": [
        15,
        18,
        12
      ],
      "mod_code": [
        "if ( proverka ( s [ j ] , s [ n - j - 1 ] ) ) { k = 0 ; }",
        "do",
        "cout << s << endl ;"
      ],
      "err_line": 20,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        15,
        18,
        12,
        16
      ],
      "mod_code": [
        "if ( proverka ( s [ j ] , s [ n - j - 1 ] ) ) { k = 0 ; }",
        "do",
        "cout << s << endl ;",
        "if ( k ) k ++ ;"
      ],
      "err_line": 20,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        15,
        18,
        16
      ],
      "mod_code": [
        "if ( proverka ( s [ j ] , s [ n - j - 1 ] ) ) { k = 0 ; }",
        "do",
        "if ( k ) k ++ ;"
      ],
      "err_line": 20,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        15,
        3
      ],
      "mod_code": [
        "if ( proverka ( s [ j ] , s [ n - j - 1 ] ) ) { k = 0 ; }",
        "otherwise"
      ],
      "err_line": 3,
      "err_msg": "‘otherwise’ was not declared in this scope"
    },
    {
      "mod_line": [
        15,
        3,
        12
      ],
      "mod_code": [
        "if ( proverka ( s [ j ] , s [ n - j - 1 ] ) ) { k = 0 ; }",
        "otherwise",
        "cout << s << endl ;"
      ],
      "err_line": 3,
      "err_msg": "‘otherwise’ was not declared in this scope"
    },
    {
      "mod_line": [
        15,
        3,
        12,
        16
      ],
      "mod_code": [
        "if ( proverka ( s [ j ] , s [ n - j - 1 ] ) ) { k = 0 ; }",
        "otherwise",
        "cout << s << endl ;",
        "if ( k ) k ++ ;"
      ],
      "err_line": 3,
      "err_msg": "‘otherwise’ was not declared in this scope"
    },
    {
      "mod_line": [
        15,
        3,
        16
      ],
      "mod_code": [
        "if ( proverka ( s [ j ] , s [ n - j - 1 ] ) ) { k = 0 ; }",
        "otherwise",
        "if ( k ) k ++ ;"
      ],
      "err_line": 3,
      "err_msg": "‘otherwise’ was not declared in this scope"
    },
    {
      "mod_line": [
        15,
        12,
        16
      ],
      "mod_code": [
        "if ( proverka ( s [ j ] , s [ n - j - 1 ] ) ) { k = 0 ; }",
        "cout << s << endl ;",
        "if ( k ) k ++ ;"
      ],
      "err_line": 18,
      "err_msg": "‘else’ without a previous ‘if’"
    },
    {
      "mod_line": [
        15,
        16
      ],
      "mod_code": [
        "if ( proverka ( s [ j ] , s [ n - j - 1 ] ) ) { k = 0 ; }",
        "if ( k ) k ++ ;"
      ],
      "err_line": 18,
      "err_msg": "‘else’ without a previous ‘if’"
    },
    {
      "mod_line": [
        18,
        3
      ],
      "mod_code": [
        "do",
        "otherwise"
      ],
      "err_line": 3,
      "err_msg": "‘otherwise’ was not declared in this scope"
    },
    {
      "mod_line": [
        18,
        3,
        12
      ],
      "mod_code": [
        "do",
        "otherwise",
        "cout << s << endl ;"
      ],
      "err_line": 3,
      "err_msg": "‘otherwise’ was not declared in this scope"
    },
    {
      "mod_line": [
        18,
        3,
        12,
        15
      ],
      "mod_code": [
        "do",
        "otherwise",
        "cout << s << endl ;",
        "if ( proverka ( s [ j ] , s [ n - j - 1 ] ) ) k = 0 ;"
      ],
      "err_line": 3,
      "err_msg": "‘otherwise’ was not declared in this scope"
    },
    {
      "mod_line": [
        18,
        3,
        12,
        16
      ],
      "mod_code": [
        "do",
        "otherwise",
        "cout << s << endl ;",
        "if ( k ) k ++ ;"
      ],
      "err_line": 3,
      "err_msg": "‘otherwise’ was not declared in this scope"
    },
    {
      "mod_line": [
        18,
        3,
        15
      ],
      "mod_code": [
        "do",
        "otherwise",
        "if ( proverka ( s [ j ] , s [ n - j - 1 ] ) ) k = 0 ;"
      ],
      "err_line": 3,
      "err_msg": "‘otherwise’ was not declared in this scope"
    },
    {
      "mod_line": [
        18,
        3,
        15,
        16
      ],
      "mod_code": [
        "do",
        "otherwise",
        "if ( proverka ( s [ j ] , s [ n - j - 1 ] ) ) k = 0 ;",
        "if ( k ) k ++ ;"
      ],
      "err_line": 3,
      "err_msg": "‘otherwise’ was not declared in this scope"
    },
    {
      "mod_line": [
        18,
        3,
        16
      ],
      "mod_code": [
        "do",
        "otherwise",
        "if ( k ) k ++ ;"
      ],
      "err_line": 3,
      "err_msg": "‘otherwise’ was not declared in this scope"
    },
    {
      "mod_line": [
        18,
        12
      ],
      "mod_code": [
        "do",
        "cout << s << endl ;"
      ],
      "err_line": 20,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        18,
        12,
        15
      ],
      "mod_code": [
        "do",
        "cout << s << endl ;",
        "if ( proverka ( s [ j ] , s [ n - j - 1 ] ) ) k = 0 ;"
      ],
      "err_line": 20,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        18,
        12,
        15,
        16
      ],
      "mod_code": [
        "do",
        "cout << s << endl ;",
        "if ( proverka ( s [ j ] , s [ n - j - 1 ] ) ) k = 0 ;",
        "if ( k ) k ++ ;"
      ],
      "err_line": 20,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        18,
        12,
        16
      ],
      "mod_code": [
        "do",
        "cout << s << endl ;",
        "if ( k ) k ++ ;"
      ],
      "err_line": 20,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        18,
        15
      ],
      "mod_code": [
        "do",
        "if ( proverka ( s [ j ] , s [ n - j - 1 ] ) ) k = 0 ;"
      ],
      "err_line": 20,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        18,
        15,
        16
      ],
      "mod_code": [
        "do",
        "if ( proverka ( s [ j ] , s [ n - j - 1 ] ) ) k = 0 ;",
        "if ( k ) k ++ ;"
      ],
      "err_line": 20,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        18,
        16
      ],
      "mod_code": [
        "do",
        "if ( k ) k ++ ;"
      ],
      "err_line": 20,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        3,
        12
      ],
      "mod_code": [
        "otherwise",
        "cout << s << endl ;"
      ],
      "err_line": 3,
      "err_msg": "‘otherwise’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        12,
        15
      ],
      "mod_code": [
        "otherwise",
        "cout << s << endl ;",
        "if ( proverka ( s [ j ] , s [ n - j - 1 ] ) ) k = 0 ;"
      ],
      "err_line": 3,
      "err_msg": "‘otherwise’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        12,
        15,
        16
      ],
      "mod_code": [
        "otherwise",
        "cout << s << endl ;",
        "if ( proverka ( s [ j ] , s [ n - j - 1 ] ) ) k = 0 ;",
        "if ( k ) k ++ ;"
      ],
      "err_line": 3,
      "err_msg": "‘otherwise’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        12,
        16
      ],
      "mod_code": [
        "otherwise",
        "cout << s << endl ;",
        "if ( k ) k ++ ;"
      ],
      "err_line": 3,
      "err_msg": "‘otherwise’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        15
      ],
      "mod_code": [
        "otherwise",
        "if ( proverka ( s [ j ] , s [ n - j - 1 ] ) ) k = 0 ;"
      ],
      "err_line": 3,
      "err_msg": "‘otherwise’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        15,
        16
      ],
      "mod_code": [
        "otherwise",
        "if ( proverka ( s [ j ] , s [ n - j - 1 ] ) ) k = 0 ;",
        "if ( k ) k ++ ;"
      ],
      "err_line": 3,
      "err_msg": "‘otherwise’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        16
      ],
      "mod_code": [
        "otherwise",
        "if ( k ) k ++ ;"
      ],
      "err_line": 3,
      "err_msg": "‘otherwise’ was not declared in this scope"
    },
    {
      "mod_line": [
        12,
        15,
        16
      ],
      "mod_code": [
        "cout << s << endl ;",
        "if ( proverka ( s [ j ] , s [ n - j - 1 ] ) ) k = 0 ;",
        "if ( k ) k ++ ;"
      ],
      "err_line": 18,
      "err_msg": "‘else’ without a previous ‘if’"
    },
    {
      "mod_line": [
        12,
        16
      ],
      "mod_code": [
        "cout << s << endl ;",
        "if ( k ) k ++ ;"
      ],
      "err_line": 18,
      "err_msg": "‘else’ without a previous ‘if’"
    },
    {
      "mod_line": [
        15,
        16
      ],
      "mod_code": [
        "if ( proverka ( s [ j ] , s [ n - j - 1 ] ) ) k = 0 ;",
        "if ( k ) k ++ ;"
      ],
      "err_line": 18,
      "err_msg": "‘else’ without a previous ‘if’"
    }
  ]
}