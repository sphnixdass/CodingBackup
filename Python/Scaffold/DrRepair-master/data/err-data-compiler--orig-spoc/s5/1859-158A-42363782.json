{
  "meta": {
    "index": 1859,
    "hitid": "3M0556243SEZT56BVS0V5B6JZYRFNA",
    "workerid": "A1APYLD4DUK33J",
    "probid": "158A",
    "subid": "42363782"
  },
  "lines": [
    {
      "line": 0,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 1,
      "text": "declare integers n , k , i , c = 0 , integer array A size 110",
      "code": "int n , k , i , A [ 110 ] , c = 0 ;",
      "indent": 1
    },
    {
      "line": 2,
      "text": "read n and k",
      "code": "cin >> n >> k ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "for i = 1 to n inclusive , read A [ i ]",
      "code": "for ( i = 1 ; i <= n ; i ++ ) { cin >> A [ i ] ; }",
      "indent": 1
    },
    {
      "line": 4,
      "text": "for i = 1 to n inclusive",
      "code": "for ( i = 1 ; i <= n ; i ++ )",
      "indent": 1
    },
    {
      "line": 5,
      "text": "if A [ i ] is greater than or equal to A [ k ] ] and A [ i ] is greater than 0 , increment c",
      "code": "if ( A [ i ] >= A [ k ] && A [ i ] > 0 ) { c ++ ; }",
      "indent": 2
    },
    {
      "line": 6,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 7,
      "text": "print c and newline",
      "code": "cout << c << endl ;",
      "indent": 1
    },
    {
      "line": 8,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 9,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        1
      ],
      "mod_code": [
        "int n , k , i , c = 0 , c = 0 ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int c’"
    },
    {
      "mod_line": [
        5
      ],
      "mod_code": [
        "if ( A [ i ] >= A [ k ] ] && A [ i ] > 0 ) c ++ ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘)’ before ‘]’ token"
    },
    {
      "mod_line": [
        5
      ],
      "mod_code": [
        "if ( A [ i ] >= A [ k ] ] && A [ i ] > 0 ) { c ++ ; }"
      ],
      "err_line": 5,
      "err_msg": "expected ‘)’ before ‘]’ token"
    },
    {
      "mod_line": [
        1,
        5
      ],
      "mod_code": [
        "int n , k , i , c = 0 , c = 0 ;",
        "if ( A [ i ] >= A [ k ] ] && A [ i ] > 0 ) c ++ ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int c’"
    },
    {
      "mod_line": [
        1,
        5,
        2
      ],
      "mod_code": [
        "int n , k , i , c = 0 , c = 0 ;",
        "if ( A [ i ] >= A [ k ] ] && A [ i ] > 0 ) c ++ ;",
        "cin >> n and k ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int c’"
    },
    {
      "mod_line": [
        1,
        2
      ],
      "mod_code": [
        "int n , k , i , c = 0 , c = 0 ;",
        "cin >> n and k ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int c’"
    },
    {
      "mod_line": [
        1,
        2,
        5
      ],
      "mod_code": [
        "int n , k , i , c = 0 , c = 0 ;",
        "cin >> n and k ;",
        "if ( A [ i ] >= A [ k ] ] && A [ i ] > 0 ) { c ++ ; }"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int c’"
    },
    {
      "mod_line": [
        1,
        5
      ],
      "mod_code": [
        "int n , k , i , c = 0 , c = 0 ;",
        "if ( A [ i ] >= A [ k ] ] && A [ i ] > 0 ) { c ++ ; }"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int c’"
    },
    {
      "mod_line": [
        5,
        2
      ],
      "mod_code": [
        "if ( A [ i ] >= A [ k ] ] && A [ i ] > 0 ) c ++ ;",
        "cin >> n and k ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘)’ before ‘]’ token"
    },
    {
      "mod_line": [
        2,
        5
      ],
      "mod_code": [
        "cin >> n and k ;",
        "if ( A [ i ] >= A [ k ] ] && A [ i ] > 0 ) { c ++ ; }"
      ],
      "err_line": 5,
      "err_msg": "expected ‘)’ before ‘]’ token"
    }
  ]
}