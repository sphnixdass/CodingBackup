{
  "meta": {
    "index": 31,
    "hitid": "3ZG552ORAMYS0G389O7FV967CXQV2P",
    "workerid": "A1AYVATMT88U1W",
    "probid": "214A",
    "subid": "40990895"
  },
  "lines": [
    {
      "line": 0,
      "text": "let m , n , a , b be integers",
      "code": "int m , n , a , b ;",
      "indent": 0
    },
    {
      "line": 1,
      "text": "let fit be a integer function",
      "code": "int fit ( )",
      "indent": 0
    },
    {
      "line": 2,
      "text": "let f1 , f2 be integers with f1 = a * a + b , f2 = a + b * b",
      "code": "int f1 = a * a + b , f2 = a + b * b ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "if f1 is equal to n and f2 is equal to m",
      "code": "if ( f1 == n && f2 == m )",
      "indent": 1
    },
    {
      "line": 4,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 2
    },
    {
      "line": 5,
      "text": "else if f1 is greater than n",
      "code": "else if ( f1 > n )",
      "indent": 1
    },
    {
      "line": 6,
      "text": "return 1",
      "code": "return 1 ;",
      "indent": 2
    },
    {
      "line": 7,
      "text": "else if f2 is greater than m",
      "code": "else if ( f2 > m )",
      "indent": 1
    },
    {
      "line": 8,
      "text": "return 1",
      "code": "return 1 ;",
      "indent": 2
    },
    {
      "line": 9,
      "text": "return - 1",
      "code": "return - 1 ;",
      "indent": 1
    },
    {
      "line": 10,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    },
    {
      "line": 11,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 12,
      "text": "read n , m",
      "code": "cin >> n >> m ;",
      "indent": 1
    },
    {
      "line": 13,
      "text": "let cnt be a integer with cnt = 0",
      "code": "int cnt = 0 ;",
      "indent": 1
    },
    {
      "line": 14,
      "text": "for a = 0 to 31 inclusive",
      "code": "for ( a = 0 ; a <= 31 ; a ++ )",
      "indent": 1
    },
    {
      "line": 15,
      "text": "for b = 0 to 31 inclusive",
      "code": "for ( b = 0 ; b <= 31 ; b ++ )",
      "indent": 2
    },
    {
      "line": 16,
      "text": "if fit ( ) is equal to 0",
      "code": "if ( fit ( ) == 0 )",
      "indent": 3
    },
    {
      "line": 17,
      "text": "increment cnt by 1",
      "code": "cnt ++ ;",
      "indent": 4
    },
    {
      "line": 18,
      "text": "else if fit ( ) is equal to 1",
      "code": "else if ( fit ( ) == 1 )",
      "indent": 3
    },
    {
      "line": 19,
      "text": "stop",
      "code": "break ;",
      "indent": 4
    },
    {
      "line": 20,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 21,
      "text": "print cnt and newline",
      "code": "cout << cnt << endl ;",
      "indent": 1
    },
    {
      "line": 22,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 23,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        1
      ],
      "mod_code": [
        "int fit ( int s ) ;"
      ],
      "err_line": 2,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        2
      ],
      "mod_code": [
        "int f1 = a * a + b , f2 += b * b ;"
      ],
      "err_line": 2,
      "err_msg": "expected initializer before ‘+=’ token"
    },
    {
      "mod_line": [
        19
      ],
      "mod_code": [
        "stop ;"
      ],
      "err_line": 19,
      "err_msg": "‘stop’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        15,
        9,
        2
      ],
      "mod_code": [
        "for ( int a = 0 ; a <= 31 ; a ++ )",
        "for ( int b = 0 ; b <= 31 ; b ++ )",
        "return 1 ;",
        "int f1 = a * a + b , f2 += b * b ;"
      ],
      "err_line": 2,
      "err_msg": "expected initializer before ‘+=’ token"
    },
    {
      "mod_line": [
        14,
        15,
        9,
        1
      ],
      "mod_code": [
        "for ( int a = 0 ; a <= 31 ; a ++ )",
        "for ( int b = 0 ; b <= 31 ; b ++ )",
        "return 1 ;",
        "int fit ( int s ) ;"
      ],
      "err_line": 2,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        14,
        15,
        18,
        2
      ],
      "mod_code": [
        "for ( int a = 0 ; a <= 31 ; a ++ )",
        "for ( int b = 0 ; b <= 31 ; b ++ )",
        "else if ( fit ( ) )",
        "int f1 = a * a + b , f2 += b * b ;"
      ],
      "err_line": 2,
      "err_msg": "expected initializer before ‘+=’ token"
    },
    {
      "mod_line": [
        14,
        15,
        18,
        1
      ],
      "mod_code": [
        "for ( int a = 0 ; a <= 31 ; a ++ )",
        "for ( int b = 0 ; b <= 31 ; b ++ )",
        "else if ( fit ( ) )",
        "int fit ( int s ) ;"
      ],
      "err_line": 2,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        14,
        15,
        2
      ],
      "mod_code": [
        "for ( int a = 0 ; a <= 31 ; a ++ )",
        "for ( int b = 0 ; b <= 31 ; b ++ )",
        "int f1 = a * a + b , f2 += b * b ;"
      ],
      "err_line": 2,
      "err_msg": "expected initializer before ‘+=’ token"
    },
    {
      "mod_line": [
        14,
        15,
        2,
        1
      ],
      "mod_code": [
        "for ( int a = 0 ; a <= 31 ; a ++ )",
        "for ( int b = 0 ; b <= 31 ; b ++ )",
        "int f1 = a * a + b , f2 += b * b ;",
        "int fit ( int s ) ;"
      ],
      "err_line": 2,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        14,
        15,
        1
      ],
      "mod_code": [
        "for ( int a = 0 ; a <= 31 ; a ++ )",
        "for ( int b = 0 ; b <= 31 ; b ++ )",
        "int fit ( int s ) ;"
      ],
      "err_line": 2,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        14,
        9,
        18,
        2
      ],
      "mod_code": [
        "for ( int a = 0 ; a <= 31 ; a ++ )",
        "return 1 ;",
        "else if ( fit ( ) )",
        "int f1 = a * a + b , f2 += b * b ;"
      ],
      "err_line": 2,
      "err_msg": "expected initializer before ‘+=’ token"
    },
    {
      "mod_line": [
        14,
        9,
        18,
        1
      ],
      "mod_code": [
        "for ( int a = 0 ; a <= 31 ; a ++ )",
        "return 1 ;",
        "else if ( fit ( ) )",
        "int fit ( int s ) ;"
      ],
      "err_line": 2,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        14,
        9,
        2
      ],
      "mod_code": [
        "for ( int a = 0 ; a <= 31 ; a ++ )",
        "return 1 ;",
        "int f1 = a * a + b , f2 += b * b ;"
      ],
      "err_line": 2,
      "err_msg": "expected initializer before ‘+=’ token"
    },
    {
      "mod_line": [
        14,
        9,
        2,
        1
      ],
      "mod_code": [
        "for ( int a = 0 ; a <= 31 ; a ++ )",
        "return 1 ;",
        "int f1 = a * a + b , f2 += b * b ;",
        "int fit ( int s ) ;"
      ],
      "err_line": 2,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        14,
        9,
        1
      ],
      "mod_code": [
        "for ( int a = 0 ; a <= 31 ; a ++ )",
        "return 1 ;",
        "int fit ( int s ) ;"
      ],
      "err_line": 2,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        14,
        18,
        2
      ],
      "mod_code": [
        "for ( int a = 0 ; a <= 31 ; a ++ )",
        "else if ( fit ( ) )",
        "int f1 = a * a + b , f2 += b * b ;"
      ],
      "err_line": 2,
      "err_msg": "expected initializer before ‘+=’ token"
    },
    {
      "mod_line": [
        14,
        18,
        2,
        1
      ],
      "mod_code": [
        "for ( int a = 0 ; a <= 31 ; a ++ )",
        "else if ( fit ( ) )",
        "int f1 = a * a + b , f2 += b * b ;",
        "int fit ( int s ) ;"
      ],
      "err_line": 2,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        14,
        18,
        1
      ],
      "mod_code": [
        "for ( int a = 0 ; a <= 31 ; a ++ )",
        "else if ( fit ( ) )",
        "int fit ( int s ) ;"
      ],
      "err_line": 2,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        14,
        2
      ],
      "mod_code": [
        "for ( int a = 0 ; a <= 31 ; a ++ )",
        "int f1 = a * a + b , f2 += b * b ;"
      ],
      "err_line": 2,
      "err_msg": "expected initializer before ‘+=’ token"
    },
    {
      "mod_line": [
        14,
        2,
        1
      ],
      "mod_code": [
        "for ( int a = 0 ; a <= 31 ; a ++ )",
        "int f1 = a * a + b , f2 += b * b ;",
        "int fit ( int s ) ;"
      ],
      "err_line": 2,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        14,
        1
      ],
      "mod_code": [
        "for ( int a = 0 ; a <= 31 ; a ++ )",
        "int fit ( int s ) ;"
      ],
      "err_line": 2,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        15,
        9,
        18,
        2
      ],
      "mod_code": [
        "for ( int b = 0 ; b <= 31 ; b ++ )",
        "return 1 ;",
        "else if ( fit ( ) )",
        "int f1 = a * a + b , f2 += b * b ;"
      ],
      "err_line": 2,
      "err_msg": "expected initializer before ‘+=’ token"
    },
    {
      "mod_line": [
        15,
        9,
        18,
        1
      ],
      "mod_code": [
        "for ( int b = 0 ; b <= 31 ; b ++ )",
        "return 1 ;",
        "else if ( fit ( ) )",
        "int fit ( int s ) ;"
      ],
      "err_line": 2,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        15,
        9,
        2
      ],
      "mod_code": [
        "for ( int b = 0 ; b <= 31 ; b ++ )",
        "return 1 ;",
        "int f1 = a * a + b , f2 += b * b ;"
      ],
      "err_line": 2,
      "err_msg": "expected initializer before ‘+=’ token"
    },
    {
      "mod_line": [
        15,
        9,
        2,
        1
      ],
      "mod_code": [
        "for ( int b = 0 ; b <= 31 ; b ++ )",
        "return 1 ;",
        "int f1 = a * a + b , f2 += b * b ;",
        "int fit ( int s ) ;"
      ],
      "err_line": 2,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        15,
        9,
        1
      ],
      "mod_code": [
        "for ( int b = 0 ; b <= 31 ; b ++ )",
        "return 1 ;",
        "int fit ( int s ) ;"
      ],
      "err_line": 2,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        15,
        18,
        2
      ],
      "mod_code": [
        "for ( int b = 0 ; b <= 31 ; b ++ )",
        "else if ( fit ( ) )",
        "int f1 = a * a + b , f2 += b * b ;"
      ],
      "err_line": 2,
      "err_msg": "expected initializer before ‘+=’ token"
    },
    {
      "mod_line": [
        15,
        18,
        2,
        1
      ],
      "mod_code": [
        "for ( int b = 0 ; b <= 31 ; b ++ )",
        "else if ( fit ( ) )",
        "int f1 = a * a + b , f2 += b * b ;",
        "int fit ( int s ) ;"
      ],
      "err_line": 2,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        15,
        18,
        1
      ],
      "mod_code": [
        "for ( int b = 0 ; b <= 31 ; b ++ )",
        "else if ( fit ( ) )",
        "int fit ( int s ) ;"
      ],
      "err_line": 2,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        15,
        2
      ],
      "mod_code": [
        "for ( int b = 0 ; b <= 31 ; b ++ )",
        "int f1 = a * a + b , f2 += b * b ;"
      ],
      "err_line": 2,
      "err_msg": "expected initializer before ‘+=’ token"
    },
    {
      "mod_line": [
        15,
        2,
        1
      ],
      "mod_code": [
        "for ( int b = 0 ; b <= 31 ; b ++ )",
        "int f1 = a * a + b , f2 += b * b ;",
        "int fit ( int s ) ;"
      ],
      "err_line": 2,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        15,
        1
      ],
      "mod_code": [
        "for ( int b = 0 ; b <= 31 ; b ++ )",
        "int fit ( int s ) ;"
      ],
      "err_line": 2,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        9,
        18,
        2
      ],
      "mod_code": [
        "return 1 ;",
        "else if ( fit ( ) )",
        "int f1 = a * a + b , f2 += b * b ;"
      ],
      "err_line": 2,
      "err_msg": "expected initializer before ‘+=’ token"
    },
    {
      "mod_line": [
        9,
        18,
        2,
        1
      ],
      "mod_code": [
        "return 1 ;",
        "else if ( fit ( ) )",
        "int f1 = a * a + b , f2 += b * b ;",
        "int fit ( int s ) ;"
      ],
      "err_line": 2,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        9,
        18,
        1
      ],
      "mod_code": [
        "return 1 ;",
        "else if ( fit ( ) )",
        "int fit ( int s ) ;"
      ],
      "err_line": 2,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        9,
        2
      ],
      "mod_code": [
        "return 1 ;",
        "int f1 = a * a + b , f2 += b * b ;"
      ],
      "err_line": 2,
      "err_msg": "expected initializer before ‘+=’ token"
    },
    {
      "mod_line": [
        9,
        2,
        1
      ],
      "mod_code": [
        "return 1 ;",
        "int f1 = a * a + b , f2 += b * b ;",
        "int fit ( int s ) ;"
      ],
      "err_line": 2,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        9,
        1
      ],
      "mod_code": [
        "return 1 ;",
        "int fit ( int s ) ;"
      ],
      "err_line": 2,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        18,
        2
      ],
      "mod_code": [
        "else if ( fit ( ) )",
        "int f1 = a * a + b , f2 += b * b ;"
      ],
      "err_line": 2,
      "err_msg": "expected initializer before ‘+=’ token"
    },
    {
      "mod_line": [
        18,
        2,
        1
      ],
      "mod_code": [
        "else if ( fit ( ) )",
        "int f1 = a * a + b , f2 += b * b ;",
        "int fit ( int s ) ;"
      ],
      "err_line": 2,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        18,
        1
      ],
      "mod_code": [
        "else if ( fit ( ) )",
        "int fit ( int s ) ;"
      ],
      "err_line": 2,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        2,
        1
      ],
      "mod_code": [
        "int f1 = a * a + b , f2 += b * b ;",
        "int fit ( int s ) ;"
      ],
      "err_line": 2,
      "err_msg": "expected unqualified-id before ‘{’ token"
    }
  ]
}