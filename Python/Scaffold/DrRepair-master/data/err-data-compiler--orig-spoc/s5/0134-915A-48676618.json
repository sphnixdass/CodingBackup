{
  "meta": {
    "index": 134,
    "hitid": "324N5FAHSX5NHW7YYUDJV5S1TXCKV0",
    "workerid": "AIWEXPJAU66D9",
    "probid": "915A",
    "subid": "48676618"
  },
  "lines": [
    {
      "line": 0,
      "text": "cmp is a bool function with int arguments a and b",
      "code": "bool cmp ( int a , int b )",
      "indent": 0
    },
    {
      "line": 1,
      "text": "return true if a > b , or else otherwise",
      "code": "return a > b ;",
      "indent": 1
    },
    {
      "line": 2,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    },
    {
      "line": 3,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 4,
      "text": "declare new integers n and k",
      "code": "int n , k ;",
      "indent": 1
    },
    {
      "line": 5,
      "text": "read user input to n and k",
      "code": "cin >> n >> k ;",
      "indent": 1
    },
    {
      "line": 6,
      "text": "declare new int i and int array a with n + 1 elements",
      "code": "int a [ n + 1 ] , i ;",
      "indent": 1
    },
    {
      "line": 7,
      "text": "read n elements into a , starting from the index 1",
      "code": "for ( i = 1 ; i <= n ; i ++ ) { cin >> a [ i ] ; }",
      "indent": 1
    },
    {
      "line": 8,
      "text": "sort a from element 1 to n + 1 , using cmp as a comparator function",
      "code": "sort ( a + 1 , a + n + 1 , cmp ) ;",
      "indent": 1
    },
    {
      "line": 9,
      "text": "start for loop from i = 1 to n inclusive incrementing i",
      "code": "for ( i = 1 ; i <= n ; i ++ )",
      "indent": 1
    },
    {
      "line": 10,
      "text": "if k % a [ i ] = 0",
      "code": "if ( k % a [ i ] == 0 )",
      "indent": 2
    },
    {
      "line": 11,
      "text": "print k / a [ i ]",
      "code": "cout << k / a [ i ] << endl ;",
      "indent": 3
    },
    {
      "line": 12,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 3
    },
    {
      "line": 13,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 14,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 15,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 16,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        0
      ],
      "mod_code": [
        "bool cmp ( int a , int b ) ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        5
      ],
      "mod_code": [
        "int n , k ;"
      ],
      "err_line": 5,
      "err_msg": "redeclaration of ‘int n’"
    },
    {
      "mod_line": [
        6
      ],
      "mod_code": [
        "int a [ n + 1 ] = { } ;"
      ],
      "err_line": 7,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        0,
        11
      ],
      "mod_code": [
        "bool cmp ( int a , int b ) ;",
        "cout << k / a [ i ] ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        0,
        11,
        6
      ],
      "mod_code": [
        "bool cmp ( int a , int b ) ;",
        "cout << k / a [ i ] ;",
        "int a [ n + 1 ] = { } ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        0,
        11,
        6,
        5
      ],
      "mod_code": [
        "bool cmp ( int a , int b ) ;",
        "cout << k / a [ i ] ;",
        "int a [ n + 1 ] = { } ;",
        "int n , k ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        0,
        11,
        5
      ],
      "mod_code": [
        "bool cmp ( int a , int b ) ;",
        "cout << k / a [ i ] ;",
        "int n , k ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        0,
        6
      ],
      "mod_code": [
        "bool cmp ( int a , int b ) ;",
        "int a [ n + 1 ] = { } ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        0,
        6,
        5
      ],
      "mod_code": [
        "bool cmp ( int a , int b ) ;",
        "int a [ n + 1 ] = { } ;",
        "int n , k ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        0,
        5
      ],
      "mod_code": [
        "bool cmp ( int a , int b ) ;",
        "int n , k ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        11,
        6
      ],
      "mod_code": [
        "cout << k / a [ i ] ;",
        "int a [ n + 1 ] = { } ;"
      ],
      "err_line": 7,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        11,
        6,
        5
      ],
      "mod_code": [
        "cout << k / a [ i ] ;",
        "int a [ n + 1 ] = { } ;",
        "int n , k ;"
      ],
      "err_line": 5,
      "err_msg": "redeclaration of ‘int n’"
    },
    {
      "mod_line": [
        11,
        5
      ],
      "mod_code": [
        "cout << k / a [ i ] ;",
        "int n , k ;"
      ],
      "err_line": 5,
      "err_msg": "redeclaration of ‘int n’"
    },
    {
      "mod_line": [
        6,
        5
      ],
      "mod_code": [
        "int a [ n + 1 ] = { } ;",
        "int n , k ;"
      ],
      "err_line": 5,
      "err_msg": "redeclaration of ‘int n’"
    }
  ]
}