{
  "meta": {
    "index": 16,
    "hitid": "3J94SKDEKIJY5WM90M9JNU3CW0DD59",
    "workerid": "A2QLFQ2ZYR6B7M",
    "probid": "214A",
    "subid": "40926815"
  },
  "lines": [
    {
      "line": 0,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 1,
      "text": "n , m , i , a , b = int , cnt = 0",
      "code": "int n , m , i , a , b , cnt = 0 ;",
      "indent": 1
    },
    {
      "line": 2,
      "text": "read n , m",
      "code": "cin >> n >> m ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "i = 0",
      "code": "i = 0 ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "while i < = sqrt ( n )",
      "code": "while ( i <= sqrt ( n ) )",
      "indent": 1
    },
    {
      "line": 5,
      "text": "a = i",
      "code": "a = i ;",
      "indent": 2
    },
    {
      "line": 6,
      "text": "b = n - ( a * a )",
      "code": "b = n - ( a * a ) ;",
      "indent": 2
    },
    {
      "line": 7,
      "text": "if b > = 0",
      "code": "if ( b >= 0 )",
      "indent": 2
    },
    {
      "line": 8,
      "text": "if a + b * b is m increment cnt",
      "code": "if ( ( a + ( b * b ) ) == m ) cnt ++ ;",
      "indent": 3
    },
    {
      "line": 9,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 10,
      "text": "increment i",
      "code": "i ++ ;",
      "indent": 2
    },
    {
      "line": 11,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 12,
      "text": "print cnt",
      "code": "cout << cnt << endl ;",
      "indent": 1
    },
    {
      "line": 13,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 14,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        1
      ],
      "mod_code": [
        "int n , m , i , a , cnt = 0 , cnt = 0 ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int cnt’"
    },
    {
      "mod_line": [
        3
      ],
      "mod_code": [
        "int i = 0 ;"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘int i’"
    },
    {
      "mod_line": [
        1,
        12
      ],
      "mod_code": [
        "int n , m , i , a , cnt = 0 , cnt = 0 ;",
        "cout << cnt ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int cnt’"
    },
    {
      "mod_line": [
        1,
        12,
        7
      ],
      "mod_code": [
        "int n , m , i , a , cnt = 0 , cnt = 0 ;",
        "cout << cnt ;",
        "if ( b <= 0 )"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int cnt’"
    },
    {
      "mod_line": [
        1,
        12,
        7,
        3
      ],
      "mod_code": [
        "int n , m , i , a , cnt = 0 , cnt = 0 ;",
        "cout << cnt ;",
        "if ( b <= 0 )",
        "int i = 0 ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int cnt’"
    },
    {
      "mod_line": [
        1,
        12,
        7,
        4
      ],
      "mod_code": [
        "int n , m , i , a , cnt = 0 , cnt = 0 ;",
        "cout << cnt ;",
        "if ( b <= 0 )",
        "while ( i <= sqrt ( n ) ) ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int cnt’"
    },
    {
      "mod_line": [
        1,
        12,
        7,
        6
      ],
      "mod_code": [
        "int n , m , i , a , cnt = 0 , cnt = 0 ;",
        "cout << cnt ;",
        "if ( b <= 0 )",
        "b -= ( a * a ) ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int cnt’"
    },
    {
      "mod_line": [
        1,
        12,
        3
      ],
      "mod_code": [
        "int n , m , i , a , cnt = 0 , cnt = 0 ;",
        "cout << cnt ;",
        "int i = 0 ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int cnt’"
    },
    {
      "mod_line": [
        1,
        12,
        3,
        4
      ],
      "mod_code": [
        "int n , m , i , a , cnt = 0 , cnt = 0 ;",
        "cout << cnt ;",
        "int i = 0 ;",
        "while ( i <= sqrt ( n ) ) ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int cnt’"
    },
    {
      "mod_line": [
        1,
        12,
        3,
        6
      ],
      "mod_code": [
        "int n , m , i , a , cnt = 0 , cnt = 0 ;",
        "cout << cnt ;",
        "int i = 0 ;",
        "b -= ( a * a ) ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int cnt’"
    },
    {
      "mod_line": [
        1,
        12,
        4
      ],
      "mod_code": [
        "int n , m , i , a , cnt = 0 , cnt = 0 ;",
        "cout << cnt ;",
        "while ( i <= sqrt ( n ) ) ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int cnt’"
    },
    {
      "mod_line": [
        1,
        12,
        4,
        6
      ],
      "mod_code": [
        "int n , m , i , a , cnt = 0 , cnt = 0 ;",
        "cout << cnt ;",
        "while ( i <= sqrt ( n ) ) ;",
        "b -= ( a * a ) ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int cnt’"
    },
    {
      "mod_line": [
        1,
        12,
        6
      ],
      "mod_code": [
        "int n , m , i , a , cnt = 0 , cnt = 0 ;",
        "cout << cnt ;",
        "b -= ( a * a ) ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int cnt’"
    },
    {
      "mod_line": [
        1,
        7
      ],
      "mod_code": [
        "int n , m , i , a , cnt = 0 , cnt = 0 ;",
        "if ( b <= 0 )"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int cnt’"
    },
    {
      "mod_line": [
        1,
        7,
        3
      ],
      "mod_code": [
        "int n , m , i , a , cnt = 0 , cnt = 0 ;",
        "if ( b <= 0 )",
        "int i = 0 ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int cnt’"
    },
    {
      "mod_line": [
        1,
        7,
        3,
        4
      ],
      "mod_code": [
        "int n , m , i , a , cnt = 0 , cnt = 0 ;",
        "if ( b <= 0 )",
        "int i = 0 ;",
        "while ( i <= sqrt ( n ) ) ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int cnt’"
    },
    {
      "mod_line": [
        1,
        7,
        3,
        6
      ],
      "mod_code": [
        "int n , m , i , a , cnt = 0 , cnt = 0 ;",
        "if ( b <= 0 )",
        "int i = 0 ;",
        "b -= ( a * a ) ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int cnt’"
    },
    {
      "mod_line": [
        1,
        7,
        4
      ],
      "mod_code": [
        "int n , m , i , a , cnt = 0 , cnt = 0 ;",
        "if ( b <= 0 )",
        "while ( i <= sqrt ( n ) ) ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int cnt’"
    },
    {
      "mod_line": [
        1,
        7,
        4,
        6
      ],
      "mod_code": [
        "int n , m , i , a , cnt = 0 , cnt = 0 ;",
        "if ( b <= 0 )",
        "while ( i <= sqrt ( n ) ) ;",
        "b -= ( a * a ) ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int cnt’"
    },
    {
      "mod_line": [
        1,
        7,
        6
      ],
      "mod_code": [
        "int n , m , i , a , cnt = 0 , cnt = 0 ;",
        "if ( b <= 0 )",
        "b -= ( a * a ) ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int cnt’"
    },
    {
      "mod_line": [
        1,
        3
      ],
      "mod_code": [
        "int n , m , i , a , cnt = 0 , cnt = 0 ;",
        "int i = 0 ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int cnt’"
    },
    {
      "mod_line": [
        1,
        3,
        4
      ],
      "mod_code": [
        "int n , m , i , a , cnt = 0 , cnt = 0 ;",
        "int i = 0 ;",
        "while ( i <= sqrt ( n ) ) ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int cnt’"
    },
    {
      "mod_line": [
        1,
        3,
        4,
        6
      ],
      "mod_code": [
        "int n , m , i , a , cnt = 0 , cnt = 0 ;",
        "int i = 0 ;",
        "while ( i <= sqrt ( n ) ) ;",
        "b -= ( a * a ) ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int cnt’"
    },
    {
      "mod_line": [
        1,
        3,
        6
      ],
      "mod_code": [
        "int n , m , i , a , cnt = 0 , cnt = 0 ;",
        "int i = 0 ;",
        "b -= ( a * a ) ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int cnt’"
    },
    {
      "mod_line": [
        1,
        4
      ],
      "mod_code": [
        "int n , m , i , a , cnt = 0 , cnt = 0 ;",
        "while ( i <= sqrt ( n ) ) ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int cnt’"
    },
    {
      "mod_line": [
        1,
        4,
        6
      ],
      "mod_code": [
        "int n , m , i , a , cnt = 0 , cnt = 0 ;",
        "while ( i <= sqrt ( n ) ) ;",
        "b -= ( a * a ) ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int cnt’"
    },
    {
      "mod_line": [
        1,
        6
      ],
      "mod_code": [
        "int n , m , i , a , cnt = 0 , cnt = 0 ;",
        "b -= ( a * a ) ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int cnt’"
    },
    {
      "mod_line": [
        12,
        7,
        3
      ],
      "mod_code": [
        "cout << cnt ;",
        "if ( b <= 0 )",
        "int i = 0 ;"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘int i’"
    },
    {
      "mod_line": [
        12,
        7,
        3,
        4
      ],
      "mod_code": [
        "cout << cnt ;",
        "if ( b <= 0 )",
        "int i = 0 ;",
        "while ( i <= sqrt ( n ) ) ;"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘int i’"
    },
    {
      "mod_line": [
        12,
        7,
        3,
        6
      ],
      "mod_code": [
        "cout << cnt ;",
        "if ( b <= 0 )",
        "int i = 0 ;",
        "b -= ( a * a ) ;"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘int i’"
    },
    {
      "mod_line": [
        12,
        3
      ],
      "mod_code": [
        "cout << cnt ;",
        "int i = 0 ;"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘int i’"
    },
    {
      "mod_line": [
        12,
        3,
        4
      ],
      "mod_code": [
        "cout << cnt ;",
        "int i = 0 ;",
        "while ( i <= sqrt ( n ) ) ;"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘int i’"
    },
    {
      "mod_line": [
        12,
        3,
        4,
        6
      ],
      "mod_code": [
        "cout << cnt ;",
        "int i = 0 ;",
        "while ( i <= sqrt ( n ) ) ;",
        "b -= ( a * a ) ;"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘int i’"
    },
    {
      "mod_line": [
        12,
        3,
        6
      ],
      "mod_code": [
        "cout << cnt ;",
        "int i = 0 ;",
        "b -= ( a * a ) ;"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘int i’"
    },
    {
      "mod_line": [
        7,
        3
      ],
      "mod_code": [
        "if ( b <= 0 )",
        "int i = 0 ;"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘int i’"
    },
    {
      "mod_line": [
        7,
        3,
        4
      ],
      "mod_code": [
        "if ( b <= 0 )",
        "int i = 0 ;",
        "while ( i <= sqrt ( n ) ) ;"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘int i’"
    },
    {
      "mod_line": [
        7,
        3,
        4,
        6
      ],
      "mod_code": [
        "if ( b <= 0 )",
        "int i = 0 ;",
        "while ( i <= sqrt ( n ) ) ;",
        "b -= ( a * a ) ;"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘int i’"
    },
    {
      "mod_line": [
        7,
        3,
        6
      ],
      "mod_code": [
        "if ( b <= 0 )",
        "int i = 0 ;",
        "b -= ( a * a ) ;"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘int i’"
    },
    {
      "mod_line": [
        3,
        4
      ],
      "mod_code": [
        "int i = 0 ;",
        "while ( i <= sqrt ( n ) ) ;"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘int i’"
    },
    {
      "mod_line": [
        3,
        4,
        6
      ],
      "mod_code": [
        "int i = 0 ;",
        "while ( i <= sqrt ( n ) ) ;",
        "b -= ( a * a ) ;"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘int i’"
    },
    {
      "mod_line": [
        3,
        6
      ],
      "mod_code": [
        "int i = 0 ;",
        "b -= ( a * a ) ;"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘int i’"
    }
  ]
}