{
  "meta": {
    "index": 2494,
    "hitid": "3OREP8RUT2536WD93M14W161IM0GB3",
    "workerid": "AIWEXPJAU66D9",
    "probid": "48A",
    "subid": "47835263"
  },
  "lines": [
    {
      "line": 0,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 1,
      "text": "a , b and c = strings",
      "code": "string a , b , c ;",
      "indent": 1
    },
    {
      "line": 2,
      "text": "read a , b and c",
      "code": "cin >> a >> b >> c ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "assign value 0 to the boolean nan",
      "code": "bool nan = 0 ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "if a ! = b and a ! = c and b = c",
      "code": "if ( a != b && a != c && b == c )",
      "indent": 1
    },
    {
      "line": 5,
      "text": "if a [ 0 ] = ' p ' and b [ 0 ] = ' r ' , set nan to 1",
      "code": "if ( a [ 0 ] == ' p ' && b [ 0 ] == ' r ' ) { nan = 1 ; }",
      "indent": 2
    },
    {
      "line": 6,
      "text": "if a [ 0 ] = ' r ' and b [ 0 ] = ' s ' , set nan to 1",
      "code": "if ( a [ 0 ] == ' r ' && b [ 0 ] == ' s ' ) { nan = 1 ; }",
      "indent": 2
    },
    {
      "line": 7,
      "text": "if a [ 0 ] = ' s ' and b [ 0 ] = ' p ' , set nan to 1",
      "code": "if ( a [ 0 ] == ' s ' && b [ 0 ] == ' p ' ) { nan = 1 ; }",
      "indent": 2
    },
    {
      "line": 8,
      "text": "if nan is 1",
      "code": "if ( nan )",
      "indent": 2
    },
    {
      "line": 9,
      "text": "print \" F \" and a new line",
      "code": "cout << \" F \" << endl ;",
      "indent": 3
    },
    {
      "line": 10,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 3
    },
    {
      "line": 11,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 12,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 13,
      "text": "if a ! = b and c ! = b and a = c",
      "code": "if ( a != b && c != b && a == c )",
      "indent": 1
    },
    {
      "line": 14,
      "text": "if b [ 0 ] = ' p ' and a [ 0 ] = ' r ' , set nan to 1",
      "code": "if ( b [ 0 ] == ' p ' && a [ 0 ] == ' r ' ) { nan = 1 ; }",
      "indent": 2
    },
    {
      "line": 15,
      "text": "if b [ 0 ] = ' r ' and a [ 0 ] = ' s ' , set nan to 1",
      "code": "if ( b [ 0 ] == ' r ' && a [ 0 ] == ' s ' ) { nan = 1 ; }",
      "indent": 2
    },
    {
      "line": 16,
      "text": "if b [ 0 ] = ' s ' and a [ 0 ] = ' p ' , set nan to 1",
      "code": "if ( b [ 0 ] == ' s ' && a [ 0 ] == ' p ' ) { nan = 1 ; }",
      "indent": 2
    },
    {
      "line": 17,
      "text": "if nan is 1",
      "code": "if ( nan )",
      "indent": 2
    },
    {
      "line": 18,
      "text": "print \" M \" and a new line",
      "code": "cout << \" M \" << endl ;",
      "indent": 3
    },
    {
      "line": 19,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 3
    },
    {
      "line": 20,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 21,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 22,
      "text": "if c ! = b and a ! = c and b = a",
      "code": "if ( c != b && a != c && b == a )",
      "indent": 1
    },
    {
      "line": 23,
      "text": "if c [ 0 ] = ' p ' and b [ 0 ] = ' r ' , set nan to 1",
      "code": "if ( c [ 0 ] == ' p ' && b [ 0 ] == ' r ' ) { nan = 1 ; }",
      "indent": 2
    },
    {
      "line": 24,
      "text": "if c [ 0 ] = ' r ' and b [ 0 ] = ' s ' , set nan to 1",
      "code": "if ( c [ 0 ] == ' r ' && b [ 0 ] == ' s ' ) { nan = 1 ; }",
      "indent": 2
    },
    {
      "line": 25,
      "text": "if c [ 0 ] = ' s ' and b [ 0 ] = ' p ' , set nan to 1",
      "code": "if ( c [ 0 ] == ' s ' && b [ 0 ] == ' p ' ) { nan = 1 ; }",
      "indent": 2
    },
    {
      "line": 26,
      "text": "if nan is 1",
      "code": "if ( nan )",
      "indent": 2
    },
    {
      "line": 27,
      "text": "print \" S \" and a new line",
      "code": "cout << \" S \" << endl ;",
      "indent": 3
    },
    {
      "line": 28,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 3
    },
    {
      "line": 29,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 30,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 31,
      "text": "print \" ? \" and a new line",
      "code": "cout << \" ? \" << endl ;",
      "indent": 1
    },
    {
      "line": 32,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        1
      ],
      "mod_code": [
        "string a , b , n ;"
      ],
      "err_line": 2,
      "err_msg": "‘c’ was not declared in this scope"
    },
    {
      "mod_line": [
        2
      ],
      "mod_code": [
        "cin >> a >> b >> n ;"
      ],
      "err_line": 2,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        3
      ],
      "mod_code": [
        "bool nan assign = 0 ;"
      ],
      "err_line": 3,
      "err_msg": "expected initializer before ‘assign’"
    },
    {
      "mod_line": [
        4
      ],
      "mod_code": [
        "if ( a != b && a != c && b )"
      ],
      "err_line": 4,
      "err_msg": "no match for ‘operator&&’ (operand types are ‘bool’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        13
      ],
      "mod_code": [
        "if ( a != b && c != b && a )"
      ],
      "err_line": 13,
      "err_msg": "no match for ‘operator&&’ (operand types are ‘bool’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        22
      ],
      "mod_code": [
        "if ( c != b && a != c && b )"
      ],
      "err_line": 22,
      "err_msg": "no match for ‘operator&&’ (operand types are ‘bool’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        9,
        22
      ],
      "mod_code": [
        "cout << \" F \" ;",
        "if ( c != b && a != c && b )"
      ],
      "err_line": 22,
      "err_msg": "no match for ‘operator&&’ (operand types are ‘bool’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        9,
        22,
        2
      ],
      "mod_code": [
        "cout << \" F \" ;",
        "if ( c != b && a != c && b )",
        "cin >> a >> b >> n ;"
      ],
      "err_line": 2,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        9,
        22,
        2,
        13
      ],
      "mod_code": [
        "cout << \" F \" ;",
        "if ( c != b && a != c && b )",
        "cin >> a >> b >> n ;",
        "if ( a != b && c != b && a )"
      ],
      "err_line": 2,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        9,
        22,
        2,
        8
      ],
      "mod_code": [
        "cout << \" F \" ;",
        "if ( c != b && a != c && b )",
        "cin >> a >> b >> n ;",
        "if ( ! nan )"
      ],
      "err_line": 2,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        9,
        22,
        2,
        3
      ],
      "mod_code": [
        "cout << \" F \" ;",
        "if ( c != b && a != c && b )",
        "cin >> a >> b >> n ;",
        "bool nan assign = 0 ;"
      ],
      "err_line": 2,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        9,
        22,
        13
      ],
      "mod_code": [
        "cout << \" F \" ;",
        "if ( c != b && a != c && b )",
        "if ( a != b && c != b && a )"
      ],
      "err_line": 13,
      "err_msg": "no match for ‘operator&&’ (operand types are ‘bool’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        9,
        22,
        13,
        8
      ],
      "mod_code": [
        "cout << \" F \" ;",
        "if ( c != b && a != c && b )",
        "if ( a != b && c != b && a )",
        "if ( ! nan )"
      ],
      "err_line": 13,
      "err_msg": "no match for ‘operator&&’ (operand types are ‘bool’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        9,
        22,
        13,
        3
      ],
      "mod_code": [
        "cout << \" F \" ;",
        "if ( c != b && a != c && b )",
        "if ( a != b && c != b && a )",
        "bool nan assign = 0 ;"
      ],
      "err_line": 3,
      "err_msg": "expected initializer before ‘assign’"
    },
    {
      "mod_line": [
        9,
        22,
        8
      ],
      "mod_code": [
        "cout << \" F \" ;",
        "if ( c != b && a != c && b )",
        "if ( ! nan )"
      ],
      "err_line": 22,
      "err_msg": "no match for ‘operator&&’ (operand types are ‘bool’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        9,
        22,
        8,
        3
      ],
      "mod_code": [
        "cout << \" F \" ;",
        "if ( c != b && a != c && b )",
        "if ( ! nan )",
        "bool nan assign = 0 ;"
      ],
      "err_line": 3,
      "err_msg": "expected initializer before ‘assign’"
    },
    {
      "mod_line": [
        9,
        22,
        3
      ],
      "mod_code": [
        "cout << \" F \" ;",
        "if ( c != b && a != c && b )",
        "bool nan assign = 0 ;"
      ],
      "err_line": 3,
      "err_msg": "expected initializer before ‘assign’"
    },
    {
      "mod_line": [
        9,
        2
      ],
      "mod_code": [
        "cout << \" F \" ;",
        "cin >> a >> b >> n ;"
      ],
      "err_line": 2,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        9,
        2,
        13
      ],
      "mod_code": [
        "cout << \" F \" ;",
        "cin >> a >> b >> n ;",
        "if ( a != b && c != b && a )"
      ],
      "err_line": 2,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        9,
        2,
        13,
        8
      ],
      "mod_code": [
        "cout << \" F \" ;",
        "cin >> a >> b >> n ;",
        "if ( a != b && c != b && a )",
        "if ( ! nan )"
      ],
      "err_line": 2,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        9,
        2,
        13,
        3
      ],
      "mod_code": [
        "cout << \" F \" ;",
        "cin >> a >> b >> n ;",
        "if ( a != b && c != b && a )",
        "bool nan assign = 0 ;"
      ],
      "err_line": 2,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        9,
        2,
        8
      ],
      "mod_code": [
        "cout << \" F \" ;",
        "cin >> a >> b >> n ;",
        "if ( ! nan )"
      ],
      "err_line": 2,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        9,
        2,
        8,
        3
      ],
      "mod_code": [
        "cout << \" F \" ;",
        "cin >> a >> b >> n ;",
        "if ( ! nan )",
        "bool nan assign = 0 ;"
      ],
      "err_line": 2,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        9,
        2,
        3
      ],
      "mod_code": [
        "cout << \" F \" ;",
        "cin >> a >> b >> n ;",
        "bool nan assign = 0 ;"
      ],
      "err_line": 2,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        9,
        13
      ],
      "mod_code": [
        "cout << \" F \" ;",
        "if ( a != b && c != b && a )"
      ],
      "err_line": 13,
      "err_msg": "no match for ‘operator&&’ (operand types are ‘bool’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        9,
        13,
        8
      ],
      "mod_code": [
        "cout << \" F \" ;",
        "if ( a != b && c != b && a )",
        "if ( ! nan )"
      ],
      "err_line": 13,
      "err_msg": "no match for ‘operator&&’ (operand types are ‘bool’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        9,
        13,
        8,
        3
      ],
      "mod_code": [
        "cout << \" F \" ;",
        "if ( a != b && c != b && a )",
        "if ( ! nan )",
        "bool nan assign = 0 ;"
      ],
      "err_line": 3,
      "err_msg": "expected initializer before ‘assign’"
    },
    {
      "mod_line": [
        9,
        13,
        3
      ],
      "mod_code": [
        "cout << \" F \" ;",
        "if ( a != b && c != b && a )",
        "bool nan assign = 0 ;"
      ],
      "err_line": 3,
      "err_msg": "expected initializer before ‘assign’"
    },
    {
      "mod_line": [
        9,
        8,
        3
      ],
      "mod_code": [
        "cout << \" F \" ;",
        "if ( ! nan )",
        "bool nan assign = 0 ;"
      ],
      "err_line": 3,
      "err_msg": "expected initializer before ‘assign’"
    },
    {
      "mod_line": [
        9,
        3
      ],
      "mod_code": [
        "cout << \" F \" ;",
        "bool nan assign = 0 ;"
      ],
      "err_line": 3,
      "err_msg": "expected initializer before ‘assign’"
    },
    {
      "mod_line": [
        22,
        2
      ],
      "mod_code": [
        "if ( c != b && a != c && b )",
        "cin >> a >> b >> n ;"
      ],
      "err_line": 2,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        22,
        2,
        13
      ],
      "mod_code": [
        "if ( c != b && a != c && b )",
        "cin >> a >> b >> n ;",
        "if ( a != b && c != b && a )"
      ],
      "err_line": 2,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        22,
        2,
        13,
        8
      ],
      "mod_code": [
        "if ( c != b && a != c && b )",
        "cin >> a >> b >> n ;",
        "if ( a != b && c != b && a )",
        "if ( ! nan )"
      ],
      "err_line": 2,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        22,
        2,
        13,
        3
      ],
      "mod_code": [
        "if ( c != b && a != c && b )",
        "cin >> a >> b >> n ;",
        "if ( a != b && c != b && a )",
        "bool nan assign = 0 ;"
      ],
      "err_line": 2,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        22,
        2,
        8
      ],
      "mod_code": [
        "if ( c != b && a != c && b )",
        "cin >> a >> b >> n ;",
        "if ( ! nan )"
      ],
      "err_line": 2,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        22,
        2,
        8,
        3
      ],
      "mod_code": [
        "if ( c != b && a != c && b )",
        "cin >> a >> b >> n ;",
        "if ( ! nan )",
        "bool nan assign = 0 ;"
      ],
      "err_line": 2,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        22,
        2,
        3
      ],
      "mod_code": [
        "if ( c != b && a != c && b )",
        "cin >> a >> b >> n ;",
        "bool nan assign = 0 ;"
      ],
      "err_line": 2,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        22,
        13
      ],
      "mod_code": [
        "if ( c != b && a != c && b )",
        "if ( a != b && c != b && a )"
      ],
      "err_line": 13,
      "err_msg": "no match for ‘operator&&’ (operand types are ‘bool’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        22,
        13,
        8
      ],
      "mod_code": [
        "if ( c != b && a != c && b )",
        "if ( a != b && c != b && a )",
        "if ( ! nan )"
      ],
      "err_line": 13,
      "err_msg": "no match for ‘operator&&’ (operand types are ‘bool’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        22,
        13,
        8,
        3
      ],
      "mod_code": [
        "if ( c != b && a != c && b )",
        "if ( a != b && c != b && a )",
        "if ( ! nan )",
        "bool nan assign = 0 ;"
      ],
      "err_line": 3,
      "err_msg": "expected initializer before ‘assign’"
    },
    {
      "mod_line": [
        22,
        13,
        3
      ],
      "mod_code": [
        "if ( c != b && a != c && b )",
        "if ( a != b && c != b && a )",
        "bool nan assign = 0 ;"
      ],
      "err_line": 3,
      "err_msg": "expected initializer before ‘assign’"
    },
    {
      "mod_line": [
        22,
        8
      ],
      "mod_code": [
        "if ( c != b && a != c && b )",
        "if ( ! nan )"
      ],
      "err_line": 22,
      "err_msg": "no match for ‘operator&&’ (operand types are ‘bool’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        22,
        8,
        3
      ],
      "mod_code": [
        "if ( c != b && a != c && b )",
        "if ( ! nan )",
        "bool nan assign = 0 ;"
      ],
      "err_line": 3,
      "err_msg": "expected initializer before ‘assign’"
    },
    {
      "mod_line": [
        22,
        3
      ],
      "mod_code": [
        "if ( c != b && a != c && b )",
        "bool nan assign = 0 ;"
      ],
      "err_line": 3,
      "err_msg": "expected initializer before ‘assign’"
    },
    {
      "mod_line": [
        2,
        13
      ],
      "mod_code": [
        "cin >> a >> b >> n ;",
        "if ( a != b && c != b && a )"
      ],
      "err_line": 2,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        2,
        13,
        8
      ],
      "mod_code": [
        "cin >> a >> b >> n ;",
        "if ( a != b && c != b && a )",
        "if ( ! nan )"
      ],
      "err_line": 2,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        2,
        13,
        8,
        3
      ],
      "mod_code": [
        "cin >> a >> b >> n ;",
        "if ( a != b && c != b && a )",
        "if ( ! nan )",
        "bool nan assign = 0 ;"
      ],
      "err_line": 2,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        2,
        13,
        3
      ],
      "mod_code": [
        "cin >> a >> b >> n ;",
        "if ( a != b && c != b && a )",
        "bool nan assign = 0 ;"
      ],
      "err_line": 2,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        2,
        8
      ],
      "mod_code": [
        "cin >> a >> b >> n ;",
        "if ( ! nan )"
      ],
      "err_line": 2,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        2,
        8,
        3
      ],
      "mod_code": [
        "cin >> a >> b >> n ;",
        "if ( ! nan )",
        "bool nan assign = 0 ;"
      ],
      "err_line": 2,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        2,
        3
      ],
      "mod_code": [
        "cin >> a >> b >> n ;",
        "bool nan assign = 0 ;"
      ],
      "err_line": 2,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        8
      ],
      "mod_code": [
        "if ( a != b && c != b && a )",
        "if ( ! nan )"
      ],
      "err_line": 13,
      "err_msg": "no match for ‘operator&&’ (operand types are ‘bool’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        13,
        8,
        3
      ],
      "mod_code": [
        "if ( a != b && c != b && a )",
        "if ( ! nan )",
        "bool nan assign = 0 ;"
      ],
      "err_line": 3,
      "err_msg": "expected initializer before ‘assign’"
    },
    {
      "mod_line": [
        13,
        3
      ],
      "mod_code": [
        "if ( a != b && c != b && a )",
        "bool nan assign = 0 ;"
      ],
      "err_line": 3,
      "err_msg": "expected initializer before ‘assign’"
    },
    {
      "mod_line": [
        8,
        3
      ],
      "mod_code": [
        "if ( ! nan )",
        "bool nan assign = 0 ;"
      ],
      "err_line": 3,
      "err_msg": "expected initializer before ‘assign’"
    }
  ]
}