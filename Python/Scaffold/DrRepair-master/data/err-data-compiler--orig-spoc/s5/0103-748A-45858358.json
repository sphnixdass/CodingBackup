{
  "meta": {
    "index": 103,
    "hitid": "3SR6AEG6W5NDJ01VXKX6PCG3IABHYS",
    "workerid": "AIWEXPJAU66D9",
    "probid": "748A",
    "subid": "45858358"
  },
  "lines": [
    {
      "line": 0,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 1,
      "text": "declare long long variables n , m and k",
      "code": "long long n , m , k ;",
      "indent": 1
    },
    {
      "line": 2,
      "text": "read n , m and k",
      "code": "cin >> n >> m >> k ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "create long long cnt = 1",
      "code": "long long cnt = 1 ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "for long long j = 1 to n inclusive",
      "code": "for ( long long j = 1 ; j <= n ; ++ j )",
      "indent": 1
    },
    {
      "line": 5,
      "text": "for long long i = 1 to m inclusive",
      "code": "for ( long long i = 1 ; i <= m ; ++ i )",
      "indent": 2
    },
    {
      "line": 6,
      "text": "if cnt = k",
      "code": "if ( cnt == k )",
      "indent": 3
    },
    {
      "line": 7,
      "text": "print j , ' ' , i and \" L \\ n \"",
      "code": "cout << j << ' ' << i << \" L\\n \" ;",
      "indent": 4
    },
    {
      "line": 8,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 4
    },
    {
      "line": 9,
      "text": "else if cnt + 1 = k",
      "code": "else if ( cnt + 1 == k )",
      "indent": 3
    },
    {
      "line": 10,
      "text": "print j , ' ' , i and \" R \\ n \"",
      "code": "cout << j << ' ' << i << \" R\\n \" ;",
      "indent": 4
    },
    {
      "line": 11,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 4
    },
    {
      "line": 12,
      "text": "DUMMY",
      "code": "}",
      "indent": 3
    },
    {
      "line": 13,
      "text": "increase cnt by 2",
      "code": "cnt += 2 ;",
      "indent": 3
    },
    {
      "line": 14,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 15,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 16,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 17,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        6
      ],
      "mod_code": [
        "if ( cnt == k ) break ;"
      ],
      "err_line": 9,
      "err_msg": "‘else’ without a previous ‘if’"
    },
    {
      "mod_line": [
        7,
        10,
        6
      ],
      "mod_code": [
        "cout << j << ' ' << i << \" \\n \" ;",
        "cout << j << ' ' << i << \" \\n \" ;",
        "if ( cnt == k ) break ;"
      ],
      "err_line": 9,
      "err_msg": "‘else’ without a previous ‘if’"
    },
    {
      "mod_line": [
        7,
        10,
        6,
        2
      ],
      "mod_code": [
        "cout << j << ' ' << i << \" \\n \" ;",
        "cout << j << ' ' << i << \" \\n \" ;",
        "if ( cnt == k ) break ;",
        "cin >> n >> m >> n ;"
      ],
      "err_line": 9,
      "err_msg": "‘else’ without a previous ‘if’"
    },
    {
      "mod_line": [
        7,
        6
      ],
      "mod_code": [
        "cout << j << ' ' << i << \" \\n \" ;",
        "if ( cnt == k ) break ;"
      ],
      "err_line": 9,
      "err_msg": "‘else’ without a previous ‘if’"
    },
    {
      "mod_line": [
        7,
        6,
        2
      ],
      "mod_code": [
        "cout << j << ' ' << i << \" \\n \" ;",
        "if ( cnt == k ) break ;",
        "cin >> n >> m >> n ;"
      ],
      "err_line": 9,
      "err_msg": "‘else’ without a previous ‘if’"
    },
    {
      "mod_line": [
        7,
        6,
        2,
        10
      ],
      "mod_code": [
        "cout << j << ' ' << i << \" \\n \" ;",
        "if ( cnt == k ) break ;",
        "cin >> n >> m >> n ;",
        "cout << j << ' ' << i << \" #\\n \" ;"
      ],
      "err_line": 9,
      "err_msg": "‘else’ without a previous ‘if’"
    },
    {
      "mod_line": [
        7,
        6,
        10
      ],
      "mod_code": [
        "cout << j << ' ' << i << \" \\n \" ;",
        "if ( cnt == k ) break ;",
        "cout << j << ' ' << i << \" #\\n \" ;"
      ],
      "err_line": 9,
      "err_msg": "‘else’ without a previous ‘if’"
    },
    {
      "mod_line": [
        10,
        6
      ],
      "mod_code": [
        "cout << j << ' ' << i << \" \\n \" ;",
        "if ( cnt == k ) break ;"
      ],
      "err_line": 9,
      "err_msg": "‘else’ without a previous ‘if’"
    },
    {
      "mod_line": [
        10,
        6,
        7
      ],
      "mod_code": [
        "cout << j << ' ' << i << \" \\n \" ;",
        "if ( cnt == k ) break ;",
        "cout << j << ' ' << i << \" it\\n \" ;"
      ],
      "err_line": 9,
      "err_msg": "‘else’ without a previous ‘if’"
    },
    {
      "mod_line": [
        10,
        6,
        7,
        2
      ],
      "mod_code": [
        "cout << j << ' ' << i << \" \\n \" ;",
        "if ( cnt == k ) break ;",
        "cout << j << ' ' << i << \" it\\n \" ;",
        "cin >> n >> m >> n ;"
      ],
      "err_line": 9,
      "err_msg": "‘else’ without a previous ‘if’"
    },
    {
      "mod_line": [
        10,
        6,
        2
      ],
      "mod_code": [
        "cout << j << ' ' << i << \" \\n \" ;",
        "if ( cnt == k ) break ;",
        "cin >> n >> m >> n ;"
      ],
      "err_line": 9,
      "err_msg": "‘else’ without a previous ‘if’"
    },
    {
      "mod_line": [
        6,
        7
      ],
      "mod_code": [
        "if ( cnt == k ) break ;",
        "cout << j << ' ' << i << \" it\\n \" ;"
      ],
      "err_line": 9,
      "err_msg": "‘else’ without a previous ‘if’"
    },
    {
      "mod_line": [
        6,
        7,
        2
      ],
      "mod_code": [
        "if ( cnt == k ) break ;",
        "cout << j << ' ' << i << \" it\\n \" ;",
        "cin >> n >> m >> n ;"
      ],
      "err_line": 9,
      "err_msg": "‘else’ without a previous ‘if’"
    },
    {
      "mod_line": [
        6,
        7,
        2,
        10
      ],
      "mod_code": [
        "if ( cnt == k ) break ;",
        "cout << j << ' ' << i << \" it\\n \" ;",
        "cin >> n >> m >> n ;",
        "cout << j << ' ' << i << \" #\\n \" ;"
      ],
      "err_line": 9,
      "err_msg": "‘else’ without a previous ‘if’"
    },
    {
      "mod_line": [
        6,
        7,
        10
      ],
      "mod_code": [
        "if ( cnt == k ) break ;",
        "cout << j << ' ' << i << \" it\\n \" ;",
        "cout << j << ' ' << i << \" #\\n \" ;"
      ],
      "err_line": 9,
      "err_msg": "‘else’ without a previous ‘if’"
    },
    {
      "mod_line": [
        6,
        2
      ],
      "mod_code": [
        "if ( cnt == k ) break ;",
        "cin >> n >> m >> n ;"
      ],
      "err_line": 9,
      "err_msg": "‘else’ without a previous ‘if’"
    },
    {
      "mod_line": [
        6,
        2,
        10
      ],
      "mod_code": [
        "if ( cnt == k ) break ;",
        "cin >> n >> m >> n ;",
        "cout << j << ' ' << i << \" #\\n \" ;"
      ],
      "err_line": 9,
      "err_msg": "‘else’ without a previous ‘if’"
    },
    {
      "mod_line": [
        6,
        10
      ],
      "mod_code": [
        "if ( cnt == k ) break ;",
        "cout << j << ' ' << i << \" #\\n \" ;"
      ],
      "err_line": 9,
      "err_msg": "‘else’ without a previous ‘if’"
    }
  ]
}