{
  "meta": {
    "index": 303,
    "hitid": "3IKMEYR0LWPEK59WAKT8T0VQWZEK2N",
    "workerid": "A121O0X5UNK37S",
    "probid": "61A",
    "subid": "42328847"
  },
  "lines": [
    {
      "line": 0,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 1,
      "text": "let bal be character array with length 110",
      "code": "char bal [ 110 ] ;",
      "indent": 1
    },
    {
      "line": 2,
      "text": "let chal be character array with length 110",
      "code": "char chal [ 110 ] ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "read bal and chal",
      "code": "cin >> bal >> chal ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "call strlen function with argument bal and assign result to integer l",
      "code": "int l = strlen ( bal ) ;",
      "indent": 1
    },
    {
      "line": 5,
      "text": "let ar be character array with length l",
      "code": "char ar [ l ] ;",
      "indent": 1
    },
    {
      "line": 6,
      "text": "for i = 0 to l exclusive",
      "code": "for ( int i = 0 ; i < l ; i ++ )",
      "indent": 1
    },
    {
      "line": 7,
      "text": "if i element of array bal is equal to i element of array chal",
      "code": "if ( bal [ i ] == chal [ i ] )",
      "indent": 2
    },
    {
      "line": 8,
      "text": "assign i element of array ar to character 0",
      "code": "ar [ i ] = ' 0 ' ;",
      "indent": 3
    },
    {
      "line": 9,
      "text": "else",
      "code": "else",
      "indent": 2
    },
    {
      "line": 10,
      "text": "assign i element of array ar to character 1",
      "code": "ar [ i ] = ' 1 ' ;",
      "indent": 3
    },
    {
      "line": 11,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 12,
      "text": "assign \\ 0 to l element of array ar",
      "code": "ar [ l ] = ' \\0 ' ;",
      "indent": 1
    },
    {
      "line": 13,
      "text": "print ar",
      "code": "cout << ar << endl ;",
      "indent": 1
    },
    {
      "line": 14,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        4
      ],
      "mod_code": [
        "strlen ( bal , result ) ;"
      ],
      "err_line": 4,
      "err_msg": "‘result’ was not declared in this scope"
    },
    {
      "mod_line": [
        8
      ],
      "mod_code": [
        "char ar [ 0 ] = { 0 } ;"
      ],
      "err_line": 8,
      "err_msg": "too many initializers for ‘char [0]’"
    },
    {
      "mod_line": [
        12
      ],
      "mod_code": [
        "ar . begin ( ) ;"
      ],
      "err_line": 12,
      "err_msg": "request for member ‘begin’ in ‘ar’, which is of non-class type ‘char [l]’"
    },
    {
      "mod_line": [
        1
      ],
      "mod_code": [
        "char a [ 110 ] ;"
      ],
      "err_line": 3,
      "err_msg": "‘bal’ was not declared in this scope"
    },
    {
      "mod_line": [
        4
      ],
      "mod_code": [
        "strlen ( strlen ( bal , result ) ) ;"
      ],
      "err_line": 4,
      "err_msg": "‘result’ was not declared in this scope"
    },
    {
      "mod_line": [
        6
      ],
      "mod_code": [
        "for ( i = 0 ; i < l ; i ++ )"
      ],
      "err_line": 6,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        7
      ],
      "mod_code": [
        "strlen ( bal , result ) ;",
        "if ( bal [ 0 ] == i )"
      ],
      "err_line": 4,
      "err_msg": "‘result’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        7,
        8
      ],
      "mod_code": [
        "strlen ( bal , result ) ;",
        "if ( bal [ 0 ] == i )",
        "char ar [ 0 ] = { 0 } ;"
      ],
      "err_line": 4,
      "err_msg": "‘result’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        7,
        8,
        10
      ],
      "mod_code": [
        "strlen ( bal , result ) ;",
        "if ( bal [ 0 ] == i )",
        "char ar [ 0 ] = { 0 } ;",
        "char ar [ 1 ] = { 1 } ;"
      ],
      "err_line": 4,
      "err_msg": "‘result’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        7,
        8,
        12
      ],
      "mod_code": [
        "strlen ( bal , result ) ;",
        "if ( bal [ 0 ] == i )",
        "char ar [ 0 ] = { 0 } ;",
        "ar . begin ( ) ;"
      ],
      "err_line": 4,
      "err_msg": "‘result’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        7,
        8,
        6
      ],
      "mod_code": [
        "strlen ( bal , result ) ;",
        "if ( bal [ 0 ] == i )",
        "char ar [ 0 ] = { 0 } ;",
        "for ( i = 0 ; i < l ; i ++ )"
      ],
      "err_line": 4,
      "err_msg": "‘result’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        7,
        10
      ],
      "mod_code": [
        "strlen ( bal , result ) ;",
        "if ( bal [ 0 ] == i )",
        "char ar [ 1 ] = { 1 } ;"
      ],
      "err_line": 4,
      "err_msg": "‘result’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        7,
        10,
        12
      ],
      "mod_code": [
        "strlen ( bal , result ) ;",
        "if ( bal [ 0 ] == i )",
        "char ar [ 1 ] = { 1 } ;",
        "ar . begin ( ) ;"
      ],
      "err_line": 4,
      "err_msg": "‘result’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        7,
        10,
        6
      ],
      "mod_code": [
        "strlen ( bal , result ) ;",
        "if ( bal [ 0 ] == i )",
        "char ar [ 1 ] = { 1 } ;",
        "for ( i = 0 ; i < l ; i ++ )"
      ],
      "err_line": 4,
      "err_msg": "‘result’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        7,
        12
      ],
      "mod_code": [
        "strlen ( bal , result ) ;",
        "if ( bal [ 0 ] == i )",
        "ar . begin ( ) ;"
      ],
      "err_line": 4,
      "err_msg": "‘result’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        7,
        12,
        6
      ],
      "mod_code": [
        "strlen ( bal , result ) ;",
        "if ( bal [ 0 ] == i )",
        "ar . begin ( ) ;",
        "for ( i = 0 ; i < l ; i ++ )"
      ],
      "err_line": 4,
      "err_msg": "‘result’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        7,
        6
      ],
      "mod_code": [
        "strlen ( bal , result ) ;",
        "if ( bal [ 0 ] == i )",
        "for ( i = 0 ; i < l ; i ++ )"
      ],
      "err_line": 4,
      "err_msg": "‘result’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        8
      ],
      "mod_code": [
        "strlen ( bal , result ) ;",
        "char ar [ 0 ] = { 0 } ;"
      ],
      "err_line": 4,
      "err_msg": "‘result’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        8,
        10
      ],
      "mod_code": [
        "strlen ( bal , result ) ;",
        "char ar [ 0 ] = { 0 } ;",
        "char ar [ 1 ] = { 1 } ;"
      ],
      "err_line": 4,
      "err_msg": "‘result’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        8,
        10,
        12
      ],
      "mod_code": [
        "strlen ( bal , result ) ;",
        "char ar [ 0 ] = { 0 } ;",
        "char ar [ 1 ] = { 1 } ;",
        "ar . begin ( ) ;"
      ],
      "err_line": 4,
      "err_msg": "‘result’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        8,
        10,
        6
      ],
      "mod_code": [
        "strlen ( bal , result ) ;",
        "char ar [ 0 ] = { 0 } ;",
        "char ar [ 1 ] = { 1 } ;",
        "for ( i = 0 ; i < l ; i ++ )"
      ],
      "err_line": 4,
      "err_msg": "‘result’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        8,
        12
      ],
      "mod_code": [
        "strlen ( bal , result ) ;",
        "char ar [ 0 ] = { 0 } ;",
        "ar . begin ( ) ;"
      ],
      "err_line": 4,
      "err_msg": "‘result’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        8,
        12,
        6
      ],
      "mod_code": [
        "strlen ( bal , result ) ;",
        "char ar [ 0 ] = { 0 } ;",
        "ar . begin ( ) ;",
        "for ( i = 0 ; i < l ; i ++ )"
      ],
      "err_line": 4,
      "err_msg": "‘result’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        8,
        6
      ],
      "mod_code": [
        "strlen ( bal , result ) ;",
        "char ar [ 0 ] = { 0 } ;",
        "for ( i = 0 ; i < l ; i ++ )"
      ],
      "err_line": 4,
      "err_msg": "‘result’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        10
      ],
      "mod_code": [
        "strlen ( bal , result ) ;",
        "char ar [ 1 ] = { 1 } ;"
      ],
      "err_line": 4,
      "err_msg": "‘result’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        10,
        12
      ],
      "mod_code": [
        "strlen ( bal , result ) ;",
        "char ar [ 1 ] = { 1 } ;",
        "ar . begin ( ) ;"
      ],
      "err_line": 4,
      "err_msg": "‘result’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        10,
        12,
        6
      ],
      "mod_code": [
        "strlen ( bal , result ) ;",
        "char ar [ 1 ] = { 1 } ;",
        "ar . begin ( ) ;",
        "for ( i = 0 ; i < l ; i ++ )"
      ],
      "err_line": 4,
      "err_msg": "‘result’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        10,
        6
      ],
      "mod_code": [
        "strlen ( bal , result ) ;",
        "char ar [ 1 ] = { 1 } ;",
        "for ( i = 0 ; i < l ; i ++ )"
      ],
      "err_line": 4,
      "err_msg": "‘result’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        12
      ],
      "mod_code": [
        "strlen ( bal , result ) ;",
        "ar . begin ( ) ;"
      ],
      "err_line": 4,
      "err_msg": "‘result’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        12,
        6
      ],
      "mod_code": [
        "strlen ( bal , result ) ;",
        "ar . begin ( ) ;",
        "for ( i = 0 ; i < l ; i ++ )"
      ],
      "err_line": 4,
      "err_msg": "‘result’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        6
      ],
      "mod_code": [
        "strlen ( bal , result ) ;",
        "for ( i = 0 ; i < l ; i ++ )"
      ],
      "err_line": 4,
      "err_msg": "‘result’ was not declared in this scope"
    },
    {
      "mod_line": [
        7,
        8
      ],
      "mod_code": [
        "if ( bal [ 0 ] == i )",
        "char ar [ 0 ] = { 0 } ;"
      ],
      "err_line": 8,
      "err_msg": "too many initializers for ‘char [0]’"
    },
    {
      "mod_line": [
        7,
        8,
        10
      ],
      "mod_code": [
        "if ( bal [ 0 ] == i )",
        "char ar [ 0 ] = { 0 } ;",
        "char ar [ 1 ] = { 1 } ;"
      ],
      "err_line": 8,
      "err_msg": "too many initializers for ‘char [0]’"
    },
    {
      "mod_line": [
        7,
        8,
        10,
        12
      ],
      "mod_code": [
        "if ( bal [ 0 ] == i )",
        "char ar [ 0 ] = { 0 } ;",
        "char ar [ 1 ] = { 1 } ;",
        "ar . begin ( ) ;"
      ],
      "err_line": 8,
      "err_msg": "too many initializers for ‘char [0]’"
    },
    {
      "mod_line": [
        7,
        8,
        10,
        6
      ],
      "mod_code": [
        "if ( bal [ 0 ] == i )",
        "char ar [ 0 ] = { 0 } ;",
        "char ar [ 1 ] = { 1 } ;",
        "for ( i = 0 ; i < l ; i ++ )"
      ],
      "err_line": 6,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        7,
        8,
        12
      ],
      "mod_code": [
        "if ( bal [ 0 ] == i )",
        "char ar [ 0 ] = { 0 } ;",
        "ar . begin ( ) ;"
      ],
      "err_line": 8,
      "err_msg": "too many initializers for ‘char [0]’"
    },
    {
      "mod_line": [
        7,
        8,
        12,
        6
      ],
      "mod_code": [
        "if ( bal [ 0 ] == i )",
        "char ar [ 0 ] = { 0 } ;",
        "ar . begin ( ) ;",
        "for ( i = 0 ; i < l ; i ++ )"
      ],
      "err_line": 6,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        7,
        8,
        6
      ],
      "mod_code": [
        "if ( bal [ 0 ] == i )",
        "char ar [ 0 ] = { 0 } ;",
        "for ( i = 0 ; i < l ; i ++ )"
      ],
      "err_line": 6,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        7,
        10,
        12
      ],
      "mod_code": [
        "if ( bal [ 0 ] == i )",
        "char ar [ 1 ] = { 1 } ;",
        "ar . begin ( ) ;"
      ],
      "err_line": 12,
      "err_msg": "request for member ‘begin’ in ‘ar’, which is of non-class type ‘char [l]’"
    },
    {
      "mod_line": [
        7,
        10,
        12,
        6
      ],
      "mod_code": [
        "if ( bal [ 0 ] == i )",
        "char ar [ 1 ] = { 1 } ;",
        "ar . begin ( ) ;",
        "for ( i = 0 ; i < l ; i ++ )"
      ],
      "err_line": 6,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        7,
        10,
        6
      ],
      "mod_code": [
        "if ( bal [ 0 ] == i )",
        "char ar [ 1 ] = { 1 } ;",
        "for ( i = 0 ; i < l ; i ++ )"
      ],
      "err_line": 6,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        7,
        12
      ],
      "mod_code": [
        "if ( bal [ 0 ] == i )",
        "ar . begin ( ) ;"
      ],
      "err_line": 12,
      "err_msg": "request for member ‘begin’ in ‘ar’, which is of non-class type ‘char [l]’"
    },
    {
      "mod_line": [
        7,
        12,
        6
      ],
      "mod_code": [
        "if ( bal [ 0 ] == i )",
        "ar . begin ( ) ;",
        "for ( i = 0 ; i < l ; i ++ )"
      ],
      "err_line": 6,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        7,
        6
      ],
      "mod_code": [
        "if ( bal [ 0 ] == i )",
        "for ( i = 0 ; i < l ; i ++ )"
      ],
      "err_line": 6,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        8,
        10
      ],
      "mod_code": [
        "char ar [ 0 ] = { 0 } ;",
        "char ar [ 1 ] = { 1 } ;"
      ],
      "err_line": 8,
      "err_msg": "too many initializers for ‘char [0]’"
    },
    {
      "mod_line": [
        8,
        10,
        12
      ],
      "mod_code": [
        "char ar [ 0 ] = { 0 } ;",
        "char ar [ 1 ] = { 1 } ;",
        "ar . begin ( ) ;"
      ],
      "err_line": 8,
      "err_msg": "too many initializers for ‘char [0]’"
    },
    {
      "mod_line": [
        8,
        10,
        12,
        6
      ],
      "mod_code": [
        "char ar [ 0 ] = { 0 } ;",
        "char ar [ 1 ] = { 1 } ;",
        "ar . begin ( ) ;",
        "for ( i = 0 ; i < l ; i ++ )"
      ],
      "err_line": 6,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        8,
        10,
        6
      ],
      "mod_code": [
        "char ar [ 0 ] = { 0 } ;",
        "char ar [ 1 ] = { 1 } ;",
        "for ( i = 0 ; i < l ; i ++ )"
      ],
      "err_line": 6,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        8,
        12
      ],
      "mod_code": [
        "char ar [ 0 ] = { 0 } ;",
        "ar . begin ( ) ;"
      ],
      "err_line": 8,
      "err_msg": "too many initializers for ‘char [0]’"
    },
    {
      "mod_line": [
        8,
        12,
        6
      ],
      "mod_code": [
        "char ar [ 0 ] = { 0 } ;",
        "ar . begin ( ) ;",
        "for ( i = 0 ; i < l ; i ++ )"
      ],
      "err_line": 6,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        8,
        6
      ],
      "mod_code": [
        "char ar [ 0 ] = { 0 } ;",
        "for ( i = 0 ; i < l ; i ++ )"
      ],
      "err_line": 6,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        10,
        12
      ],
      "mod_code": [
        "char ar [ 1 ] = { 1 } ;",
        "ar . begin ( ) ;"
      ],
      "err_line": 12,
      "err_msg": "request for member ‘begin’ in ‘ar’, which is of non-class type ‘char [l]’"
    },
    {
      "mod_line": [
        10,
        12,
        6
      ],
      "mod_code": [
        "char ar [ 1 ] = { 1 } ;",
        "ar . begin ( ) ;",
        "for ( i = 0 ; i < l ; i ++ )"
      ],
      "err_line": 6,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        10,
        6
      ],
      "mod_code": [
        "char ar [ 1 ] = { 1 } ;",
        "for ( i = 0 ; i < l ; i ++ )"
      ],
      "err_line": 6,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        12,
        6
      ],
      "mod_code": [
        "ar . begin ( ) ;",
        "for ( i = 0 ; i < l ; i ++ )"
      ],
      "err_line": 6,
      "err_msg": "‘i’ was not declared in this scope"
    }
  ]
}