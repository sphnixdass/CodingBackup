{
  "meta": {
    "index": 1648,
    "hitid": "3PIOQ99R7YGOCN31QHVURB7M8JSNUY",
    "workerid": "A1APYLD4DUK33J",
    "probid": "17A",
    "subid": "48774159"
  },
  "lines": [
    {
      "line": 0,
      "text": "create integer array primes with size 600 , create integer point with point = 0",
      "code": "int primes [ 600 ] , point = 0 ;",
      "indent": 0
    },
    {
      "line": 1,
      "text": "declare isprime with integer x as argument , returning boolean",
      "code": "bool isprime ( int x )",
      "indent": 0
    },
    {
      "line": 2,
      "text": "create integer res with res = 0",
      "code": "int res = 0 ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "for i = 1 to x inclusive",
      "code": "for ( int i = 1 ; i <= x ; i ++ )",
      "indent": 1
    },
    {
      "line": 4,
      "text": "if x % i is 0 , increment res",
      "code": "if ( x % i == 0 ) res ++ ;",
      "indent": 2
    },
    {
      "line": 5,
      "text": "return true if res is 2 , else false",
      "code": "return res == 2 ;",
      "indent": 1
    },
    {
      "line": 6,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    },
    {
      "line": 7,
      "text": "declare putprime with no arguments , returning void",
      "code": "void putprime ( )",
      "indent": 0
    },
    {
      "line": 8,
      "text": "for i = 2 to 600 exclusive",
      "code": "for ( int i = 2 ; i < 600 ; i ++ )",
      "indent": 1
    },
    {
      "line": 9,
      "text": "if result of run isprime with i as argument is true , set primes [ increment point ] to i",
      "code": "if ( isprime ( i ) ) primes [ point ++ ] = i ;",
      "indent": 2
    },
    {
      "line": 10,
      "text": "return from function",
      "code": "return ;",
      "indent": 1
    },
    {
      "line": 11,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    },
    {
      "line": 12,
      "text": "declare isNoldPrime with integer x as argument , returning boolean",
      "code": "bool isNoldPrime ( int x )",
      "indent": 0
    },
    {
      "line": 13,
      "text": "if result of run isprime with x as argument is false , return false from function",
      "code": "if ( ! isprime ( x ) ) return false ;",
      "indent": 1
    },
    {
      "line": 14,
      "text": "for i = 0 to primes [ i ] * 2 is less than x , incrementing i",
      "code": "for ( int i = 0 ; primes [ i ] * 2 <= x ; i ++ )",
      "indent": 1
    },
    {
      "line": 15,
      "text": "if primes [ i ] + primes [ i + 1 ] + 1 is x , return true",
      "code": "if ( primes [ i ] + primes [ i + 1 ] + 1 == x ) return true ;",
      "indent": 2
    },
    {
      "line": 16,
      "text": "return false from function",
      "code": "return false ;",
      "indent": 1
    },
    {
      "line": 17,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    },
    {
      "line": 18,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 19,
      "text": "create integers a , b",
      "code": "int a , b ;",
      "indent": 1
    },
    {
      "line": 20,
      "text": "read a read b",
      "code": "cin >> a >> b ;",
      "indent": 1
    },
    {
      "line": 21,
      "text": "run putprime",
      "code": "putprime ( ) ;",
      "indent": 1
    },
    {
      "line": 22,
      "text": "for i = 2 to a inclusive",
      "code": "for ( int i = 2 ; i <= a ; i ++ )",
      "indent": 1
    },
    {
      "line": 23,
      "text": "if run isNoldPrime with i as argument is true , decrement b",
      "code": "if ( isNoldPrime ( i ) ) b -- ;",
      "indent": 2
    },
    {
      "line": 24,
      "text": "print \" YES \" if b is less than or equal to 0 , else \" NO \"",
      "code": "puts ( b <= 0 ? \" YES \" : \" NO \" ) ;",
      "indent": 1
    },
    {
      "line": 25,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 26,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        7
      ],
      "mod_code": [
        "void putprime ( ) { }"
      ],
      "err_line": 8,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        1
      ],
      "mod_code": [
        "bool isprime ( int x ) ;"
      ],
      "err_line": 2,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        3
      ],
      "mod_code": [
        "for ( i = 1 ; i <= x ; i ++ )"
      ],
      "err_line": 3,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        8
      ],
      "mod_code": [
        "for ( i = 2 ; i < 600 ; i ++ )"
      ],
      "err_line": 8,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        9
      ],
      "mod_code": [
        "if ( isprime ( i ) ) primes [ ++ ++ ] = i ;"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘]’ token"
    },
    {
      "mod_line": [
        10
      ],
      "mod_code": [
        "return return ;"
      ],
      "err_line": 10,
      "err_msg": "expected primary-expression before ‘return’"
    },
    {
      "mod_line": [
        12
      ],
      "mod_code": [
        "bool isNoldPrime ( int x ) ;"
      ],
      "err_line": 13,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        14
      ],
      "mod_code": [
        "for ( i = 0 ; primes [ i ] * 2 < x ; i ++ )"
      ],
      "err_line": 14,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        16
      ],
      "mod_code": [
        "return ;"
      ],
      "err_line": 16,
      "err_msg": "return-statement with no value, in function returning ‘bool’ [-fpermissive]"
    },
    {
      "mod_line": [
        21
      ],
      "mod_code": [
        "putprime ( )"
      ],
      "err_line": 22,
      "err_msg": "expected ‘;’ before ‘for’"
    },
    {
      "mod_line": [
        22
      ],
      "mod_code": [
        "for ( i = 2 ; i <= a ; i ++ )"
      ],
      "err_line": 22,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        7,
        8
      ],
      "mod_code": [
        "void putprime ( ) { }",
        "for ( i = 2 ; i < 600 ; i ++ )"
      ],
      "err_line": 8,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        7,
        8,
        14
      ],
      "mod_code": [
        "void putprime ( ) { }",
        "for ( i = 2 ; i < 600 ; i ++ )",
        "for ( i = 0 ; primes [ i ] * 2 < x ; i ++ )"
      ],
      "err_line": 8,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        7,
        8,
        14,
        16
      ],
      "mod_code": [
        "void putprime ( ) { }",
        "for ( i = 2 ; i < 600 ; i ++ )",
        "for ( i = 0 ; primes [ i ] * 2 < x ; i ++ )",
        "return ;"
      ],
      "err_line": 8,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        7,
        8,
        14,
        10
      ],
      "mod_code": [
        "void putprime ( ) { }",
        "for ( i = 2 ; i < 600 ; i ++ )",
        "for ( i = 0 ; primes [ i ] * 2 < x ; i ++ )",
        "return return ;"
      ],
      "err_line": 8,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        7,
        8,
        14,
        1
      ],
      "mod_code": [
        "void putprime ( ) { }",
        "for ( i = 2 ; i < 600 ; i ++ )",
        "for ( i = 0 ; primes [ i ] * 2 < x ; i ++ )",
        "bool isprime ( int x ) ;"
      ],
      "err_line": 2,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        7,
        8,
        16
      ],
      "mod_code": [
        "void putprime ( ) { }",
        "for ( i = 2 ; i < 600 ; i ++ )",
        "return ;"
      ],
      "err_line": 8,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        7,
        8,
        16,
        10
      ],
      "mod_code": [
        "void putprime ( ) { }",
        "for ( i = 2 ; i < 600 ; i ++ )",
        "return ;",
        "return return ;"
      ],
      "err_line": 8,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        7,
        8,
        16,
        1
      ],
      "mod_code": [
        "void putprime ( ) { }",
        "for ( i = 2 ; i < 600 ; i ++ )",
        "return ;",
        "bool isprime ( int x ) ;"
      ],
      "err_line": 2,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        7,
        8,
        10
      ],
      "mod_code": [
        "void putprime ( ) { }",
        "for ( i = 2 ; i < 600 ; i ++ )",
        "return return ;"
      ],
      "err_line": 8,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        7,
        8,
        10,
        1
      ],
      "mod_code": [
        "void putprime ( ) { }",
        "for ( i = 2 ; i < 600 ; i ++ )",
        "return return ;",
        "bool isprime ( int x ) ;"
      ],
      "err_line": 2,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        7,
        8,
        1
      ],
      "mod_code": [
        "void putprime ( ) { }",
        "for ( i = 2 ; i < 600 ; i ++ )",
        "bool isprime ( int x ) ;"
      ],
      "err_line": 2,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        7,
        14
      ],
      "mod_code": [
        "void putprime ( ) { }",
        "for ( i = 0 ; primes [ i ] * 2 < x ; i ++ )"
      ],
      "err_line": 8,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        7,
        14,
        16
      ],
      "mod_code": [
        "void putprime ( ) { }",
        "for ( i = 0 ; primes [ i ] * 2 < x ; i ++ )",
        "return ;"
      ],
      "err_line": 8,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        7,
        14,
        16,
        10
      ],
      "mod_code": [
        "void putprime ( ) { }",
        "for ( i = 0 ; primes [ i ] * 2 < x ; i ++ )",
        "return ;",
        "return return ;"
      ],
      "err_line": 8,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        7,
        14,
        16,
        1
      ],
      "mod_code": [
        "void putprime ( ) { }",
        "for ( i = 0 ; primes [ i ] * 2 < x ; i ++ )",
        "return ;",
        "bool isprime ( int x ) ;"
      ],
      "err_line": 2,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        7,
        14,
        10
      ],
      "mod_code": [
        "void putprime ( ) { }",
        "for ( i = 0 ; primes [ i ] * 2 < x ; i ++ )",
        "return return ;"
      ],
      "err_line": 8,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        7,
        14,
        10,
        1
      ],
      "mod_code": [
        "void putprime ( ) { }",
        "for ( i = 0 ; primes [ i ] * 2 < x ; i ++ )",
        "return return ;",
        "bool isprime ( int x ) ;"
      ],
      "err_line": 2,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        7,
        14,
        1
      ],
      "mod_code": [
        "void putprime ( ) { }",
        "for ( i = 0 ; primes [ i ] * 2 < x ; i ++ )",
        "bool isprime ( int x ) ;"
      ],
      "err_line": 2,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        7,
        16
      ],
      "mod_code": [
        "void putprime ( ) { }",
        "return ;"
      ],
      "err_line": 8,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        7,
        16,
        10
      ],
      "mod_code": [
        "void putprime ( ) { }",
        "return ;",
        "return return ;"
      ],
      "err_line": 8,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        7,
        16,
        10,
        1
      ],
      "mod_code": [
        "void putprime ( ) { }",
        "return ;",
        "return return ;",
        "bool isprime ( int x ) ;"
      ],
      "err_line": 2,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        7,
        16,
        1
      ],
      "mod_code": [
        "void putprime ( ) { }",
        "return ;",
        "bool isprime ( int x ) ;"
      ],
      "err_line": 2,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        7,
        10
      ],
      "mod_code": [
        "void putprime ( ) { }",
        "return return ;"
      ],
      "err_line": 8,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        7,
        10,
        1
      ],
      "mod_code": [
        "void putprime ( ) { }",
        "return return ;",
        "bool isprime ( int x ) ;"
      ],
      "err_line": 2,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        7,
        1
      ],
      "mod_code": [
        "void putprime ( ) { }",
        "bool isprime ( int x ) ;"
      ],
      "err_line": 2,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        8,
        14
      ],
      "mod_code": [
        "for ( i = 2 ; i < 600 ; i ++ )",
        "for ( i = 0 ; primes [ i ] * 2 < x ; i ++ )"
      ],
      "err_line": 8,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        8,
        14,
        16
      ],
      "mod_code": [
        "for ( i = 2 ; i < 600 ; i ++ )",
        "for ( i = 0 ; primes [ i ] * 2 < x ; i ++ )",
        "return ;"
      ],
      "err_line": 8,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        8,
        14,
        16,
        10
      ],
      "mod_code": [
        "for ( i = 2 ; i < 600 ; i ++ )",
        "for ( i = 0 ; primes [ i ] * 2 < x ; i ++ )",
        "return ;",
        "return return ;"
      ],
      "err_line": 8,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        8,
        14,
        16,
        1
      ],
      "mod_code": [
        "for ( i = 2 ; i < 600 ; i ++ )",
        "for ( i = 0 ; primes [ i ] * 2 < x ; i ++ )",
        "return ;",
        "bool isprime ( int x ) ;"
      ],
      "err_line": 2,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        8,
        14,
        10
      ],
      "mod_code": [
        "for ( i = 2 ; i < 600 ; i ++ )",
        "for ( i = 0 ; primes [ i ] * 2 < x ; i ++ )",
        "return return ;"
      ],
      "err_line": 8,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        8,
        14,
        10,
        1
      ],
      "mod_code": [
        "for ( i = 2 ; i < 600 ; i ++ )",
        "for ( i = 0 ; primes [ i ] * 2 < x ; i ++ )",
        "return return ;",
        "bool isprime ( int x ) ;"
      ],
      "err_line": 2,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        8,
        14,
        1
      ],
      "mod_code": [
        "for ( i = 2 ; i < 600 ; i ++ )",
        "for ( i = 0 ; primes [ i ] * 2 < x ; i ++ )",
        "bool isprime ( int x ) ;"
      ],
      "err_line": 2,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        8,
        16
      ],
      "mod_code": [
        "for ( i = 2 ; i < 600 ; i ++ )",
        "return ;"
      ],
      "err_line": 8,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        8,
        16,
        10
      ],
      "mod_code": [
        "for ( i = 2 ; i < 600 ; i ++ )",
        "return ;",
        "return return ;"
      ],
      "err_line": 8,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        8,
        16,
        10,
        1
      ],
      "mod_code": [
        "for ( i = 2 ; i < 600 ; i ++ )",
        "return ;",
        "return return ;",
        "bool isprime ( int x ) ;"
      ],
      "err_line": 2,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        8,
        16,
        1
      ],
      "mod_code": [
        "for ( i = 2 ; i < 600 ; i ++ )",
        "return ;",
        "bool isprime ( int x ) ;"
      ],
      "err_line": 2,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        8,
        10
      ],
      "mod_code": [
        "for ( i = 2 ; i < 600 ; i ++ )",
        "return return ;"
      ],
      "err_line": 8,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        8,
        10,
        1
      ],
      "mod_code": [
        "for ( i = 2 ; i < 600 ; i ++ )",
        "return return ;",
        "bool isprime ( int x ) ;"
      ],
      "err_line": 2,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        8,
        1
      ],
      "mod_code": [
        "for ( i = 2 ; i < 600 ; i ++ )",
        "bool isprime ( int x ) ;"
      ],
      "err_line": 2,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        14,
        16
      ],
      "mod_code": [
        "for ( i = 0 ; primes [ i ] * 2 < x ; i ++ )",
        "return ;"
      ],
      "err_line": 14,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        16,
        10
      ],
      "mod_code": [
        "for ( i = 0 ; primes [ i ] * 2 < x ; i ++ )",
        "return ;",
        "return return ;"
      ],
      "err_line": 10,
      "err_msg": "expected primary-expression before ‘return’"
    },
    {
      "mod_line": [
        14,
        16,
        10,
        1
      ],
      "mod_code": [
        "for ( i = 0 ; primes [ i ] * 2 < x ; i ++ )",
        "return ;",
        "return return ;",
        "bool isprime ( int x ) ;"
      ],
      "err_line": 2,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        14,
        16,
        1
      ],
      "mod_code": [
        "for ( i = 0 ; primes [ i ] * 2 < x ; i ++ )",
        "return ;",
        "bool isprime ( int x ) ;"
      ],
      "err_line": 2,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        14,
        10
      ],
      "mod_code": [
        "for ( i = 0 ; primes [ i ] * 2 < x ; i ++ )",
        "return return ;"
      ],
      "err_line": 10,
      "err_msg": "expected primary-expression before ‘return’"
    },
    {
      "mod_line": [
        14,
        10,
        1
      ],
      "mod_code": [
        "for ( i = 0 ; primes [ i ] * 2 < x ; i ++ )",
        "return return ;",
        "bool isprime ( int x ) ;"
      ],
      "err_line": 2,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        14,
        1
      ],
      "mod_code": [
        "for ( i = 0 ; primes [ i ] * 2 < x ; i ++ )",
        "bool isprime ( int x ) ;"
      ],
      "err_line": 2,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        16,
        10
      ],
      "mod_code": [
        "return ;",
        "return return ;"
      ],
      "err_line": 10,
      "err_msg": "expected primary-expression before ‘return’"
    },
    {
      "mod_line": [
        16,
        10,
        1
      ],
      "mod_code": [
        "return ;",
        "return return ;",
        "bool isprime ( int x ) ;"
      ],
      "err_line": 2,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        16,
        1
      ],
      "mod_code": [
        "return ;",
        "bool isprime ( int x ) ;"
      ],
      "err_line": 2,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        10,
        1
      ],
      "mod_code": [
        "return return ;",
        "bool isprime ( int x ) ;"
      ],
      "err_line": 2,
      "err_msg": "expected unqualified-id before ‘{’ token"
    }
  ]
}