{
  "meta": {
    "index": 63,
    "hitid": "3WRBLBQ2GR22M9AZ564FCKAISKL0GO",
    "workerid": "A1AYVATMT88U1W",
    "probid": "271A",
    "subid": "48979053"
  },
  "lines": [
    {
      "line": 0,
      "text": "let arr be an integer array of size 5000",
      "code": "int arr [ 5000 ] ;",
      "indent": 0
    },
    {
      "line": 1,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 2,
      "text": "i , j , k , l , ans , n are integers",
      "code": "int i , j , k , l , ans , n ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "for i = 1 , ans = 0 to 10 inclusive",
      "code": "for ( i = 1 , ans = 0 ; i < 10 ; i ++ )",
      "indent": 1
    },
    {
      "line": 4,
      "text": "for j = 0 to 10 exclusive",
      "code": "for ( j = 0 ; j < 10 ; j ++ )",
      "indent": 2
    },
    {
      "line": 5,
      "text": "if i is not equal to j",
      "code": "if ( i != j )",
      "indent": 3
    },
    {
      "line": 6,
      "text": "for k = 0 to 10 exclusive",
      "code": "for ( k = 0 ; k < 10 ; k ++ )",
      "indent": 4
    },
    {
      "line": 7,
      "text": "if k is not equal to i and j ,",
      "code": "if ( k != i && k != j )",
      "indent": 5
    },
    {
      "line": 8,
      "text": "for l = 0 to 10 exclusive",
      "code": "for ( l = 0 ; l < 10 ; l ++ )",
      "indent": 6
    },
    {
      "line": 9,
      "text": "if l is not equal to i , j and k , arr [ ans + + ] = 1000 * i + 100 * j + 10 * k + l",
      "code": "if ( l != i && l != j && l != k ) arr [ ans ++ ] = 1000 * i + 100 * j + 10 * k + l ;",
      "indent": 7
    },
    {
      "line": 10,
      "text": "read n",
      "code": "cin >> n ;",
      "indent": 1
    },
    {
      "line": 11,
      "text": "for i = 0 to ans exclusive",
      "code": "for ( i = 0 ; i < ans ; i ++ )",
      "indent": 1
    },
    {
      "line": 12,
      "text": "if arr [ i ] > n",
      "code": "if ( arr [ i ] > n )",
      "indent": 2
    },
    {
      "line": 13,
      "text": "print arr [ i ] and newline",
      "code": "cout << arr [ i ] << endl ;",
      "indent": 3
    },
    {
      "line": 14,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 3
    },
    {
      "line": 15,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 16,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 17,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        5
      ],
      "mod_code": [
        "if ( i is j )"
      ],
      "err_line": 5,
      "err_msg": "expected ‘)’ before ‘is’"
    },
    {
      "mod_line": [
        7,
        9,
        5
      ],
      "mod_code": [
        "if ( k != i && j != j )",
        "if ( l != i ) j += i ;",
        "if ( i is j )"
      ],
      "err_line": 5,
      "err_msg": "expected ‘)’ before ‘is’"
    },
    {
      "mod_line": [
        7,
        9,
        5
      ],
      "mod_code": [
        "if ( k != i && j != j )",
        "if ( l != i ) j *= i ;",
        "if ( i is j )"
      ],
      "err_line": 5,
      "err_msg": "expected ‘)’ before ‘is’"
    },
    {
      "mod_line": [
        7,
        5
      ],
      "mod_code": [
        "if ( k != i && j != j )",
        "if ( i is j )"
      ],
      "err_line": 5,
      "err_msg": "expected ‘)’ before ‘is’"
    },
    {
      "mod_line": [
        9,
        7,
        5
      ],
      "mod_code": [
        "if ( l != i ) j += i ;",
        "if ( k != i && j )",
        "if ( i is j )"
      ],
      "err_line": 5,
      "err_msg": "expected ‘)’ before ‘is’"
    },
    {
      "mod_line": [
        9,
        5
      ],
      "mod_code": [
        "if ( l != i ) j += i ;",
        "if ( i is j )"
      ],
      "err_line": 5,
      "err_msg": "expected ‘)’ before ‘is’"
    },
    {
      "mod_line": [
        7,
        9,
        5
      ],
      "mod_code": [
        "if ( k != i && j )",
        "if ( l != i ) j *= i ;",
        "if ( i is j )"
      ],
      "err_line": 5,
      "err_msg": "expected ‘)’ before ‘is’"
    },
    {
      "mod_line": [
        7,
        5
      ],
      "mod_code": [
        "if ( k != i && j )",
        "if ( i is j )"
      ],
      "err_line": 5,
      "err_msg": "expected ‘)’ before ‘is’"
    },
    {
      "mod_line": [
        9,
        5
      ],
      "mod_code": [
        "if ( l != i ) j *= i ;",
        "if ( i is j )"
      ],
      "err_line": 5,
      "err_msg": "expected ‘)’ before ‘is’"
    }
  ]
}