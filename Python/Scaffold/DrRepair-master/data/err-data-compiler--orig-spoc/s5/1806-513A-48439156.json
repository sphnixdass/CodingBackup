{
  "meta": {
    "index": 1806,
    "hitid": "35JDMRECC431DZPTDD3UX9CMLYSGEC",
    "workerid": "AIWEXPJAU66D9",
    "probid": "513A",
    "subid": "48439156"
  },
  "lines": [
    {
      "line": 0,
      "text": "create constant integer MAXX with value 100000 + 10",
      "code": "const int MAXX = 100000 + 10 ;",
      "indent": 0
    },
    {
      "line": 1,
      "text": "create constant double PI with value 3 . 14159265358979323846",
      "code": "const double PI = 3.14159265358979323846 ;",
      "indent": 0
    },
    {
      "line": 2,
      "text": "create constant long long mod with value 1000000007",
      "code": "const long long mod = 1000000007 ;",
      "indent": 0
    },
    {
      "line": 3,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 4,
      "text": "declare integer variables n1 , n2 , k1 and k2",
      "code": "int n1 , n2 , k1 , k2 ;",
      "indent": 1
    },
    {
      "line": 5,
      "text": "read n1 , n2 , k1 and k2",
      "code": "cin >> n1 >> n2 >> k1 >> k2 ;",
      "indent": 1
    },
    {
      "line": 6,
      "text": "if n1 < = n2",
      "code": "if ( n1 <= n2 )",
      "indent": 1
    },
    {
      "line": 7,
      "text": "print \" Second \"",
      "code": "cout << \" Second \" << endl ;",
      "indent": 2
    },
    {
      "line": 8,
      "text": "else",
      "code": "else",
      "indent": 1
    },
    {
      "line": 9,
      "text": "print \" First \"",
      "code": "cout << \" First \" << endl ;",
      "indent": 2
    },
    {
      "line": 10,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 11,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 12,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        0
      ],
      "mod_code": [
        "const int MAXX create 100000 + 10 ;"
      ],
      "err_line": 0,
      "err_msg": "expected initializer before ‘create’"
    },
    {
      "mod_line": [
        5
      ],
      "mod_code": [
        "cin >> n1 >> n2 >> k1 >> n ;"
      ],
      "err_line": 5,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        7
      ],
      "mod_code": [
        "cin >> n1 >> n2 >> k1 >> n ;",
        "cout << \" Second \" ;"
      ],
      "err_line": 5,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        7,
        0
      ],
      "mod_code": [
        "cin >> n1 >> n2 >> k1 >> n ;",
        "cout << \" Second \" ;",
        "const int MAXX create 100000 + 10 ;"
      ],
      "err_line": 0,
      "err_msg": "expected initializer before ‘create’"
    },
    {
      "mod_line": [
        5,
        7,
        0,
        9
      ],
      "mod_code": [
        "cin >> n1 >> n2 >> k1 >> n ;",
        "cout << \" Second \" ;",
        "const int MAXX create 100000 + 10 ;",
        "cout << \" First \" ;"
      ],
      "err_line": 0,
      "err_msg": "expected initializer before ‘create’"
    },
    {
      "mod_line": [
        5,
        7,
        0,
        6
      ],
      "mod_code": [
        "cin >> n1 >> n2 >> k1 >> n ;",
        "cout << \" Second \" ;",
        "const int MAXX create 100000 + 10 ;",
        "if ( n1 < n2 )"
      ],
      "err_line": 0,
      "err_msg": "expected initializer before ‘create’"
    },
    {
      "mod_line": [
        5,
        7,
        9
      ],
      "mod_code": [
        "cin >> n1 >> n2 >> k1 >> n ;",
        "cout << \" Second \" ;",
        "cout << \" First \" ;"
      ],
      "err_line": 5,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        7,
        9,
        6
      ],
      "mod_code": [
        "cin >> n1 >> n2 >> k1 >> n ;",
        "cout << \" Second \" ;",
        "cout << \" First \" ;",
        "if ( n1 < n2 )"
      ],
      "err_line": 5,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        7,
        6
      ],
      "mod_code": [
        "cin >> n1 >> n2 >> k1 >> n ;",
        "cout << \" Second \" ;",
        "if ( n1 < n2 )"
      ],
      "err_line": 5,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        0
      ],
      "mod_code": [
        "cin >> n1 >> n2 >> k1 >> n ;",
        "const int MAXX create 100000 + 10 ;"
      ],
      "err_line": 0,
      "err_msg": "expected initializer before ‘create’"
    },
    {
      "mod_line": [
        5,
        0,
        9
      ],
      "mod_code": [
        "cin >> n1 >> n2 >> k1 >> n ;",
        "const int MAXX create 100000 + 10 ;",
        "cout << \" First \" ;"
      ],
      "err_line": 0,
      "err_msg": "expected initializer before ‘create’"
    },
    {
      "mod_line": [
        5,
        0,
        9,
        6
      ],
      "mod_code": [
        "cin >> n1 >> n2 >> k1 >> n ;",
        "const int MAXX create 100000 + 10 ;",
        "cout << \" First \" ;",
        "if ( n1 < n2 )"
      ],
      "err_line": 0,
      "err_msg": "expected initializer before ‘create’"
    },
    {
      "mod_line": [
        5,
        0,
        6
      ],
      "mod_code": [
        "cin >> n1 >> n2 >> k1 >> n ;",
        "const int MAXX create 100000 + 10 ;",
        "if ( n1 < n2 )"
      ],
      "err_line": 0,
      "err_msg": "expected initializer before ‘create’"
    },
    {
      "mod_line": [
        5,
        9
      ],
      "mod_code": [
        "cin >> n1 >> n2 >> k1 >> n ;",
        "cout << \" First \" ;"
      ],
      "err_line": 5,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        9,
        6
      ],
      "mod_code": [
        "cin >> n1 >> n2 >> k1 >> n ;",
        "cout << \" First \" ;",
        "if ( n1 < n2 )"
      ],
      "err_line": 5,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        6
      ],
      "mod_code": [
        "cin >> n1 >> n2 >> k1 >> n ;",
        "if ( n1 < n2 )"
      ],
      "err_line": 5,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        7,
        0
      ],
      "mod_code": [
        "cout << \" Second \" ;",
        "const int MAXX create 100000 + 10 ;"
      ],
      "err_line": 0,
      "err_msg": "expected initializer before ‘create’"
    },
    {
      "mod_line": [
        7,
        0,
        9
      ],
      "mod_code": [
        "cout << \" Second \" ;",
        "const int MAXX create 100000 + 10 ;",
        "cout << \" First \" ;"
      ],
      "err_line": 0,
      "err_msg": "expected initializer before ‘create’"
    },
    {
      "mod_line": [
        7,
        0,
        9,
        6
      ],
      "mod_code": [
        "cout << \" Second \" ;",
        "const int MAXX create 100000 + 10 ;",
        "cout << \" First \" ;",
        "if ( n1 < n2 )"
      ],
      "err_line": 0,
      "err_msg": "expected initializer before ‘create’"
    },
    {
      "mod_line": [
        7,
        0,
        6
      ],
      "mod_code": [
        "cout << \" Second \" ;",
        "const int MAXX create 100000 + 10 ;",
        "if ( n1 < n2 )"
      ],
      "err_line": 0,
      "err_msg": "expected initializer before ‘create’"
    },
    {
      "mod_line": [
        0,
        9
      ],
      "mod_code": [
        "const int MAXX create 100000 + 10 ;",
        "cout << \" First \" ;"
      ],
      "err_line": 0,
      "err_msg": "expected initializer before ‘create’"
    },
    {
      "mod_line": [
        0,
        9,
        6
      ],
      "mod_code": [
        "const int MAXX create 100000 + 10 ;",
        "cout << \" First \" ;",
        "if ( n1 < n2 )"
      ],
      "err_line": 0,
      "err_msg": "expected initializer before ‘create’"
    },
    {
      "mod_line": [
        0,
        6
      ],
      "mod_code": [
        "const int MAXX create 100000 + 10 ;",
        "if ( n1 < n2 )"
      ],
      "err_line": 0,
      "err_msg": "expected initializer before ‘create’"
    }
  ]
}