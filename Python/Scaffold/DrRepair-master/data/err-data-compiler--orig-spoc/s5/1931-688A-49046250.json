{
  "meta": {
    "index": 1931,
    "hitid": "3B9XR6P1WEPDXY3ABSM7TEYHBGQBJG",
    "workerid": "A1APYLD4DUK33J",
    "probid": "688A",
    "subid": "49046250"
  },
  "lines": [
    {
      "line": 0,
      "text": "create integer array book with size 101",
      "code": "int book [ 101 ] ;",
      "indent": 0
    },
    {
      "line": 1,
      "text": "create integers n , d",
      "code": "int n , d ;",
      "indent": 0
    },
    {
      "line": 2,
      "text": "declare istrue with string str as argument , returning boolean",
      "code": "bool istrue ( string str )",
      "indent": 0
    },
    {
      "line": 3,
      "text": "for i = 0 to n exclusive",
      "code": "for ( int i = 0 ; i < n ; i ++ )",
      "indent": 1
    },
    {
      "line": 4,
      "text": "if str [ i ] is ' 0 ' , return true from function",
      "code": "if ( str [ i ] == ' 0 ' ) return true ;",
      "indent": 2
    },
    {
      "line": 5,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 6,
      "text": "return false from function",
      "code": "return false ;",
      "indent": 1
    },
    {
      "line": 7,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    },
    {
      "line": 8,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 9,
      "text": "create string str",
      "code": "string str ;",
      "indent": 1
    },
    {
      "line": 10,
      "text": "read n read d",
      "code": "cin >> n >> d ;",
      "indent": 1
    },
    {
      "line": 11,
      "text": "for i = 0 to d exclusive",
      "code": "for ( int i = 0 ; i < d ; i ++ )",
      "indent": 1
    },
    {
      "line": 12,
      "text": "read str",
      "code": "cin >> str ;",
      "indent": 2
    },
    {
      "line": 13,
      "text": "if result of run istrue with str as argument is true , set book [ i ] to 1",
      "code": "if ( istrue ( str ) ) { book [ i ] = 1 ; }",
      "indent": 2
    },
    {
      "line": 14,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 15,
      "text": "create integers sum , coun , with sum = 0 , coun = 0",
      "code": "int sum = 0 , coun = 0 ;",
      "indent": 1
    },
    {
      "line": 16,
      "text": "for i = 0 to d exclusive",
      "code": "for ( int i = 0 ; i < d ; i ++ )",
      "indent": 1
    },
    {
      "line": 17,
      "text": "if book [ i ] is true",
      "code": "if ( book [ i ] )",
      "indent": 2
    },
    {
      "line": 18,
      "text": "increment sum",
      "code": "sum ++ ;",
      "indent": 3
    },
    {
      "line": 19,
      "text": "else",
      "code": "else",
      "indent": 2
    },
    {
      "line": 20,
      "text": "set coun to maximum of coun and sum",
      "code": "coun = max ( coun , sum ) ;",
      "indent": 3
    },
    {
      "line": 21,
      "text": "set sum to 0",
      "code": "sum = 0 ;",
      "indent": 3
    },
    {
      "line": 22,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 23,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 24,
      "text": "print maximum of coun and sum print newline",
      "code": "cout << max ( coun , sum ) << endl ;",
      "indent": 1
    },
    {
      "line": 25,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 26,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        0
      ],
      "mod_code": [
        "int * book [ 101 ] ;"
      ],
      "err_line": 13,
      "err_msg": "invalid conversion from ‘int’ to ‘int*’ [-fpermissive]"
    },
    {
      "mod_line": [
        2
      ],
      "mod_code": [
        "bool istrue ( string str ) ;"
      ],
      "err_line": 3,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        3
      ],
      "mod_code": [
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 3,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        6
      ],
      "mod_code": [
        "return ;"
      ],
      "err_line": 6,
      "err_msg": "return-statement with no value, in function returning ‘bool’ [-fpermissive]"
    },
    {
      "mod_line": [
        9
      ],
      "mod_code": [
        "string n ;"
      ],
      "err_line": 12,
      "err_msg": "‘str’ was not declared in this scope"
    },
    {
      "mod_line": [
        11
      ],
      "mod_code": [
        "for ( i = 0 ; i < d ; i ++ )"
      ],
      "err_line": 11,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        12
      ],
      "mod_code": [
        "gets ( str ) ;"
      ],
      "err_line": 12,
      "err_msg": "cannot convert ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ to ‘char*’ for argument ‘1’ to ‘char* gets(char*)’"
    },
    {
      "mod_line": [
        16
      ],
      "mod_code": [
        "for ( i = 0 ; i < d ; i ++ )"
      ],
      "err_line": 16,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        17
      ],
      "mod_code": [
        "if ( book [ i ] ) i ++ ;"
      ],
      "err_line": 19,
      "err_msg": "‘else’ without a previous ‘if’"
    },
    {
      "mod_line": [
        20
      ],
      "mod_code": [
        "coun = max ( coun and sum ) ;"
      ],
      "err_line": 20,
      "err_msg": "no matching function for call to ‘max(bool)’"
    },
    {
      "mod_line": [
        24
      ],
      "mod_code": [
        "cout << max ( coun and sum ) << endl ;"
      ],
      "err_line": 24,
      "err_msg": "no matching function for call to ‘max(bool)’"
    },
    {
      "mod_line": [
        6,
        12
      ],
      "mod_code": [
        "return ;",
        "gets ( str ) ;"
      ],
      "err_line": 6,
      "err_msg": "return-statement with no value, in function returning ‘bool’ [-fpermissive]"
    },
    {
      "mod_line": [
        6,
        12,
        16
      ],
      "mod_code": [
        "return ;",
        "gets ( str ) ;",
        "for ( i = 0 ; i < d ; i ++ )"
      ],
      "err_line": 6,
      "err_msg": "return-statement with no value, in function returning ‘bool’ [-fpermissive]"
    },
    {
      "mod_line": [
        6,
        12,
        16,
        11
      ],
      "mod_code": [
        "return ;",
        "gets ( str ) ;",
        "for ( i = 0 ; i < d ; i ++ )",
        "for ( i = 0 ; i < d ; i ++ )"
      ],
      "err_line": 6,
      "err_msg": "return-statement with no value, in function returning ‘bool’ [-fpermissive]"
    },
    {
      "mod_line": [
        6,
        12,
        16,
        0
      ],
      "mod_code": [
        "return ;",
        "gets ( str ) ;",
        "for ( i = 0 ; i < d ; i ++ )",
        "int * book [ 101 ] ;"
      ],
      "err_line": 6,
      "err_msg": "return-statement with no value, in function returning ‘bool’ [-fpermissive]"
    },
    {
      "mod_line": [
        6,
        12,
        16,
        21
      ],
      "mod_code": [
        "return ;",
        "gets ( str ) ;",
        "for ( i = 0 ; i < d ; i ++ )",
        "int sum = 0 ;"
      ],
      "err_line": 6,
      "err_msg": "return-statement with no value, in function returning ‘bool’ [-fpermissive]"
    },
    {
      "mod_line": [
        6,
        12,
        11
      ],
      "mod_code": [
        "return ;",
        "gets ( str ) ;",
        "for ( i = 0 ; i < d ; i ++ )"
      ],
      "err_line": 6,
      "err_msg": "return-statement with no value, in function returning ‘bool’ [-fpermissive]"
    },
    {
      "mod_line": [
        6,
        12,
        11,
        0
      ],
      "mod_code": [
        "return ;",
        "gets ( str ) ;",
        "for ( i = 0 ; i < d ; i ++ )",
        "int * book [ 101 ] ;"
      ],
      "err_line": 6,
      "err_msg": "return-statement with no value, in function returning ‘bool’ [-fpermissive]"
    },
    {
      "mod_line": [
        6,
        12,
        11,
        21
      ],
      "mod_code": [
        "return ;",
        "gets ( str ) ;",
        "for ( i = 0 ; i < d ; i ++ )",
        "int sum = 0 ;"
      ],
      "err_line": 6,
      "err_msg": "return-statement with no value, in function returning ‘bool’ [-fpermissive]"
    },
    {
      "mod_line": [
        6,
        12,
        0
      ],
      "mod_code": [
        "return ;",
        "gets ( str ) ;",
        "int * book [ 101 ] ;"
      ],
      "err_line": 6,
      "err_msg": "return-statement with no value, in function returning ‘bool’ [-fpermissive]"
    },
    {
      "mod_line": [
        6,
        12,
        0,
        21
      ],
      "mod_code": [
        "return ;",
        "gets ( str ) ;",
        "int * book [ 101 ] ;",
        "int sum = 0 ;"
      ],
      "err_line": 6,
      "err_msg": "return-statement with no value, in function returning ‘bool’ [-fpermissive]"
    },
    {
      "mod_line": [
        6,
        12,
        21
      ],
      "mod_code": [
        "return ;",
        "gets ( str ) ;",
        "int sum = 0 ;"
      ],
      "err_line": 6,
      "err_msg": "return-statement with no value, in function returning ‘bool’ [-fpermissive]"
    },
    {
      "mod_line": [
        6,
        16
      ],
      "mod_code": [
        "return ;",
        "for ( i = 0 ; i < d ; i ++ )"
      ],
      "err_line": 6,
      "err_msg": "return-statement with no value, in function returning ‘bool’ [-fpermissive]"
    },
    {
      "mod_line": [
        6,
        16,
        11
      ],
      "mod_code": [
        "return ;",
        "for ( i = 0 ; i < d ; i ++ )",
        "for ( i = 0 ; i < d ; i ++ )"
      ],
      "err_line": 6,
      "err_msg": "return-statement with no value, in function returning ‘bool’ [-fpermissive]"
    },
    {
      "mod_line": [
        6,
        16,
        11,
        0
      ],
      "mod_code": [
        "return ;",
        "for ( i = 0 ; i < d ; i ++ )",
        "for ( i = 0 ; i < d ; i ++ )",
        "int * book [ 101 ] ;"
      ],
      "err_line": 6,
      "err_msg": "return-statement with no value, in function returning ‘bool’ [-fpermissive]"
    },
    {
      "mod_line": [
        6,
        16,
        11,
        21
      ],
      "mod_code": [
        "return ;",
        "for ( i = 0 ; i < d ; i ++ )",
        "for ( i = 0 ; i < d ; i ++ )",
        "int sum = 0 ;"
      ],
      "err_line": 6,
      "err_msg": "return-statement with no value, in function returning ‘bool’ [-fpermissive]"
    },
    {
      "mod_line": [
        6,
        16,
        0
      ],
      "mod_code": [
        "return ;",
        "for ( i = 0 ; i < d ; i ++ )",
        "int * book [ 101 ] ;"
      ],
      "err_line": 6,
      "err_msg": "return-statement with no value, in function returning ‘bool’ [-fpermissive]"
    },
    {
      "mod_line": [
        6,
        16,
        0,
        21
      ],
      "mod_code": [
        "return ;",
        "for ( i = 0 ; i < d ; i ++ )",
        "int * book [ 101 ] ;",
        "int sum = 0 ;"
      ],
      "err_line": 6,
      "err_msg": "return-statement with no value, in function returning ‘bool’ [-fpermissive]"
    },
    {
      "mod_line": [
        6,
        16,
        21
      ],
      "mod_code": [
        "return ;",
        "for ( i = 0 ; i < d ; i ++ )",
        "int sum = 0 ;"
      ],
      "err_line": 6,
      "err_msg": "return-statement with no value, in function returning ‘bool’ [-fpermissive]"
    },
    {
      "mod_line": [
        6,
        11
      ],
      "mod_code": [
        "return ;",
        "for ( i = 0 ; i < d ; i ++ )"
      ],
      "err_line": 6,
      "err_msg": "return-statement with no value, in function returning ‘bool’ [-fpermissive]"
    },
    {
      "mod_line": [
        6,
        11,
        0
      ],
      "mod_code": [
        "return ;",
        "for ( i = 0 ; i < d ; i ++ )",
        "int * book [ 101 ] ;"
      ],
      "err_line": 6,
      "err_msg": "return-statement with no value, in function returning ‘bool’ [-fpermissive]"
    },
    {
      "mod_line": [
        6,
        11,
        0,
        21
      ],
      "mod_code": [
        "return ;",
        "for ( i = 0 ; i < d ; i ++ )",
        "int * book [ 101 ] ;",
        "int sum = 0 ;"
      ],
      "err_line": 6,
      "err_msg": "return-statement with no value, in function returning ‘bool’ [-fpermissive]"
    },
    {
      "mod_line": [
        6,
        11,
        21
      ],
      "mod_code": [
        "return ;",
        "for ( i = 0 ; i < d ; i ++ )",
        "int sum = 0 ;"
      ],
      "err_line": 6,
      "err_msg": "return-statement with no value, in function returning ‘bool’ [-fpermissive]"
    },
    {
      "mod_line": [
        6,
        0
      ],
      "mod_code": [
        "return ;",
        "int * book [ 101 ] ;"
      ],
      "err_line": 6,
      "err_msg": "return-statement with no value, in function returning ‘bool’ [-fpermissive]"
    },
    {
      "mod_line": [
        6,
        0,
        21
      ],
      "mod_code": [
        "return ;",
        "int * book [ 101 ] ;",
        "int sum = 0 ;"
      ],
      "err_line": 6,
      "err_msg": "return-statement with no value, in function returning ‘bool’ [-fpermissive]"
    },
    {
      "mod_line": [
        6,
        21
      ],
      "mod_code": [
        "return ;",
        "int sum = 0 ;"
      ],
      "err_line": 6,
      "err_msg": "return-statement with no value, in function returning ‘bool’ [-fpermissive]"
    },
    {
      "mod_line": [
        12,
        16
      ],
      "mod_code": [
        "gets ( str ) ;",
        "for ( i = 0 ; i < d ; i ++ )"
      ],
      "err_line": 12,
      "err_msg": "cannot convert ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ to ‘char*’ for argument ‘1’ to ‘char* gets(char*)’"
    },
    {
      "mod_line": [
        12,
        16,
        11
      ],
      "mod_code": [
        "gets ( str ) ;",
        "for ( i = 0 ; i < d ; i ++ )",
        "for ( i = 0 ; i < d ; i ++ )"
      ],
      "err_line": 11,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        12,
        16,
        11,
        0
      ],
      "mod_code": [
        "gets ( str ) ;",
        "for ( i = 0 ; i < d ; i ++ )",
        "for ( i = 0 ; i < d ; i ++ )",
        "int * book [ 101 ] ;"
      ],
      "err_line": 11,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        12,
        16,
        11,
        21
      ],
      "mod_code": [
        "gets ( str ) ;",
        "for ( i = 0 ; i < d ; i ++ )",
        "for ( i = 0 ; i < d ; i ++ )",
        "int sum = 0 ;"
      ],
      "err_line": 11,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        12,
        16,
        0
      ],
      "mod_code": [
        "gets ( str ) ;",
        "for ( i = 0 ; i < d ; i ++ )",
        "int * book [ 101 ] ;"
      ],
      "err_line": 12,
      "err_msg": "cannot convert ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ to ‘char*’ for argument ‘1’ to ‘char* gets(char*)’"
    },
    {
      "mod_line": [
        12,
        16,
        0,
        21
      ],
      "mod_code": [
        "gets ( str ) ;",
        "for ( i = 0 ; i < d ; i ++ )",
        "int * book [ 101 ] ;",
        "int sum = 0 ;"
      ],
      "err_line": 12,
      "err_msg": "cannot convert ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ to ‘char*’ for argument ‘1’ to ‘char* gets(char*)’"
    },
    {
      "mod_line": [
        12,
        16,
        21
      ],
      "mod_code": [
        "gets ( str ) ;",
        "for ( i = 0 ; i < d ; i ++ )",
        "int sum = 0 ;"
      ],
      "err_line": 12,
      "err_msg": "cannot convert ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ to ‘char*’ for argument ‘1’ to ‘char* gets(char*)’"
    },
    {
      "mod_line": [
        12,
        11
      ],
      "mod_code": [
        "gets ( str ) ;",
        "for ( i = 0 ; i < d ; i ++ )"
      ],
      "err_line": 11,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        12,
        11,
        0
      ],
      "mod_code": [
        "gets ( str ) ;",
        "for ( i = 0 ; i < d ; i ++ )",
        "int * book [ 101 ] ;"
      ],
      "err_line": 11,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        12,
        11,
        0,
        21
      ],
      "mod_code": [
        "gets ( str ) ;",
        "for ( i = 0 ; i < d ; i ++ )",
        "int * book [ 101 ] ;",
        "int sum = 0 ;"
      ],
      "err_line": 11,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        12,
        11,
        21
      ],
      "mod_code": [
        "gets ( str ) ;",
        "for ( i = 0 ; i < d ; i ++ )",
        "int sum = 0 ;"
      ],
      "err_line": 11,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        12,
        0
      ],
      "mod_code": [
        "gets ( str ) ;",
        "int * book [ 101 ] ;"
      ],
      "err_line": 12,
      "err_msg": "cannot convert ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ to ‘char*’ for argument ‘1’ to ‘char* gets(char*)’"
    },
    {
      "mod_line": [
        12,
        0,
        21
      ],
      "mod_code": [
        "gets ( str ) ;",
        "int * book [ 101 ] ;",
        "int sum = 0 ;"
      ],
      "err_line": 12,
      "err_msg": "cannot convert ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ to ‘char*’ for argument ‘1’ to ‘char* gets(char*)’"
    },
    {
      "mod_line": [
        12,
        21
      ],
      "mod_code": [
        "gets ( str ) ;",
        "int sum = 0 ;"
      ],
      "err_line": 12,
      "err_msg": "cannot convert ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ to ‘char*’ for argument ‘1’ to ‘char* gets(char*)’"
    },
    {
      "mod_line": [
        16,
        11
      ],
      "mod_code": [
        "for ( i = 0 ; i < d ; i ++ )",
        "for ( i = 0 ; i < d ; i ++ )"
      ],
      "err_line": 11,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        16,
        11,
        0
      ],
      "mod_code": [
        "for ( i = 0 ; i < d ; i ++ )",
        "for ( i = 0 ; i < d ; i ++ )",
        "int * book [ 101 ] ;"
      ],
      "err_line": 11,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        16,
        11,
        0,
        21
      ],
      "mod_code": [
        "for ( i = 0 ; i < d ; i ++ )",
        "for ( i = 0 ; i < d ; i ++ )",
        "int * book [ 101 ] ;",
        "int sum = 0 ;"
      ],
      "err_line": 11,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        16,
        11,
        21
      ],
      "mod_code": [
        "for ( i = 0 ; i < d ; i ++ )",
        "for ( i = 0 ; i < d ; i ++ )",
        "int sum = 0 ;"
      ],
      "err_line": 11,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        16,
        0
      ],
      "mod_code": [
        "for ( i = 0 ; i < d ; i ++ )",
        "int * book [ 101 ] ;"
      ],
      "err_line": 13,
      "err_msg": "invalid conversion from ‘int’ to ‘int*’ [-fpermissive]"
    },
    {
      "mod_line": [
        16,
        0,
        21
      ],
      "mod_code": [
        "for ( i = 0 ; i < d ; i ++ )",
        "int * book [ 101 ] ;",
        "int sum = 0 ;"
      ],
      "err_line": 13,
      "err_msg": "invalid conversion from ‘int’ to ‘int*’ [-fpermissive]"
    },
    {
      "mod_line": [
        16,
        21
      ],
      "mod_code": [
        "for ( i = 0 ; i < d ; i ++ )",
        "int sum = 0 ;"
      ],
      "err_line": 16,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        11,
        0
      ],
      "mod_code": [
        "for ( i = 0 ; i < d ; i ++ )",
        "int * book [ 101 ] ;"
      ],
      "err_line": 11,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        11,
        0,
        21
      ],
      "mod_code": [
        "for ( i = 0 ; i < d ; i ++ )",
        "int * book [ 101 ] ;",
        "int sum = 0 ;"
      ],
      "err_line": 11,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        11,
        21
      ],
      "mod_code": [
        "for ( i = 0 ; i < d ; i ++ )",
        "int sum = 0 ;"
      ],
      "err_line": 11,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        0,
        21
      ],
      "mod_code": [
        "int * book [ 101 ] ;",
        "int sum = 0 ;"
      ],
      "err_line": 13,
      "err_msg": "invalid conversion from ‘int’ to ‘int*’ [-fpermissive]"
    }
  ]
}