{
  "meta": {
    "index": 1140,
    "hitid": "3AQN9REUTFAW7KWTBOEGYR15Q32DY5",
    "workerid": "AIWEXPJAU66D9",
    "probid": "41A",
    "subid": "48852730"
  },
  "lines": [
    {
      "line": 0,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 1,
      "text": "let a and b be strings",
      "code": "string a , b ;",
      "indent": 1
    },
    {
      "line": 2,
      "text": "declare integers i , j and o with o = 0",
      "code": "int i , j , o = 0 ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "read a and b",
      "code": "cin >> a >> b ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "l = length of a",
      "code": "int l = a . length ( ) ;",
      "indent": 1
    },
    {
      "line": 5,
      "text": "m = length of b",
      "code": "int m = b . length ( ) ;",
      "indent": 1
    },
    {
      "line": 6,
      "text": "for i = 0 , j = m - 1 to l exclusive , incrementing i and decrementing j",
      "code": "for ( i = 0 , j = m - 1 ; i < l ; i ++ , j -- )",
      "indent": 1
    },
    {
      "line": 7,
      "text": "if a [ i ] ! = b [ j ] set o to 1",
      "code": "if ( a [ i ] != b [ j ] ) { o = 1 ; }",
      "indent": 2
    },
    {
      "line": 8,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 9,
      "text": "if o is equal to 1",
      "code": "if ( o == 1 )",
      "indent": 1
    },
    {
      "line": 10,
      "text": "print \" NO \" and a new line",
      "code": "cout << \" NO \" << endl ;",
      "indent": 2
    },
    {
      "line": 11,
      "text": "else",
      "code": "else",
      "indent": 1
    },
    {
      "line": 12,
      "text": "print \" YES \" and a new line",
      "code": "cout << \" YES \" << endl ;",
      "indent": 2
    },
    {
      "line": 13,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 14,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        1
      ],
      "mod_code": [
        "string a and b ;"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘and’ token"
    },
    {
      "mod_line": [
        3
      ],
      "mod_code": [
        "while ( cin >> a >> b )"
      ],
      "err_line": 6,
      "err_msg": "‘l’ was not declared in this scope"
    },
    {
      "mod_line": [
        4
      ],
      "mod_code": [
        "l = a . length ( ) ;"
      ],
      "err_line": 4,
      "err_msg": "‘l’ was not declared in this scope"
    },
    {
      "mod_line": [
        5
      ],
      "mod_code": [
        "m = b . length ( ) ;"
      ],
      "err_line": 5,
      "err_msg": "‘m’ was not declared in this scope"
    },
    {
      "mod_line": [
        9
      ],
      "mod_code": [
        "else if ( o == 1 )"
      ],
      "err_line": 9,
      "err_msg": "‘else’ without a previous ‘if’"
    },
    {
      "mod_line": [
        12,
        1
      ],
      "mod_code": [
        "cout << \" YES\\n \" << endl ;",
        "string a and b ;"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘and’ token"
    },
    {
      "mod_line": [
        12,
        1,
        3
      ],
      "mod_code": [
        "cout << \" YES\\n \" << endl ;",
        "string a and b ;",
        "while ( cin >> a >> b )"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘and’ token"
    },
    {
      "mod_line": [
        12,
        1,
        3,
        9
      ],
      "mod_code": [
        "cout << \" YES\\n \" << endl ;",
        "string a and b ;",
        "while ( cin >> a >> b )",
        "else if ( o == 1 )"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘and’ token"
    },
    {
      "mod_line": [
        12,
        1,
        3,
        4
      ],
      "mod_code": [
        "cout << \" YES\\n \" << endl ;",
        "string a and b ;",
        "while ( cin >> a >> b )",
        "l = a . length ( ) ;"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘and’ token"
    },
    {
      "mod_line": [
        12,
        1,
        3,
        5
      ],
      "mod_code": [
        "cout << \" YES\\n \" << endl ;",
        "string a and b ;",
        "while ( cin >> a >> b )",
        "m = b . length ( ) ;"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘and’ token"
    },
    {
      "mod_line": [
        12,
        1,
        9
      ],
      "mod_code": [
        "cout << \" YES\\n \" << endl ;",
        "string a and b ;",
        "else if ( o == 1 )"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘and’ token"
    },
    {
      "mod_line": [
        12,
        1,
        9,
        4
      ],
      "mod_code": [
        "cout << \" YES\\n \" << endl ;",
        "string a and b ;",
        "else if ( o == 1 )",
        "l = a . length ( ) ;"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘and’ token"
    },
    {
      "mod_line": [
        12,
        1,
        9,
        5
      ],
      "mod_code": [
        "cout << \" YES\\n \" << endl ;",
        "string a and b ;",
        "else if ( o == 1 )",
        "m = b . length ( ) ;"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘and’ token"
    },
    {
      "mod_line": [
        12,
        1,
        4
      ],
      "mod_code": [
        "cout << \" YES\\n \" << endl ;",
        "string a and b ;",
        "l = a . length ( ) ;"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘and’ token"
    },
    {
      "mod_line": [
        12,
        1,
        4,
        5
      ],
      "mod_code": [
        "cout << \" YES\\n \" << endl ;",
        "string a and b ;",
        "l = a . length ( ) ;",
        "m = b . length ( ) ;"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘and’ token"
    },
    {
      "mod_line": [
        12,
        1,
        5
      ],
      "mod_code": [
        "cout << \" YES\\n \" << endl ;",
        "string a and b ;",
        "m = b . length ( ) ;"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘and’ token"
    },
    {
      "mod_line": [
        12,
        3
      ],
      "mod_code": [
        "cout << \" YES\\n \" << endl ;",
        "while ( cin >> a >> b )"
      ],
      "err_line": 6,
      "err_msg": "‘l’ was not declared in this scope"
    },
    {
      "mod_line": [
        12,
        3,
        9
      ],
      "mod_code": [
        "cout << \" YES\\n \" << endl ;",
        "while ( cin >> a >> b )",
        "else if ( o == 1 )"
      ],
      "err_line": 6,
      "err_msg": "‘l’ was not declared in this scope"
    },
    {
      "mod_line": [
        12,
        3,
        9,
        4
      ],
      "mod_code": [
        "cout << \" YES\\n \" << endl ;",
        "while ( cin >> a >> b )",
        "else if ( o == 1 )",
        "l = a . length ( ) ;"
      ],
      "err_line": 4,
      "err_msg": "‘l’ was not declared in this scope"
    },
    {
      "mod_line": [
        12,
        3,
        9,
        5
      ],
      "mod_code": [
        "cout << \" YES\\n \" << endl ;",
        "while ( cin >> a >> b )",
        "else if ( o == 1 )",
        "m = b . length ( ) ;"
      ],
      "err_line": 5,
      "err_msg": "‘m’ was not declared in this scope"
    },
    {
      "mod_line": [
        12,
        3,
        4
      ],
      "mod_code": [
        "cout << \" YES\\n \" << endl ;",
        "while ( cin >> a >> b )",
        "l = a . length ( ) ;"
      ],
      "err_line": 4,
      "err_msg": "‘l’ was not declared in this scope"
    },
    {
      "mod_line": [
        12,
        3,
        4,
        5
      ],
      "mod_code": [
        "cout << \" YES\\n \" << endl ;",
        "while ( cin >> a >> b )",
        "l = a . length ( ) ;",
        "m = b . length ( ) ;"
      ],
      "err_line": 4,
      "err_msg": "‘l’ was not declared in this scope"
    },
    {
      "mod_line": [
        12,
        3,
        5
      ],
      "mod_code": [
        "cout << \" YES\\n \" << endl ;",
        "while ( cin >> a >> b )",
        "m = b . length ( ) ;"
      ],
      "err_line": 5,
      "err_msg": "‘m’ was not declared in this scope"
    },
    {
      "mod_line": [
        12,
        9
      ],
      "mod_code": [
        "cout << \" YES\\n \" << endl ;",
        "else if ( o == 1 )"
      ],
      "err_line": 9,
      "err_msg": "‘else’ without a previous ‘if’"
    },
    {
      "mod_line": [
        12,
        9,
        4
      ],
      "mod_code": [
        "cout << \" YES\\n \" << endl ;",
        "else if ( o == 1 )",
        "l = a . length ( ) ;"
      ],
      "err_line": 4,
      "err_msg": "‘l’ was not declared in this scope"
    },
    {
      "mod_line": [
        12,
        9,
        4,
        5
      ],
      "mod_code": [
        "cout << \" YES\\n \" << endl ;",
        "else if ( o == 1 )",
        "l = a . length ( ) ;",
        "m = b . length ( ) ;"
      ],
      "err_line": 4,
      "err_msg": "‘l’ was not declared in this scope"
    },
    {
      "mod_line": [
        12,
        9,
        5
      ],
      "mod_code": [
        "cout << \" YES\\n \" << endl ;",
        "else if ( o == 1 )",
        "m = b . length ( ) ;"
      ],
      "err_line": 5,
      "err_msg": "‘m’ was not declared in this scope"
    },
    {
      "mod_line": [
        12,
        4
      ],
      "mod_code": [
        "cout << \" YES\\n \" << endl ;",
        "l = a . length ( ) ;"
      ],
      "err_line": 4,
      "err_msg": "‘l’ was not declared in this scope"
    },
    {
      "mod_line": [
        12,
        4,
        5
      ],
      "mod_code": [
        "cout << \" YES\\n \" << endl ;",
        "l = a . length ( ) ;",
        "m = b . length ( ) ;"
      ],
      "err_line": 4,
      "err_msg": "‘l’ was not declared in this scope"
    },
    {
      "mod_line": [
        12,
        5
      ],
      "mod_code": [
        "cout << \" YES\\n \" << endl ;",
        "m = b . length ( ) ;"
      ],
      "err_line": 5,
      "err_msg": "‘m’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        3
      ],
      "mod_code": [
        "string a and b ;",
        "while ( cin >> a >> b )"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘and’ token"
    },
    {
      "mod_line": [
        1,
        3,
        9
      ],
      "mod_code": [
        "string a and b ;",
        "while ( cin >> a >> b )",
        "else if ( o == 1 )"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘and’ token"
    },
    {
      "mod_line": [
        1,
        3,
        9,
        4
      ],
      "mod_code": [
        "string a and b ;",
        "while ( cin >> a >> b )",
        "else if ( o == 1 )",
        "l = a . length ( ) ;"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘and’ token"
    },
    {
      "mod_line": [
        1,
        3,
        9,
        5
      ],
      "mod_code": [
        "string a and b ;",
        "while ( cin >> a >> b )",
        "else if ( o == 1 )",
        "m = b . length ( ) ;"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘and’ token"
    },
    {
      "mod_line": [
        1,
        3,
        4
      ],
      "mod_code": [
        "string a and b ;",
        "while ( cin >> a >> b )",
        "l = a . length ( ) ;"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘and’ token"
    },
    {
      "mod_line": [
        1,
        3,
        4,
        5
      ],
      "mod_code": [
        "string a and b ;",
        "while ( cin >> a >> b )",
        "l = a . length ( ) ;",
        "m = b . length ( ) ;"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘and’ token"
    },
    {
      "mod_line": [
        1,
        3,
        5
      ],
      "mod_code": [
        "string a and b ;",
        "while ( cin >> a >> b )",
        "m = b . length ( ) ;"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘and’ token"
    },
    {
      "mod_line": [
        1,
        9
      ],
      "mod_code": [
        "string a and b ;",
        "else if ( o == 1 )"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘and’ token"
    },
    {
      "mod_line": [
        1,
        9,
        4
      ],
      "mod_code": [
        "string a and b ;",
        "else if ( o == 1 )",
        "l = a . length ( ) ;"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘and’ token"
    },
    {
      "mod_line": [
        1,
        9,
        4,
        5
      ],
      "mod_code": [
        "string a and b ;",
        "else if ( o == 1 )",
        "l = a . length ( ) ;",
        "m = b . length ( ) ;"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘and’ token"
    },
    {
      "mod_line": [
        1,
        9,
        5
      ],
      "mod_code": [
        "string a and b ;",
        "else if ( o == 1 )",
        "m = b . length ( ) ;"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘and’ token"
    },
    {
      "mod_line": [
        1,
        4
      ],
      "mod_code": [
        "string a and b ;",
        "l = a . length ( ) ;"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘and’ token"
    },
    {
      "mod_line": [
        1,
        4,
        5
      ],
      "mod_code": [
        "string a and b ;",
        "l = a . length ( ) ;",
        "m = b . length ( ) ;"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘and’ token"
    },
    {
      "mod_line": [
        1,
        5
      ],
      "mod_code": [
        "string a and b ;",
        "m = b . length ( ) ;"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘and’ token"
    },
    {
      "mod_line": [
        3,
        9
      ],
      "mod_code": [
        "while ( cin >> a >> b )",
        "else if ( o == 1 )"
      ],
      "err_line": 6,
      "err_msg": "‘l’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        9,
        4
      ],
      "mod_code": [
        "while ( cin >> a >> b )",
        "else if ( o == 1 )",
        "l = a . length ( ) ;"
      ],
      "err_line": 4,
      "err_msg": "‘l’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        9,
        4,
        5
      ],
      "mod_code": [
        "while ( cin >> a >> b )",
        "else if ( o == 1 )",
        "l = a . length ( ) ;",
        "m = b . length ( ) ;"
      ],
      "err_line": 4,
      "err_msg": "‘l’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        9,
        5
      ],
      "mod_code": [
        "while ( cin >> a >> b )",
        "else if ( o == 1 )",
        "m = b . length ( ) ;"
      ],
      "err_line": 5,
      "err_msg": "‘m’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        4
      ],
      "mod_code": [
        "while ( cin >> a >> b )",
        "l = a . length ( ) ;"
      ],
      "err_line": 4,
      "err_msg": "‘l’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        4,
        5
      ],
      "mod_code": [
        "while ( cin >> a >> b )",
        "l = a . length ( ) ;",
        "m = b . length ( ) ;"
      ],
      "err_line": 4,
      "err_msg": "‘l’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        5
      ],
      "mod_code": [
        "while ( cin >> a >> b )",
        "m = b . length ( ) ;"
      ],
      "err_line": 5,
      "err_msg": "‘m’ was not declared in this scope"
    },
    {
      "mod_line": [
        9,
        4
      ],
      "mod_code": [
        "else if ( o == 1 )",
        "l = a . length ( ) ;"
      ],
      "err_line": 4,
      "err_msg": "‘l’ was not declared in this scope"
    },
    {
      "mod_line": [
        9,
        4,
        5
      ],
      "mod_code": [
        "else if ( o == 1 )",
        "l = a . length ( ) ;",
        "m = b . length ( ) ;"
      ],
      "err_line": 4,
      "err_msg": "‘l’ was not declared in this scope"
    },
    {
      "mod_line": [
        9,
        5
      ],
      "mod_code": [
        "else if ( o == 1 )",
        "m = b . length ( ) ;"
      ],
      "err_line": 5,
      "err_msg": "‘m’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        5
      ],
      "mod_code": [
        "l = a . length ( ) ;",
        "m = b . length ( ) ;"
      ],
      "err_line": 4,
      "err_msg": "‘l’ was not declared in this scope"
    }
  ]
}