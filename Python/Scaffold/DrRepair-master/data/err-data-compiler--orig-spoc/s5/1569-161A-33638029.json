{
  "meta": {
    "index": 1569,
    "hitid": "32K26U12DNIF3Q1O6DRWRSXB9O9VDS",
    "workerid": "AIWEXPJAU66D9",
    "probid": "161A",
    "subid": "33638029"
  },
  "lines": [
    {
      "line": 0,
      "text": "function read that returns inline long long",
      "code": "inline long long read ( )",
      "indent": 0
    },
    {
      "line": 1,
      "text": "create character c = character from the input",
      "code": "char c = getchar ( ) ;",
      "indent": 1
    },
    {
      "line": 2,
      "text": "while c is not ' - ' and ( c < ' 0 ' | | c > ' 9 ' ) , read input into c",
      "code": "while ( c != ' - ' && ( c < ' 0 ' || c > ' 9 ' ) ) c = getchar ( ) ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "declare long long variables k = 0 and kk = 1",
      "code": "long long k = 0 , kk = 1 ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "if c is equal to ' - ' , set c to the character from the input and kk to - 1",
      "code": "if ( c == ' - ' ) c = getchar ( ) , kk = - 1 ;",
      "indent": 1
    },
    {
      "line": 5,
      "text": "while c > = ' 0 ' & & c < = ' 9 ' , set k to k * 10 + c - ' 0 ' and c to char from the input",
      "code": "while ( c >= ' 0 ' && c <= ' 9 ' ) k = k * 10 + c - ' 0 ' , c = getchar ( ) ;",
      "indent": 1
    },
    {
      "line": 6,
      "text": "return kk * k",
      "code": "return kk * k ;",
      "indent": 1
    },
    {
      "line": 7,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    },
    {
      "line": 8,
      "text": "write is a void function with long long argument x",
      "code": "void write ( long long x )",
      "indent": 0
    },
    {
      "line": 9,
      "text": "if x is less than 0 , invert the sign of x and print ' - '",
      "code": "if ( x < 0 ) x = - x , putchar ( ' - ' ) ;",
      "indent": 1
    },
    {
      "line": 10,
      "text": "if x is true , call write of x / 10 and print x % 10 + ' 0 '",
      "code": "if ( x ) write ( x / 10 ) , putchar ( x % 10 + ' 0 ' ) ;",
      "indent": 1
    },
    {
      "line": 11,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    },
    {
      "line": 12,
      "text": "void function writeln with long long argument x",
      "code": "void writeln ( long long x )",
      "indent": 0
    },
    {
      "line": 13,
      "text": "call write ( x )",
      "code": "write ( x ) ;",
      "indent": 1
    },
    {
      "line": 14,
      "text": "if x is equal to 0 , print ' 0 '",
      "code": "if ( x == 0 ) putchar ( ' 0 ' ) ;",
      "indent": 1
    },
    {
      "line": 15,
      "text": "print \" \" to standard output",
      "code": "puts ( \" \" ) ;",
      "indent": 1
    },
    {
      "line": 16,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    },
    {
      "line": 17,
      "text": "declare long longs n , m , x , y , d and dd and arrays of long longs z1 , z2 , a and b with 1000000 elements",
      "code": "long long n , m , x , y , d , dd , z1 [ 1000000 ] , z2 [ 1000000 ] , a [ 1000000 ] , b [ 1000000 ] ;",
      "indent": 0
    },
    {
      "line": 18,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 19,
      "text": "change n to result of read ( )",
      "code": "n = read ( ) ;",
      "indent": 1
    },
    {
      "line": 20,
      "text": "change m to result of read ( )",
      "code": "m = read ( ) ;",
      "indent": 1
    },
    {
      "line": 21,
      "text": "change x to result of read ( )",
      "code": "x = read ( ) ;",
      "indent": 1
    },
    {
      "line": 22,
      "text": "change y to result of read ( )",
      "code": "y = read ( ) ;",
      "indent": 1
    },
    {
      "line": 23,
      "text": "change d to 1",
      "code": "d = 1 ;",
      "indent": 1
    },
    {
      "line": 24,
      "text": "swap x and y",
      "code": "swap ( x , y ) ;",
      "indent": 1
    },
    {
      "line": 25,
      "text": "for i from 1 to n inclusive , set a [ i ] to the value of read ( )",
      "code": "for ( long long i = 1 ; i <= n ; i ++ ) a [ i ] = read ( ) ;",
      "indent": 1
    },
    {
      "line": 26,
      "text": "loop i from 1 to m inclusive , change b [ i ] to the value of read ( )",
      "code": "for ( long long i = 1 ; i <= m ; i ++ ) b [ i ] = read ( ) ;",
      "indent": 1
    },
    {
      "line": 27,
      "text": "loop i from 1 to n inclusive",
      "code": "for ( long long i = 1 ; i <= n ; i ++ )",
      "indent": 1
    },
    {
      "line": 28,
      "text": "while d < = m & & b [ d ] + y < a [ i ]",
      "code": "while ( d <= m && b [ d ] + y < a [ i ] ) d ++ ;",
      "indent": 2
    },
    {
      "line": 29,
      "text": "if d < = m and b [ d ] - x < = a [ i ] , increment dd and change z1 [ dd ] to i , z2 [ dd ] = d and increment dd",
      "code": "if ( d <= m && b [ d ] - x <= a [ i ] ) z1 [ ++ dd ] = i , z2 [ dd ] = d , d ++ ;",
      "indent": 2
    },
    {
      "line": 30,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 31,
      "text": "print dd",
      "code": "cout << dd << endl ;",
      "indent": 1
    },
    {
      "line": 32,
      "text": "for long long i = 1 to dd inclusive , print z1 [ i ] , ' ' and z2 [ i ]",
      "code": "for ( long long i = 1 ; i <= dd ; i ++ ) cout << z1 [ i ] << ' ' << z2 [ i ] << endl ;",
      "indent": 1
    },
    {
      "line": 33,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        4
      ],
      "mod_code": [
        "if ( c == ' - ' ) c = input + 1 ;"
      ],
      "err_line": 4,
      "err_msg": "‘input’ was not declared in this scope"
    },
    {
      "mod_line": [
        10
      ],
      "mod_code": [
        "if ( x ) write ( x / 10 ) << ' 0 ' ;"
      ],
      "err_line": 10,
      "err_msg": "invalid operands of types ‘void’ and ‘char’ to binary ‘operator<<’"
    },
    {
      "mod_line": [
        17
      ],
      "mod_code": [
        "long long n , m , x , y , d , d , a [ 1000000 ] , a [ 1000000 ] , b ;"
      ],
      "err_line": 17,
      "err_msg": "redefinition of ‘long long int d’"
    },
    {
      "mod_line": [
        29
      ],
      "mod_code": [
        "if ( d <= m && b [ d ] - x <= a [ i ] ) { z1 += dd ] = d [ i ] = d ; }"
      ],
      "err_line": 29,
      "err_msg": "incompatible types in assignment of ‘long long int’ to ‘long long int [1000000]’"
    },
    {
      "mod_line": [
        0
      ],
      "mod_code": [
        "inline long long V ( )"
      ],
      "err_line": 19,
      "err_msg": "‘read’ was not declared in this scope"
    },
    {
      "mod_line": [
        1
      ],
      "mod_code": [
        "char c [ 8 ] ;"
      ],
      "err_line": 2,
      "err_msg": "ISO C++ forbids comparison between pointer and integer [-fpermissive]"
    },
    {
      "mod_line": [
        4
      ],
      "mod_code": [
        "if ( c == ' - ' ) c = min ( input , kk ) ;"
      ],
      "err_line": 4,
      "err_msg": "‘input’ was not declared in this scope"
    },
    {
      "mod_line": [
        8
      ],
      "mod_code": [
        "void write ( long long x ) ;"
      ],
      "err_line": 9,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        10
      ],
      "mod_code": [
        "if ( x ) write ( x / 10 , x ) % 10 + 10 + ' 0 ' ;"
      ],
      "err_line": 10,
      "err_msg": "too many arguments to function ‘void write(long long int)’"
    },
    {
      "mod_line": [
        13
      ],
      "mod_code": [
        "void write ( x ) ;"
      ],
      "err_line": 13,
      "err_msg": "variable or field ‘write’ declared void"
    },
    {
      "mod_line": [
        17
      ],
      "mod_code": [
        "long long n , m , x , y , d , z1 [ 1000000 ] , a [ 1000000 ] , a [ 1000000 ] ;"
      ],
      "err_line": 17,
      "err_msg": "redefinition of ‘long long int a [1000000]’"
    },
    {
      "mod_line": [
        21
      ],
      "mod_code": [
        "int x = read ( ) ;"
      ],
      "err_line": 24,
      "err_msg": "no matching function for call to ‘swap(int&, long long int&)’"
    },
    {
      "mod_line": [
        22
      ],
      "mod_code": [
        "int y = read ( ) ;"
      ],
      "err_line": 24,
      "err_msg": "no matching function for call to ‘swap(long long int&, int&)’"
    },
    {
      "mod_line": [
        27
      ],
      "mod_code": [
        "for ( i = 1 ; i <= n ; i ++ )"
      ],
      "err_line": 27,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        29
      ],
      "mod_code": [
        "if ( d <= m && b [ d ] - x <= a [ i ] ) dd [ dd ++ ] = a [ i ] = d ;"
      ],
      "err_line": 29,
      "err_msg": "invalid types ‘long long int[long long int]’ for array subscript"
    },
    {
      "mod_line": [
        4,
        10
      ],
      "mod_code": [
        "if ( c == ' - ' ) c = input + 1 ;",
        "if ( x ) write ( x / 10 ) << ' 0 ' ;"
      ],
      "err_line": 4,
      "err_msg": "‘input’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        10,
        17
      ],
      "mod_code": [
        "if ( c == ' - ' ) c = input + 1 ;",
        "if ( x ) write ( x / 10 ) << ' 0 ' ;",
        "long long n , m , x , y , d , d , a [ 1000000 ] , a [ 1000000 ] , b ;"
      ],
      "err_line": 4,
      "err_msg": "‘input’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        10,
        17,
        28
      ],
      "mod_code": [
        "if ( c == ' - ' ) c = input + 1 ;",
        "if ( x ) write ( x / 10 ) << ' 0 ' ;",
        "long long n , m , x , y , d , d , a [ 1000000 ] , a [ 1000000 ] , b ;",
        "while ( d <= m && b [ d ] + y < a [ i ] )"
      ],
      "err_line": 4,
      "err_msg": "‘input’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        10,
        17,
        29
      ],
      "mod_code": [
        "if ( c == ' - ' ) c = input + 1 ;",
        "if ( x ) write ( x / 10 ) << ' 0 ' ;",
        "long long n , m , x , y , d , d , a [ 1000000 ] , a [ 1000000 ] , b ;",
        "if ( d <= m && b [ d ] - x <= a [ i ] ) { z1 += dd ] = d [ i ] = d ; }"
      ],
      "err_line": 4,
      "err_msg": "‘input’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        10,
        17,
        28
      ],
      "mod_code": [
        "if ( c == ' - ' ) c = input + 1 ;",
        "if ( x ) write ( x / 10 ) << ' 0 ' ;",
        "long long n , m , x , y , d , d , a [ 1000000 ] , a [ 1000000 ] , b ;",
        "while ( d <= m & b [ d ] + y < a [ i ] )"
      ],
      "err_line": 4,
      "err_msg": "‘input’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        10,
        28
      ],
      "mod_code": [
        "if ( c == ' - ' ) c = input + 1 ;",
        "if ( x ) write ( x / 10 ) << ' 0 ' ;",
        "while ( d <= m && b [ d ] + y < a [ i ] )"
      ],
      "err_line": 4,
      "err_msg": "‘input’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        10,
        28,
        29
      ],
      "mod_code": [
        "if ( c == ' - ' ) c = input + 1 ;",
        "if ( x ) write ( x / 10 ) << ' 0 ' ;",
        "while ( d <= m && b [ d ] + y < a [ i ] )",
        "if ( d <= m && b [ d ] - x <= a [ i ] ) { z1 += dd ] = d [ i ] = d ; }"
      ],
      "err_line": 4,
      "err_msg": "‘input’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        10,
        29
      ],
      "mod_code": [
        "if ( c == ' - ' ) c = input + 1 ;",
        "if ( x ) write ( x / 10 ) << ' 0 ' ;",
        "if ( d <= m && b [ d ] - x <= a [ i ] ) { z1 += dd ] = d [ i ] = d ; }"
      ],
      "err_line": 4,
      "err_msg": "‘input’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        10,
        29,
        28
      ],
      "mod_code": [
        "if ( c == ' - ' ) c = input + 1 ;",
        "if ( x ) write ( x / 10 ) << ' 0 ' ;",
        "if ( d <= m && b [ d ] - x <= a [ i ] ) { z1 += dd ] = d [ i ] = d ; }",
        "while ( d <= m & b [ d ] + y < a [ i ] )"
      ],
      "err_line": 4,
      "err_msg": "‘input’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        10,
        28
      ],
      "mod_code": [
        "if ( c == ' - ' ) c = input + 1 ;",
        "if ( x ) write ( x / 10 ) << ' 0 ' ;",
        "while ( d <= m & b [ d ] + y < a [ i ] )"
      ],
      "err_line": 4,
      "err_msg": "‘input’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        17
      ],
      "mod_code": [
        "if ( c == ' - ' ) c = input + 1 ;",
        "long long n , m , x , y , d , d , a [ 1000000 ] , a [ 1000000 ] , b ;"
      ],
      "err_line": 4,
      "err_msg": "‘input’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        17,
        28
      ],
      "mod_code": [
        "if ( c == ' - ' ) c = input + 1 ;",
        "long long n , m , x , y , d , d , a [ 1000000 ] , a [ 1000000 ] , b ;",
        "while ( d <= m && b [ d ] + y < a [ i ] )"
      ],
      "err_line": 4,
      "err_msg": "‘input’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        17,
        28,
        29
      ],
      "mod_code": [
        "if ( c == ' - ' ) c = input + 1 ;",
        "long long n , m , x , y , d , d , a [ 1000000 ] , a [ 1000000 ] , b ;",
        "while ( d <= m && b [ d ] + y < a [ i ] )",
        "if ( d <= m && b [ d ] - x <= a [ i ] ) { z1 += dd ] = d [ i ] = d ; }"
      ],
      "err_line": 4,
      "err_msg": "‘input’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        17,
        29
      ],
      "mod_code": [
        "if ( c == ' - ' ) c = input + 1 ;",
        "long long n , m , x , y , d , d , a [ 1000000 ] , a [ 1000000 ] , b ;",
        "if ( d <= m && b [ d ] - x <= a [ i ] ) { z1 += dd ] = d [ i ] = d ; }"
      ],
      "err_line": 4,
      "err_msg": "‘input’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        17,
        29,
        28
      ],
      "mod_code": [
        "if ( c == ' - ' ) c = input + 1 ;",
        "long long n , m , x , y , d , d , a [ 1000000 ] , a [ 1000000 ] , b ;",
        "if ( d <= m && b [ d ] - x <= a [ i ] ) { z1 += dd ] = d [ i ] = d ; }",
        "while ( d <= m & b [ d ] + y < a [ i ] )"
      ],
      "err_line": 4,
      "err_msg": "‘input’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        17,
        28
      ],
      "mod_code": [
        "if ( c == ' - ' ) c = input + 1 ;",
        "long long n , m , x , y , d , d , a [ 1000000 ] , a [ 1000000 ] , b ;",
        "while ( d <= m & b [ d ] + y < a [ i ] )"
      ],
      "err_line": 4,
      "err_msg": "‘input’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        28
      ],
      "mod_code": [
        "if ( c == ' - ' ) c = input + 1 ;",
        "while ( d <= m && b [ d ] + y < a [ i ] )"
      ],
      "err_line": 4,
      "err_msg": "‘input’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        28,
        29
      ],
      "mod_code": [
        "if ( c == ' - ' ) c = input + 1 ;",
        "while ( d <= m && b [ d ] + y < a [ i ] )",
        "if ( d <= m && b [ d ] - x <= a [ i ] ) { z1 += dd ] = d [ i ] = d ; }"
      ],
      "err_line": 4,
      "err_msg": "‘input’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        29
      ],
      "mod_code": [
        "if ( c == ' - ' ) c = input + 1 ;",
        "if ( d <= m && b [ d ] - x <= a [ i ] ) { z1 += dd ] = d [ i ] = d ; }"
      ],
      "err_line": 4,
      "err_msg": "‘input’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        29,
        28
      ],
      "mod_code": [
        "if ( c == ' - ' ) c = input + 1 ;",
        "if ( d <= m && b [ d ] - x <= a [ i ] ) { z1 += dd ] = d [ i ] = d ; }",
        "while ( d <= m & b [ d ] + y < a [ i ] )"
      ],
      "err_line": 4,
      "err_msg": "‘input’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        28
      ],
      "mod_code": [
        "if ( c == ' - ' ) c = input + 1 ;",
        "while ( d <= m & b [ d ] + y < a [ i ] )"
      ],
      "err_line": 4,
      "err_msg": "‘input’ was not declared in this scope"
    },
    {
      "mod_line": [
        10,
        17
      ],
      "mod_code": [
        "if ( x ) write ( x / 10 ) << ' 0 ' ;",
        "long long n , m , x , y , d , d , a [ 1000000 ] , a [ 1000000 ] , b ;"
      ],
      "err_line": 10,
      "err_msg": "invalid operands of types ‘void’ and ‘char’ to binary ‘operator<<’"
    },
    {
      "mod_line": [
        10,
        17,
        28
      ],
      "mod_code": [
        "if ( x ) write ( x / 10 ) << ' 0 ' ;",
        "long long n , m , x , y , d , d , a [ 1000000 ] , a [ 1000000 ] , b ;",
        "while ( d <= m && b [ d ] + y < a [ i ] )"
      ],
      "err_line": 10,
      "err_msg": "invalid operands of types ‘void’ and ‘char’ to binary ‘operator<<’"
    },
    {
      "mod_line": [
        10,
        17,
        28,
        29
      ],
      "mod_code": [
        "if ( x ) write ( x / 10 ) << ' 0 ' ;",
        "long long n , m , x , y , d , d , a [ 1000000 ] , a [ 1000000 ] , b ;",
        "while ( d <= m && b [ d ] + y < a [ i ] )",
        "if ( d <= m && b [ d ] - x <= a [ i ] ) { z1 += dd ] = d [ i ] = d ; }"
      ],
      "err_line": 10,
      "err_msg": "invalid operands of types ‘void’ and ‘char’ to binary ‘operator<<’"
    },
    {
      "mod_line": [
        10,
        17,
        29
      ],
      "mod_code": [
        "if ( x ) write ( x / 10 ) << ' 0 ' ;",
        "long long n , m , x , y , d , d , a [ 1000000 ] , a [ 1000000 ] , b ;",
        "if ( d <= m && b [ d ] - x <= a [ i ] ) { z1 += dd ] = d [ i ] = d ; }"
      ],
      "err_line": 10,
      "err_msg": "invalid operands of types ‘void’ and ‘char’ to binary ‘operator<<’"
    },
    {
      "mod_line": [
        10,
        17,
        29,
        28
      ],
      "mod_code": [
        "if ( x ) write ( x / 10 ) << ' 0 ' ;",
        "long long n , m , x , y , d , d , a [ 1000000 ] , a [ 1000000 ] , b ;",
        "if ( d <= m && b [ d ] - x <= a [ i ] ) { z1 += dd ] = d [ i ] = d ; }",
        "while ( d <= m & b [ d ] + y < a [ i ] )"
      ],
      "err_line": 10,
      "err_msg": "invalid operands of types ‘void’ and ‘char’ to binary ‘operator<<’"
    },
    {
      "mod_line": [
        10,
        17,
        28
      ],
      "mod_code": [
        "if ( x ) write ( x / 10 ) << ' 0 ' ;",
        "long long n , m , x , y , d , d , a [ 1000000 ] , a [ 1000000 ] , b ;",
        "while ( d <= m & b [ d ] + y < a [ i ] )"
      ],
      "err_line": 10,
      "err_msg": "invalid operands of types ‘void’ and ‘char’ to binary ‘operator<<’"
    },
    {
      "mod_line": [
        10,
        28
      ],
      "mod_code": [
        "if ( x ) write ( x / 10 ) << ' 0 ' ;",
        "while ( d <= m && b [ d ] + y < a [ i ] )"
      ],
      "err_line": 10,
      "err_msg": "invalid operands of types ‘void’ and ‘char’ to binary ‘operator<<’"
    },
    {
      "mod_line": [
        10,
        28,
        29
      ],
      "mod_code": [
        "if ( x ) write ( x / 10 ) << ' 0 ' ;",
        "while ( d <= m && b [ d ] + y < a [ i ] )",
        "if ( d <= m && b [ d ] - x <= a [ i ] ) { z1 += dd ] = d [ i ] = d ; }"
      ],
      "err_line": 10,
      "err_msg": "invalid operands of types ‘void’ and ‘char’ to binary ‘operator<<’"
    },
    {
      "mod_line": [
        10,
        29
      ],
      "mod_code": [
        "if ( x ) write ( x / 10 ) << ' 0 ' ;",
        "if ( d <= m && b [ d ] - x <= a [ i ] ) { z1 += dd ] = d [ i ] = d ; }"
      ],
      "err_line": 10,
      "err_msg": "invalid operands of types ‘void’ and ‘char’ to binary ‘operator<<’"
    },
    {
      "mod_line": [
        10,
        29,
        28
      ],
      "mod_code": [
        "if ( x ) write ( x / 10 ) << ' 0 ' ;",
        "if ( d <= m && b [ d ] - x <= a [ i ] ) { z1 += dd ] = d [ i ] = d ; }",
        "while ( d <= m & b [ d ] + y < a [ i ] )"
      ],
      "err_line": 10,
      "err_msg": "invalid operands of types ‘void’ and ‘char’ to binary ‘operator<<’"
    },
    {
      "mod_line": [
        10,
        28
      ],
      "mod_code": [
        "if ( x ) write ( x / 10 ) << ' 0 ' ;",
        "while ( d <= m & b [ d ] + y < a [ i ] )"
      ],
      "err_line": 10,
      "err_msg": "invalid operands of types ‘void’ and ‘char’ to binary ‘operator<<’"
    },
    {
      "mod_line": [
        17,
        28
      ],
      "mod_code": [
        "long long n , m , x , y , d , d , a [ 1000000 ] , a [ 1000000 ] , b ;",
        "while ( d <= m && b [ d ] + y < a [ i ] )"
      ],
      "err_line": 17,
      "err_msg": "redefinition of ‘long long int d’"
    },
    {
      "mod_line": [
        17,
        28,
        29
      ],
      "mod_code": [
        "long long n , m , x , y , d , d , a [ 1000000 ] , a [ 1000000 ] , b ;",
        "while ( d <= m && b [ d ] + y < a [ i ] )",
        "if ( d <= m && b [ d ] - x <= a [ i ] ) { z1 += dd ] = d [ i ] = d ; }"
      ],
      "err_line": 17,
      "err_msg": "redefinition of ‘long long int d’"
    },
    {
      "mod_line": [
        17,
        29
      ],
      "mod_code": [
        "long long n , m , x , y , d , d , a [ 1000000 ] , a [ 1000000 ] , b ;",
        "if ( d <= m && b [ d ] - x <= a [ i ] ) { z1 += dd ] = d [ i ] = d ; }"
      ],
      "err_line": 17,
      "err_msg": "redefinition of ‘long long int d’"
    },
    {
      "mod_line": [
        17,
        29,
        28
      ],
      "mod_code": [
        "long long n , m , x , y , d , d , a [ 1000000 ] , a [ 1000000 ] , b ;",
        "if ( d <= m && b [ d ] - x <= a [ i ] ) { z1 += dd ] = d [ i ] = d ; }",
        "while ( d <= m & b [ d ] + y < a [ i ] )"
      ],
      "err_line": 17,
      "err_msg": "redefinition of ‘long long int d’"
    },
    {
      "mod_line": [
        17,
        28
      ],
      "mod_code": [
        "long long n , m , x , y , d , d , a [ 1000000 ] , a [ 1000000 ] , b ;",
        "while ( d <= m & b [ d ] + y < a [ i ] )"
      ],
      "err_line": 17,
      "err_msg": "redefinition of ‘long long int d’"
    },
    {
      "mod_line": [
        28,
        29
      ],
      "mod_code": [
        "while ( d <= m && b [ d ] + y < a [ i ] )",
        "if ( d <= m && b [ d ] - x <= a [ i ] ) { z1 += dd ] = d [ i ] = d ; }"
      ],
      "err_line": 29,
      "err_msg": "incompatible types in assignment of ‘long long int’ to ‘long long int [1000000]’"
    },
    {
      "mod_line": [
        29,
        28
      ],
      "mod_code": [
        "if ( d <= m && b [ d ] - x <= a [ i ] ) { z1 += dd ] = d [ i ] = d ; }",
        "while ( d <= m & b [ d ] + y < a [ i ] )"
      ],
      "err_line": 29,
      "err_msg": "incompatible types in assignment of ‘long long int’ to ‘long long int [1000000]’"
    }
  ]
}