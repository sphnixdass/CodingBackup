{
  "meta": {
    "index": 589,
    "hitid": "3EN4YVUOUCMKA16BGOEPIBP9UJFJXY",
    "workerid": "AIWEXPJAU66D9",
    "probid": "999A",
    "subid": "48987801"
  },
  "lines": [
    {
      "line": 0,
      "text": "declare constant int MAX = 100001",
      "code": "const int MAX = 100001 ;",
      "indent": 0
    },
    {
      "line": 1,
      "text": "declare integer arrays An and Bn with MAX elements",
      "code": "int An [ MAX ] , Bn [ MAX ] ;",
      "indent": 0
    },
    {
      "line": 2,
      "text": "declare ints k and n",
      "code": "int k , n ;",
      "indent": 0
    },
    {
      "line": 3,
      "text": "preorder is a integer function",
      "code": "int preorder ( )",
      "indent": 0
    },
    {
      "line": 4,
      "text": "declare int variable sum = 0",
      "code": "int sum = 0 ;",
      "indent": 1
    },
    {
      "line": 5,
      "text": "for i from 0 to n exclusive",
      "code": "for ( int i = 0 ; i < n ; i ++ )",
      "indent": 1
    },
    {
      "line": 6,
      "text": "if An [ i ] < = k",
      "code": "if ( An [ i ] <= k )",
      "indent": 2
    },
    {
      "line": 7,
      "text": "increment sum by one",
      "code": "sum ++ ;",
      "indent": 3
    },
    {
      "line": 8,
      "text": "else",
      "code": "else",
      "indent": 2
    },
    {
      "line": 9,
      "text": "stop the loop",
      "code": "break ;",
      "indent": 3
    },
    {
      "line": 10,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 11,
      "text": "return sum",
      "code": "return sum ;",
      "indent": 1
    },
    {
      "line": 12,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    },
    {
      "line": 13,
      "text": "integer function rearorder",
      "code": "int rearorder ( )",
      "indent": 0
    },
    {
      "line": 14,
      "text": "declare integer variable sum = 0",
      "code": "int sum = 0 ;",
      "indent": 1
    },
    {
      "line": 15,
      "text": "loop i from n - 1 to 0 inclusive decrementing i",
      "code": "for ( int i = n - 1 ; i >= 0 ; i -- )",
      "indent": 1
    },
    {
      "line": 16,
      "text": "if An [ i ] < = k",
      "code": "if ( An [ i ] <= k )",
      "indent": 2
    },
    {
      "line": 17,
      "text": "increment sum",
      "code": "sum ++ ;",
      "indent": 3
    },
    {
      "line": 18,
      "text": "else",
      "code": "else",
      "indent": 2
    },
    {
      "line": 19,
      "text": "stop the loop",
      "code": "break ;",
      "indent": 3
    },
    {
      "line": 20,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 21,
      "text": "return sum",
      "code": "return sum ;",
      "indent": 1
    },
    {
      "line": 22,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    },
    {
      "line": 23,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 24,
      "text": "read n and k",
      "code": "cin >> n >> k ;",
      "indent": 1
    },
    {
      "line": 25,
      "text": "loop i from 0 to n exclusive , read An [ i ]",
      "code": "for ( int i = 0 ; i < n ; i ++ ) cin >> An [ i ] ;",
      "indent": 1
    },
    {
      "line": 26,
      "text": "declare integer variable t = preorder ( ) + rearorder ( )",
      "code": "int t = preorder ( ) + rearorder ( ) ;",
      "indent": 1
    },
    {
      "line": 27,
      "text": "if t = 2 * n",
      "code": "if ( t == 2 * n )",
      "indent": 1
    },
    {
      "line": 28,
      "text": "print t / 2",
      "code": "cout << t / 2 << endl ;",
      "indent": 2
    },
    {
      "line": 29,
      "text": "else",
      "code": "else",
      "indent": 1
    },
    {
      "line": 30,
      "text": "print t",
      "code": "cout << t << endl ;",
      "indent": 2
    },
    {
      "line": 31,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 32,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        26
      ],
      "mod_code": [
        "int t = preorder ( ) + rearorder ;"
      ],
      "err_line": 26,
      "err_msg": "invalid conversion from ‘int (*)()’ to ‘int’ [-fpermissive]"
    },
    {
      "mod_line": [
        0
      ],
      "mod_code": [
        "constant int MAX = 100001 ;"
      ],
      "err_line": 0,
      "err_msg": "‘constant’ does not name a type"
    },
    {
      "mod_line": [
        1
      ],
      "mod_code": [
        "int An [ MAX MAX , Bn [ MAX ] ;"
      ],
      "err_line": 1,
      "err_msg": "expected ‘]’ before ‘MAX’"
    },
    {
      "mod_line": [
        3
      ],
      "mod_code": [
        "int preorder ( int n )"
      ],
      "err_line": 26,
      "err_msg": "too few arguments to function ‘int preorder(int)’"
    },
    {
      "mod_line": [
        5
      ],
      "mod_code": [
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 5,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        9
      ],
      "mod_code": [
        "stop ;"
      ],
      "err_line": 9,
      "err_msg": "‘stop’ was not declared in this scope"
    },
    {
      "mod_line": [
        13
      ],
      "mod_code": [
        "int rearorder ( int s )"
      ],
      "err_line": 26,
      "err_msg": "too few arguments to function ‘int rearorder(int)’"
    },
    {
      "mod_line": [
        19
      ],
      "mod_code": [
        "stop ;"
      ],
      "err_line": 19,
      "err_msg": "‘stop’ was not declared in this scope"
    },
    {
      "mod_line": [
        26,
        13
      ],
      "mod_code": [
        "int t = preorder ( ) + rearorder ;",
        "int rearorder ( int s )"
      ],
      "err_line": 26,
      "err_msg": "invalid conversion from ‘int (*)(int)’ to ‘int’ [-fpermissive]"
    },
    {
      "mod_line": [
        26,
        13,
        0
      ],
      "mod_code": [
        "int t = preorder ( ) + rearorder ;",
        "int rearorder ( int s )",
        "constant int MAX = 100001 ;"
      ],
      "err_line": 0,
      "err_msg": "‘constant’ does not name a type"
    },
    {
      "mod_line": [
        26,
        13,
        0,
        24
      ],
      "mod_code": [
        "int t = preorder ( ) + rearorder ;",
        "int rearorder ( int s )",
        "constant int MAX = 100001 ;",
        "cin >> n and k ;"
      ],
      "err_line": 0,
      "err_msg": "‘constant’ does not name a type"
    },
    {
      "mod_line": [
        26,
        13,
        0,
        3
      ],
      "mod_code": [
        "int t = preorder ( ) + rearorder ;",
        "int rearorder ( int s )",
        "constant int MAX = 100001 ;",
        "int preorder ( int n )"
      ],
      "err_line": 0,
      "err_msg": "‘constant’ does not name a type"
    },
    {
      "mod_line": [
        26,
        13,
        0,
        16
      ],
      "mod_code": [
        "int t = preorder ( ) + rearorder ;",
        "int rearorder ( int s )",
        "constant int MAX = 100001 ;",
        "if ( An [ i ] <= ' k ' )"
      ],
      "err_line": 0,
      "err_msg": "‘constant’ does not name a type"
    },
    {
      "mod_line": [
        26,
        13,
        24
      ],
      "mod_code": [
        "int t = preorder ( ) + rearorder ;",
        "int rearorder ( int s )",
        "cin >> n and k ;"
      ],
      "err_line": 26,
      "err_msg": "invalid conversion from ‘int (*)(int)’ to ‘int’ [-fpermissive]"
    },
    {
      "mod_line": [
        26,
        13,
        24,
        3
      ],
      "mod_code": [
        "int t = preorder ( ) + rearorder ;",
        "int rearorder ( int s )",
        "cin >> n and k ;",
        "int preorder ( int n )"
      ],
      "err_line": 26,
      "err_msg": "too few arguments to function ‘int preorder(int)’"
    },
    {
      "mod_line": [
        26,
        13,
        24,
        16
      ],
      "mod_code": [
        "int t = preorder ( ) + rearorder ;",
        "int rearorder ( int s )",
        "cin >> n and k ;",
        "if ( An [ i ] <= ' k ' )"
      ],
      "err_line": 26,
      "err_msg": "invalid conversion from ‘int (*)(int)’ to ‘int’ [-fpermissive]"
    },
    {
      "mod_line": [
        26,
        13,
        3
      ],
      "mod_code": [
        "int t = preorder ( ) + rearorder ;",
        "int rearorder ( int s )",
        "int preorder ( int n )"
      ],
      "err_line": 26,
      "err_msg": "too few arguments to function ‘int preorder(int)’"
    },
    {
      "mod_line": [
        26,
        13,
        3,
        16
      ],
      "mod_code": [
        "int t = preorder ( ) + rearorder ;",
        "int rearorder ( int s )",
        "int preorder ( int n )",
        "if ( An [ i ] <= ' k ' )"
      ],
      "err_line": 26,
      "err_msg": "too few arguments to function ‘int preorder(int)’"
    },
    {
      "mod_line": [
        26,
        13,
        16
      ],
      "mod_code": [
        "int t = preorder ( ) + rearorder ;",
        "int rearorder ( int s )",
        "if ( An [ i ] <= ' k ' )"
      ],
      "err_line": 26,
      "err_msg": "invalid conversion from ‘int (*)(int)’ to ‘int’ [-fpermissive]"
    },
    {
      "mod_line": [
        26,
        0
      ],
      "mod_code": [
        "int t = preorder ( ) + rearorder ;",
        "constant int MAX = 100001 ;"
      ],
      "err_line": 0,
      "err_msg": "‘constant’ does not name a type"
    },
    {
      "mod_line": [
        26,
        0,
        24
      ],
      "mod_code": [
        "int t = preorder ( ) + rearorder ;",
        "constant int MAX = 100001 ;",
        "cin >> n and k ;"
      ],
      "err_line": 0,
      "err_msg": "‘constant’ does not name a type"
    },
    {
      "mod_line": [
        26,
        0,
        24,
        3
      ],
      "mod_code": [
        "int t = preorder ( ) + rearorder ;",
        "constant int MAX = 100001 ;",
        "cin >> n and k ;",
        "int preorder ( int n )"
      ],
      "err_line": 0,
      "err_msg": "‘constant’ does not name a type"
    },
    {
      "mod_line": [
        26,
        0,
        24,
        16
      ],
      "mod_code": [
        "int t = preorder ( ) + rearorder ;",
        "constant int MAX = 100001 ;",
        "cin >> n and k ;",
        "if ( An [ i ] <= ' k ' )"
      ],
      "err_line": 0,
      "err_msg": "‘constant’ does not name a type"
    },
    {
      "mod_line": [
        26,
        0,
        3
      ],
      "mod_code": [
        "int t = preorder ( ) + rearorder ;",
        "constant int MAX = 100001 ;",
        "int preorder ( int n )"
      ],
      "err_line": 0,
      "err_msg": "‘constant’ does not name a type"
    },
    {
      "mod_line": [
        26,
        0,
        3,
        16
      ],
      "mod_code": [
        "int t = preorder ( ) + rearorder ;",
        "constant int MAX = 100001 ;",
        "int preorder ( int n )",
        "if ( An [ i ] <= ' k ' )"
      ],
      "err_line": 0,
      "err_msg": "‘constant’ does not name a type"
    },
    {
      "mod_line": [
        26,
        0,
        16
      ],
      "mod_code": [
        "int t = preorder ( ) + rearorder ;",
        "constant int MAX = 100001 ;",
        "if ( An [ i ] <= ' k ' )"
      ],
      "err_line": 0,
      "err_msg": "‘constant’ does not name a type"
    },
    {
      "mod_line": [
        26,
        24
      ],
      "mod_code": [
        "int t = preorder ( ) + rearorder ;",
        "cin >> n and k ;"
      ],
      "err_line": 26,
      "err_msg": "invalid conversion from ‘int (*)()’ to ‘int’ [-fpermissive]"
    },
    {
      "mod_line": [
        26,
        24,
        3
      ],
      "mod_code": [
        "int t = preorder ( ) + rearorder ;",
        "cin >> n and k ;",
        "int preorder ( int n )"
      ],
      "err_line": 26,
      "err_msg": "too few arguments to function ‘int preorder(int)’"
    },
    {
      "mod_line": [
        26,
        24,
        3,
        16
      ],
      "mod_code": [
        "int t = preorder ( ) + rearorder ;",
        "cin >> n and k ;",
        "int preorder ( int n )",
        "if ( An [ i ] <= ' k ' )"
      ],
      "err_line": 26,
      "err_msg": "too few arguments to function ‘int preorder(int)’"
    },
    {
      "mod_line": [
        26,
        24,
        16
      ],
      "mod_code": [
        "int t = preorder ( ) + rearorder ;",
        "cin >> n and k ;",
        "if ( An [ i ] <= ' k ' )"
      ],
      "err_line": 26,
      "err_msg": "invalid conversion from ‘int (*)()’ to ‘int’ [-fpermissive]"
    },
    {
      "mod_line": [
        26,
        3
      ],
      "mod_code": [
        "int t = preorder ( ) + rearorder ;",
        "int preorder ( int n )"
      ],
      "err_line": 26,
      "err_msg": "too few arguments to function ‘int preorder(int)’"
    },
    {
      "mod_line": [
        26,
        3,
        16
      ],
      "mod_code": [
        "int t = preorder ( ) + rearorder ;",
        "int preorder ( int n )",
        "if ( An [ i ] <= ' k ' )"
      ],
      "err_line": 26,
      "err_msg": "too few arguments to function ‘int preorder(int)’"
    },
    {
      "mod_line": [
        26,
        16
      ],
      "mod_code": [
        "int t = preorder ( ) + rearorder ;",
        "if ( An [ i ] <= ' k ' )"
      ],
      "err_line": 26,
      "err_msg": "invalid conversion from ‘int (*)()’ to ‘int’ [-fpermissive]"
    },
    {
      "mod_line": [
        13,
        0
      ],
      "mod_code": [
        "int rearorder ( int s )",
        "constant int MAX = 100001 ;"
      ],
      "err_line": 0,
      "err_msg": "‘constant’ does not name a type"
    },
    {
      "mod_line": [
        13,
        0,
        24
      ],
      "mod_code": [
        "int rearorder ( int s )",
        "constant int MAX = 100001 ;",
        "cin >> n and k ;"
      ],
      "err_line": 0,
      "err_msg": "‘constant’ does not name a type"
    },
    {
      "mod_line": [
        13,
        0,
        24,
        3
      ],
      "mod_code": [
        "int rearorder ( int s )",
        "constant int MAX = 100001 ;",
        "cin >> n and k ;",
        "int preorder ( int n )"
      ],
      "err_line": 0,
      "err_msg": "‘constant’ does not name a type"
    },
    {
      "mod_line": [
        13,
        0,
        24,
        16
      ],
      "mod_code": [
        "int rearorder ( int s )",
        "constant int MAX = 100001 ;",
        "cin >> n and k ;",
        "if ( An [ i ] <= ' k ' )"
      ],
      "err_line": 0,
      "err_msg": "‘constant’ does not name a type"
    },
    {
      "mod_line": [
        13,
        0,
        3
      ],
      "mod_code": [
        "int rearorder ( int s )",
        "constant int MAX = 100001 ;",
        "int preorder ( int n )"
      ],
      "err_line": 0,
      "err_msg": "‘constant’ does not name a type"
    },
    {
      "mod_line": [
        13,
        0,
        3,
        16
      ],
      "mod_code": [
        "int rearorder ( int s )",
        "constant int MAX = 100001 ;",
        "int preorder ( int n )",
        "if ( An [ i ] <= ' k ' )"
      ],
      "err_line": 0,
      "err_msg": "‘constant’ does not name a type"
    },
    {
      "mod_line": [
        13,
        0,
        16
      ],
      "mod_code": [
        "int rearorder ( int s )",
        "constant int MAX = 100001 ;",
        "if ( An [ i ] <= ' k ' )"
      ],
      "err_line": 0,
      "err_msg": "‘constant’ does not name a type"
    },
    {
      "mod_line": [
        13,
        24
      ],
      "mod_code": [
        "int rearorder ( int s )",
        "cin >> n and k ;"
      ],
      "err_line": 26,
      "err_msg": "too few arguments to function ‘int rearorder(int)’"
    },
    {
      "mod_line": [
        13,
        24,
        3
      ],
      "mod_code": [
        "int rearorder ( int s )",
        "cin >> n and k ;",
        "int preorder ( int n )"
      ],
      "err_line": 26,
      "err_msg": "too few arguments to function ‘int preorder(int)’"
    },
    {
      "mod_line": [
        13,
        24,
        3,
        16
      ],
      "mod_code": [
        "int rearorder ( int s )",
        "cin >> n and k ;",
        "int preorder ( int n )",
        "if ( An [ i ] <= ' k ' )"
      ],
      "err_line": 26,
      "err_msg": "too few arguments to function ‘int preorder(int)’"
    },
    {
      "mod_line": [
        13,
        24,
        16
      ],
      "mod_code": [
        "int rearorder ( int s )",
        "cin >> n and k ;",
        "if ( An [ i ] <= ' k ' )"
      ],
      "err_line": 26,
      "err_msg": "too few arguments to function ‘int rearorder(int)’"
    },
    {
      "mod_line": [
        13,
        3
      ],
      "mod_code": [
        "int rearorder ( int s )",
        "int preorder ( int n )"
      ],
      "err_line": 26,
      "err_msg": "too few arguments to function ‘int preorder(int)’"
    },
    {
      "mod_line": [
        13,
        3,
        16
      ],
      "mod_code": [
        "int rearorder ( int s )",
        "int preorder ( int n )",
        "if ( An [ i ] <= ' k ' )"
      ],
      "err_line": 26,
      "err_msg": "too few arguments to function ‘int preorder(int)’"
    },
    {
      "mod_line": [
        13,
        16
      ],
      "mod_code": [
        "int rearorder ( int s )",
        "if ( An [ i ] <= ' k ' )"
      ],
      "err_line": 26,
      "err_msg": "too few arguments to function ‘int rearorder(int)’"
    },
    {
      "mod_line": [
        0,
        24
      ],
      "mod_code": [
        "constant int MAX = 100001 ;",
        "cin >> n and k ;"
      ],
      "err_line": 0,
      "err_msg": "‘constant’ does not name a type"
    },
    {
      "mod_line": [
        0,
        24,
        3
      ],
      "mod_code": [
        "constant int MAX = 100001 ;",
        "cin >> n and k ;",
        "int preorder ( int n )"
      ],
      "err_line": 0,
      "err_msg": "‘constant’ does not name a type"
    },
    {
      "mod_line": [
        0,
        24,
        3,
        16
      ],
      "mod_code": [
        "constant int MAX = 100001 ;",
        "cin >> n and k ;",
        "int preorder ( int n )",
        "if ( An [ i ] <= ' k ' )"
      ],
      "err_line": 0,
      "err_msg": "‘constant’ does not name a type"
    },
    {
      "mod_line": [
        0,
        24,
        16
      ],
      "mod_code": [
        "constant int MAX = 100001 ;",
        "cin >> n and k ;",
        "if ( An [ i ] <= ' k ' )"
      ],
      "err_line": 0,
      "err_msg": "‘constant’ does not name a type"
    },
    {
      "mod_line": [
        0,
        3
      ],
      "mod_code": [
        "constant int MAX = 100001 ;",
        "int preorder ( int n )"
      ],
      "err_line": 0,
      "err_msg": "‘constant’ does not name a type"
    },
    {
      "mod_line": [
        0,
        3,
        16
      ],
      "mod_code": [
        "constant int MAX = 100001 ;",
        "int preorder ( int n )",
        "if ( An [ i ] <= ' k ' )"
      ],
      "err_line": 0,
      "err_msg": "‘constant’ does not name a type"
    },
    {
      "mod_line": [
        0,
        16
      ],
      "mod_code": [
        "constant int MAX = 100001 ;",
        "if ( An [ i ] <= ' k ' )"
      ],
      "err_line": 0,
      "err_msg": "‘constant’ does not name a type"
    },
    {
      "mod_line": [
        24,
        3
      ],
      "mod_code": [
        "cin >> n and k ;",
        "int preorder ( int n )"
      ],
      "err_line": 26,
      "err_msg": "too few arguments to function ‘int preorder(int)’"
    },
    {
      "mod_line": [
        24,
        3,
        16
      ],
      "mod_code": [
        "cin >> n and k ;",
        "int preorder ( int n )",
        "if ( An [ i ] <= ' k ' )"
      ],
      "err_line": 26,
      "err_msg": "too few arguments to function ‘int preorder(int)’"
    },
    {
      "mod_line": [
        3,
        16
      ],
      "mod_code": [
        "int preorder ( int n )",
        "if ( An [ i ] <= ' k ' )"
      ],
      "err_line": 26,
      "err_msg": "too few arguments to function ‘int preorder(int)’"
    }
  ]
}