{
  "meta": {
    "index": 934,
    "hitid": "3I7KR83SNA7PKPUVVT8N3N3425R9K7",
    "workerid": "A1R0Q9CUUBSM5F",
    "probid": "106A",
    "subid": "36632775"
  },
  "lines": [
    {
      "line": 0,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 1,
      "text": "create map mp from chars to ints",
      "code": "map < char , int > mp ;",
      "indent": 1
    },
    {
      "line": 2,
      "text": "set mp [ ' 6 ' ] to 1",
      "code": "mp [ ' 6 ' ] = 1 ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "set mp [ ' 7 ' ] to 2",
      "code": "mp [ ' 7 ' ] = 2 ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "set mp [ ' 8 ' ] to 3",
      "code": "mp [ ' 8 ' ] = 3 ;",
      "indent": 1
    },
    {
      "line": 5,
      "text": "set mp [ ' 9 ' ] to 4",
      "code": "mp [ ' 9 ' ] = 4 ;",
      "indent": 1
    },
    {
      "line": 6,
      "text": "set mp [ ' T ' ] to 5",
      "code": "mp [ ' T ' ] = 5 ;",
      "indent": 1
    },
    {
      "line": 7,
      "text": "set mp [ ' J ' ] to 6",
      "code": "mp [ ' J ' ] = 6 ;",
      "indent": 1
    },
    {
      "line": 8,
      "text": "set mp [ ' Q ' ] to 7",
      "code": "mp [ ' Q ' ] = 7 ;",
      "indent": 1
    },
    {
      "line": 9,
      "text": "set mp [ ' K ' ] to 8",
      "code": "mp [ ' K ' ] = 8 ;",
      "indent": 1
    },
    {
      "line": 10,
      "text": "set mp [ ' A ' ] to 9",
      "code": "mp [ ' A ' ] = 9 ;",
      "indent": 1
    },
    {
      "line": 11,
      "text": "create string str",
      "code": "string str ;",
      "indent": 1
    },
    {
      "line": 12,
      "text": "read str",
      "code": "cin >> str ;",
      "indent": 1
    },
    {
      "line": 13,
      "text": "let strings str1 and str2",
      "code": "string str1 , str2 ;",
      "indent": 1
    },
    {
      "line": 14,
      "text": "read str1 and str2",
      "code": "cin >> str1 >> str2 ;",
      "indent": 1
    },
    {
      "line": 15,
      "text": "if str [ 0 ] is equal to str2 [ i ] and str [ 0 ] is equal to str1 [ 1 ]",
      "code": "if ( str [ 0 ] == str2 [ 1 ] && str [ 0 ] == str1 [ 1 ] )",
      "indent": 1
    },
    {
      "line": 16,
      "text": "if mp [ str1p [ 0 ] ] is greater than mp [ str2 [ 0 ] ]",
      "code": "if ( mp [ str1 [ 0 ] ] > mp [ str2 [ 0 ] ] )",
      "indent": 2
    },
    {
      "line": 17,
      "text": "print \" YES \"",
      "code": "cout << \" YES \" << endl ;",
      "indent": 3
    },
    {
      "line": 18,
      "text": "else do",
      "code": "else",
      "indent": 2
    },
    {
      "line": 19,
      "text": "print \" NO \"",
      "code": "cout << \" NO \" << endl ;",
      "indent": 3
    },
    {
      "line": 20,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 2
    },
    {
      "line": 21,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 22,
      "text": "if str [ 0 ] is equal to str1 [ 1 ]",
      "code": "if ( str [ 0 ] == str1 [ 1 ] )",
      "indent": 1
    },
    {
      "line": 23,
      "text": "print \" YES \"",
      "code": "cout << \" YES \" << endl ;",
      "indent": 2
    },
    {
      "line": 24,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 2
    },
    {
      "line": 25,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 26,
      "text": "if str [ 0 ] is equal to str2 [ 1 ]",
      "code": "if ( str [ 0 ] == str2 [ 1 ] )",
      "indent": 1
    },
    {
      "line": 27,
      "text": "print \" NO \"",
      "code": "cout << \" NO \" << endl ;",
      "indent": 2
    },
    {
      "line": 28,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 2
    },
    {
      "line": 29,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 30,
      "text": "if str1 [ 1 ] is equal to str2 [ 1 ] and mp [ str1 [ 0 ] ] is greater than mp [ str2 [ 0 ] ]",
      "code": "if ( str1 [ 1 ] == str2 [ 1 ] && mp [ str1 [ 0 ] ] > mp [ str2 [ 0 ] ] )",
      "indent": 1
    },
    {
      "line": 31,
      "text": "print \" YES \"",
      "code": "cout << \" YES \" << endl ;",
      "indent": 2
    },
    {
      "line": 32,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 2
    },
    {
      "line": 33,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 34,
      "text": "return ! ( cout < < \" NO \" < < endl )",
      "code": "return ! ( cout << \" NO \" << endl ) ;",
      "indent": 1
    },
    {
      "line": 35,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        15
      ],
      "mod_code": [
        "if ( str [ 0 ] == str2 [ i ] && str [ 0 ] == str1 [ 1 ] )"
      ],
      "err_line": 15,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        16
      ],
      "mod_code": [
        "if ( mp [ str1p [ 0 ] ] > mp [ str2 [ 0 ] ] )"
      ],
      "err_line": 16,
      "err_msg": "‘str1p’ was not declared in this scope"
    },
    {
      "mod_line": [
        34
      ],
      "mod_code": [
        "return ! ( cout << \" NO \" : endl ) ;"
      ],
      "err_line": 34,
      "err_msg": "expected ‘)’ before ‘:’ token"
    },
    {
      "mod_line": [
        1
      ],
      "mod_code": [
        "map < chars , int > mp ;"
      ],
      "err_line": 1,
      "err_msg": "‘chars’ was not declared in this scope"
    },
    {
      "mod_line": [
        11
      ],
      "mod_code": [
        "string n ;"
      ],
      "err_line": 12,
      "err_msg": "‘str’ was not declared in this scope"
    },
    {
      "mod_line": [
        12
      ],
      "mod_code": [
        "gets ( str ) ;"
      ],
      "err_line": 12,
      "err_msg": "cannot convert ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ to ‘char*’ for argument ‘1’ to ‘char* gets(char*)’"
    },
    {
      "mod_line": [
        13
      ],
      "mod_code": [
        "string s , str2 ;"
      ],
      "err_line": 14,
      "err_msg": "‘str1’ was not declared in this scope"
    },
    {
      "mod_line": [
        14
      ],
      "mod_code": [
        "int str1 >> str2 ;"
      ],
      "err_line": 14,
      "err_msg": "expected initializer before ‘>>’ token"
    },
    {
      "mod_line": [
        15
      ],
      "mod_code": [
        "if ( str [ 0 ] == str2 [ i ] and str [ 0 ] == str1 [ 1 ] )"
      ],
      "err_line": 15,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        16
      ],
      "mod_code": [
        "if ( mp [ str1p [ 0 ] ] > mp [ str2 [ 0 ] )"
      ],
      "err_line": 16,
      "err_msg": "‘str1p’ was not declared in this scope"
    },
    {
      "mod_line": [
        18
      ],
      "mod_code": [
        "else do"
      ],
      "err_line": 20,
      "err_msg": "expected ‘while’ before numeric constant"
    },
    {
      "mod_line": [
        22
      ],
      "mod_code": [
        "if ( str [ i ] == str1 [ 1 ] )"
      ],
      "err_line": 22,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        26
      ],
      "mod_code": [
        "if ( str [ i ] == str2 [ 1 ] )"
      ],
      "err_line": 26,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        30
      ],
      "mod_code": [
        "if ( str1 [ 1 ] == str2 [ 1 ] && mp [ str1 [ 0 ] ] > mp [ str2 [ 0 ] )"
      ],
      "err_line": 30,
      "err_msg": "expected ‘]’ before ‘)’ token"
    },
    {
      "mod_line": [
        15,
        16
      ],
      "mod_code": [
        "if ( str [ 0 ] == str2 [ i ] && str [ 0 ] == str1 [ 1 ] )",
        "if ( mp [ str1p [ 0 ] ] > mp [ str2 [ 0 ] ] )"
      ],
      "err_line": 15,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        15,
        16,
        34
      ],
      "mod_code": [
        "if ( str [ 0 ] == str2 [ i ] && str [ 0 ] == str1 [ 1 ] )",
        "if ( mp [ str1p [ 0 ] ] > mp [ str2 [ 0 ] ] )",
        "return ! ( cout << \" NO \" : endl ) ;"
      ],
      "err_line": 15,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        15,
        16,
        34,
        12
      ],
      "mod_code": [
        "if ( str [ 0 ] == str2 [ i ] && str [ 0 ] == str1 [ 1 ] )",
        "if ( mp [ str1p [ 0 ] ] > mp [ str2 [ 0 ] ] )",
        "return ! ( cout << \" NO \" : endl ) ;",
        "gets ( str ) ;"
      ],
      "err_line": 12,
      "err_msg": "cannot convert ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ to ‘char*’ for argument ‘1’ to ‘char* gets(char*)’"
    },
    {
      "mod_line": [
        15,
        16,
        34,
        5
      ],
      "mod_code": [
        "if ( str [ 0 ] == str2 [ i ] && str [ 0 ] == str1 [ 1 ] )",
        "if ( mp [ str1p [ 0 ] ] > mp [ str2 [ 0 ] ] )",
        "return ! ( cout << \" NO \" : endl ) ;",
        "mp [ ' 9 ' ] = ' 4 ' ;"
      ],
      "err_line": 15,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        15,
        16,
        12
      ],
      "mod_code": [
        "if ( str [ 0 ] == str2 [ i ] && str [ 0 ] == str1 [ 1 ] )",
        "if ( mp [ str1p [ 0 ] ] > mp [ str2 [ 0 ] ] )",
        "gets ( str ) ;"
      ],
      "err_line": 12,
      "err_msg": "cannot convert ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ to ‘char*’ for argument ‘1’ to ‘char* gets(char*)’"
    },
    {
      "mod_line": [
        15,
        16,
        12,
        5
      ],
      "mod_code": [
        "if ( str [ 0 ] == str2 [ i ] && str [ 0 ] == str1 [ 1 ] )",
        "if ( mp [ str1p [ 0 ] ] > mp [ str2 [ 0 ] ] )",
        "gets ( str ) ;",
        "mp [ ' 9 ' ] = ' 4 ' ;"
      ],
      "err_line": 12,
      "err_msg": "cannot convert ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ to ‘char*’ for argument ‘1’ to ‘char* gets(char*)’"
    },
    {
      "mod_line": [
        15,
        16,
        5
      ],
      "mod_code": [
        "if ( str [ 0 ] == str2 [ i ] && str [ 0 ] == str1 [ 1 ] )",
        "if ( mp [ str1p [ 0 ] ] > mp [ str2 [ 0 ] ] )",
        "mp [ ' 9 ' ] = ' 4 ' ;"
      ],
      "err_line": 15,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        15,
        34
      ],
      "mod_code": [
        "if ( str [ 0 ] == str2 [ i ] && str [ 0 ] == str1 [ 1 ] )",
        "return ! ( cout << \" NO \" : endl ) ;"
      ],
      "err_line": 15,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        15,
        34,
        12
      ],
      "mod_code": [
        "if ( str [ 0 ] == str2 [ i ] && str [ 0 ] == str1 [ 1 ] )",
        "return ! ( cout << \" NO \" : endl ) ;",
        "gets ( str ) ;"
      ],
      "err_line": 12,
      "err_msg": "cannot convert ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ to ‘char*’ for argument ‘1’ to ‘char* gets(char*)’"
    },
    {
      "mod_line": [
        15,
        34,
        12,
        5
      ],
      "mod_code": [
        "if ( str [ 0 ] == str2 [ i ] && str [ 0 ] == str1 [ 1 ] )",
        "return ! ( cout << \" NO \" : endl ) ;",
        "gets ( str ) ;",
        "mp [ ' 9 ' ] = ' 4 ' ;"
      ],
      "err_line": 12,
      "err_msg": "cannot convert ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ to ‘char*’ for argument ‘1’ to ‘char* gets(char*)’"
    },
    {
      "mod_line": [
        15,
        34,
        5
      ],
      "mod_code": [
        "if ( str [ 0 ] == str2 [ i ] && str [ 0 ] == str1 [ 1 ] )",
        "return ! ( cout << \" NO \" : endl ) ;",
        "mp [ ' 9 ' ] = ' 4 ' ;"
      ],
      "err_line": 15,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        15,
        12
      ],
      "mod_code": [
        "if ( str [ 0 ] == str2 [ i ] && str [ 0 ] == str1 [ 1 ] )",
        "gets ( str ) ;"
      ],
      "err_line": 12,
      "err_msg": "cannot convert ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ to ‘char*’ for argument ‘1’ to ‘char* gets(char*)’"
    },
    {
      "mod_line": [
        15,
        12,
        5
      ],
      "mod_code": [
        "if ( str [ 0 ] == str2 [ i ] && str [ 0 ] == str1 [ 1 ] )",
        "gets ( str ) ;",
        "mp [ ' 9 ' ] = ' 4 ' ;"
      ],
      "err_line": 12,
      "err_msg": "cannot convert ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ to ‘char*’ for argument ‘1’ to ‘char* gets(char*)’"
    },
    {
      "mod_line": [
        15,
        5
      ],
      "mod_code": [
        "if ( str [ 0 ] == str2 [ i ] && str [ 0 ] == str1 [ 1 ] )",
        "mp [ ' 9 ' ] = ' 4 ' ;"
      ],
      "err_line": 15,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        16,
        34
      ],
      "mod_code": [
        "if ( mp [ str1p [ 0 ] ] > mp [ str2 [ 0 ] ] )",
        "return ! ( cout << \" NO \" : endl ) ;"
      ],
      "err_line": 16,
      "err_msg": "‘str1p’ was not declared in this scope"
    },
    {
      "mod_line": [
        16,
        34,
        15
      ],
      "mod_code": [
        "if ( mp [ str1p [ 0 ] ] > mp [ str2 [ 0 ] ] )",
        "return ! ( cout << \" NO \" : endl ) ;",
        "if ( str [ 0 ] == str2 [ i ] and str [ 0 ] == str1 [ 1 ] )"
      ],
      "err_line": 15,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        16,
        34,
        15,
        12
      ],
      "mod_code": [
        "if ( mp [ str1p [ 0 ] ] > mp [ str2 [ 0 ] ] )",
        "return ! ( cout << \" NO \" : endl ) ;",
        "if ( str [ 0 ] == str2 [ i ] and str [ 0 ] == str1 [ 1 ] )",
        "gets ( str ) ;"
      ],
      "err_line": 12,
      "err_msg": "cannot convert ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ to ‘char*’ for argument ‘1’ to ‘char* gets(char*)’"
    },
    {
      "mod_line": [
        16,
        34,
        15,
        5
      ],
      "mod_code": [
        "if ( mp [ str1p [ 0 ] ] > mp [ str2 [ 0 ] ] )",
        "return ! ( cout << \" NO \" : endl ) ;",
        "if ( str [ 0 ] == str2 [ i ] and str [ 0 ] == str1 [ 1 ] )",
        "mp [ ' 9 ' ] = ' 4 ' ;"
      ],
      "err_line": 15,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        16,
        34,
        12
      ],
      "mod_code": [
        "if ( mp [ str1p [ 0 ] ] > mp [ str2 [ 0 ] ] )",
        "return ! ( cout << \" NO \" : endl ) ;",
        "gets ( str ) ;"
      ],
      "err_line": 12,
      "err_msg": "cannot convert ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ to ‘char*’ for argument ‘1’ to ‘char* gets(char*)’"
    },
    {
      "mod_line": [
        16,
        34,
        12,
        5
      ],
      "mod_code": [
        "if ( mp [ str1p [ 0 ] ] > mp [ str2 [ 0 ] ] )",
        "return ! ( cout << \" NO \" : endl ) ;",
        "gets ( str ) ;",
        "mp [ ' 9 ' ] = ' 4 ' ;"
      ],
      "err_line": 12,
      "err_msg": "cannot convert ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ to ‘char*’ for argument ‘1’ to ‘char* gets(char*)’"
    },
    {
      "mod_line": [
        16,
        34,
        5
      ],
      "mod_code": [
        "if ( mp [ str1p [ 0 ] ] > mp [ str2 [ 0 ] ] )",
        "return ! ( cout << \" NO \" : endl ) ;",
        "mp [ ' 9 ' ] = ' 4 ' ;"
      ],
      "err_line": 16,
      "err_msg": "‘str1p’ was not declared in this scope"
    },
    {
      "mod_line": [
        16,
        15
      ],
      "mod_code": [
        "if ( mp [ str1p [ 0 ] ] > mp [ str2 [ 0 ] ] )",
        "if ( str [ 0 ] == str2 [ i ] and str [ 0 ] == str1 [ 1 ] )"
      ],
      "err_line": 15,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        16,
        15,
        12
      ],
      "mod_code": [
        "if ( mp [ str1p [ 0 ] ] > mp [ str2 [ 0 ] ] )",
        "if ( str [ 0 ] == str2 [ i ] and str [ 0 ] == str1 [ 1 ] )",
        "gets ( str ) ;"
      ],
      "err_line": 12,
      "err_msg": "cannot convert ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ to ‘char*’ for argument ‘1’ to ‘char* gets(char*)’"
    },
    {
      "mod_line": [
        16,
        15,
        12,
        5
      ],
      "mod_code": [
        "if ( mp [ str1p [ 0 ] ] > mp [ str2 [ 0 ] ] )",
        "if ( str [ 0 ] == str2 [ i ] and str [ 0 ] == str1 [ 1 ] )",
        "gets ( str ) ;",
        "mp [ ' 9 ' ] = ' 4 ' ;"
      ],
      "err_line": 12,
      "err_msg": "cannot convert ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ to ‘char*’ for argument ‘1’ to ‘char* gets(char*)’"
    },
    {
      "mod_line": [
        16,
        15,
        5
      ],
      "mod_code": [
        "if ( mp [ str1p [ 0 ] ] > mp [ str2 [ 0 ] ] )",
        "if ( str [ 0 ] == str2 [ i ] and str [ 0 ] == str1 [ 1 ] )",
        "mp [ ' 9 ' ] = ' 4 ' ;"
      ],
      "err_line": 15,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        16,
        12
      ],
      "mod_code": [
        "if ( mp [ str1p [ 0 ] ] > mp [ str2 [ 0 ] ] )",
        "gets ( str ) ;"
      ],
      "err_line": 12,
      "err_msg": "cannot convert ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ to ‘char*’ for argument ‘1’ to ‘char* gets(char*)’"
    },
    {
      "mod_line": [
        16,
        12,
        5
      ],
      "mod_code": [
        "if ( mp [ str1p [ 0 ] ] > mp [ str2 [ 0 ] ] )",
        "gets ( str ) ;",
        "mp [ ' 9 ' ] = ' 4 ' ;"
      ],
      "err_line": 12,
      "err_msg": "cannot convert ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ to ‘char*’ for argument ‘1’ to ‘char* gets(char*)’"
    },
    {
      "mod_line": [
        16,
        5
      ],
      "mod_code": [
        "if ( mp [ str1p [ 0 ] ] > mp [ str2 [ 0 ] ] )",
        "mp [ ' 9 ' ] = ' 4 ' ;"
      ],
      "err_line": 16,
      "err_msg": "‘str1p’ was not declared in this scope"
    },
    {
      "mod_line": [
        34,
        15
      ],
      "mod_code": [
        "return ! ( cout << \" NO \" : endl ) ;",
        "if ( str [ 0 ] == str2 [ i ] and str [ 0 ] == str1 [ 1 ] )"
      ],
      "err_line": 15,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        34,
        15,
        12
      ],
      "mod_code": [
        "return ! ( cout << \" NO \" : endl ) ;",
        "if ( str [ 0 ] == str2 [ i ] and str [ 0 ] == str1 [ 1 ] )",
        "gets ( str ) ;"
      ],
      "err_line": 12,
      "err_msg": "cannot convert ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ to ‘char*’ for argument ‘1’ to ‘char* gets(char*)’"
    },
    {
      "mod_line": [
        34,
        15,
        12,
        5
      ],
      "mod_code": [
        "return ! ( cout << \" NO \" : endl ) ;",
        "if ( str [ 0 ] == str2 [ i ] and str [ 0 ] == str1 [ 1 ] )",
        "gets ( str ) ;",
        "mp [ ' 9 ' ] = ' 4 ' ;"
      ],
      "err_line": 12,
      "err_msg": "cannot convert ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ to ‘char*’ for argument ‘1’ to ‘char* gets(char*)’"
    },
    {
      "mod_line": [
        34,
        15,
        5
      ],
      "mod_code": [
        "return ! ( cout << \" NO \" : endl ) ;",
        "if ( str [ 0 ] == str2 [ i ] and str [ 0 ] == str1 [ 1 ] )",
        "mp [ ' 9 ' ] = ' 4 ' ;"
      ],
      "err_line": 15,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        34,
        12
      ],
      "mod_code": [
        "return ! ( cout << \" NO \" : endl ) ;",
        "gets ( str ) ;"
      ],
      "err_line": 12,
      "err_msg": "cannot convert ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ to ‘char*’ for argument ‘1’ to ‘char* gets(char*)’"
    },
    {
      "mod_line": [
        34,
        12,
        5
      ],
      "mod_code": [
        "return ! ( cout << \" NO \" : endl ) ;",
        "gets ( str ) ;",
        "mp [ ' 9 ' ] = ' 4 ' ;"
      ],
      "err_line": 12,
      "err_msg": "cannot convert ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ to ‘char*’ for argument ‘1’ to ‘char* gets(char*)’"
    },
    {
      "mod_line": [
        34,
        5
      ],
      "mod_code": [
        "return ! ( cout << \" NO \" : endl ) ;",
        "mp [ ' 9 ' ] = ' 4 ' ;"
      ],
      "err_line": 34,
      "err_msg": "expected ‘)’ before ‘:’ token"
    },
    {
      "mod_line": [
        15,
        12
      ],
      "mod_code": [
        "if ( str [ 0 ] == str2 [ i ] and str [ 0 ] == str1 [ 1 ] )",
        "gets ( str ) ;"
      ],
      "err_line": 12,
      "err_msg": "cannot convert ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ to ‘char*’ for argument ‘1’ to ‘char* gets(char*)’"
    },
    {
      "mod_line": [
        15,
        12,
        5
      ],
      "mod_code": [
        "if ( str [ 0 ] == str2 [ i ] and str [ 0 ] == str1 [ 1 ] )",
        "gets ( str ) ;",
        "mp [ ' 9 ' ] = ' 4 ' ;"
      ],
      "err_line": 12,
      "err_msg": "cannot convert ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ to ‘char*’ for argument ‘1’ to ‘char* gets(char*)’"
    },
    {
      "mod_line": [
        15,
        5
      ],
      "mod_code": [
        "if ( str [ 0 ] == str2 [ i ] and str [ 0 ] == str1 [ 1 ] )",
        "mp [ ' 9 ' ] = ' 4 ' ;"
      ],
      "err_line": 15,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        12,
        5
      ],
      "mod_code": [
        "gets ( str ) ;",
        "mp [ ' 9 ' ] = ' 4 ' ;"
      ],
      "err_line": 12,
      "err_msg": "cannot convert ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ to ‘char*’ for argument ‘1’ to ‘char* gets(char*)’"
    }
  ]
}