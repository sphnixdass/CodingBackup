{
  "meta": {
    "index": 766,
    "hitid": "3PKJ68EHDNQNOB6WBKW3FP1F6TXJH6",
    "workerid": "A1AYVATMT88U1W",
    "probid": "451A",
    "subid": "48573140"
  },
  "lines": [
    {
      "line": 0,
      "text": "the 100000th element of arr is 0",
      "code": "int arr [ 100000 ] = { 0 } ;",
      "indent": 0
    },
    {
      "line": 1,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 2,
      "text": "let n , m , turn , j be integers with turn = 0 , j = 0",
      "code": "int n , m , turn = 0 , j = 0 ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "read n and m",
      "code": "cin >> n >> m ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "for i = 0 to n exclusive",
      "code": "for ( int i = 0 ; i < n ; i ++ )",
      "indent": 1
    },
    {
      "line": 5,
      "text": "increment turn by 1",
      "code": "turn ++ ;",
      "indent": 2
    },
    {
      "line": 6,
      "text": "increment j by 1",
      "code": "j ++ ;",
      "indent": 2
    },
    {
      "line": 7,
      "text": "if j is equal to m , stop",
      "code": "if ( j == m ) break ;",
      "indent": 2
    },
    {
      "line": 8,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 9,
      "text": "if turn modulo 2 is equal to 0",
      "code": "if ( turn % 2 == 0 )",
      "indent": 1
    },
    {
      "line": 10,
      "text": "print Malvika and newline",
      "code": "cout << \" Malvika\\n \" ;",
      "indent": 2
    },
    {
      "line": 11,
      "text": "else do the following",
      "code": "else",
      "indent": 1
    },
    {
      "line": 12,
      "text": "print Akshat and newline",
      "code": "cout << \" Akshat\\n \" ;",
      "indent": 2
    },
    {
      "line": 13,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        0
      ],
      "mod_code": [
        "arr [ 0 ] = 0 ;"
      ],
      "err_line": 0,
      "err_msg": "‘arr’ does not name a type"
    },
    {
      "mod_line": [
        2
      ],
      "mod_code": [
        "int n , m , turn = 0 , j , j ;"
      ],
      "err_line": 2,
      "err_msg": "redeclaration of ‘int j’"
    },
    {
      "mod_line": [
        10
      ],
      "mod_code": [
        "cout << Malvika << endl ;"
      ],
      "err_line": 10,
      "err_msg": "‘Malvika’ was not declared in this scope"
    },
    {
      "mod_line": [
        12
      ],
      "mod_code": [
        "cout << Akshat << endl ;"
      ],
      "err_line": 12,
      "err_msg": "‘Akshat’ was not declared in this scope"
    },
    {
      "mod_line": [
        0
      ],
      "mod_code": [
        "arr . 100000th ( ) ;"
      ],
      "err_line": 0,
      "err_msg": "invalid suffix \"th\" on integer constant"
    },
    {
      "mod_line": [
        4
      ],
      "mod_code": [
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 4,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        10
      ],
      "mod_code": [
        "cout << Malvika << \" \\n \" ;"
      ],
      "err_line": 10,
      "err_msg": "‘Malvika’ was not declared in this scope"
    },
    {
      "mod_line": [
        12
      ],
      "mod_code": [
        "cout << Akshat << \" \\n \" ;"
      ],
      "err_line": 12,
      "err_msg": "‘Akshat’ was not declared in this scope"
    },
    {
      "mod_line": [
        0,
        2
      ],
      "mod_code": [
        "arr [ 0 ] = 0 ;",
        "int n , m , turn = 0 , j , j ;"
      ],
      "err_line": 0,
      "err_msg": "‘arr’ does not name a type"
    },
    {
      "mod_line": [
        0,
        2,
        10
      ],
      "mod_code": [
        "arr [ 0 ] = 0 ;",
        "int n , m , turn = 0 , j , j ;",
        "cout << Malvika << endl ;"
      ],
      "err_line": 0,
      "err_msg": "‘arr’ does not name a type"
    },
    {
      "mod_line": [
        0,
        2,
        10,
        12
      ],
      "mod_code": [
        "arr [ 0 ] = 0 ;",
        "int n , m , turn = 0 , j , j ;",
        "cout << Malvika << endl ;",
        "cout << Akshat << endl ;"
      ],
      "err_line": 0,
      "err_msg": "‘arr’ does not name a type"
    },
    {
      "mod_line": [
        0,
        2,
        10,
        3
      ],
      "mod_code": [
        "arr [ 0 ] = 0 ;",
        "int n , m , turn = 0 , j , j ;",
        "cout << Malvika << endl ;",
        "cin >> m >> m ;"
      ],
      "err_line": 0,
      "err_msg": "‘arr’ does not name a type"
    },
    {
      "mod_line": [
        0,
        2,
        10,
        11
      ],
      "mod_code": [
        "arr [ 0 ] = 0 ;",
        "int n , m , turn = 0 , j , j ;",
        "cout << Malvika << endl ;",
        "while ( 1 )"
      ],
      "err_line": 0,
      "err_msg": "‘arr’ does not name a type"
    },
    {
      "mod_line": [
        0,
        2,
        12
      ],
      "mod_code": [
        "arr [ 0 ] = 0 ;",
        "int n , m , turn = 0 , j , j ;",
        "cout << Akshat << endl ;"
      ],
      "err_line": 0,
      "err_msg": "‘arr’ does not name a type"
    },
    {
      "mod_line": [
        0,
        2,
        12,
        3
      ],
      "mod_code": [
        "arr [ 0 ] = 0 ;",
        "int n , m , turn = 0 , j , j ;",
        "cout << Akshat << endl ;",
        "cin >> m >> m ;"
      ],
      "err_line": 0,
      "err_msg": "‘arr’ does not name a type"
    },
    {
      "mod_line": [
        0,
        2,
        12,
        11
      ],
      "mod_code": [
        "arr [ 0 ] = 0 ;",
        "int n , m , turn = 0 , j , j ;",
        "cout << Akshat << endl ;",
        "while ( 1 )"
      ],
      "err_line": 0,
      "err_msg": "‘arr’ does not name a type"
    },
    {
      "mod_line": [
        0,
        2,
        3
      ],
      "mod_code": [
        "arr [ 0 ] = 0 ;",
        "int n , m , turn = 0 , j , j ;",
        "cin >> m >> m ;"
      ],
      "err_line": 0,
      "err_msg": "‘arr’ does not name a type"
    },
    {
      "mod_line": [
        0,
        2,
        3,
        11
      ],
      "mod_code": [
        "arr [ 0 ] = 0 ;",
        "int n , m , turn = 0 , j , j ;",
        "cin >> m >> m ;",
        "while ( 1 )"
      ],
      "err_line": 0,
      "err_msg": "‘arr’ does not name a type"
    },
    {
      "mod_line": [
        0,
        2,
        11
      ],
      "mod_code": [
        "arr [ 0 ] = 0 ;",
        "int n , m , turn = 0 , j , j ;",
        "while ( 1 )"
      ],
      "err_line": 0,
      "err_msg": "‘arr’ does not name a type"
    },
    {
      "mod_line": [
        0,
        10
      ],
      "mod_code": [
        "arr [ 0 ] = 0 ;",
        "cout << Malvika << endl ;"
      ],
      "err_line": 0,
      "err_msg": "‘arr’ does not name a type"
    },
    {
      "mod_line": [
        0,
        10,
        12
      ],
      "mod_code": [
        "arr [ 0 ] = 0 ;",
        "cout << Malvika << endl ;",
        "cout << Akshat << endl ;"
      ],
      "err_line": 0,
      "err_msg": "‘arr’ does not name a type"
    },
    {
      "mod_line": [
        0,
        10,
        12,
        3
      ],
      "mod_code": [
        "arr [ 0 ] = 0 ;",
        "cout << Malvika << endl ;",
        "cout << Akshat << endl ;",
        "cin >> m >> m ;"
      ],
      "err_line": 0,
      "err_msg": "‘arr’ does not name a type"
    },
    {
      "mod_line": [
        0,
        10,
        12,
        11
      ],
      "mod_code": [
        "arr [ 0 ] = 0 ;",
        "cout << Malvika << endl ;",
        "cout << Akshat << endl ;",
        "while ( 1 )"
      ],
      "err_line": 0,
      "err_msg": "‘arr’ does not name a type"
    },
    {
      "mod_line": [
        0,
        10,
        3
      ],
      "mod_code": [
        "arr [ 0 ] = 0 ;",
        "cout << Malvika << endl ;",
        "cin >> m >> m ;"
      ],
      "err_line": 0,
      "err_msg": "‘arr’ does not name a type"
    },
    {
      "mod_line": [
        0,
        10,
        3,
        11
      ],
      "mod_code": [
        "arr [ 0 ] = 0 ;",
        "cout << Malvika << endl ;",
        "cin >> m >> m ;",
        "while ( 1 )"
      ],
      "err_line": 0,
      "err_msg": "‘arr’ does not name a type"
    },
    {
      "mod_line": [
        0,
        10,
        11
      ],
      "mod_code": [
        "arr [ 0 ] = 0 ;",
        "cout << Malvika << endl ;",
        "while ( 1 )"
      ],
      "err_line": 0,
      "err_msg": "‘arr’ does not name a type"
    },
    {
      "mod_line": [
        0,
        12
      ],
      "mod_code": [
        "arr [ 0 ] = 0 ;",
        "cout << Akshat << endl ;"
      ],
      "err_line": 0,
      "err_msg": "‘arr’ does not name a type"
    },
    {
      "mod_line": [
        0,
        12,
        3
      ],
      "mod_code": [
        "arr [ 0 ] = 0 ;",
        "cout << Akshat << endl ;",
        "cin >> m >> m ;"
      ],
      "err_line": 0,
      "err_msg": "‘arr’ does not name a type"
    },
    {
      "mod_line": [
        0,
        12,
        3,
        11
      ],
      "mod_code": [
        "arr [ 0 ] = 0 ;",
        "cout << Akshat << endl ;",
        "cin >> m >> m ;",
        "while ( 1 )"
      ],
      "err_line": 0,
      "err_msg": "‘arr’ does not name a type"
    },
    {
      "mod_line": [
        0,
        12,
        11
      ],
      "mod_code": [
        "arr [ 0 ] = 0 ;",
        "cout << Akshat << endl ;",
        "while ( 1 )"
      ],
      "err_line": 0,
      "err_msg": "‘arr’ does not name a type"
    },
    {
      "mod_line": [
        0,
        3
      ],
      "mod_code": [
        "arr [ 0 ] = 0 ;",
        "cin >> m >> m ;"
      ],
      "err_line": 0,
      "err_msg": "‘arr’ does not name a type"
    },
    {
      "mod_line": [
        0,
        3,
        11
      ],
      "mod_code": [
        "arr [ 0 ] = 0 ;",
        "cin >> m >> m ;",
        "while ( 1 )"
      ],
      "err_line": 0,
      "err_msg": "‘arr’ does not name a type"
    },
    {
      "mod_line": [
        0,
        11
      ],
      "mod_code": [
        "arr [ 0 ] = 0 ;",
        "while ( 1 )"
      ],
      "err_line": 0,
      "err_msg": "‘arr’ does not name a type"
    },
    {
      "mod_line": [
        2,
        10
      ],
      "mod_code": [
        "int n , m , turn = 0 , j , j ;",
        "cout << Malvika << endl ;"
      ],
      "err_line": 2,
      "err_msg": "redeclaration of ‘int j’"
    },
    {
      "mod_line": [
        2,
        10,
        12
      ],
      "mod_code": [
        "int n , m , turn = 0 , j , j ;",
        "cout << Malvika << endl ;",
        "cout << Akshat << endl ;"
      ],
      "err_line": 2,
      "err_msg": "redeclaration of ‘int j’"
    },
    {
      "mod_line": [
        2,
        10,
        12,
        3
      ],
      "mod_code": [
        "int n , m , turn = 0 , j , j ;",
        "cout << Malvika << endl ;",
        "cout << Akshat << endl ;",
        "cin >> m >> m ;"
      ],
      "err_line": 2,
      "err_msg": "redeclaration of ‘int j’"
    },
    {
      "mod_line": [
        2,
        10,
        12,
        11
      ],
      "mod_code": [
        "int n , m , turn = 0 , j , j ;",
        "cout << Malvika << endl ;",
        "cout << Akshat << endl ;",
        "while ( 1 )"
      ],
      "err_line": 2,
      "err_msg": "redeclaration of ‘int j’"
    },
    {
      "mod_line": [
        2,
        10,
        3
      ],
      "mod_code": [
        "int n , m , turn = 0 , j , j ;",
        "cout << Malvika << endl ;",
        "cin >> m >> m ;"
      ],
      "err_line": 2,
      "err_msg": "redeclaration of ‘int j’"
    },
    {
      "mod_line": [
        2,
        10,
        3,
        11
      ],
      "mod_code": [
        "int n , m , turn = 0 , j , j ;",
        "cout << Malvika << endl ;",
        "cin >> m >> m ;",
        "while ( 1 )"
      ],
      "err_line": 2,
      "err_msg": "redeclaration of ‘int j’"
    },
    {
      "mod_line": [
        2,
        10,
        11
      ],
      "mod_code": [
        "int n , m , turn = 0 , j , j ;",
        "cout << Malvika << endl ;",
        "while ( 1 )"
      ],
      "err_line": 2,
      "err_msg": "redeclaration of ‘int j’"
    },
    {
      "mod_line": [
        2,
        12
      ],
      "mod_code": [
        "int n , m , turn = 0 , j , j ;",
        "cout << Akshat << endl ;"
      ],
      "err_line": 2,
      "err_msg": "redeclaration of ‘int j’"
    },
    {
      "mod_line": [
        2,
        12,
        3
      ],
      "mod_code": [
        "int n , m , turn = 0 , j , j ;",
        "cout << Akshat << endl ;",
        "cin >> m >> m ;"
      ],
      "err_line": 2,
      "err_msg": "redeclaration of ‘int j’"
    },
    {
      "mod_line": [
        2,
        12,
        3,
        11
      ],
      "mod_code": [
        "int n , m , turn = 0 , j , j ;",
        "cout << Akshat << endl ;",
        "cin >> m >> m ;",
        "while ( 1 )"
      ],
      "err_line": 2,
      "err_msg": "redeclaration of ‘int j’"
    },
    {
      "mod_line": [
        2,
        12,
        11
      ],
      "mod_code": [
        "int n , m , turn = 0 , j , j ;",
        "cout << Akshat << endl ;",
        "while ( 1 )"
      ],
      "err_line": 2,
      "err_msg": "redeclaration of ‘int j’"
    },
    {
      "mod_line": [
        2,
        3
      ],
      "mod_code": [
        "int n , m , turn = 0 , j , j ;",
        "cin >> m >> m ;"
      ],
      "err_line": 2,
      "err_msg": "redeclaration of ‘int j’"
    },
    {
      "mod_line": [
        2,
        3,
        11
      ],
      "mod_code": [
        "int n , m , turn = 0 , j , j ;",
        "cin >> m >> m ;",
        "while ( 1 )"
      ],
      "err_line": 2,
      "err_msg": "redeclaration of ‘int j’"
    },
    {
      "mod_line": [
        2,
        11
      ],
      "mod_code": [
        "int n , m , turn = 0 , j , j ;",
        "while ( 1 )"
      ],
      "err_line": 2,
      "err_msg": "redeclaration of ‘int j’"
    },
    {
      "mod_line": [
        10,
        12
      ],
      "mod_code": [
        "cout << Malvika << endl ;",
        "cout << Akshat << endl ;"
      ],
      "err_line": 10,
      "err_msg": "‘Malvika’ was not declared in this scope"
    },
    {
      "mod_line": [
        10,
        12,
        3
      ],
      "mod_code": [
        "cout << Malvika << endl ;",
        "cout << Akshat << endl ;",
        "cin >> m >> m ;"
      ],
      "err_line": 10,
      "err_msg": "‘Malvika’ was not declared in this scope"
    },
    {
      "mod_line": [
        10,
        12,
        3,
        11
      ],
      "mod_code": [
        "cout << Malvika << endl ;",
        "cout << Akshat << endl ;",
        "cin >> m >> m ;",
        "while ( 1 )"
      ],
      "err_line": 10,
      "err_msg": "‘Malvika’ was not declared in this scope"
    },
    {
      "mod_line": [
        10,
        12,
        11
      ],
      "mod_code": [
        "cout << Malvika << endl ;",
        "cout << Akshat << endl ;",
        "while ( 1 )"
      ],
      "err_line": 10,
      "err_msg": "‘Malvika’ was not declared in this scope"
    },
    {
      "mod_line": [
        10,
        3
      ],
      "mod_code": [
        "cout << Malvika << endl ;",
        "cin >> m >> m ;"
      ],
      "err_line": 10,
      "err_msg": "‘Malvika’ was not declared in this scope"
    },
    {
      "mod_line": [
        10,
        3,
        11
      ],
      "mod_code": [
        "cout << Malvika << endl ;",
        "cin >> m >> m ;",
        "while ( 1 )"
      ],
      "err_line": 10,
      "err_msg": "‘Malvika’ was not declared in this scope"
    },
    {
      "mod_line": [
        10,
        11
      ],
      "mod_code": [
        "cout << Malvika << endl ;",
        "while ( 1 )"
      ],
      "err_line": 10,
      "err_msg": "‘Malvika’ was not declared in this scope"
    },
    {
      "mod_line": [
        12,
        3
      ],
      "mod_code": [
        "cout << Akshat << endl ;",
        "cin >> m >> m ;"
      ],
      "err_line": 12,
      "err_msg": "‘Akshat’ was not declared in this scope"
    },
    {
      "mod_line": [
        12,
        3,
        11
      ],
      "mod_code": [
        "cout << Akshat << endl ;",
        "cin >> m >> m ;",
        "while ( 1 )"
      ],
      "err_line": 12,
      "err_msg": "‘Akshat’ was not declared in this scope"
    },
    {
      "mod_line": [
        12,
        11
      ],
      "mod_code": [
        "cout << Akshat << endl ;",
        "while ( 1 )"
      ],
      "err_line": 12,
      "err_msg": "‘Akshat’ was not declared in this scope"
    }
  ]
}