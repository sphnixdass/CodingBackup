{
  "meta": {
    "index": 1241,
    "hitid": "3MQY1YVHS3EDR25247GFUXC08IDB2R",
    "workerid": "A1AYVATMT88U1W",
    "probid": "621A",
    "subid": "48410494"
  },
  "lines": [
    {
      "line": 0,
      "text": "a = array of integers of length 10000005",
      "code": "int a [ 10000005 ] ;",
      "indent": 0
    },
    {
      "line": 1,
      "text": "let sum be a long integer with value is equal to 0",
      "code": "long long sum = 0 ;",
      "indent": 0
    },
    {
      "line": 2,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 3,
      "text": "let n be a integer",
      "code": "int n ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "let temp1 , temp2 be integers with value temp2 is equal to 0",
      "code": "int temp1 , temp2 = 0 ;",
      "indent": 1
    },
    {
      "line": 5,
      "text": "read n",
      "code": "cin >> n ;",
      "indent": 1
    },
    {
      "line": 6,
      "text": "while ( n value is decreased by 1 )",
      "code": "while ( n -- )",
      "indent": 1
    },
    {
      "line": 7,
      "text": "read temp1",
      "code": "cin >> temp1 ;",
      "indent": 2
    },
    {
      "line": 8,
      "text": "if ( temp1 modulus 2 is equal to 0 )",
      "code": "if ( temp1 % 2 == 0 )",
      "indent": 2
    },
    {
      "line": 9,
      "text": "the value of sum is equal to sum + temp1",
      "code": "sum += temp1 ;",
      "indent": 3
    },
    {
      "line": 10,
      "text": "else do the following",
      "code": "else",
      "indent": 2
    },
    {
      "line": 11,
      "text": "temp2th value of array a is initialized to temp1",
      "code": "a [ temp2 ] = temp1 ;",
      "indent": 3
    },
    {
      "line": 12,
      "text": "increase temp2 by 1",
      "code": "temp2 ++ ;",
      "indent": 3
    },
    {
      "line": 13,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 14,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 15,
      "text": "sort the values ( a , a + temp2 )",
      "code": "sort ( a , a + temp2 ) ;",
      "indent": 1
    },
    {
      "line": 16,
      "text": "if ( temp2 modulus 2 is equal to 0 )",
      "code": "if ( temp2 % 2 == 0 )",
      "indent": 1
    },
    {
      "line": 17,
      "text": "for ( integer i = 0 to temp2 inclusive ) , sum is equal to ( sum + ith element of array a )",
      "code": "for ( int i = 0 ; i <= temp2 ; i ++ ) sum += a [ i ] ;",
      "indent": 2
    },
    {
      "line": 18,
      "text": "else do the following",
      "code": "else",
      "indent": 1
    },
    {
      "line": 19,
      "text": "for ( integer i is equal to temp2 , i greater than or equal to 1 , decrease i value by 1 ) , sum is equal to ( sum + ith element of array a )",
      "code": "for ( int i = temp2 ; i >= 1 ; i -- ) sum += a [ i ] ;",
      "indent": 2
    },
    {
      "line": 20,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 21,
      "text": "print sum and newline",
      "code": "cout << sum << endl ;",
      "indent": 1
    },
    {
      "line": 22,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 23,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        11
      ],
      "mod_code": [
        "temp1 [ 0 ] = temp1 ;"
      ],
      "err_line": 11,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        19
      ],
      "mod_code": [
        "for ( int i = temp2 ; i >= 1 ; i -- ) { sum is ( sum + 1 ) ; }"
      ],
      "err_line": 19,
      "err_msg": "expected ‘;’ before ‘is’"
    },
    {
      "mod_line": [
        11
      ],
      "mod_code": [
        "temp1 [ 1 ] = temp1 ;"
      ],
      "err_line": 11,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        15
      ],
      "mod_code": [
        "sort ( ( a , a + temp2 ) ) ;"
      ],
      "err_line": 15,
      "err_msg": "no matching function for call to ‘sort(int*)’"
    },
    {
      "mod_line": [
        11,
        19
      ],
      "mod_code": [
        "temp1 [ 0 ] = temp1 ;",
        "for ( int i = temp2 ; i >= 1 ; i -- ) { sum is ( sum + 1 ) ; }"
      ],
      "err_line": 11,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        11,
        19,
        10
      ],
      "mod_code": [
        "temp1 [ 0 ] = temp1 ;",
        "for ( int i = temp2 ; i >= 1 ; i -- ) { sum is ( sum + 1 ) ; }",
        "while ( 1 )"
      ],
      "err_line": 11,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        11,
        19,
        10,
        8
      ],
      "mod_code": [
        "temp1 [ 0 ] = temp1 ;",
        "for ( int i = temp2 ; i >= 1 ; i -- ) { sum is ( sum + 1 ) ; }",
        "while ( 1 )",
        "if ( temp1 % 2 == ' 0 ' )"
      ],
      "err_line": 11,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        11,
        19,
        10,
        16
      ],
      "mod_code": [
        "temp1 [ 0 ] = temp1 ;",
        "for ( int i = temp2 ; i >= 1 ; i -- ) { sum is ( sum + 1 ) ; }",
        "while ( 1 )",
        "if ( temp2 % 2 == ' 0 ' )"
      ],
      "err_line": 11,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        11,
        19,
        10,
        7
      ],
      "mod_code": [
        "temp1 [ 0 ] = temp1 ;",
        "for ( int i = temp2 ; i >= 1 ; i -- ) { sum is ( sum + 1 ) ; }",
        "while ( 1 )",
        "temp1 >> temp1 ;"
      ],
      "err_line": 11,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        11,
        19,
        8
      ],
      "mod_code": [
        "temp1 [ 0 ] = temp1 ;",
        "for ( int i = temp2 ; i >= 1 ; i -- ) { sum is ( sum + 1 ) ; }",
        "if ( temp1 % 2 == ' 0 ' )"
      ],
      "err_line": 11,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        11,
        19,
        8,
        16
      ],
      "mod_code": [
        "temp1 [ 0 ] = temp1 ;",
        "for ( int i = temp2 ; i >= 1 ; i -- ) { sum is ( sum + 1 ) ; }",
        "if ( temp1 % 2 == ' 0 ' )",
        "if ( temp2 % 2 == ' 0 ' )"
      ],
      "err_line": 11,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        11,
        19,
        8,
        7
      ],
      "mod_code": [
        "temp1 [ 0 ] = temp1 ;",
        "for ( int i = temp2 ; i >= 1 ; i -- ) { sum is ( sum + 1 ) ; }",
        "if ( temp1 % 2 == ' 0 ' )",
        "temp1 >> temp1 ;"
      ],
      "err_line": 11,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        11,
        19,
        16
      ],
      "mod_code": [
        "temp1 [ 0 ] = temp1 ;",
        "for ( int i = temp2 ; i >= 1 ; i -- ) { sum is ( sum + 1 ) ; }",
        "if ( temp2 % 2 == ' 0 ' )"
      ],
      "err_line": 11,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        11,
        19,
        16,
        7
      ],
      "mod_code": [
        "temp1 [ 0 ] = temp1 ;",
        "for ( int i = temp2 ; i >= 1 ; i -- ) { sum is ( sum + 1 ) ; }",
        "if ( temp2 % 2 == ' 0 ' )",
        "temp1 >> temp1 ;"
      ],
      "err_line": 11,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        11,
        19,
        7
      ],
      "mod_code": [
        "temp1 [ 0 ] = temp1 ;",
        "for ( int i = temp2 ; i >= 1 ; i -- ) { sum is ( sum + 1 ) ; }",
        "temp1 >> temp1 ;"
      ],
      "err_line": 11,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        11,
        10
      ],
      "mod_code": [
        "temp1 [ 0 ] = temp1 ;",
        "while ( 1 )"
      ],
      "err_line": 11,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        11,
        10,
        8
      ],
      "mod_code": [
        "temp1 [ 0 ] = temp1 ;",
        "while ( 1 )",
        "if ( temp1 % 2 == ' 0 ' )"
      ],
      "err_line": 11,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        11,
        10,
        8,
        16
      ],
      "mod_code": [
        "temp1 [ 0 ] = temp1 ;",
        "while ( 1 )",
        "if ( temp1 % 2 == ' 0 ' )",
        "if ( temp2 % 2 == ' 0 ' )"
      ],
      "err_line": 11,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        11,
        10,
        8,
        7
      ],
      "mod_code": [
        "temp1 [ 0 ] = temp1 ;",
        "while ( 1 )",
        "if ( temp1 % 2 == ' 0 ' )",
        "temp1 >> temp1 ;"
      ],
      "err_line": 11,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        11,
        10,
        16
      ],
      "mod_code": [
        "temp1 [ 0 ] = temp1 ;",
        "while ( 1 )",
        "if ( temp2 % 2 == ' 0 ' )"
      ],
      "err_line": 11,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        11,
        10,
        16,
        7
      ],
      "mod_code": [
        "temp1 [ 0 ] = temp1 ;",
        "while ( 1 )",
        "if ( temp2 % 2 == ' 0 ' )",
        "temp1 >> temp1 ;"
      ],
      "err_line": 11,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        11,
        10,
        7
      ],
      "mod_code": [
        "temp1 [ 0 ] = temp1 ;",
        "while ( 1 )",
        "temp1 >> temp1 ;"
      ],
      "err_line": 11,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        11,
        8
      ],
      "mod_code": [
        "temp1 [ 0 ] = temp1 ;",
        "if ( temp1 % 2 == ' 0 ' )"
      ],
      "err_line": 11,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        11,
        8,
        16
      ],
      "mod_code": [
        "temp1 [ 0 ] = temp1 ;",
        "if ( temp1 % 2 == ' 0 ' )",
        "if ( temp2 % 2 == ' 0 ' )"
      ],
      "err_line": 11,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        11,
        8,
        16,
        7
      ],
      "mod_code": [
        "temp1 [ 0 ] = temp1 ;",
        "if ( temp1 % 2 == ' 0 ' )",
        "if ( temp2 % 2 == ' 0 ' )",
        "temp1 >> temp1 ;"
      ],
      "err_line": 11,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        11,
        8,
        7
      ],
      "mod_code": [
        "temp1 [ 0 ] = temp1 ;",
        "if ( temp1 % 2 == ' 0 ' )",
        "temp1 >> temp1 ;"
      ],
      "err_line": 11,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        11,
        16
      ],
      "mod_code": [
        "temp1 [ 0 ] = temp1 ;",
        "if ( temp2 % 2 == ' 0 ' )"
      ],
      "err_line": 11,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        11,
        16,
        7
      ],
      "mod_code": [
        "temp1 [ 0 ] = temp1 ;",
        "if ( temp2 % 2 == ' 0 ' )",
        "temp1 >> temp1 ;"
      ],
      "err_line": 11,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        11,
        7
      ],
      "mod_code": [
        "temp1 [ 0 ] = temp1 ;",
        "temp1 >> temp1 ;"
      ],
      "err_line": 11,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        19,
        10
      ],
      "mod_code": [
        "for ( int i = temp2 ; i >= 1 ; i -- ) { sum is ( sum + 1 ) ; }",
        "while ( 1 )"
      ],
      "err_line": 19,
      "err_msg": "expected ‘;’ before ‘is’"
    },
    {
      "mod_line": [
        19,
        10,
        8
      ],
      "mod_code": [
        "for ( int i = temp2 ; i >= 1 ; i -- ) { sum is ( sum + 1 ) ; }",
        "while ( 1 )",
        "if ( temp1 % 2 == ' 0 ' )"
      ],
      "err_line": 19,
      "err_msg": "expected ‘;’ before ‘is’"
    },
    {
      "mod_line": [
        19,
        10,
        8,
        16
      ],
      "mod_code": [
        "for ( int i = temp2 ; i >= 1 ; i -- ) { sum is ( sum + 1 ) ; }",
        "while ( 1 )",
        "if ( temp1 % 2 == ' 0 ' )",
        "if ( temp2 % 2 == ' 0 ' )"
      ],
      "err_line": 19,
      "err_msg": "expected ‘;’ before ‘is’"
    },
    {
      "mod_line": [
        19,
        10,
        8,
        7
      ],
      "mod_code": [
        "for ( int i = temp2 ; i >= 1 ; i -- ) { sum is ( sum + 1 ) ; }",
        "while ( 1 )",
        "if ( temp1 % 2 == ' 0 ' )",
        "temp1 >> temp1 ;"
      ],
      "err_line": 19,
      "err_msg": "expected ‘;’ before ‘is’"
    },
    {
      "mod_line": [
        19,
        10,
        16
      ],
      "mod_code": [
        "for ( int i = temp2 ; i >= 1 ; i -- ) { sum is ( sum + 1 ) ; }",
        "while ( 1 )",
        "if ( temp2 % 2 == ' 0 ' )"
      ],
      "err_line": 19,
      "err_msg": "expected ‘;’ before ‘is’"
    },
    {
      "mod_line": [
        19,
        10,
        16,
        7
      ],
      "mod_code": [
        "for ( int i = temp2 ; i >= 1 ; i -- ) { sum is ( sum + 1 ) ; }",
        "while ( 1 )",
        "if ( temp2 % 2 == ' 0 ' )",
        "temp1 >> temp1 ;"
      ],
      "err_line": 19,
      "err_msg": "expected ‘;’ before ‘is’"
    },
    {
      "mod_line": [
        19,
        10,
        7
      ],
      "mod_code": [
        "for ( int i = temp2 ; i >= 1 ; i -- ) { sum is ( sum + 1 ) ; }",
        "while ( 1 )",
        "temp1 >> temp1 ;"
      ],
      "err_line": 19,
      "err_msg": "expected ‘;’ before ‘is’"
    },
    {
      "mod_line": [
        19,
        8
      ],
      "mod_code": [
        "for ( int i = temp2 ; i >= 1 ; i -- ) { sum is ( sum + 1 ) ; }",
        "if ( temp1 % 2 == ' 0 ' )"
      ],
      "err_line": 19,
      "err_msg": "expected ‘;’ before ‘is’"
    },
    {
      "mod_line": [
        19,
        8,
        16
      ],
      "mod_code": [
        "for ( int i = temp2 ; i >= 1 ; i -- ) { sum is ( sum + 1 ) ; }",
        "if ( temp1 % 2 == ' 0 ' )",
        "if ( temp2 % 2 == ' 0 ' )"
      ],
      "err_line": 19,
      "err_msg": "expected ‘;’ before ‘is’"
    },
    {
      "mod_line": [
        19,
        8,
        16,
        7
      ],
      "mod_code": [
        "for ( int i = temp2 ; i >= 1 ; i -- ) { sum is ( sum + 1 ) ; }",
        "if ( temp1 % 2 == ' 0 ' )",
        "if ( temp2 % 2 == ' 0 ' )",
        "temp1 >> temp1 ;"
      ],
      "err_line": 19,
      "err_msg": "expected ‘;’ before ‘is’"
    },
    {
      "mod_line": [
        19,
        8,
        7
      ],
      "mod_code": [
        "for ( int i = temp2 ; i >= 1 ; i -- ) { sum is ( sum + 1 ) ; }",
        "if ( temp1 % 2 == ' 0 ' )",
        "temp1 >> temp1 ;"
      ],
      "err_line": 19,
      "err_msg": "expected ‘;’ before ‘is’"
    },
    {
      "mod_line": [
        19,
        16
      ],
      "mod_code": [
        "for ( int i = temp2 ; i >= 1 ; i -- ) { sum is ( sum + 1 ) ; }",
        "if ( temp2 % 2 == ' 0 ' )"
      ],
      "err_line": 19,
      "err_msg": "expected ‘;’ before ‘is’"
    },
    {
      "mod_line": [
        19,
        16,
        7
      ],
      "mod_code": [
        "for ( int i = temp2 ; i >= 1 ; i -- ) { sum is ( sum + 1 ) ; }",
        "if ( temp2 % 2 == ' 0 ' )",
        "temp1 >> temp1 ;"
      ],
      "err_line": 19,
      "err_msg": "expected ‘;’ before ‘is’"
    },
    {
      "mod_line": [
        19,
        7
      ],
      "mod_code": [
        "for ( int i = temp2 ; i >= 1 ; i -- ) { sum is ( sum + 1 ) ; }",
        "temp1 >> temp1 ;"
      ],
      "err_line": 19,
      "err_msg": "expected ‘;’ before ‘is’"
    }
  ]
}