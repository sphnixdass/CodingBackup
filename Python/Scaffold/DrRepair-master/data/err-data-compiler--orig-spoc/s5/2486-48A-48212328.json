{
  "meta": {
    "index": 2486,
    "hitid": "3VDI8GSXAFNK4YF20AHU5ZG0AGFG84",
    "workerid": "AIWEXPJAU66D9",
    "probid": "48A",
    "subid": "48212328"
  },
  "lines": [
    {
      "line": 0,
      "text": "winner = array of string with values \" F \" , \" M \" , \" S \" , \" ? \"",
      "code": "string winner [ ] = { \" F \" , \" M \" , \" S \" , \" ? \" } ;",
      "indent": 0
    },
    {
      "line": 1,
      "text": "boolean method getwin with string reference arguments a and b",
      "code": "bool getwin ( string & a , string & b )",
      "indent": 0
    },
    {
      "line": 2,
      "text": "if a = \" rock \" and b = \" scissors \"",
      "code": "if ( a == \" rock \" && b == \" scissors \" )",
      "indent": 1
    },
    {
      "line": 3,
      "text": "return true",
      "code": "return true ;",
      "indent": 2
    },
    {
      "line": 4,
      "text": "else if a = \" scissors \" and b = \" paper \"",
      "code": "else if ( a == \" scissors \" && b == \" paper \" )",
      "indent": 1
    },
    {
      "line": 5,
      "text": "return true",
      "code": "return true ;",
      "indent": 2
    },
    {
      "line": 6,
      "text": "else if a = \" paper \" and b = \" rock \"",
      "code": "else if ( a == \" paper \" && b == \" rock \" )",
      "indent": 1
    },
    {
      "line": 7,
      "text": "return true",
      "code": "return true ;",
      "indent": 2
    },
    {
      "line": 8,
      "text": "return false",
      "code": "return false ;",
      "indent": 1
    },
    {
      "line": 9,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    },
    {
      "line": 10,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 11,
      "text": "declare strings called a , b and c",
      "code": "string a , b , c ;",
      "indent": 1
    },
    {
      "line": 12,
      "text": "read a , b and c",
      "code": "cin >> a >> b >> c ;",
      "indent": 1
    },
    {
      "line": 13,
      "text": "if getwin ( a , b ) and getwin ( a , c ) are both true",
      "code": "if ( getwin ( a , b ) && getwin ( a , c ) )",
      "indent": 1
    },
    {
      "line": 14,
      "text": "print winner [ 0 ] and \" \\ n \"",
      "code": "cout << winner [ 0 ] << \" \\n \" ;",
      "indent": 2
    },
    {
      "line": 15,
      "text": "else if getwin ( b , a ) and getwin ( b , c ) are both true",
      "code": "else if ( getwin ( b , a ) && getwin ( b , c ) )",
      "indent": 1
    },
    {
      "line": 16,
      "text": "print winner [ 1 ] and \" \\ n \"",
      "code": "cout << winner [ 1 ] << \" \\n \" ;",
      "indent": 2
    },
    {
      "line": 17,
      "text": "else if getwin ( c , a ) and getwin ( c , b ) are both true",
      "code": "else if ( getwin ( c , a ) && getwin ( c , b ) )",
      "indent": 1
    },
    {
      "line": 18,
      "text": "print winner [ 2 ] and \" \\ n \"",
      "code": "cout << winner [ 2 ] << \" \\n \" ;",
      "indent": 2
    },
    {
      "line": 19,
      "text": "else",
      "code": "else",
      "indent": 1
    },
    {
      "line": 20,
      "text": "print winner [ 3 ] and \" \\ n \"",
      "code": "cout << winner [ 3 ] << \" \\n \" ;",
      "indent": 2
    },
    {
      "line": 21,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        0
      ],
      "mod_code": [
        "string winner [ ] = \" F \" , \" M \" , \" S \" , \" ? \" } ;"
      ],
      "err_line": 0,
      "err_msg": "expected unqualified-id before string constant"
    },
    {
      "mod_line": [
        11
      ],
      "mod_code": [
        "string a , b , n ;"
      ],
      "err_line": 12,
      "err_msg": "‘c’ was not declared in this scope"
    },
    {
      "mod_line": [
        12
      ],
      "mod_code": [
        "cin >> a >> b >> n ;"
      ],
      "err_line": 12,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        11,
        14
      ],
      "mod_code": [
        "string a , b , n ;",
        "cout << winner [ 0 ] << \" \\0 \" ;"
      ],
      "err_line": 12,
      "err_msg": "‘c’ was not declared in this scope"
    },
    {
      "mod_line": [
        11,
        14,
        13
      ],
      "mod_code": [
        "string a , b , n ;",
        "cout << winner [ 0 ] << \" \\0 \" ;",
        "if ( getwin ( a , b ) , getwin ( a , c ) )"
      ],
      "err_line": 12,
      "err_msg": "‘c’ was not declared in this scope"
    },
    {
      "mod_line": [
        11,
        14,
        13,
        12
      ],
      "mod_code": [
        "string a , b , n ;",
        "cout << winner [ 0 ] << \" \\0 \" ;",
        "if ( getwin ( a , b ) , getwin ( a , c ) )",
        "cin >> a >> b >> n ;"
      ],
      "err_line": 13,
      "err_msg": "‘c’ was not declared in this scope"
    },
    {
      "mod_line": [
        11,
        14,
        13,
        15
      ],
      "mod_code": [
        "string a , b , n ;",
        "cout << winner [ 0 ] << \" \\0 \" ;",
        "if ( getwin ( a , b ) , getwin ( a , c ) )",
        "else if ( getwin ( b , a ) , getwin ( b , c ) )"
      ],
      "err_line": 12,
      "err_msg": "‘c’ was not declared in this scope"
    },
    {
      "mod_line": [
        11,
        14,
        13,
        8
      ],
      "mod_code": [
        "string a , b , n ;",
        "cout << winner [ 0 ] << \" \\0 \" ;",
        "if ( getwin ( a , b ) , getwin ( a , c ) )",
        "return 1 ;"
      ],
      "err_line": 12,
      "err_msg": "‘c’ was not declared in this scope"
    },
    {
      "mod_line": [
        11,
        14,
        12
      ],
      "mod_code": [
        "string a , b , n ;",
        "cout << winner [ 0 ] << \" \\0 \" ;",
        "cin >> a >> b >> n ;"
      ],
      "err_line": 13,
      "err_msg": "‘c’ was not declared in this scope"
    },
    {
      "mod_line": [
        11,
        14,
        12,
        15
      ],
      "mod_code": [
        "string a , b , n ;",
        "cout << winner [ 0 ] << \" \\0 \" ;",
        "cin >> a >> b >> n ;",
        "else if ( getwin ( b , a ) , getwin ( b , c ) )"
      ],
      "err_line": 13,
      "err_msg": "‘c’ was not declared in this scope"
    },
    {
      "mod_line": [
        11,
        14,
        12,
        8
      ],
      "mod_code": [
        "string a , b , n ;",
        "cout << winner [ 0 ] << \" \\0 \" ;",
        "cin >> a >> b >> n ;",
        "return 1 ;"
      ],
      "err_line": 13,
      "err_msg": "‘c’ was not declared in this scope"
    },
    {
      "mod_line": [
        11,
        14,
        15
      ],
      "mod_code": [
        "string a , b , n ;",
        "cout << winner [ 0 ] << \" \\0 \" ;",
        "else if ( getwin ( b , a ) , getwin ( b , c ) )"
      ],
      "err_line": 12,
      "err_msg": "‘c’ was not declared in this scope"
    },
    {
      "mod_line": [
        11,
        14,
        15,
        8
      ],
      "mod_code": [
        "string a , b , n ;",
        "cout << winner [ 0 ] << \" \\0 \" ;",
        "else if ( getwin ( b , a ) , getwin ( b , c ) )",
        "return 1 ;"
      ],
      "err_line": 12,
      "err_msg": "‘c’ was not declared in this scope"
    },
    {
      "mod_line": [
        11,
        14,
        8
      ],
      "mod_code": [
        "string a , b , n ;",
        "cout << winner [ 0 ] << \" \\0 \" ;",
        "return 1 ;"
      ],
      "err_line": 12,
      "err_msg": "‘c’ was not declared in this scope"
    },
    {
      "mod_line": [
        11,
        13
      ],
      "mod_code": [
        "string a , b , n ;",
        "if ( getwin ( a , b ) , getwin ( a , c ) )"
      ],
      "err_line": 12,
      "err_msg": "‘c’ was not declared in this scope"
    },
    {
      "mod_line": [
        11,
        13,
        12
      ],
      "mod_code": [
        "string a , b , n ;",
        "if ( getwin ( a , b ) , getwin ( a , c ) )",
        "cin >> a >> b >> n ;"
      ],
      "err_line": 13,
      "err_msg": "‘c’ was not declared in this scope"
    },
    {
      "mod_line": [
        11,
        13,
        12,
        15
      ],
      "mod_code": [
        "string a , b , n ;",
        "if ( getwin ( a , b ) , getwin ( a , c ) )",
        "cin >> a >> b >> n ;",
        "else if ( getwin ( b , a ) , getwin ( b , c ) )"
      ],
      "err_line": 13,
      "err_msg": "‘c’ was not declared in this scope"
    },
    {
      "mod_line": [
        11,
        13,
        12,
        8
      ],
      "mod_code": [
        "string a , b , n ;",
        "if ( getwin ( a , b ) , getwin ( a , c ) )",
        "cin >> a >> b >> n ;",
        "return 1 ;"
      ],
      "err_line": 13,
      "err_msg": "‘c’ was not declared in this scope"
    },
    {
      "mod_line": [
        11,
        13,
        15
      ],
      "mod_code": [
        "string a , b , n ;",
        "if ( getwin ( a , b ) , getwin ( a , c ) )",
        "else if ( getwin ( b , a ) , getwin ( b , c ) )"
      ],
      "err_line": 12,
      "err_msg": "‘c’ was not declared in this scope"
    },
    {
      "mod_line": [
        11,
        13,
        15,
        8
      ],
      "mod_code": [
        "string a , b , n ;",
        "if ( getwin ( a , b ) , getwin ( a , c ) )",
        "else if ( getwin ( b , a ) , getwin ( b , c ) )",
        "return 1 ;"
      ],
      "err_line": 12,
      "err_msg": "‘c’ was not declared in this scope"
    },
    {
      "mod_line": [
        11,
        13,
        8
      ],
      "mod_code": [
        "string a , b , n ;",
        "if ( getwin ( a , b ) , getwin ( a , c ) )",
        "return 1 ;"
      ],
      "err_line": 12,
      "err_msg": "‘c’ was not declared in this scope"
    },
    {
      "mod_line": [
        11,
        12
      ],
      "mod_code": [
        "string a , b , n ;",
        "cin >> a >> b >> n ;"
      ],
      "err_line": 13,
      "err_msg": "‘c’ was not declared in this scope"
    },
    {
      "mod_line": [
        11,
        12,
        15
      ],
      "mod_code": [
        "string a , b , n ;",
        "cin >> a >> b >> n ;",
        "else if ( getwin ( b , a ) , getwin ( b , c ) )"
      ],
      "err_line": 13,
      "err_msg": "‘c’ was not declared in this scope"
    },
    {
      "mod_line": [
        11,
        12,
        15,
        8
      ],
      "mod_code": [
        "string a , b , n ;",
        "cin >> a >> b >> n ;",
        "else if ( getwin ( b , a ) , getwin ( b , c ) )",
        "return 1 ;"
      ],
      "err_line": 13,
      "err_msg": "‘c’ was not declared in this scope"
    },
    {
      "mod_line": [
        11,
        12,
        8
      ],
      "mod_code": [
        "string a , b , n ;",
        "cin >> a >> b >> n ;",
        "return 1 ;"
      ],
      "err_line": 13,
      "err_msg": "‘c’ was not declared in this scope"
    },
    {
      "mod_line": [
        11,
        15
      ],
      "mod_code": [
        "string a , b , n ;",
        "else if ( getwin ( b , a ) , getwin ( b , c ) )"
      ],
      "err_line": 12,
      "err_msg": "‘c’ was not declared in this scope"
    },
    {
      "mod_line": [
        11,
        15,
        8
      ],
      "mod_code": [
        "string a , b , n ;",
        "else if ( getwin ( b , a ) , getwin ( b , c ) )",
        "return 1 ;"
      ],
      "err_line": 12,
      "err_msg": "‘c’ was not declared in this scope"
    },
    {
      "mod_line": [
        11,
        8
      ],
      "mod_code": [
        "string a , b , n ;",
        "return 1 ;"
      ],
      "err_line": 12,
      "err_msg": "‘c’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        13,
        12
      ],
      "mod_code": [
        "cout << winner [ 0 ] << \" \\0 \" ;",
        "if ( getwin ( a , b ) , getwin ( a , c ) )",
        "cin >> a >> b >> n ;"
      ],
      "err_line": 12,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        13,
        12,
        15
      ],
      "mod_code": [
        "cout << winner [ 0 ] << \" \\0 \" ;",
        "if ( getwin ( a , b ) , getwin ( a , c ) )",
        "cin >> a >> b >> n ;",
        "else if ( getwin ( b , a ) , getwin ( b , c ) )"
      ],
      "err_line": 12,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        13,
        12,
        8
      ],
      "mod_code": [
        "cout << winner [ 0 ] << \" \\0 \" ;",
        "if ( getwin ( a , b ) , getwin ( a , c ) )",
        "cin >> a >> b >> n ;",
        "return 1 ;"
      ],
      "err_line": 12,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        12
      ],
      "mod_code": [
        "cout << winner [ 0 ] << \" \\0 \" ;",
        "cin >> a >> b >> n ;"
      ],
      "err_line": 12,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        12,
        15
      ],
      "mod_code": [
        "cout << winner [ 0 ] << \" \\0 \" ;",
        "cin >> a >> b >> n ;",
        "else if ( getwin ( b , a ) , getwin ( b , c ) )"
      ],
      "err_line": 12,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        12,
        15,
        8
      ],
      "mod_code": [
        "cout << winner [ 0 ] << \" \\0 \" ;",
        "cin >> a >> b >> n ;",
        "else if ( getwin ( b , a ) , getwin ( b , c ) )",
        "return 1 ;"
      ],
      "err_line": 12,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        12,
        8
      ],
      "mod_code": [
        "cout << winner [ 0 ] << \" \\0 \" ;",
        "cin >> a >> b >> n ;",
        "return 1 ;"
      ],
      "err_line": 12,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        12
      ],
      "mod_code": [
        "if ( getwin ( a , b ) , getwin ( a , c ) )",
        "cin >> a >> b >> n ;"
      ],
      "err_line": 12,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        12,
        15
      ],
      "mod_code": [
        "if ( getwin ( a , b ) , getwin ( a , c ) )",
        "cin >> a >> b >> n ;",
        "else if ( getwin ( b , a ) , getwin ( b , c ) )"
      ],
      "err_line": 12,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        12,
        15,
        8
      ],
      "mod_code": [
        "if ( getwin ( a , b ) , getwin ( a , c ) )",
        "cin >> a >> b >> n ;",
        "else if ( getwin ( b , a ) , getwin ( b , c ) )",
        "return 1 ;"
      ],
      "err_line": 12,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        12,
        8
      ],
      "mod_code": [
        "if ( getwin ( a , b ) , getwin ( a , c ) )",
        "cin >> a >> b >> n ;",
        "return 1 ;"
      ],
      "err_line": 12,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        12,
        15
      ],
      "mod_code": [
        "cin >> a >> b >> n ;",
        "else if ( getwin ( b , a ) , getwin ( b , c ) )"
      ],
      "err_line": 12,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        12,
        15,
        8
      ],
      "mod_code": [
        "cin >> a >> b >> n ;",
        "else if ( getwin ( b , a ) , getwin ( b , c ) )",
        "return 1 ;"
      ],
      "err_line": 12,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        12,
        8
      ],
      "mod_code": [
        "cin >> a >> b >> n ;",
        "return 1 ;"
      ],
      "err_line": 12,
      "err_msg": "‘n’ was not declared in this scope"
    }
  ]
}