{
  "meta": {
    "index": 2541,
    "hitid": "3IKMEYR0LWPEK59WAKT8T0VQWZMK2V",
    "workerid": "AIWEXPJAU66D9",
    "probid": "779A",
    "subid": "45307248"
  },
  "lines": [
    {
      "line": 0,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 1,
      "text": "declare int variables n and ans",
      "code": "int n , ans ;",
      "indent": 1
    },
    {
      "line": 2,
      "text": "read n from the input",
      "code": "cin >> n ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "define integer arrays arr1 and arr2 with size n",
      "code": "int arr1 [ n ] , arr2 [ n ] ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "cnt is a new array of integers with 6 elements",
      "code": "int cnt [ 6 ] ;",
      "indent": 1
    },
    {
      "line": 5,
      "text": "set first sizeofcnt bytes at the pointer cnt to 0",
      "code": "memset ( cnt , 0 , sizeof cnt ) ;",
      "indent": 1
    },
    {
      "line": 6,
      "text": "start for loop from i = 0 to n exclusive",
      "code": "for ( int i = 0 ; i < n ; i ++ )",
      "indent": 1
    },
    {
      "line": 7,
      "text": "read input to arr1 [ i ]",
      "code": "cin >> arr1 [ i ] ;",
      "indent": 2
    },
    {
      "line": 8,
      "text": "increment cnt [ arr1 [ i ] ]",
      "code": "cnt [ arr1 [ i ] ] ++ ;",
      "indent": 2
    },
    {
      "line": 9,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 10,
      "text": "for i = 0 to n exclusive incrementing i",
      "code": "for ( int i = 0 ; i < n ; i ++ )",
      "indent": 1
    },
    {
      "line": 11,
      "text": "read input to arr2 [ i ]",
      "code": "cin >> arr2 [ i ] ;",
      "indent": 2
    },
    {
      "line": 12,
      "text": "decrease cnt [ arr2 [ i ] ] by one",
      "code": "cnt [ arr2 [ i ] ] -- ;",
      "indent": 2
    },
    {
      "line": 13,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 14,
      "text": "sum is a new integer variable = 0",
      "code": "int sum = 0 ;",
      "indent": 1
    },
    {
      "line": 15,
      "text": "in a for loop , change i from 1 to 5 inclusive",
      "code": "for ( int i = 1 ; i <= 5 ; i ++ )",
      "indent": 1
    },
    {
      "line": 16,
      "text": "if cnt [ i ] is greater than 0 , add cnt [ i ] to sum",
      "code": "if ( cnt [ i ] > 0 ) { sum += cnt [ i ] ; }",
      "indent": 2
    },
    {
      "line": 17,
      "text": "if cnt [ i ] is odd",
      "code": "if ( cnt [ i ] % 2 != 0 )",
      "indent": 2
    },
    {
      "line": 18,
      "text": "change ans to - 1",
      "code": "ans = - 1 ;",
      "indent": 3
    },
    {
      "line": 19,
      "text": "print ans to the standard output",
      "code": "cout << ans << endl ;",
      "indent": 3
    },
    {
      "line": 20,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 3
    },
    {
      "line": 21,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 22,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 23,
      "text": "print sum / 2",
      "code": "cout << sum / 2 << endl ;",
      "indent": 1
    },
    {
      "line": 24,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 25,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        5
      ],
      "mod_code": [
        "memset ( cnt , 0 , sizeofcnt ) ;"
      ],
      "err_line": 5,
      "err_msg": "‘sizeofcnt’ was not declared in this scope"
    },
    {
      "mod_line": [
        2
      ],
      "mod_code": [
        "while ( cin >> n )"
      ],
      "err_line": 7,
      "err_msg": "‘arr1’ was not declared in this scope"
    },
    {
      "mod_line": [
        3
      ],
      "mod_code": [
        "int arr1 [ n n ] , arr2 [ n ] ;"
      ],
      "err_line": 3,
      "err_msg": "expected ‘]’ before ‘n’"
    },
    {
      "mod_line": [
        6
      ],
      "mod_code": [
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 6,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        7
      ],
      "mod_code": [
        "arr1 >> arr1 [ i ] ;"
      ],
      "err_line": 7,
      "err_msg": "invalid operands of types ‘int [n]’ and ‘int’ to binary ‘operator>>’"
    },
    {
      "mod_line": [
        10
      ],
      "mod_code": [
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 10,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        11
      ],
      "mod_code": [
        "arr2 >> arr2 [ i ] ;"
      ],
      "err_line": 11,
      "err_msg": "invalid operands of types ‘int [n]’ and ‘int’ to binary ‘operator>>’"
    },
    {
      "mod_line": [
        12
      ],
      "mod_code": [
        "cnt [ arr2 [ i ] ] -= one ;"
      ],
      "err_line": 12,
      "err_msg": "‘one’ was not declared in this scope"
    },
    {
      "mod_line": [
        15
      ],
      "mod_code": [
        "for ( i = 1 ; i <= 5 ; i ++ )"
      ],
      "err_line": 15,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        5,
        3
      ],
      "mod_code": [
        "memset ( cnt , 0 , sizeofcnt ) ;",
        "int arr1 [ n n ] , arr2 [ n ] ;"
      ],
      "err_line": 3,
      "err_msg": "expected ‘]’ before ‘n’"
    },
    {
      "mod_line": [
        5,
        3,
        15
      ],
      "mod_code": [
        "memset ( cnt , 0 , sizeofcnt ) ;",
        "int arr1 [ n n ] , arr2 [ n ] ;",
        "for ( i = 1 ; i <= 5 ; i ++ )"
      ],
      "err_line": 3,
      "err_msg": "expected ‘]’ before ‘n’"
    },
    {
      "mod_line": [
        5,
        3,
        15,
        11
      ],
      "mod_code": [
        "memset ( cnt , 0 , sizeofcnt ) ;",
        "int arr1 [ n n ] , arr2 [ n ] ;",
        "for ( i = 1 ; i <= 5 ; i ++ )",
        "arr2 >> arr2 [ i ] ;"
      ],
      "err_line": 3,
      "err_msg": "expected ‘]’ before ‘n’"
    },
    {
      "mod_line": [
        5,
        3,
        15,
        7
      ],
      "mod_code": [
        "memset ( cnt , 0 , sizeofcnt ) ;",
        "int arr1 [ n n ] , arr2 [ n ] ;",
        "for ( i = 1 ; i <= 5 ; i ++ )",
        "arr1 >> arr1 [ i ] ;"
      ],
      "err_line": 3,
      "err_msg": "expected ‘]’ before ‘n’"
    },
    {
      "mod_line": [
        5,
        3,
        15,
        6
      ],
      "mod_code": [
        "memset ( cnt , 0 , sizeofcnt ) ;",
        "int arr1 [ n n ] , arr2 [ n ] ;",
        "for ( i = 1 ; i <= 5 ; i ++ )",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 3,
      "err_msg": "expected ‘]’ before ‘n’"
    },
    {
      "mod_line": [
        5,
        3,
        11
      ],
      "mod_code": [
        "memset ( cnt , 0 , sizeofcnt ) ;",
        "int arr1 [ n n ] , arr2 [ n ] ;",
        "arr2 >> arr2 [ i ] ;"
      ],
      "err_line": 3,
      "err_msg": "expected ‘]’ before ‘n’"
    },
    {
      "mod_line": [
        5,
        3,
        11,
        7
      ],
      "mod_code": [
        "memset ( cnt , 0 , sizeofcnt ) ;",
        "int arr1 [ n n ] , arr2 [ n ] ;",
        "arr2 >> arr2 [ i ] ;",
        "arr1 >> arr1 [ i ] ;"
      ],
      "err_line": 3,
      "err_msg": "expected ‘]’ before ‘n’"
    },
    {
      "mod_line": [
        5,
        3,
        11,
        6
      ],
      "mod_code": [
        "memset ( cnt , 0 , sizeofcnt ) ;",
        "int arr1 [ n n ] , arr2 [ n ] ;",
        "arr2 >> arr2 [ i ] ;",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 3,
      "err_msg": "expected ‘]’ before ‘n’"
    },
    {
      "mod_line": [
        5,
        3,
        7
      ],
      "mod_code": [
        "memset ( cnt , 0 , sizeofcnt ) ;",
        "int arr1 [ n n ] , arr2 [ n ] ;",
        "arr1 >> arr1 [ i ] ;"
      ],
      "err_line": 3,
      "err_msg": "expected ‘]’ before ‘n’"
    },
    {
      "mod_line": [
        5,
        3,
        7,
        6
      ],
      "mod_code": [
        "memset ( cnt , 0 , sizeofcnt ) ;",
        "int arr1 [ n n ] , arr2 [ n ] ;",
        "arr1 >> arr1 [ i ] ;",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 3,
      "err_msg": "expected ‘]’ before ‘n’"
    },
    {
      "mod_line": [
        5,
        3,
        6
      ],
      "mod_code": [
        "memset ( cnt , 0 , sizeofcnt ) ;",
        "int arr1 [ n n ] , arr2 [ n ] ;",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 3,
      "err_msg": "expected ‘]’ before ‘n’"
    },
    {
      "mod_line": [
        5,
        15
      ],
      "mod_code": [
        "memset ( cnt , 0 , sizeofcnt ) ;",
        "for ( i = 1 ; i <= 5 ; i ++ )"
      ],
      "err_line": 5,
      "err_msg": "‘sizeofcnt’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        15,
        11
      ],
      "mod_code": [
        "memset ( cnt , 0 , sizeofcnt ) ;",
        "for ( i = 1 ; i <= 5 ; i ++ )",
        "arr2 >> arr2 [ i ] ;"
      ],
      "err_line": 5,
      "err_msg": "‘sizeofcnt’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        15,
        11,
        7
      ],
      "mod_code": [
        "memset ( cnt , 0 , sizeofcnt ) ;",
        "for ( i = 1 ; i <= 5 ; i ++ )",
        "arr2 >> arr2 [ i ] ;",
        "arr1 >> arr1 [ i ] ;"
      ],
      "err_line": 5,
      "err_msg": "‘sizeofcnt’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        15,
        11,
        6
      ],
      "mod_code": [
        "memset ( cnt , 0 , sizeofcnt ) ;",
        "for ( i = 1 ; i <= 5 ; i ++ )",
        "arr2 >> arr2 [ i ] ;",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 5,
      "err_msg": "‘sizeofcnt’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        15,
        7
      ],
      "mod_code": [
        "memset ( cnt , 0 , sizeofcnt ) ;",
        "for ( i = 1 ; i <= 5 ; i ++ )",
        "arr1 >> arr1 [ i ] ;"
      ],
      "err_line": 5,
      "err_msg": "‘sizeofcnt’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        15,
        7,
        6
      ],
      "mod_code": [
        "memset ( cnt , 0 , sizeofcnt ) ;",
        "for ( i = 1 ; i <= 5 ; i ++ )",
        "arr1 >> arr1 [ i ] ;",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 5,
      "err_msg": "‘sizeofcnt’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        15,
        6
      ],
      "mod_code": [
        "memset ( cnt , 0 , sizeofcnt ) ;",
        "for ( i = 1 ; i <= 5 ; i ++ )",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 5,
      "err_msg": "‘sizeofcnt’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        11
      ],
      "mod_code": [
        "memset ( cnt , 0 , sizeofcnt ) ;",
        "arr2 >> arr2 [ i ] ;"
      ],
      "err_line": 5,
      "err_msg": "‘sizeofcnt’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        11,
        7
      ],
      "mod_code": [
        "memset ( cnt , 0 , sizeofcnt ) ;",
        "arr2 >> arr2 [ i ] ;",
        "arr1 >> arr1 [ i ] ;"
      ],
      "err_line": 5,
      "err_msg": "‘sizeofcnt’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        11,
        7,
        6
      ],
      "mod_code": [
        "memset ( cnt , 0 , sizeofcnt ) ;",
        "arr2 >> arr2 [ i ] ;",
        "arr1 >> arr1 [ i ] ;",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 5,
      "err_msg": "‘sizeofcnt’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        11,
        6
      ],
      "mod_code": [
        "memset ( cnt , 0 , sizeofcnt ) ;",
        "arr2 >> arr2 [ i ] ;",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 5,
      "err_msg": "‘sizeofcnt’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        7
      ],
      "mod_code": [
        "memset ( cnt , 0 , sizeofcnt ) ;",
        "arr1 >> arr1 [ i ] ;"
      ],
      "err_line": 5,
      "err_msg": "‘sizeofcnt’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        7,
        6
      ],
      "mod_code": [
        "memset ( cnt , 0 , sizeofcnt ) ;",
        "arr1 >> arr1 [ i ] ;",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 5,
      "err_msg": "‘sizeofcnt’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        6
      ],
      "mod_code": [
        "memset ( cnt , 0 , sizeofcnt ) ;",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 5,
      "err_msg": "‘sizeofcnt’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        15
      ],
      "mod_code": [
        "int arr1 [ n n ] , arr2 [ n ] ;",
        "for ( i = 1 ; i <= 5 ; i ++ )"
      ],
      "err_line": 3,
      "err_msg": "expected ‘]’ before ‘n’"
    },
    {
      "mod_line": [
        3,
        15,
        11
      ],
      "mod_code": [
        "int arr1 [ n n ] , arr2 [ n ] ;",
        "for ( i = 1 ; i <= 5 ; i ++ )",
        "arr2 >> arr2 [ i ] ;"
      ],
      "err_line": 3,
      "err_msg": "expected ‘]’ before ‘n’"
    },
    {
      "mod_line": [
        3,
        15,
        11,
        7
      ],
      "mod_code": [
        "int arr1 [ n n ] , arr2 [ n ] ;",
        "for ( i = 1 ; i <= 5 ; i ++ )",
        "arr2 >> arr2 [ i ] ;",
        "arr1 >> arr1 [ i ] ;"
      ],
      "err_line": 3,
      "err_msg": "expected ‘]’ before ‘n’"
    },
    {
      "mod_line": [
        3,
        15,
        11,
        6
      ],
      "mod_code": [
        "int arr1 [ n n ] , arr2 [ n ] ;",
        "for ( i = 1 ; i <= 5 ; i ++ )",
        "arr2 >> arr2 [ i ] ;",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 3,
      "err_msg": "expected ‘]’ before ‘n’"
    },
    {
      "mod_line": [
        3,
        15,
        7
      ],
      "mod_code": [
        "int arr1 [ n n ] , arr2 [ n ] ;",
        "for ( i = 1 ; i <= 5 ; i ++ )",
        "arr1 >> arr1 [ i ] ;"
      ],
      "err_line": 3,
      "err_msg": "expected ‘]’ before ‘n’"
    },
    {
      "mod_line": [
        3,
        15,
        7,
        6
      ],
      "mod_code": [
        "int arr1 [ n n ] , arr2 [ n ] ;",
        "for ( i = 1 ; i <= 5 ; i ++ )",
        "arr1 >> arr1 [ i ] ;",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 3,
      "err_msg": "expected ‘]’ before ‘n’"
    },
    {
      "mod_line": [
        3,
        15,
        6
      ],
      "mod_code": [
        "int arr1 [ n n ] , arr2 [ n ] ;",
        "for ( i = 1 ; i <= 5 ; i ++ )",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 3,
      "err_msg": "expected ‘]’ before ‘n’"
    },
    {
      "mod_line": [
        3,
        11
      ],
      "mod_code": [
        "int arr1 [ n n ] , arr2 [ n ] ;",
        "arr2 >> arr2 [ i ] ;"
      ],
      "err_line": 3,
      "err_msg": "expected ‘]’ before ‘n’"
    },
    {
      "mod_line": [
        3,
        11,
        7
      ],
      "mod_code": [
        "int arr1 [ n n ] , arr2 [ n ] ;",
        "arr2 >> arr2 [ i ] ;",
        "arr1 >> arr1 [ i ] ;"
      ],
      "err_line": 3,
      "err_msg": "expected ‘]’ before ‘n’"
    },
    {
      "mod_line": [
        3,
        11,
        7,
        6
      ],
      "mod_code": [
        "int arr1 [ n n ] , arr2 [ n ] ;",
        "arr2 >> arr2 [ i ] ;",
        "arr1 >> arr1 [ i ] ;",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 3,
      "err_msg": "expected ‘]’ before ‘n’"
    },
    {
      "mod_line": [
        3,
        11,
        6
      ],
      "mod_code": [
        "int arr1 [ n n ] , arr2 [ n ] ;",
        "arr2 >> arr2 [ i ] ;",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 3,
      "err_msg": "expected ‘]’ before ‘n’"
    },
    {
      "mod_line": [
        3,
        7
      ],
      "mod_code": [
        "int arr1 [ n n ] , arr2 [ n ] ;",
        "arr1 >> arr1 [ i ] ;"
      ],
      "err_line": 3,
      "err_msg": "expected ‘]’ before ‘n’"
    },
    {
      "mod_line": [
        3,
        7,
        6
      ],
      "mod_code": [
        "int arr1 [ n n ] , arr2 [ n ] ;",
        "arr1 >> arr1 [ i ] ;",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 3,
      "err_msg": "expected ‘]’ before ‘n’"
    },
    {
      "mod_line": [
        3,
        6
      ],
      "mod_code": [
        "int arr1 [ n n ] , arr2 [ n ] ;",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 3,
      "err_msg": "expected ‘]’ before ‘n’"
    },
    {
      "mod_line": [
        15,
        11
      ],
      "mod_code": [
        "for ( i = 1 ; i <= 5 ; i ++ )",
        "arr2 >> arr2 [ i ] ;"
      ],
      "err_line": 11,
      "err_msg": "invalid operands of types ‘int [n]’ and ‘int’ to binary ‘operator>>’"
    },
    {
      "mod_line": [
        15,
        11,
        7
      ],
      "mod_code": [
        "for ( i = 1 ; i <= 5 ; i ++ )",
        "arr2 >> arr2 [ i ] ;",
        "arr1 >> arr1 [ i ] ;"
      ],
      "err_line": 7,
      "err_msg": "invalid operands of types ‘int [n]’ and ‘int’ to binary ‘operator>>’"
    },
    {
      "mod_line": [
        15,
        11,
        7,
        6
      ],
      "mod_code": [
        "for ( i = 1 ; i <= 5 ; i ++ )",
        "arr2 >> arr2 [ i ] ;",
        "arr1 >> arr1 [ i ] ;",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 6,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        15,
        11,
        6
      ],
      "mod_code": [
        "for ( i = 1 ; i <= 5 ; i ++ )",
        "arr2 >> arr2 [ i ] ;",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 6,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        15,
        7
      ],
      "mod_code": [
        "for ( i = 1 ; i <= 5 ; i ++ )",
        "arr1 >> arr1 [ i ] ;"
      ],
      "err_line": 7,
      "err_msg": "invalid operands of types ‘int [n]’ and ‘int’ to binary ‘operator>>’"
    },
    {
      "mod_line": [
        15,
        7,
        6
      ],
      "mod_code": [
        "for ( i = 1 ; i <= 5 ; i ++ )",
        "arr1 >> arr1 [ i ] ;",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 6,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        15,
        6
      ],
      "mod_code": [
        "for ( i = 1 ; i <= 5 ; i ++ )",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 6,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        11,
        7
      ],
      "mod_code": [
        "arr2 >> arr2 [ i ] ;",
        "arr1 >> arr1 [ i ] ;"
      ],
      "err_line": 7,
      "err_msg": "invalid operands of types ‘int [n]’ and ‘int’ to binary ‘operator>>’"
    },
    {
      "mod_line": [
        11,
        7,
        6
      ],
      "mod_code": [
        "arr2 >> arr2 [ i ] ;",
        "arr1 >> arr1 [ i ] ;",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 6,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        11,
        6
      ],
      "mod_code": [
        "arr2 >> arr2 [ i ] ;",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 6,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        7,
        6
      ],
      "mod_code": [
        "arr1 >> arr1 [ i ] ;",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 6,
      "err_msg": "‘i’ was not declared in this scope"
    }
  ]
}