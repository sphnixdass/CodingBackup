{
  "meta": {
    "index": 2194,
    "hitid": "3DTJ4WT8BD914GKY35RJIGSSXBLZEU",
    "workerid": "A1AYVATMT88U1W",
    "probid": "540A",
    "subid": "47823652"
  },
  "lines": [
    {
      "line": 0,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 1,
      "text": "let s , a be strings",
      "code": "string s , a ;",
      "indent": 1
    },
    {
      "line": 2,
      "text": "let n , i , j , sum1 , sum2 , sum be integers with sum = 0",
      "code": "int n , i , j , sum1 , sum2 , sum = 0 ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "read n , s , a",
      "code": "cin >> n >> s >> a ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "for i = 0 to n exclusive",
      "code": "for ( i = 0 ; i < n ; i ++ )",
      "indent": 1
    },
    {
      "line": 5,
      "text": "sum1 is equal to absolute value of ( a [ i ] - s [ i ] )",
      "code": "sum1 = abs ( a [ i ] - s [ i ] ) ;",
      "indent": 2
    },
    {
      "line": 6,
      "text": "if s [ i ] is greater than a [ i ]",
      "code": "if ( s [ i ] > a [ i ] )",
      "indent": 2
    },
    {
      "line": 7,
      "text": "sum2 is equal to ( 9 - s [ i ] ) + ( a [ i ] + 1 )",
      "code": "sum2 = ( 9 - s [ i ] ) + ( a [ i ] + 1 ) ;",
      "indent": 3
    },
    {
      "line": 8,
      "text": "else do the following",
      "code": "else",
      "indent": 2
    },
    {
      "line": 9,
      "text": "sum2 is equal to ( 9 - a [ i ] ) + ( s [ i ] + 1 )",
      "code": "sum2 = ( 9 - a [ i ] ) + ( s [ i ] + 1 ) ;",
      "indent": 3
    },
    {
      "line": 10,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 11,
      "text": "if sum1 is less than sum2",
      "code": "if ( sum1 < sum2 )",
      "indent": 2
    },
    {
      "line": 12,
      "text": "increment sum by sum1",
      "code": "sum = sum + sum1 ;",
      "indent": 3
    },
    {
      "line": 13,
      "text": "else do the following",
      "code": "else",
      "indent": 2
    },
    {
      "line": 14,
      "text": "increment sum by sum2",
      "code": "sum = sum + sum2 ;",
      "indent": 3
    },
    {
      "line": 15,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 16,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 17,
      "text": "print sum and newline",
      "code": "cout << sum << endl ;",
      "indent": 1
    },
    {
      "line": 18,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 19,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        2
      ],
      "mod_code": [
        "int n , i , j , sum1 = 0 , sum2 = 0 ;"
      ],
      "err_line": 12,
      "err_msg": "‘sum’ was not declared in this scope"
    },
    {
      "mod_line": [
        1
      ],
      "mod_code": [
        "strings , a ;"
      ],
      "err_line": 1,
      "err_msg": "‘strings’ was not declared in this scope"
    },
    {
      "mod_line": [
        6
      ],
      "mod_code": [
        "if ( s [ i ] ] > a [ i ] )"
      ],
      "err_line": 6,
      "err_msg": "expected ‘)’ before ‘]’ token"
    },
    {
      "mod_line": [
        7
      ],
      "mod_code": [
        "sum2 = ( a - s [ i ] ) + ( a [ i ] + 1 ) ;"
      ],
      "err_line": 7,
      "err_msg": "no match for ‘operator-’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        9
      ],
      "mod_code": [
        "sum2 = ( s - a [ i ] ) + ( s [ i ] + 1 ) ;"
      ],
      "err_line": 9,
      "err_msg": "no match for ‘operator-’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        2,
        5
      ],
      "mod_code": [
        "int n , i , j , sum1 = 0 , sum2 = 0 ;",
        "sum1 *= abs ( a [ i ] - s [ i ] ) ;"
      ],
      "err_line": 12,
      "err_msg": "‘sum’ was not declared in this scope"
    },
    {
      "mod_line": [
        2,
        5,
        7
      ],
      "mod_code": [
        "int n , i , j , sum1 = 0 , sum2 = 0 ;",
        "sum1 *= abs ( a [ i ] - s [ i ] ) ;",
        "sum2 = ( a - s [ i ] ) + ( a [ i ] + 1 ) ;"
      ],
      "err_line": 7,
      "err_msg": "no match for ‘operator-’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        2,
        5,
        7,
        6
      ],
      "mod_code": [
        "int n , i , j , sum1 = 0 , sum2 = 0 ;",
        "sum1 *= abs ( a [ i ] - s [ i ] ) ;",
        "sum2 = ( a - s [ i ] ) + ( a [ i ] + 1 ) ;",
        "if ( s [ i ] ] > a [ i ] )"
      ],
      "err_line": 6,
      "err_msg": "expected ‘)’ before ‘]’ token"
    },
    {
      "mod_line": [
        2,
        5,
        7,
        13
      ],
      "mod_code": [
        "int n , i , j , sum1 = 0 , sum2 = 0 ;",
        "sum1 *= abs ( a [ i ] - s [ i ] ) ;",
        "sum2 = ( a - s [ i ] ) + ( a [ i ] + 1 ) ;",
        "while ( 1 )"
      ],
      "err_line": 7,
      "err_msg": "no match for ‘operator-’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        2,
        5,
        6
      ],
      "mod_code": [
        "int n , i , j , sum1 = 0 , sum2 = 0 ;",
        "sum1 *= abs ( a [ i ] - s [ i ] ) ;",
        "if ( s [ i ] ] > a [ i ] )"
      ],
      "err_line": 6,
      "err_msg": "expected ‘)’ before ‘]’ token"
    },
    {
      "mod_line": [
        2,
        5,
        6,
        13
      ],
      "mod_code": [
        "int n , i , j , sum1 = 0 , sum2 = 0 ;",
        "sum1 *= abs ( a [ i ] - s [ i ] ) ;",
        "if ( s [ i ] ] > a [ i ] )",
        "while ( 1 )"
      ],
      "err_line": 6,
      "err_msg": "expected ‘)’ before ‘]’ token"
    },
    {
      "mod_line": [
        2,
        5,
        13
      ],
      "mod_code": [
        "int n , i , j , sum1 = 0 , sum2 = 0 ;",
        "sum1 *= abs ( a [ i ] - s [ i ] ) ;",
        "while ( 1 )"
      ],
      "err_line": 12,
      "err_msg": "‘sum’ was not declared in this scope"
    },
    {
      "mod_line": [
        2,
        7
      ],
      "mod_code": [
        "int n , i , j , sum1 = 0 , sum2 = 0 ;",
        "sum2 = ( a - s [ i ] ) + ( a [ i ] + 1 ) ;"
      ],
      "err_line": 7,
      "err_msg": "no match for ‘operator-’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        2,
        7,
        6
      ],
      "mod_code": [
        "int n , i , j , sum1 = 0 , sum2 = 0 ;",
        "sum2 = ( a - s [ i ] ) + ( a [ i ] + 1 ) ;",
        "if ( s [ i ] ] > a [ i ] )"
      ],
      "err_line": 6,
      "err_msg": "expected ‘)’ before ‘]’ token"
    },
    {
      "mod_line": [
        2,
        7,
        6,
        13
      ],
      "mod_code": [
        "int n , i , j , sum1 = 0 , sum2 = 0 ;",
        "sum2 = ( a - s [ i ] ) + ( a [ i ] + 1 ) ;",
        "if ( s [ i ] ] > a [ i ] )",
        "while ( 1 )"
      ],
      "err_line": 6,
      "err_msg": "expected ‘)’ before ‘]’ token"
    },
    {
      "mod_line": [
        2,
        7,
        13
      ],
      "mod_code": [
        "int n , i , j , sum1 = 0 , sum2 = 0 ;",
        "sum2 = ( a - s [ i ] ) + ( a [ i ] + 1 ) ;",
        "while ( 1 )"
      ],
      "err_line": 7,
      "err_msg": "no match for ‘operator-’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        2,
        6
      ],
      "mod_code": [
        "int n , i , j , sum1 = 0 , sum2 = 0 ;",
        "if ( s [ i ] ] > a [ i ] )"
      ],
      "err_line": 6,
      "err_msg": "expected ‘)’ before ‘]’ token"
    },
    {
      "mod_line": [
        2,
        6,
        13
      ],
      "mod_code": [
        "int n , i , j , sum1 = 0 , sum2 = 0 ;",
        "if ( s [ i ] ] > a [ i ] )",
        "while ( 1 )"
      ],
      "err_line": 6,
      "err_msg": "expected ‘)’ before ‘]’ token"
    },
    {
      "mod_line": [
        2,
        13
      ],
      "mod_code": [
        "int n , i , j , sum1 = 0 , sum2 = 0 ;",
        "while ( 1 )"
      ],
      "err_line": 12,
      "err_msg": "‘sum’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        7
      ],
      "mod_code": [
        "sum1 *= abs ( a [ i ] - s [ i ] ) ;",
        "sum2 = ( a - s [ i ] ) + ( a [ i ] + 1 ) ;"
      ],
      "err_line": 7,
      "err_msg": "no match for ‘operator-’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        5,
        7,
        2
      ],
      "mod_code": [
        "sum1 *= abs ( a [ i ] - s [ i ] ) ;",
        "sum2 = ( a - s [ i ] ) + ( a [ i ] + 1 ) ;",
        "int n , i , j , sum1 , sum2 = 0 , sum ;"
      ],
      "err_line": 7,
      "err_msg": "no match for ‘operator-’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        5,
        7,
        2,
        6
      ],
      "mod_code": [
        "sum1 *= abs ( a [ i ] - s [ i ] ) ;",
        "sum2 = ( a - s [ i ] ) + ( a [ i ] + 1 ) ;",
        "int n , i , j , sum1 , sum2 = 0 , sum ;",
        "if ( s [ i ] ] > a [ i ] )"
      ],
      "err_line": 6,
      "err_msg": "expected ‘)’ before ‘]’ token"
    },
    {
      "mod_line": [
        5,
        7,
        2,
        13
      ],
      "mod_code": [
        "sum1 *= abs ( a [ i ] - s [ i ] ) ;",
        "sum2 = ( a - s [ i ] ) + ( a [ i ] + 1 ) ;",
        "int n , i , j , sum1 , sum2 = 0 , sum ;",
        "while ( 1 )"
      ],
      "err_line": 7,
      "err_msg": "no match for ‘operator-’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        5,
        7,
        6
      ],
      "mod_code": [
        "sum1 *= abs ( a [ i ] - s [ i ] ) ;",
        "sum2 = ( a - s [ i ] ) + ( a [ i ] + 1 ) ;",
        "if ( s [ i ] ] > a [ i ] )"
      ],
      "err_line": 6,
      "err_msg": "expected ‘)’ before ‘]’ token"
    },
    {
      "mod_line": [
        5,
        7,
        6,
        13
      ],
      "mod_code": [
        "sum1 *= abs ( a [ i ] - s [ i ] ) ;",
        "sum2 = ( a - s [ i ] ) + ( a [ i ] + 1 ) ;",
        "if ( s [ i ] ] > a [ i ] )",
        "while ( 1 )"
      ],
      "err_line": 6,
      "err_msg": "expected ‘)’ before ‘]’ token"
    },
    {
      "mod_line": [
        5,
        7,
        13
      ],
      "mod_code": [
        "sum1 *= abs ( a [ i ] - s [ i ] ) ;",
        "sum2 = ( a - s [ i ] ) + ( a [ i ] + 1 ) ;",
        "while ( 1 )"
      ],
      "err_line": 7,
      "err_msg": "no match for ‘operator-’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        5,
        2,
        6
      ],
      "mod_code": [
        "sum1 *= abs ( a [ i ] - s [ i ] ) ;",
        "int n , i , j , sum1 , sum2 = 0 , sum ;",
        "if ( s [ i ] ] > a [ i ] )"
      ],
      "err_line": 6,
      "err_msg": "expected ‘)’ before ‘]’ token"
    },
    {
      "mod_line": [
        5,
        2,
        6,
        13
      ],
      "mod_code": [
        "sum1 *= abs ( a [ i ] - s [ i ] ) ;",
        "int n , i , j , sum1 , sum2 = 0 , sum ;",
        "if ( s [ i ] ] > a [ i ] )",
        "while ( 1 )"
      ],
      "err_line": 6,
      "err_msg": "expected ‘)’ before ‘]’ token"
    },
    {
      "mod_line": [
        5,
        6
      ],
      "mod_code": [
        "sum1 *= abs ( a [ i ] - s [ i ] ) ;",
        "if ( s [ i ] ] > a [ i ] )"
      ],
      "err_line": 6,
      "err_msg": "expected ‘)’ before ‘]’ token"
    },
    {
      "mod_line": [
        5,
        6,
        13
      ],
      "mod_code": [
        "sum1 *= abs ( a [ i ] - s [ i ] ) ;",
        "if ( s [ i ] ] > a [ i ] )",
        "while ( 1 )"
      ],
      "err_line": 6,
      "err_msg": "expected ‘)’ before ‘]’ token"
    },
    {
      "mod_line": [
        7,
        2
      ],
      "mod_code": [
        "sum2 = ( a - s [ i ] ) + ( a [ i ] + 1 ) ;",
        "int n , i , j , sum1 , sum2 = 0 , sum ;"
      ],
      "err_line": 7,
      "err_msg": "no match for ‘operator-’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        7,
        2,
        6
      ],
      "mod_code": [
        "sum2 = ( a - s [ i ] ) + ( a [ i ] + 1 ) ;",
        "int n , i , j , sum1 , sum2 = 0 , sum ;",
        "if ( s [ i ] ] > a [ i ] )"
      ],
      "err_line": 6,
      "err_msg": "expected ‘)’ before ‘]’ token"
    },
    {
      "mod_line": [
        7,
        2,
        6,
        13
      ],
      "mod_code": [
        "sum2 = ( a - s [ i ] ) + ( a [ i ] + 1 ) ;",
        "int n , i , j , sum1 , sum2 = 0 , sum ;",
        "if ( s [ i ] ] > a [ i ] )",
        "while ( 1 )"
      ],
      "err_line": 6,
      "err_msg": "expected ‘)’ before ‘]’ token"
    },
    {
      "mod_line": [
        7,
        2,
        13
      ],
      "mod_code": [
        "sum2 = ( a - s [ i ] ) + ( a [ i ] + 1 ) ;",
        "int n , i , j , sum1 , sum2 = 0 , sum ;",
        "while ( 1 )"
      ],
      "err_line": 7,
      "err_msg": "no match for ‘operator-’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        7,
        6
      ],
      "mod_code": [
        "sum2 = ( a - s [ i ] ) + ( a [ i ] + 1 ) ;",
        "if ( s [ i ] ] > a [ i ] )"
      ],
      "err_line": 6,
      "err_msg": "expected ‘)’ before ‘]’ token"
    },
    {
      "mod_line": [
        7,
        6,
        13
      ],
      "mod_code": [
        "sum2 = ( a - s [ i ] ) + ( a [ i ] + 1 ) ;",
        "if ( s [ i ] ] > a [ i ] )",
        "while ( 1 )"
      ],
      "err_line": 6,
      "err_msg": "expected ‘)’ before ‘]’ token"
    },
    {
      "mod_line": [
        7,
        13
      ],
      "mod_code": [
        "sum2 = ( a - s [ i ] ) + ( a [ i ] + 1 ) ;",
        "while ( 1 )"
      ],
      "err_line": 7,
      "err_msg": "no match for ‘operator-’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        2,
        6
      ],
      "mod_code": [
        "int n , i , j , sum1 , sum2 = 0 , sum ;",
        "if ( s [ i ] ] > a [ i ] )"
      ],
      "err_line": 6,
      "err_msg": "expected ‘)’ before ‘]’ token"
    },
    {
      "mod_line": [
        2,
        6,
        13
      ],
      "mod_code": [
        "int n , i , j , sum1 , sum2 = 0 , sum ;",
        "if ( s [ i ] ] > a [ i ] )",
        "while ( 1 )"
      ],
      "err_line": 6,
      "err_msg": "expected ‘)’ before ‘]’ token"
    },
    {
      "mod_line": [
        6,
        13
      ],
      "mod_code": [
        "if ( s [ i ] ] > a [ i ] )",
        "while ( 1 )"
      ],
      "err_line": 6,
      "err_msg": "expected ‘)’ before ‘]’ token"
    }
  ]
}