{
  "meta": {
    "index": 1118,
    "hitid": "3W1K7D6QSBB3XD8ETEPTH8M7TCTZBA",
    "workerid": "AIWEXPJAU66D9",
    "probid": "41A",
    "subid": "49034371"
  },
  "lines": [
    {
      "line": 0,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 1,
      "text": "create strings s and k",
      "code": "string s , k ;",
      "indent": 1
    },
    {
      "line": 2,
      "text": "read s and k",
      "code": "cin >> s >> k ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "let l and p be integers with l = length of s and p = length of k",
      "code": "int l = s . size ( ) , p = k . size ( ) ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "if l ! = p",
      "code": "if ( l != p )",
      "indent": 1
    },
    {
      "line": 5,
      "text": "print \" NO \" and a new line",
      "code": "cout << \" NO \" << endl ;",
      "indent": 2
    },
    {
      "line": 6,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 2
    },
    {
      "line": 7,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 8,
      "text": "let j and cnt be integers with j = l - 1 and cnt = 0",
      "code": "int j = l - 1 , cnt = 0 ;",
      "indent": 1
    },
    {
      "line": 9,
      "text": "for i = 0 to l exclusive",
      "code": "for ( int i = 0 ; i < l ; i ++ )",
      "indent": 1
    },
    {
      "line": 10,
      "text": "if s [ i ] = k [ j ]",
      "code": "if ( s [ i ] == k [ j ] )",
      "indent": 2
    },
    {
      "line": 11,
      "text": "increase cnt",
      "code": "cnt ++ ;",
      "indent": 3
    },
    {
      "line": 12,
      "text": "decrease j",
      "code": "j -- ;",
      "indent": 3
    },
    {
      "line": 13,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 14,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 15,
      "text": "if cnt = l",
      "code": "if ( cnt == l )",
      "indent": 1
    },
    {
      "line": 16,
      "text": "print \" YES \" and a new line",
      "code": "cout << \" YES \" << endl ;",
      "indent": 2
    },
    {
      "line": 17,
      "text": "else",
      "code": "else",
      "indent": 1
    },
    {
      "line": 18,
      "text": "print \" NO \" and a new line",
      "code": "cout << \" NO \" << endl ;",
      "indent": 2
    },
    {
      "line": 19,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 20,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        1
      ],
      "mod_code": [
        "string s create k ;"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘create’"
    },
    {
      "mod_line": [
        2
      ],
      "mod_code": [
        "while ( cin >> s >> k )"
      ],
      "err_line": 4,
      "err_msg": "‘l’ was not declared in this scope"
    },
    {
      "mod_line": [
        8
      ],
      "mod_code": [
        "int j = l - 1 and cnt = 0 ;"
      ],
      "err_line": 8,
      "err_msg": "‘cnt’ was not declared in this scope"
    },
    {
      "mod_line": [
        9
      ],
      "mod_code": [
        "for ( i = 0 ; i < l ; i ++ )"
      ],
      "err_line": 9,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        15,
        1
      ],
      "mod_code": [
        "if ( cnt == ' l ' )",
        "string s create k ;"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘create’"
    },
    {
      "mod_line": [
        15,
        1,
        10
      ],
      "mod_code": [
        "if ( cnt == ' l ' )",
        "string s create k ;",
        "if ( s [ i ] == k [ j ] ) break ;"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘create’"
    },
    {
      "mod_line": [
        15,
        1,
        10,
        4
      ],
      "mod_code": [
        "if ( cnt == ' l ' )",
        "string s create k ;",
        "if ( s [ i ] == k [ j ] ) break ;",
        "if ( l = p )"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘create’"
    },
    {
      "mod_line": [
        15,
        1,
        10,
        16
      ],
      "mod_code": [
        "if ( cnt == ' l ' )",
        "string s create k ;",
        "if ( s [ i ] == k [ j ] ) break ;",
        "cout << \" YES\\n \" << endl ;"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘create’"
    },
    {
      "mod_line": [
        15,
        1,
        10,
        8
      ],
      "mod_code": [
        "if ( cnt == ' l ' )",
        "string s create k ;",
        "if ( s [ i ] == k [ j ] ) break ;",
        "int j = l - 1 and cnt = 0 ;"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘create’"
    },
    {
      "mod_line": [
        15,
        1,
        4
      ],
      "mod_code": [
        "if ( cnt == ' l ' )",
        "string s create k ;",
        "if ( l = p )"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘create’"
    },
    {
      "mod_line": [
        15,
        1,
        4,
        16
      ],
      "mod_code": [
        "if ( cnt == ' l ' )",
        "string s create k ;",
        "if ( l = p )",
        "cout << \" YES\\n \" << endl ;"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘create’"
    },
    {
      "mod_line": [
        15,
        1,
        4,
        8
      ],
      "mod_code": [
        "if ( cnt == ' l ' )",
        "string s create k ;",
        "if ( l = p )",
        "int j = l - 1 and cnt = 0 ;"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘create’"
    },
    {
      "mod_line": [
        15,
        1,
        16
      ],
      "mod_code": [
        "if ( cnt == ' l ' )",
        "string s create k ;",
        "cout << \" YES\\n \" << endl ;"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘create’"
    },
    {
      "mod_line": [
        15,
        1,
        16,
        8
      ],
      "mod_code": [
        "if ( cnt == ' l ' )",
        "string s create k ;",
        "cout << \" YES\\n \" << endl ;",
        "int j = l - 1 and cnt = 0 ;"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘create’"
    },
    {
      "mod_line": [
        15,
        1,
        8
      ],
      "mod_code": [
        "if ( cnt == ' l ' )",
        "string s create k ;",
        "int j = l - 1 and cnt = 0 ;"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘create’"
    },
    {
      "mod_line": [
        15,
        10,
        4,
        8
      ],
      "mod_code": [
        "if ( cnt == ' l ' )",
        "if ( s [ i ] == k [ j ] ) break ;",
        "if ( l = p )",
        "int j = l - 1 and cnt = 0 ;"
      ],
      "err_line": 8,
      "err_msg": "‘cnt’ was not declared in this scope"
    },
    {
      "mod_line": [
        15,
        10,
        16,
        8
      ],
      "mod_code": [
        "if ( cnt == ' l ' )",
        "if ( s [ i ] == k [ j ] ) break ;",
        "cout << \" YES\\n \" << endl ;",
        "int j = l - 1 and cnt = 0 ;"
      ],
      "err_line": 8,
      "err_msg": "‘cnt’ was not declared in this scope"
    },
    {
      "mod_line": [
        15,
        10,
        8
      ],
      "mod_code": [
        "if ( cnt == ' l ' )",
        "if ( s [ i ] == k [ j ] ) break ;",
        "int j = l - 1 and cnt = 0 ;"
      ],
      "err_line": 8,
      "err_msg": "‘cnt’ was not declared in this scope"
    },
    {
      "mod_line": [
        15,
        4,
        16,
        8
      ],
      "mod_code": [
        "if ( cnt == ' l ' )",
        "if ( l = p )",
        "cout << \" YES\\n \" << endl ;",
        "int j = l - 1 and cnt = 0 ;"
      ],
      "err_line": 8,
      "err_msg": "‘cnt’ was not declared in this scope"
    },
    {
      "mod_line": [
        15,
        4,
        8
      ],
      "mod_code": [
        "if ( cnt == ' l ' )",
        "if ( l = p )",
        "int j = l - 1 and cnt = 0 ;"
      ],
      "err_line": 8,
      "err_msg": "‘cnt’ was not declared in this scope"
    },
    {
      "mod_line": [
        15,
        16,
        8
      ],
      "mod_code": [
        "if ( cnt == ' l ' )",
        "cout << \" YES\\n \" << endl ;",
        "int j = l - 1 and cnt = 0 ;"
      ],
      "err_line": 8,
      "err_msg": "‘cnt’ was not declared in this scope"
    },
    {
      "mod_line": [
        15,
        8
      ],
      "mod_code": [
        "if ( cnt == ' l ' )",
        "int j = l - 1 and cnt = 0 ;"
      ],
      "err_line": 8,
      "err_msg": "‘cnt’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        10
      ],
      "mod_code": [
        "string s create k ;",
        "if ( s [ i ] == k [ j ] ) break ;"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘create’"
    },
    {
      "mod_line": [
        1,
        10,
        4
      ],
      "mod_code": [
        "string s create k ;",
        "if ( s [ i ] == k [ j ] ) break ;",
        "if ( l = p )"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘create’"
    },
    {
      "mod_line": [
        1,
        10,
        4,
        16
      ],
      "mod_code": [
        "string s create k ;",
        "if ( s [ i ] == k [ j ] ) break ;",
        "if ( l = p )",
        "cout << \" YES\\n \" << endl ;"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘create’"
    },
    {
      "mod_line": [
        1,
        10,
        4,
        8
      ],
      "mod_code": [
        "string s create k ;",
        "if ( s [ i ] == k [ j ] ) break ;",
        "if ( l = p )",
        "int j = l - 1 and cnt = 0 ;"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘create’"
    },
    {
      "mod_line": [
        1,
        10,
        16
      ],
      "mod_code": [
        "string s create k ;",
        "if ( s [ i ] == k [ j ] ) break ;",
        "cout << \" YES\\n \" << endl ;"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘create’"
    },
    {
      "mod_line": [
        1,
        10,
        16,
        8
      ],
      "mod_code": [
        "string s create k ;",
        "if ( s [ i ] == k [ j ] ) break ;",
        "cout << \" YES\\n \" << endl ;",
        "int j = l - 1 and cnt = 0 ;"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘create’"
    },
    {
      "mod_line": [
        1,
        10,
        8
      ],
      "mod_code": [
        "string s create k ;",
        "if ( s [ i ] == k [ j ] ) break ;",
        "int j = l - 1 and cnt = 0 ;"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘create’"
    },
    {
      "mod_line": [
        1,
        4
      ],
      "mod_code": [
        "string s create k ;",
        "if ( l = p )"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘create’"
    },
    {
      "mod_line": [
        1,
        4,
        16
      ],
      "mod_code": [
        "string s create k ;",
        "if ( l = p )",
        "cout << \" YES\\n \" << endl ;"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘create’"
    },
    {
      "mod_line": [
        1,
        4,
        16,
        8
      ],
      "mod_code": [
        "string s create k ;",
        "if ( l = p )",
        "cout << \" YES\\n \" << endl ;",
        "int j = l - 1 and cnt = 0 ;"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘create’"
    },
    {
      "mod_line": [
        1,
        4,
        8
      ],
      "mod_code": [
        "string s create k ;",
        "if ( l = p )",
        "int j = l - 1 and cnt = 0 ;"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘create’"
    },
    {
      "mod_line": [
        1,
        16
      ],
      "mod_code": [
        "string s create k ;",
        "cout << \" YES\\n \" << endl ;"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘create’"
    },
    {
      "mod_line": [
        1,
        16,
        8
      ],
      "mod_code": [
        "string s create k ;",
        "cout << \" YES\\n \" << endl ;",
        "int j = l - 1 and cnt = 0 ;"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘create’"
    },
    {
      "mod_line": [
        1,
        8
      ],
      "mod_code": [
        "string s create k ;",
        "int j = l - 1 and cnt = 0 ;"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘create’"
    },
    {
      "mod_line": [
        10,
        4,
        16,
        8
      ],
      "mod_code": [
        "if ( s [ i ] == k [ j ] ) break ;",
        "if ( l = p )",
        "cout << \" YES\\n \" << endl ;",
        "int j = l - 1 and cnt = 0 ;"
      ],
      "err_line": 8,
      "err_msg": "‘cnt’ was not declared in this scope"
    },
    {
      "mod_line": [
        10,
        4,
        8
      ],
      "mod_code": [
        "if ( s [ i ] == k [ j ] ) break ;",
        "if ( l = p )",
        "int j = l - 1 and cnt = 0 ;"
      ],
      "err_line": 8,
      "err_msg": "‘cnt’ was not declared in this scope"
    },
    {
      "mod_line": [
        10,
        16,
        8
      ],
      "mod_code": [
        "if ( s [ i ] == k [ j ] ) break ;",
        "cout << \" YES\\n \" << endl ;",
        "int j = l - 1 and cnt = 0 ;"
      ],
      "err_line": 8,
      "err_msg": "‘cnt’ was not declared in this scope"
    },
    {
      "mod_line": [
        10,
        8
      ],
      "mod_code": [
        "if ( s [ i ] == k [ j ] ) break ;",
        "int j = l - 1 and cnt = 0 ;"
      ],
      "err_line": 8,
      "err_msg": "‘cnt’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        16,
        8
      ],
      "mod_code": [
        "if ( l = p )",
        "cout << \" YES\\n \" << endl ;",
        "int j = l - 1 and cnt = 0 ;"
      ],
      "err_line": 8,
      "err_msg": "‘cnt’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        8
      ],
      "mod_code": [
        "if ( l = p )",
        "int j = l - 1 and cnt = 0 ;"
      ],
      "err_line": 8,
      "err_msg": "‘cnt’ was not declared in this scope"
    },
    {
      "mod_line": [
        16,
        8
      ],
      "mod_code": [
        "cout << \" YES\\n \" << endl ;",
        "int j = l - 1 and cnt = 0 ;"
      ],
      "err_line": 8,
      "err_msg": "‘cnt’ was not declared in this scope"
    }
  ]
}