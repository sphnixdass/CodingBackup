{
  "meta": {
    "index": 994,
    "hitid": "3N7PQ0KLI5J0JND5IYWAEFNDHTOE33",
    "workerid": "AIWEXPJAU66D9",
    "probid": "196A",
    "subid": "15498004"
  },
  "lines": [
    {
      "line": 0,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 1,
      "text": "declare string variables input , max_chars and result",
      "code": "string input , max_chars , result ;",
      "indent": 1
    },
    {
      "line": 2,
      "text": "read input",
      "code": "cin >> input ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "assign an empty string to result",
      "code": "result = \" \" ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "set value of max_chars to input",
      "code": "max_chars = input ;",
      "indent": 1
    },
    {
      "line": 5,
      "text": "create character r = length of input [ input - 1 ]",
      "code": "char r = input [ input . size ( ) - 1 ] ;",
      "indent": 1
    },
    {
      "line": 6,
      "text": "for i = length of input - 2 to 0 inclusive , counting down",
      "code": "for ( int i = input . size ( ) - 2 ; i >= 0 ; i -- )",
      "indent": 1
    },
    {
      "line": 7,
      "text": "if input [ i ] is greater than r , set r to input [ i ]",
      "code": "if ( input [ i ] > r ) r = input [ i ] ;",
      "indent": 2
    },
    {
      "line": 8,
      "text": "set value of max_chars [ i ] to r",
      "code": "max_chars [ i ] = r ;",
      "indent": 2
    },
    {
      "line": 9,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 10,
      "text": "for integer i = 0 to length of input - 1 exclusive",
      "code": "for ( int i = 0 ; i < input . size ( ) - 1 ; i ++ )",
      "indent": 1
    },
    {
      "line": 11,
      "text": "if input [ i ] > = max_chars [ i + 1 ] , append input [ i ] to result",
      "code": "if ( input [ i ] >= max_chars [ i + 1 ] ) result += input [ i ] ;",
      "indent": 2
    },
    {
      "line": 12,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 13,
      "text": "append input [ input . size ( ) - 1 ] to result",
      "code": "result += input [ input . size ( ) - 1 ] ;",
      "indent": 1
    },
    {
      "line": 14,
      "text": "print result",
      "code": "cout << result << endl ;",
      "indent": 1
    },
    {
      "line": 15,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 16,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        3
      ],
      "mod_code": [
        "result = 0 ;"
      ],
      "err_line": 3,
      "err_msg": "ambiguous overload for ‘operator=’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        5
      ],
      "mod_code": [
        "char r = input [ input - 1 ] ;"
      ],
      "err_line": 5,
      "err_msg": "no match for ‘operator-’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        1
      ],
      "mod_code": [
        "string input , max_chars , n ;"
      ],
      "err_line": 3,
      "err_msg": "‘result’ was not declared in this scope"
    },
    {
      "mod_line": [
        5
      ],
      "mod_code": [
        "char r = strlen ( input [ input - 1 ] ) ;"
      ],
      "err_line": 5,
      "err_msg": "no match for ‘operator-’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        3,
        4
      ],
      "mod_code": [
        "result = 0 ;",
        "max_chars = getchar ( ) ;"
      ],
      "err_line": 3,
      "err_msg": "ambiguous overload for ‘operator=’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        3,
        4,
        5
      ],
      "mod_code": [
        "result = 0 ;",
        "max_chars = getchar ( ) ;",
        "char r = input [ input - 1 ] ;"
      ],
      "err_line": 3,
      "err_msg": "ambiguous overload for ‘operator=’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        3,
        4,
        5,
        13
      ],
      "mod_code": [
        "result = 0 ;",
        "max_chars = getchar ( ) ;",
        "char r = input [ input - 1 ] ;",
        "result = input [ input . size ( ) - 1 ] ;"
      ],
      "err_line": 3,
      "err_msg": "ambiguous overload for ‘operator=’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        3,
        4,
        5,
        1
      ],
      "mod_code": [
        "result = 0 ;",
        "max_chars = getchar ( ) ;",
        "char r = input [ input - 1 ] ;",
        "string input , max_chars , n ;"
      ],
      "err_line": 3,
      "err_msg": "‘result’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        4,
        13
      ],
      "mod_code": [
        "result = 0 ;",
        "max_chars = getchar ( ) ;",
        "result = input [ input . size ( ) - 1 ] ;"
      ],
      "err_line": 3,
      "err_msg": "ambiguous overload for ‘operator=’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        3,
        4,
        13,
        5
      ],
      "mod_code": [
        "result = 0 ;",
        "max_chars = getchar ( ) ;",
        "result = input [ input . size ( ) - 1 ] ;",
        "char r = strlen ( input [ input - 1 ] ) ;"
      ],
      "err_line": 3,
      "err_msg": "ambiguous overload for ‘operator=’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        3,
        4,
        13,
        1
      ],
      "mod_code": [
        "result = 0 ;",
        "max_chars = getchar ( ) ;",
        "result = input [ input . size ( ) - 1 ] ;",
        "string input , max_chars , n ;"
      ],
      "err_line": 3,
      "err_msg": "‘result’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        4,
        5
      ],
      "mod_code": [
        "result = 0 ;",
        "max_chars = getchar ( ) ;",
        "char r = strlen ( input [ input - 1 ] ) ;"
      ],
      "err_line": 3,
      "err_msg": "ambiguous overload for ‘operator=’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        3,
        4,
        5,
        1
      ],
      "mod_code": [
        "result = 0 ;",
        "max_chars = getchar ( ) ;",
        "char r = strlen ( input [ input - 1 ] ) ;",
        "string input , max_chars , n ;"
      ],
      "err_line": 3,
      "err_msg": "‘result’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        4,
        1
      ],
      "mod_code": [
        "result = 0 ;",
        "max_chars = getchar ( ) ;",
        "string input , max_chars , n ;"
      ],
      "err_line": 3,
      "err_msg": "‘result’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        5
      ],
      "mod_code": [
        "result = 0 ;",
        "char r = input [ input - 1 ] ;"
      ],
      "err_line": 3,
      "err_msg": "ambiguous overload for ‘operator=’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        3,
        5,
        13
      ],
      "mod_code": [
        "result = 0 ;",
        "char r = input [ input - 1 ] ;",
        "result = input [ input . size ( ) - 1 ] ;"
      ],
      "err_line": 3,
      "err_msg": "ambiguous overload for ‘operator=’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        3,
        5,
        13,
        1
      ],
      "mod_code": [
        "result = 0 ;",
        "char r = input [ input - 1 ] ;",
        "result = input [ input . size ( ) - 1 ] ;",
        "string input , max_chars , n ;"
      ],
      "err_line": 3,
      "err_msg": "‘result’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        5,
        1
      ],
      "mod_code": [
        "result = 0 ;",
        "char r = input [ input - 1 ] ;",
        "string input , max_chars , n ;"
      ],
      "err_line": 3,
      "err_msg": "‘result’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        13
      ],
      "mod_code": [
        "result = 0 ;",
        "result = input [ input . size ( ) - 1 ] ;"
      ],
      "err_line": 3,
      "err_msg": "ambiguous overload for ‘operator=’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        3,
        13,
        5
      ],
      "mod_code": [
        "result = 0 ;",
        "result = input [ input . size ( ) - 1 ] ;",
        "char r = strlen ( input [ input - 1 ] ) ;"
      ],
      "err_line": 3,
      "err_msg": "ambiguous overload for ‘operator=’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        3,
        13,
        5,
        1
      ],
      "mod_code": [
        "result = 0 ;",
        "result = input [ input . size ( ) - 1 ] ;",
        "char r = strlen ( input [ input - 1 ] ) ;",
        "string input , max_chars , n ;"
      ],
      "err_line": 3,
      "err_msg": "‘result’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        13,
        1
      ],
      "mod_code": [
        "result = 0 ;",
        "result = input [ input . size ( ) - 1 ] ;",
        "string input , max_chars , n ;"
      ],
      "err_line": 3,
      "err_msg": "‘result’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        5
      ],
      "mod_code": [
        "result = 0 ;",
        "char r = strlen ( input [ input - 1 ] ) ;"
      ],
      "err_line": 3,
      "err_msg": "ambiguous overload for ‘operator=’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        3,
        5,
        1
      ],
      "mod_code": [
        "result = 0 ;",
        "char r = strlen ( input [ input - 1 ] ) ;",
        "string input , max_chars , n ;"
      ],
      "err_line": 3,
      "err_msg": "‘result’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        1
      ],
      "mod_code": [
        "result = 0 ;",
        "string input , max_chars , n ;"
      ],
      "err_line": 3,
      "err_msg": "‘result’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        5
      ],
      "mod_code": [
        "max_chars = getchar ( ) ;",
        "char r = input [ input - 1 ] ;"
      ],
      "err_line": 5,
      "err_msg": "no match for ‘operator-’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        4,
        5,
        13
      ],
      "mod_code": [
        "max_chars = getchar ( ) ;",
        "char r = input [ input - 1 ] ;",
        "result = input [ input . size ( ) - 1 ] ;"
      ],
      "err_line": 5,
      "err_msg": "no match for ‘operator-’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        4,
        5,
        13,
        1
      ],
      "mod_code": [
        "max_chars = getchar ( ) ;",
        "char r = input [ input - 1 ] ;",
        "result = input [ input . size ( ) - 1 ] ;",
        "string input , max_chars , n ;"
      ],
      "err_line": 3,
      "err_msg": "‘result’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        5,
        1
      ],
      "mod_code": [
        "max_chars = getchar ( ) ;",
        "char r = input [ input - 1 ] ;",
        "string input , max_chars , n ;"
      ],
      "err_line": 3,
      "err_msg": "‘result’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        13,
        5
      ],
      "mod_code": [
        "max_chars = getchar ( ) ;",
        "result = input [ input . size ( ) - 1 ] ;",
        "char r = strlen ( input [ input - 1 ] ) ;"
      ],
      "err_line": 5,
      "err_msg": "no match for ‘operator-’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        4,
        13,
        5,
        1
      ],
      "mod_code": [
        "max_chars = getchar ( ) ;",
        "result = input [ input . size ( ) - 1 ] ;",
        "char r = strlen ( input [ input - 1 ] ) ;",
        "string input , max_chars , n ;"
      ],
      "err_line": 3,
      "err_msg": "‘result’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        13,
        1
      ],
      "mod_code": [
        "max_chars = getchar ( ) ;",
        "result = input [ input . size ( ) - 1 ] ;",
        "string input , max_chars , n ;"
      ],
      "err_line": 3,
      "err_msg": "‘result’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        5
      ],
      "mod_code": [
        "max_chars = getchar ( ) ;",
        "char r = strlen ( input [ input - 1 ] ) ;"
      ],
      "err_line": 5,
      "err_msg": "no match for ‘operator-’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        4,
        5,
        1
      ],
      "mod_code": [
        "max_chars = getchar ( ) ;",
        "char r = strlen ( input [ input - 1 ] ) ;",
        "string input , max_chars , n ;"
      ],
      "err_line": 3,
      "err_msg": "‘result’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        1
      ],
      "mod_code": [
        "max_chars = getchar ( ) ;",
        "string input , max_chars , n ;"
      ],
      "err_line": 3,
      "err_msg": "‘result’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        13
      ],
      "mod_code": [
        "char r = input [ input - 1 ] ;",
        "result = input [ input . size ( ) - 1 ] ;"
      ],
      "err_line": 5,
      "err_msg": "no match for ‘operator-’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        5,
        13,
        1
      ],
      "mod_code": [
        "char r = input [ input - 1 ] ;",
        "result = input [ input . size ( ) - 1 ] ;",
        "string input , max_chars , n ;"
      ],
      "err_line": 3,
      "err_msg": "‘result’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        1
      ],
      "mod_code": [
        "char r = input [ input - 1 ] ;",
        "string input , max_chars , n ;"
      ],
      "err_line": 3,
      "err_msg": "‘result’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        5
      ],
      "mod_code": [
        "result = input [ input . size ( ) - 1 ] ;",
        "char r = strlen ( input [ input - 1 ] ) ;"
      ],
      "err_line": 5,
      "err_msg": "no match for ‘operator-’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        13,
        5,
        1
      ],
      "mod_code": [
        "result = input [ input . size ( ) - 1 ] ;",
        "char r = strlen ( input [ input - 1 ] ) ;",
        "string input , max_chars , n ;"
      ],
      "err_line": 3,
      "err_msg": "‘result’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        1
      ],
      "mod_code": [
        "result = input [ input . size ( ) - 1 ] ;",
        "string input , max_chars , n ;"
      ],
      "err_line": 3,
      "err_msg": "‘result’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        1
      ],
      "mod_code": [
        "char r = strlen ( input [ input - 1 ] ) ;",
        "string input , max_chars , n ;"
      ],
      "err_line": 3,
      "err_msg": "‘result’ was not declared in this scope"
    }
  ]
}