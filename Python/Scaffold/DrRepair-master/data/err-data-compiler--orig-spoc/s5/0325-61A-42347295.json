{
  "meta": {
    "index": 325,
    "hitid": "3YZ7A3YHR5N47L5RXC48ITPCX3IS5D",
    "workerid": "AIWEXPJAU66D9",
    "probid": "61A",
    "subid": "42347295"
  },
  "lines": [
    {
      "line": 0,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 1,
      "text": "create strings n1 and n2",
      "code": "string n1 , n2 ;",
      "indent": 1
    },
    {
      "line": 2,
      "text": "read n1 and n2",
      "code": "cin >> n1 >> n2 ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "for i from 0 to length of n1 exclusive",
      "code": "for ( size_t i = 0 ; i < n1 . length ( ) ; ++ i )",
      "indent": 1
    },
    {
      "line": 4,
      "text": "if n1 [ i ] is equal to n2 [ i ]",
      "code": "if ( n1 [ i ] == n2 [ i ] )",
      "indent": 2
    },
    {
      "line": 5,
      "text": "change n1 [ i ] to ' 0 '",
      "code": "n1 [ i ] = ' 0 ' ;",
      "indent": 3
    },
    {
      "line": 6,
      "text": "else",
      "code": "else",
      "indent": 2
    },
    {
      "line": 7,
      "text": "set n1 [ i ] to ' 1 '",
      "code": "n1 [ i ] = ' 1 ' ;",
      "indent": 3
    },
    {
      "line": 8,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 9,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 10,
      "text": "print n1",
      "code": "cout << n1 << endl ;",
      "indent": 1
    },
    {
      "line": 11,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 12,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        1
      ],
      "mod_code": [
        "string n1 create n2 ;"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘create’"
    },
    {
      "mod_line": [
        2
      ],
      "mod_code": [
        "int n1 >> n2 ;"
      ],
      "err_line": 2,
      "err_msg": "expected initializer before ‘>>’ token"
    },
    {
      "mod_line": [
        5
      ],
      "mod_code": [
        "char n1 [ i ] = ' 0 ' ;"
      ],
      "err_line": 5,
      "err_msg": "array must be initialized with a brace-enclosed initializer"
    },
    {
      "mod_line": [
        7
      ],
      "mod_code": [
        "char n1 [ i ] = ' 1 ' ;"
      ],
      "err_line": 7,
      "err_msg": "array must be initialized with a brace-enclosed initializer"
    },
    {
      "mod_line": [
        7,
        2
      ],
      "mod_code": [
        "char n1 [ i ] = ' 1 ' ;",
        "int n1 >> n2 ;"
      ],
      "err_line": 2,
      "err_msg": "expected initializer before ‘>>’ token"
    },
    {
      "mod_line": [
        7,
        2,
        5
      ],
      "mod_code": [
        "char n1 [ i ] = ' 1 ' ;",
        "int n1 >> n2 ;",
        "char n1 [ i ] = ' 0 ' ;"
      ],
      "err_line": 2,
      "err_msg": "expected initializer before ‘>>’ token"
    },
    {
      "mod_line": [
        7,
        2,
        5,
        1
      ],
      "mod_code": [
        "char n1 [ i ] = ' 1 ' ;",
        "int n1 >> n2 ;",
        "char n1 [ i ] = ' 0 ' ;",
        "string n1 create n2 ;"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘create’"
    },
    {
      "mod_line": [
        7,
        2,
        1
      ],
      "mod_code": [
        "char n1 [ i ] = ' 1 ' ;",
        "int n1 >> n2 ;",
        "string n1 create n2 ;"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘create’"
    },
    {
      "mod_line": [
        7,
        5
      ],
      "mod_code": [
        "char n1 [ i ] = ' 1 ' ;",
        "char n1 [ i ] = ' 0 ' ;"
      ],
      "err_line": 5,
      "err_msg": "array must be initialized with a brace-enclosed initializer"
    },
    {
      "mod_line": [
        7,
        5,
        1
      ],
      "mod_code": [
        "char n1 [ i ] = ' 1 ' ;",
        "char n1 [ i ] = ' 0 ' ;",
        "string n1 create n2 ;"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘create’"
    },
    {
      "mod_line": [
        7,
        1
      ],
      "mod_code": [
        "char n1 [ i ] = ' 1 ' ;",
        "string n1 create n2 ;"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘create’"
    },
    {
      "mod_line": [
        2,
        5
      ],
      "mod_code": [
        "int n1 >> n2 ;",
        "char n1 [ i ] = ' 0 ' ;"
      ],
      "err_line": 2,
      "err_msg": "expected initializer before ‘>>’ token"
    },
    {
      "mod_line": [
        2,
        5,
        1
      ],
      "mod_code": [
        "int n1 >> n2 ;",
        "char n1 [ i ] = ' 0 ' ;",
        "string n1 create n2 ;"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘create’"
    },
    {
      "mod_line": [
        2,
        1
      ],
      "mod_code": [
        "int n1 >> n2 ;",
        "string n1 create n2 ;"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘create’"
    },
    {
      "mod_line": [
        5,
        1
      ],
      "mod_code": [
        "char n1 [ i ] = ' 0 ' ;",
        "string n1 create n2 ;"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘create’"
    }
  ]
}