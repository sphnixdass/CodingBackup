{
  "meta": {
    "index": 1204,
    "hitid": "3E9ZFLPWOYMOFQM5Y6TP6AA9GHXIXH",
    "workerid": "A1APYLD4DUK33J",
    "probid": "870A",
    "subid": "48660520"
  },
  "lines": [
    {
      "line": 0,
      "text": "declare firstOn with integer a as argument , returning integer",
      "code": "int firstOn ( int a )",
      "indent": 0
    },
    {
      "line": 1,
      "text": "create integer i with i = 0",
      "code": "int i = 0 ;",
      "indent": 1
    },
    {
      "line": 2,
      "text": "while a % 2 is 0",
      "code": "while ( a % 2 == 0 )",
      "indent": 1
    },
    {
      "line": 3,
      "text": "set a to a bitshift right 1",
      "code": "a >>= 1 ;",
      "indent": 2
    },
    {
      "line": 4,
      "text": "increment i",
      "code": "i ++ ;",
      "indent": 2
    },
    {
      "line": 5,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 6,
      "text": "return i from function",
      "code": "return i ;",
      "indent": 1
    },
    {
      "line": 7,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    },
    {
      "line": 8,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 9,
      "text": "create integer a with a = 0",
      "code": "int a = 0 ;",
      "indent": 1
    },
    {
      "line": 10,
      "text": "create integer b with b = 0",
      "code": "int b = 0 ;",
      "indent": 1
    },
    {
      "line": 11,
      "text": "create integers n , m",
      "code": "int n , m ;",
      "indent": 1
    },
    {
      "line": 12,
      "text": "read n read m",
      "code": "cin >> n >> m ;",
      "indent": 1
    },
    {
      "line": 13,
      "text": "create integer num",
      "code": "int num ;",
      "indent": 1
    },
    {
      "line": 14,
      "text": "for i = 0 to integer casted n exclusive",
      "code": "for ( int i = 0 ; i < ( int ) n ; i ++ )",
      "indent": 1
    },
    {
      "line": 15,
      "text": "read num",
      "code": "cin >> num ;",
      "indent": 2
    },
    {
      "line": 16,
      "text": "set a to ( a bitwise or ( 1 bitshift left num ) )",
      "code": "a = ( a | ( 1 << num ) ) ;",
      "indent": 2
    },
    {
      "line": 17,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 18,
      "text": "for i = 0 to integer casted m exclusive",
      "code": "for ( int i = 0 ; i < ( int ) m ; i ++ )",
      "indent": 1
    },
    {
      "line": 19,
      "text": "read num",
      "code": "cin >> num ;",
      "indent": 2
    },
    {
      "line": 20,
      "text": "set b to ( b bitwise or ( 1 bitshift left num ) )",
      "code": "b = ( b | ( 1 << num ) ) ;",
      "indent": 2
    },
    {
      "line": 21,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 22,
      "text": "create integer c with c = ( a bitwise and b )",
      "code": "int c = ( a & b ) ;",
      "indent": 1
    },
    {
      "line": 23,
      "text": "if c is true",
      "code": "if ( c )",
      "indent": 1
    },
    {
      "line": 24,
      "text": "print result of run firstOn with c as argument , from function , print newline",
      "code": "cout << firstOn ( c ) << endl ;",
      "indent": 2
    },
    {
      "line": 25,
      "text": "else",
      "code": "else",
      "indent": 1
    },
    {
      "line": 26,
      "text": "print minimum of result of run firstOn with a as argument and result of run firstOn with b as argument , print maximum of result of run firstOn with a as argument and result of run firstOn with b as argument , print newline",
      "code": "cout << min ( firstOn ( a ) , firstOn ( b ) ) << max ( firstOn ( a ) , firstOn ( b ) ) << endl ;",
      "indent": 2
    },
    {
      "line": 27,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 28,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 29,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        0
      ],
      "mod_code": [
        "int firstOn ( int a ) ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        12
      ],
      "mod_code": [
        "cin >> n read m ;"
      ],
      "err_line": 12,
      "err_msg": "expected ‘;’ before ‘read’"
    },
    {
      "mod_line": [
        26,
        23,
        12
      ],
      "mod_code": [
        "cout << min ( firstOn ( a ) , firstOn ( a ) ) << endl ;",
        "if ( c == true )",
        "cin >> n read m ;"
      ],
      "err_line": 12,
      "err_msg": "expected ‘;’ before ‘read’"
    },
    {
      "mod_line": [
        26,
        23,
        12,
        19
      ],
      "mod_code": [
        "cout << min ( firstOn ( a ) , firstOn ( a ) ) << endl ;",
        "if ( c == true )",
        "cin >> n read m ;",
        "cout << num << endl ;"
      ],
      "err_line": 12,
      "err_msg": "expected ‘;’ before ‘read’"
    },
    {
      "mod_line": [
        26,
        23,
        12,
        15
      ],
      "mod_code": [
        "cout << min ( firstOn ( a ) , firstOn ( a ) ) << endl ;",
        "if ( c == true )",
        "cin >> n read m ;",
        "cout << num << endl ;"
      ],
      "err_line": 12,
      "err_msg": "expected ‘;’ before ‘read’"
    },
    {
      "mod_line": [
        26,
        12
      ],
      "mod_code": [
        "cout << min ( firstOn ( a ) , firstOn ( a ) ) << endl ;",
        "cin >> n read m ;"
      ],
      "err_line": 12,
      "err_msg": "expected ‘;’ before ‘read’"
    },
    {
      "mod_line": [
        26,
        12,
        19
      ],
      "mod_code": [
        "cout << min ( firstOn ( a ) , firstOn ( a ) ) << endl ;",
        "cin >> n read m ;",
        "cout << num << endl ;"
      ],
      "err_line": 12,
      "err_msg": "expected ‘;’ before ‘read’"
    },
    {
      "mod_line": [
        26,
        12,
        19,
        15
      ],
      "mod_code": [
        "cout << min ( firstOn ( a ) , firstOn ( a ) ) << endl ;",
        "cin >> n read m ;",
        "cout << num << endl ;",
        "cout << num << endl ;"
      ],
      "err_line": 12,
      "err_msg": "expected ‘;’ before ‘read’"
    },
    {
      "mod_line": [
        26,
        12,
        15
      ],
      "mod_code": [
        "cout << min ( firstOn ( a ) , firstOn ( a ) ) << endl ;",
        "cin >> n read m ;",
        "cout << num << endl ;"
      ],
      "err_line": 12,
      "err_msg": "expected ‘;’ before ‘read’"
    },
    {
      "mod_line": [
        23,
        12
      ],
      "mod_code": [
        "if ( c == true )",
        "cin >> n read m ;"
      ],
      "err_line": 12,
      "err_msg": "expected ‘;’ before ‘read’"
    },
    {
      "mod_line": [
        23,
        12,
        26
      ],
      "mod_code": [
        "if ( c == true )",
        "cin >> n read m ;",
        "cout << min ( firstOn ( a ) , firstOn ( b ) ) << endl ;"
      ],
      "err_line": 12,
      "err_msg": "expected ‘;’ before ‘read’"
    },
    {
      "mod_line": [
        23,
        12,
        26,
        19
      ],
      "mod_code": [
        "if ( c == true )",
        "cin >> n read m ;",
        "cout << min ( firstOn ( a ) , firstOn ( b ) ) << endl ;",
        "cout << num << endl ;"
      ],
      "err_line": 12,
      "err_msg": "expected ‘;’ before ‘read’"
    },
    {
      "mod_line": [
        23,
        12,
        26,
        15
      ],
      "mod_code": [
        "if ( c == true )",
        "cin >> n read m ;",
        "cout << min ( firstOn ( a ) , firstOn ( b ) ) << endl ;",
        "cout << num << endl ;"
      ],
      "err_line": 12,
      "err_msg": "expected ‘;’ before ‘read’"
    },
    {
      "mod_line": [
        23,
        12,
        19
      ],
      "mod_code": [
        "if ( c == true )",
        "cin >> n read m ;",
        "cout << num << endl ;"
      ],
      "err_line": 12,
      "err_msg": "expected ‘;’ before ‘read’"
    },
    {
      "mod_line": [
        23,
        12,
        19,
        15
      ],
      "mod_code": [
        "if ( c == true )",
        "cin >> n read m ;",
        "cout << num << endl ;",
        "cout << num << endl ;"
      ],
      "err_line": 12,
      "err_msg": "expected ‘;’ before ‘read’"
    },
    {
      "mod_line": [
        23,
        12,
        15
      ],
      "mod_code": [
        "if ( c == true )",
        "cin >> n read m ;",
        "cout << num << endl ;"
      ],
      "err_line": 12,
      "err_msg": "expected ‘;’ before ‘read’"
    },
    {
      "mod_line": [
        12,
        26
      ],
      "mod_code": [
        "cin >> n read m ;",
        "cout << min ( firstOn ( a ) , firstOn ( b ) ) << endl ;"
      ],
      "err_line": 12,
      "err_msg": "expected ‘;’ before ‘read’"
    },
    {
      "mod_line": [
        12,
        26,
        19
      ],
      "mod_code": [
        "cin >> n read m ;",
        "cout << min ( firstOn ( a ) , firstOn ( b ) ) << endl ;",
        "cout << num << endl ;"
      ],
      "err_line": 12,
      "err_msg": "expected ‘;’ before ‘read’"
    },
    {
      "mod_line": [
        12,
        26,
        19,
        15
      ],
      "mod_code": [
        "cin >> n read m ;",
        "cout << min ( firstOn ( a ) , firstOn ( b ) ) << endl ;",
        "cout << num << endl ;",
        "cout << num << endl ;"
      ],
      "err_line": 12,
      "err_msg": "expected ‘;’ before ‘read’"
    },
    {
      "mod_line": [
        12,
        26,
        15
      ],
      "mod_code": [
        "cin >> n read m ;",
        "cout << min ( firstOn ( a ) , firstOn ( b ) ) << endl ;",
        "cout << num << endl ;"
      ],
      "err_line": 12,
      "err_msg": "expected ‘;’ before ‘read’"
    },
    {
      "mod_line": [
        12,
        19
      ],
      "mod_code": [
        "cin >> n read m ;",
        "cout << num << endl ;"
      ],
      "err_line": 12,
      "err_msg": "expected ‘;’ before ‘read’"
    },
    {
      "mod_line": [
        12,
        19,
        15
      ],
      "mod_code": [
        "cin >> n read m ;",
        "cout << num << endl ;",
        "cout << num << endl ;"
      ],
      "err_line": 12,
      "err_msg": "expected ‘;’ before ‘read’"
    },
    {
      "mod_line": [
        12,
        15
      ],
      "mod_code": [
        "cin >> n read m ;",
        "cout << num << endl ;"
      ],
      "err_line": 12,
      "err_msg": "expected ‘;’ before ‘read’"
    }
  ]
}