{
  "meta": {
    "index": 691,
    "hitid": "3VADEH0UHCR80VNAHRDMGZUTO3PSP5",
    "workerid": "A1EKVUFWL7OJMO",
    "probid": "346A",
    "subid": "35091720"
  },
  "lines": [
    {
      "line": 0,
      "text": "in the inline function gcd that takes int a , b and returns int",
      "code": "inline int gcd ( int a , int b )",
      "indent": 0
    },
    {
      "line": 1,
      "text": "if ( a modulo b is 0 )",
      "code": "if ( a % b == 0 )",
      "indent": 1
    },
    {
      "line": 2,
      "text": "return b",
      "code": "return b ;",
      "indent": 2
    },
    {
      "line": 3,
      "text": "else",
      "code": "else",
      "indent": 1
    },
    {
      "line": 4,
      "text": "return gcd ( b , a modulo b )",
      "code": "return gcd ( b , a % b ) ;",
      "indent": 2
    },
    {
      "line": 5,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    },
    {
      "line": 6,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 7,
      "text": "n , a , i , d , sum = integers with a = array of size 100",
      "code": "int n , a [ 100 ] , i , d , sum ;",
      "indent": 1
    },
    {
      "line": 8,
      "text": "read n",
      "code": "cin >> n ;",
      "indent": 1
    },
    {
      "line": 9,
      "text": "read a [ 0 ] , a [ 1 ]",
      "code": "cin >> a [ 0 ] >> a [ 1 ] ;",
      "indent": 1
    },
    {
      "line": 10,
      "text": "d = gcd on a [ 0 ] and a [ 1 ]",
      "code": "d = gcd ( a [ 0 ] , a [ 1 ] ) ;",
      "indent": 1
    },
    {
      "line": 11,
      "text": "for i = 2 to n - 1",
      "code": "for ( i = 2 ; i <= n - 1 ; i ++ )",
      "indent": 1
    },
    {
      "line": 12,
      "text": "read a [ i ]",
      "code": "cin >> a [ i ] ;",
      "indent": 2
    },
    {
      "line": 13,
      "text": "d = gcd of d and a [ i ]",
      "code": "d = gcd ( d , a [ i ] ) ;",
      "indent": 2
    },
    {
      "line": 14,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 15,
      "text": "sort a and a + n",
      "code": "sort ( a , a + n ) ;",
      "indent": 1
    },
    {
      "line": 16,
      "text": "sum = 0",
      "code": "sum = 0 ;",
      "indent": 1
    },
    {
      "line": 17,
      "text": "for i = d to a [ n - 1 ] with i = i + d , increment sum",
      "code": "for ( i = d ; i <= a [ n - 1 ] ; i = i + d ) { sum ++ ; }",
      "indent": 1
    },
    {
      "line": 18,
      "text": "if ( ( sum - n ) modulo 2 is 0 )",
      "code": "if ( ( sum - n ) % 2 == 0 )",
      "indent": 1
    },
    {
      "line": 19,
      "text": "print Bob",
      "code": "cout << \" Bob \" << endl ;",
      "indent": 2
    },
    {
      "line": 20,
      "text": "else",
      "code": "else",
      "indent": 1
    },
    {
      "line": 21,
      "text": "print Alice",
      "code": "cout << \" Alice \" << endl ;",
      "indent": 2
    },
    {
      "line": 22,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 23,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        7
      ],
      "mod_code": [
        "int n , a , i , d , sum [ 100 ] ;"
      ],
      "err_line": 9,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        16
      ],
      "mod_code": [
        "int sum = 0 ;"
      ],
      "err_line": 16,
      "err_msg": "redeclaration of ‘int sum’"
    },
    {
      "mod_line": [
        19
      ],
      "mod_code": [
        "cout << Bob << endl ;"
      ],
      "err_line": 19,
      "err_msg": "‘Bob’ was not declared in this scope"
    },
    {
      "mod_line": [
        21
      ],
      "mod_code": [
        "cout << Alice << endl ;"
      ],
      "err_line": 21,
      "err_msg": "‘Alice’ was not declared in this scope"
    },
    {
      "mod_line": [
        0
      ],
      "mod_code": [
        "inline int gcd ( int a , int b , int b )"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘int b’"
    },
    {
      "mod_line": [
        4
      ],
      "mod_code": [
        "return gcd ( b , a % b ) ) ;"
      ],
      "err_line": 4,
      "err_msg": "expected ‘;’ before ‘)’ token"
    },
    {
      "mod_line": [
        7
      ],
      "mod_code": [
        "int n , a , i , d , sum , sum ;"
      ],
      "err_line": 7,
      "err_msg": "redeclaration of ‘int sum’"
    },
    {
      "mod_line": [
        10
      ],
      "mod_code": [
        "int d = gcd ( a [ 0 ] , a [ 1 ] ) ;"
      ],
      "err_line": 10,
      "err_msg": "redeclaration of ‘int d’"
    },
    {
      "mod_line": [
        16
      ],
      "mod_code": [
        "long long sum = 0 ;"
      ],
      "err_line": 16,
      "err_msg": "conflicting declaration ‘long long int sum’"
    },
    {
      "mod_line": [
        19
      ],
      "mod_code": [
        "cout << Bob ;"
      ],
      "err_line": 19,
      "err_msg": "‘Bob’ was not declared in this scope"
    },
    {
      "mod_line": [
        21
      ],
      "mod_code": [
        "cout << Alice ;"
      ],
      "err_line": 21,
      "err_msg": "‘Alice’ was not declared in this scope"
    },
    {
      "mod_line": [
        7,
        16
      ],
      "mod_code": [
        "int n , a , i , d , sum [ 100 ] ;",
        "int sum = 0 ;"
      ],
      "err_line": 9,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        7,
        16,
        19
      ],
      "mod_code": [
        "int n , a , i , d , sum [ 100 ] ;",
        "int sum = 0 ;",
        "cout << Bob << endl ;"
      ],
      "err_line": 9,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        7,
        16,
        19,
        21
      ],
      "mod_code": [
        "int n , a , i , d , sum [ 100 ] ;",
        "int sum = 0 ;",
        "cout << Bob << endl ;",
        "cout << Alice << endl ;"
      ],
      "err_line": 9,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        7,
        16,
        19,
        0
      ],
      "mod_code": [
        "int n , a , i , d , sum [ 100 ] ;",
        "int sum = 0 ;",
        "cout << Bob << endl ;",
        "inline int gcd ( int a , int b , int b )"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘int b’"
    },
    {
      "mod_line": [
        7,
        16,
        19,
        8
      ],
      "mod_code": [
        "int n , a , i , d , sum [ 100 ] ;",
        "int sum = 0 ;",
        "cout << Bob << endl ;",
        "while ( cin >> n )"
      ],
      "err_line": 9,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        7,
        16,
        21
      ],
      "mod_code": [
        "int n , a , i , d , sum [ 100 ] ;",
        "int sum = 0 ;",
        "cout << Alice << endl ;"
      ],
      "err_line": 9,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        7,
        16,
        21,
        0
      ],
      "mod_code": [
        "int n , a , i , d , sum [ 100 ] ;",
        "int sum = 0 ;",
        "cout << Alice << endl ;",
        "inline int gcd ( int a , int b , int b )"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘int b’"
    },
    {
      "mod_line": [
        7,
        16,
        21,
        8
      ],
      "mod_code": [
        "int n , a , i , d , sum [ 100 ] ;",
        "int sum = 0 ;",
        "cout << Alice << endl ;",
        "while ( cin >> n )"
      ],
      "err_line": 9,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        7,
        16,
        0
      ],
      "mod_code": [
        "int n , a , i , d , sum [ 100 ] ;",
        "int sum = 0 ;",
        "inline int gcd ( int a , int b , int b )"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘int b’"
    },
    {
      "mod_line": [
        7,
        16,
        0,
        8
      ],
      "mod_code": [
        "int n , a , i , d , sum [ 100 ] ;",
        "int sum = 0 ;",
        "inline int gcd ( int a , int b , int b )",
        "while ( cin >> n )"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘int b’"
    },
    {
      "mod_line": [
        7,
        16,
        8
      ],
      "mod_code": [
        "int n , a , i , d , sum [ 100 ] ;",
        "int sum = 0 ;",
        "while ( cin >> n )"
      ],
      "err_line": 9,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        7,
        19
      ],
      "mod_code": [
        "int n , a , i , d , sum [ 100 ] ;",
        "cout << Bob << endl ;"
      ],
      "err_line": 9,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        7,
        19,
        21
      ],
      "mod_code": [
        "int n , a , i , d , sum [ 100 ] ;",
        "cout << Bob << endl ;",
        "cout << Alice << endl ;"
      ],
      "err_line": 9,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        7,
        19,
        21,
        0
      ],
      "mod_code": [
        "int n , a , i , d , sum [ 100 ] ;",
        "cout << Bob << endl ;",
        "cout << Alice << endl ;",
        "inline int gcd ( int a , int b , int b )"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘int b’"
    },
    {
      "mod_line": [
        7,
        19,
        21,
        8
      ],
      "mod_code": [
        "int n , a , i , d , sum [ 100 ] ;",
        "cout << Bob << endl ;",
        "cout << Alice << endl ;",
        "while ( cin >> n )"
      ],
      "err_line": 9,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        7,
        19,
        0
      ],
      "mod_code": [
        "int n , a , i , d , sum [ 100 ] ;",
        "cout << Bob << endl ;",
        "inline int gcd ( int a , int b , int b )"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘int b’"
    },
    {
      "mod_line": [
        7,
        19,
        0,
        8
      ],
      "mod_code": [
        "int n , a , i , d , sum [ 100 ] ;",
        "cout << Bob << endl ;",
        "inline int gcd ( int a , int b , int b )",
        "while ( cin >> n )"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘int b’"
    },
    {
      "mod_line": [
        7,
        19,
        8
      ],
      "mod_code": [
        "int n , a , i , d , sum [ 100 ] ;",
        "cout << Bob << endl ;",
        "while ( cin >> n )"
      ],
      "err_line": 9,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        7,
        21
      ],
      "mod_code": [
        "int n , a , i , d , sum [ 100 ] ;",
        "cout << Alice << endl ;"
      ],
      "err_line": 9,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        7,
        21,
        0
      ],
      "mod_code": [
        "int n , a , i , d , sum [ 100 ] ;",
        "cout << Alice << endl ;",
        "inline int gcd ( int a , int b , int b )"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘int b’"
    },
    {
      "mod_line": [
        7,
        21,
        0,
        8
      ],
      "mod_code": [
        "int n , a , i , d , sum [ 100 ] ;",
        "cout << Alice << endl ;",
        "inline int gcd ( int a , int b , int b )",
        "while ( cin >> n )"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘int b’"
    },
    {
      "mod_line": [
        7,
        21,
        8
      ],
      "mod_code": [
        "int n , a , i , d , sum [ 100 ] ;",
        "cout << Alice << endl ;",
        "while ( cin >> n )"
      ],
      "err_line": 9,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        7,
        0
      ],
      "mod_code": [
        "int n , a , i , d , sum [ 100 ] ;",
        "inline int gcd ( int a , int b , int b )"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘int b’"
    },
    {
      "mod_line": [
        7,
        0,
        8
      ],
      "mod_code": [
        "int n , a , i , d , sum [ 100 ] ;",
        "inline int gcd ( int a , int b , int b )",
        "while ( cin >> n )"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘int b’"
    },
    {
      "mod_line": [
        7,
        8
      ],
      "mod_code": [
        "int n , a , i , d , sum [ 100 ] ;",
        "while ( cin >> n )"
      ],
      "err_line": 9,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        16,
        19
      ],
      "mod_code": [
        "int sum = 0 ;",
        "cout << Bob << endl ;"
      ],
      "err_line": 16,
      "err_msg": "redeclaration of ‘int sum’"
    },
    {
      "mod_line": [
        16,
        19,
        21
      ],
      "mod_code": [
        "int sum = 0 ;",
        "cout << Bob << endl ;",
        "cout << Alice << endl ;"
      ],
      "err_line": 16,
      "err_msg": "redeclaration of ‘int sum’"
    },
    {
      "mod_line": [
        16,
        19,
        21,
        0
      ],
      "mod_code": [
        "int sum = 0 ;",
        "cout << Bob << endl ;",
        "cout << Alice << endl ;",
        "inline int gcd ( int a , int b , int b )"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘int b’"
    },
    {
      "mod_line": [
        16,
        19,
        21,
        8
      ],
      "mod_code": [
        "int sum = 0 ;",
        "cout << Bob << endl ;",
        "cout << Alice << endl ;",
        "while ( cin >> n )"
      ],
      "err_line": 16,
      "err_msg": "redeclaration of ‘int sum’"
    },
    {
      "mod_line": [
        16,
        19,
        0
      ],
      "mod_code": [
        "int sum = 0 ;",
        "cout << Bob << endl ;",
        "inline int gcd ( int a , int b , int b )"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘int b’"
    },
    {
      "mod_line": [
        16,
        19,
        0,
        8
      ],
      "mod_code": [
        "int sum = 0 ;",
        "cout << Bob << endl ;",
        "inline int gcd ( int a , int b , int b )",
        "while ( cin >> n )"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘int b’"
    },
    {
      "mod_line": [
        16,
        19,
        8
      ],
      "mod_code": [
        "int sum = 0 ;",
        "cout << Bob << endl ;",
        "while ( cin >> n )"
      ],
      "err_line": 16,
      "err_msg": "redeclaration of ‘int sum’"
    },
    {
      "mod_line": [
        16,
        21
      ],
      "mod_code": [
        "int sum = 0 ;",
        "cout << Alice << endl ;"
      ],
      "err_line": 16,
      "err_msg": "redeclaration of ‘int sum’"
    },
    {
      "mod_line": [
        16,
        21,
        0
      ],
      "mod_code": [
        "int sum = 0 ;",
        "cout << Alice << endl ;",
        "inline int gcd ( int a , int b , int b )"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘int b’"
    },
    {
      "mod_line": [
        16,
        21,
        0,
        8
      ],
      "mod_code": [
        "int sum = 0 ;",
        "cout << Alice << endl ;",
        "inline int gcd ( int a , int b , int b )",
        "while ( cin >> n )"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘int b’"
    },
    {
      "mod_line": [
        16,
        21,
        8
      ],
      "mod_code": [
        "int sum = 0 ;",
        "cout << Alice << endl ;",
        "while ( cin >> n )"
      ],
      "err_line": 16,
      "err_msg": "redeclaration of ‘int sum’"
    },
    {
      "mod_line": [
        16,
        0
      ],
      "mod_code": [
        "int sum = 0 ;",
        "inline int gcd ( int a , int b , int b )"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘int b’"
    },
    {
      "mod_line": [
        16,
        0,
        8
      ],
      "mod_code": [
        "int sum = 0 ;",
        "inline int gcd ( int a , int b , int b )",
        "while ( cin >> n )"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘int b’"
    },
    {
      "mod_line": [
        16,
        8
      ],
      "mod_code": [
        "int sum = 0 ;",
        "while ( cin >> n )"
      ],
      "err_line": 16,
      "err_msg": "redeclaration of ‘int sum’"
    },
    {
      "mod_line": [
        19,
        21
      ],
      "mod_code": [
        "cout << Bob << endl ;",
        "cout << Alice << endl ;"
      ],
      "err_line": 19,
      "err_msg": "‘Bob’ was not declared in this scope"
    },
    {
      "mod_line": [
        19,
        21,
        0
      ],
      "mod_code": [
        "cout << Bob << endl ;",
        "cout << Alice << endl ;",
        "inline int gcd ( int a , int b , int b )"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘int b’"
    },
    {
      "mod_line": [
        19,
        21,
        0,
        8
      ],
      "mod_code": [
        "cout << Bob << endl ;",
        "cout << Alice << endl ;",
        "inline int gcd ( int a , int b , int b )",
        "while ( cin >> n )"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘int b’"
    },
    {
      "mod_line": [
        19,
        21,
        8
      ],
      "mod_code": [
        "cout << Bob << endl ;",
        "cout << Alice << endl ;",
        "while ( cin >> n )"
      ],
      "err_line": 19,
      "err_msg": "‘Bob’ was not declared in this scope"
    },
    {
      "mod_line": [
        19,
        0
      ],
      "mod_code": [
        "cout << Bob << endl ;",
        "inline int gcd ( int a , int b , int b )"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘int b’"
    },
    {
      "mod_line": [
        19,
        0,
        8
      ],
      "mod_code": [
        "cout << Bob << endl ;",
        "inline int gcd ( int a , int b , int b )",
        "while ( cin >> n )"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘int b’"
    },
    {
      "mod_line": [
        19,
        8
      ],
      "mod_code": [
        "cout << Bob << endl ;",
        "while ( cin >> n )"
      ],
      "err_line": 19,
      "err_msg": "‘Bob’ was not declared in this scope"
    },
    {
      "mod_line": [
        21,
        0
      ],
      "mod_code": [
        "cout << Alice << endl ;",
        "inline int gcd ( int a , int b , int b )"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘int b’"
    },
    {
      "mod_line": [
        21,
        0,
        8
      ],
      "mod_code": [
        "cout << Alice << endl ;",
        "inline int gcd ( int a , int b , int b )",
        "while ( cin >> n )"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘int b’"
    },
    {
      "mod_line": [
        21,
        8
      ],
      "mod_code": [
        "cout << Alice << endl ;",
        "while ( cin >> n )"
      ],
      "err_line": 21,
      "err_msg": "‘Alice’ was not declared in this scope"
    },
    {
      "mod_line": [
        0,
        8
      ],
      "mod_code": [
        "inline int gcd ( int a , int b , int b )",
        "while ( cin >> n )"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘int b’"
    }
  ]
}