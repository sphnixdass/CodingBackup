{
  "meta": {
    "index": 2077,
    "hitid": "3DW3BNF1GHC3MV5XP5GG50JAYXIV8S",
    "workerid": "A1APYLD4DUK33J",
    "probid": "723A",
    "subid": "48521579"
  },
  "lines": [
    {
      "line": 0,
      "text": "declare constant integer inf = 0x3f3f3f",
      "code": "const int inf = 0x3f3f3f ;",
      "indent": 0
    },
    {
      "line": 1,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 2,
      "text": "declare integers x1 , x2 , x3",
      "code": "int x1 , x2 , x3 ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "while read x1 , x2 , x3 is true",
      "code": "while ( cin >> x1 >> x2 >> x3 )",
      "indent": 1
    },
    {
      "line": 4,
      "text": "declare integers minn = x1 , maxx = x1",
      "code": "int minn = x1 , maxx = x1 ;",
      "indent": 2
    },
    {
      "line": 5,
      "text": "let minn be minimum of ( minn and x2 )",
      "code": "minn = min ( minn , x2 ) ;",
      "indent": 2
    },
    {
      "line": 6,
      "text": "let minn be minimum of ( minn and x3 )",
      "code": "minn = min ( minn , x3 ) ;",
      "indent": 2
    },
    {
      "line": 7,
      "text": "let maxx be maximum of ( maxx and x2 )",
      "code": "maxx = max ( maxx , x2 ) ;",
      "indent": 2
    },
    {
      "line": 8,
      "text": "let maxx be maximum of ( maxx and x3 )",
      "code": "maxx = max ( maxx , x3 ) ;",
      "indent": 2
    },
    {
      "line": 9,
      "text": "declare integers res = inf , cal",
      "code": "int res = inf , cal ;",
      "indent": 2
    },
    {
      "line": 10,
      "text": "for i = minn to maxx inclusive",
      "code": "for ( int i = minn ; i <= maxx ; ++ i )",
      "indent": 2
    },
    {
      "line": 11,
      "text": "let cal be absolute value of ( x1 - i ) + absolute value of ( x2 - i ) + absolute value of ( x3 - i )",
      "code": "cal = fabs ( x1 - i ) + fabs ( x2 - i ) + fabs ( x3 - i ) ;",
      "indent": 3
    },
    {
      "line": 12,
      "text": "let res be minimum of res and cal",
      "code": "res = min ( res , cal ) ;",
      "indent": 3
    },
    {
      "line": 13,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 14,
      "text": "print res , newline",
      "code": "cout << res << endl ;",
      "indent": 2
    },
    {
      "line": 15,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 16,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 17,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        2
      ],
      "mod_code": [
        "long long x1 , x2 , x3 ;"
      ],
      "err_line": 5,
      "err_msg": "no matching function for call to ‘min(int&, long long int&)’"
    },
    {
      "mod_line": [
        3
      ],
      "mod_code": [
        "while ( { cin >> x1 >> x2 >> x3 )"
      ],
      "err_line": 3,
      "err_msg": "expected primary-expression before ‘{’ token"
    },
    {
      "mod_line": [
        5
      ],
      "mod_code": [
        "minn = minn ( minn , x2 ) ;"
      ],
      "err_line": 5,
      "err_msg": "‘minn’ cannot be used as a function"
    },
    {
      "mod_line": [
        6
      ],
      "mod_code": [
        "minn = min ( minn and x3 ) ;"
      ],
      "err_line": 6,
      "err_msg": "no matching function for call to ‘min(bool)’"
    },
    {
      "mod_line": [
        7
      ],
      "mod_code": [
        "maxx = max ( maxx ) ;"
      ],
      "err_line": 7,
      "err_msg": "no matching function for call to ‘max(int&)’"
    },
    {
      "mod_line": [
        8
      ],
      "mod_code": [
        "maxx = max ( maxx ) ;"
      ],
      "err_line": 8,
      "err_msg": "no matching function for call to ‘max(int&)’"
    },
    {
      "mod_line": [
        10
      ],
      "mod_code": [
        "for ( i = minn ; i <= maxx ; i ++ )"
      ],
      "err_line": 10,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        12
      ],
      "mod_code": [
        "res = min ( res and cal ) ;"
      ],
      "err_line": 12,
      "err_msg": "no matching function for call to ‘min(bool)’"
    },
    {
      "mod_line": [
        2,
        7
      ],
      "mod_code": [
        "long long x1 , x2 , x3 ;",
        "maxx = max ( maxx ) ;"
      ],
      "err_line": 5,
      "err_msg": "no matching function for call to ‘min(int&, long long int&)’"
    },
    {
      "mod_line": [
        2,
        7,
        3
      ],
      "mod_code": [
        "long long x1 , x2 , x3 ;",
        "maxx = max ( maxx ) ;",
        "while ( { cin >> x1 >> x2 >> x3 )"
      ],
      "err_line": 3,
      "err_msg": "expected primary-expression before ‘{’ token"
    },
    {
      "mod_line": [
        2,
        7,
        3,
        8
      ],
      "mod_code": [
        "long long x1 , x2 , x3 ;",
        "maxx = max ( maxx ) ;",
        "while ( { cin >> x1 >> x2 >> x3 )",
        "maxx = max ( maxx ) ;"
      ],
      "err_line": 3,
      "err_msg": "expected primary-expression before ‘{’ token"
    },
    {
      "mod_line": [
        2,
        7,
        3,
        6
      ],
      "mod_code": [
        "long long x1 , x2 , x3 ;",
        "maxx = max ( maxx ) ;",
        "while ( { cin >> x1 >> x2 >> x3 )",
        "minn = min ( minn and x3 ) ;"
      ],
      "err_line": 3,
      "err_msg": "expected primary-expression before ‘{’ token"
    },
    {
      "mod_line": [
        2,
        7,
        3,
        12
      ],
      "mod_code": [
        "long long x1 , x2 , x3 ;",
        "maxx = max ( maxx ) ;",
        "while ( { cin >> x1 >> x2 >> x3 )",
        "res = min ( res and cal ) ;"
      ],
      "err_line": 3,
      "err_msg": "expected primary-expression before ‘{’ token"
    },
    {
      "mod_line": [
        2,
        7,
        8
      ],
      "mod_code": [
        "long long x1 , x2 , x3 ;",
        "maxx = max ( maxx ) ;",
        "maxx = max ( maxx ) ;"
      ],
      "err_line": 5,
      "err_msg": "no matching function for call to ‘min(int&, long long int&)’"
    },
    {
      "mod_line": [
        2,
        7,
        8,
        6
      ],
      "mod_code": [
        "long long x1 , x2 , x3 ;",
        "maxx = max ( maxx ) ;",
        "maxx = max ( maxx ) ;",
        "minn = min ( minn and x3 ) ;"
      ],
      "err_line": 5,
      "err_msg": "no matching function for call to ‘min(int&, long long int&)’"
    },
    {
      "mod_line": [
        2,
        7,
        8,
        12
      ],
      "mod_code": [
        "long long x1 , x2 , x3 ;",
        "maxx = max ( maxx ) ;",
        "maxx = max ( maxx ) ;",
        "res = min ( res and cal ) ;"
      ],
      "err_line": 5,
      "err_msg": "no matching function for call to ‘min(int&, long long int&)’"
    },
    {
      "mod_line": [
        2,
        7,
        6
      ],
      "mod_code": [
        "long long x1 , x2 , x3 ;",
        "maxx = max ( maxx ) ;",
        "minn = min ( minn and x3 ) ;"
      ],
      "err_line": 5,
      "err_msg": "no matching function for call to ‘min(int&, long long int&)’"
    },
    {
      "mod_line": [
        2,
        7,
        6,
        12
      ],
      "mod_code": [
        "long long x1 , x2 , x3 ;",
        "maxx = max ( maxx ) ;",
        "minn = min ( minn and x3 ) ;",
        "res = min ( res and cal ) ;"
      ],
      "err_line": 5,
      "err_msg": "no matching function for call to ‘min(int&, long long int&)’"
    },
    {
      "mod_line": [
        2,
        7,
        12
      ],
      "mod_code": [
        "long long x1 , x2 , x3 ;",
        "maxx = max ( maxx ) ;",
        "res = min ( res and cal ) ;"
      ],
      "err_line": 5,
      "err_msg": "no matching function for call to ‘min(int&, long long int&)’"
    },
    {
      "mod_line": [
        2,
        3
      ],
      "mod_code": [
        "long long x1 , x2 , x3 ;",
        "while ( { cin >> x1 >> x2 >> x3 )"
      ],
      "err_line": 3,
      "err_msg": "expected primary-expression before ‘{’ token"
    },
    {
      "mod_line": [
        2,
        3,
        8
      ],
      "mod_code": [
        "long long x1 , x2 , x3 ;",
        "while ( { cin >> x1 >> x2 >> x3 )",
        "maxx = max ( maxx ) ;"
      ],
      "err_line": 3,
      "err_msg": "expected primary-expression before ‘{’ token"
    },
    {
      "mod_line": [
        2,
        3,
        8,
        6
      ],
      "mod_code": [
        "long long x1 , x2 , x3 ;",
        "while ( { cin >> x1 >> x2 >> x3 )",
        "maxx = max ( maxx ) ;",
        "minn = min ( minn and x3 ) ;"
      ],
      "err_line": 3,
      "err_msg": "expected primary-expression before ‘{’ token"
    },
    {
      "mod_line": [
        2,
        3,
        8,
        12
      ],
      "mod_code": [
        "long long x1 , x2 , x3 ;",
        "while ( { cin >> x1 >> x2 >> x3 )",
        "maxx = max ( maxx ) ;",
        "res = min ( res and cal ) ;"
      ],
      "err_line": 3,
      "err_msg": "expected primary-expression before ‘{’ token"
    },
    {
      "mod_line": [
        2,
        3,
        6
      ],
      "mod_code": [
        "long long x1 , x2 , x3 ;",
        "while ( { cin >> x1 >> x2 >> x3 )",
        "minn = min ( minn and x3 ) ;"
      ],
      "err_line": 3,
      "err_msg": "expected primary-expression before ‘{’ token"
    },
    {
      "mod_line": [
        2,
        3,
        6,
        12
      ],
      "mod_code": [
        "long long x1 , x2 , x3 ;",
        "while ( { cin >> x1 >> x2 >> x3 )",
        "minn = min ( minn and x3 ) ;",
        "res = min ( res and cal ) ;"
      ],
      "err_line": 3,
      "err_msg": "expected primary-expression before ‘{’ token"
    },
    {
      "mod_line": [
        2,
        3,
        12
      ],
      "mod_code": [
        "long long x1 , x2 , x3 ;",
        "while ( { cin >> x1 >> x2 >> x3 )",
        "res = min ( res and cal ) ;"
      ],
      "err_line": 3,
      "err_msg": "expected primary-expression before ‘{’ token"
    },
    {
      "mod_line": [
        2,
        8
      ],
      "mod_code": [
        "long long x1 , x2 , x3 ;",
        "maxx = max ( maxx ) ;"
      ],
      "err_line": 5,
      "err_msg": "no matching function for call to ‘min(int&, long long int&)’"
    },
    {
      "mod_line": [
        2,
        8,
        6
      ],
      "mod_code": [
        "long long x1 , x2 , x3 ;",
        "maxx = max ( maxx ) ;",
        "minn = min ( minn and x3 ) ;"
      ],
      "err_line": 5,
      "err_msg": "no matching function for call to ‘min(int&, long long int&)’"
    },
    {
      "mod_line": [
        2,
        8,
        6,
        12
      ],
      "mod_code": [
        "long long x1 , x2 , x3 ;",
        "maxx = max ( maxx ) ;",
        "minn = min ( minn and x3 ) ;",
        "res = min ( res and cal ) ;"
      ],
      "err_line": 5,
      "err_msg": "no matching function for call to ‘min(int&, long long int&)’"
    },
    {
      "mod_line": [
        2,
        8,
        12
      ],
      "mod_code": [
        "long long x1 , x2 , x3 ;",
        "maxx = max ( maxx ) ;",
        "res = min ( res and cal ) ;"
      ],
      "err_line": 5,
      "err_msg": "no matching function for call to ‘min(int&, long long int&)’"
    },
    {
      "mod_line": [
        2,
        6
      ],
      "mod_code": [
        "long long x1 , x2 , x3 ;",
        "minn = min ( minn and x3 ) ;"
      ],
      "err_line": 5,
      "err_msg": "no matching function for call to ‘min(int&, long long int&)’"
    },
    {
      "mod_line": [
        2,
        6,
        12
      ],
      "mod_code": [
        "long long x1 , x2 , x3 ;",
        "minn = min ( minn and x3 ) ;",
        "res = min ( res and cal ) ;"
      ],
      "err_line": 5,
      "err_msg": "no matching function for call to ‘min(int&, long long int&)’"
    },
    {
      "mod_line": [
        2,
        12
      ],
      "mod_code": [
        "long long x1 , x2 , x3 ;",
        "res = min ( res and cal ) ;"
      ],
      "err_line": 5,
      "err_msg": "no matching function for call to ‘min(int&, long long int&)’"
    },
    {
      "mod_line": [
        7,
        3
      ],
      "mod_code": [
        "maxx = max ( maxx ) ;",
        "while ( { cin >> x1 >> x2 >> x3 )"
      ],
      "err_line": 3,
      "err_msg": "expected primary-expression before ‘{’ token"
    },
    {
      "mod_line": [
        7,
        3,
        8
      ],
      "mod_code": [
        "maxx = max ( maxx ) ;",
        "while ( { cin >> x1 >> x2 >> x3 )",
        "maxx = max ( maxx ) ;"
      ],
      "err_line": 3,
      "err_msg": "expected primary-expression before ‘{’ token"
    },
    {
      "mod_line": [
        7,
        3,
        8,
        6
      ],
      "mod_code": [
        "maxx = max ( maxx ) ;",
        "while ( { cin >> x1 >> x2 >> x3 )",
        "maxx = max ( maxx ) ;",
        "minn = min ( minn and x3 ) ;"
      ],
      "err_line": 3,
      "err_msg": "expected primary-expression before ‘{’ token"
    },
    {
      "mod_line": [
        7,
        3,
        8,
        12
      ],
      "mod_code": [
        "maxx = max ( maxx ) ;",
        "while ( { cin >> x1 >> x2 >> x3 )",
        "maxx = max ( maxx ) ;",
        "res = min ( res and cal ) ;"
      ],
      "err_line": 3,
      "err_msg": "expected primary-expression before ‘{’ token"
    },
    {
      "mod_line": [
        7,
        3,
        6
      ],
      "mod_code": [
        "maxx = max ( maxx ) ;",
        "while ( { cin >> x1 >> x2 >> x3 )",
        "minn = min ( minn and x3 ) ;"
      ],
      "err_line": 3,
      "err_msg": "expected primary-expression before ‘{’ token"
    },
    {
      "mod_line": [
        7,
        3,
        6,
        12
      ],
      "mod_code": [
        "maxx = max ( maxx ) ;",
        "while ( { cin >> x1 >> x2 >> x3 )",
        "minn = min ( minn and x3 ) ;",
        "res = min ( res and cal ) ;"
      ],
      "err_line": 3,
      "err_msg": "expected primary-expression before ‘{’ token"
    },
    {
      "mod_line": [
        7,
        3,
        12
      ],
      "mod_code": [
        "maxx = max ( maxx ) ;",
        "while ( { cin >> x1 >> x2 >> x3 )",
        "res = min ( res and cal ) ;"
      ],
      "err_line": 3,
      "err_msg": "expected primary-expression before ‘{’ token"
    },
    {
      "mod_line": [
        7,
        8
      ],
      "mod_code": [
        "maxx = max ( maxx ) ;",
        "maxx = max ( maxx ) ;"
      ],
      "err_line": 7,
      "err_msg": "no matching function for call to ‘max(int&)’"
    },
    {
      "mod_line": [
        7,
        8,
        6
      ],
      "mod_code": [
        "maxx = max ( maxx ) ;",
        "maxx = max ( maxx ) ;",
        "minn = min ( minn and x3 ) ;"
      ],
      "err_line": 6,
      "err_msg": "no matching function for call to ‘min(bool)’"
    },
    {
      "mod_line": [
        7,
        8,
        6,
        12
      ],
      "mod_code": [
        "maxx = max ( maxx ) ;",
        "maxx = max ( maxx ) ;",
        "minn = min ( minn and x3 ) ;",
        "res = min ( res and cal ) ;"
      ],
      "err_line": 6,
      "err_msg": "no matching function for call to ‘min(bool)’"
    },
    {
      "mod_line": [
        7,
        8,
        12
      ],
      "mod_code": [
        "maxx = max ( maxx ) ;",
        "maxx = max ( maxx ) ;",
        "res = min ( res and cal ) ;"
      ],
      "err_line": 7,
      "err_msg": "no matching function for call to ‘max(int&)’"
    },
    {
      "mod_line": [
        7,
        6
      ],
      "mod_code": [
        "maxx = max ( maxx ) ;",
        "minn = min ( minn and x3 ) ;"
      ],
      "err_line": 6,
      "err_msg": "no matching function for call to ‘min(bool)’"
    },
    {
      "mod_line": [
        7,
        6,
        12
      ],
      "mod_code": [
        "maxx = max ( maxx ) ;",
        "minn = min ( minn and x3 ) ;",
        "res = min ( res and cal ) ;"
      ],
      "err_line": 6,
      "err_msg": "no matching function for call to ‘min(bool)’"
    },
    {
      "mod_line": [
        7,
        12
      ],
      "mod_code": [
        "maxx = max ( maxx ) ;",
        "res = min ( res and cal ) ;"
      ],
      "err_line": 7,
      "err_msg": "no matching function for call to ‘max(int&)’"
    },
    {
      "mod_line": [
        3,
        8
      ],
      "mod_code": [
        "while ( { cin >> x1 >> x2 >> x3 )",
        "maxx = max ( maxx ) ;"
      ],
      "err_line": 3,
      "err_msg": "expected primary-expression before ‘{’ token"
    },
    {
      "mod_line": [
        3,
        8,
        6
      ],
      "mod_code": [
        "while ( { cin >> x1 >> x2 >> x3 )",
        "maxx = max ( maxx ) ;",
        "minn = min ( minn and x3 ) ;"
      ],
      "err_line": 3,
      "err_msg": "expected primary-expression before ‘{’ token"
    },
    {
      "mod_line": [
        3,
        8,
        6,
        12
      ],
      "mod_code": [
        "while ( { cin >> x1 >> x2 >> x3 )",
        "maxx = max ( maxx ) ;",
        "minn = min ( minn and x3 ) ;",
        "res = min ( res and cal ) ;"
      ],
      "err_line": 3,
      "err_msg": "expected primary-expression before ‘{’ token"
    },
    {
      "mod_line": [
        3,
        8,
        12
      ],
      "mod_code": [
        "while ( { cin >> x1 >> x2 >> x3 )",
        "maxx = max ( maxx ) ;",
        "res = min ( res and cal ) ;"
      ],
      "err_line": 3,
      "err_msg": "expected primary-expression before ‘{’ token"
    },
    {
      "mod_line": [
        3,
        6
      ],
      "mod_code": [
        "while ( { cin >> x1 >> x2 >> x3 )",
        "minn = min ( minn and x3 ) ;"
      ],
      "err_line": 3,
      "err_msg": "expected primary-expression before ‘{’ token"
    },
    {
      "mod_line": [
        3,
        6,
        12
      ],
      "mod_code": [
        "while ( { cin >> x1 >> x2 >> x3 )",
        "minn = min ( minn and x3 ) ;",
        "res = min ( res and cal ) ;"
      ],
      "err_line": 3,
      "err_msg": "expected primary-expression before ‘{’ token"
    },
    {
      "mod_line": [
        3,
        12
      ],
      "mod_code": [
        "while ( { cin >> x1 >> x2 >> x3 )",
        "res = min ( res and cal ) ;"
      ],
      "err_line": 3,
      "err_msg": "expected primary-expression before ‘{’ token"
    },
    {
      "mod_line": [
        8,
        6
      ],
      "mod_code": [
        "maxx = max ( maxx ) ;",
        "minn = min ( minn and x3 ) ;"
      ],
      "err_line": 6,
      "err_msg": "no matching function for call to ‘min(bool)’"
    },
    {
      "mod_line": [
        8,
        6,
        12
      ],
      "mod_code": [
        "maxx = max ( maxx ) ;",
        "minn = min ( minn and x3 ) ;",
        "res = min ( res and cal ) ;"
      ],
      "err_line": 6,
      "err_msg": "no matching function for call to ‘min(bool)’"
    },
    {
      "mod_line": [
        8,
        12
      ],
      "mod_code": [
        "maxx = max ( maxx ) ;",
        "res = min ( res and cal ) ;"
      ],
      "err_line": 8,
      "err_msg": "no matching function for call to ‘max(int&)’"
    },
    {
      "mod_line": [
        6,
        12
      ],
      "mod_code": [
        "minn = min ( minn and x3 ) ;",
        "res = min ( res and cal ) ;"
      ],
      "err_line": 6,
      "err_msg": "no matching function for call to ‘min(bool)’"
    }
  ]
}