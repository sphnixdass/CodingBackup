{
  "meta": {
    "index": 718,
    "hitid": "3KTZHH2ONI9KW8BOBDFPI40X744M80",
    "workerid": "AIWEXPJAU66D9",
    "probid": "467A",
    "subid": "48771444"
  },
  "lines": [
    {
      "line": 0,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 1,
      "text": "declare integer variables n , q , p , i and m",
      "code": "int n , q , p , i , m ;",
      "indent": 1
    },
    {
      "line": 2,
      "text": "read n",
      "code": "cin >> n ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "assign 0 to m",
      "code": "m = 0 ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "start for loop from i = 1 to n inclusive",
      "code": "for ( i = 1 ; i <= n ; i ++ )",
      "indent": 1
    },
    {
      "line": 5,
      "text": "while loop start",
      "code": "do",
      "indent": 2
    },
    {
      "line": 6,
      "text": "read variable p from the input",
      "code": "cin >> p ;",
      "indent": 3
    },
    {
      "line": 7,
      "text": "read q",
      "code": "cin >> q ;",
      "indent": 3
    },
    {
      "line": 8,
      "text": "go to the start of the loop if p > q",
      "code": "while ( p > q ) ;",
      "indent": 2
    },
    {
      "line": 9,
      "text": "if ( q - p ) > = 2 , change m to m + 1",
      "code": "if ( ( q - p ) >= 2 ) { m = m + 1 ; }",
      "indent": 2
    },
    {
      "line": 10,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 11,
      "text": "print m",
      "code": "cout << m << endl ;",
      "indent": 1
    },
    {
      "line": 12,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 13,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        5
      ],
      "mod_code": [
        "while ( start )"
      ],
      "err_line": 5,
      "err_msg": "‘start’ was not declared in this scope"
    },
    {
      "mod_line": [
        8
      ],
      "mod_code": [
        "if ( p > q ) continue ;"
      ],
      "err_line": 8,
      "err_msg": "expected ‘while’ before ‘(’ token"
    },
    {
      "mod_line": [
        3
      ],
      "mod_code": [
        "int m = 0 ;"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘int m’"
    },
    {
      "mod_line": [
        8
      ],
      "mod_code": [
        "while ( p > q ) continue ;"
      ],
      "err_line": 8,
      "err_msg": "expected ‘;’ before ‘continue’"
    },
    {
      "mod_line": [
        5,
        8
      ],
      "mod_code": [
        "while ( start )",
        "if ( p > q ) continue ;"
      ],
      "err_line": 5,
      "err_msg": "‘start’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        8,
        3
      ],
      "mod_code": [
        "while ( start )",
        "if ( p > q ) continue ;",
        "int m = 0 ;"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘int m’"
    },
    {
      "mod_line": [
        5,
        8,
        3,
        7
      ],
      "mod_code": [
        "while ( start )",
        "if ( p > q ) continue ;",
        "int m = 0 ;",
        "cout << q << endl ;"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘int m’"
    },
    {
      "mod_line": [
        5,
        8,
        3,
        6
      ],
      "mod_code": [
        "while ( start )",
        "if ( p > q ) continue ;",
        "int m = 0 ;",
        "p = getchar ( ) ;"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘int m’"
    },
    {
      "mod_line": [
        5,
        8,
        7
      ],
      "mod_code": [
        "while ( start )",
        "if ( p > q ) continue ;",
        "cout << q << endl ;"
      ],
      "err_line": 5,
      "err_msg": "‘start’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        8,
        7,
        6
      ],
      "mod_code": [
        "while ( start )",
        "if ( p > q ) continue ;",
        "cout << q << endl ;",
        "p = getchar ( ) ;"
      ],
      "err_line": 5,
      "err_msg": "‘start’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        8,
        6
      ],
      "mod_code": [
        "while ( start )",
        "if ( p > q ) continue ;",
        "p = getchar ( ) ;"
      ],
      "err_line": 5,
      "err_msg": "‘start’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        3
      ],
      "mod_code": [
        "while ( start )",
        "int m = 0 ;"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘int m’"
    },
    {
      "mod_line": [
        5,
        3,
        7
      ],
      "mod_code": [
        "while ( start )",
        "int m = 0 ;",
        "cout << q << endl ;"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘int m’"
    },
    {
      "mod_line": [
        5,
        3,
        7,
        6
      ],
      "mod_code": [
        "while ( start )",
        "int m = 0 ;",
        "cout << q << endl ;",
        "p = getchar ( ) ;"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘int m’"
    },
    {
      "mod_line": [
        5,
        3,
        7,
        8
      ],
      "mod_code": [
        "while ( start )",
        "int m = 0 ;",
        "cout << q << endl ;",
        "while ( p > q ) continue ;"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘int m’"
    },
    {
      "mod_line": [
        5,
        3,
        6
      ],
      "mod_code": [
        "while ( start )",
        "int m = 0 ;",
        "p = getchar ( ) ;"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘int m’"
    },
    {
      "mod_line": [
        5,
        3,
        6,
        8
      ],
      "mod_code": [
        "while ( start )",
        "int m = 0 ;",
        "p = getchar ( ) ;",
        "while ( p > q ) continue ;"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘int m’"
    },
    {
      "mod_line": [
        5,
        3,
        8
      ],
      "mod_code": [
        "while ( start )",
        "int m = 0 ;",
        "while ( p > q ) continue ;"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘int m’"
    },
    {
      "mod_line": [
        5,
        7
      ],
      "mod_code": [
        "while ( start )",
        "cout << q << endl ;"
      ],
      "err_line": 5,
      "err_msg": "‘start’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        7,
        6
      ],
      "mod_code": [
        "while ( start )",
        "cout << q << endl ;",
        "p = getchar ( ) ;"
      ],
      "err_line": 5,
      "err_msg": "‘start’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        7,
        6,
        8
      ],
      "mod_code": [
        "while ( start )",
        "cout << q << endl ;",
        "p = getchar ( ) ;",
        "while ( p > q ) continue ;"
      ],
      "err_line": 5,
      "err_msg": "‘start’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        7,
        8
      ],
      "mod_code": [
        "while ( start )",
        "cout << q << endl ;",
        "while ( p > q ) continue ;"
      ],
      "err_line": 5,
      "err_msg": "‘start’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        6
      ],
      "mod_code": [
        "while ( start )",
        "p = getchar ( ) ;"
      ],
      "err_line": 5,
      "err_msg": "‘start’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        6,
        8
      ],
      "mod_code": [
        "while ( start )",
        "p = getchar ( ) ;",
        "while ( p > q ) continue ;"
      ],
      "err_line": 5,
      "err_msg": "‘start’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        8
      ],
      "mod_code": [
        "while ( start )",
        "while ( p > q ) continue ;"
      ],
      "err_line": 5,
      "err_msg": "‘start’ was not declared in this scope"
    },
    {
      "mod_line": [
        8,
        3
      ],
      "mod_code": [
        "if ( p > q ) continue ;",
        "int m = 0 ;"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘int m’"
    },
    {
      "mod_line": [
        8,
        3,
        7
      ],
      "mod_code": [
        "if ( p > q ) continue ;",
        "int m = 0 ;",
        "cout << q << endl ;"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘int m’"
    },
    {
      "mod_line": [
        8,
        3,
        7,
        6
      ],
      "mod_code": [
        "if ( p > q ) continue ;",
        "int m = 0 ;",
        "cout << q << endl ;",
        "p = getchar ( ) ;"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘int m’"
    },
    {
      "mod_line": [
        8,
        3,
        6
      ],
      "mod_code": [
        "if ( p > q ) continue ;",
        "int m = 0 ;",
        "p = getchar ( ) ;"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘int m’"
    },
    {
      "mod_line": [
        8,
        7
      ],
      "mod_code": [
        "if ( p > q ) continue ;",
        "cout << q << endl ;"
      ],
      "err_line": 8,
      "err_msg": "expected ‘while’ before ‘(’ token"
    },
    {
      "mod_line": [
        8,
        7,
        6
      ],
      "mod_code": [
        "if ( p > q ) continue ;",
        "cout << q << endl ;",
        "p = getchar ( ) ;"
      ],
      "err_line": 8,
      "err_msg": "expected ‘while’ before ‘(’ token"
    },
    {
      "mod_line": [
        8,
        6
      ],
      "mod_code": [
        "if ( p > q ) continue ;",
        "p = getchar ( ) ;"
      ],
      "err_line": 8,
      "err_msg": "expected ‘while’ before ‘(’ token"
    },
    {
      "mod_line": [
        3,
        7
      ],
      "mod_code": [
        "int m = 0 ;",
        "cout << q << endl ;"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘int m’"
    },
    {
      "mod_line": [
        3,
        7,
        6
      ],
      "mod_code": [
        "int m = 0 ;",
        "cout << q << endl ;",
        "p = getchar ( ) ;"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘int m’"
    },
    {
      "mod_line": [
        3,
        7,
        6,
        8
      ],
      "mod_code": [
        "int m = 0 ;",
        "cout << q << endl ;",
        "p = getchar ( ) ;",
        "while ( p > q ) continue ;"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘int m’"
    },
    {
      "mod_line": [
        3,
        7,
        8
      ],
      "mod_code": [
        "int m = 0 ;",
        "cout << q << endl ;",
        "while ( p > q ) continue ;"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘int m’"
    },
    {
      "mod_line": [
        3,
        6
      ],
      "mod_code": [
        "int m = 0 ;",
        "p = getchar ( ) ;"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘int m’"
    },
    {
      "mod_line": [
        3,
        6,
        8
      ],
      "mod_code": [
        "int m = 0 ;",
        "p = getchar ( ) ;",
        "while ( p > q ) continue ;"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘int m’"
    },
    {
      "mod_line": [
        3,
        8
      ],
      "mod_code": [
        "int m = 0 ;",
        "while ( p > q ) continue ;"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘int m’"
    },
    {
      "mod_line": [
        7,
        6,
        8
      ],
      "mod_code": [
        "cout << q << endl ;",
        "p = getchar ( ) ;",
        "while ( p > q ) continue ;"
      ],
      "err_line": 8,
      "err_msg": "expected ‘;’ before ‘continue’"
    },
    {
      "mod_line": [
        7,
        8
      ],
      "mod_code": [
        "cout << q << endl ;",
        "while ( p > q ) continue ;"
      ],
      "err_line": 8,
      "err_msg": "expected ‘;’ before ‘continue’"
    },
    {
      "mod_line": [
        6,
        8
      ],
      "mod_code": [
        "p = getchar ( ) ;",
        "while ( p > q ) continue ;"
      ],
      "err_line": 8,
      "err_msg": "expected ‘;’ before ‘continue’"
    }
  ]
}