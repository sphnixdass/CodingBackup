{
  "meta": {
    "index": 655,
    "hitid": "31HLTCK4BLPIFABF83S4XD08MGWGVU",
    "workerid": "ACI8PUCF5OPDC",
    "probid": "25A",
    "subid": "48948881"
  },
  "lines": [
    {
      "line": 0,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 1,
      "text": "let n , i be integers",
      "code": "int n , i ;",
      "indent": 1
    },
    {
      "line": 2,
      "text": "read n",
      "code": "cin >> n ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "let arr be integer array with size n",
      "code": "int arr [ n ] ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "read n values into arr starting from arr [ 0 ] to arr [ n - 1 ]",
      "code": "for ( i = 0 ; i < n ; i ++ ) { cin >> arr [ i ] ; }",
      "indent": 1
    },
    {
      "line": 5,
      "text": "let counter1 , counter2 be integers with values 0 each",
      "code": "int counter1 = 0 , counter2 = 0 ;",
      "indent": 1
    },
    {
      "line": 6,
      "text": "for i = 0 to n - 1 with increment i",
      "code": "for ( i = 0 ; i < n ; i ++ )",
      "indent": 1
    },
    {
      "line": 7,
      "text": "if arr [ i ] is odd then",
      "code": "if ( arr [ i ] % 2 != 0 )",
      "indent": 2
    },
    {
      "line": 8,
      "text": "increment counter1",
      "code": "counter1 ++ ;",
      "indent": 3
    },
    {
      "line": 9,
      "text": "else do",
      "code": "else",
      "indent": 2
    },
    {
      "line": 10,
      "text": "increment counter2",
      "code": "counter2 ++ ;",
      "indent": 3
    },
    {
      "line": 11,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 12,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 13,
      "text": "if counter1 greater than counter2 then",
      "code": "if ( counter1 > counter2 )",
      "indent": 1
    },
    {
      "line": 14,
      "text": "for i = 0 to n - 1 with increment i",
      "code": "for ( i = 0 ; i < n ; i ++ )",
      "indent": 2
    },
    {
      "line": 15,
      "text": "if arr [ i ] is even then",
      "code": "if ( arr [ i ] % 2 == 0 )",
      "indent": 3
    },
    {
      "line": 16,
      "text": "print i + 1",
      "code": "cout << i + 1 << endl ;",
      "indent": 4
    },
    {
      "line": 17,
      "text": "break the for loop",
      "code": "break ;",
      "indent": 4
    },
    {
      "line": 18,
      "text": "DUMMY",
      "code": "}",
      "indent": 3
    },
    {
      "line": 19,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 20,
      "text": "else do the following",
      "code": "else",
      "indent": 1
    },
    {
      "line": 21,
      "text": "for i = 0 to n - 1 with increment i",
      "code": "for ( i = 0 ; i < n ; i ++ )",
      "indent": 2
    },
    {
      "line": 22,
      "text": "if arr [ i ] is odd then",
      "code": "if ( arr [ i ] % 2 != 0 )",
      "indent": 3
    },
    {
      "line": 23,
      "text": "print i + 1",
      "code": "cout << i + 1 << endl ;",
      "indent": 4
    },
    {
      "line": 24,
      "text": "break the for loop",
      "code": "break ;",
      "indent": 4
    },
    {
      "line": 25,
      "text": "DUMMY",
      "code": "}",
      "indent": 3
    },
    {
      "line": 26,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 27,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 28,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 29,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        2
      ],
      "mod_code": [
        "while ( cin >> n )"
      ],
      "err_line": 4,
      "err_msg": "‘arr’ was not declared in this scope"
    },
    {
      "mod_line": [
        3
      ],
      "mod_code": [
        "int arr [ n n ] ;"
      ],
      "err_line": 3,
      "err_msg": "expected ‘]’ before ‘n’"
    },
    {
      "mod_line": [
        9
      ],
      "mod_code": [
        "else do"
      ],
      "err_line": 12,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        13
      ],
      "mod_code": [
        "if ( counter1 > counter2 ) continue ;"
      ],
      "err_line": 13,
      "err_msg": "continue statement not within a loop"
    },
    {
      "mod_line": [
        4,
        3
      ],
      "mod_code": [
        "for ( int i = 1 ; i <= n ; i ++ ) { cin >> arr [ i ] >> arr [ n - 1 ] ; }",
        "int arr [ n n ] ;"
      ],
      "err_line": 3,
      "err_msg": "expected ‘]’ before ‘n’"
    },
    {
      "mod_line": [
        4,
        3,
        13
      ],
      "mod_code": [
        "for ( int i = 1 ; i <= n ; i ++ ) { cin >> arr [ i ] >> arr [ n - 1 ] ; }",
        "int arr [ n n ] ;",
        "if ( counter1 > counter2 ) continue ;"
      ],
      "err_line": 3,
      "err_msg": "expected ‘]’ before ‘n’"
    },
    {
      "mod_line": [
        4,
        3,
        13,
        2
      ],
      "mod_code": [
        "for ( int i = 1 ; i <= n ; i ++ ) { cin >> arr [ i ] >> arr [ n - 1 ] ; }",
        "int arr [ n n ] ;",
        "if ( counter1 > counter2 ) continue ;",
        "while ( cin >> n )"
      ],
      "err_line": 3,
      "err_msg": "expected ‘]’ before ‘n’"
    },
    {
      "mod_line": [
        4,
        3,
        13,
        9
      ],
      "mod_code": [
        "for ( int i = 1 ; i <= n ; i ++ ) { cin >> arr [ i ] >> arr [ n - 1 ] ; }",
        "int arr [ n n ] ;",
        "if ( counter1 > counter2 ) continue ;",
        "else do"
      ],
      "err_line": 3,
      "err_msg": "expected ‘]’ before ‘n’"
    },
    {
      "mod_line": [
        4,
        3,
        2
      ],
      "mod_code": [
        "for ( int i = 1 ; i <= n ; i ++ ) { cin >> arr [ i ] >> arr [ n - 1 ] ; }",
        "int arr [ n n ] ;",
        "while ( cin >> n )"
      ],
      "err_line": 3,
      "err_msg": "expected ‘]’ before ‘n’"
    },
    {
      "mod_line": [
        4,
        3,
        2,
        9
      ],
      "mod_code": [
        "for ( int i = 1 ; i <= n ; i ++ ) { cin >> arr [ i ] >> arr [ n - 1 ] ; }",
        "int arr [ n n ] ;",
        "while ( cin >> n )",
        "else do"
      ],
      "err_line": 3,
      "err_msg": "expected ‘]’ before ‘n’"
    },
    {
      "mod_line": [
        4,
        3,
        9
      ],
      "mod_code": [
        "for ( int i = 1 ; i <= n ; i ++ ) { cin >> arr [ i ] >> arr [ n - 1 ] ; }",
        "int arr [ n n ] ;",
        "else do"
      ],
      "err_line": 3,
      "err_msg": "expected ‘]’ before ‘n’"
    },
    {
      "mod_line": [
        4,
        13
      ],
      "mod_code": [
        "for ( int i = 1 ; i <= n ; i ++ ) { cin >> arr [ i ] >> arr [ n - 1 ] ; }",
        "if ( counter1 > counter2 ) continue ;"
      ],
      "err_line": 13,
      "err_msg": "continue statement not within a loop"
    },
    {
      "mod_line": [
        4,
        13,
        2
      ],
      "mod_code": [
        "for ( int i = 1 ; i <= n ; i ++ ) { cin >> arr [ i ] >> arr [ n - 1 ] ; }",
        "if ( counter1 > counter2 ) continue ;",
        "while ( cin >> n )"
      ],
      "err_line": 4,
      "err_msg": "‘arr’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        13,
        2,
        9
      ],
      "mod_code": [
        "for ( int i = 1 ; i <= n ; i ++ ) { cin >> arr [ i ] >> arr [ n - 1 ] ; }",
        "if ( counter1 > counter2 ) continue ;",
        "while ( cin >> n )",
        "else do"
      ],
      "err_line": 4,
      "err_msg": "‘arr’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        13,
        9
      ],
      "mod_code": [
        "for ( int i = 1 ; i <= n ; i ++ ) { cin >> arr [ i ] >> arr [ n - 1 ] ; }",
        "if ( counter1 > counter2 ) continue ;",
        "else do"
      ],
      "err_line": 12,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        4,
        2
      ],
      "mod_code": [
        "for ( int i = 1 ; i <= n ; i ++ ) { cin >> arr [ i ] >> arr [ n - 1 ] ; }",
        "while ( cin >> n )"
      ],
      "err_line": 4,
      "err_msg": "‘arr’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        2,
        9
      ],
      "mod_code": [
        "for ( int i = 1 ; i <= n ; i ++ ) { cin >> arr [ i ] >> arr [ n - 1 ] ; }",
        "while ( cin >> n )",
        "else do"
      ],
      "err_line": 4,
      "err_msg": "‘arr’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        9
      ],
      "mod_code": [
        "for ( int i = 1 ; i <= n ; i ++ ) { cin >> arr [ i ] >> arr [ n - 1 ] ; }",
        "else do"
      ],
      "err_line": 12,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        3,
        13
      ],
      "mod_code": [
        "int arr [ n n ] ;",
        "if ( counter1 > counter2 ) continue ;"
      ],
      "err_line": 3,
      "err_msg": "expected ‘]’ before ‘n’"
    },
    {
      "mod_line": [
        3,
        13,
        4
      ],
      "mod_code": [
        "int arr [ n n ] ;",
        "if ( counter1 > counter2 ) continue ;",
        "for ( int i = 0 ; i < n ; i ++ ) { cin >> arr [ i ] >> arr [ n - 1 ] ; }"
      ],
      "err_line": 3,
      "err_msg": "expected ‘]’ before ‘n’"
    },
    {
      "mod_line": [
        3,
        13,
        4,
        2
      ],
      "mod_code": [
        "int arr [ n n ] ;",
        "if ( counter1 > counter2 ) continue ;",
        "for ( int i = 0 ; i < n ; i ++ ) { cin >> arr [ i ] >> arr [ n - 1 ] ; }",
        "while ( cin >> n )"
      ],
      "err_line": 3,
      "err_msg": "expected ‘]’ before ‘n’"
    },
    {
      "mod_line": [
        3,
        13,
        4,
        9
      ],
      "mod_code": [
        "int arr [ n n ] ;",
        "if ( counter1 > counter2 ) continue ;",
        "for ( int i = 0 ; i < n ; i ++ ) { cin >> arr [ i ] >> arr [ n - 1 ] ; }",
        "else do"
      ],
      "err_line": 3,
      "err_msg": "expected ‘]’ before ‘n’"
    },
    {
      "mod_line": [
        3,
        13,
        2
      ],
      "mod_code": [
        "int arr [ n n ] ;",
        "if ( counter1 > counter2 ) continue ;",
        "while ( cin >> n )"
      ],
      "err_line": 3,
      "err_msg": "expected ‘]’ before ‘n’"
    },
    {
      "mod_line": [
        3,
        13,
        2,
        9
      ],
      "mod_code": [
        "int arr [ n n ] ;",
        "if ( counter1 > counter2 ) continue ;",
        "while ( cin >> n )",
        "else do"
      ],
      "err_line": 3,
      "err_msg": "expected ‘]’ before ‘n’"
    },
    {
      "mod_line": [
        3,
        13,
        9
      ],
      "mod_code": [
        "int arr [ n n ] ;",
        "if ( counter1 > counter2 ) continue ;",
        "else do"
      ],
      "err_line": 3,
      "err_msg": "expected ‘]’ before ‘n’"
    },
    {
      "mod_line": [
        3,
        4
      ],
      "mod_code": [
        "int arr [ n n ] ;",
        "for ( int i = 0 ; i < n ; i ++ ) { cin >> arr [ i ] >> arr [ n - 1 ] ; }"
      ],
      "err_line": 3,
      "err_msg": "expected ‘]’ before ‘n’"
    },
    {
      "mod_line": [
        3,
        4,
        2
      ],
      "mod_code": [
        "int arr [ n n ] ;",
        "for ( int i = 0 ; i < n ; i ++ ) { cin >> arr [ i ] >> arr [ n - 1 ] ; }",
        "while ( cin >> n )"
      ],
      "err_line": 3,
      "err_msg": "expected ‘]’ before ‘n’"
    },
    {
      "mod_line": [
        3,
        4,
        2,
        9
      ],
      "mod_code": [
        "int arr [ n n ] ;",
        "for ( int i = 0 ; i < n ; i ++ ) { cin >> arr [ i ] >> arr [ n - 1 ] ; }",
        "while ( cin >> n )",
        "else do"
      ],
      "err_line": 3,
      "err_msg": "expected ‘]’ before ‘n’"
    },
    {
      "mod_line": [
        3,
        4,
        9
      ],
      "mod_code": [
        "int arr [ n n ] ;",
        "for ( int i = 0 ; i < n ; i ++ ) { cin >> arr [ i ] >> arr [ n - 1 ] ; }",
        "else do"
      ],
      "err_line": 3,
      "err_msg": "expected ‘]’ before ‘n’"
    },
    {
      "mod_line": [
        3,
        2
      ],
      "mod_code": [
        "int arr [ n n ] ;",
        "while ( cin >> n )"
      ],
      "err_line": 3,
      "err_msg": "expected ‘]’ before ‘n’"
    },
    {
      "mod_line": [
        3,
        2,
        9
      ],
      "mod_code": [
        "int arr [ n n ] ;",
        "while ( cin >> n )",
        "else do"
      ],
      "err_line": 3,
      "err_msg": "expected ‘]’ before ‘n’"
    },
    {
      "mod_line": [
        3,
        9
      ],
      "mod_code": [
        "int arr [ n n ] ;",
        "else do"
      ],
      "err_line": 3,
      "err_msg": "expected ‘]’ before ‘n’"
    },
    {
      "mod_line": [
        13,
        4
      ],
      "mod_code": [
        "if ( counter1 > counter2 ) continue ;",
        "for ( int i = 0 ; i < n ; i ++ ) { cin >> arr [ i ] >> arr [ n - 1 ] ; }"
      ],
      "err_line": 13,
      "err_msg": "continue statement not within a loop"
    },
    {
      "mod_line": [
        13,
        4,
        2
      ],
      "mod_code": [
        "if ( counter1 > counter2 ) continue ;",
        "for ( int i = 0 ; i < n ; i ++ ) { cin >> arr [ i ] >> arr [ n - 1 ] ; }",
        "while ( cin >> n )"
      ],
      "err_line": 4,
      "err_msg": "‘arr’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        4,
        2,
        9
      ],
      "mod_code": [
        "if ( counter1 > counter2 ) continue ;",
        "for ( int i = 0 ; i < n ; i ++ ) { cin >> arr [ i ] >> arr [ n - 1 ] ; }",
        "while ( cin >> n )",
        "else do"
      ],
      "err_line": 4,
      "err_msg": "‘arr’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        4,
        9
      ],
      "mod_code": [
        "if ( counter1 > counter2 ) continue ;",
        "for ( int i = 0 ; i < n ; i ++ ) { cin >> arr [ i ] >> arr [ n - 1 ] ; }",
        "else do"
      ],
      "err_line": 12,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        13,
        2
      ],
      "mod_code": [
        "if ( counter1 > counter2 ) continue ;",
        "while ( cin >> n )"
      ],
      "err_line": 4,
      "err_msg": "‘arr’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        2,
        9
      ],
      "mod_code": [
        "if ( counter1 > counter2 ) continue ;",
        "while ( cin >> n )",
        "else do"
      ],
      "err_line": 4,
      "err_msg": "‘arr’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        9
      ],
      "mod_code": [
        "if ( counter1 > counter2 ) continue ;",
        "else do"
      ],
      "err_line": 12,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        4,
        2
      ],
      "mod_code": [
        "for ( int i = 0 ; i < n ; i ++ ) { cin >> arr [ i ] >> arr [ n - 1 ] ; }",
        "while ( cin >> n )"
      ],
      "err_line": 4,
      "err_msg": "‘arr’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        2,
        9
      ],
      "mod_code": [
        "for ( int i = 0 ; i < n ; i ++ ) { cin >> arr [ i ] >> arr [ n - 1 ] ; }",
        "while ( cin >> n )",
        "else do"
      ],
      "err_line": 4,
      "err_msg": "‘arr’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        9
      ],
      "mod_code": [
        "for ( int i = 0 ; i < n ; i ++ ) { cin >> arr [ i ] >> arr [ n - 1 ] ; }",
        "else do"
      ],
      "err_line": 12,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        2,
        9
      ],
      "mod_code": [
        "while ( cin >> n )",
        "else do"
      ],
      "err_line": 4,
      "err_msg": "‘arr’ was not declared in this scope"
    }
  ]
}