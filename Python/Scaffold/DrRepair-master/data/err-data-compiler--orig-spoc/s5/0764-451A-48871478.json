{
  "meta": {
    "index": 764,
    "hitid": "3NSCTNUR2ZH07PJXGCIHXTV6BXCA50",
    "workerid": "A1APYLD4DUK33J",
    "probid": "451A",
    "subid": "48871478"
  },
  "lines": [
    {
      "line": 0,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 1,
      "text": "create integers m , n , i with i = 1",
      "code": "int m , n , i = 1 ;",
      "indent": 1
    },
    {
      "line": 2,
      "text": "create string turn with turn = \" Akshat \"",
      "code": "string turn = \" Akshat \" ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "read n read m",
      "code": "cin >> n >> m ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "while i is less than m and i is less than n",
      "code": "while ( i < m && i < n )",
      "indent": 1
    },
    {
      "line": 5,
      "text": "if turn is \" Akshat \"",
      "code": "if ( turn == \" Akshat \" )",
      "indent": 2
    },
    {
      "line": 6,
      "text": "set turn to \" Malvika \"",
      "code": "turn = \" Malvika \" ;",
      "indent": 3
    },
    {
      "line": 7,
      "text": "else",
      "code": "else",
      "indent": 2
    },
    {
      "line": 8,
      "text": "set turn to \" Akshat \"",
      "code": "turn = \" Akshat \" ;",
      "indent": 3
    },
    {
      "line": 9,
      "text": "increment i",
      "code": "i ++ ;",
      "indent": 2
    },
    {
      "line": 10,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 11,
      "text": "print turn print newline",
      "code": "cout << turn << endl ;",
      "indent": 1
    },
    {
      "line": 12,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        3
      ],
      "mod_code": [
        "cin >> n read m ;"
      ],
      "err_line": 3,
      "err_msg": "expected ‘;’ before ‘read’"
    },
    {
      "mod_line": [
        1,
        6,
        2,
        3
      ],
      "mod_code": [
        "int m , n = 1 , i ;",
        "string turn = \" Malvika \" ;",
        "string turn = \" -1 \" ;",
        "cin >> n read m ;"
      ],
      "err_line": 3,
      "err_msg": "expected ‘;’ before ‘read’"
    },
    {
      "mod_line": [
        1,
        6,
        8,
        3
      ],
      "mod_code": [
        "int m , n = 1 , i ;",
        "string turn = \" Malvika \" ;",
        "string turn = \" Akshat \" ;",
        "cin >> n read m ;"
      ],
      "err_line": 3,
      "err_msg": "expected ‘;’ before ‘read’"
    },
    {
      "mod_line": [
        1,
        6,
        3
      ],
      "mod_code": [
        "int m , n = 1 , i ;",
        "string turn = \" Malvika \" ;",
        "cin >> n read m ;"
      ],
      "err_line": 3,
      "err_msg": "expected ‘;’ before ‘read’"
    },
    {
      "mod_line": [
        1,
        6,
        3,
        5
      ],
      "mod_code": [
        "int m , n = 1 , i ;",
        "string turn = \" Malvika \" ;",
        "cin >> n read m ;",
        "if ( turn == \" () \" )"
      ],
      "err_line": 3,
      "err_msg": "expected ‘;’ before ‘read’"
    },
    {
      "mod_line": [
        1,
        2,
        8,
        3
      ],
      "mod_code": [
        "int m , n = 1 , i ;",
        "string turn = \" -1 \" ;",
        "string turn = \" Akshat \" ;",
        "cin >> n read m ;"
      ],
      "err_line": 3,
      "err_msg": "expected ‘;’ before ‘read’"
    },
    {
      "mod_line": [
        1,
        2,
        3
      ],
      "mod_code": [
        "int m , n = 1 , i ;",
        "string turn = \" -1 \" ;",
        "cin >> n read m ;"
      ],
      "err_line": 3,
      "err_msg": "expected ‘;’ before ‘read’"
    },
    {
      "mod_line": [
        1,
        2,
        3,
        5
      ],
      "mod_code": [
        "int m , n = 1 , i ;",
        "string turn = \" -1 \" ;",
        "cin >> n read m ;",
        "if ( turn == \" () \" )"
      ],
      "err_line": 3,
      "err_msg": "expected ‘;’ before ‘read’"
    },
    {
      "mod_line": [
        1,
        8,
        3
      ],
      "mod_code": [
        "int m , n = 1 , i ;",
        "string turn = \" Akshat \" ;",
        "cin >> n read m ;"
      ],
      "err_line": 3,
      "err_msg": "expected ‘;’ before ‘read’"
    },
    {
      "mod_line": [
        1,
        8,
        3,
        5
      ],
      "mod_code": [
        "int m , n = 1 , i ;",
        "string turn = \" Akshat \" ;",
        "cin >> n read m ;",
        "if ( turn == \" () \" )"
      ],
      "err_line": 3,
      "err_msg": "expected ‘;’ before ‘read’"
    },
    {
      "mod_line": [
        1,
        3
      ],
      "mod_code": [
        "int m , n = 1 , i ;",
        "cin >> n read m ;"
      ],
      "err_line": 3,
      "err_msg": "expected ‘;’ before ‘read’"
    },
    {
      "mod_line": [
        1,
        3,
        5
      ],
      "mod_code": [
        "int m , n = 1 , i ;",
        "cin >> n read m ;",
        "if ( turn == \" () \" )"
      ],
      "err_line": 3,
      "err_msg": "expected ‘;’ before ‘read’"
    },
    {
      "mod_line": [
        6,
        2,
        8,
        3
      ],
      "mod_code": [
        "string turn = \" Malvika \" ;",
        "string turn = \" -1 \" ;",
        "string turn = \" Akshat \" ;",
        "cin >> n read m ;"
      ],
      "err_line": 3,
      "err_msg": "expected ‘;’ before ‘read’"
    },
    {
      "mod_line": [
        6,
        2,
        3
      ],
      "mod_code": [
        "string turn = \" Malvika \" ;",
        "string turn = \" -1 \" ;",
        "cin >> n read m ;"
      ],
      "err_line": 3,
      "err_msg": "expected ‘;’ before ‘read’"
    },
    {
      "mod_line": [
        6,
        2,
        3,
        5
      ],
      "mod_code": [
        "string turn = \" Malvika \" ;",
        "string turn = \" -1 \" ;",
        "cin >> n read m ;",
        "if ( turn == \" () \" )"
      ],
      "err_line": 3,
      "err_msg": "expected ‘;’ before ‘read’"
    },
    {
      "mod_line": [
        6,
        8,
        3
      ],
      "mod_code": [
        "string turn = \" Malvika \" ;",
        "string turn = \" Akshat \" ;",
        "cin >> n read m ;"
      ],
      "err_line": 3,
      "err_msg": "expected ‘;’ before ‘read’"
    },
    {
      "mod_line": [
        6,
        8,
        3,
        5
      ],
      "mod_code": [
        "string turn = \" Malvika \" ;",
        "string turn = \" Akshat \" ;",
        "cin >> n read m ;",
        "if ( turn == \" () \" )"
      ],
      "err_line": 3,
      "err_msg": "expected ‘;’ before ‘read’"
    },
    {
      "mod_line": [
        6,
        3
      ],
      "mod_code": [
        "string turn = \" Malvika \" ;",
        "cin >> n read m ;"
      ],
      "err_line": 3,
      "err_msg": "expected ‘;’ before ‘read’"
    },
    {
      "mod_line": [
        6,
        3,
        5
      ],
      "mod_code": [
        "string turn = \" Malvika \" ;",
        "cin >> n read m ;",
        "if ( turn == \" () \" )"
      ],
      "err_line": 3,
      "err_msg": "expected ‘;’ before ‘read’"
    },
    {
      "mod_line": [
        2,
        8,
        3
      ],
      "mod_code": [
        "string turn = \" -1 \" ;",
        "string turn = \" Akshat \" ;",
        "cin >> n read m ;"
      ],
      "err_line": 3,
      "err_msg": "expected ‘;’ before ‘read’"
    },
    {
      "mod_line": [
        2,
        8,
        3,
        5
      ],
      "mod_code": [
        "string turn = \" -1 \" ;",
        "string turn = \" Akshat \" ;",
        "cin >> n read m ;",
        "if ( turn == \" () \" )"
      ],
      "err_line": 3,
      "err_msg": "expected ‘;’ before ‘read’"
    },
    {
      "mod_line": [
        2,
        3
      ],
      "mod_code": [
        "string turn = \" -1 \" ;",
        "cin >> n read m ;"
      ],
      "err_line": 3,
      "err_msg": "expected ‘;’ before ‘read’"
    },
    {
      "mod_line": [
        2,
        3,
        5
      ],
      "mod_code": [
        "string turn = \" -1 \" ;",
        "cin >> n read m ;",
        "if ( turn == \" () \" )"
      ],
      "err_line": 3,
      "err_msg": "expected ‘;’ before ‘read’"
    },
    {
      "mod_line": [
        8,
        3
      ],
      "mod_code": [
        "string turn = \" Akshat \" ;",
        "cin >> n read m ;"
      ],
      "err_line": 3,
      "err_msg": "expected ‘;’ before ‘read’"
    },
    {
      "mod_line": [
        8,
        3,
        5
      ],
      "mod_code": [
        "string turn = \" Akshat \" ;",
        "cin >> n read m ;",
        "if ( turn == \" () \" )"
      ],
      "err_line": 3,
      "err_msg": "expected ‘;’ before ‘read’"
    },
    {
      "mod_line": [
        3,
        5
      ],
      "mod_code": [
        "cin >> n read m ;",
        "if ( turn == \" () \" )"
      ],
      "err_line": 3,
      "err_msg": "expected ‘;’ before ‘read’"
    }
  ]
}