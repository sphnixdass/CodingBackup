{
  "meta": {
    "index": 2288,
    "hitid": "3DWGDA5POFYLBVLCQK71QQW2KRAV16",
    "workerid": "A59A6LMCQRBL3",
    "probid": "6A",
    "subid": "42106269"
  },
  "lines": [
    {
      "line": 0,
      "text": "let a [ 5 ] and n be integers",
      "code": "int a [ 5 ] , n ;",
      "indent": 0
    },
    {
      "line": 1,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 2,
      "text": "read the 1 , 2 , 3 , 4 values in array a",
      "code": "cin >> a [ 1 ] >> a [ 2 ] >> a [ 3 ] >> a [ 4 ] ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "for loop reading until i is smaller or equal to 4",
      "code": "for ( int i = 1 ; i <= 4 ; i ++ )",
      "indent": 1
    },
    {
      "line": 4,
      "text": "for loop reading until j is smaller or equal to 4",
      "code": "for ( int j = 1 ; j <= 4 ; j ++ )",
      "indent": 2
    },
    {
      "line": 5,
      "text": "if j is equal to i , continue",
      "code": "if ( j == i ) continue ;",
      "indent": 3
    },
    {
      "line": 6,
      "text": "for loop reading while k is smaller or equal to j",
      "code": "for ( int k = 1 ; k <= 4 ; k ++ )",
      "indent": 3
    },
    {
      "line": 7,
      "text": "continuing if k equals i or k equals j",
      "code": "if ( k == i || k == j ) continue ;",
      "indent": 4
    },
    {
      "line": 8,
      "text": "if statement , if value i plus j in the array a is larger than k plus j is larger than i and if i plus k is larger than the j ' th value in array a",
      "code": "if ( a [ i ] + a [ j ] > a [ k ] && a [ j ] + a [ k ] > a [ i ] && a [ i ] + a [ k ] > a [ j ] )",
      "indent": 4
    },
    {
      "line": 9,
      "text": "print TRIANGLE and end line",
      "code": "cout << \" TRIANGLE \" << endl ;",
      "indent": 5
    },
    {
      "line": 10,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 5
    },
    {
      "line": 11,
      "text": "DUMMY",
      "code": "}",
      "indent": 4
    },
    {
      "line": 12,
      "text": "DUMMY",
      "code": "}",
      "indent": 3
    },
    {
      "line": 13,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 14,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 15,
      "text": "for i = 1 to 4 inclusive",
      "code": "for ( int i = 1 ; i <= 4 ; i ++ )",
      "indent": 1
    },
    {
      "line": 16,
      "text": "for j = 1 to 4 inclusive",
      "code": "for ( int j = 1 ; j <= 4 ; j ++ )",
      "indent": 2
    },
    {
      "line": 17,
      "text": "if j is equal to i , continue",
      "code": "if ( j == i ) continue ;",
      "indent": 3
    },
    {
      "line": 18,
      "text": "for k = 1 to 4 inclusive",
      "code": "for ( int k = 1 ; k <= 4 ; k ++ )",
      "indent": 3
    },
    {
      "line": 19,
      "text": "if k equals i OR k equals j , continue",
      "code": "if ( k == i || k == j ) continue ;",
      "indent": 4
    },
    {
      "line": 20,
      "text": "if i ' th value in array a plus j ' th is greater than or equal to k ' th value in array a and j ' th plus k ' th is greater than or equal to i ' th and if i ' th and k ' th are greater than or equal to j ' th value in array a",
      "code": "if ( a [ i ] + a [ j ] >= a [ k ] && a [ j ] + a [ k ] >= a [ i ] && a [ i ] + a [ k ] >= a [ j ] )",
      "indent": 4
    },
    {
      "line": 21,
      "text": "print SEGMENT , endline",
      "code": "cout << \" SEGMENT \" << endl ;",
      "indent": 5
    },
    {
      "line": 22,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 5
    },
    {
      "line": 23,
      "text": "DUMMY",
      "code": "}",
      "indent": 4
    },
    {
      "line": 24,
      "text": "DUMMY",
      "code": "}",
      "indent": 3
    },
    {
      "line": 25,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 26,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 27,
      "text": "print IMPOSSIBLE , endline",
      "code": "cout << \" IMPOSSIBLE \" << endl ;",
      "indent": 1
    },
    {
      "line": 28,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 29,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        2
      ],
      "mod_code": [
        "for ( int i = 0 ; i < 4 ; i ++ ) { cin >> a [ a ] >> 2 [ 3 ] >> a [ 3 ] >> a [ 3 ] ; }"
      ],
      "err_line": 2,
      "err_msg": "invalid types ‘int [5][int [5]]’ for array subscript"
    },
    {
      "mod_line": [
        3
      ],
      "mod_code": [
        "for ( ; i >= 4 ; i -- )"
      ],
      "err_line": 3,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        4
      ],
      "mod_code": [
        "for ( ; j >= 4 ; j -- )"
      ],
      "err_line": 4,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        6
      ],
      "mod_code": [
        "for ( ; k <= j ; k ++ )"
      ],
      "err_line": 6,
      "err_msg": "‘k’ was not declared in this scope"
    },
    {
      "mod_line": [
        9
      ],
      "mod_code": [
        "cout << TRIANGLE << endl ;"
      ],
      "err_line": 9,
      "err_msg": "‘TRIANGLE’ was not declared in this scope"
    },
    {
      "mod_line": [
        21
      ],
      "mod_code": [
        "cout << SEGMENT << endl ;"
      ],
      "err_line": 21,
      "err_msg": "‘SEGMENT’ was not declared in this scope"
    },
    {
      "mod_line": [
        27
      ],
      "mod_code": [
        "cout << IMPOSSIBLE << endl ;"
      ],
      "err_line": 27,
      "err_msg": "‘IMPOSSIBLE’ was not declared in this scope"
    },
    {
      "mod_line": [
        2
      ],
      "mod_code": [
        "for ( int i = 0 ; i < 4 ; i ++ ) { cin >> a [ a ] >> a [ 3 ] >> a [ 3 ] >> a [ 3 ] ; }"
      ],
      "err_line": 2,
      "err_msg": "invalid types ‘int [5][int [5]]’ for array subscript"
    },
    {
      "mod_line": [
        3
      ],
      "mod_code": [
        "for ( ; i <= 4 ; i ++ )"
      ],
      "err_line": 3,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        4
      ],
      "mod_code": [
        "for ( ; j <= 4 ; j ++ )"
      ],
      "err_line": 4,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        6
      ],
      "mod_code": [
        "for ( ; k <= j ; i ++ )"
      ],
      "err_line": 6,
      "err_msg": "‘k’ was not declared in this scope"
    },
    {
      "mod_line": [
        7
      ],
      "mod_code": [
        "else if ( k == i || k == j )"
      ],
      "err_line": 7,
      "err_msg": "‘else’ without a previous ‘if’"
    },
    {
      "mod_line": [
        8
      ],
      "mod_code": [
        "for ( ; a < k ; a ++ )"
      ],
      "err_line": 8,
      "err_msg": "ISO C++ forbids comparison between pointer and integer [-fpermissive]"
    },
    {
      "mod_line": [
        9
      ],
      "mod_code": [
        "cout << TRIANGLE << \" \\n \" ;"
      ],
      "err_line": 9,
      "err_msg": "‘TRIANGLE’ was not declared in this scope"
    },
    {
      "mod_line": [
        15
      ],
      "mod_code": [
        "for ( i = 1 ; i <= 4 ; i ++ )"
      ],
      "err_line": 15,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        16
      ],
      "mod_code": [
        "for ( j = 1 ; j <= 4 ; j ++ )"
      ],
      "err_line": 16,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        18
      ],
      "mod_code": [
        "for ( k = 1 ; k <= 4 ; k ++ )"
      ],
      "err_line": 18,
      "err_msg": "‘k’ was not declared in this scope"
    },
    {
      "mod_line": [
        20
      ],
      "mod_code": [
        "do"
      ],
      "err_line": 24,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        21
      ],
      "mod_code": [
        "cout << SEGMENT << ' \\n ' ;"
      ],
      "err_line": 21,
      "err_msg": "‘SEGMENT’ was not declared in this scope"
    },
    {
      "mod_line": [
        27
      ],
      "mod_code": [
        "cout << IMPOSSIBLE << ' \\n ' ;"
      ],
      "err_line": 27,
      "err_msg": "‘IMPOSSIBLE’ was not declared in this scope"
    },
    {
      "mod_line": [
        2,
        3
      ],
      "mod_code": [
        "for ( int i = 0 ; i < 4 ; i ++ ) { cin >> a [ a ] >> 2 [ 3 ] >> a [ 3 ] >> a [ 3 ] ; }",
        "for ( ; i >= 4 ; i -- )"
      ],
      "err_line": 2,
      "err_msg": "invalid types ‘int [5][int [5]]’ for array subscript"
    },
    {
      "mod_line": [
        2,
        3,
        4
      ],
      "mod_code": [
        "for ( int i = 0 ; i < 4 ; i ++ ) { cin >> a [ a ] >> 2 [ 3 ] >> a [ 3 ] >> a [ 3 ] ; }",
        "for ( ; i >= 4 ; i -- )",
        "for ( ; j >= 4 ; j -- )"
      ],
      "err_line": 2,
      "err_msg": "invalid types ‘int [5][int [5]]’ for array subscript"
    },
    {
      "mod_line": [
        2,
        3,
        4,
        6
      ],
      "mod_code": [
        "for ( int i = 0 ; i < 4 ; i ++ ) { cin >> a [ a ] >> 2 [ 3 ] >> a [ 3 ] >> a [ 3 ] ; }",
        "for ( ; i >= 4 ; i -- )",
        "for ( ; j >= 4 ; j -- )",
        "for ( ; k <= j ; k ++ )"
      ],
      "err_line": 2,
      "err_msg": "invalid types ‘int [5][int [5]]’ for array subscript"
    },
    {
      "mod_line": [
        2,
        3,
        4,
        7
      ],
      "mod_code": [
        "for ( int i = 0 ; i < 4 ; i ++ ) { cin >> a [ a ] >> 2 [ 3 ] >> a [ 3 ] >> a [ 3 ] ; }",
        "for ( ; i >= 4 ; i -- )",
        "for ( ; j >= 4 ; j -- )",
        "if ( k == i || k == j )"
      ],
      "err_line": 2,
      "err_msg": "invalid types ‘int [5][int [5]]’ for array subscript"
    },
    {
      "mod_line": [
        2,
        3,
        4,
        8
      ],
      "mod_code": [
        "for ( int i = 0 ; i < 4 ; i ++ ) { cin >> a [ a ] >> 2 [ 3 ] >> a [ 3 ] >> a [ 3 ] ; }",
        "for ( ; i >= 4 ; i -- )",
        "for ( ; j >= 4 ; j -- )",
        "else"
      ],
      "err_line": 2,
      "err_msg": "invalid types ‘int [5][int [5]]’ for array subscript"
    },
    {
      "mod_line": [
        2,
        3,
        4,
        9
      ],
      "mod_code": [
        "for ( int i = 0 ; i < 4 ; i ++ ) { cin >> a [ a ] >> 2 [ 3 ] >> a [ 3 ] >> a [ 3 ] ; }",
        "for ( ; i >= 4 ; i -- )",
        "for ( ; j >= 4 ; j -- )",
        "cout << TRIANGLE << endl ;"
      ],
      "err_line": 2,
      "err_msg": "invalid types ‘int [5][int [5]]’ for array subscript"
    },
    {
      "mod_line": [
        2,
        3,
        4,
        20
      ],
      "mod_code": [
        "for ( int i = 0 ; i < 4 ; i ++ ) { cin >> a [ a ] >> 2 [ 3 ] >> a [ 3 ] >> a [ 3 ] ; }",
        "for ( ; i >= 4 ; i -- )",
        "for ( ; j >= 4 ; j -- )",
        "else"
      ],
      "err_line": 2,
      "err_msg": "invalid types ‘int [5][int [5]]’ for array subscript"
    },
    {
      "mod_line": [
        2,
        3,
        4,
        21
      ],
      "mod_code": [
        "for ( int i = 0 ; i < 4 ; i ++ ) { cin >> a [ a ] >> 2 [ 3 ] >> a [ 3 ] >> a [ 3 ] ; }",
        "for ( ; i >= 4 ; i -- )",
        "for ( ; j >= 4 ; j -- )",
        "cout << SEGMENT << endl ;"
      ],
      "err_line": 2,
      "err_msg": "invalid types ‘int [5][int [5]]’ for array subscript"
    },
    {
      "mod_line": [
        2,
        3,
        4,
        27
      ],
      "mod_code": [
        "for ( int i = 0 ; i < 4 ; i ++ ) { cin >> a [ a ] >> 2 [ 3 ] >> a [ 3 ] >> a [ 3 ] ; }",
        "for ( ; i >= 4 ; i -- )",
        "for ( ; j >= 4 ; j -- )",
        "cout << IMPOSSIBLE << endl ;"
      ],
      "err_line": 2,
      "err_msg": "invalid types ‘int [5][int [5]]’ for array subscript"
    },
    {
      "mod_line": [
        2,
        3,
        6
      ],
      "mod_code": [
        "for ( int i = 0 ; i < 4 ; i ++ ) { cin >> a [ a ] >> 2 [ 3 ] >> a [ 3 ] >> a [ 3 ] ; }",
        "for ( ; i >= 4 ; i -- )",
        "for ( ; k <= j ; k ++ )"
      ],
      "err_line": 2,
      "err_msg": "invalid types ‘int [5][int [5]]’ for array subscript"
    },
    {
      "mod_line": [
        2,
        3,
        6,
        7
      ],
      "mod_code": [
        "for ( int i = 0 ; i < 4 ; i ++ ) { cin >> a [ a ] >> 2 [ 3 ] >> a [ 3 ] >> a [ 3 ] ; }",
        "for ( ; i >= 4 ; i -- )",
        "for ( ; k <= j ; k ++ )",
        "if ( k == i || k == j )"
      ],
      "err_line": 2,
      "err_msg": "invalid types ‘int [5][int [5]]’ for array subscript"
    },
    {
      "mod_line": [
        2,
        3,
        6,
        8
      ],
      "mod_code": [
        "for ( int i = 0 ; i < 4 ; i ++ ) { cin >> a [ a ] >> 2 [ 3 ] >> a [ 3 ] >> a [ 3 ] ; }",
        "for ( ; i >= 4 ; i -- )",
        "for ( ; k <= j ; k ++ )",
        "else"
      ],
      "err_line": 2,
      "err_msg": "invalid types ‘int [5][int [5]]’ for array subscript"
    },
    {
      "mod_line": [
        2,
        3,
        6,
        9
      ],
      "mod_code": [
        "for ( int i = 0 ; i < 4 ; i ++ ) { cin >> a [ a ] >> 2 [ 3 ] >> a [ 3 ] >> a [ 3 ] ; }",
        "for ( ; i >= 4 ; i -- )",
        "for ( ; k <= j ; k ++ )",
        "cout << TRIANGLE << endl ;"
      ],
      "err_line": 2,
      "err_msg": "invalid types ‘int [5][int [5]]’ for array subscript"
    },
    {
      "mod_line": [
        2,
        3,
        6,
        20
      ],
      "mod_code": [
        "for ( int i = 0 ; i < 4 ; i ++ ) { cin >> a [ a ] >> 2 [ 3 ] >> a [ 3 ] >> a [ 3 ] ; }",
        "for ( ; i >= 4 ; i -- )",
        "for ( ; k <= j ; k ++ )",
        "else"
      ],
      "err_line": 2,
      "err_msg": "invalid types ‘int [5][int [5]]’ for array subscript"
    },
    {
      "mod_line": [
        2,
        3,
        6,
        21
      ],
      "mod_code": [
        "for ( int i = 0 ; i < 4 ; i ++ ) { cin >> a [ a ] >> 2 [ 3 ] >> a [ 3 ] >> a [ 3 ] ; }",
        "for ( ; i >= 4 ; i -- )",
        "for ( ; k <= j ; k ++ )",
        "cout << SEGMENT << endl ;"
      ],
      "err_line": 2,
      "err_msg": "invalid types ‘int [5][int [5]]’ for array subscript"
    },
    {
      "mod_line": [
        2,
        3,
        6,
        27
      ],
      "mod_code": [
        "for ( int i = 0 ; i < 4 ; i ++ ) { cin >> a [ a ] >> 2 [ 3 ] >> a [ 3 ] >> a [ 3 ] ; }",
        "for ( ; i >= 4 ; i -- )",
        "for ( ; k <= j ; k ++ )",
        "cout << IMPOSSIBLE << endl ;"
      ],
      "err_line": 2,
      "err_msg": "invalid types ‘int [5][int [5]]’ for array subscript"
    },
    {
      "mod_line": [
        2,
        3,
        7
      ],
      "mod_code": [
        "for ( int i = 0 ; i < 4 ; i ++ ) { cin >> a [ a ] >> 2 [ 3 ] >> a [ 3 ] >> a [ 3 ] ; }",
        "for ( ; i >= 4 ; i -- )",
        "if ( k == i || k == j )"
      ],
      "err_line": 2,
      "err_msg": "invalid types ‘int [5][int [5]]’ for array subscript"
    },
    {
      "mod_line": [
        2,
        3,
        7,
        8
      ],
      "mod_code": [
        "for ( int i = 0 ; i < 4 ; i ++ ) { cin >> a [ a ] >> 2 [ 3 ] >> a [ 3 ] >> a [ 3 ] ; }",
        "for ( ; i >= 4 ; i -- )",
        "if ( k == i || k == j )",
        "else"
      ],
      "err_line": 2,
      "err_msg": "invalid types ‘int [5][int [5]]’ for array subscript"
    },
    {
      "mod_line": [
        2,
        3,
        7,
        9
      ],
      "mod_code": [
        "for ( int i = 0 ; i < 4 ; i ++ ) { cin >> a [ a ] >> 2 [ 3 ] >> a [ 3 ] >> a [ 3 ] ; }",
        "for ( ; i >= 4 ; i -- )",
        "if ( k == i || k == j )",
        "cout << TRIANGLE << endl ;"
      ],
      "err_line": 2,
      "err_msg": "invalid types ‘int [5][int [5]]’ for array subscript"
    },
    {
      "mod_line": [
        2,
        3,
        7,
        20
      ],
      "mod_code": [
        "for ( int i = 0 ; i < 4 ; i ++ ) { cin >> a [ a ] >> 2 [ 3 ] >> a [ 3 ] >> a [ 3 ] ; }",
        "for ( ; i >= 4 ; i -- )",
        "if ( k == i || k == j )",
        "else"
      ],
      "err_line": 2,
      "err_msg": "invalid types ‘int [5][int [5]]’ for array subscript"
    },
    {
      "mod_line": [
        2,
        3,
        7,
        21
      ],
      "mod_code": [
        "for ( int i = 0 ; i < 4 ; i ++ ) { cin >> a [ a ] >> 2 [ 3 ] >> a [ 3 ] >> a [ 3 ] ; }",
        "for ( ; i >= 4 ; i -- )",
        "if ( k == i || k == j )",
        "cout << SEGMENT << endl ;"
      ],
      "err_line": 2,
      "err_msg": "invalid types ‘int [5][int [5]]’ for array subscript"
    },
    {
      "mod_line": [
        2,
        3,
        7,
        27
      ],
      "mod_code": [
        "for ( int i = 0 ; i < 4 ; i ++ ) { cin >> a [ a ] >> 2 [ 3 ] >> a [ 3 ] >> a [ 3 ] ; }",
        "for ( ; i >= 4 ; i -- )",
        "if ( k == i || k == j )",
        "cout << IMPOSSIBLE << endl ;"
      ],
      "err_line": 2,
      "err_msg": "invalid types ‘int [5][int [5]]’ for array subscript"
    },
    {
      "mod_line": [
        2,
        3,
        8
      ],
      "mod_code": [
        "for ( int i = 0 ; i < 4 ; i ++ ) { cin >> a [ a ] >> 2 [ 3 ] >> a [ 3 ] >> a [ 3 ] ; }",
        "for ( ; i >= 4 ; i -- )",
        "else"
      ],
      "err_line": 2,
      "err_msg": "invalid types ‘int [5][int [5]]’ for array subscript"
    },
    {
      "mod_line": [
        2,
        3,
        8,
        9
      ],
      "mod_code": [
        "for ( int i = 0 ; i < 4 ; i ++ ) { cin >> a [ a ] >> 2 [ 3 ] >> a [ 3 ] >> a [ 3 ] ; }",
        "for ( ; i >= 4 ; i -- )",
        "else",
        "cout << TRIANGLE << endl ;"
      ],
      "err_line": 2,
      "err_msg": "invalid types ‘int [5][int [5]]’ for array subscript"
    },
    {
      "mod_line": [
        2,
        3,
        8,
        20
      ],
      "mod_code": [
        "for ( int i = 0 ; i < 4 ; i ++ ) { cin >> a [ a ] >> 2 [ 3 ] >> a [ 3 ] >> a [ 3 ] ; }",
        "for ( ; i >= 4 ; i -- )",
        "else",
        "else"
      ],
      "err_line": 2,
      "err_msg": "invalid types ‘int [5][int [5]]’ for array subscript"
    },
    {
      "mod_line": [
        2,
        3,
        8,
        21
      ],
      "mod_code": [
        "for ( int i = 0 ; i < 4 ; i ++ ) { cin >> a [ a ] >> 2 [ 3 ] >> a [ 3 ] >> a [ 3 ] ; }",
        "for ( ; i >= 4 ; i -- )",
        "else",
        "cout << SEGMENT << endl ;"
      ],
      "err_line": 2,
      "err_msg": "invalid types ‘int [5][int [5]]’ for array subscript"
    },
    {
      "mod_line": [
        2,
        3,
        8,
        27
      ],
      "mod_code": [
        "for ( int i = 0 ; i < 4 ; i ++ ) { cin >> a [ a ] >> 2 [ 3 ] >> a [ 3 ] >> a [ 3 ] ; }",
        "for ( ; i >= 4 ; i -- )",
        "else",
        "cout << IMPOSSIBLE << endl ;"
      ],
      "err_line": 2,
      "err_msg": "invalid types ‘int [5][int [5]]’ for array subscript"
    },
    {
      "mod_line": [
        2,
        3,
        9
      ],
      "mod_code": [
        "for ( int i = 0 ; i < 4 ; i ++ ) { cin >> a [ a ] >> 2 [ 3 ] >> a [ 3 ] >> a [ 3 ] ; }",
        "for ( ; i >= 4 ; i -- )",
        "cout << TRIANGLE << endl ;"
      ],
      "err_line": 2,
      "err_msg": "invalid types ‘int [5][int [5]]’ for array subscript"
    },
    {
      "mod_line": [
        2,
        3,
        9,
        20
      ],
      "mod_code": [
        "for ( int i = 0 ; i < 4 ; i ++ ) { cin >> a [ a ] >> 2 [ 3 ] >> a [ 3 ] >> a [ 3 ] ; }",
        "for ( ; i >= 4 ; i -- )",
        "cout << TRIANGLE << endl ;",
        "else"
      ],
      "err_line": 2,
      "err_msg": "invalid types ‘int [5][int [5]]’ for array subscript"
    },
    {
      "mod_line": [
        2,
        3,
        9,
        21
      ],
      "mod_code": [
        "for ( int i = 0 ; i < 4 ; i ++ ) { cin >> a [ a ] >> 2 [ 3 ] >> a [ 3 ] >> a [ 3 ] ; }",
        "for ( ; i >= 4 ; i -- )",
        "cout << TRIANGLE << endl ;",
        "cout << SEGMENT << endl ;"
      ],
      "err_line": 2,
      "err_msg": "invalid types ‘int [5][int [5]]’ for array subscript"
    },
    {
      "mod_line": [
        2,
        3,
        9,
        27
      ],
      "mod_code": [
        "for ( int i = 0 ; i < 4 ; i ++ ) { cin >> a [ a ] >> 2 [ 3 ] >> a [ 3 ] >> a [ 3 ] ; }",
        "for ( ; i >= 4 ; i -- )",
        "cout << TRIANGLE << endl ;",
        "cout << IMPOSSIBLE << endl ;"
      ],
      "err_line": 2,
      "err_msg": "invalid types ‘int [5][int [5]]’ for array subscript"
    },
    {
      "mod_line": [
        2,
        3,
        20
      ],
      "mod_code": [
        "for ( int i = 0 ; i < 4 ; i ++ ) { cin >> a [ a ] >> 2 [ 3 ] >> a [ 3 ] >> a [ 3 ] ; }",
        "for ( ; i >= 4 ; i -- )",
        "else"
      ],
      "err_line": 2,
      "err_msg": "invalid types ‘int [5][int [5]]’ for array subscript"
    },
    {
      "mod_line": [
        2,
        3,
        20,
        21
      ],
      "mod_code": [
        "for ( int i = 0 ; i < 4 ; i ++ ) { cin >> a [ a ] >> 2 [ 3 ] >> a [ 3 ] >> a [ 3 ] ; }",
        "for ( ; i >= 4 ; i -- )",
        "else",
        "cout << SEGMENT << endl ;"
      ],
      "err_line": 2,
      "err_msg": "invalid types ‘int [5][int [5]]’ for array subscript"
    },
    {
      "mod_line": [
        2,
        3,
        20,
        27
      ],
      "mod_code": [
        "for ( int i = 0 ; i < 4 ; i ++ ) { cin >> a [ a ] >> 2 [ 3 ] >> a [ 3 ] >> a [ 3 ] ; }",
        "for ( ; i >= 4 ; i -- )",
        "else",
        "cout << IMPOSSIBLE << endl ;"
      ],
      "err_line": 2,
      "err_msg": "invalid types ‘int [5][int [5]]’ for array subscript"
    },
    {
      "mod_line": [
        2,
        3,
        21
      ],
      "mod_code": [
        "for ( int i = 0 ; i < 4 ; i ++ ) { cin >> a [ a ] >> 2 [ 3 ] >> a [ 3 ] >> a [ 3 ] ; }",
        "for ( ; i >= 4 ; i -- )",
        "cout << SEGMENT << endl ;"
      ],
      "err_line": 2,
      "err_msg": "invalid types ‘int [5][int [5]]’ for array subscript"
    },
    {
      "mod_line": [
        2,
        3,
        21,
        27
      ],
      "mod_code": [
        "for ( int i = 0 ; i < 4 ; i ++ ) { cin >> a [ a ] >> 2 [ 3 ] >> a [ 3 ] >> a [ 3 ] ; }",
        "for ( ; i >= 4 ; i -- )",
        "cout << SEGMENT << endl ;",
        "cout << IMPOSSIBLE << endl ;"
      ],
      "err_line": 2,
      "err_msg": "invalid types ‘int [5][int [5]]’ for array subscript"
    },
    {
      "mod_line": [
        2,
        3,
        27
      ],
      "mod_code": [
        "for ( int i = 0 ; i < 4 ; i ++ ) { cin >> a [ a ] >> 2 [ 3 ] >> a [ 3 ] >> a [ 3 ] ; }",
        "for ( ; i >= 4 ; i -- )",
        "cout << IMPOSSIBLE << endl ;"
      ],
      "err_line": 2,
      "err_msg": "invalid types ‘int [5][int [5]]’ for array subscript"
    },
    {
      "mod_line": [
        2,
        4
      ],
      "mod_code": [
        "for ( int i = 0 ; i < 4 ; i ++ ) { cin >> a [ a ] >> 2 [ 3 ] >> a [ 3 ] >> a [ 3 ] ; }",
        "for ( ; j >= 4 ; j -- )"
      ],
      "err_line": 2,
      "err_msg": "invalid types ‘int [5][int [5]]’ for array subscript"
    },
    {
      "mod_line": [
        2,
        4,
        6
      ],
      "mod_code": [
        "for ( int i = 0 ; i < 4 ; i ++ ) { cin >> a [ a ] >> 2 [ 3 ] >> a [ 3 ] >> a [ 3 ] ; }",
        "for ( ; j >= 4 ; j -- )",
        "for ( ; k <= j ; k ++ )"
      ],
      "err_line": 2,
      "err_msg": "invalid types ‘int [5][int [5]]’ for array subscript"
    },
    {
      "mod_line": [
        2,
        4,
        6,
        7
      ],
      "mod_code": [
        "for ( int i = 0 ; i < 4 ; i ++ ) { cin >> a [ a ] >> 2 [ 3 ] >> a [ 3 ] >> a [ 3 ] ; }",
        "for ( ; j >= 4 ; j -- )",
        "for ( ; k <= j ; k ++ )",
        "if ( k == i || k == j )"
      ],
      "err_line": 2,
      "err_msg": "invalid types ‘int [5][int [5]]’ for array subscript"
    },
    {
      "mod_line": [
        2,
        4,
        6,
        8
      ],
      "mod_code": [
        "for ( int i = 0 ; i < 4 ; i ++ ) { cin >> a [ a ] >> 2 [ 3 ] >> a [ 3 ] >> a [ 3 ] ; }",
        "for ( ; j >= 4 ; j -- )",
        "for ( ; k <= j ; k ++ )",
        "else"
      ],
      "err_line": 2,
      "err_msg": "invalid types ‘int [5][int [5]]’ for array subscript"
    },
    {
      "mod_line": [
        2,
        4,
        6,
        9
      ],
      "mod_code": [
        "for ( int i = 0 ; i < 4 ; i ++ ) { cin >> a [ a ] >> 2 [ 3 ] >> a [ 3 ] >> a [ 3 ] ; }",
        "for ( ; j >= 4 ; j -- )",
        "for ( ; k <= j ; k ++ )",
        "cout << TRIANGLE << endl ;"
      ],
      "err_line": 2,
      "err_msg": "invalid types ‘int [5][int [5]]’ for array subscript"
    },
    {
      "mod_line": [
        2,
        4,
        6,
        20
      ],
      "mod_code": [
        "for ( int i = 0 ; i < 4 ; i ++ ) { cin >> a [ a ] >> 2 [ 3 ] >> a [ 3 ] >> a [ 3 ] ; }",
        "for ( ; j >= 4 ; j -- )",
        "for ( ; k <= j ; k ++ )",
        "else"
      ],
      "err_line": 2,
      "err_msg": "invalid types ‘int [5][int [5]]’ for array subscript"
    },
    {
      "mod_line": [
        2,
        4,
        6,
        21
      ],
      "mod_code": [
        "for ( int i = 0 ; i < 4 ; i ++ ) { cin >> a [ a ] >> 2 [ 3 ] >> a [ 3 ] >> a [ 3 ] ; }",
        "for ( ; j >= 4 ; j -- )",
        "for ( ; k <= j ; k ++ )",
        "cout << SEGMENT << endl ;"
      ],
      "err_line": 2,
      "err_msg": "invalid types ‘int [5][int [5]]’ for array subscript"
    },
    {
      "mod_line": [
        2,
        4,
        6,
        27
      ],
      "mod_code": [
        "for ( int i = 0 ; i < 4 ; i ++ ) { cin >> a [ a ] >> 2 [ 3 ] >> a [ 3 ] >> a [ 3 ] ; }",
        "for ( ; j >= 4 ; j -- )",
        "for ( ; k <= j ; k ++ )",
        "cout << IMPOSSIBLE << endl ;"
      ],
      "err_line": 2,
      "err_msg": "invalid types ‘int [5][int [5]]’ for array subscript"
    },
    {
      "mod_line": [
        2,
        4,
        7
      ],
      "mod_code": [
        "for ( int i = 0 ; i < 4 ; i ++ ) { cin >> a [ a ] >> 2 [ 3 ] >> a [ 3 ] >> a [ 3 ] ; }",
        "for ( ; j >= 4 ; j -- )",
        "if ( k == i || k == j )"
      ],
      "err_line": 2,
      "err_msg": "invalid types ‘int [5][int [5]]’ for array subscript"
    },
    {
      "mod_line": [
        2,
        4,
        7,
        8
      ],
      "mod_code": [
        "for ( int i = 0 ; i < 4 ; i ++ ) { cin >> a [ a ] >> 2 [ 3 ] >> a [ 3 ] >> a [ 3 ] ; }",
        "for ( ; j >= 4 ; j -- )",
        "if ( k == i || k == j )",
        "else"
      ],
      "err_line": 2,
      "err_msg": "invalid types ‘int [5][int [5]]’ for array subscript"
    },
    {
      "mod_line": [
        2,
        4,
        7,
        9
      ],
      "mod_code": [
        "for ( int i = 0 ; i < 4 ; i ++ ) { cin >> a [ a ] >> 2 [ 3 ] >> a [ 3 ] >> a [ 3 ] ; }",
        "for ( ; j >= 4 ; j -- )",
        "if ( k == i || k == j )",
        "cout << TRIANGLE << endl ;"
      ],
      "err_line": 2,
      "err_msg": "invalid types ‘int [5][int [5]]’ for array subscript"
    },
    {
      "mod_line": [
        2,
        4,
        7,
        20
      ],
      "mod_code": [
        "for ( int i = 0 ; i < 4 ; i ++ ) { cin >> a [ a ] >> 2 [ 3 ] >> a [ 3 ] >> a [ 3 ] ; }",
        "for ( ; j >= 4 ; j -- )",
        "if ( k == i || k == j )",
        "else"
      ],
      "err_line": 2,
      "err_msg": "invalid types ‘int [5][int [5]]’ for array subscript"
    },
    {
      "mod_line": [
        2,
        4,
        7,
        21
      ],
      "mod_code": [
        "for ( int i = 0 ; i < 4 ; i ++ ) { cin >> a [ a ] >> 2 [ 3 ] >> a [ 3 ] >> a [ 3 ] ; }",
        "for ( ; j >= 4 ; j -- )",
        "if ( k == i || k == j )",
        "cout << SEGMENT << endl ;"
      ],
      "err_line": 2,
      "err_msg": "invalid types ‘int [5][int [5]]’ for array subscript"
    },
    {
      "mod_line": [
        2,
        4,
        7,
        27
      ],
      "mod_code": [
        "for ( int i = 0 ; i < 4 ; i ++ ) { cin >> a [ a ] >> 2 [ 3 ] >> a [ 3 ] >> a [ 3 ] ; }",
        "for ( ; j >= 4 ; j -- )",
        "if ( k == i || k == j )",
        "cout << IMPOSSIBLE << endl ;"
      ],
      "err_line": 2,
      "err_msg": "invalid types ‘int [5][int [5]]’ for array subscript"
    },
    {
      "mod_line": [
        2,
        4,
        8
      ],
      "mod_code": [
        "for ( int i = 0 ; i < 4 ; i ++ ) { cin >> a [ a ] >> 2 [ 3 ] >> a [ 3 ] >> a [ 3 ] ; }",
        "for ( ; j >= 4 ; j -- )",
        "else"
      ],
      "err_line": 2,
      "err_msg": "invalid types ‘int [5][int [5]]’ for array subscript"
    },
    {
      "mod_line": [
        2,
        4,
        8,
        9
      ],
      "mod_code": [
        "for ( int i = 0 ; i < 4 ; i ++ ) { cin >> a [ a ] >> 2 [ 3 ] >> a [ 3 ] >> a [ 3 ] ; }",
        "for ( ; j >= 4 ; j -- )",
        "else",
        "cout << TRIANGLE << endl ;"
      ],
      "err_line": 2,
      "err_msg": "invalid types ‘int [5][int [5]]’ for array subscript"
    },
    {
      "mod_line": [
        2,
        4,
        8,
        20
      ],
      "mod_code": [
        "for ( int i = 0 ; i < 4 ; i ++ ) { cin >> a [ a ] >> 2 [ 3 ] >> a [ 3 ] >> a [ 3 ] ; }",
        "for ( ; j >= 4 ; j -- )",
        "else",
        "else"
      ],
      "err_line": 2,
      "err_msg": "invalid types ‘int [5][int [5]]’ for array subscript"
    },
    {
      "mod_line": [
        2,
        4,
        8,
        21
      ],
      "mod_code": [
        "for ( int i = 0 ; i < 4 ; i ++ ) { cin >> a [ a ] >> 2 [ 3 ] >> a [ 3 ] >> a [ 3 ] ; }",
        "for ( ; j >= 4 ; j -- )",
        "else",
        "cout << SEGMENT << endl ;"
      ],
      "err_line": 2,
      "err_msg": "invalid types ‘int [5][int [5]]’ for array subscript"
    },
    {
      "mod_line": [
        2,
        4,
        8,
        27
      ],
      "mod_code": [
        "for ( int i = 0 ; i < 4 ; i ++ ) { cin >> a [ a ] >> 2 [ 3 ] >> a [ 3 ] >> a [ 3 ] ; }",
        "for ( ; j >= 4 ; j -- )",
        "else",
        "cout << IMPOSSIBLE << endl ;"
      ],
      "err_line": 2,
      "err_msg": "invalid types ‘int [5][int [5]]’ for array subscript"
    },
    {
      "mod_line": [
        2,
        4,
        9
      ],
      "mod_code": [
        "for ( int i = 0 ; i < 4 ; i ++ ) { cin >> a [ a ] >> 2 [ 3 ] >> a [ 3 ] >> a [ 3 ] ; }",
        "for ( ; j >= 4 ; j -- )",
        "cout << TRIANGLE << endl ;"
      ],
      "err_line": 2,
      "err_msg": "invalid types ‘int [5][int [5]]’ for array subscript"
    },
    {
      "mod_line": [
        2,
        4,
        9,
        20
      ],
      "mod_code": [
        "for ( int i = 0 ; i < 4 ; i ++ ) { cin >> a [ a ] >> 2 [ 3 ] >> a [ 3 ] >> a [ 3 ] ; }",
        "for ( ; j >= 4 ; j -- )",
        "cout << TRIANGLE << endl ;",
        "else"
      ],
      "err_line": 2,
      "err_msg": "invalid types ‘int [5][int [5]]’ for array subscript"
    },
    {
      "mod_line": [
        2,
        4,
        9,
        21
      ],
      "mod_code": [
        "for ( int i = 0 ; i < 4 ; i ++ ) { cin >> a [ a ] >> 2 [ 3 ] >> a [ 3 ] >> a [ 3 ] ; }",
        "for ( ; j >= 4 ; j -- )",
        "cout << TRIANGLE << endl ;",
        "cout << SEGMENT << endl ;"
      ],
      "err_line": 2,
      "err_msg": "invalid types ‘int [5][int [5]]’ for array subscript"
    },
    {
      "mod_line": [
        2,
        4,
        9,
        27
      ],
      "mod_code": [
        "for ( int i = 0 ; i < 4 ; i ++ ) { cin >> a [ a ] >> 2 [ 3 ] >> a [ 3 ] >> a [ 3 ] ; }",
        "for ( ; j >= 4 ; j -- )",
        "cout << TRIANGLE << endl ;",
        "cout << IMPOSSIBLE << endl ;"
      ],
      "err_line": 2,
      "err_msg": "invalid types ‘int [5][int [5]]’ for array subscript"
    },
    {
      "mod_line": [
        2,
        4,
        20
      ],
      "mod_code": [
        "for ( int i = 0 ; i < 4 ; i ++ ) { cin >> a [ a ] >> 2 [ 3 ] >> a [ 3 ] >> a [ 3 ] ; }",
        "for ( ; j >= 4 ; j -- )",
        "else"
      ],
      "err_line": 2,
      "err_msg": "invalid types ‘int [5][int [5]]’ for array subscript"
    },
    {
      "mod_line": [
        2,
        4,
        20,
        21
      ],
      "mod_code": [
        "for ( int i = 0 ; i < 4 ; i ++ ) { cin >> a [ a ] >> 2 [ 3 ] >> a [ 3 ] >> a [ 3 ] ; }",
        "for ( ; j >= 4 ; j -- )",
        "else",
        "cout << SEGMENT << endl ;"
      ],
      "err_line": 2,
      "err_msg": "invalid types ‘int [5][int [5]]’ for array subscript"
    },
    {
      "mod_line": [
        2,
        4,
        20,
        27
      ],
      "mod_code": [
        "for ( int i = 0 ; i < 4 ; i ++ ) { cin >> a [ a ] >> 2 [ 3 ] >> a [ 3 ] >> a [ 3 ] ; }",
        "for ( ; j >= 4 ; j -- )",
        "else",
        "cout << IMPOSSIBLE << endl ;"
      ],
      "err_line": 2,
      "err_msg": "invalid types ‘int [5][int [5]]’ for array subscript"
    },
    {
      "mod_line": [
        2,
        4,
        21
      ],
      "mod_code": [
        "for ( int i = 0 ; i < 4 ; i ++ ) { cin >> a [ a ] >> 2 [ 3 ] >> a [ 3 ] >> a [ 3 ] ; }",
        "for ( ; j >= 4 ; j -- )",
        "cout << SEGMENT << endl ;"
      ],
      "err_line": 2,
      "err_msg": "invalid types ‘int [5][int [5]]’ for array subscript"
    },
    {
      "mod_line": [
        2,
        4,
        21,
        27
      ],
      "mod_code": [
        "for ( int i = 0 ; i < 4 ; i ++ ) { cin >> a [ a ] >> 2 [ 3 ] >> a [ 3 ] >> a [ 3 ] ; }",
        "for ( ; j >= 4 ; j -- )",
        "cout << SEGMENT << endl ;",
        "cout << IMPOSSIBLE << endl ;"
      ],
      "err_line": 2,
      "err_msg": "invalid types ‘int [5][int [5]]’ for array subscript"
    },
    {
      "mod_line": [
        2,
        4,
        27
      ],
      "mod_code": [
        "for ( int i = 0 ; i < 4 ; i ++ ) { cin >> a [ a ] >> 2 [ 3 ] >> a [ 3 ] >> a [ 3 ] ; }",
        "for ( ; j >= 4 ; j -- )",
        "cout << IMPOSSIBLE << endl ;"
      ],
      "err_line": 2,
      "err_msg": "invalid types ‘int [5][int [5]]’ for array subscript"
    },
    {
      "mod_line": [
        2,
        6
      ],
      "mod_code": [
        "for ( int i = 0 ; i < 4 ; i ++ ) { cin >> a [ a ] >> 2 [ 3 ] >> a [ 3 ] >> a [ 3 ] ; }",
        "for ( ; k <= j ; k ++ )"
      ],
      "err_line": 2,
      "err_msg": "invalid types ‘int [5][int [5]]’ for array subscript"
    },
    {
      "mod_line": [
        2,
        6,
        7
      ],
      "mod_code": [
        "for ( int i = 0 ; i < 4 ; i ++ ) { cin >> a [ a ] >> 2 [ 3 ] >> a [ 3 ] >> a [ 3 ] ; }",
        "for ( ; k <= j ; k ++ )",
        "if ( k == i || k == j )"
      ],
      "err_line": 2,
      "err_msg": "invalid types ‘int [5][int [5]]’ for array subscript"
    },
    {
      "mod_line": [
        2,
        6,
        7,
        8
      ],
      "mod_code": [
        "for ( int i = 0 ; i < 4 ; i ++ ) { cin >> a [ a ] >> 2 [ 3 ] >> a [ 3 ] >> a [ 3 ] ; }",
        "for ( ; k <= j ; k ++ )",
        "if ( k == i || k == j )",
        "else"
      ],
      "err_line": 2,
      "err_msg": "invalid types ‘int [5][int [5]]’ for array subscript"
    },
    {
      "mod_line": [
        2,
        6,
        7,
        9
      ],
      "mod_code": [
        "for ( int i = 0 ; i < 4 ; i ++ ) { cin >> a [ a ] >> 2 [ 3 ] >> a [ 3 ] >> a [ 3 ] ; }",
        "for ( ; k <= j ; k ++ )",
        "if ( k == i || k == j )",
        "cout << TRIANGLE << endl ;"
      ],
      "err_line": 2,
      "err_msg": "invalid types ‘int [5][int [5]]’ for array subscript"
    },
    {
      "mod_line": [
        2,
        6,
        7,
        20
      ],
      "mod_code": [
        "for ( int i = 0 ; i < 4 ; i ++ ) { cin >> a [ a ] >> 2 [ 3 ] >> a [ 3 ] >> a [ 3 ] ; }",
        "for ( ; k <= j ; k ++ )",
        "if ( k == i || k == j )",
        "else"
      ],
      "err_line": 2,
      "err_msg": "invalid types ‘int [5][int [5]]’ for array subscript"
    },
    {
      "mod_line": [
        2,
        6,
        7,
        21
      ],
      "mod_code": [
        "for ( int i = 0 ; i < 4 ; i ++ ) { cin >> a [ a ] >> 2 [ 3 ] >> a [ 3 ] >> a [ 3 ] ; }",
        "for ( ; k <= j ; k ++ )",
        "if ( k == i || k == j )",
        "cout << SEGMENT << endl ;"
      ],
      "err_line": 2,
      "err_msg": "invalid types ‘int [5][int [5]]’ for array subscript"
    },
    {
      "mod_line": [
        2,
        6,
        7,
        27
      ],
      "mod_code": [
        "for ( int i = 0 ; i < 4 ; i ++ ) { cin >> a [ a ] >> 2 [ 3 ] >> a [ 3 ] >> a [ 3 ] ; }",
        "for ( ; k <= j ; k ++ )",
        "if ( k == i || k == j )",
        "cout << IMPOSSIBLE << endl ;"
      ],
      "err_line": 2,
      "err_msg": "invalid types ‘int [5][int [5]]’ for array subscript"
    },
    {
      "mod_line": [
        2,
        6,
        8
      ],
      "mod_code": [
        "for ( int i = 0 ; i < 4 ; i ++ ) { cin >> a [ a ] >> 2 [ 3 ] >> a [ 3 ] >> a [ 3 ] ; }",
        "for ( ; k <= j ; k ++ )",
        "else"
      ],
      "err_line": 2,
      "err_msg": "invalid types ‘int [5][int [5]]’ for array subscript"
    },
    {
      "mod_line": [
        2,
        6,
        8,
        9
      ],
      "mod_code": [
        "for ( int i = 0 ; i < 4 ; i ++ ) { cin >> a [ a ] >> 2 [ 3 ] >> a [ 3 ] >> a [ 3 ] ; }",
        "for ( ; k <= j ; k ++ )",
        "else",
        "cout << TRIANGLE << endl ;"
      ],
      "err_line": 2,
      "err_msg": "invalid types ‘int [5][int [5]]’ for array subscript"
    },
    {
      "mod_line": [
        2,
        6,
        8,
        20
      ],
      "mod_code": [
        "for ( int i = 0 ; i < 4 ; i ++ ) { cin >> a [ a ] >> 2 [ 3 ] >> a [ 3 ] >> a [ 3 ] ; }",
        "for ( ; k <= j ; k ++ )",
        "else",
        "else"
      ],
      "err_line": 2,
      "err_msg": "invalid types ‘int [5][int [5]]’ for array subscript"
    },
    {
      "mod_line": [
        2,
        6,
        8,
        21
      ],
      "mod_code": [
        "for ( int i = 0 ; i < 4 ; i ++ ) { cin >> a [ a ] >> 2 [ 3 ] >> a [ 3 ] >> a [ 3 ] ; }",
        "for ( ; k <= j ; k ++ )",
        "else",
        "cout << SEGMENT << endl ;"
      ],
      "err_line": 2,
      "err_msg": "invalid types ‘int [5][int [5]]’ for array subscript"
    },
    {
      "mod_line": [
        2,
        6,
        8,
        27
      ],
      "mod_code": [
        "for ( int i = 0 ; i < 4 ; i ++ ) { cin >> a [ a ] >> 2 [ 3 ] >> a [ 3 ] >> a [ 3 ] ; }",
        "for ( ; k <= j ; k ++ )",
        "else",
        "cout << IMPOSSIBLE << endl ;"
      ],
      "err_line": 2,
      "err_msg": "invalid types ‘int [5][int [5]]’ for array subscript"
    },
    {
      "mod_line": [
        2,
        6,
        9
      ],
      "mod_code": [
        "for ( int i = 0 ; i < 4 ; i ++ ) { cin >> a [ a ] >> 2 [ 3 ] >> a [ 3 ] >> a [ 3 ] ; }",
        "for ( ; k <= j ; k ++ )",
        "cout << TRIANGLE << endl ;"
      ],
      "err_line": 2,
      "err_msg": "invalid types ‘int [5][int [5]]’ for array subscript"
    },
    {
      "mod_line": [
        2,
        6,
        9,
        20
      ],
      "mod_code": [
        "for ( int i = 0 ; i < 4 ; i ++ ) { cin >> a [ a ] >> 2 [ 3 ] >> a [ 3 ] >> a [ 3 ] ; }",
        "for ( ; k <= j ; k ++ )",
        "cout << TRIANGLE << endl ;",
        "else"
      ],
      "err_line": 2,
      "err_msg": "invalid types ‘int [5][int [5]]’ for array subscript"
    },
    {
      "mod_line": [
        2,
        6,
        9,
        21
      ],
      "mod_code": [
        "for ( int i = 0 ; i < 4 ; i ++ ) { cin >> a [ a ] >> 2 [ 3 ] >> a [ 3 ] >> a [ 3 ] ; }",
        "for ( ; k <= j ; k ++ )",
        "cout << TRIANGLE << endl ;",
        "cout << SEGMENT << endl ;"
      ],
      "err_line": 2,
      "err_msg": "invalid types ‘int [5][int [5]]’ for array subscript"
    },
    {
      "mod_line": [
        2,
        6,
        9,
        27
      ],
      "mod_code": [
        "for ( int i = 0 ; i < 4 ; i ++ ) { cin >> a [ a ] >> 2 [ 3 ] >> a [ 3 ] >> a [ 3 ] ; }",
        "for ( ; k <= j ; k ++ )",
        "cout << TRIANGLE << endl ;",
        "cout << IMPOSSIBLE << endl ;"
      ],
      "err_line": 2,
      "err_msg": "invalid types ‘int [5][int [5]]’ for array subscript"
    },
    {
      "mod_line": [
        2,
        6,
        20
      ],
      "mod_code": [
        "for ( int i = 0 ; i < 4 ; i ++ ) { cin >> a [ a ] >> 2 [ 3 ] >> a [ 3 ] >> a [ 3 ] ; }",
        "for ( ; k <= j ; k ++ )",
        "else"
      ],
      "err_line": 2,
      "err_msg": "invalid types ‘int [5][int [5]]’ for array subscript"
    },
    {
      "mod_line": [
        2,
        6,
        20,
        21
      ],
      "mod_code": [
        "for ( int i = 0 ; i < 4 ; i ++ ) { cin >> a [ a ] >> 2 [ 3 ] >> a [ 3 ] >> a [ 3 ] ; }",
        "for ( ; k <= j ; k ++ )",
        "else",
        "cout << SEGMENT << endl ;"
      ],
      "err_line": 2,
      "err_msg": "invalid types ‘int [5][int [5]]’ for array subscript"
    },
    {
      "mod_line": [
        2,
        6,
        20,
        27
      ],
      "mod_code": [
        "for ( int i = 0 ; i < 4 ; i ++ ) { cin >> a [ a ] >> 2 [ 3 ] >> a [ 3 ] >> a [ 3 ] ; }",
        "for ( ; k <= j ; k ++ )",
        "else",
        "cout << IMPOSSIBLE << endl ;"
      ],
      "err_line": 2,
      "err_msg": "invalid types ‘int [5][int [5]]’ for array subscript"
    },
    {
      "mod_line": [
        2,
        6,
        21
      ],
      "mod_code": [
        "for ( int i = 0 ; i < 4 ; i ++ ) { cin >> a [ a ] >> 2 [ 3 ] >> a [ 3 ] >> a [ 3 ] ; }",
        "for ( ; k <= j ; k ++ )",
        "cout << SEGMENT << endl ;"
      ],
      "err_line": 2,
      "err_msg": "invalid types ‘int [5][int [5]]’ for array subscript"
    },
    {
      "mod_line": [
        2,
        6,
        21,
        27
      ],
      "mod_code": [
        "for ( int i = 0 ; i < 4 ; i ++ ) { cin >> a [ a ] >> 2 [ 3 ] >> a [ 3 ] >> a [ 3 ] ; }",
        "for ( ; k <= j ; k ++ )",
        "cout << SEGMENT << endl ;",
        "cout << IMPOSSIBLE << endl ;"
      ],
      "err_line": 2,
      "err_msg": "invalid types ‘int [5][int [5]]’ for array subscript"
    },
    {
      "mod_line": [
        2,
        6,
        27
      ],
      "mod_code": [
        "for ( int i = 0 ; i < 4 ; i ++ ) { cin >> a [ a ] >> 2 [ 3 ] >> a [ 3 ] >> a [ 3 ] ; }",
        "for ( ; k <= j ; k ++ )",
        "cout << IMPOSSIBLE << endl ;"
      ],
      "err_line": 2,
      "err_msg": "invalid types ‘int [5][int [5]]’ for array subscript"
    },
    {
      "mod_line": [
        2,
        7
      ],
      "mod_code": [
        "for ( int i = 0 ; i < 4 ; i ++ ) { cin >> a [ a ] >> 2 [ 3 ] >> a [ 3 ] >> a [ 3 ] ; }",
        "if ( k == i || k == j )"
      ],
      "err_line": 2,
      "err_msg": "invalid types ‘int [5][int [5]]’ for array subscript"
    },
    {
      "mod_line": [
        2,
        7,
        8
      ],
      "mod_code": [
        "for ( int i = 0 ; i < 4 ; i ++ ) { cin >> a [ a ] >> 2 [ 3 ] >> a [ 3 ] >> a [ 3 ] ; }",
        "if ( k == i || k == j )",
        "else"
      ],
      "err_line": 2,
      "err_msg": "invalid types ‘int [5][int [5]]’ for array subscript"
    },
    {
      "mod_line": [
        2,
        7,
        8,
        9
      ],
      "mod_code": [
        "for ( int i = 0 ; i < 4 ; i ++ ) { cin >> a [ a ] >> 2 [ 3 ] >> a [ 3 ] >> a [ 3 ] ; }",
        "if ( k == i || k == j )",
        "else",
        "cout << TRIANGLE << endl ;"
      ],
      "err_line": 2,
      "err_msg": "invalid types ‘int [5][int [5]]’ for array subscript"
    },
    {
      "mod_line": [
        2,
        7,
        8,
        20
      ],
      "mod_code": [
        "for ( int i = 0 ; i < 4 ; i ++ ) { cin >> a [ a ] >> 2 [ 3 ] >> a [ 3 ] >> a [ 3 ] ; }",
        "if ( k == i || k == j )",
        "else",
        "else"
      ],
      "err_line": 2,
      "err_msg": "invalid types ‘int [5][int [5]]’ for array subscript"
    },
    {
      "mod_line": [
        2,
        7,
        8,
        21
      ],
      "mod_code": [
        "for ( int i = 0 ; i < 4 ; i ++ ) { cin >> a [ a ] >> 2 [ 3 ] >> a [ 3 ] >> a [ 3 ] ; }",
        "if ( k == i || k == j )",
        "else",
        "cout << SEGMENT << endl ;"
      ],
      "err_line": 2,
      "err_msg": "invalid types ‘int [5][int [5]]’ for array subscript"
    },
    {
      "mod_line": [
        2,
        7,
        8,
        27
      ],
      "mod_code": [
        "for ( int i = 0 ; i < 4 ; i ++ ) { cin >> a [ a ] >> 2 [ 3 ] >> a [ 3 ] >> a [ 3 ] ; }",
        "if ( k == i || k == j )",
        "else",
        "cout << IMPOSSIBLE << endl ;"
      ],
      "err_line": 2,
      "err_msg": "invalid types ‘int [5][int [5]]’ for array subscript"
    },
    {
      "mod_line": [
        2,
        7,
        9
      ],
      "mod_code": [
        "for ( int i = 0 ; i < 4 ; i ++ ) { cin >> a [ a ] >> 2 [ 3 ] >> a [ 3 ] >> a [ 3 ] ; }",
        "if ( k == i || k == j )",
        "cout << TRIANGLE << endl ;"
      ],
      "err_line": 2,
      "err_msg": "invalid types ‘int [5][int [5]]’ for array subscript"
    },
    {
      "mod_line": [
        2,
        7,
        9,
        20
      ],
      "mod_code": [
        "for ( int i = 0 ; i < 4 ; i ++ ) { cin >> a [ a ] >> 2 [ 3 ] >> a [ 3 ] >> a [ 3 ] ; }",
        "if ( k == i || k == j )",
        "cout << TRIANGLE << endl ;",
        "else"
      ],
      "err_line": 2,
      "err_msg": "invalid types ‘int [5][int [5]]’ for array subscript"
    },
    {
      "mod_line": [
        2,
        7,
        9,
        21
      ],
      "mod_code": [
        "for ( int i = 0 ; i < 4 ; i ++ ) { cin >> a [ a ] >> 2 [ 3 ] >> a [ 3 ] >> a [ 3 ] ; }",
        "if ( k == i || k == j )",
        "cout << TRIANGLE << endl ;",
        "cout << SEGMENT << endl ;"
      ],
      "err_line": 2,
      "err_msg": "invalid types ‘int [5][int [5]]’ for array subscript"
    },
    {
      "mod_line": [
        2,
        7,
        9,
        27
      ],
      "mod_code": [
        "for ( int i = 0 ; i < 4 ; i ++ ) { cin >> a [ a ] >> 2 [ 3 ] >> a [ 3 ] >> a [ 3 ] ; }",
        "if ( k == i || k == j )",
        "cout << TRIANGLE << endl ;",
        "cout << IMPOSSIBLE << endl ;"
      ],
      "err_line": 2,
      "err_msg": "invalid types ‘int [5][int [5]]’ for array subscript"
    },
    {
      "mod_line": [
        2,
        7,
        20
      ],
      "mod_code": [
        "for ( int i = 0 ; i < 4 ; i ++ ) { cin >> a [ a ] >> 2 [ 3 ] >> a [ 3 ] >> a [ 3 ] ; }",
        "if ( k == i || k == j )",
        "else"
      ],
      "err_line": 2,
      "err_msg": "invalid types ‘int [5][int [5]]’ for array subscript"
    },
    {
      "mod_line": [
        2,
        7,
        20,
        21
      ],
      "mod_code": [
        "for ( int i = 0 ; i < 4 ; i ++ ) { cin >> a [ a ] >> 2 [ 3 ] >> a [ 3 ] >> a [ 3 ] ; }",
        "if ( k == i || k == j )",
        "else",
        "cout << SEGMENT << endl ;"
      ],
      "err_line": 2,
      "err_msg": "invalid types ‘int [5][int [5]]’ for array subscript"
    },
    {
      "mod_line": [
        2,
        7,
        20,
        27
      ],
      "mod_code": [
        "for ( int i = 0 ; i < 4 ; i ++ ) { cin >> a [ a ] >> 2 [ 3 ] >> a [ 3 ] >> a [ 3 ] ; }",
        "if ( k == i || k == j )",
        "else",
        "cout << IMPOSSIBLE << endl ;"
      ],
      "err_line": 2,
      "err_msg": "invalid types ‘int [5][int [5]]’ for array subscript"
    },
    {
      "mod_line": [
        2,
        7,
        21
      ],
      "mod_code": [
        "for ( int i = 0 ; i < 4 ; i ++ ) { cin >> a [ a ] >> 2 [ 3 ] >> a [ 3 ] >> a [ 3 ] ; }",
        "if ( k == i || k == j )",
        "cout << SEGMENT << endl ;"
      ],
      "err_line": 2,
      "err_msg": "invalid types ‘int [5][int [5]]’ for array subscript"
    },
    {
      "mod_line": [
        2,
        7,
        21,
        27
      ],
      "mod_code": [
        "for ( int i = 0 ; i < 4 ; i ++ ) { cin >> a [ a ] >> 2 [ 3 ] >> a [ 3 ] >> a [ 3 ] ; }",
        "if ( k == i || k == j )",
        "cout << SEGMENT << endl ;",
        "cout << IMPOSSIBLE << endl ;"
      ],
      "err_line": 2,
      "err_msg": "invalid types ‘int [5][int [5]]’ for array subscript"
    },
    {
      "mod_line": [
        2,
        7,
        27
      ],
      "mod_code": [
        "for ( int i = 0 ; i < 4 ; i ++ ) { cin >> a [ a ] >> 2 [ 3 ] >> a [ 3 ] >> a [ 3 ] ; }",
        "if ( k == i || k == j )",
        "cout << IMPOSSIBLE << endl ;"
      ],
      "err_line": 2,
      "err_msg": "invalid types ‘int [5][int [5]]’ for array subscript"
    },
    {
      "mod_line": [
        2,
        8
      ],
      "mod_code": [
        "for ( int i = 0 ; i < 4 ; i ++ ) { cin >> a [ a ] >> 2 [ 3 ] >> a [ 3 ] >> a [ 3 ] ; }",
        "else"
      ],
      "err_line": 2,
      "err_msg": "invalid types ‘int [5][int [5]]’ for array subscript"
    },
    {
      "mod_line": [
        2,
        8,
        9
      ],
      "mod_code": [
        "for ( int i = 0 ; i < 4 ; i ++ ) { cin >> a [ a ] >> 2 [ 3 ] >> a [ 3 ] >> a [ 3 ] ; }",
        "else",
        "cout << TRIANGLE << endl ;"
      ],
      "err_line": 2,
      "err_msg": "invalid types ‘int [5][int [5]]’ for array subscript"
    },
    {
      "mod_line": [
        2,
        8,
        9,
        20
      ],
      "mod_code": [
        "for ( int i = 0 ; i < 4 ; i ++ ) { cin >> a [ a ] >> 2 [ 3 ] >> a [ 3 ] >> a [ 3 ] ; }",
        "else",
        "cout << TRIANGLE << endl ;",
        "else"
      ],
      "err_line": 2,
      "err_msg": "invalid types ‘int [5][int [5]]’ for array subscript"
    },
    {
      "mod_line": [
        2,
        8,
        9,
        21
      ],
      "mod_code": [
        "for ( int i = 0 ; i < 4 ; i ++ ) { cin >> a [ a ] >> 2 [ 3 ] >> a [ 3 ] >> a [ 3 ] ; }",
        "else",
        "cout << TRIANGLE << endl ;",
        "cout << SEGMENT << endl ;"
      ],
      "err_line": 2,
      "err_msg": "invalid types ‘int [5][int [5]]’ for array subscript"
    },
    {
      "mod_line": [
        2,
        8,
        9,
        27
      ],
      "mod_code": [
        "for ( int i = 0 ; i < 4 ; i ++ ) { cin >> a [ a ] >> 2 [ 3 ] >> a [ 3 ] >> a [ 3 ] ; }",
        "else",
        "cout << TRIANGLE << endl ;",
        "cout << IMPOSSIBLE << endl ;"
      ],
      "err_line": 2,
      "err_msg": "invalid types ‘int [5][int [5]]’ for array subscript"
    },
    {
      "mod_line": [
        2,
        8,
        20
      ],
      "mod_code": [
        "for ( int i = 0 ; i < 4 ; i ++ ) { cin >> a [ a ] >> 2 [ 3 ] >> a [ 3 ] >> a [ 3 ] ; }",
        "else",
        "else"
      ],
      "err_line": 2,
      "err_msg": "invalid types ‘int [5][int [5]]’ for array subscript"
    },
    {
      "mod_line": [
        2,
        8,
        20,
        21
      ],
      "mod_code": [
        "for ( int i = 0 ; i < 4 ; i ++ ) { cin >> a [ a ] >> 2 [ 3 ] >> a [ 3 ] >> a [ 3 ] ; }",
        "else",
        "else",
        "cout << SEGMENT << endl ;"
      ],
      "err_line": 2,
      "err_msg": "invalid types ‘int [5][int [5]]’ for array subscript"
    },
    {
      "mod_line": [
        2,
        8,
        20,
        27
      ],
      "mod_code": [
        "for ( int i = 0 ; i < 4 ; i ++ ) { cin >> a [ a ] >> 2 [ 3 ] >> a [ 3 ] >> a [ 3 ] ; }",
        "else",
        "else",
        "cout << IMPOSSIBLE << endl ;"
      ],
      "err_line": 2,
      "err_msg": "invalid types ‘int [5][int [5]]’ for array subscript"
    },
    {
      "mod_line": [
        2,
        8,
        21
      ],
      "mod_code": [
        "for ( int i = 0 ; i < 4 ; i ++ ) { cin >> a [ a ] >> 2 [ 3 ] >> a [ 3 ] >> a [ 3 ] ; }",
        "else",
        "cout << SEGMENT << endl ;"
      ],
      "err_line": 2,
      "err_msg": "invalid types ‘int [5][int [5]]’ for array subscript"
    },
    {
      "mod_line": [
        2,
        8,
        21,
        27
      ],
      "mod_code": [
        "for ( int i = 0 ; i < 4 ; i ++ ) { cin >> a [ a ] >> 2 [ 3 ] >> a [ 3 ] >> a [ 3 ] ; }",
        "else",
        "cout << SEGMENT << endl ;",
        "cout << IMPOSSIBLE << endl ;"
      ],
      "err_line": 2,
      "err_msg": "invalid types ‘int [5][int [5]]’ for array subscript"
    },
    {
      "mod_line": [
        2,
        8,
        27
      ],
      "mod_code": [
        "for ( int i = 0 ; i < 4 ; i ++ ) { cin >> a [ a ] >> 2 [ 3 ] >> a [ 3 ] >> a [ 3 ] ; }",
        "else",
        "cout << IMPOSSIBLE << endl ;"
      ],
      "err_line": 2,
      "err_msg": "invalid types ‘int [5][int [5]]’ for array subscript"
    },
    {
      "mod_line": [
        2,
        9
      ],
      "mod_code": [
        "for ( int i = 0 ; i < 4 ; i ++ ) { cin >> a [ a ] >> 2 [ 3 ] >> a [ 3 ] >> a [ 3 ] ; }",
        "cout << TRIANGLE << endl ;"
      ],
      "err_line": 2,
      "err_msg": "invalid types ‘int [5][int [5]]’ for array subscript"
    },
    {
      "mod_line": [
        2,
        9,
        20
      ],
      "mod_code": [
        "for ( int i = 0 ; i < 4 ; i ++ ) { cin >> a [ a ] >> 2 [ 3 ] >> a [ 3 ] >> a [ 3 ] ; }",
        "cout << TRIANGLE << endl ;",
        "else"
      ],
      "err_line": 2,
      "err_msg": "invalid types ‘int [5][int [5]]’ for array subscript"
    },
    {
      "mod_line": [
        2,
        9,
        20,
        21
      ],
      "mod_code": [
        "for ( int i = 0 ; i < 4 ; i ++ ) { cin >> a [ a ] >> 2 [ 3 ] >> a [ 3 ] >> a [ 3 ] ; }",
        "cout << TRIANGLE << endl ;",
        "else",
        "cout << SEGMENT << endl ;"
      ],
      "err_line": 2,
      "err_msg": "invalid types ‘int [5][int [5]]’ for array subscript"
    },
    {
      "mod_line": [
        2,
        9,
        20,
        27
      ],
      "mod_code": [
        "for ( int i = 0 ; i < 4 ; i ++ ) { cin >> a [ a ] >> 2 [ 3 ] >> a [ 3 ] >> a [ 3 ] ; }",
        "cout << TRIANGLE << endl ;",
        "else",
        "cout << IMPOSSIBLE << endl ;"
      ],
      "err_line": 2,
      "err_msg": "invalid types ‘int [5][int [5]]’ for array subscript"
    },
    {
      "mod_line": [
        2,
        9,
        21
      ],
      "mod_code": [
        "for ( int i = 0 ; i < 4 ; i ++ ) { cin >> a [ a ] >> 2 [ 3 ] >> a [ 3 ] >> a [ 3 ] ; }",
        "cout << TRIANGLE << endl ;",
        "cout << SEGMENT << endl ;"
      ],
      "err_line": 2,
      "err_msg": "invalid types ‘int [5][int [5]]’ for array subscript"
    },
    {
      "mod_line": [
        2,
        9,
        21,
        27
      ],
      "mod_code": [
        "for ( int i = 0 ; i < 4 ; i ++ ) { cin >> a [ a ] >> 2 [ 3 ] >> a [ 3 ] >> a [ 3 ] ; }",
        "cout << TRIANGLE << endl ;",
        "cout << SEGMENT << endl ;",
        "cout << IMPOSSIBLE << endl ;"
      ],
      "err_line": 2,
      "err_msg": "invalid types ‘int [5][int [5]]’ for array subscript"
    },
    {
      "mod_line": [
        2,
        9,
        27
      ],
      "mod_code": [
        "for ( int i = 0 ; i < 4 ; i ++ ) { cin >> a [ a ] >> 2 [ 3 ] >> a [ 3 ] >> a [ 3 ] ; }",
        "cout << TRIANGLE << endl ;",
        "cout << IMPOSSIBLE << endl ;"
      ],
      "err_line": 2,
      "err_msg": "invalid types ‘int [5][int [5]]’ for array subscript"
    },
    {
      "mod_line": [
        2,
        20
      ],
      "mod_code": [
        "for ( int i = 0 ; i < 4 ; i ++ ) { cin >> a [ a ] >> 2 [ 3 ] >> a [ 3 ] >> a [ 3 ] ; }",
        "else"
      ],
      "err_line": 2,
      "err_msg": "invalid types ‘int [5][int [5]]’ for array subscript"
    },
    {
      "mod_line": [
        2,
        20,
        21
      ],
      "mod_code": [
        "for ( int i = 0 ; i < 4 ; i ++ ) { cin >> a [ a ] >> 2 [ 3 ] >> a [ 3 ] >> a [ 3 ] ; }",
        "else",
        "cout << SEGMENT << endl ;"
      ],
      "err_line": 2,
      "err_msg": "invalid types ‘int [5][int [5]]’ for array subscript"
    },
    {
      "mod_line": [
        2,
        20,
        21,
        27
      ],
      "mod_code": [
        "for ( int i = 0 ; i < 4 ; i ++ ) { cin >> a [ a ] >> 2 [ 3 ] >> a [ 3 ] >> a [ 3 ] ; }",
        "else",
        "cout << SEGMENT << endl ;",
        "cout << IMPOSSIBLE << endl ;"
      ],
      "err_line": 2,
      "err_msg": "invalid types ‘int [5][int [5]]’ for array subscript"
    },
    {
      "mod_line": [
        2,
        20,
        27
      ],
      "mod_code": [
        "for ( int i = 0 ; i < 4 ; i ++ ) { cin >> a [ a ] >> 2 [ 3 ] >> a [ 3 ] >> a [ 3 ] ; }",
        "else",
        "cout << IMPOSSIBLE << endl ;"
      ],
      "err_line": 2,
      "err_msg": "invalid types ‘int [5][int [5]]’ for array subscript"
    },
    {
      "mod_line": [
        2,
        21
      ],
      "mod_code": [
        "for ( int i = 0 ; i < 4 ; i ++ ) { cin >> a [ a ] >> 2 [ 3 ] >> a [ 3 ] >> a [ 3 ] ; }",
        "cout << SEGMENT << endl ;"
      ],
      "err_line": 2,
      "err_msg": "invalid types ‘int [5][int [5]]’ for array subscript"
    },
    {
      "mod_line": [
        2,
        21,
        27
      ],
      "mod_code": [
        "for ( int i = 0 ; i < 4 ; i ++ ) { cin >> a [ a ] >> 2 [ 3 ] >> a [ 3 ] >> a [ 3 ] ; }",
        "cout << SEGMENT << endl ;",
        "cout << IMPOSSIBLE << endl ;"
      ],
      "err_line": 2,
      "err_msg": "invalid types ‘int [5][int [5]]’ for array subscript"
    },
    {
      "mod_line": [
        2,
        27
      ],
      "mod_code": [
        "for ( int i = 0 ; i < 4 ; i ++ ) { cin >> a [ a ] >> 2 [ 3 ] >> a [ 3 ] >> a [ 3 ] ; }",
        "cout << IMPOSSIBLE << endl ;"
      ],
      "err_line": 2,
      "err_msg": "invalid types ‘int [5][int [5]]’ for array subscript"
    },
    {
      "mod_line": [
        3,
        4
      ],
      "mod_code": [
        "for ( ; i >= 4 ; i -- )",
        "for ( ; j >= 4 ; j -- )"
      ],
      "err_line": 3,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        4,
        6
      ],
      "mod_code": [
        "for ( ; i >= 4 ; i -- )",
        "for ( ; j >= 4 ; j -- )",
        "for ( ; k <= j ; k ++ )"
      ],
      "err_line": 3,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        4,
        6,
        7
      ],
      "mod_code": [
        "for ( ; i >= 4 ; i -- )",
        "for ( ; j >= 4 ; j -- )",
        "for ( ; k <= j ; k ++ )",
        "if ( k == i || k == j )"
      ],
      "err_line": 3,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        4,
        6,
        8
      ],
      "mod_code": [
        "for ( ; i >= 4 ; i -- )",
        "for ( ; j >= 4 ; j -- )",
        "for ( ; k <= j ; k ++ )",
        "else"
      ],
      "err_line": 3,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        4,
        6,
        9
      ],
      "mod_code": [
        "for ( ; i >= 4 ; i -- )",
        "for ( ; j >= 4 ; j -- )",
        "for ( ; k <= j ; k ++ )",
        "cout << TRIANGLE << endl ;"
      ],
      "err_line": 3,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        4,
        6,
        20
      ],
      "mod_code": [
        "for ( ; i >= 4 ; i -- )",
        "for ( ; j >= 4 ; j -- )",
        "for ( ; k <= j ; k ++ )",
        "else"
      ],
      "err_line": 3,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        4,
        6,
        21
      ],
      "mod_code": [
        "for ( ; i >= 4 ; i -- )",
        "for ( ; j >= 4 ; j -- )",
        "for ( ; k <= j ; k ++ )",
        "cout << SEGMENT << endl ;"
      ],
      "err_line": 3,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        4,
        6,
        27
      ],
      "mod_code": [
        "for ( ; i >= 4 ; i -- )",
        "for ( ; j >= 4 ; j -- )",
        "for ( ; k <= j ; k ++ )",
        "cout << IMPOSSIBLE << endl ;"
      ],
      "err_line": 3,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        4,
        7
      ],
      "mod_code": [
        "for ( ; i >= 4 ; i -- )",
        "for ( ; j >= 4 ; j -- )",
        "if ( k == i || k == j )"
      ],
      "err_line": 3,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        4,
        7,
        8
      ],
      "mod_code": [
        "for ( ; i >= 4 ; i -- )",
        "for ( ; j >= 4 ; j -- )",
        "if ( k == i || k == j )",
        "else"
      ],
      "err_line": 3,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        4,
        7,
        9
      ],
      "mod_code": [
        "for ( ; i >= 4 ; i -- )",
        "for ( ; j >= 4 ; j -- )",
        "if ( k == i || k == j )",
        "cout << TRIANGLE << endl ;"
      ],
      "err_line": 3,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        4,
        7,
        20
      ],
      "mod_code": [
        "for ( ; i >= 4 ; i -- )",
        "for ( ; j >= 4 ; j -- )",
        "if ( k == i || k == j )",
        "else"
      ],
      "err_line": 3,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        4,
        7,
        21
      ],
      "mod_code": [
        "for ( ; i >= 4 ; i -- )",
        "for ( ; j >= 4 ; j -- )",
        "if ( k == i || k == j )",
        "cout << SEGMENT << endl ;"
      ],
      "err_line": 3,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        4,
        7,
        27
      ],
      "mod_code": [
        "for ( ; i >= 4 ; i -- )",
        "for ( ; j >= 4 ; j -- )",
        "if ( k == i || k == j )",
        "cout << IMPOSSIBLE << endl ;"
      ],
      "err_line": 3,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        4,
        8
      ],
      "mod_code": [
        "for ( ; i >= 4 ; i -- )",
        "for ( ; j >= 4 ; j -- )",
        "else"
      ],
      "err_line": 3,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        4,
        8,
        9
      ],
      "mod_code": [
        "for ( ; i >= 4 ; i -- )",
        "for ( ; j >= 4 ; j -- )",
        "else",
        "cout << TRIANGLE << endl ;"
      ],
      "err_line": 3,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        4,
        8,
        20
      ],
      "mod_code": [
        "for ( ; i >= 4 ; i -- )",
        "for ( ; j >= 4 ; j -- )",
        "else",
        "else"
      ],
      "err_line": 3,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        4,
        8,
        21
      ],
      "mod_code": [
        "for ( ; i >= 4 ; i -- )",
        "for ( ; j >= 4 ; j -- )",
        "else",
        "cout << SEGMENT << endl ;"
      ],
      "err_line": 3,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        4,
        8,
        27
      ],
      "mod_code": [
        "for ( ; i >= 4 ; i -- )",
        "for ( ; j >= 4 ; j -- )",
        "else",
        "cout << IMPOSSIBLE << endl ;"
      ],
      "err_line": 3,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        4,
        9
      ],
      "mod_code": [
        "for ( ; i >= 4 ; i -- )",
        "for ( ; j >= 4 ; j -- )",
        "cout << TRIANGLE << endl ;"
      ],
      "err_line": 3,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        4,
        9,
        20
      ],
      "mod_code": [
        "for ( ; i >= 4 ; i -- )",
        "for ( ; j >= 4 ; j -- )",
        "cout << TRIANGLE << endl ;",
        "else"
      ],
      "err_line": 3,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        4,
        9,
        21
      ],
      "mod_code": [
        "for ( ; i >= 4 ; i -- )",
        "for ( ; j >= 4 ; j -- )",
        "cout << TRIANGLE << endl ;",
        "cout << SEGMENT << endl ;"
      ],
      "err_line": 3,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        4,
        9,
        27
      ],
      "mod_code": [
        "for ( ; i >= 4 ; i -- )",
        "for ( ; j >= 4 ; j -- )",
        "cout << TRIANGLE << endl ;",
        "cout << IMPOSSIBLE << endl ;"
      ],
      "err_line": 3,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        4,
        20
      ],
      "mod_code": [
        "for ( ; i >= 4 ; i -- )",
        "for ( ; j >= 4 ; j -- )",
        "else"
      ],
      "err_line": 3,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        4,
        20,
        21
      ],
      "mod_code": [
        "for ( ; i >= 4 ; i -- )",
        "for ( ; j >= 4 ; j -- )",
        "else",
        "cout << SEGMENT << endl ;"
      ],
      "err_line": 3,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        4,
        20,
        27
      ],
      "mod_code": [
        "for ( ; i >= 4 ; i -- )",
        "for ( ; j >= 4 ; j -- )",
        "else",
        "cout << IMPOSSIBLE << endl ;"
      ],
      "err_line": 3,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        4,
        21
      ],
      "mod_code": [
        "for ( ; i >= 4 ; i -- )",
        "for ( ; j >= 4 ; j -- )",
        "cout << SEGMENT << endl ;"
      ],
      "err_line": 3,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        4,
        21,
        27
      ],
      "mod_code": [
        "for ( ; i >= 4 ; i -- )",
        "for ( ; j >= 4 ; j -- )",
        "cout << SEGMENT << endl ;",
        "cout << IMPOSSIBLE << endl ;"
      ],
      "err_line": 3,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        4,
        27
      ],
      "mod_code": [
        "for ( ; i >= 4 ; i -- )",
        "for ( ; j >= 4 ; j -- )",
        "cout << IMPOSSIBLE << endl ;"
      ],
      "err_line": 3,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        6
      ],
      "mod_code": [
        "for ( ; i >= 4 ; i -- )",
        "for ( ; k <= j ; k ++ )"
      ],
      "err_line": 3,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        6,
        7
      ],
      "mod_code": [
        "for ( ; i >= 4 ; i -- )",
        "for ( ; k <= j ; k ++ )",
        "if ( k == i || k == j )"
      ],
      "err_line": 3,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        6,
        7,
        8
      ],
      "mod_code": [
        "for ( ; i >= 4 ; i -- )",
        "for ( ; k <= j ; k ++ )",
        "if ( k == i || k == j )",
        "else"
      ],
      "err_line": 3,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        6,
        7,
        9
      ],
      "mod_code": [
        "for ( ; i >= 4 ; i -- )",
        "for ( ; k <= j ; k ++ )",
        "if ( k == i || k == j )",
        "cout << TRIANGLE << endl ;"
      ],
      "err_line": 3,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        6,
        7,
        20
      ],
      "mod_code": [
        "for ( ; i >= 4 ; i -- )",
        "for ( ; k <= j ; k ++ )",
        "if ( k == i || k == j )",
        "else"
      ],
      "err_line": 3,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        6,
        7,
        21
      ],
      "mod_code": [
        "for ( ; i >= 4 ; i -- )",
        "for ( ; k <= j ; k ++ )",
        "if ( k == i || k == j )",
        "cout << SEGMENT << endl ;"
      ],
      "err_line": 3,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        6,
        7,
        27
      ],
      "mod_code": [
        "for ( ; i >= 4 ; i -- )",
        "for ( ; k <= j ; k ++ )",
        "if ( k == i || k == j )",
        "cout << IMPOSSIBLE << endl ;"
      ],
      "err_line": 3,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        6,
        8
      ],
      "mod_code": [
        "for ( ; i >= 4 ; i -- )",
        "for ( ; k <= j ; k ++ )",
        "else"
      ],
      "err_line": 3,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        6,
        8,
        9
      ],
      "mod_code": [
        "for ( ; i >= 4 ; i -- )",
        "for ( ; k <= j ; k ++ )",
        "else",
        "cout << TRIANGLE << endl ;"
      ],
      "err_line": 3,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        6,
        8,
        20
      ],
      "mod_code": [
        "for ( ; i >= 4 ; i -- )",
        "for ( ; k <= j ; k ++ )",
        "else",
        "else"
      ],
      "err_line": 3,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        6,
        8,
        21
      ],
      "mod_code": [
        "for ( ; i >= 4 ; i -- )",
        "for ( ; k <= j ; k ++ )",
        "else",
        "cout << SEGMENT << endl ;"
      ],
      "err_line": 3,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        6,
        8,
        27
      ],
      "mod_code": [
        "for ( ; i >= 4 ; i -- )",
        "for ( ; k <= j ; k ++ )",
        "else",
        "cout << IMPOSSIBLE << endl ;"
      ],
      "err_line": 3,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        6,
        9
      ],
      "mod_code": [
        "for ( ; i >= 4 ; i -- )",
        "for ( ; k <= j ; k ++ )",
        "cout << TRIANGLE << endl ;"
      ],
      "err_line": 3,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        6,
        9,
        20
      ],
      "mod_code": [
        "for ( ; i >= 4 ; i -- )",
        "for ( ; k <= j ; k ++ )",
        "cout << TRIANGLE << endl ;",
        "else"
      ],
      "err_line": 3,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        6,
        9,
        21
      ],
      "mod_code": [
        "for ( ; i >= 4 ; i -- )",
        "for ( ; k <= j ; k ++ )",
        "cout << TRIANGLE << endl ;",
        "cout << SEGMENT << endl ;"
      ],
      "err_line": 3,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        6,
        9,
        27
      ],
      "mod_code": [
        "for ( ; i >= 4 ; i -- )",
        "for ( ; k <= j ; k ++ )",
        "cout << TRIANGLE << endl ;",
        "cout << IMPOSSIBLE << endl ;"
      ],
      "err_line": 3,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        6,
        20
      ],
      "mod_code": [
        "for ( ; i >= 4 ; i -- )",
        "for ( ; k <= j ; k ++ )",
        "else"
      ],
      "err_line": 3,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        6,
        20,
        21
      ],
      "mod_code": [
        "for ( ; i >= 4 ; i -- )",
        "for ( ; k <= j ; k ++ )",
        "else",
        "cout << SEGMENT << endl ;"
      ],
      "err_line": 3,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        6,
        20,
        27
      ],
      "mod_code": [
        "for ( ; i >= 4 ; i -- )",
        "for ( ; k <= j ; k ++ )",
        "else",
        "cout << IMPOSSIBLE << endl ;"
      ],
      "err_line": 3,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        6,
        21
      ],
      "mod_code": [
        "for ( ; i >= 4 ; i -- )",
        "for ( ; k <= j ; k ++ )",
        "cout << SEGMENT << endl ;"
      ],
      "err_line": 3,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        6,
        21,
        27
      ],
      "mod_code": [
        "for ( ; i >= 4 ; i -- )",
        "for ( ; k <= j ; k ++ )",
        "cout << SEGMENT << endl ;",
        "cout << IMPOSSIBLE << endl ;"
      ],
      "err_line": 3,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        6,
        27
      ],
      "mod_code": [
        "for ( ; i >= 4 ; i -- )",
        "for ( ; k <= j ; k ++ )",
        "cout << IMPOSSIBLE << endl ;"
      ],
      "err_line": 3,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        7
      ],
      "mod_code": [
        "for ( ; i >= 4 ; i -- )",
        "if ( k == i || k == j )"
      ],
      "err_line": 3,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        7,
        8
      ],
      "mod_code": [
        "for ( ; i >= 4 ; i -- )",
        "if ( k == i || k == j )",
        "else"
      ],
      "err_line": 3,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        7,
        8,
        9
      ],
      "mod_code": [
        "for ( ; i >= 4 ; i -- )",
        "if ( k == i || k == j )",
        "else",
        "cout << TRIANGLE << endl ;"
      ],
      "err_line": 3,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        7,
        8,
        20
      ],
      "mod_code": [
        "for ( ; i >= 4 ; i -- )",
        "if ( k == i || k == j )",
        "else",
        "else"
      ],
      "err_line": 3,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        7,
        8,
        21
      ],
      "mod_code": [
        "for ( ; i >= 4 ; i -- )",
        "if ( k == i || k == j )",
        "else",
        "cout << SEGMENT << endl ;"
      ],
      "err_line": 3,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        7,
        8,
        27
      ],
      "mod_code": [
        "for ( ; i >= 4 ; i -- )",
        "if ( k == i || k == j )",
        "else",
        "cout << IMPOSSIBLE << endl ;"
      ],
      "err_line": 3,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        7,
        9
      ],
      "mod_code": [
        "for ( ; i >= 4 ; i -- )",
        "if ( k == i || k == j )",
        "cout << TRIANGLE << endl ;"
      ],
      "err_line": 3,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        7,
        9,
        20
      ],
      "mod_code": [
        "for ( ; i >= 4 ; i -- )",
        "if ( k == i || k == j )",
        "cout << TRIANGLE << endl ;",
        "else"
      ],
      "err_line": 3,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        7,
        9,
        21
      ],
      "mod_code": [
        "for ( ; i >= 4 ; i -- )",
        "if ( k == i || k == j )",
        "cout << TRIANGLE << endl ;",
        "cout << SEGMENT << endl ;"
      ],
      "err_line": 3,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        7,
        9,
        27
      ],
      "mod_code": [
        "for ( ; i >= 4 ; i -- )",
        "if ( k == i || k == j )",
        "cout << TRIANGLE << endl ;",
        "cout << IMPOSSIBLE << endl ;"
      ],
      "err_line": 3,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        7,
        20
      ],
      "mod_code": [
        "for ( ; i >= 4 ; i -- )",
        "if ( k == i || k == j )",
        "else"
      ],
      "err_line": 3,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        7,
        20,
        21
      ],
      "mod_code": [
        "for ( ; i >= 4 ; i -- )",
        "if ( k == i || k == j )",
        "else",
        "cout << SEGMENT << endl ;"
      ],
      "err_line": 3,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        7,
        20,
        27
      ],
      "mod_code": [
        "for ( ; i >= 4 ; i -- )",
        "if ( k == i || k == j )",
        "else",
        "cout << IMPOSSIBLE << endl ;"
      ],
      "err_line": 3,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        7,
        21
      ],
      "mod_code": [
        "for ( ; i >= 4 ; i -- )",
        "if ( k == i || k == j )",
        "cout << SEGMENT << endl ;"
      ],
      "err_line": 3,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        7,
        21,
        27
      ],
      "mod_code": [
        "for ( ; i >= 4 ; i -- )",
        "if ( k == i || k == j )",
        "cout << SEGMENT << endl ;",
        "cout << IMPOSSIBLE << endl ;"
      ],
      "err_line": 3,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        7,
        27
      ],
      "mod_code": [
        "for ( ; i >= 4 ; i -- )",
        "if ( k == i || k == j )",
        "cout << IMPOSSIBLE << endl ;"
      ],
      "err_line": 3,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        8
      ],
      "mod_code": [
        "for ( ; i >= 4 ; i -- )",
        "else"
      ],
      "err_line": 3,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        8,
        9
      ],
      "mod_code": [
        "for ( ; i >= 4 ; i -- )",
        "else",
        "cout << TRIANGLE << endl ;"
      ],
      "err_line": 3,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        8,
        9,
        20
      ],
      "mod_code": [
        "for ( ; i >= 4 ; i -- )",
        "else",
        "cout << TRIANGLE << endl ;",
        "else"
      ],
      "err_line": 3,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        8,
        9,
        21
      ],
      "mod_code": [
        "for ( ; i >= 4 ; i -- )",
        "else",
        "cout << TRIANGLE << endl ;",
        "cout << SEGMENT << endl ;"
      ],
      "err_line": 3,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        8,
        9,
        27
      ],
      "mod_code": [
        "for ( ; i >= 4 ; i -- )",
        "else",
        "cout << TRIANGLE << endl ;",
        "cout << IMPOSSIBLE << endl ;"
      ],
      "err_line": 3,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        8,
        20
      ],
      "mod_code": [
        "for ( ; i >= 4 ; i -- )",
        "else",
        "else"
      ],
      "err_line": 3,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        8,
        20,
        21
      ],
      "mod_code": [
        "for ( ; i >= 4 ; i -- )",
        "else",
        "else",
        "cout << SEGMENT << endl ;"
      ],
      "err_line": 3,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        8,
        20,
        27
      ],
      "mod_code": [
        "for ( ; i >= 4 ; i -- )",
        "else",
        "else",
        "cout << IMPOSSIBLE << endl ;"
      ],
      "err_line": 3,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        8,
        21
      ],
      "mod_code": [
        "for ( ; i >= 4 ; i -- )",
        "else",
        "cout << SEGMENT << endl ;"
      ],
      "err_line": 3,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        8,
        21,
        27
      ],
      "mod_code": [
        "for ( ; i >= 4 ; i -- )",
        "else",
        "cout << SEGMENT << endl ;",
        "cout << IMPOSSIBLE << endl ;"
      ],
      "err_line": 3,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        8,
        27
      ],
      "mod_code": [
        "for ( ; i >= 4 ; i -- )",
        "else",
        "cout << IMPOSSIBLE << endl ;"
      ],
      "err_line": 3,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        9
      ],
      "mod_code": [
        "for ( ; i >= 4 ; i -- )",
        "cout << TRIANGLE << endl ;"
      ],
      "err_line": 3,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        9,
        20
      ],
      "mod_code": [
        "for ( ; i >= 4 ; i -- )",
        "cout << TRIANGLE << endl ;",
        "else"
      ],
      "err_line": 3,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        9,
        20,
        21
      ],
      "mod_code": [
        "for ( ; i >= 4 ; i -- )",
        "cout << TRIANGLE << endl ;",
        "else",
        "cout << SEGMENT << endl ;"
      ],
      "err_line": 3,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        9,
        20,
        27
      ],
      "mod_code": [
        "for ( ; i >= 4 ; i -- )",
        "cout << TRIANGLE << endl ;",
        "else",
        "cout << IMPOSSIBLE << endl ;"
      ],
      "err_line": 3,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        9,
        21
      ],
      "mod_code": [
        "for ( ; i >= 4 ; i -- )",
        "cout << TRIANGLE << endl ;",
        "cout << SEGMENT << endl ;"
      ],
      "err_line": 3,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        9,
        21,
        27
      ],
      "mod_code": [
        "for ( ; i >= 4 ; i -- )",
        "cout << TRIANGLE << endl ;",
        "cout << SEGMENT << endl ;",
        "cout << IMPOSSIBLE << endl ;"
      ],
      "err_line": 3,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        9,
        27
      ],
      "mod_code": [
        "for ( ; i >= 4 ; i -- )",
        "cout << TRIANGLE << endl ;",
        "cout << IMPOSSIBLE << endl ;"
      ],
      "err_line": 3,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        20
      ],
      "mod_code": [
        "for ( ; i >= 4 ; i -- )",
        "else"
      ],
      "err_line": 3,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        20,
        21
      ],
      "mod_code": [
        "for ( ; i >= 4 ; i -- )",
        "else",
        "cout << SEGMENT << endl ;"
      ],
      "err_line": 3,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        20,
        21,
        27
      ],
      "mod_code": [
        "for ( ; i >= 4 ; i -- )",
        "else",
        "cout << SEGMENT << endl ;",
        "cout << IMPOSSIBLE << endl ;"
      ],
      "err_line": 3,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        20,
        27
      ],
      "mod_code": [
        "for ( ; i >= 4 ; i -- )",
        "else",
        "cout << IMPOSSIBLE << endl ;"
      ],
      "err_line": 3,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        21
      ],
      "mod_code": [
        "for ( ; i >= 4 ; i -- )",
        "cout << SEGMENT << endl ;"
      ],
      "err_line": 3,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        21,
        27
      ],
      "mod_code": [
        "for ( ; i >= 4 ; i -- )",
        "cout << SEGMENT << endl ;",
        "cout << IMPOSSIBLE << endl ;"
      ],
      "err_line": 3,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        27
      ],
      "mod_code": [
        "for ( ; i >= 4 ; i -- )",
        "cout << IMPOSSIBLE << endl ;"
      ],
      "err_line": 3,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        6
      ],
      "mod_code": [
        "for ( ; j >= 4 ; j -- )",
        "for ( ; k <= j ; k ++ )"
      ],
      "err_line": 4,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        6,
        7
      ],
      "mod_code": [
        "for ( ; j >= 4 ; j -- )",
        "for ( ; k <= j ; k ++ )",
        "if ( k == i || k == j )"
      ],
      "err_line": 4,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        6,
        7,
        8
      ],
      "mod_code": [
        "for ( ; j >= 4 ; j -- )",
        "for ( ; k <= j ; k ++ )",
        "if ( k == i || k == j )",
        "else"
      ],
      "err_line": 4,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        6,
        7,
        9
      ],
      "mod_code": [
        "for ( ; j >= 4 ; j -- )",
        "for ( ; k <= j ; k ++ )",
        "if ( k == i || k == j )",
        "cout << TRIANGLE << endl ;"
      ],
      "err_line": 4,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        6,
        7,
        20
      ],
      "mod_code": [
        "for ( ; j >= 4 ; j -- )",
        "for ( ; k <= j ; k ++ )",
        "if ( k == i || k == j )",
        "else"
      ],
      "err_line": 4,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        6,
        7,
        21
      ],
      "mod_code": [
        "for ( ; j >= 4 ; j -- )",
        "for ( ; k <= j ; k ++ )",
        "if ( k == i || k == j )",
        "cout << SEGMENT << endl ;"
      ],
      "err_line": 4,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        6,
        7,
        27
      ],
      "mod_code": [
        "for ( ; j >= 4 ; j -- )",
        "for ( ; k <= j ; k ++ )",
        "if ( k == i || k == j )",
        "cout << IMPOSSIBLE << endl ;"
      ],
      "err_line": 4,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        6,
        8
      ],
      "mod_code": [
        "for ( ; j >= 4 ; j -- )",
        "for ( ; k <= j ; k ++ )",
        "else"
      ],
      "err_line": 4,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        6,
        8,
        9
      ],
      "mod_code": [
        "for ( ; j >= 4 ; j -- )",
        "for ( ; k <= j ; k ++ )",
        "else",
        "cout << TRIANGLE << endl ;"
      ],
      "err_line": 4,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        6,
        8,
        20
      ],
      "mod_code": [
        "for ( ; j >= 4 ; j -- )",
        "for ( ; k <= j ; k ++ )",
        "else",
        "else"
      ],
      "err_line": 4,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        6,
        8,
        21
      ],
      "mod_code": [
        "for ( ; j >= 4 ; j -- )",
        "for ( ; k <= j ; k ++ )",
        "else",
        "cout << SEGMENT << endl ;"
      ],
      "err_line": 4,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        6,
        8,
        27
      ],
      "mod_code": [
        "for ( ; j >= 4 ; j -- )",
        "for ( ; k <= j ; k ++ )",
        "else",
        "cout << IMPOSSIBLE << endl ;"
      ],
      "err_line": 4,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        6,
        9
      ],
      "mod_code": [
        "for ( ; j >= 4 ; j -- )",
        "for ( ; k <= j ; k ++ )",
        "cout << TRIANGLE << endl ;"
      ],
      "err_line": 4,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        6,
        9,
        20
      ],
      "mod_code": [
        "for ( ; j >= 4 ; j -- )",
        "for ( ; k <= j ; k ++ )",
        "cout << TRIANGLE << endl ;",
        "else"
      ],
      "err_line": 4,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        6,
        9,
        21
      ],
      "mod_code": [
        "for ( ; j >= 4 ; j -- )",
        "for ( ; k <= j ; k ++ )",
        "cout << TRIANGLE << endl ;",
        "cout << SEGMENT << endl ;"
      ],
      "err_line": 4,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        6,
        9,
        27
      ],
      "mod_code": [
        "for ( ; j >= 4 ; j -- )",
        "for ( ; k <= j ; k ++ )",
        "cout << TRIANGLE << endl ;",
        "cout << IMPOSSIBLE << endl ;"
      ],
      "err_line": 4,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        6,
        20
      ],
      "mod_code": [
        "for ( ; j >= 4 ; j -- )",
        "for ( ; k <= j ; k ++ )",
        "else"
      ],
      "err_line": 4,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        6,
        20,
        21
      ],
      "mod_code": [
        "for ( ; j >= 4 ; j -- )",
        "for ( ; k <= j ; k ++ )",
        "else",
        "cout << SEGMENT << endl ;"
      ],
      "err_line": 4,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        6,
        20,
        27
      ],
      "mod_code": [
        "for ( ; j >= 4 ; j -- )",
        "for ( ; k <= j ; k ++ )",
        "else",
        "cout << IMPOSSIBLE << endl ;"
      ],
      "err_line": 4,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        6,
        21
      ],
      "mod_code": [
        "for ( ; j >= 4 ; j -- )",
        "for ( ; k <= j ; k ++ )",
        "cout << SEGMENT << endl ;"
      ],
      "err_line": 4,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        6,
        21,
        27
      ],
      "mod_code": [
        "for ( ; j >= 4 ; j -- )",
        "for ( ; k <= j ; k ++ )",
        "cout << SEGMENT << endl ;",
        "cout << IMPOSSIBLE << endl ;"
      ],
      "err_line": 4,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        6,
        27
      ],
      "mod_code": [
        "for ( ; j >= 4 ; j -- )",
        "for ( ; k <= j ; k ++ )",
        "cout << IMPOSSIBLE << endl ;"
      ],
      "err_line": 4,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        7
      ],
      "mod_code": [
        "for ( ; j >= 4 ; j -- )",
        "if ( k == i || k == j )"
      ],
      "err_line": 4,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        7,
        8
      ],
      "mod_code": [
        "for ( ; j >= 4 ; j -- )",
        "if ( k == i || k == j )",
        "else"
      ],
      "err_line": 4,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        7,
        8,
        9
      ],
      "mod_code": [
        "for ( ; j >= 4 ; j -- )",
        "if ( k == i || k == j )",
        "else",
        "cout << TRIANGLE << endl ;"
      ],
      "err_line": 4,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        7,
        8,
        20
      ],
      "mod_code": [
        "for ( ; j >= 4 ; j -- )",
        "if ( k == i || k == j )",
        "else",
        "else"
      ],
      "err_line": 4,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        7,
        8,
        21
      ],
      "mod_code": [
        "for ( ; j >= 4 ; j -- )",
        "if ( k == i || k == j )",
        "else",
        "cout << SEGMENT << endl ;"
      ],
      "err_line": 4,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        7,
        8,
        27
      ],
      "mod_code": [
        "for ( ; j >= 4 ; j -- )",
        "if ( k == i || k == j )",
        "else",
        "cout << IMPOSSIBLE << endl ;"
      ],
      "err_line": 4,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        7,
        9
      ],
      "mod_code": [
        "for ( ; j >= 4 ; j -- )",
        "if ( k == i || k == j )",
        "cout << TRIANGLE << endl ;"
      ],
      "err_line": 4,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        7,
        9,
        20
      ],
      "mod_code": [
        "for ( ; j >= 4 ; j -- )",
        "if ( k == i || k == j )",
        "cout << TRIANGLE << endl ;",
        "else"
      ],
      "err_line": 4,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        7,
        9,
        21
      ],
      "mod_code": [
        "for ( ; j >= 4 ; j -- )",
        "if ( k == i || k == j )",
        "cout << TRIANGLE << endl ;",
        "cout << SEGMENT << endl ;"
      ],
      "err_line": 4,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        7,
        9,
        27
      ],
      "mod_code": [
        "for ( ; j >= 4 ; j -- )",
        "if ( k == i || k == j )",
        "cout << TRIANGLE << endl ;",
        "cout << IMPOSSIBLE << endl ;"
      ],
      "err_line": 4,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        7,
        20
      ],
      "mod_code": [
        "for ( ; j >= 4 ; j -- )",
        "if ( k == i || k == j )",
        "else"
      ],
      "err_line": 4,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        7,
        20,
        21
      ],
      "mod_code": [
        "for ( ; j >= 4 ; j -- )",
        "if ( k == i || k == j )",
        "else",
        "cout << SEGMENT << endl ;"
      ],
      "err_line": 4,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        7,
        20,
        27
      ],
      "mod_code": [
        "for ( ; j >= 4 ; j -- )",
        "if ( k == i || k == j )",
        "else",
        "cout << IMPOSSIBLE << endl ;"
      ],
      "err_line": 4,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        7,
        21
      ],
      "mod_code": [
        "for ( ; j >= 4 ; j -- )",
        "if ( k == i || k == j )",
        "cout << SEGMENT << endl ;"
      ],
      "err_line": 4,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        7,
        21,
        27
      ],
      "mod_code": [
        "for ( ; j >= 4 ; j -- )",
        "if ( k == i || k == j )",
        "cout << SEGMENT << endl ;",
        "cout << IMPOSSIBLE << endl ;"
      ],
      "err_line": 4,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        7,
        27
      ],
      "mod_code": [
        "for ( ; j >= 4 ; j -- )",
        "if ( k == i || k == j )",
        "cout << IMPOSSIBLE << endl ;"
      ],
      "err_line": 4,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        8
      ],
      "mod_code": [
        "for ( ; j >= 4 ; j -- )",
        "else"
      ],
      "err_line": 4,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        8,
        9
      ],
      "mod_code": [
        "for ( ; j >= 4 ; j -- )",
        "else",
        "cout << TRIANGLE << endl ;"
      ],
      "err_line": 4,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        8,
        9,
        20
      ],
      "mod_code": [
        "for ( ; j >= 4 ; j -- )",
        "else",
        "cout << TRIANGLE << endl ;",
        "else"
      ],
      "err_line": 4,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        8,
        9,
        21
      ],
      "mod_code": [
        "for ( ; j >= 4 ; j -- )",
        "else",
        "cout << TRIANGLE << endl ;",
        "cout << SEGMENT << endl ;"
      ],
      "err_line": 4,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        8,
        9,
        27
      ],
      "mod_code": [
        "for ( ; j >= 4 ; j -- )",
        "else",
        "cout << TRIANGLE << endl ;",
        "cout << IMPOSSIBLE << endl ;"
      ],
      "err_line": 4,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        8,
        20
      ],
      "mod_code": [
        "for ( ; j >= 4 ; j -- )",
        "else",
        "else"
      ],
      "err_line": 4,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        8,
        20,
        21
      ],
      "mod_code": [
        "for ( ; j >= 4 ; j -- )",
        "else",
        "else",
        "cout << SEGMENT << endl ;"
      ],
      "err_line": 4,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        8,
        20,
        27
      ],
      "mod_code": [
        "for ( ; j >= 4 ; j -- )",
        "else",
        "else",
        "cout << IMPOSSIBLE << endl ;"
      ],
      "err_line": 4,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        8,
        21
      ],
      "mod_code": [
        "for ( ; j >= 4 ; j -- )",
        "else",
        "cout << SEGMENT << endl ;"
      ],
      "err_line": 4,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        8,
        21,
        27
      ],
      "mod_code": [
        "for ( ; j >= 4 ; j -- )",
        "else",
        "cout << SEGMENT << endl ;",
        "cout << IMPOSSIBLE << endl ;"
      ],
      "err_line": 4,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        8,
        27
      ],
      "mod_code": [
        "for ( ; j >= 4 ; j -- )",
        "else",
        "cout << IMPOSSIBLE << endl ;"
      ],
      "err_line": 4,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        9
      ],
      "mod_code": [
        "for ( ; j >= 4 ; j -- )",
        "cout << TRIANGLE << endl ;"
      ],
      "err_line": 4,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        9,
        20
      ],
      "mod_code": [
        "for ( ; j >= 4 ; j -- )",
        "cout << TRIANGLE << endl ;",
        "else"
      ],
      "err_line": 4,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        9,
        20,
        21
      ],
      "mod_code": [
        "for ( ; j >= 4 ; j -- )",
        "cout << TRIANGLE << endl ;",
        "else",
        "cout << SEGMENT << endl ;"
      ],
      "err_line": 4,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        9,
        20,
        27
      ],
      "mod_code": [
        "for ( ; j >= 4 ; j -- )",
        "cout << TRIANGLE << endl ;",
        "else",
        "cout << IMPOSSIBLE << endl ;"
      ],
      "err_line": 4,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        9,
        21
      ],
      "mod_code": [
        "for ( ; j >= 4 ; j -- )",
        "cout << TRIANGLE << endl ;",
        "cout << SEGMENT << endl ;"
      ],
      "err_line": 4,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        9,
        21,
        27
      ],
      "mod_code": [
        "for ( ; j >= 4 ; j -- )",
        "cout << TRIANGLE << endl ;",
        "cout << SEGMENT << endl ;",
        "cout << IMPOSSIBLE << endl ;"
      ],
      "err_line": 4,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        9,
        27
      ],
      "mod_code": [
        "for ( ; j >= 4 ; j -- )",
        "cout << TRIANGLE << endl ;",
        "cout << IMPOSSIBLE << endl ;"
      ],
      "err_line": 4,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        20
      ],
      "mod_code": [
        "for ( ; j >= 4 ; j -- )",
        "else"
      ],
      "err_line": 4,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        20,
        21
      ],
      "mod_code": [
        "for ( ; j >= 4 ; j -- )",
        "else",
        "cout << SEGMENT << endl ;"
      ],
      "err_line": 4,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        20,
        21,
        27
      ],
      "mod_code": [
        "for ( ; j >= 4 ; j -- )",
        "else",
        "cout << SEGMENT << endl ;",
        "cout << IMPOSSIBLE << endl ;"
      ],
      "err_line": 4,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        20,
        27
      ],
      "mod_code": [
        "for ( ; j >= 4 ; j -- )",
        "else",
        "cout << IMPOSSIBLE << endl ;"
      ],
      "err_line": 4,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        21
      ],
      "mod_code": [
        "for ( ; j >= 4 ; j -- )",
        "cout << SEGMENT << endl ;"
      ],
      "err_line": 4,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        21,
        27
      ],
      "mod_code": [
        "for ( ; j >= 4 ; j -- )",
        "cout << SEGMENT << endl ;",
        "cout << IMPOSSIBLE << endl ;"
      ],
      "err_line": 4,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        27
      ],
      "mod_code": [
        "for ( ; j >= 4 ; j -- )",
        "cout << IMPOSSIBLE << endl ;"
      ],
      "err_line": 4,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        7
      ],
      "mod_code": [
        "for ( ; k <= j ; k ++ )",
        "if ( k == i || k == j )"
      ],
      "err_line": 6,
      "err_msg": "‘k’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        7,
        8
      ],
      "mod_code": [
        "for ( ; k <= j ; k ++ )",
        "if ( k == i || k == j )",
        "else"
      ],
      "err_line": 6,
      "err_msg": "‘k’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        7,
        8,
        9
      ],
      "mod_code": [
        "for ( ; k <= j ; k ++ )",
        "if ( k == i || k == j )",
        "else",
        "cout << TRIANGLE << endl ;"
      ],
      "err_line": 6,
      "err_msg": "‘k’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        7,
        8,
        20
      ],
      "mod_code": [
        "for ( ; k <= j ; k ++ )",
        "if ( k == i || k == j )",
        "else",
        "else"
      ],
      "err_line": 6,
      "err_msg": "‘k’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        7,
        8,
        21
      ],
      "mod_code": [
        "for ( ; k <= j ; k ++ )",
        "if ( k == i || k == j )",
        "else",
        "cout << SEGMENT << endl ;"
      ],
      "err_line": 6,
      "err_msg": "‘k’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        7,
        8,
        27
      ],
      "mod_code": [
        "for ( ; k <= j ; k ++ )",
        "if ( k == i || k == j )",
        "else",
        "cout << IMPOSSIBLE << endl ;"
      ],
      "err_line": 6,
      "err_msg": "‘k’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        7,
        9
      ],
      "mod_code": [
        "for ( ; k <= j ; k ++ )",
        "if ( k == i || k == j )",
        "cout << TRIANGLE << endl ;"
      ],
      "err_line": 6,
      "err_msg": "‘k’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        7,
        9,
        20
      ],
      "mod_code": [
        "for ( ; k <= j ; k ++ )",
        "if ( k == i || k == j )",
        "cout << TRIANGLE << endl ;",
        "else"
      ],
      "err_line": 6,
      "err_msg": "‘k’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        7,
        9,
        21
      ],
      "mod_code": [
        "for ( ; k <= j ; k ++ )",
        "if ( k == i || k == j )",
        "cout << TRIANGLE << endl ;",
        "cout << SEGMENT << endl ;"
      ],
      "err_line": 6,
      "err_msg": "‘k’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        7,
        9,
        27
      ],
      "mod_code": [
        "for ( ; k <= j ; k ++ )",
        "if ( k == i || k == j )",
        "cout << TRIANGLE << endl ;",
        "cout << IMPOSSIBLE << endl ;"
      ],
      "err_line": 6,
      "err_msg": "‘k’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        7,
        20
      ],
      "mod_code": [
        "for ( ; k <= j ; k ++ )",
        "if ( k == i || k == j )",
        "else"
      ],
      "err_line": 6,
      "err_msg": "‘k’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        7,
        20,
        21
      ],
      "mod_code": [
        "for ( ; k <= j ; k ++ )",
        "if ( k == i || k == j )",
        "else",
        "cout << SEGMENT << endl ;"
      ],
      "err_line": 6,
      "err_msg": "‘k’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        7,
        20,
        27
      ],
      "mod_code": [
        "for ( ; k <= j ; k ++ )",
        "if ( k == i || k == j )",
        "else",
        "cout << IMPOSSIBLE << endl ;"
      ],
      "err_line": 6,
      "err_msg": "‘k’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        7,
        21
      ],
      "mod_code": [
        "for ( ; k <= j ; k ++ )",
        "if ( k == i || k == j )",
        "cout << SEGMENT << endl ;"
      ],
      "err_line": 6,
      "err_msg": "‘k’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        7,
        21,
        27
      ],
      "mod_code": [
        "for ( ; k <= j ; k ++ )",
        "if ( k == i || k == j )",
        "cout << SEGMENT << endl ;",
        "cout << IMPOSSIBLE << endl ;"
      ],
      "err_line": 6,
      "err_msg": "‘k’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        7,
        27
      ],
      "mod_code": [
        "for ( ; k <= j ; k ++ )",
        "if ( k == i || k == j )",
        "cout << IMPOSSIBLE << endl ;"
      ],
      "err_line": 6,
      "err_msg": "‘k’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        8
      ],
      "mod_code": [
        "for ( ; k <= j ; k ++ )",
        "else"
      ],
      "err_line": 6,
      "err_msg": "‘k’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        8,
        9
      ],
      "mod_code": [
        "for ( ; k <= j ; k ++ )",
        "else",
        "cout << TRIANGLE << endl ;"
      ],
      "err_line": 6,
      "err_msg": "‘k’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        8,
        9,
        20
      ],
      "mod_code": [
        "for ( ; k <= j ; k ++ )",
        "else",
        "cout << TRIANGLE << endl ;",
        "else"
      ],
      "err_line": 6,
      "err_msg": "‘k’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        8,
        9,
        21
      ],
      "mod_code": [
        "for ( ; k <= j ; k ++ )",
        "else",
        "cout << TRIANGLE << endl ;",
        "cout << SEGMENT << endl ;"
      ],
      "err_line": 6,
      "err_msg": "‘k’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        8,
        9,
        27
      ],
      "mod_code": [
        "for ( ; k <= j ; k ++ )",
        "else",
        "cout << TRIANGLE << endl ;",
        "cout << IMPOSSIBLE << endl ;"
      ],
      "err_line": 6,
      "err_msg": "‘k’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        8,
        20
      ],
      "mod_code": [
        "for ( ; k <= j ; k ++ )",
        "else",
        "else"
      ],
      "err_line": 6,
      "err_msg": "‘k’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        8,
        20,
        21
      ],
      "mod_code": [
        "for ( ; k <= j ; k ++ )",
        "else",
        "else",
        "cout << SEGMENT << endl ;"
      ],
      "err_line": 6,
      "err_msg": "‘k’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        8,
        20,
        27
      ],
      "mod_code": [
        "for ( ; k <= j ; k ++ )",
        "else",
        "else",
        "cout << IMPOSSIBLE << endl ;"
      ],
      "err_line": 6,
      "err_msg": "‘k’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        8,
        21
      ],
      "mod_code": [
        "for ( ; k <= j ; k ++ )",
        "else",
        "cout << SEGMENT << endl ;"
      ],
      "err_line": 6,
      "err_msg": "‘k’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        8,
        21,
        27
      ],
      "mod_code": [
        "for ( ; k <= j ; k ++ )",
        "else",
        "cout << SEGMENT << endl ;",
        "cout << IMPOSSIBLE << endl ;"
      ],
      "err_line": 6,
      "err_msg": "‘k’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        8,
        27
      ],
      "mod_code": [
        "for ( ; k <= j ; k ++ )",
        "else",
        "cout << IMPOSSIBLE << endl ;"
      ],
      "err_line": 6,
      "err_msg": "‘k’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        9
      ],
      "mod_code": [
        "for ( ; k <= j ; k ++ )",
        "cout << TRIANGLE << endl ;"
      ],
      "err_line": 6,
      "err_msg": "‘k’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        9,
        20
      ],
      "mod_code": [
        "for ( ; k <= j ; k ++ )",
        "cout << TRIANGLE << endl ;",
        "else"
      ],
      "err_line": 6,
      "err_msg": "‘k’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        9,
        20,
        21
      ],
      "mod_code": [
        "for ( ; k <= j ; k ++ )",
        "cout << TRIANGLE << endl ;",
        "else",
        "cout << SEGMENT << endl ;"
      ],
      "err_line": 6,
      "err_msg": "‘k’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        9,
        20,
        27
      ],
      "mod_code": [
        "for ( ; k <= j ; k ++ )",
        "cout << TRIANGLE << endl ;",
        "else",
        "cout << IMPOSSIBLE << endl ;"
      ],
      "err_line": 6,
      "err_msg": "‘k’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        9,
        21
      ],
      "mod_code": [
        "for ( ; k <= j ; k ++ )",
        "cout << TRIANGLE << endl ;",
        "cout << SEGMENT << endl ;"
      ],
      "err_line": 6,
      "err_msg": "‘k’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        9,
        21,
        27
      ],
      "mod_code": [
        "for ( ; k <= j ; k ++ )",
        "cout << TRIANGLE << endl ;",
        "cout << SEGMENT << endl ;",
        "cout << IMPOSSIBLE << endl ;"
      ],
      "err_line": 6,
      "err_msg": "‘k’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        9,
        27
      ],
      "mod_code": [
        "for ( ; k <= j ; k ++ )",
        "cout << TRIANGLE << endl ;",
        "cout << IMPOSSIBLE << endl ;"
      ],
      "err_line": 6,
      "err_msg": "‘k’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        20
      ],
      "mod_code": [
        "for ( ; k <= j ; k ++ )",
        "else"
      ],
      "err_line": 6,
      "err_msg": "‘k’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        20,
        21
      ],
      "mod_code": [
        "for ( ; k <= j ; k ++ )",
        "else",
        "cout << SEGMENT << endl ;"
      ],
      "err_line": 6,
      "err_msg": "‘k’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        20,
        21,
        27
      ],
      "mod_code": [
        "for ( ; k <= j ; k ++ )",
        "else",
        "cout << SEGMENT << endl ;",
        "cout << IMPOSSIBLE << endl ;"
      ],
      "err_line": 6,
      "err_msg": "‘k’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        20,
        27
      ],
      "mod_code": [
        "for ( ; k <= j ; k ++ )",
        "else",
        "cout << IMPOSSIBLE << endl ;"
      ],
      "err_line": 6,
      "err_msg": "‘k’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        21
      ],
      "mod_code": [
        "for ( ; k <= j ; k ++ )",
        "cout << SEGMENT << endl ;"
      ],
      "err_line": 6,
      "err_msg": "‘k’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        21,
        27
      ],
      "mod_code": [
        "for ( ; k <= j ; k ++ )",
        "cout << SEGMENT << endl ;",
        "cout << IMPOSSIBLE << endl ;"
      ],
      "err_line": 6,
      "err_msg": "‘k’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        27
      ],
      "mod_code": [
        "for ( ; k <= j ; k ++ )",
        "cout << IMPOSSIBLE << endl ;"
      ],
      "err_line": 6,
      "err_msg": "‘k’ was not declared in this scope"
    },
    {
      "mod_line": [
        7,
        8
      ],
      "mod_code": [
        "if ( k == i || k == j )",
        "else"
      ],
      "err_line": 8,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        7,
        8,
        9
      ],
      "mod_code": [
        "if ( k == i || k == j )",
        "else",
        "cout << TRIANGLE << endl ;"
      ],
      "err_line": 8,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        7,
        8,
        9,
        20
      ],
      "mod_code": [
        "if ( k == i || k == j )",
        "else",
        "cout << TRIANGLE << endl ;",
        "else"
      ],
      "err_line": 8,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        7,
        8,
        9,
        21
      ],
      "mod_code": [
        "if ( k == i || k == j )",
        "else",
        "cout << TRIANGLE << endl ;",
        "cout << SEGMENT << endl ;"
      ],
      "err_line": 8,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        7,
        8,
        9,
        27
      ],
      "mod_code": [
        "if ( k == i || k == j )",
        "else",
        "cout << TRIANGLE << endl ;",
        "cout << IMPOSSIBLE << endl ;"
      ],
      "err_line": 8,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        7,
        8,
        20
      ],
      "mod_code": [
        "if ( k == i || k == j )",
        "else",
        "else"
      ],
      "err_line": 8,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        7,
        8,
        20,
        21
      ],
      "mod_code": [
        "if ( k == i || k == j )",
        "else",
        "else",
        "cout << SEGMENT << endl ;"
      ],
      "err_line": 8,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        7,
        8,
        20,
        27
      ],
      "mod_code": [
        "if ( k == i || k == j )",
        "else",
        "else",
        "cout << IMPOSSIBLE << endl ;"
      ],
      "err_line": 8,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        7,
        8,
        21
      ],
      "mod_code": [
        "if ( k == i || k == j )",
        "else",
        "cout << SEGMENT << endl ;"
      ],
      "err_line": 8,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        7,
        8,
        21,
        27
      ],
      "mod_code": [
        "if ( k == i || k == j )",
        "else",
        "cout << SEGMENT << endl ;",
        "cout << IMPOSSIBLE << endl ;"
      ],
      "err_line": 8,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        7,
        8,
        27
      ],
      "mod_code": [
        "if ( k == i || k == j )",
        "else",
        "cout << IMPOSSIBLE << endl ;"
      ],
      "err_line": 8,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        7,
        9
      ],
      "mod_code": [
        "if ( k == i || k == j )",
        "cout << TRIANGLE << endl ;"
      ],
      "err_line": 9,
      "err_msg": "‘TRIANGLE’ was not declared in this scope"
    },
    {
      "mod_line": [
        7,
        9,
        20
      ],
      "mod_code": [
        "if ( k == i || k == j )",
        "cout << TRIANGLE << endl ;",
        "else"
      ],
      "err_line": 9,
      "err_msg": "‘TRIANGLE’ was not declared in this scope"
    },
    {
      "mod_line": [
        7,
        9,
        20,
        21
      ],
      "mod_code": [
        "if ( k == i || k == j )",
        "cout << TRIANGLE << endl ;",
        "else",
        "cout << SEGMENT << endl ;"
      ],
      "err_line": 9,
      "err_msg": "‘TRIANGLE’ was not declared in this scope"
    },
    {
      "mod_line": [
        7,
        9,
        20,
        27
      ],
      "mod_code": [
        "if ( k == i || k == j )",
        "cout << TRIANGLE << endl ;",
        "else",
        "cout << IMPOSSIBLE << endl ;"
      ],
      "err_line": 9,
      "err_msg": "‘TRIANGLE’ was not declared in this scope"
    },
    {
      "mod_line": [
        7,
        9,
        21
      ],
      "mod_code": [
        "if ( k == i || k == j )",
        "cout << TRIANGLE << endl ;",
        "cout << SEGMENT << endl ;"
      ],
      "err_line": 9,
      "err_msg": "‘TRIANGLE’ was not declared in this scope"
    },
    {
      "mod_line": [
        7,
        9,
        21,
        27
      ],
      "mod_code": [
        "if ( k == i || k == j )",
        "cout << TRIANGLE << endl ;",
        "cout << SEGMENT << endl ;",
        "cout << IMPOSSIBLE << endl ;"
      ],
      "err_line": 9,
      "err_msg": "‘TRIANGLE’ was not declared in this scope"
    },
    {
      "mod_line": [
        7,
        9,
        27
      ],
      "mod_code": [
        "if ( k == i || k == j )",
        "cout << TRIANGLE << endl ;",
        "cout << IMPOSSIBLE << endl ;"
      ],
      "err_line": 9,
      "err_msg": "‘TRIANGLE’ was not declared in this scope"
    },
    {
      "mod_line": [
        7,
        20,
        21
      ],
      "mod_code": [
        "if ( k == i || k == j )",
        "else",
        "cout << SEGMENT << endl ;"
      ],
      "err_line": 21,
      "err_msg": "‘SEGMENT’ was not declared in this scope"
    },
    {
      "mod_line": [
        7,
        20,
        21,
        27
      ],
      "mod_code": [
        "if ( k == i || k == j )",
        "else",
        "cout << SEGMENT << endl ;",
        "cout << IMPOSSIBLE << endl ;"
      ],
      "err_line": 21,
      "err_msg": "‘SEGMENT’ was not declared in this scope"
    },
    {
      "mod_line": [
        7,
        20,
        27
      ],
      "mod_code": [
        "if ( k == i || k == j )",
        "else",
        "cout << IMPOSSIBLE << endl ;"
      ],
      "err_line": 27,
      "err_msg": "‘IMPOSSIBLE’ was not declared in this scope"
    },
    {
      "mod_line": [
        7,
        21
      ],
      "mod_code": [
        "if ( k == i || k == j )",
        "cout << SEGMENT << endl ;"
      ],
      "err_line": 21,
      "err_msg": "‘SEGMENT’ was not declared in this scope"
    },
    {
      "mod_line": [
        7,
        21,
        27
      ],
      "mod_code": [
        "if ( k == i || k == j )",
        "cout << SEGMENT << endl ;",
        "cout << IMPOSSIBLE << endl ;"
      ],
      "err_line": 21,
      "err_msg": "‘SEGMENT’ was not declared in this scope"
    },
    {
      "mod_line": [
        7,
        27
      ],
      "mod_code": [
        "if ( k == i || k == j )",
        "cout << IMPOSSIBLE << endl ;"
      ],
      "err_line": 27,
      "err_msg": "‘IMPOSSIBLE’ was not declared in this scope"
    },
    {
      "mod_line": [
        8,
        9
      ],
      "mod_code": [
        "else",
        "cout << TRIANGLE << endl ;"
      ],
      "err_line": 9,
      "err_msg": "‘TRIANGLE’ was not declared in this scope"
    },
    {
      "mod_line": [
        8,
        9,
        20
      ],
      "mod_code": [
        "else",
        "cout << TRIANGLE << endl ;",
        "else"
      ],
      "err_line": 9,
      "err_msg": "‘TRIANGLE’ was not declared in this scope"
    },
    {
      "mod_line": [
        8,
        9,
        20,
        21
      ],
      "mod_code": [
        "else",
        "cout << TRIANGLE << endl ;",
        "else",
        "cout << SEGMENT << endl ;"
      ],
      "err_line": 9,
      "err_msg": "‘TRIANGLE’ was not declared in this scope"
    },
    {
      "mod_line": [
        8,
        9,
        20,
        27
      ],
      "mod_code": [
        "else",
        "cout << TRIANGLE << endl ;",
        "else",
        "cout << IMPOSSIBLE << endl ;"
      ],
      "err_line": 9,
      "err_msg": "‘TRIANGLE’ was not declared in this scope"
    },
    {
      "mod_line": [
        8,
        9,
        21
      ],
      "mod_code": [
        "else",
        "cout << TRIANGLE << endl ;",
        "cout << SEGMENT << endl ;"
      ],
      "err_line": 9,
      "err_msg": "‘TRIANGLE’ was not declared in this scope"
    },
    {
      "mod_line": [
        8,
        9,
        21,
        27
      ],
      "mod_code": [
        "else",
        "cout << TRIANGLE << endl ;",
        "cout << SEGMENT << endl ;",
        "cout << IMPOSSIBLE << endl ;"
      ],
      "err_line": 9,
      "err_msg": "‘TRIANGLE’ was not declared in this scope"
    },
    {
      "mod_line": [
        8,
        9,
        27
      ],
      "mod_code": [
        "else",
        "cout << TRIANGLE << endl ;",
        "cout << IMPOSSIBLE << endl ;"
      ],
      "err_line": 9,
      "err_msg": "‘TRIANGLE’ was not declared in this scope"
    },
    {
      "mod_line": [
        8,
        20,
        21
      ],
      "mod_code": [
        "else",
        "else",
        "cout << SEGMENT << endl ;"
      ],
      "err_line": 21,
      "err_msg": "‘SEGMENT’ was not declared in this scope"
    },
    {
      "mod_line": [
        8,
        20,
        21,
        27
      ],
      "mod_code": [
        "else",
        "else",
        "cout << SEGMENT << endl ;",
        "cout << IMPOSSIBLE << endl ;"
      ],
      "err_line": 21,
      "err_msg": "‘SEGMENT’ was not declared in this scope"
    },
    {
      "mod_line": [
        8,
        20,
        27
      ],
      "mod_code": [
        "else",
        "else",
        "cout << IMPOSSIBLE << endl ;"
      ],
      "err_line": 27,
      "err_msg": "‘IMPOSSIBLE’ was not declared in this scope"
    },
    {
      "mod_line": [
        8,
        21
      ],
      "mod_code": [
        "else",
        "cout << SEGMENT << endl ;"
      ],
      "err_line": 21,
      "err_msg": "‘SEGMENT’ was not declared in this scope"
    },
    {
      "mod_line": [
        8,
        21,
        27
      ],
      "mod_code": [
        "else",
        "cout << SEGMENT << endl ;",
        "cout << IMPOSSIBLE << endl ;"
      ],
      "err_line": 21,
      "err_msg": "‘SEGMENT’ was not declared in this scope"
    },
    {
      "mod_line": [
        8,
        27
      ],
      "mod_code": [
        "else",
        "cout << IMPOSSIBLE << endl ;"
      ],
      "err_line": 27,
      "err_msg": "‘IMPOSSIBLE’ was not declared in this scope"
    },
    {
      "mod_line": [
        9,
        20
      ],
      "mod_code": [
        "cout << TRIANGLE << endl ;",
        "else"
      ],
      "err_line": 9,
      "err_msg": "‘TRIANGLE’ was not declared in this scope"
    },
    {
      "mod_line": [
        9,
        20,
        21
      ],
      "mod_code": [
        "cout << TRIANGLE << endl ;",
        "else",
        "cout << SEGMENT << endl ;"
      ],
      "err_line": 9,
      "err_msg": "‘TRIANGLE’ was not declared in this scope"
    },
    {
      "mod_line": [
        9,
        20,
        21,
        27
      ],
      "mod_code": [
        "cout << TRIANGLE << endl ;",
        "else",
        "cout << SEGMENT << endl ;",
        "cout << IMPOSSIBLE << endl ;"
      ],
      "err_line": 9,
      "err_msg": "‘TRIANGLE’ was not declared in this scope"
    },
    {
      "mod_line": [
        9,
        20,
        27
      ],
      "mod_code": [
        "cout << TRIANGLE << endl ;",
        "else",
        "cout << IMPOSSIBLE << endl ;"
      ],
      "err_line": 9,
      "err_msg": "‘TRIANGLE’ was not declared in this scope"
    },
    {
      "mod_line": [
        9,
        21
      ],
      "mod_code": [
        "cout << TRIANGLE << endl ;",
        "cout << SEGMENT << endl ;"
      ],
      "err_line": 9,
      "err_msg": "‘TRIANGLE’ was not declared in this scope"
    },
    {
      "mod_line": [
        9,
        21,
        27
      ],
      "mod_code": [
        "cout << TRIANGLE << endl ;",
        "cout << SEGMENT << endl ;",
        "cout << IMPOSSIBLE << endl ;"
      ],
      "err_line": 9,
      "err_msg": "‘TRIANGLE’ was not declared in this scope"
    },
    {
      "mod_line": [
        9,
        27
      ],
      "mod_code": [
        "cout << TRIANGLE << endl ;",
        "cout << IMPOSSIBLE << endl ;"
      ],
      "err_line": 9,
      "err_msg": "‘TRIANGLE’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        21
      ],
      "mod_code": [
        "else",
        "cout << SEGMENT << endl ;"
      ],
      "err_line": 21,
      "err_msg": "‘SEGMENT’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        21,
        27
      ],
      "mod_code": [
        "else",
        "cout << SEGMENT << endl ;",
        "cout << IMPOSSIBLE << endl ;"
      ],
      "err_line": 21,
      "err_msg": "‘SEGMENT’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        27
      ],
      "mod_code": [
        "else",
        "cout << IMPOSSIBLE << endl ;"
      ],
      "err_line": 27,
      "err_msg": "‘IMPOSSIBLE’ was not declared in this scope"
    },
    {
      "mod_line": [
        21,
        27
      ],
      "mod_code": [
        "cout << SEGMENT << endl ;",
        "cout << IMPOSSIBLE << endl ;"
      ],
      "err_line": 21,
      "err_msg": "‘SEGMENT’ was not declared in this scope"
    }
  ]
}