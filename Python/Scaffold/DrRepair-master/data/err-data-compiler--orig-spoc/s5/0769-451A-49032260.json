{
  "meta": {
    "index": 769,
    "hitid": "3R5LWXWHR02AJZGA8ITMLYXT2RZGXS",
    "workerid": "A1R0Q9CUUBSM5F",
    "probid": "451A",
    "subid": "49032260"
  },
  "lines": [
    {
      "line": 0,
      "text": "declare prime taking in int n and returning bool",
      "code": "bool prime ( int n )",
      "indent": 0
    },
    {
      "line": 1,
      "text": "let int c = 0",
      "code": "int c = 0 ;",
      "indent": 1
    },
    {
      "line": 2,
      "text": "for i = 1 to n exclusive",
      "code": "for ( int i = 1 ; i < n ; i ++ )",
      "indent": 1
    },
    {
      "line": 3,
      "text": "if n modulo i is 0 , increase c by 1",
      "code": "if ( n % i == 0 ) c ++ ;",
      "indent": 2
    },
    {
      "line": 4,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 5,
      "text": "if c is equal to 1",
      "code": "if ( c == 1 )",
      "indent": 1
    },
    {
      "line": 6,
      "text": "return true",
      "code": "return true ;",
      "indent": 2
    },
    {
      "line": 7,
      "text": "else",
      "code": "else",
      "indent": 1
    },
    {
      "line": 8,
      "text": "return false",
      "code": "return false ;",
      "indent": 2
    },
    {
      "line": 9,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    },
    {
      "line": 10,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 11,
      "text": "let ints n , m , and x",
      "code": "int n , m , x ;",
      "indent": 1
    },
    {
      "line": 12,
      "text": "read n and m",
      "code": "cin >> n >> m ;",
      "indent": 1
    },
    {
      "line": 13,
      "text": "if n is greater than m",
      "code": "if ( n > m )",
      "indent": 1
    },
    {
      "line": 14,
      "text": "set x to m",
      "code": "x = m ;",
      "indent": 2
    },
    {
      "line": 15,
      "text": "else",
      "code": "else",
      "indent": 1
    },
    {
      "line": 16,
      "text": "set x to n",
      "code": "x = n ;",
      "indent": 2
    },
    {
      "line": 17,
      "text": "if x modulo 2 is 0",
      "code": "if ( x % 2 == 0 )",
      "indent": 1
    },
    {
      "line": 18,
      "text": "print \" Malvika \"",
      "code": "cout << \" Malvika \" << endl ;",
      "indent": 2
    },
    {
      "line": 19,
      "text": "else",
      "code": "else",
      "indent": 1
    },
    {
      "line": 20,
      "text": "print \" Akshat \"",
      "code": "cout << \" Akshat \" << endl ;",
      "indent": 2
    },
    {
      "line": 21,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 22,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        0
      ],
      "mod_code": [
        "bool prime ( int n ) ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        0,
        18
      ],
      "mod_code": [
        "bool prime ( int n ) ;",
        "cout << \" Malvika \" ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        0,
        18,
        16
      ],
      "mod_code": [
        "bool prime ( int n ) ;",
        "cout << \" Malvika \" ;",
        "int x = n ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        0,
        18,
        16,
        12
      ],
      "mod_code": [
        "bool prime ( int n ) ;",
        "cout << \" Malvika \" ;",
        "int x = n ;",
        "cin >> m >> m ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        0,
        18,
        16,
        20
      ],
      "mod_code": [
        "bool prime ( int n ) ;",
        "cout << \" Malvika \" ;",
        "int x = n ;",
        "cout << \" Akshat \" ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        0,
        18,
        12
      ],
      "mod_code": [
        "bool prime ( int n ) ;",
        "cout << \" Malvika \" ;",
        "cin >> m >> m ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        0,
        18,
        12,
        20
      ],
      "mod_code": [
        "bool prime ( int n ) ;",
        "cout << \" Malvika \" ;",
        "cin >> m >> m ;",
        "cout << \" Akshat \" ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        0,
        18,
        20
      ],
      "mod_code": [
        "bool prime ( int n ) ;",
        "cout << \" Malvika \" ;",
        "cout << \" Akshat \" ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        0,
        16
      ],
      "mod_code": [
        "bool prime ( int n ) ;",
        "int x = n ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        0,
        16,
        12
      ],
      "mod_code": [
        "bool prime ( int n ) ;",
        "int x = n ;",
        "cin >> m >> m ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        0,
        16,
        12,
        20
      ],
      "mod_code": [
        "bool prime ( int n ) ;",
        "int x = n ;",
        "cin >> m >> m ;",
        "cout << \" Akshat \" ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        0,
        16,
        20
      ],
      "mod_code": [
        "bool prime ( int n ) ;",
        "int x = n ;",
        "cout << \" Akshat \" ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        0,
        12
      ],
      "mod_code": [
        "bool prime ( int n ) ;",
        "cin >> m >> m ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        0,
        12,
        20
      ],
      "mod_code": [
        "bool prime ( int n ) ;",
        "cin >> m >> m ;",
        "cout << \" Akshat \" ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        0,
        20
      ],
      "mod_code": [
        "bool prime ( int n ) ;",
        "cout << \" Akshat \" ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    }
  ]
}