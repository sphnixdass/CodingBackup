{
  "meta": {
    "index": 2562,
    "hitid": "39O6Z4JLX2RT1W65XDS8LZ03OJSVXQ",
    "workerid": "A2J7P30MA3S6OV",
    "probid": "154A",
    "subid": "48541274"
  },
  "lines": [
    {
      "line": 0,
      "text": "create integers k , ans , x , y",
      "code": "int k , ans , x , y ;",
      "indent": 0
    },
    {
      "line": 1,
      "text": "create string s",
      "code": "string s ;",
      "indent": 0
    },
    {
      "line": 2,
      "text": "a , b = char",
      "code": "char a , b ;",
      "indent": 0
    },
    {
      "line": 3,
      "text": "mp = map from char to char",
      "code": "map < char , char > mp ;",
      "indent": 0
    },
    {
      "line": 4,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 5,
      "text": "read s and k",
      "code": "cin >> s >> k ;",
      "indent": 1
    },
    {
      "line": 6,
      "text": "for i = 0 to k exclusive",
      "code": "for ( int i = 0 ; i < k ; i ++ )",
      "indent": 1
    },
    {
      "line": 7,
      "text": "read a and b",
      "code": "cin >> a >> b ;",
      "indent": 2
    },
    {
      "line": 8,
      "text": "set mp [ a ] = b and mp [ b ] = a",
      "code": "mp [ a ] = b , mp [ b ] = a ;",
      "indent": 2
    },
    {
      "line": 9,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 10,
      "text": "for i = 0 to size of s",
      "code": "for ( int i = 0 ; i < s . size ( ) ; i ++ )",
      "indent": 1
    },
    {
      "line": 11,
      "text": "set x = 0 and y = 0",
      "code": "x = 0 , y = 0 ;",
      "indent": 2
    },
    {
      "line": 12,
      "text": "set a = s [ i ] and b = mp [ s [ i ] ]",
      "code": "a = s [ i ] , b = mp [ s [ i ] ] ;",
      "indent": 2
    },
    {
      "line": 13,
      "text": "if mp [ a ] is a lowercase letter , continue the loop",
      "code": "if ( ! islower ( mp [ a ] ) ) continue ;",
      "indent": 2
    },
    {
      "line": 14,
      "text": "while i + 1 is less than size of s and s [ i + 1 ] is equal to a or s [ i + 1 ] is equal to b",
      "code": "while ( i + 1 < s . size ( ) && s [ i + 1 ] == a || s [ i + 1 ] == b )",
      "indent": 2
    },
    {
      "line": 15,
      "text": "if s [ i ] = a",
      "code": "if ( s [ i ] == a )",
      "indent": 3
    },
    {
      "line": 16,
      "text": "increment x",
      "code": "x ++ ;",
      "indent": 4
    },
    {
      "line": 17,
      "text": "otherwise",
      "code": "else",
      "indent": 3
    },
    {
      "line": 18,
      "text": "increment y",
      "code": "y ++ ;",
      "indent": 4
    },
    {
      "line": 19,
      "text": "increment i",
      "code": "i ++ ;",
      "indent": 3
    },
    {
      "line": 20,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 21,
      "text": "if s [ i ] is equal to a",
      "code": "if ( s [ i ] == a )",
      "indent": 2
    },
    {
      "line": 22,
      "text": "increment x",
      "code": "x ++ ;",
      "indent": 3
    },
    {
      "line": 23,
      "text": "otherwise",
      "code": "else",
      "indent": 2
    },
    {
      "line": 24,
      "text": "increment y",
      "code": "y ++ ;",
      "indent": 3
    },
    {
      "line": 25,
      "text": "set ans equal to and + min ( x , y )",
      "code": "ans += min ( x , y ) ;",
      "indent": 2
    },
    {
      "line": 26,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 27,
      "text": "print and and a new line",
      "code": "cout << ans << endl ;",
      "indent": 1
    },
    {
      "line": 28,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 29,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        1
      ],
      "mod_code": [
        "string n ;"
      ],
      "err_line": 5,
      "err_msg": "‘s’ was not declared in this scope"
    },
    {
      "mod_line": [
        3
      ],
      "mod_code": [
        "map < char , char > :: mp ;"
      ],
      "err_line": 3,
      "err_msg": "‘mp’ in ‘class std::map<char, char>’ does not name a type"
    },
    {
      "mod_line": [
        6
      ],
      "mod_code": [
        "for ( i = 0 ; i < k ; i ++ )"
      ],
      "err_line": 6,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        10
      ],
      "mod_code": [
        "for ( i = 0 ; i < s . size ( ) ; i ++ )"
      ],
      "err_line": 10,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        17
      ],
      "mod_code": [
        "otherwise"
      ],
      "err_line": 17,
      "err_msg": "‘otherwise’ was not declared in this scope"
    },
    {
      "mod_line": [
        23
      ],
      "mod_code": [
        "otherwise"
      ],
      "err_line": 23,
      "err_msg": "‘otherwise’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        14,
        15,
        6
      ],
      "mod_code": [
        "if ( isupper ( mp [ a ] ) ) continue ;",
        "while ( i + 1 < s . size ( ) && s [ i + 1 ] == ' a ' || s [ i + 1 ] == ' b ' )",
        "if ( s [ i ] == ' a ' )",
        "for ( i = 0 ; i < k ; i ++ )"
      ],
      "err_line": 6,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        14,
        21,
        6
      ],
      "mod_code": [
        "if ( isupper ( mp [ a ] ) ) continue ;",
        "while ( i + 1 < s . size ( ) && s [ i + 1 ] == ' a ' || s [ i + 1 ] == ' b ' )",
        "if ( s [ i ] == ' a ' )",
        "for ( i = 0 ; i < k ; i ++ )"
      ],
      "err_line": 6,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        14,
        27,
        6
      ],
      "mod_code": [
        "if ( isupper ( mp [ a ] ) ) continue ;",
        "while ( i + 1 < s . size ( ) && s [ i + 1 ] == ' a ' || s [ i + 1 ] == ' b ' )",
        "cout << \" -1\\n \" ;",
        "for ( i = 0 ; i < k ; i ++ )"
      ],
      "err_line": 6,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        14,
        6
      ],
      "mod_code": [
        "if ( isupper ( mp [ a ] ) ) continue ;",
        "while ( i + 1 < s . size ( ) && s [ i + 1 ] == ' a ' || s [ i + 1 ] == ' b ' )",
        "for ( i = 0 ; i < k ; i ++ )"
      ],
      "err_line": 6,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        15,
        21,
        6
      ],
      "mod_code": [
        "if ( isupper ( mp [ a ] ) ) continue ;",
        "if ( s [ i ] == ' a ' )",
        "if ( s [ i ] == ' a ' )",
        "for ( i = 0 ; i < k ; i ++ )"
      ],
      "err_line": 6,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        15,
        27,
        6
      ],
      "mod_code": [
        "if ( isupper ( mp [ a ] ) ) continue ;",
        "if ( s [ i ] == ' a ' )",
        "cout << \" -1\\n \" ;",
        "for ( i = 0 ; i < k ; i ++ )"
      ],
      "err_line": 6,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        15,
        6
      ],
      "mod_code": [
        "if ( isupper ( mp [ a ] ) ) continue ;",
        "if ( s [ i ] == ' a ' )",
        "for ( i = 0 ; i < k ; i ++ )"
      ],
      "err_line": 6,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        21,
        27,
        6
      ],
      "mod_code": [
        "if ( isupper ( mp [ a ] ) ) continue ;",
        "if ( s [ i ] == ' a ' )",
        "cout << \" -1\\n \" ;",
        "for ( i = 0 ; i < k ; i ++ )"
      ],
      "err_line": 6,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        21,
        6
      ],
      "mod_code": [
        "if ( isupper ( mp [ a ] ) ) continue ;",
        "if ( s [ i ] == ' a ' )",
        "for ( i = 0 ; i < k ; i ++ )"
      ],
      "err_line": 6,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        27,
        6
      ],
      "mod_code": [
        "if ( isupper ( mp [ a ] ) ) continue ;",
        "cout << \" -1\\n \" ;",
        "for ( i = 0 ; i < k ; i ++ )"
      ],
      "err_line": 6,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        6
      ],
      "mod_code": [
        "if ( isupper ( mp [ a ] ) ) continue ;",
        "for ( i = 0 ; i < k ; i ++ )"
      ],
      "err_line": 6,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        15,
        21,
        6
      ],
      "mod_code": [
        "while ( i + 1 < s . size ( ) && s [ i + 1 ] == ' a ' || s [ i + 1 ] == ' b ' )",
        "if ( s [ i ] == ' a ' )",
        "if ( s [ i ] == ' a ' )",
        "for ( i = 0 ; i < k ; i ++ )"
      ],
      "err_line": 6,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        15,
        27,
        6
      ],
      "mod_code": [
        "while ( i + 1 < s . size ( ) && s [ i + 1 ] == ' a ' || s [ i + 1 ] == ' b ' )",
        "if ( s [ i ] == ' a ' )",
        "cout << \" -1\\n \" ;",
        "for ( i = 0 ; i < k ; i ++ )"
      ],
      "err_line": 6,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        15,
        6
      ],
      "mod_code": [
        "while ( i + 1 < s . size ( ) && s [ i + 1 ] == ' a ' || s [ i + 1 ] == ' b ' )",
        "if ( s [ i ] == ' a ' )",
        "for ( i = 0 ; i < k ; i ++ )"
      ],
      "err_line": 6,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        21,
        27,
        6
      ],
      "mod_code": [
        "while ( i + 1 < s . size ( ) && s [ i + 1 ] == ' a ' || s [ i + 1 ] == ' b ' )",
        "if ( s [ i ] == ' a ' )",
        "cout << \" -1\\n \" ;",
        "for ( i = 0 ; i < k ; i ++ )"
      ],
      "err_line": 6,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        21,
        6
      ],
      "mod_code": [
        "while ( i + 1 < s . size ( ) && s [ i + 1 ] == ' a ' || s [ i + 1 ] == ' b ' )",
        "if ( s [ i ] == ' a ' )",
        "for ( i = 0 ; i < k ; i ++ )"
      ],
      "err_line": 6,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        27,
        6
      ],
      "mod_code": [
        "while ( i + 1 < s . size ( ) && s [ i + 1 ] == ' a ' || s [ i + 1 ] == ' b ' )",
        "cout << \" -1\\n \" ;",
        "for ( i = 0 ; i < k ; i ++ )"
      ],
      "err_line": 6,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        6
      ],
      "mod_code": [
        "while ( i + 1 < s . size ( ) && s [ i + 1 ] == ' a ' || s [ i + 1 ] == ' b ' )",
        "for ( i = 0 ; i < k ; i ++ )"
      ],
      "err_line": 6,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        15,
        21,
        27,
        6
      ],
      "mod_code": [
        "if ( s [ i ] == ' a ' )",
        "if ( s [ i ] == ' a ' )",
        "cout << \" -1\\n \" ;",
        "for ( i = 0 ; i < k ; i ++ )"
      ],
      "err_line": 6,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        15,
        21,
        6
      ],
      "mod_code": [
        "if ( s [ i ] == ' a ' )",
        "if ( s [ i ] == ' a ' )",
        "for ( i = 0 ; i < k ; i ++ )"
      ],
      "err_line": 6,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        15,
        27,
        6
      ],
      "mod_code": [
        "if ( s [ i ] == ' a ' )",
        "cout << \" -1\\n \" ;",
        "for ( i = 0 ; i < k ; i ++ )"
      ],
      "err_line": 6,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        15,
        6
      ],
      "mod_code": [
        "if ( s [ i ] == ' a ' )",
        "for ( i = 0 ; i < k ; i ++ )"
      ],
      "err_line": 6,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        21,
        27,
        6
      ],
      "mod_code": [
        "if ( s [ i ] == ' a ' )",
        "cout << \" -1\\n \" ;",
        "for ( i = 0 ; i < k ; i ++ )"
      ],
      "err_line": 6,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        21,
        6
      ],
      "mod_code": [
        "if ( s [ i ] == ' a ' )",
        "for ( i = 0 ; i < k ; i ++ )"
      ],
      "err_line": 6,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        27,
        6
      ],
      "mod_code": [
        "cout << \" -1\\n \" ;",
        "for ( i = 0 ; i < k ; i ++ )"
      ],
      "err_line": 6,
      "err_msg": "‘i’ was not declared in this scope"
    }
  ]
}