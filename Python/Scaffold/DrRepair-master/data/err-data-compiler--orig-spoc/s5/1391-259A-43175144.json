{
  "meta": {
    "index": 1391,
    "hitid": "302U8RURJZVOP2S1V75ZNX95NSHNV8",
    "workerid": "AIWEXPJAU66D9",
    "probid": "259A",
    "subid": "43175144"
  },
  "lines": [
    {
      "line": 0,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 1,
      "text": "new string pointer * board pointed to the new array of strings with 8 elements",
      "code": "string * board = new string [ 8 ] ;",
      "indent": 1
    },
    {
      "line": 2,
      "text": "declare new boolean called can with value true",
      "code": "bool can = true ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "start for loop from i = 0 to 8 exclusive",
      "code": "for ( int i = 0 ; i < 8 ; i ++ )",
      "indent": 1
    },
    {
      "line": 4,
      "text": "read user input to board [ i ]",
      "code": "cin >> board [ i ] ;",
      "indent": 2
    },
    {
      "line": 5,
      "text": "start for loop from j = 0 to 7 exclusive",
      "code": "for ( int j = 0 ; j < 7 ; j ++ )",
      "indent": 2
    },
    {
      "line": 6,
      "text": "if board [ i ] [ j ] = board [ i ] [ j + 1 ] , change the value of can to false",
      "code": "if ( board [ i ] [ j ] == board [ i ] [ j + 1 ] ) { can = false ; }",
      "indent": 3
    },
    {
      "line": 7,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 8,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 9,
      "text": "if can = false",
      "code": "if ( can == false )",
      "indent": 1
    },
    {
      "line": 10,
      "text": "print \" NO \"",
      "code": "cout << \" NO \" << endl ;",
      "indent": 2
    },
    {
      "line": 11,
      "text": "else",
      "code": "else",
      "indent": 1
    },
    {
      "line": 12,
      "text": "print \" YES \"",
      "code": "cout << \" YES \" << endl ;",
      "indent": 2
    },
    {
      "line": 13,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 14,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        1
      ],
      "mod_code": [
        "string * board = getchar ( ) ;"
      ],
      "err_line": 1,
      "err_msg": "invalid conversion from ‘int’ to ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ [-fpermissive]"
    },
    {
      "mod_line": [
        2
      ],
      "mod_code": [
        "bool can declare true ;"
      ],
      "err_line": 2,
      "err_msg": "expected initializer before ‘declare’"
    },
    {
      "mod_line": [
        3
      ],
      "mod_code": [
        "for ( i = 0 ; i < 8 ; i ++ )"
      ],
      "err_line": 3,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        4
      ],
      "mod_code": [
        "board >> board [ i ] ;"
      ],
      "err_line": 4,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        5
      ],
      "mod_code": [
        "for ( j = 0 ; j < 7 ; j ++ )"
      ],
      "err_line": 5,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        4
      ],
      "mod_code": [
        "for ( j = 0 ; j < 7 ; j ++ )",
        "board >> board [ i ] ;"
      ],
      "err_line": 4,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        5,
        4,
        3
      ],
      "mod_code": [
        "for ( j = 0 ; j < 7 ; j ++ )",
        "board >> board [ i ] ;",
        "for ( i = 0 ; i < 8 ; i ++ )"
      ],
      "err_line": 3,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        4,
        3,
        1
      ],
      "mod_code": [
        "for ( j = 0 ; j < 7 ; j ++ )",
        "board >> board [ i ] ;",
        "for ( i = 0 ; i < 8 ; i ++ )",
        "string * board = getchar ( ) ;"
      ],
      "err_line": 1,
      "err_msg": "invalid conversion from ‘int’ to ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ [-fpermissive]"
    },
    {
      "mod_line": [
        5,
        4,
        3,
        2
      ],
      "mod_code": [
        "for ( j = 0 ; j < 7 ; j ++ )",
        "board >> board [ i ] ;",
        "for ( i = 0 ; i < 8 ; i ++ )",
        "bool can declare true ;"
      ],
      "err_line": 2,
      "err_msg": "expected initializer before ‘declare’"
    },
    {
      "mod_line": [
        5,
        4,
        1
      ],
      "mod_code": [
        "for ( j = 0 ; j < 7 ; j ++ )",
        "board >> board [ i ] ;",
        "string * board = getchar ( ) ;"
      ],
      "err_line": 1,
      "err_msg": "invalid conversion from ‘int’ to ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ [-fpermissive]"
    },
    {
      "mod_line": [
        5,
        4,
        1,
        2
      ],
      "mod_code": [
        "for ( j = 0 ; j < 7 ; j ++ )",
        "board >> board [ i ] ;",
        "string * board = getchar ( ) ;",
        "bool can declare true ;"
      ],
      "err_line": 1,
      "err_msg": "invalid conversion from ‘int’ to ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ [-fpermissive]"
    },
    {
      "mod_line": [
        5,
        4,
        2
      ],
      "mod_code": [
        "for ( j = 0 ; j < 7 ; j ++ )",
        "board >> board [ i ] ;",
        "bool can declare true ;"
      ],
      "err_line": 2,
      "err_msg": "expected initializer before ‘declare’"
    },
    {
      "mod_line": [
        5,
        3
      ],
      "mod_code": [
        "for ( j = 0 ; j < 7 ; j ++ )",
        "for ( i = 0 ; i < 8 ; i ++ )"
      ],
      "err_line": 3,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        3,
        1
      ],
      "mod_code": [
        "for ( j = 0 ; j < 7 ; j ++ )",
        "for ( i = 0 ; i < 8 ; i ++ )",
        "string * board = getchar ( ) ;"
      ],
      "err_line": 1,
      "err_msg": "invalid conversion from ‘int’ to ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ [-fpermissive]"
    },
    {
      "mod_line": [
        5,
        3,
        1,
        2
      ],
      "mod_code": [
        "for ( j = 0 ; j < 7 ; j ++ )",
        "for ( i = 0 ; i < 8 ; i ++ )",
        "string * board = getchar ( ) ;",
        "bool can declare true ;"
      ],
      "err_line": 1,
      "err_msg": "invalid conversion from ‘int’ to ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ [-fpermissive]"
    },
    {
      "mod_line": [
        5,
        3,
        2
      ],
      "mod_code": [
        "for ( j = 0 ; j < 7 ; j ++ )",
        "for ( i = 0 ; i < 8 ; i ++ )",
        "bool can declare true ;"
      ],
      "err_line": 2,
      "err_msg": "expected initializer before ‘declare’"
    },
    {
      "mod_line": [
        5,
        1
      ],
      "mod_code": [
        "for ( j = 0 ; j < 7 ; j ++ )",
        "string * board = getchar ( ) ;"
      ],
      "err_line": 1,
      "err_msg": "invalid conversion from ‘int’ to ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ [-fpermissive]"
    },
    {
      "mod_line": [
        5,
        1,
        2
      ],
      "mod_code": [
        "for ( j = 0 ; j < 7 ; j ++ )",
        "string * board = getchar ( ) ;",
        "bool can declare true ;"
      ],
      "err_line": 1,
      "err_msg": "invalid conversion from ‘int’ to ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ [-fpermissive]"
    },
    {
      "mod_line": [
        5,
        2
      ],
      "mod_code": [
        "for ( j = 0 ; j < 7 ; j ++ )",
        "bool can declare true ;"
      ],
      "err_line": 2,
      "err_msg": "expected initializer before ‘declare’"
    },
    {
      "mod_line": [
        4,
        3
      ],
      "mod_code": [
        "board >> board [ i ] ;",
        "for ( i = 0 ; i < 8 ; i ++ )"
      ],
      "err_line": 3,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        3,
        1
      ],
      "mod_code": [
        "board >> board [ i ] ;",
        "for ( i = 0 ; i < 8 ; i ++ )",
        "string * board = getchar ( ) ;"
      ],
      "err_line": 1,
      "err_msg": "invalid conversion from ‘int’ to ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ [-fpermissive]"
    },
    {
      "mod_line": [
        4,
        3,
        1,
        2
      ],
      "mod_code": [
        "board >> board [ i ] ;",
        "for ( i = 0 ; i < 8 ; i ++ )",
        "string * board = getchar ( ) ;",
        "bool can declare true ;"
      ],
      "err_line": 1,
      "err_msg": "invalid conversion from ‘int’ to ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ [-fpermissive]"
    },
    {
      "mod_line": [
        4,
        3,
        2
      ],
      "mod_code": [
        "board >> board [ i ] ;",
        "for ( i = 0 ; i < 8 ; i ++ )",
        "bool can declare true ;"
      ],
      "err_line": 2,
      "err_msg": "expected initializer before ‘declare’"
    },
    {
      "mod_line": [
        4,
        1
      ],
      "mod_code": [
        "board >> board [ i ] ;",
        "string * board = getchar ( ) ;"
      ],
      "err_line": 1,
      "err_msg": "invalid conversion from ‘int’ to ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ [-fpermissive]"
    },
    {
      "mod_line": [
        4,
        1,
        2
      ],
      "mod_code": [
        "board >> board [ i ] ;",
        "string * board = getchar ( ) ;",
        "bool can declare true ;"
      ],
      "err_line": 1,
      "err_msg": "invalid conversion from ‘int’ to ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ [-fpermissive]"
    },
    {
      "mod_line": [
        4,
        2
      ],
      "mod_code": [
        "board >> board [ i ] ;",
        "bool can declare true ;"
      ],
      "err_line": 2,
      "err_msg": "expected initializer before ‘declare’"
    },
    {
      "mod_line": [
        3,
        1
      ],
      "mod_code": [
        "for ( i = 0 ; i < 8 ; i ++ )",
        "string * board = getchar ( ) ;"
      ],
      "err_line": 1,
      "err_msg": "invalid conversion from ‘int’ to ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ [-fpermissive]"
    },
    {
      "mod_line": [
        3,
        1,
        2
      ],
      "mod_code": [
        "for ( i = 0 ; i < 8 ; i ++ )",
        "string * board = getchar ( ) ;",
        "bool can declare true ;"
      ],
      "err_line": 1,
      "err_msg": "invalid conversion from ‘int’ to ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ [-fpermissive]"
    },
    {
      "mod_line": [
        3,
        2
      ],
      "mod_code": [
        "for ( i = 0 ; i < 8 ; i ++ )",
        "bool can declare true ;"
      ],
      "err_line": 2,
      "err_msg": "expected initializer before ‘declare’"
    },
    {
      "mod_line": [
        1,
        2
      ],
      "mod_code": [
        "string * board = getchar ( ) ;",
        "bool can declare true ;"
      ],
      "err_line": 1,
      "err_msg": "invalid conversion from ‘int’ to ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ [-fpermissive]"
    }
  ]
}