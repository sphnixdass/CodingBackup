{
  "meta": {
    "index": 336,
    "hitid": "3I7SHAD35MQGWU6518NJ4442WKX7MX",
    "workerid": "A1APYLD4DUK33J",
    "probid": "340A",
    "subid": "47004841"
  },
  "lines": [
    {
      "line": 0,
      "text": "declare integer f with integers a , b as arguments",
      "code": "int f ( int a , int b )",
      "indent": 0
    },
    {
      "line": 1,
      "text": "declare integers t , x = a , y = b",
      "code": "int t , x = a , y = b ;",
      "indent": 1
    },
    {
      "line": 2,
      "text": "if x is less than y",
      "code": "if ( x < y )",
      "indent": 1
    },
    {
      "line": 3,
      "text": "let t be x",
      "code": "t = x ;",
      "indent": 2
    },
    {
      "line": 4,
      "text": "let x be y",
      "code": "x = y ;",
      "indent": 2
    },
    {
      "line": 5,
      "text": "let y be t",
      "code": "y = t ;",
      "indent": 2
    },
    {
      "line": 6,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 7,
      "text": "while x % y is not 0",
      "code": "while ( x % y != 0 )",
      "indent": 1
    },
    {
      "line": 8,
      "text": "let t be y",
      "code": "t = y ;",
      "indent": 2
    },
    {
      "line": 9,
      "text": "let y be x % y",
      "code": "y = x % y ;",
      "indent": 2
    },
    {
      "line": 10,
      "text": "let x be t",
      "code": "x = t ;",
      "indent": 2
    },
    {
      "line": 11,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 12,
      "text": "return a * b / y",
      "code": "return a * b / y ;",
      "indent": 1
    },
    {
      "line": 13,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    },
    {
      "line": 14,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 15,
      "text": "declare integers x , y , a , b",
      "code": "int x , y , a , b ;",
      "indent": 1
    },
    {
      "line": 16,
      "text": "while read x , y , a , b is true",
      "code": "while ( cin >> x >> y >> a >> b )",
      "indent": 1
    },
    {
      "line": 17,
      "text": "declare integer t = result of run f ( x , y )",
      "code": "int t = f ( x , y ) ;",
      "indent": 2
    },
    {
      "line": 18,
      "text": "declare integer p = b / t - a / t + 1 if a % t is 0 , else b / t - a / t",
      "code": "int p = ( a % t == 0 ) ? b / t - a / t + 1 : b / t - a / t ;",
      "indent": 2
    },
    {
      "line": 19,
      "text": "print p , newline",
      "code": "cout << p << endl ;",
      "indent": 2
    },
    {
      "line": 20,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 21,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 22,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        0
      ],
      "mod_code": [
        "int f ( int a , int b ) ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        16
      ],
      "mod_code": [
        "while ("
      ],
      "err_line": 17,
      "err_msg": "expected primary-expression before ‘{’ token"
    },
    {
      "mod_line": [
        18
      ],
      "mod_code": [
        "int p = ( a % t == 0 ? b / t ? 1 / 1 : b / t - a / t ) ;"
      ],
      "err_line": 18,
      "err_msg": "expected ‘:’ before ‘)’ token"
    },
    {
      "mod_line": [
        18,
        0
      ],
      "mod_code": [
        "int p = a % t - a / t / 1 == 0 ? b / t - a / t : b / t - a / t ;",
        "int f ( int a , int b ) ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        18,
        0,
        16
      ],
      "mod_code": [
        "int p = a % t - a / t / 1 == 0 ? b / t - a / t : b / t - a / t ;",
        "int f ( int a , int b ) ;",
        "while ("
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        18,
        0,
        16,
        5
      ],
      "mod_code": [
        "int p = a % t - a / t / 1 == 0 ? b / t - a / t : b / t - a / t ;",
        "int f ( int a , int b ) ;",
        "while (",
        "int y = t ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        18,
        0,
        16,
        1
      ],
      "mod_code": [
        "int p = a % t - a / t / 1 == 0 ? b / t - a / t : b / t - a / t ;",
        "int f ( int a , int b ) ;",
        "while (",
        "int t = a , x = b , y = b ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        18,
        0,
        5
      ],
      "mod_code": [
        "int p = a % t - a / t / 1 == 0 ? b / t - a / t : b / t - a / t ;",
        "int f ( int a , int b ) ;",
        "int y = t ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        18,
        0,
        5,
        1
      ],
      "mod_code": [
        "int p = a % t - a / t / 1 == 0 ? b / t - a / t : b / t - a / t ;",
        "int f ( int a , int b ) ;",
        "int y = t ;",
        "int t = a , x = b , y = b ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        18,
        0,
        1
      ],
      "mod_code": [
        "int p = a % t - a / t / 1 == 0 ? b / t - a / t : b / t - a / t ;",
        "int f ( int a , int b ) ;",
        "int t = a , x = b , y = b ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        18,
        16
      ],
      "mod_code": [
        "int p = a % t - a / t / 1 == 0 ? b / t - a / t : b / t - a / t ;",
        "while ("
      ],
      "err_line": 17,
      "err_msg": "expected primary-expression before ‘{’ token"
    },
    {
      "mod_line": [
        18,
        16,
        5
      ],
      "mod_code": [
        "int p = a % t - a / t / 1 == 0 ? b / t - a / t : b / t - a / t ;",
        "while (",
        "int y = t ;"
      ],
      "err_line": 17,
      "err_msg": "expected primary-expression before ‘{’ token"
    },
    {
      "mod_line": [
        18,
        16,
        5,
        1
      ],
      "mod_code": [
        "int p = a % t - a / t / 1 == 0 ? b / t - a / t : b / t - a / t ;",
        "while (",
        "int y = t ;",
        "int t = a , x = b , y = b ;"
      ],
      "err_line": 17,
      "err_msg": "expected primary-expression before ‘{’ token"
    },
    {
      "mod_line": [
        18,
        16,
        1
      ],
      "mod_code": [
        "int p = a % t - a / t / 1 == 0 ? b / t - a / t : b / t - a / t ;",
        "while (",
        "int t = a , x = b , y = b ;"
      ],
      "err_line": 17,
      "err_msg": "expected primary-expression before ‘{’ token"
    },
    {
      "mod_line": [
        0,
        16
      ],
      "mod_code": [
        "int f ( int a , int b ) ;",
        "while ("
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        0,
        16,
        5
      ],
      "mod_code": [
        "int f ( int a , int b ) ;",
        "while (",
        "int y = t ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        0,
        16,
        5,
        1
      ],
      "mod_code": [
        "int f ( int a , int b ) ;",
        "while (",
        "int y = t ;",
        "int t = a , x = b , y = b ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        0,
        16,
        5,
        18
      ],
      "mod_code": [
        "int f ( int a , int b ) ;",
        "while (",
        "int y = t ;",
        "int p = ( a % t == 0 ? b / t ? 1 / 1 : b / t - a / t ) ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        0,
        16,
        1
      ],
      "mod_code": [
        "int f ( int a , int b ) ;",
        "while (",
        "int t = a , x = b , y = b ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        0,
        16,
        1,
        18
      ],
      "mod_code": [
        "int f ( int a , int b ) ;",
        "while (",
        "int t = a , x = b , y = b ;",
        "int p = ( a % t == 0 ? b / t ? 1 / 1 : b / t - a / t ) ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        0,
        16,
        18
      ],
      "mod_code": [
        "int f ( int a , int b ) ;",
        "while (",
        "int p = ( a % t == 0 ? b / t ? 1 / 1 : b / t - a / t ) ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        0,
        5
      ],
      "mod_code": [
        "int f ( int a , int b ) ;",
        "int y = t ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        0,
        5,
        1
      ],
      "mod_code": [
        "int f ( int a , int b ) ;",
        "int y = t ;",
        "int t = a , x = b , y = b ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        0,
        5,
        1,
        18
      ],
      "mod_code": [
        "int f ( int a , int b ) ;",
        "int y = t ;",
        "int t = a , x = b , y = b ;",
        "int p = ( a % t == 0 ? b / t ? 1 / 1 : b / t - a / t ) ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        0,
        5,
        18
      ],
      "mod_code": [
        "int f ( int a , int b ) ;",
        "int y = t ;",
        "int p = ( a % t == 0 ? b / t ? 1 / 1 : b / t - a / t ) ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        0,
        1
      ],
      "mod_code": [
        "int f ( int a , int b ) ;",
        "int t = a , x = b , y = b ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        0,
        1,
        18
      ],
      "mod_code": [
        "int f ( int a , int b ) ;",
        "int t = a , x = b , y = b ;",
        "int p = ( a % t == 0 ? b / t ? 1 / 1 : b / t - a / t ) ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        0,
        18
      ],
      "mod_code": [
        "int f ( int a , int b ) ;",
        "int p = ( a % t == 0 ? b / t ? 1 / 1 : b / t - a / t ) ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        16,
        5
      ],
      "mod_code": [
        "while (",
        "int y = t ;"
      ],
      "err_line": 17,
      "err_msg": "expected primary-expression before ‘{’ token"
    },
    {
      "mod_line": [
        16,
        5,
        1
      ],
      "mod_code": [
        "while (",
        "int y = t ;",
        "int t = a , x = b , y = b ;"
      ],
      "err_line": 17,
      "err_msg": "expected primary-expression before ‘{’ token"
    },
    {
      "mod_line": [
        16,
        5,
        1,
        18
      ],
      "mod_code": [
        "while (",
        "int y = t ;",
        "int t = a , x = b , y = b ;",
        "int p = ( a % t == 0 ? b / t ? 1 / 1 : b / t - a / t ) ;"
      ],
      "err_line": 17,
      "err_msg": "expected primary-expression before ‘{’ token"
    },
    {
      "mod_line": [
        16,
        5,
        18
      ],
      "mod_code": [
        "while (",
        "int y = t ;",
        "int p = ( a % t == 0 ? b / t ? 1 / 1 : b / t - a / t ) ;"
      ],
      "err_line": 17,
      "err_msg": "expected primary-expression before ‘{’ token"
    },
    {
      "mod_line": [
        16,
        1
      ],
      "mod_code": [
        "while (",
        "int t = a , x = b , y = b ;"
      ],
      "err_line": 17,
      "err_msg": "expected primary-expression before ‘{’ token"
    },
    {
      "mod_line": [
        16,
        1,
        18
      ],
      "mod_code": [
        "while (",
        "int t = a , x = b , y = b ;",
        "int p = ( a % t == 0 ? b / t ? 1 / 1 : b / t - a / t ) ;"
      ],
      "err_line": 17,
      "err_msg": "expected primary-expression before ‘{’ token"
    },
    {
      "mod_line": [
        16,
        18
      ],
      "mod_code": [
        "while (",
        "int p = ( a % t == 0 ? b / t ? 1 / 1 : b / t - a / t ) ;"
      ],
      "err_line": 17,
      "err_msg": "expected primary-expression before ‘{’ token"
    },
    {
      "mod_line": [
        5,
        1,
        18
      ],
      "mod_code": [
        "int y = t ;",
        "int t = a , x = b , y = b ;",
        "int p = ( a % t == 0 ? b / t ? 1 / 1 : b / t - a / t ) ;"
      ],
      "err_line": 18,
      "err_msg": "expected ‘:’ before ‘)’ token"
    },
    {
      "mod_line": [
        5,
        18
      ],
      "mod_code": [
        "int y = t ;",
        "int p = ( a % t == 0 ? b / t ? 1 / 1 : b / t - a / t ) ;"
      ],
      "err_line": 18,
      "err_msg": "expected ‘:’ before ‘)’ token"
    },
    {
      "mod_line": [
        1,
        18
      ],
      "mod_code": [
        "int t = a , x = b , y = b ;",
        "int p = ( a % t == 0 ? b / t ? 1 / 1 : b / t - a / t ) ;"
      ],
      "err_line": 18,
      "err_msg": "expected ‘:’ before ‘)’ token"
    }
  ]
}