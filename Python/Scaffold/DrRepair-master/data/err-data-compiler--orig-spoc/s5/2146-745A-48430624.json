{
  "meta": {
    "index": 2146,
    "hitid": "335HHSX8CDZALP641OASCR6219XHDN",
    "workerid": "A1APYLD4DUK33J",
    "probid": "745A",
    "subid": "48430624"
  },
  "lines": [
    {
      "line": 0,
      "text": "create constant integer N with N = 1e5 + 5",
      "code": "const int N = 1e5 + 5 ;",
      "indent": 0
    },
    {
      "line": 1,
      "text": "create constant integer inf with inf = 1e9",
      "code": "const int inf = 1e9 ;",
      "indent": 0
    },
    {
      "line": 2,
      "text": "create constant long long INF with INF = 1e18",
      "code": "const long long INF = 1e18 ;",
      "indent": 0
    },
    {
      "line": 3,
      "text": "create constant double PI with PI = acosign of - 1 . 0",
      "code": "const double PI = acos ( - 1.0 ) ;",
      "indent": 0
    },
    {
      "line": 4,
      "text": "create constant double EPS with EPS = 1e - 8",
      "code": "const double EPS = 1e-8 ;",
      "indent": 0
    },
    {
      "line": 5,
      "text": "create constant integer array MOD with MOD = { 1000000009 , 1000000007 }",
      "code": "const int MOD [ ] = { 1000000009 , 1000000007 } ;",
      "indent": 0
    },
    {
      "line": 6,
      "text": "create constant integer array base with base = { 37 , 43 }",
      "code": "const int base [ ] = { 37 , 43 } ;",
      "indent": 0
    },
    {
      "line": 7,
      "text": "create 2d long long integer array p with size 55 by 2",
      "code": "long long int p [ 55 ] [ 2 ] ;",
      "indent": 0
    },
    {
      "line": 8,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 9,
      "text": "create string s",
      "code": "string s ;",
      "indent": 1
    },
    {
      "line": 10,
      "text": "read s",
      "code": "cin >> s ;",
      "indent": 1
    },
    {
      "line": 11,
      "text": "set p [ 0 ] [ 0 ] to 1 , set p [ 0 ] [ 1 ] to 1",
      "code": "p [ 0 ] [ 0 ] = 1 , p [ 0 ] [ 1 ] = 1 ;",
      "indent": 1
    },
    {
      "line": 12,
      "text": "for i = 1 to 50 inclusive",
      "code": "for ( int i = 1 ; i <= 50 ; i ++ )",
      "indent": 1
    },
    {
      "line": 13,
      "text": "set p [ i ] [ 0 ] to ( p [ i - 1 ] [ 0 ] * base [ 0 ] ) % MOD [ 0 ] , set p [ i ] [ 0 ] to p [ i ] [ 0 ] % MOD [ 0 ]",
      "code": "p [ i ] [ 0 ] = ( p [ i - 1 ] [ 0 ] * base [ 0 ] ) % MOD [ 0 ] , p [ i ] [ 0 ] %= MOD [ 0 ] ;",
      "indent": 2
    },
    {
      "line": 14,
      "text": "set p [ i ] [ 1 ] to ( p [ i - 1 ] [ 1 ] * base [ 1 ] ) % MOD [ 1 ] , set p [ i ] [ 1 ] to p [ i ] [ 1 ] % MOD [ 1 ]",
      "code": "p [ i ] [ 1 ] = ( p [ i - 1 ] [ 1 ] * base [ 1 ] ) % MOD [ 1 ] , p [ i ] [ 1 ] %= MOD [ 1 ] ;",
      "indent": 2
    },
    {
      "line": 15,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 16,
      "text": "create integer len with len = size of s",
      "code": "int len = s . size ( ) ;",
      "indent": 1
    },
    {
      "line": 17,
      "text": "create long long integer set Hash",
      "code": "set < long long int > Hash ;",
      "indent": 1
    },
    {
      "line": 18,
      "text": "create long long integers hash1 , hash2 , with hash1 = 0 , hash2 = 0",
      "code": "long long int hash1 = 0 , hash2 = 0 ;",
      "indent": 1
    },
    {
      "line": 19,
      "text": "for i = 0 to len exclusive",
      "code": "for ( int i = 0 ; i < len ; i ++ )",
      "indent": 1
    },
    {
      "line": 20,
      "text": "increment hash1 by ( p [ i ] [ 0 ] * s [ i ] ) % MOD [ 0 ] , set hash1 to hash1 % MOD [ 0 ]",
      "code": "hash1 += ( p [ i ] [ 0 ] * s [ i ] ) % MOD [ 0 ] , hash1 %= MOD [ 0 ] ;",
      "indent": 2
    },
    {
      "line": 21,
      "text": "increment hash2 by ( p [ i ] [ 1 ] * s [ i ] ) % MOD [ 1 ] , set hash2 to hash2 % MOD [ 1 ]",
      "code": "hash2 += ( p [ i ] [ 1 ] * s [ i ] ) % MOD [ 1 ] , hash2 %= MOD [ 1 ] ;",
      "indent": 2
    },
    {
      "line": 22,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 23,
      "text": "for i = 1 , j = len - 1 to i is less than or equal to len , incrementing i , decrementing j",
      "code": "for ( int i = 1 , j = len - 1 ; i <= len ; i ++ , j -- )",
      "indent": 1
    },
    {
      "line": 24,
      "text": "insert ( ( hash1 bitshift left 31 ) bitwise or hash2 ) into Hash",
      "code": "Hash . insert ( ( hash1 << 31 ) | hash2 ) ;",
      "indent": 2
    },
    {
      "line": 25,
      "text": "create character last with last = s [ j ]",
      "code": "char last = s [ j ] ;",
      "indent": 2
    },
    {
      "line": 26,
      "text": "decrement hash1 by ( p [ len - 1 ] [ 0 ] % MOD [ 0 ] * last % MOD [ 0 ] ) % MOD [ 0 ]",
      "code": "hash1 -= ( p [ len - 1 ] [ 0 ] % MOD [ 0 ] * last % MOD [ 0 ] ) % MOD [ 0 ] ;",
      "indent": 2
    },
    {
      "line": 27,
      "text": "if hash1 is less than 0 , increment hash1 by MOD [ 0 ]",
      "code": "if ( hash1 < 0 ) hash1 += MOD [ 0 ] ;",
      "indent": 2
    },
    {
      "line": 28,
      "text": "set hash1 to hash1 * p [ 1 ] [ 0 ] , set hash1 to hash1 % MOD [ 0 ]",
      "code": "hash1 *= p [ 1 ] [ 0 ] , hash1 %= MOD [ 0 ] ;",
      "indent": 2
    },
    {
      "line": 29,
      "text": "increment hash1 by ( p [ 0 ] [ 0 ] * last ) % MOD [ 0 ] , hash1 % = MOD [ 0 ]",
      "code": "hash1 += ( p [ 0 ] [ 0 ] * last ) % MOD [ 0 ] , hash1 %= MOD [ 0 ] ;",
      "indent": 2
    },
    {
      "line": 30,
      "text": "decrement pash2 by ( p [ len - 1 ] [ 1 ] % MOD [ 1 ] * last % MOD [ 1 ] ) % MOD [ 1 ]",
      "code": "hash2 -= ( p [ len - 1 ] [ 1 ] % MOD [ 1 ] * last % MOD [ 1 ] ) % MOD [ 1 ] ;",
      "indent": 2
    },
    {
      "line": 31,
      "text": "set hash2 to hash2 * p [ 1 ] [ 1 ] , set hash2 to hash2 % MOD [ 1 ]",
      "code": "hash2 *= p [ 1 ] [ 1 ] , hash2 %= MOD [ 1 ] ;",
      "indent": 2
    },
    {
      "line": 32,
      "text": "if hash2 is less than 0 , increment hash2 by MOD [ 1 ]",
      "code": "if ( hash2 < 0 ) hash2 += MOD [ 1 ] ;",
      "indent": 2
    },
    {
      "line": 33,
      "text": "increment hash2 by ( p [ 0 ] [ 1 ] * last ) % MOD [ 1 ] , set hash2 to hash2 % MOD [ 1 ]",
      "code": "hash2 += ( p [ 0 ] [ 1 ] * last ) % MOD [ 1 ] , hash2 %= MOD [ 1 ] ;",
      "indent": 2
    },
    {
      "line": 34,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 35,
      "text": "print integer casted size of Hash print \" \\ n \"",
      "code": "cout << ( int ) Hash . size ( ) << \" \\n \" ;",
      "indent": 1
    },
    {
      "line": 36,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 37,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        13
      ],
      "mod_code": [
        "p [ i ] [ 0 ] = ( p [ i - 1 ] [ 0 ] * base [ 0 ] ) % base [ 0 ] [ 0 ] , p [ 0 ] [ 0 ] % MOD [ 0 ] ;"
      ],
      "err_line": 13,
      "err_msg": "invalid types ‘const int[int]’ for array subscript"
    },
    {
      "mod_line": [
        14
      ],
      "mod_code": [
        "p [ i ] [ 1 ] = ( p [ i - 1 ] [ 1 ] * base [ 1 ] ) % base [ 1 ] [ 1 ] % base [ 1 ] [ 1 ] , p [ i ] [ 1 ] ;"
      ],
      "err_line": 14,
      "err_msg": "invalid types ‘const int[int]’ for array subscript"
    },
    {
      "mod_line": [
        17
      ],
      "mod_code": [
        "long long int Hash ;"
      ],
      "err_line": 24,
      "err_msg": "request for member ‘insert’ in ‘Hash’, which is of non-class type ‘long long int’"
    },
    {
      "mod_line": [
        26
      ],
      "mod_code": [
        "hash1 -= ( p [ len - 1 ] [ 0 ] % MOD [ 0 ] * MOD % MOD [ 0 ] ) % MOD [ 0 ] ;"
      ],
      "err_line": 26,
      "err_msg": "invalid operands of types ‘long long int’ and ‘const int [2]’ to binary ‘operator*’"
    },
    {
      "mod_line": [
        30
      ],
      "mod_code": [
        "pash2 -= ( p [ len - 1 ] [ 1 ] % MOD [ 1 ] * MOD % MOD [ 1 ] ) % MOD [ 1 ] ;"
      ],
      "err_line": 30,
      "err_msg": "‘pash2’ was not declared in this scope"
    },
    {
      "mod_line": [
        5
      ],
      "mod_code": [
        "const int MOD [ MOD ] = { 1000000009 , 1000000007 } ;"
      ],
      "err_line": 5,
      "err_msg": "‘MOD’ was not declared in this scope"
    },
    {
      "mod_line": [
        6
      ],
      "mod_code": [
        "const int base [ base ] = { 37 , 43 } ;"
      ],
      "err_line": 6,
      "err_msg": "‘base’ was not declared in this scope"
    },
    {
      "mod_line": [
        9
      ],
      "mod_code": [
        "string n ;"
      ],
      "err_line": 10,
      "err_msg": "‘s’ was not declared in this scope"
    },
    {
      "mod_line": [
        12
      ],
      "mod_code": [
        "for ( i = 1 ; i <= 50 ; i ++ )"
      ],
      "err_line": 12,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        16
      ],
      "mod_code": [
        "int len = s = s . size ( ) ;"
      ],
      "err_line": 16,
      "err_msg": "cannot convert ‘std::__cxx11::basic_string<char>’ to ‘int’ in initialization"
    },
    {
      "mod_line": [
        17
      ],
      "mod_code": [
        "long long Hash ;"
      ],
      "err_line": 24,
      "err_msg": "request for member ‘insert’ in ‘Hash’, which is of non-class type ‘long long int’"
    },
    {
      "mod_line": [
        19
      ],
      "mod_code": [
        "for ( i = 0 ; i < len ; i ++ )"
      ],
      "err_line": 19,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        23
      ],
      "mod_code": [
        "for ( i = 1 , j = len - 1 ; i <= len ; i ++ , j -- )"
      ],
      "err_line": 23,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        24
      ],
      "mod_code": [
        "Hash ( ( hash1 << 31 ) | hash2 ) ;"
      ],
      "err_line": 24,
      "err_msg": "no match for call to ‘(std::set<long long int>) (long long int)’"
    },
    {
      "mod_line": [
        25
      ],
      "mod_code": [
        "] = s [ j ] ;"
      ],
      "err_line": 25,
      "err_msg": "expected primary-expression before ‘]’ token"
    },
    {
      "mod_line": [
        30
      ],
      "mod_code": [
        "pash2 -= ( p [ len - 1 ] [ 1 ] % MOD [ 1 ] * last % MOD [ 1 ] ) % MOD [ 1 ] ;"
      ],
      "err_line": 30,
      "err_msg": "‘pash2’ was not declared in this scope"
    },
    {
      "mod_line": [
        35
      ],
      "mod_code": [
        "cout << ( int ) Hash ( Hash ) << \" \\n \" ;"
      ],
      "err_line": 35,
      "err_msg": "no match for call to ‘(std::set<long long int>) (std::set<long long int>&)’"
    },
    {
      "mod_line": [
        13,
        14
      ],
      "mod_code": [
        "p [ i ] [ 0 ] = ( p [ i - 1 ] [ 0 ] * base [ 0 ] ) % base [ 0 ] [ 0 ] , p [ 0 ] [ 0 ] % MOD [ 0 ] ;",
        "p [ i ] [ 1 ] = ( p [ i - 1 ] [ 1 ] * base [ 1 ] ) % base [ 1 ] [ 1 ] % base [ 1 ] [ 1 ] , p [ i ] [ 1 ] ;"
      ],
      "err_line": 13,
      "err_msg": "invalid types ‘const int[int]’ for array subscript"
    },
    {
      "mod_line": [
        13,
        14,
        17
      ],
      "mod_code": [
        "p [ i ] [ 0 ] = ( p [ i - 1 ] [ 0 ] * base [ 0 ] ) % base [ 0 ] [ 0 ] , p [ 0 ] [ 0 ] % MOD [ 0 ] ;",
        "p [ i ] [ 1 ] = ( p [ i - 1 ] [ 1 ] * base [ 1 ] ) % base [ 1 ] [ 1 ] % base [ 1 ] [ 1 ] , p [ i ] [ 1 ] ;",
        "long long int Hash ;"
      ],
      "err_line": 13,
      "err_msg": "invalid types ‘const int[int]’ for array subscript"
    },
    {
      "mod_line": [
        13,
        14,
        17,
        26
      ],
      "mod_code": [
        "p [ i ] [ 0 ] = ( p [ i - 1 ] [ 0 ] * base [ 0 ] ) % base [ 0 ] [ 0 ] , p [ 0 ] [ 0 ] % MOD [ 0 ] ;",
        "p [ i ] [ 1 ] = ( p [ i - 1 ] [ 1 ] * base [ 1 ] ) % base [ 1 ] [ 1 ] % base [ 1 ] [ 1 ] , p [ i ] [ 1 ] ;",
        "long long int Hash ;",
        "hash1 -= ( p [ len - 1 ] [ 0 ] % MOD [ 0 ] * MOD % MOD [ 0 ] ) % MOD [ 0 ] ;"
      ],
      "err_line": 13,
      "err_msg": "invalid types ‘const int[int]’ for array subscript"
    },
    {
      "mod_line": [
        13,
        14,
        17,
        30
      ],
      "mod_code": [
        "p [ i ] [ 0 ] = ( p [ i - 1 ] [ 0 ] * base [ 0 ] ) % base [ 0 ] [ 0 ] , p [ 0 ] [ 0 ] % MOD [ 0 ] ;",
        "p [ i ] [ 1 ] = ( p [ i - 1 ] [ 1 ] * base [ 1 ] ) % base [ 1 ] [ 1 ] % base [ 1 ] [ 1 ] , p [ i ] [ 1 ] ;",
        "long long int Hash ;",
        "pash2 -= ( p [ len - 1 ] [ 1 ] % MOD [ 1 ] * MOD % MOD [ 1 ] ) % MOD [ 1 ] ;"
      ],
      "err_line": 13,
      "err_msg": "invalid types ‘const int[int]’ for array subscript"
    },
    {
      "mod_line": [
        13,
        14,
        17,
        25
      ],
      "mod_code": [
        "p [ i ] [ 0 ] = ( p [ i - 1 ] [ 0 ] * base [ 0 ] ) % base [ 0 ] [ 0 ] , p [ 0 ] [ 0 ] % MOD [ 0 ] ;",
        "p [ i ] [ 1 ] = ( p [ i - 1 ] [ 1 ] * base [ 1 ] ) % base [ 1 ] [ 1 ] % base [ 1 ] [ 1 ] , p [ i ] [ 1 ] ;",
        "long long int Hash ;",
        "] = s [ j ] ;"
      ],
      "err_line": 13,
      "err_msg": "invalid types ‘const int[int]’ for array subscript"
    },
    {
      "mod_line": [
        13,
        14,
        26
      ],
      "mod_code": [
        "p [ i ] [ 0 ] = ( p [ i - 1 ] [ 0 ] * base [ 0 ] ) % base [ 0 ] [ 0 ] , p [ 0 ] [ 0 ] % MOD [ 0 ] ;",
        "p [ i ] [ 1 ] = ( p [ i - 1 ] [ 1 ] * base [ 1 ] ) % base [ 1 ] [ 1 ] % base [ 1 ] [ 1 ] , p [ i ] [ 1 ] ;",
        "hash1 -= ( p [ len - 1 ] [ 0 ] % MOD [ 0 ] * MOD % MOD [ 0 ] ) % MOD [ 0 ] ;"
      ],
      "err_line": 13,
      "err_msg": "invalid types ‘const int[int]’ for array subscript"
    },
    {
      "mod_line": [
        13,
        14,
        26,
        30
      ],
      "mod_code": [
        "p [ i ] [ 0 ] = ( p [ i - 1 ] [ 0 ] * base [ 0 ] ) % base [ 0 ] [ 0 ] , p [ 0 ] [ 0 ] % MOD [ 0 ] ;",
        "p [ i ] [ 1 ] = ( p [ i - 1 ] [ 1 ] * base [ 1 ] ) % base [ 1 ] [ 1 ] % base [ 1 ] [ 1 ] , p [ i ] [ 1 ] ;",
        "hash1 -= ( p [ len - 1 ] [ 0 ] % MOD [ 0 ] * MOD % MOD [ 0 ] ) % MOD [ 0 ] ;",
        "pash2 -= ( p [ len - 1 ] [ 1 ] % MOD [ 1 ] * MOD % MOD [ 1 ] ) % MOD [ 1 ] ;"
      ],
      "err_line": 13,
      "err_msg": "invalid types ‘const int[int]’ for array subscript"
    },
    {
      "mod_line": [
        13,
        14,
        26,
        25
      ],
      "mod_code": [
        "p [ i ] [ 0 ] = ( p [ i - 1 ] [ 0 ] * base [ 0 ] ) % base [ 0 ] [ 0 ] , p [ 0 ] [ 0 ] % MOD [ 0 ] ;",
        "p [ i ] [ 1 ] = ( p [ i - 1 ] [ 1 ] * base [ 1 ] ) % base [ 1 ] [ 1 ] % base [ 1 ] [ 1 ] , p [ i ] [ 1 ] ;",
        "hash1 -= ( p [ len - 1 ] [ 0 ] % MOD [ 0 ] * MOD % MOD [ 0 ] ) % MOD [ 0 ] ;",
        "] = s [ j ] ;"
      ],
      "err_line": 13,
      "err_msg": "invalid types ‘const int[int]’ for array subscript"
    },
    {
      "mod_line": [
        13,
        14,
        30
      ],
      "mod_code": [
        "p [ i ] [ 0 ] = ( p [ i - 1 ] [ 0 ] * base [ 0 ] ) % base [ 0 ] [ 0 ] , p [ 0 ] [ 0 ] % MOD [ 0 ] ;",
        "p [ i ] [ 1 ] = ( p [ i - 1 ] [ 1 ] * base [ 1 ] ) % base [ 1 ] [ 1 ] % base [ 1 ] [ 1 ] , p [ i ] [ 1 ] ;",
        "pash2 -= ( p [ len - 1 ] [ 1 ] % MOD [ 1 ] * MOD % MOD [ 1 ] ) % MOD [ 1 ] ;"
      ],
      "err_line": 13,
      "err_msg": "invalid types ‘const int[int]’ for array subscript"
    },
    {
      "mod_line": [
        13,
        14,
        30,
        25
      ],
      "mod_code": [
        "p [ i ] [ 0 ] = ( p [ i - 1 ] [ 0 ] * base [ 0 ] ) % base [ 0 ] [ 0 ] , p [ 0 ] [ 0 ] % MOD [ 0 ] ;",
        "p [ i ] [ 1 ] = ( p [ i - 1 ] [ 1 ] * base [ 1 ] ) % base [ 1 ] [ 1 ] % base [ 1 ] [ 1 ] , p [ i ] [ 1 ] ;",
        "pash2 -= ( p [ len - 1 ] [ 1 ] % MOD [ 1 ] * MOD % MOD [ 1 ] ) % MOD [ 1 ] ;",
        "] = s [ j ] ;"
      ],
      "err_line": 13,
      "err_msg": "invalid types ‘const int[int]’ for array subscript"
    },
    {
      "mod_line": [
        13,
        14,
        25
      ],
      "mod_code": [
        "p [ i ] [ 0 ] = ( p [ i - 1 ] [ 0 ] * base [ 0 ] ) % base [ 0 ] [ 0 ] , p [ 0 ] [ 0 ] % MOD [ 0 ] ;",
        "p [ i ] [ 1 ] = ( p [ i - 1 ] [ 1 ] * base [ 1 ] ) % base [ 1 ] [ 1 ] % base [ 1 ] [ 1 ] , p [ i ] [ 1 ] ;",
        "] = s [ j ] ;"
      ],
      "err_line": 13,
      "err_msg": "invalid types ‘const int[int]’ for array subscript"
    },
    {
      "mod_line": [
        13,
        17
      ],
      "mod_code": [
        "p [ i ] [ 0 ] = ( p [ i - 1 ] [ 0 ] * base [ 0 ] ) % base [ 0 ] [ 0 ] , p [ 0 ] [ 0 ] % MOD [ 0 ] ;",
        "long long int Hash ;"
      ],
      "err_line": 13,
      "err_msg": "invalid types ‘const int[int]’ for array subscript"
    },
    {
      "mod_line": [
        13,
        17,
        26
      ],
      "mod_code": [
        "p [ i ] [ 0 ] = ( p [ i - 1 ] [ 0 ] * base [ 0 ] ) % base [ 0 ] [ 0 ] , p [ 0 ] [ 0 ] % MOD [ 0 ] ;",
        "long long int Hash ;",
        "hash1 -= ( p [ len - 1 ] [ 0 ] % MOD [ 0 ] * MOD % MOD [ 0 ] ) % MOD [ 0 ] ;"
      ],
      "err_line": 13,
      "err_msg": "invalid types ‘const int[int]’ for array subscript"
    },
    {
      "mod_line": [
        13,
        17,
        26,
        30
      ],
      "mod_code": [
        "p [ i ] [ 0 ] = ( p [ i - 1 ] [ 0 ] * base [ 0 ] ) % base [ 0 ] [ 0 ] , p [ 0 ] [ 0 ] % MOD [ 0 ] ;",
        "long long int Hash ;",
        "hash1 -= ( p [ len - 1 ] [ 0 ] % MOD [ 0 ] * MOD % MOD [ 0 ] ) % MOD [ 0 ] ;",
        "pash2 -= ( p [ len - 1 ] [ 1 ] % MOD [ 1 ] * MOD % MOD [ 1 ] ) % MOD [ 1 ] ;"
      ],
      "err_line": 13,
      "err_msg": "invalid types ‘const int[int]’ for array subscript"
    },
    {
      "mod_line": [
        13,
        17,
        26,
        25
      ],
      "mod_code": [
        "p [ i ] [ 0 ] = ( p [ i - 1 ] [ 0 ] * base [ 0 ] ) % base [ 0 ] [ 0 ] , p [ 0 ] [ 0 ] % MOD [ 0 ] ;",
        "long long int Hash ;",
        "hash1 -= ( p [ len - 1 ] [ 0 ] % MOD [ 0 ] * MOD % MOD [ 0 ] ) % MOD [ 0 ] ;",
        "] = s [ j ] ;"
      ],
      "err_line": 13,
      "err_msg": "invalid types ‘const int[int]’ for array subscript"
    },
    {
      "mod_line": [
        13,
        17,
        30
      ],
      "mod_code": [
        "p [ i ] [ 0 ] = ( p [ i - 1 ] [ 0 ] * base [ 0 ] ) % base [ 0 ] [ 0 ] , p [ 0 ] [ 0 ] % MOD [ 0 ] ;",
        "long long int Hash ;",
        "pash2 -= ( p [ len - 1 ] [ 1 ] % MOD [ 1 ] * MOD % MOD [ 1 ] ) % MOD [ 1 ] ;"
      ],
      "err_line": 13,
      "err_msg": "invalid types ‘const int[int]’ for array subscript"
    },
    {
      "mod_line": [
        13,
        17,
        30,
        25
      ],
      "mod_code": [
        "p [ i ] [ 0 ] = ( p [ i - 1 ] [ 0 ] * base [ 0 ] ) % base [ 0 ] [ 0 ] , p [ 0 ] [ 0 ] % MOD [ 0 ] ;",
        "long long int Hash ;",
        "pash2 -= ( p [ len - 1 ] [ 1 ] % MOD [ 1 ] * MOD % MOD [ 1 ] ) % MOD [ 1 ] ;",
        "] = s [ j ] ;"
      ],
      "err_line": 13,
      "err_msg": "invalid types ‘const int[int]’ for array subscript"
    },
    {
      "mod_line": [
        13,
        17,
        25
      ],
      "mod_code": [
        "p [ i ] [ 0 ] = ( p [ i - 1 ] [ 0 ] * base [ 0 ] ) % base [ 0 ] [ 0 ] , p [ 0 ] [ 0 ] % MOD [ 0 ] ;",
        "long long int Hash ;",
        "] = s [ j ] ;"
      ],
      "err_line": 13,
      "err_msg": "invalid types ‘const int[int]’ for array subscript"
    },
    {
      "mod_line": [
        13,
        26
      ],
      "mod_code": [
        "p [ i ] [ 0 ] = ( p [ i - 1 ] [ 0 ] * base [ 0 ] ) % base [ 0 ] [ 0 ] , p [ 0 ] [ 0 ] % MOD [ 0 ] ;",
        "hash1 -= ( p [ len - 1 ] [ 0 ] % MOD [ 0 ] * MOD % MOD [ 0 ] ) % MOD [ 0 ] ;"
      ],
      "err_line": 13,
      "err_msg": "invalid types ‘const int[int]’ for array subscript"
    },
    {
      "mod_line": [
        13,
        26,
        30
      ],
      "mod_code": [
        "p [ i ] [ 0 ] = ( p [ i - 1 ] [ 0 ] * base [ 0 ] ) % base [ 0 ] [ 0 ] , p [ 0 ] [ 0 ] % MOD [ 0 ] ;",
        "hash1 -= ( p [ len - 1 ] [ 0 ] % MOD [ 0 ] * MOD % MOD [ 0 ] ) % MOD [ 0 ] ;",
        "pash2 -= ( p [ len - 1 ] [ 1 ] % MOD [ 1 ] * MOD % MOD [ 1 ] ) % MOD [ 1 ] ;"
      ],
      "err_line": 13,
      "err_msg": "invalid types ‘const int[int]’ for array subscript"
    },
    {
      "mod_line": [
        13,
        26,
        30,
        25
      ],
      "mod_code": [
        "p [ i ] [ 0 ] = ( p [ i - 1 ] [ 0 ] * base [ 0 ] ) % base [ 0 ] [ 0 ] , p [ 0 ] [ 0 ] % MOD [ 0 ] ;",
        "hash1 -= ( p [ len - 1 ] [ 0 ] % MOD [ 0 ] * MOD % MOD [ 0 ] ) % MOD [ 0 ] ;",
        "pash2 -= ( p [ len - 1 ] [ 1 ] % MOD [ 1 ] * MOD % MOD [ 1 ] ) % MOD [ 1 ] ;",
        "] = s [ j ] ;"
      ],
      "err_line": 13,
      "err_msg": "invalid types ‘const int[int]’ for array subscript"
    },
    {
      "mod_line": [
        13,
        26,
        25
      ],
      "mod_code": [
        "p [ i ] [ 0 ] = ( p [ i - 1 ] [ 0 ] * base [ 0 ] ) % base [ 0 ] [ 0 ] , p [ 0 ] [ 0 ] % MOD [ 0 ] ;",
        "hash1 -= ( p [ len - 1 ] [ 0 ] % MOD [ 0 ] * MOD % MOD [ 0 ] ) % MOD [ 0 ] ;",
        "] = s [ j ] ;"
      ],
      "err_line": 13,
      "err_msg": "invalid types ‘const int[int]’ for array subscript"
    },
    {
      "mod_line": [
        13,
        30
      ],
      "mod_code": [
        "p [ i ] [ 0 ] = ( p [ i - 1 ] [ 0 ] * base [ 0 ] ) % base [ 0 ] [ 0 ] , p [ 0 ] [ 0 ] % MOD [ 0 ] ;",
        "pash2 -= ( p [ len - 1 ] [ 1 ] % MOD [ 1 ] * MOD % MOD [ 1 ] ) % MOD [ 1 ] ;"
      ],
      "err_line": 13,
      "err_msg": "invalid types ‘const int[int]’ for array subscript"
    },
    {
      "mod_line": [
        13,
        30,
        25
      ],
      "mod_code": [
        "p [ i ] [ 0 ] = ( p [ i - 1 ] [ 0 ] * base [ 0 ] ) % base [ 0 ] [ 0 ] , p [ 0 ] [ 0 ] % MOD [ 0 ] ;",
        "pash2 -= ( p [ len - 1 ] [ 1 ] % MOD [ 1 ] * MOD % MOD [ 1 ] ) % MOD [ 1 ] ;",
        "] = s [ j ] ;"
      ],
      "err_line": 13,
      "err_msg": "invalid types ‘const int[int]’ for array subscript"
    },
    {
      "mod_line": [
        13,
        25
      ],
      "mod_code": [
        "p [ i ] [ 0 ] = ( p [ i - 1 ] [ 0 ] * base [ 0 ] ) % base [ 0 ] [ 0 ] , p [ 0 ] [ 0 ] % MOD [ 0 ] ;",
        "] = s [ j ] ;"
      ],
      "err_line": 13,
      "err_msg": "invalid types ‘const int[int]’ for array subscript"
    },
    {
      "mod_line": [
        14,
        17
      ],
      "mod_code": [
        "p [ i ] [ 1 ] = ( p [ i - 1 ] [ 1 ] * base [ 1 ] ) % base [ 1 ] [ 1 ] % base [ 1 ] [ 1 ] , p [ i ] [ 1 ] ;",
        "long long int Hash ;"
      ],
      "err_line": 14,
      "err_msg": "invalid types ‘const int[int]’ for array subscript"
    },
    {
      "mod_line": [
        14,
        17,
        26
      ],
      "mod_code": [
        "p [ i ] [ 1 ] = ( p [ i - 1 ] [ 1 ] * base [ 1 ] ) % base [ 1 ] [ 1 ] % base [ 1 ] [ 1 ] , p [ i ] [ 1 ] ;",
        "long long int Hash ;",
        "hash1 -= ( p [ len - 1 ] [ 0 ] % MOD [ 0 ] * MOD % MOD [ 0 ] ) % MOD [ 0 ] ;"
      ],
      "err_line": 14,
      "err_msg": "invalid types ‘const int[int]’ for array subscript"
    },
    {
      "mod_line": [
        14,
        17,
        26,
        30
      ],
      "mod_code": [
        "p [ i ] [ 1 ] = ( p [ i - 1 ] [ 1 ] * base [ 1 ] ) % base [ 1 ] [ 1 ] % base [ 1 ] [ 1 ] , p [ i ] [ 1 ] ;",
        "long long int Hash ;",
        "hash1 -= ( p [ len - 1 ] [ 0 ] % MOD [ 0 ] * MOD % MOD [ 0 ] ) % MOD [ 0 ] ;",
        "pash2 -= ( p [ len - 1 ] [ 1 ] % MOD [ 1 ] * MOD % MOD [ 1 ] ) % MOD [ 1 ] ;"
      ],
      "err_line": 14,
      "err_msg": "invalid types ‘const int[int]’ for array subscript"
    },
    {
      "mod_line": [
        14,
        17,
        26,
        25
      ],
      "mod_code": [
        "p [ i ] [ 1 ] = ( p [ i - 1 ] [ 1 ] * base [ 1 ] ) % base [ 1 ] [ 1 ] % base [ 1 ] [ 1 ] , p [ i ] [ 1 ] ;",
        "long long int Hash ;",
        "hash1 -= ( p [ len - 1 ] [ 0 ] % MOD [ 0 ] * MOD % MOD [ 0 ] ) % MOD [ 0 ] ;",
        "] = s [ j ] ;"
      ],
      "err_line": 14,
      "err_msg": "invalid types ‘const int[int]’ for array subscript"
    },
    {
      "mod_line": [
        14,
        17,
        30
      ],
      "mod_code": [
        "p [ i ] [ 1 ] = ( p [ i - 1 ] [ 1 ] * base [ 1 ] ) % base [ 1 ] [ 1 ] % base [ 1 ] [ 1 ] , p [ i ] [ 1 ] ;",
        "long long int Hash ;",
        "pash2 -= ( p [ len - 1 ] [ 1 ] % MOD [ 1 ] * MOD % MOD [ 1 ] ) % MOD [ 1 ] ;"
      ],
      "err_line": 14,
      "err_msg": "invalid types ‘const int[int]’ for array subscript"
    },
    {
      "mod_line": [
        14,
        17,
        30,
        25
      ],
      "mod_code": [
        "p [ i ] [ 1 ] = ( p [ i - 1 ] [ 1 ] * base [ 1 ] ) % base [ 1 ] [ 1 ] % base [ 1 ] [ 1 ] , p [ i ] [ 1 ] ;",
        "long long int Hash ;",
        "pash2 -= ( p [ len - 1 ] [ 1 ] % MOD [ 1 ] * MOD % MOD [ 1 ] ) % MOD [ 1 ] ;",
        "] = s [ j ] ;"
      ],
      "err_line": 14,
      "err_msg": "invalid types ‘const int[int]’ for array subscript"
    },
    {
      "mod_line": [
        14,
        17,
        25
      ],
      "mod_code": [
        "p [ i ] [ 1 ] = ( p [ i - 1 ] [ 1 ] * base [ 1 ] ) % base [ 1 ] [ 1 ] % base [ 1 ] [ 1 ] , p [ i ] [ 1 ] ;",
        "long long int Hash ;",
        "] = s [ j ] ;"
      ],
      "err_line": 14,
      "err_msg": "invalid types ‘const int[int]’ for array subscript"
    },
    {
      "mod_line": [
        14,
        26
      ],
      "mod_code": [
        "p [ i ] [ 1 ] = ( p [ i - 1 ] [ 1 ] * base [ 1 ] ) % base [ 1 ] [ 1 ] % base [ 1 ] [ 1 ] , p [ i ] [ 1 ] ;",
        "hash1 -= ( p [ len - 1 ] [ 0 ] % MOD [ 0 ] * MOD % MOD [ 0 ] ) % MOD [ 0 ] ;"
      ],
      "err_line": 14,
      "err_msg": "invalid types ‘const int[int]’ for array subscript"
    },
    {
      "mod_line": [
        14,
        26,
        30
      ],
      "mod_code": [
        "p [ i ] [ 1 ] = ( p [ i - 1 ] [ 1 ] * base [ 1 ] ) % base [ 1 ] [ 1 ] % base [ 1 ] [ 1 ] , p [ i ] [ 1 ] ;",
        "hash1 -= ( p [ len - 1 ] [ 0 ] % MOD [ 0 ] * MOD % MOD [ 0 ] ) % MOD [ 0 ] ;",
        "pash2 -= ( p [ len - 1 ] [ 1 ] % MOD [ 1 ] * MOD % MOD [ 1 ] ) % MOD [ 1 ] ;"
      ],
      "err_line": 14,
      "err_msg": "invalid types ‘const int[int]’ for array subscript"
    },
    {
      "mod_line": [
        14,
        26,
        30,
        25
      ],
      "mod_code": [
        "p [ i ] [ 1 ] = ( p [ i - 1 ] [ 1 ] * base [ 1 ] ) % base [ 1 ] [ 1 ] % base [ 1 ] [ 1 ] , p [ i ] [ 1 ] ;",
        "hash1 -= ( p [ len - 1 ] [ 0 ] % MOD [ 0 ] * MOD % MOD [ 0 ] ) % MOD [ 0 ] ;",
        "pash2 -= ( p [ len - 1 ] [ 1 ] % MOD [ 1 ] * MOD % MOD [ 1 ] ) % MOD [ 1 ] ;",
        "] = s [ j ] ;"
      ],
      "err_line": 14,
      "err_msg": "invalid types ‘const int[int]’ for array subscript"
    },
    {
      "mod_line": [
        14,
        26,
        25
      ],
      "mod_code": [
        "p [ i ] [ 1 ] = ( p [ i - 1 ] [ 1 ] * base [ 1 ] ) % base [ 1 ] [ 1 ] % base [ 1 ] [ 1 ] , p [ i ] [ 1 ] ;",
        "hash1 -= ( p [ len - 1 ] [ 0 ] % MOD [ 0 ] * MOD % MOD [ 0 ] ) % MOD [ 0 ] ;",
        "] = s [ j ] ;"
      ],
      "err_line": 14,
      "err_msg": "invalid types ‘const int[int]’ for array subscript"
    },
    {
      "mod_line": [
        14,
        30
      ],
      "mod_code": [
        "p [ i ] [ 1 ] = ( p [ i - 1 ] [ 1 ] * base [ 1 ] ) % base [ 1 ] [ 1 ] % base [ 1 ] [ 1 ] , p [ i ] [ 1 ] ;",
        "pash2 -= ( p [ len - 1 ] [ 1 ] % MOD [ 1 ] * MOD % MOD [ 1 ] ) % MOD [ 1 ] ;"
      ],
      "err_line": 14,
      "err_msg": "invalid types ‘const int[int]’ for array subscript"
    },
    {
      "mod_line": [
        14,
        30,
        25
      ],
      "mod_code": [
        "p [ i ] [ 1 ] = ( p [ i - 1 ] [ 1 ] * base [ 1 ] ) % base [ 1 ] [ 1 ] % base [ 1 ] [ 1 ] , p [ i ] [ 1 ] ;",
        "pash2 -= ( p [ len - 1 ] [ 1 ] % MOD [ 1 ] * MOD % MOD [ 1 ] ) % MOD [ 1 ] ;",
        "] = s [ j ] ;"
      ],
      "err_line": 14,
      "err_msg": "invalid types ‘const int[int]’ for array subscript"
    },
    {
      "mod_line": [
        14,
        25
      ],
      "mod_code": [
        "p [ i ] [ 1 ] = ( p [ i - 1 ] [ 1 ] * base [ 1 ] ) % base [ 1 ] [ 1 ] % base [ 1 ] [ 1 ] , p [ i ] [ 1 ] ;",
        "] = s [ j ] ;"
      ],
      "err_line": 14,
      "err_msg": "invalid types ‘const int[int]’ for array subscript"
    },
    {
      "mod_line": [
        17,
        26
      ],
      "mod_code": [
        "long long int Hash ;",
        "hash1 -= ( p [ len - 1 ] [ 0 ] % MOD [ 0 ] * MOD % MOD [ 0 ] ) % MOD [ 0 ] ;"
      ],
      "err_line": 24,
      "err_msg": "request for member ‘insert’ in ‘Hash’, which is of non-class type ‘long long int’"
    },
    {
      "mod_line": [
        17,
        26,
        30
      ],
      "mod_code": [
        "long long int Hash ;",
        "hash1 -= ( p [ len - 1 ] [ 0 ] % MOD [ 0 ] * MOD % MOD [ 0 ] ) % MOD [ 0 ] ;",
        "pash2 -= ( p [ len - 1 ] [ 1 ] % MOD [ 1 ] * MOD % MOD [ 1 ] ) % MOD [ 1 ] ;"
      ],
      "err_line": 24,
      "err_msg": "request for member ‘insert’ in ‘Hash’, which is of non-class type ‘long long int’"
    },
    {
      "mod_line": [
        17,
        26,
        30,
        25
      ],
      "mod_code": [
        "long long int Hash ;",
        "hash1 -= ( p [ len - 1 ] [ 0 ] % MOD [ 0 ] * MOD % MOD [ 0 ] ) % MOD [ 0 ] ;",
        "pash2 -= ( p [ len - 1 ] [ 1 ] % MOD [ 1 ] * MOD % MOD [ 1 ] ) % MOD [ 1 ] ;",
        "] = s [ j ] ;"
      ],
      "err_line": 24,
      "err_msg": "request for member ‘insert’ in ‘Hash’, which is of non-class type ‘long long int’"
    },
    {
      "mod_line": [
        17,
        26,
        25
      ],
      "mod_code": [
        "long long int Hash ;",
        "hash1 -= ( p [ len - 1 ] [ 0 ] % MOD [ 0 ] * MOD % MOD [ 0 ] ) % MOD [ 0 ] ;",
        "] = s [ j ] ;"
      ],
      "err_line": 24,
      "err_msg": "request for member ‘insert’ in ‘Hash’, which is of non-class type ‘long long int’"
    },
    {
      "mod_line": [
        17,
        30
      ],
      "mod_code": [
        "long long int Hash ;",
        "pash2 -= ( p [ len - 1 ] [ 1 ] % MOD [ 1 ] * MOD % MOD [ 1 ] ) % MOD [ 1 ] ;"
      ],
      "err_line": 24,
      "err_msg": "request for member ‘insert’ in ‘Hash’, which is of non-class type ‘long long int’"
    },
    {
      "mod_line": [
        17,
        30,
        25
      ],
      "mod_code": [
        "long long int Hash ;",
        "pash2 -= ( p [ len - 1 ] [ 1 ] % MOD [ 1 ] * MOD % MOD [ 1 ] ) % MOD [ 1 ] ;",
        "] = s [ j ] ;"
      ],
      "err_line": 24,
      "err_msg": "request for member ‘insert’ in ‘Hash’, which is of non-class type ‘long long int’"
    },
    {
      "mod_line": [
        17,
        25
      ],
      "mod_code": [
        "long long int Hash ;",
        "] = s [ j ] ;"
      ],
      "err_line": 24,
      "err_msg": "request for member ‘insert’ in ‘Hash’, which is of non-class type ‘long long int’"
    },
    {
      "mod_line": [
        26,
        30
      ],
      "mod_code": [
        "hash1 -= ( p [ len - 1 ] [ 0 ] % MOD [ 0 ] * MOD % MOD [ 0 ] ) % MOD [ 0 ] ;",
        "pash2 -= ( p [ len - 1 ] [ 1 ] % MOD [ 1 ] * MOD % MOD [ 1 ] ) % MOD [ 1 ] ;"
      ],
      "err_line": 26,
      "err_msg": "invalid operands of types ‘long long int’ and ‘const int [2]’ to binary ‘operator*’"
    },
    {
      "mod_line": [
        26,
        30,
        25
      ],
      "mod_code": [
        "hash1 -= ( p [ len - 1 ] [ 0 ] % MOD [ 0 ] * MOD % MOD [ 0 ] ) % MOD [ 0 ] ;",
        "pash2 -= ( p [ len - 1 ] [ 1 ] % MOD [ 1 ] * MOD % MOD [ 1 ] ) % MOD [ 1 ] ;",
        "] = s [ j ] ;"
      ],
      "err_line": 25,
      "err_msg": "expected primary-expression before ‘]’ token"
    },
    {
      "mod_line": [
        26,
        25
      ],
      "mod_code": [
        "hash1 -= ( p [ len - 1 ] [ 0 ] % MOD [ 0 ] * MOD % MOD [ 0 ] ) % MOD [ 0 ] ;",
        "] = s [ j ] ;"
      ],
      "err_line": 25,
      "err_msg": "expected primary-expression before ‘]’ token"
    },
    {
      "mod_line": [
        30,
        25
      ],
      "mod_code": [
        "pash2 -= ( p [ len - 1 ] [ 1 ] % MOD [ 1 ] * MOD % MOD [ 1 ] ) % MOD [ 1 ] ;",
        "] = s [ j ] ;"
      ],
      "err_line": 25,
      "err_msg": "expected primary-expression before ‘]’ token"
    }
  ]
}