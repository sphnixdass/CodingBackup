{
  "meta": {
    "index": 598,
    "hitid": "3IZVJEBJ6AEXR1RJXN8L6S0FGDT6ZC",
    "workerid": "AIWEXPJAU66D9",
    "probid": "999A",
    "subid": "48593553"
  },
  "lines": [
    {
      "line": 0,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 1,
      "text": "create integers n and k",
      "code": "int n , k ;",
      "indent": 1
    },
    {
      "line": 2,
      "text": "read n and k",
      "code": "cin >> n >> k ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "declare vector of ints v with size n",
      "code": "vector < int > v ( n ) ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "read n elements into v [ i ]",
      "code": "for ( int i = 0 ; i < n ; i ++ ) { cin >> v [ i ] ; }",
      "indent": 1
    },
    {
      "line": 5,
      "text": "declare integer variable sum = 0",
      "code": "int sum = 0 ;",
      "indent": 1
    },
    {
      "line": 6,
      "text": "create integer i",
      "code": "int i ;",
      "indent": 1
    },
    {
      "line": 7,
      "text": "loop i from 0 to n exclusive",
      "code": "for ( i = 0 ; i < n ; i ++ )",
      "indent": 1
    },
    {
      "line": 8,
      "text": "if v [ i ] < = k",
      "code": "if ( v [ i ] <= k )",
      "indent": 2
    },
    {
      "line": 9,
      "text": "increment sum by one",
      "code": "sum ++ ;",
      "indent": 3
    },
    {
      "line": 10,
      "text": "else",
      "code": "else",
      "indent": 2
    },
    {
      "line": 11,
      "text": "break the loop",
      "code": "break ;",
      "indent": 3
    },
    {
      "line": 12,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 13,
      "text": "if i = n",
      "code": "if ( i == n )",
      "indent": 1
    },
    {
      "line": 14,
      "text": "print sum",
      "code": "cout << sum << endl ;",
      "indent": 2
    },
    {
      "line": 15,
      "text": "else",
      "code": "else",
      "indent": 1
    },
    {
      "line": 16,
      "text": "declare integer variable sum2 = 0",
      "code": "int sum2 = 0 ;",
      "indent": 2
    },
    {
      "line": 17,
      "text": "for i from n - 1 to 0 inclusive counting down",
      "code": "for ( int i = n - 1 ; i >= 0 ; i -- )",
      "indent": 2
    },
    {
      "line": 18,
      "text": "if v [ i ] < = k",
      "code": "if ( v [ i ] <= k )",
      "indent": 3
    },
    {
      "line": 19,
      "text": "increment sum2",
      "code": "sum2 ++ ;",
      "indent": 4
    },
    {
      "line": 20,
      "text": "else",
      "code": "else",
      "indent": 3
    },
    {
      "line": 21,
      "text": "break the loop",
      "code": "break ;",
      "indent": 4
    },
    {
      "line": 22,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 23,
      "text": "print sum + sum2",
      "code": "cout << sum + sum2 << endl ;",
      "indent": 2
    },
    {
      "line": 24,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 25,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 26,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        3
      ],
      "mod_code": [
        "vector < int > v [ n ] ;"
      ],
      "err_line": 4,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘std::vector<int>’)"
    },
    {
      "mod_line": [
        11
      ],
      "mod_code": [
        "break the ;"
      ],
      "err_line": 11,
      "err_msg": "expected ‘;’ before ‘the’"
    },
    {
      "mod_line": [
        13
      ],
      "mod_code": [
        "if ( i == n ) i ++ ;"
      ],
      "err_line": 15,
      "err_msg": "‘else’ without a previous ‘if’"
    },
    {
      "mod_line": [
        21
      ],
      "mod_code": [
        "break the ;"
      ],
      "err_line": 21,
      "err_msg": "expected ‘;’ before ‘the’"
    },
    {
      "mod_line": [
        7,
        18,
        2,
        13
      ],
      "mod_code": [
        "for ( int i = 0 ; i < n ; i ++ )",
        "if ( v [ i ] <= ' k ' )",
        "cin >> n and k ;",
        "if ( i == n ) i ++ ;"
      ],
      "err_line": 15,
      "err_msg": "‘else’ without a previous ‘if’"
    },
    {
      "mod_line": [
        7,
        18,
        2,
        11
      ],
      "mod_code": [
        "for ( int i = 0 ; i < n ; i ++ )",
        "if ( v [ i ] <= ' k ' )",
        "cin >> n and k ;",
        "break the ;"
      ],
      "err_line": 11,
      "err_msg": "expected ‘;’ before ‘the’"
    },
    {
      "mod_line": [
        7,
        18,
        13
      ],
      "mod_code": [
        "for ( int i = 0 ; i < n ; i ++ )",
        "if ( v [ i ] <= ' k ' )",
        "if ( i == n ) i ++ ;"
      ],
      "err_line": 15,
      "err_msg": "‘else’ without a previous ‘if’"
    },
    {
      "mod_line": [
        7,
        18,
        13,
        11
      ],
      "mod_code": [
        "for ( int i = 0 ; i < n ; i ++ )",
        "if ( v [ i ] <= ' k ' )",
        "if ( i == n ) i ++ ;",
        "break the ;"
      ],
      "err_line": 11,
      "err_msg": "expected ‘;’ before ‘the’"
    },
    {
      "mod_line": [
        7,
        18,
        13,
        8
      ],
      "mod_code": [
        "for ( int i = 0 ; i < n ; i ++ )",
        "if ( v [ i ] <= ' k ' )",
        "if ( i == n ) i ++ ;",
        "if ( v [ i ] <= ' k ' )"
      ],
      "err_line": 15,
      "err_msg": "‘else’ without a previous ‘if’"
    },
    {
      "mod_line": [
        7,
        18,
        11
      ],
      "mod_code": [
        "for ( int i = 0 ; i < n ; i ++ )",
        "if ( v [ i ] <= ' k ' )",
        "break the ;"
      ],
      "err_line": 11,
      "err_msg": "expected ‘;’ before ‘the’"
    },
    {
      "mod_line": [
        7,
        18,
        11,
        8
      ],
      "mod_code": [
        "for ( int i = 0 ; i < n ; i ++ )",
        "if ( v [ i ] <= ' k ' )",
        "break the ;",
        "if ( v [ i ] <= ' k ' )"
      ],
      "err_line": 11,
      "err_msg": "expected ‘;’ before ‘the’"
    },
    {
      "mod_line": [
        7,
        2,
        13
      ],
      "mod_code": [
        "for ( int i = 0 ; i < n ; i ++ )",
        "cin >> n and k ;",
        "if ( i == n ) i ++ ;"
      ],
      "err_line": 15,
      "err_msg": "‘else’ without a previous ‘if’"
    },
    {
      "mod_line": [
        7,
        2,
        13,
        11
      ],
      "mod_code": [
        "for ( int i = 0 ; i < n ; i ++ )",
        "cin >> n and k ;",
        "if ( i == n ) i ++ ;",
        "break the ;"
      ],
      "err_line": 11,
      "err_msg": "expected ‘;’ before ‘the’"
    },
    {
      "mod_line": [
        7,
        2,
        13,
        8
      ],
      "mod_code": [
        "for ( int i = 0 ; i < n ; i ++ )",
        "cin >> n and k ;",
        "if ( i == n ) i ++ ;",
        "if ( v [ i ] <= ' k ' )"
      ],
      "err_line": 15,
      "err_msg": "‘else’ without a previous ‘if’"
    },
    {
      "mod_line": [
        7,
        2,
        11
      ],
      "mod_code": [
        "for ( int i = 0 ; i < n ; i ++ )",
        "cin >> n and k ;",
        "break the ;"
      ],
      "err_line": 11,
      "err_msg": "expected ‘;’ before ‘the’"
    },
    {
      "mod_line": [
        7,
        2,
        11,
        8
      ],
      "mod_code": [
        "for ( int i = 0 ; i < n ; i ++ )",
        "cin >> n and k ;",
        "break the ;",
        "if ( v [ i ] <= ' k ' )"
      ],
      "err_line": 11,
      "err_msg": "expected ‘;’ before ‘the’"
    },
    {
      "mod_line": [
        7,
        13
      ],
      "mod_code": [
        "for ( int i = 0 ; i < n ; i ++ )",
        "if ( i == n ) i ++ ;"
      ],
      "err_line": 15,
      "err_msg": "‘else’ without a previous ‘if’"
    },
    {
      "mod_line": [
        7,
        13,
        11
      ],
      "mod_code": [
        "for ( int i = 0 ; i < n ; i ++ )",
        "if ( i == n ) i ++ ;",
        "break the ;"
      ],
      "err_line": 11,
      "err_msg": "expected ‘;’ before ‘the’"
    },
    {
      "mod_line": [
        7,
        13,
        11,
        8
      ],
      "mod_code": [
        "for ( int i = 0 ; i < n ; i ++ )",
        "if ( i == n ) i ++ ;",
        "break the ;",
        "if ( v [ i ] <= ' k ' )"
      ],
      "err_line": 11,
      "err_msg": "expected ‘;’ before ‘the’"
    },
    {
      "mod_line": [
        7,
        13,
        8
      ],
      "mod_code": [
        "for ( int i = 0 ; i < n ; i ++ )",
        "if ( i == n ) i ++ ;",
        "if ( v [ i ] <= ' k ' )"
      ],
      "err_line": 15,
      "err_msg": "‘else’ without a previous ‘if’"
    },
    {
      "mod_line": [
        7,
        11
      ],
      "mod_code": [
        "for ( int i = 0 ; i < n ; i ++ )",
        "break the ;"
      ],
      "err_line": 11,
      "err_msg": "expected ‘;’ before ‘the’"
    },
    {
      "mod_line": [
        7,
        11,
        8
      ],
      "mod_code": [
        "for ( int i = 0 ; i < n ; i ++ )",
        "break the ;",
        "if ( v [ i ] <= ' k ' )"
      ],
      "err_line": 11,
      "err_msg": "expected ‘;’ before ‘the’"
    },
    {
      "mod_line": [
        18,
        2,
        13
      ],
      "mod_code": [
        "if ( v [ i ] <= ' k ' )",
        "cin >> n and k ;",
        "if ( i == n ) i ++ ;"
      ],
      "err_line": 15,
      "err_msg": "‘else’ without a previous ‘if’"
    },
    {
      "mod_line": [
        18,
        2,
        13,
        11
      ],
      "mod_code": [
        "if ( v [ i ] <= ' k ' )",
        "cin >> n and k ;",
        "if ( i == n ) i ++ ;",
        "break the ;"
      ],
      "err_line": 11,
      "err_msg": "expected ‘;’ before ‘the’"
    },
    {
      "mod_line": [
        18,
        2,
        13,
        8
      ],
      "mod_code": [
        "if ( v [ i ] <= ' k ' )",
        "cin >> n and k ;",
        "if ( i == n ) i ++ ;",
        "if ( v [ i ] <= ' k ' )"
      ],
      "err_line": 15,
      "err_msg": "‘else’ without a previous ‘if’"
    },
    {
      "mod_line": [
        18,
        2,
        11
      ],
      "mod_code": [
        "if ( v [ i ] <= ' k ' )",
        "cin >> n and k ;",
        "break the ;"
      ],
      "err_line": 11,
      "err_msg": "expected ‘;’ before ‘the’"
    },
    {
      "mod_line": [
        18,
        2,
        11,
        8
      ],
      "mod_code": [
        "if ( v [ i ] <= ' k ' )",
        "cin >> n and k ;",
        "break the ;",
        "if ( v [ i ] <= ' k ' )"
      ],
      "err_line": 11,
      "err_msg": "expected ‘;’ before ‘the’"
    },
    {
      "mod_line": [
        18,
        13
      ],
      "mod_code": [
        "if ( v [ i ] <= ' k ' )",
        "if ( i == n ) i ++ ;"
      ],
      "err_line": 15,
      "err_msg": "‘else’ without a previous ‘if’"
    },
    {
      "mod_line": [
        18,
        13,
        11
      ],
      "mod_code": [
        "if ( v [ i ] <= ' k ' )",
        "if ( i == n ) i ++ ;",
        "break the ;"
      ],
      "err_line": 11,
      "err_msg": "expected ‘;’ before ‘the’"
    },
    {
      "mod_line": [
        18,
        13,
        11,
        8
      ],
      "mod_code": [
        "if ( v [ i ] <= ' k ' )",
        "if ( i == n ) i ++ ;",
        "break the ;",
        "if ( v [ i ] <= ' k ' )"
      ],
      "err_line": 11,
      "err_msg": "expected ‘;’ before ‘the’"
    },
    {
      "mod_line": [
        18,
        13,
        8
      ],
      "mod_code": [
        "if ( v [ i ] <= ' k ' )",
        "if ( i == n ) i ++ ;",
        "if ( v [ i ] <= ' k ' )"
      ],
      "err_line": 15,
      "err_msg": "‘else’ without a previous ‘if’"
    },
    {
      "mod_line": [
        18,
        11
      ],
      "mod_code": [
        "if ( v [ i ] <= ' k ' )",
        "break the ;"
      ],
      "err_line": 11,
      "err_msg": "expected ‘;’ before ‘the’"
    },
    {
      "mod_line": [
        18,
        11,
        8
      ],
      "mod_code": [
        "if ( v [ i ] <= ' k ' )",
        "break the ;",
        "if ( v [ i ] <= ' k ' )"
      ],
      "err_line": 11,
      "err_msg": "expected ‘;’ before ‘the’"
    },
    {
      "mod_line": [
        2,
        13
      ],
      "mod_code": [
        "cin >> n and k ;",
        "if ( i == n ) i ++ ;"
      ],
      "err_line": 15,
      "err_msg": "‘else’ without a previous ‘if’"
    },
    {
      "mod_line": [
        2,
        13,
        11
      ],
      "mod_code": [
        "cin >> n and k ;",
        "if ( i == n ) i ++ ;",
        "break the ;"
      ],
      "err_line": 11,
      "err_msg": "expected ‘;’ before ‘the’"
    },
    {
      "mod_line": [
        2,
        13,
        11,
        8
      ],
      "mod_code": [
        "cin >> n and k ;",
        "if ( i == n ) i ++ ;",
        "break the ;",
        "if ( v [ i ] <= ' k ' )"
      ],
      "err_line": 11,
      "err_msg": "expected ‘;’ before ‘the’"
    },
    {
      "mod_line": [
        2,
        13,
        8
      ],
      "mod_code": [
        "cin >> n and k ;",
        "if ( i == n ) i ++ ;",
        "if ( v [ i ] <= ' k ' )"
      ],
      "err_line": 15,
      "err_msg": "‘else’ without a previous ‘if’"
    },
    {
      "mod_line": [
        2,
        11
      ],
      "mod_code": [
        "cin >> n and k ;",
        "break the ;"
      ],
      "err_line": 11,
      "err_msg": "expected ‘;’ before ‘the’"
    },
    {
      "mod_line": [
        2,
        11,
        8
      ],
      "mod_code": [
        "cin >> n and k ;",
        "break the ;",
        "if ( v [ i ] <= ' k ' )"
      ],
      "err_line": 11,
      "err_msg": "expected ‘;’ before ‘the’"
    },
    {
      "mod_line": [
        13,
        11
      ],
      "mod_code": [
        "if ( i == n ) i ++ ;",
        "break the ;"
      ],
      "err_line": 11,
      "err_msg": "expected ‘;’ before ‘the’"
    },
    {
      "mod_line": [
        13,
        11,
        8
      ],
      "mod_code": [
        "if ( i == n ) i ++ ;",
        "break the ;",
        "if ( v [ i ] <= ' k ' )"
      ],
      "err_line": 11,
      "err_msg": "expected ‘;’ before ‘the’"
    },
    {
      "mod_line": [
        13,
        8
      ],
      "mod_code": [
        "if ( i == n ) i ++ ;",
        "if ( v [ i ] <= ' k ' )"
      ],
      "err_line": 15,
      "err_msg": "‘else’ without a previous ‘if’"
    },
    {
      "mod_line": [
        11,
        8
      ],
      "mod_code": [
        "break the ;",
        "if ( v [ i ] <= ' k ' )"
      ],
      "err_line": 11,
      "err_msg": "expected ‘;’ before ‘the’"
    }
  ]
}