{
  "meta": {
    "index": 1072,
    "hitid": "3ACRLU860N85MIHIXRBGWYLP56LEBK",
    "workerid": "AIWEXPJAU66D9",
    "probid": "23A",
    "subid": "47973664"
  },
  "lines": [
    {
      "line": 0,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 1,
      "text": "create strings s , str and tmp",
      "code": "string s , str , tmp ;",
      "indent": 1
    },
    {
      "line": 2,
      "text": "i , j , flag and ans are integers with flag and ans = 0",
      "code": "int i , j , flag = 0 , ans = 0 ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "read s",
      "code": "cin >> s ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "for i = length of s - 1 to 1 inclusive decrementing i",
      "code": "for ( i = s . length ( ) - 1 ; i >= 1 ; i -- )",
      "indent": 1
    },
    {
      "line": 5,
      "text": "for j = 0 to length of s exclusive",
      "code": "for ( j = 0 ; j + i < s . length ( ) ; j ++ )",
      "indent": 2
    },
    {
      "line": 6,
      "text": "str = substring of s from the start to j + 1",
      "code": "str = s . substr ( j + 1 ) ;",
      "indent": 3
    },
    {
      "line": 7,
      "text": "tmp = substring of s from j to i",
      "code": "tmp = s . substr ( j , i ) ;",
      "indent": 3
    },
    {
      "line": 8,
      "text": "if index of tmp in the str is not at the end",
      "code": "if ( str . find ( tmp ) != string :: npos )",
      "indent": 3
    },
    {
      "line": 9,
      "text": "ans = i",
      "code": "ans = i ;",
      "indent": 4
    },
    {
      "line": 10,
      "text": "set flag to 1",
      "code": "flag = 1 ;",
      "indent": 4
    },
    {
      "line": 11,
      "text": "stop the loop",
      "code": "break ;",
      "indent": 4
    },
    {
      "line": 12,
      "text": "DUMMY",
      "code": "}",
      "indent": 3
    },
    {
      "line": 13,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 14,
      "text": "if flag is set , stop the loop",
      "code": "if ( flag ) break ;",
      "indent": 2
    },
    {
      "line": 15,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 16,
      "text": "print ans and a new line",
      "code": "cout << ans << endl ;",
      "indent": 1
    },
    {
      "line": 17,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 18,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        8
      ],
      "mod_code": [
        "if ( str . find ( tmp ) != end . end ( ) )"
      ],
      "err_line": 8,
      "err_msg": "‘end’ was not declared in this scope"
    },
    {
      "mod_line": [
        1
      ],
      "mod_code": [
        "string s , str , n ;"
      ],
      "err_line": 7,
      "err_msg": "‘tmp’ was not declared in this scope"
    },
    {
      "mod_line": [
        2
      ],
      "mod_code": [
        "int i , j , flag = 0 , flag = 0 ;"
      ],
      "err_line": 2,
      "err_msg": "redeclaration of ‘int flag’"
    },
    {
      "mod_line": [
        11
      ],
      "mod_code": [
        "stop ;"
      ],
      "err_line": 11,
      "err_msg": "‘stop’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        8
      ],
      "mod_code": [
        "string str = s . substr ( j , j + 1 ) ;",
        "if ( str . find ( tmp ) != end . end ( ) )"
      ],
      "err_line": 8,
      "err_msg": "‘end’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        8,
        11
      ],
      "mod_code": [
        "string str = s . substr ( j , j + 1 ) ;",
        "if ( str . find ( tmp ) != end . end ( ) )",
        "stop ;"
      ],
      "err_line": 8,
      "err_msg": "‘end’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        8,
        11,
        3
      ],
      "mod_code": [
        "string str = s . substr ( j , j + 1 ) ;",
        "if ( str . find ( tmp ) != end . end ( ) )",
        "stop ;",
        "cout << s << endl ;"
      ],
      "err_line": 8,
      "err_msg": "‘end’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        8,
        11,
        2
      ],
      "mod_code": [
        "string str = s . substr ( j , j + 1 ) ;",
        "if ( str . find ( tmp ) != end . end ( ) )",
        "stop ;",
        "int i , j , flag = 0 , flag = 0 ;"
      ],
      "err_line": 2,
      "err_msg": "redeclaration of ‘int flag’"
    },
    {
      "mod_line": [
        6,
        8,
        3
      ],
      "mod_code": [
        "string str = s . substr ( j , j + 1 ) ;",
        "if ( str . find ( tmp ) != end . end ( ) )",
        "cout << s << endl ;"
      ],
      "err_line": 8,
      "err_msg": "‘end’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        8,
        3,
        2
      ],
      "mod_code": [
        "string str = s . substr ( j , j + 1 ) ;",
        "if ( str . find ( tmp ) != end . end ( ) )",
        "cout << s << endl ;",
        "int i , j , flag = 0 , flag = 0 ;"
      ],
      "err_line": 2,
      "err_msg": "redeclaration of ‘int flag’"
    },
    {
      "mod_line": [
        6,
        8,
        2
      ],
      "mod_code": [
        "string str = s . substr ( j , j + 1 ) ;",
        "if ( str . find ( tmp ) != end . end ( ) )",
        "int i , j , flag = 0 , flag = 0 ;"
      ],
      "err_line": 2,
      "err_msg": "redeclaration of ‘int flag’"
    },
    {
      "mod_line": [
        6,
        11
      ],
      "mod_code": [
        "string str = s . substr ( j , j + 1 ) ;",
        "stop ;"
      ],
      "err_line": 11,
      "err_msg": "‘stop’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        11,
        8
      ],
      "mod_code": [
        "string str = s . substr ( j , j + 1 ) ;",
        "stop ;",
        "if ( ! str . find ( tmp ) )"
      ],
      "err_line": 11,
      "err_msg": "‘stop’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        11,
        8,
        3
      ],
      "mod_code": [
        "string str = s . substr ( j , j + 1 ) ;",
        "stop ;",
        "if ( ! str . find ( tmp ) )",
        "cout << s << endl ;"
      ],
      "err_line": 11,
      "err_msg": "‘stop’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        11,
        8,
        2
      ],
      "mod_code": [
        "string str = s . substr ( j , j + 1 ) ;",
        "stop ;",
        "if ( ! str . find ( tmp ) )",
        "int i , j , flag = 0 , flag = 0 ;"
      ],
      "err_line": 2,
      "err_msg": "redeclaration of ‘int flag’"
    },
    {
      "mod_line": [
        6,
        11,
        3
      ],
      "mod_code": [
        "string str = s . substr ( j , j + 1 ) ;",
        "stop ;",
        "cout << s << endl ;"
      ],
      "err_line": 11,
      "err_msg": "‘stop’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        11,
        3,
        2
      ],
      "mod_code": [
        "string str = s . substr ( j , j + 1 ) ;",
        "stop ;",
        "cout << s << endl ;",
        "int i , j , flag = 0 , flag = 0 ;"
      ],
      "err_line": 2,
      "err_msg": "redeclaration of ‘int flag’"
    },
    {
      "mod_line": [
        6,
        11,
        2
      ],
      "mod_code": [
        "string str = s . substr ( j , j + 1 ) ;",
        "stop ;",
        "int i , j , flag = 0 , flag = 0 ;"
      ],
      "err_line": 2,
      "err_msg": "redeclaration of ‘int flag’"
    },
    {
      "mod_line": [
        6,
        8,
        3,
        2
      ],
      "mod_code": [
        "string str = s . substr ( j , j + 1 ) ;",
        "if ( ! str . find ( tmp ) )",
        "cout << s << endl ;",
        "int i , j , flag = 0 , flag = 0 ;"
      ],
      "err_line": 2,
      "err_msg": "redeclaration of ‘int flag’"
    },
    {
      "mod_line": [
        6,
        8,
        2
      ],
      "mod_code": [
        "string str = s . substr ( j , j + 1 ) ;",
        "if ( ! str . find ( tmp ) )",
        "int i , j , flag = 0 , flag = 0 ;"
      ],
      "err_line": 2,
      "err_msg": "redeclaration of ‘int flag’"
    },
    {
      "mod_line": [
        6,
        3,
        2
      ],
      "mod_code": [
        "string str = s . substr ( j , j + 1 ) ;",
        "cout << s << endl ;",
        "int i , j , flag = 0 , flag = 0 ;"
      ],
      "err_line": 2,
      "err_msg": "redeclaration of ‘int flag’"
    },
    {
      "mod_line": [
        6,
        2
      ],
      "mod_code": [
        "string str = s . substr ( j , j + 1 ) ;",
        "int i , j , flag = 0 , flag = 0 ;"
      ],
      "err_line": 2,
      "err_msg": "redeclaration of ‘int flag’"
    },
    {
      "mod_line": [
        8,
        11
      ],
      "mod_code": [
        "if ( str . find ( tmp ) != end . end ( ) )",
        "stop ;"
      ],
      "err_line": 8,
      "err_msg": "‘end’ was not declared in this scope"
    },
    {
      "mod_line": [
        8,
        11,
        3
      ],
      "mod_code": [
        "if ( str . find ( tmp ) != end . end ( ) )",
        "stop ;",
        "cout << s << endl ;"
      ],
      "err_line": 8,
      "err_msg": "‘end’ was not declared in this scope"
    },
    {
      "mod_line": [
        8,
        11,
        3,
        2
      ],
      "mod_code": [
        "if ( str . find ( tmp ) != end . end ( ) )",
        "stop ;",
        "cout << s << endl ;",
        "int i , j , flag = 0 , flag = 0 ;"
      ],
      "err_line": 2,
      "err_msg": "redeclaration of ‘int flag’"
    },
    {
      "mod_line": [
        8,
        11,
        2
      ],
      "mod_code": [
        "if ( str . find ( tmp ) != end . end ( ) )",
        "stop ;",
        "int i , j , flag = 0 , flag = 0 ;"
      ],
      "err_line": 2,
      "err_msg": "redeclaration of ‘int flag’"
    },
    {
      "mod_line": [
        8,
        3
      ],
      "mod_code": [
        "if ( str . find ( tmp ) != end . end ( ) )",
        "cout << s << endl ;"
      ],
      "err_line": 8,
      "err_msg": "‘end’ was not declared in this scope"
    },
    {
      "mod_line": [
        8,
        3,
        2
      ],
      "mod_code": [
        "if ( str . find ( tmp ) != end . end ( ) )",
        "cout << s << endl ;",
        "int i , j , flag = 0 , flag = 0 ;"
      ],
      "err_line": 2,
      "err_msg": "redeclaration of ‘int flag’"
    },
    {
      "mod_line": [
        8,
        2
      ],
      "mod_code": [
        "if ( str . find ( tmp ) != end . end ( ) )",
        "int i , j , flag = 0 , flag = 0 ;"
      ],
      "err_line": 2,
      "err_msg": "redeclaration of ‘int flag’"
    },
    {
      "mod_line": [
        11,
        8
      ],
      "mod_code": [
        "stop ;",
        "if ( ! str . find ( tmp ) )"
      ],
      "err_line": 11,
      "err_msg": "‘stop’ was not declared in this scope"
    },
    {
      "mod_line": [
        11,
        8,
        3
      ],
      "mod_code": [
        "stop ;",
        "if ( ! str . find ( tmp ) )",
        "cout << s << endl ;"
      ],
      "err_line": 11,
      "err_msg": "‘stop’ was not declared in this scope"
    },
    {
      "mod_line": [
        11,
        8,
        3,
        2
      ],
      "mod_code": [
        "stop ;",
        "if ( ! str . find ( tmp ) )",
        "cout << s << endl ;",
        "int i , j , flag = 0 , flag = 0 ;"
      ],
      "err_line": 2,
      "err_msg": "redeclaration of ‘int flag’"
    },
    {
      "mod_line": [
        11,
        8,
        2
      ],
      "mod_code": [
        "stop ;",
        "if ( ! str . find ( tmp ) )",
        "int i , j , flag = 0 , flag = 0 ;"
      ],
      "err_line": 2,
      "err_msg": "redeclaration of ‘int flag’"
    },
    {
      "mod_line": [
        11,
        3
      ],
      "mod_code": [
        "stop ;",
        "cout << s << endl ;"
      ],
      "err_line": 11,
      "err_msg": "‘stop’ was not declared in this scope"
    },
    {
      "mod_line": [
        11,
        3,
        2
      ],
      "mod_code": [
        "stop ;",
        "cout << s << endl ;",
        "int i , j , flag = 0 , flag = 0 ;"
      ],
      "err_line": 2,
      "err_msg": "redeclaration of ‘int flag’"
    },
    {
      "mod_line": [
        11,
        2
      ],
      "mod_code": [
        "stop ;",
        "int i , j , flag = 0 , flag = 0 ;"
      ],
      "err_line": 2,
      "err_msg": "redeclaration of ‘int flag’"
    },
    {
      "mod_line": [
        8,
        3,
        2
      ],
      "mod_code": [
        "if ( ! str . find ( tmp ) )",
        "cout << s << endl ;",
        "int i , j , flag = 0 , flag = 0 ;"
      ],
      "err_line": 2,
      "err_msg": "redeclaration of ‘int flag’"
    },
    {
      "mod_line": [
        8,
        2
      ],
      "mod_code": [
        "if ( ! str . find ( tmp ) )",
        "int i , j , flag = 0 , flag = 0 ;"
      ],
      "err_line": 2,
      "err_msg": "redeclaration of ‘int flag’"
    },
    {
      "mod_line": [
        3,
        2
      ],
      "mod_code": [
        "cout << s << endl ;",
        "int i , j , flag = 0 , flag = 0 ;"
      ],
      "err_line": 2,
      "err_msg": "redeclaration of ‘int flag’"
    }
  ]
}