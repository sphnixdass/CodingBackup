{
  "meta": {
    "index": 1636,
    "hitid": "3G57RS03HHZB2MOT3XP2RBC8Y79255",
    "workerid": "A1APYLD4DUK33J",
    "probid": "17A",
    "subid": "47245366"
  },
  "lines": [
    {
      "line": 0,
      "text": "declare pri with integer num as argument , returning boolean",
      "code": "bool pri ( int num )",
      "indent": 0
    },
    {
      "line": 1,
      "text": "for i = 2 to i * i is less than or equal to num , incrementing i",
      "code": "for ( int i = 2 ; i * i <= num ; i ++ )",
      "indent": 1
    },
    {
      "line": 2,
      "text": "if num % i is 0 , return false from function",
      "code": "if ( num % i == 0 ) return false ;",
      "indent": 2
    },
    {
      "line": 3,
      "text": "return true from function",
      "code": "return true ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    },
    {
      "line": 5,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 6,
      "text": "create integers n , k",
      "code": "int n , k ;",
      "indent": 1
    },
    {
      "line": 7,
      "text": "read n read k",
      "code": "cin >> n >> k ;",
      "indent": 1
    },
    {
      "line": 8,
      "text": "create integer array a with size 168",
      "code": "int a [ 168 ] ;",
      "indent": 1
    },
    {
      "line": 9,
      "text": "set a [ 0 ] to 2",
      "code": "a [ 0 ] = 2 ;",
      "indent": 1
    },
    {
      "line": 10,
      "text": "create integer temp with temp = 1",
      "code": "int temp = 1 ;",
      "indent": 1
    },
    {
      "line": 11,
      "text": "for i = 3 to 1000 exclusive , incrementing i by 2",
      "code": "for ( int i = 3 ; i < 1000 ; i += 2 )",
      "indent": 1
    },
    {
      "line": 12,
      "text": "if result of run pri with i as argument is true",
      "code": "if ( pri ( i ) )",
      "indent": 2
    },
    {
      "line": 13,
      "text": "set a [ temp ] to i",
      "code": "a [ temp ] = i ;",
      "indent": 3
    },
    {
      "line": 14,
      "text": "increment temp",
      "code": "temp ++ ;",
      "indent": 3
    },
    {
      "line": 15,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 16,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 17,
      "text": "create integer num with num = 0",
      "code": "int num = 0 ;",
      "indent": 1
    },
    {
      "line": 18,
      "text": "for i = 0 to a [ i ] inclusive",
      "code": "for ( int i = 0 ; a [ i ] <= n ; i ++ )",
      "indent": 1
    },
    {
      "line": 19,
      "text": "for j = 0 to i exclusive",
      "code": "for ( int j = 0 ; j < i ; j ++ )",
      "indent": 2
    },
    {
      "line": 20,
      "text": "if a [ j ] + a [ j + 1 ] + 1 is a [ i ]",
      "code": "if ( a [ j ] + a [ j + 1 ] + 1 == a [ i ] ) num ++ ;",
      "indent": 3
    },
    {
      "line": 21,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 22,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 23,
      "text": "if num is less than or equal to k",
      "code": "if ( num >= k )",
      "indent": 1
    },
    {
      "line": 24,
      "text": "print \" YES \" print newline",
      "code": "cout << \" YES \" << endl ;",
      "indent": 2
    },
    {
      "line": 25,
      "text": "else",
      "code": "else",
      "indent": 1
    },
    {
      "line": 26,
      "text": "print \" NO \" print newline",
      "code": "cout << \" NO \" << endl ;",
      "indent": 2
    },
    {
      "line": 27,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 28,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        20
      ],
      "mod_code": [
        "if ( a [ j ] + a [ j + 1 ] + 1 == a [ i ] )"
      ],
      "err_line": 21,
      "err_msg": "expected primary-expression before ‘}’ token"
    },
    {
      "mod_line": [
        0
      ],
      "mod_code": [
        "bool pri ( int num ) ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        1
      ],
      "mod_code": [
        "for ( i = 2 ; i * i <= num ; i ++ )"
      ],
      "err_line": 1,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        3
      ],
      "mod_code": [
        "continue ;"
      ],
      "err_line": 3,
      "err_msg": "continue statement not within a loop"
    },
    {
      "mod_line": [
        7
      ],
      "mod_code": [
        "while ( cin >> n >> k )"
      ],
      "err_line": 9,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        8
      ],
      "mod_code": [
        "int * a [ 168 ] ;"
      ],
      "err_line": 9,
      "err_msg": "invalid conversion from ‘int’ to ‘int*’ [-fpermissive]"
    },
    {
      "mod_line": [
        11
      ],
      "mod_code": [
        "for ( i = 3 ; i < 1000 ; i += 2 )"
      ],
      "err_line": 11,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        19
      ],
      "mod_code": [
        "for ( j = 0 ; j < i ; j ++ )"
      ],
      "err_line": 19,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        20
      ],
      "mod_code": [
        "if ( ( a [ j ] + a [ j + 1 ] + 1 ) == a [ i ] )"
      ],
      "err_line": 21,
      "err_msg": "expected primary-expression before ‘}’ token"
    },
    {
      "mod_line": [
        18,
        20
      ],
      "mod_code": [
        "for ( int i = 0 ; i <= a [ i ] ; i ++ )",
        "if ( a [ j ] + a [ j + 1 ] + 1 == a [ i ] )"
      ],
      "err_line": 21,
      "err_msg": "expected primary-expression before ‘}’ token"
    },
    {
      "mod_line": [
        18,
        20,
        23
      ],
      "mod_code": [
        "for ( int i = 0 ; i <= a [ i ] ; i ++ )",
        "if ( a [ j ] + a [ j + 1 ] + 1 == a [ i ] )",
        "if ( num <= k )"
      ],
      "err_line": 21,
      "err_msg": "expected primary-expression before ‘}’ token"
    },
    {
      "mod_line": [
        18,
        20,
        23,
        12
      ],
      "mod_code": [
        "for ( int i = 0 ; i <= a [ i ] ; i ++ )",
        "if ( a [ j ] + a [ j + 1 ] + 1 == a [ i ] )",
        "if ( num <= k )",
        "if ( pri ( i ) != true )"
      ],
      "err_line": 21,
      "err_msg": "expected primary-expression before ‘}’ token"
    },
    {
      "mod_line": [
        18,
        20,
        23,
        11
      ],
      "mod_code": [
        "for ( int i = 0 ; i <= a [ i ] ; i ++ )",
        "if ( a [ j ] + a [ j + 1 ] + 1 == a [ i ] )",
        "if ( num <= k )",
        "for ( i = 3 ; i < 1000 ; i += 2 )"
      ],
      "err_line": 11,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        18,
        20,
        23,
        1
      ],
      "mod_code": [
        "for ( int i = 0 ; i <= a [ i ] ; i ++ )",
        "if ( a [ j ] + a [ j + 1 ] + 1 == a [ i ] )",
        "if ( num <= k )",
        "for ( i = 2 ; i * i <= num ; i ++ )"
      ],
      "err_line": 1,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        18,
        20,
        12
      ],
      "mod_code": [
        "for ( int i = 0 ; i <= a [ i ] ; i ++ )",
        "if ( a [ j ] + a [ j + 1 ] + 1 == a [ i ] )",
        "if ( pri ( i ) != true )"
      ],
      "err_line": 21,
      "err_msg": "expected primary-expression before ‘}’ token"
    },
    {
      "mod_line": [
        18,
        20,
        12,
        11
      ],
      "mod_code": [
        "for ( int i = 0 ; i <= a [ i ] ; i ++ )",
        "if ( a [ j ] + a [ j + 1 ] + 1 == a [ i ] )",
        "if ( pri ( i ) != true )",
        "for ( i = 3 ; i < 1000 ; i += 2 )"
      ],
      "err_line": 11,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        18,
        20,
        12,
        1
      ],
      "mod_code": [
        "for ( int i = 0 ; i <= a [ i ] ; i ++ )",
        "if ( a [ j ] + a [ j + 1 ] + 1 == a [ i ] )",
        "if ( pri ( i ) != true )",
        "for ( i = 2 ; i * i <= num ; i ++ )"
      ],
      "err_line": 1,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        18,
        20,
        11
      ],
      "mod_code": [
        "for ( int i = 0 ; i <= a [ i ] ; i ++ )",
        "if ( a [ j ] + a [ j + 1 ] + 1 == a [ i ] )",
        "for ( i = 3 ; i < 1000 ; i += 2 )"
      ],
      "err_line": 11,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        18,
        20,
        11,
        1
      ],
      "mod_code": [
        "for ( int i = 0 ; i <= a [ i ] ; i ++ )",
        "if ( a [ j ] + a [ j + 1 ] + 1 == a [ i ] )",
        "for ( i = 3 ; i < 1000 ; i += 2 )",
        "for ( i = 2 ; i * i <= num ; i ++ )"
      ],
      "err_line": 1,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        18,
        20,
        1
      ],
      "mod_code": [
        "for ( int i = 0 ; i <= a [ i ] ; i ++ )",
        "if ( a [ j ] + a [ j + 1 ] + 1 == a [ i ] )",
        "for ( i = 2 ; i * i <= num ; i ++ )"
      ],
      "err_line": 1,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        18,
        23,
        12,
        11
      ],
      "mod_code": [
        "for ( int i = 0 ; i <= a [ i ] ; i ++ )",
        "if ( num <= k )",
        "if ( pri ( i ) != true )",
        "for ( i = 3 ; i < 1000 ; i += 2 )"
      ],
      "err_line": 11,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        18,
        23,
        12,
        1
      ],
      "mod_code": [
        "for ( int i = 0 ; i <= a [ i ] ; i ++ )",
        "if ( num <= k )",
        "if ( pri ( i ) != true )",
        "for ( i = 2 ; i * i <= num ; i ++ )"
      ],
      "err_line": 1,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        18,
        23,
        11
      ],
      "mod_code": [
        "for ( int i = 0 ; i <= a [ i ] ; i ++ )",
        "if ( num <= k )",
        "for ( i = 3 ; i < 1000 ; i += 2 )"
      ],
      "err_line": 11,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        18,
        23,
        11,
        1
      ],
      "mod_code": [
        "for ( int i = 0 ; i <= a [ i ] ; i ++ )",
        "if ( num <= k )",
        "for ( i = 3 ; i < 1000 ; i += 2 )",
        "for ( i = 2 ; i * i <= num ; i ++ )"
      ],
      "err_line": 1,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        18,
        23,
        1
      ],
      "mod_code": [
        "for ( int i = 0 ; i <= a [ i ] ; i ++ )",
        "if ( num <= k )",
        "for ( i = 2 ; i * i <= num ; i ++ )"
      ],
      "err_line": 1,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        18,
        12,
        11
      ],
      "mod_code": [
        "for ( int i = 0 ; i <= a [ i ] ; i ++ )",
        "if ( pri ( i ) != true )",
        "for ( i = 3 ; i < 1000 ; i += 2 )"
      ],
      "err_line": 11,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        18,
        12,
        11,
        1
      ],
      "mod_code": [
        "for ( int i = 0 ; i <= a [ i ] ; i ++ )",
        "if ( pri ( i ) != true )",
        "for ( i = 3 ; i < 1000 ; i += 2 )",
        "for ( i = 2 ; i * i <= num ; i ++ )"
      ],
      "err_line": 1,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        18,
        12,
        1
      ],
      "mod_code": [
        "for ( int i = 0 ; i <= a [ i ] ; i ++ )",
        "if ( pri ( i ) != true )",
        "for ( i = 2 ; i * i <= num ; i ++ )"
      ],
      "err_line": 1,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        18,
        11
      ],
      "mod_code": [
        "for ( int i = 0 ; i <= a [ i ] ; i ++ )",
        "for ( i = 3 ; i < 1000 ; i += 2 )"
      ],
      "err_line": 11,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        18,
        11,
        1
      ],
      "mod_code": [
        "for ( int i = 0 ; i <= a [ i ] ; i ++ )",
        "for ( i = 3 ; i < 1000 ; i += 2 )",
        "for ( i = 2 ; i * i <= num ; i ++ )"
      ],
      "err_line": 1,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        18,
        1
      ],
      "mod_code": [
        "for ( int i = 0 ; i <= a [ i ] ; i ++ )",
        "for ( i = 2 ; i * i <= num ; i ++ )"
      ],
      "err_line": 1,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        23
      ],
      "mod_code": [
        "if ( a [ j ] + a [ j + 1 ] + 1 == a [ i ] )",
        "if ( num <= k )"
      ],
      "err_line": 21,
      "err_msg": "expected primary-expression before ‘}’ token"
    },
    {
      "mod_line": [
        20,
        23,
        12
      ],
      "mod_code": [
        "if ( a [ j ] + a [ j + 1 ] + 1 == a [ i ] )",
        "if ( num <= k )",
        "if ( pri ( i ) != true )"
      ],
      "err_line": 21,
      "err_msg": "expected primary-expression before ‘}’ token"
    },
    {
      "mod_line": [
        20,
        23,
        12,
        11
      ],
      "mod_code": [
        "if ( a [ j ] + a [ j + 1 ] + 1 == a [ i ] )",
        "if ( num <= k )",
        "if ( pri ( i ) != true )",
        "for ( i = 3 ; i < 1000 ; i += 2 )"
      ],
      "err_line": 11,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        23,
        12,
        1
      ],
      "mod_code": [
        "if ( a [ j ] + a [ j + 1 ] + 1 == a [ i ] )",
        "if ( num <= k )",
        "if ( pri ( i ) != true )",
        "for ( i = 2 ; i * i <= num ; i ++ )"
      ],
      "err_line": 1,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        23,
        11
      ],
      "mod_code": [
        "if ( a [ j ] + a [ j + 1 ] + 1 == a [ i ] )",
        "if ( num <= k )",
        "for ( i = 3 ; i < 1000 ; i += 2 )"
      ],
      "err_line": 11,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        23,
        11,
        1
      ],
      "mod_code": [
        "if ( a [ j ] + a [ j + 1 ] + 1 == a [ i ] )",
        "if ( num <= k )",
        "for ( i = 3 ; i < 1000 ; i += 2 )",
        "for ( i = 2 ; i * i <= num ; i ++ )"
      ],
      "err_line": 1,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        23,
        1
      ],
      "mod_code": [
        "if ( a [ j ] + a [ j + 1 ] + 1 == a [ i ] )",
        "if ( num <= k )",
        "for ( i = 2 ; i * i <= num ; i ++ )"
      ],
      "err_line": 1,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        12
      ],
      "mod_code": [
        "if ( a [ j ] + a [ j + 1 ] + 1 == a [ i ] )",
        "if ( pri ( i ) != true )"
      ],
      "err_line": 21,
      "err_msg": "expected primary-expression before ‘}’ token"
    },
    {
      "mod_line": [
        20,
        12,
        11
      ],
      "mod_code": [
        "if ( a [ j ] + a [ j + 1 ] + 1 == a [ i ] )",
        "if ( pri ( i ) != true )",
        "for ( i = 3 ; i < 1000 ; i += 2 )"
      ],
      "err_line": 11,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        12,
        11,
        1
      ],
      "mod_code": [
        "if ( a [ j ] + a [ j + 1 ] + 1 == a [ i ] )",
        "if ( pri ( i ) != true )",
        "for ( i = 3 ; i < 1000 ; i += 2 )",
        "for ( i = 2 ; i * i <= num ; i ++ )"
      ],
      "err_line": 1,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        12,
        1
      ],
      "mod_code": [
        "if ( a [ j ] + a [ j + 1 ] + 1 == a [ i ] )",
        "if ( pri ( i ) != true )",
        "for ( i = 2 ; i * i <= num ; i ++ )"
      ],
      "err_line": 1,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        11
      ],
      "mod_code": [
        "if ( a [ j ] + a [ j + 1 ] + 1 == a [ i ] )",
        "for ( i = 3 ; i < 1000 ; i += 2 )"
      ],
      "err_line": 11,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        11,
        1
      ],
      "mod_code": [
        "if ( a [ j ] + a [ j + 1 ] + 1 == a [ i ] )",
        "for ( i = 3 ; i < 1000 ; i += 2 )",
        "for ( i = 2 ; i * i <= num ; i ++ )"
      ],
      "err_line": 1,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        1
      ],
      "mod_code": [
        "if ( a [ j ] + a [ j + 1 ] + 1 == a [ i ] )",
        "for ( i = 2 ; i * i <= num ; i ++ )"
      ],
      "err_line": 1,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        23,
        12,
        11
      ],
      "mod_code": [
        "if ( num <= k )",
        "if ( pri ( i ) != true )",
        "for ( i = 3 ; i < 1000 ; i += 2 )"
      ],
      "err_line": 11,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        23,
        12,
        11,
        1
      ],
      "mod_code": [
        "if ( num <= k )",
        "if ( pri ( i ) != true )",
        "for ( i = 3 ; i < 1000 ; i += 2 )",
        "for ( i = 2 ; i * i <= num ; i ++ )"
      ],
      "err_line": 1,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        23,
        12,
        1
      ],
      "mod_code": [
        "if ( num <= k )",
        "if ( pri ( i ) != true )",
        "for ( i = 2 ; i * i <= num ; i ++ )"
      ],
      "err_line": 1,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        23,
        11
      ],
      "mod_code": [
        "if ( num <= k )",
        "for ( i = 3 ; i < 1000 ; i += 2 )"
      ],
      "err_line": 11,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        23,
        11,
        1
      ],
      "mod_code": [
        "if ( num <= k )",
        "for ( i = 3 ; i < 1000 ; i += 2 )",
        "for ( i = 2 ; i * i <= num ; i ++ )"
      ],
      "err_line": 1,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        23,
        1
      ],
      "mod_code": [
        "if ( num <= k )",
        "for ( i = 2 ; i * i <= num ; i ++ )"
      ],
      "err_line": 1,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        12,
        11
      ],
      "mod_code": [
        "if ( pri ( i ) != true )",
        "for ( i = 3 ; i < 1000 ; i += 2 )"
      ],
      "err_line": 11,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        12,
        11,
        1
      ],
      "mod_code": [
        "if ( pri ( i ) != true )",
        "for ( i = 3 ; i < 1000 ; i += 2 )",
        "for ( i = 2 ; i * i <= num ; i ++ )"
      ],
      "err_line": 1,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        12,
        1
      ],
      "mod_code": [
        "if ( pri ( i ) != true )",
        "for ( i = 2 ; i * i <= num ; i ++ )"
      ],
      "err_line": 1,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        11,
        1
      ],
      "mod_code": [
        "for ( i = 3 ; i < 1000 ; i += 2 )",
        "for ( i = 2 ; i * i <= num ; i ++ )"
      ],
      "err_line": 1,
      "err_msg": "‘i’ was not declared in this scope"
    }
  ]
}