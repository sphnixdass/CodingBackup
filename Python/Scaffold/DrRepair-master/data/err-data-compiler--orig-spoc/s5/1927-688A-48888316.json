{
  "meta": {
    "index": 1927,
    "hitid": "36GJS3V78VK9OFBLREELUPPERTIJG5",
    "workerid": "AIWEXPJAU66D9",
    "probid": "688A",
    "subid": "48888316"
  },
  "lines": [
    {
      "line": 0,
      "text": "let value be integer array with size 1001",
      "code": "int value [ 1001 ] = { 0 } ;",
      "indent": 0
    },
    {
      "line": 1,
      "text": "declare 2d char array num with size 1001 by 1001",
      "code": "char num [ 1001 ] [ 1001 ] ;",
      "indent": 0
    },
    {
      "line": 2,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 3,
      "text": "declare integers n , d , index , sum and max where index = 0 and sum = 1",
      "code": "int n , d , index = 0 , sum = 1 , max ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "read n and d",
      "code": "cin >> n >> d ;",
      "indent": 1
    },
    {
      "line": 5,
      "text": "read character from input",
      "code": "getchar ( ) ;",
      "indent": 1
    },
    {
      "line": 6,
      "text": "loop i from 0 to d exclusive",
      "code": "for ( int i = 0 ; i < d ; i ++ )",
      "indent": 1
    },
    {
      "line": 7,
      "text": "loop j from 0 to n exclusive , read num [ i ] [ j ]",
      "code": "for ( int j = 0 ; j < n ; j ++ ) cin >> num [ i ] [ j ] ;",
      "indent": 2
    },
    {
      "line": 8,
      "text": "read character from input",
      "code": "getchar ( ) ;",
      "indent": 2
    },
    {
      "line": 9,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 10,
      "text": "loop i from 0 to d exclusive",
      "code": "for ( int i = 0 ; i < d ; i ++ )",
      "indent": 1
    },
    {
      "line": 11,
      "text": "for j from 0 to n exclusive",
      "code": "for ( int j = 0 ; j < n ; j ++ )",
      "indent": 2
    },
    {
      "line": 12,
      "text": "if num [ i ] [ j ] = ' 0 '",
      "code": "if ( num [ i ] [ j ] == ' 0 ' )",
      "indent": 3
    },
    {
      "line": 13,
      "text": "set value [ index ] to i and increment index",
      "code": "value [ index ++ ] = i ;",
      "indent": 4
    },
    {
      "line": 14,
      "text": "break",
      "code": "break ;",
      "indent": 4
    },
    {
      "line": 15,
      "text": "DUMMY",
      "code": "}",
      "indent": 3
    },
    {
      "line": 16,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 17,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 18,
      "text": "if index = 0",
      "code": "if ( index == 0 )",
      "indent": 1
    },
    {
      "line": 19,
      "text": "set max to 0",
      "code": "max = 0 ;",
      "indent": 2
    },
    {
      "line": 20,
      "text": "else",
      "code": "else",
      "indent": 1
    },
    {
      "line": 21,
      "text": "assign 1 to max",
      "code": "max = 1 ;",
      "indent": 2
    },
    {
      "line": 22,
      "text": "for integer i = 1 to index exclusive",
      "code": "for ( int i = 1 ; i < index ; i ++ )",
      "indent": 2
    },
    {
      "line": 23,
      "text": "while value [ i ] - value [ i - 1 ] = 1",
      "code": "while ( value [ i ] - value [ i - 1 ] == 1 )",
      "indent": 3
    },
    {
      "line": 24,
      "text": "increment sum by one",
      "code": "sum ++ ;",
      "indent": 4
    },
    {
      "line": 25,
      "text": "increment i",
      "code": "i ++ ;",
      "indent": 4
    },
    {
      "line": 26,
      "text": "DUMMY",
      "code": "}",
      "indent": 3
    },
    {
      "line": 27,
      "text": "set max to sum if sum > max",
      "code": "max = sum > max ? sum : max ;",
      "indent": 3
    },
    {
      "line": 28,
      "text": "change sum to 1",
      "code": "sum = 1 ;",
      "indent": 3
    },
    {
      "line": 29,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 30,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 31,
      "text": "print max",
      "code": "cout << max << endl ;",
      "indent": 1
    },
    {
      "line": 32,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        0
      ],
      "mod_code": [
        "int a [ 1001 ] ;"
      ],
      "err_line": 13,
      "err_msg": "‘value’ was not declared in this scope"
    },
    {
      "mod_line": [
        6
      ],
      "mod_code": [
        "for ( i = 0 ; i < d ; i ++ )"
      ],
      "err_line": 6,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        7
      ],
      "mod_code": [
        "for ( j = 0 ; j < n ; j ++ ) { cin >> num [ i ] [ j ] ; }"
      ],
      "err_line": 7,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        10
      ],
      "mod_code": [
        "for ( i = 0 ; i < d ; i ++ )"
      ],
      "err_line": 10,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        11
      ],
      "mod_code": [
        "for ( j = 0 ; j < n ; j ++ )"
      ],
      "err_line": 11,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        13
      ],
      "mod_code": [
        "value [ ++ index ++ ] = i ;"
      ],
      "err_line": 13,
      "err_msg": "lvalue required as increment operand"
    },
    {
      "mod_line": [
        14
      ],
      "mod_code": [
        "break break ;"
      ],
      "err_line": 14,
      "err_msg": "expected ‘;’ before ‘break’"
    },
    {
      "mod_line": [
        23
      ],
      "mod_code": [
        "while ( value [ i ] - ' i ' ] == 1 )"
      ],
      "err_line": 23,
      "err_msg": "expected ‘)’ before ‘]’ token"
    },
    {
      "mod_line": [
        3,
        0
      ],
      "mod_code": [
        "int n , d , index , sum = 0 , max = 1 ;",
        "int a [ 1001 ] ;"
      ],
      "err_line": 13,
      "err_msg": "‘value’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        0,
        10
      ],
      "mod_code": [
        "int n , d , index , sum = 0 , max = 1 ;",
        "int a [ 1001 ] ;",
        "for ( i = 0 ; i < d ; i ++ )"
      ],
      "err_line": 10,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        3,
        0,
        10,
        13
      ],
      "mod_code": [
        "int n , d , index , sum = 0 , max = 1 ;",
        "int a [ 1001 ] ;",
        "for ( i = 0 ; i < d ; i ++ )",
        "value [ ++ index ++ ] = i ;"
      ],
      "err_line": 10,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        3,
        0,
        10,
        11
      ],
      "mod_code": [
        "int n , d , index , sum = 0 , max = 1 ;",
        "int a [ 1001 ] ;",
        "for ( i = 0 ; i < d ; i ++ )",
        "for ( j = 0 ; j < n ; j ++ )"
      ],
      "err_line": 10,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        3,
        0,
        10,
        14
      ],
      "mod_code": [
        "int n , d , index , sum = 0 , max = 1 ;",
        "int a [ 1001 ] ;",
        "for ( i = 0 ; i < d ; i ++ )",
        "break break ;"
      ],
      "err_line": 10,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        3,
        0,
        13
      ],
      "mod_code": [
        "int n , d , index , sum = 0 , max = 1 ;",
        "int a [ 1001 ] ;",
        "value [ ++ index ++ ] = i ;"
      ],
      "err_line": 13,
      "err_msg": "‘value’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        0,
        13,
        11
      ],
      "mod_code": [
        "int n , d , index , sum = 0 , max = 1 ;",
        "int a [ 1001 ] ;",
        "value [ ++ index ++ ] = i ;",
        "for ( j = 0 ; j < n ; j ++ )"
      ],
      "err_line": 11,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        0,
        13,
        14
      ],
      "mod_code": [
        "int n , d , index , sum = 0 , max = 1 ;",
        "int a [ 1001 ] ;",
        "value [ ++ index ++ ] = i ;",
        "break break ;"
      ],
      "err_line": 13,
      "err_msg": "‘value’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        0,
        11
      ],
      "mod_code": [
        "int n , d , index , sum = 0 , max = 1 ;",
        "int a [ 1001 ] ;",
        "for ( j = 0 ; j < n ; j ++ )"
      ],
      "err_line": 11,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        0,
        11,
        14
      ],
      "mod_code": [
        "int n , d , index , sum = 0 , max = 1 ;",
        "int a [ 1001 ] ;",
        "for ( j = 0 ; j < n ; j ++ )",
        "break break ;"
      ],
      "err_line": 11,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        0,
        14
      ],
      "mod_code": [
        "int n , d , index , sum = 0 , max = 1 ;",
        "int a [ 1001 ] ;",
        "break break ;"
      ],
      "err_line": 13,
      "err_msg": "‘value’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        10
      ],
      "mod_code": [
        "int n , d , index , sum = 0 , max = 1 ;",
        "for ( i = 0 ; i < d ; i ++ )"
      ],
      "err_line": 10,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        3,
        10,
        13
      ],
      "mod_code": [
        "int n , d , index , sum = 0 , max = 1 ;",
        "for ( i = 0 ; i < d ; i ++ )",
        "value [ ++ index ++ ] = i ;"
      ],
      "err_line": 10,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        3,
        10,
        13,
        11
      ],
      "mod_code": [
        "int n , d , index , sum = 0 , max = 1 ;",
        "for ( i = 0 ; i < d ; i ++ )",
        "value [ ++ index ++ ] = i ;",
        "for ( j = 0 ; j < n ; j ++ )"
      ],
      "err_line": 10,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        3,
        10,
        13,
        14
      ],
      "mod_code": [
        "int n , d , index , sum = 0 , max = 1 ;",
        "for ( i = 0 ; i < d ; i ++ )",
        "value [ ++ index ++ ] = i ;",
        "break break ;"
      ],
      "err_line": 10,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        3,
        10,
        11
      ],
      "mod_code": [
        "int n , d , index , sum = 0 , max = 1 ;",
        "for ( i = 0 ; i < d ; i ++ )",
        "for ( j = 0 ; j < n ; j ++ )"
      ],
      "err_line": 10,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        3,
        10,
        11,
        14
      ],
      "mod_code": [
        "int n , d , index , sum = 0 , max = 1 ;",
        "for ( i = 0 ; i < d ; i ++ )",
        "for ( j = 0 ; j < n ; j ++ )",
        "break break ;"
      ],
      "err_line": 10,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        3,
        10,
        14
      ],
      "mod_code": [
        "int n , d , index , sum = 0 , max = 1 ;",
        "for ( i = 0 ; i < d ; i ++ )",
        "break break ;"
      ],
      "err_line": 10,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        3,
        13
      ],
      "mod_code": [
        "int n , d , index , sum = 0 , max = 1 ;",
        "value [ ++ index ++ ] = i ;"
      ],
      "err_line": 13,
      "err_msg": "lvalue required as increment operand"
    },
    {
      "mod_line": [
        3,
        13,
        11
      ],
      "mod_code": [
        "int n , d , index , sum = 0 , max = 1 ;",
        "value [ ++ index ++ ] = i ;",
        "for ( j = 0 ; j < n ; j ++ )"
      ],
      "err_line": 11,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        13,
        11,
        14
      ],
      "mod_code": [
        "int n , d , index , sum = 0 , max = 1 ;",
        "value [ ++ index ++ ] = i ;",
        "for ( j = 0 ; j < n ; j ++ )",
        "break break ;"
      ],
      "err_line": 11,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        13,
        14
      ],
      "mod_code": [
        "int n , d , index , sum = 0 , max = 1 ;",
        "value [ ++ index ++ ] = i ;",
        "break break ;"
      ],
      "err_line": 13,
      "err_msg": "lvalue required as increment operand"
    },
    {
      "mod_line": [
        3,
        11
      ],
      "mod_code": [
        "int n , d , index , sum = 0 , max = 1 ;",
        "for ( j = 0 ; j < n ; j ++ )"
      ],
      "err_line": 11,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        11,
        14
      ],
      "mod_code": [
        "int n , d , index , sum = 0 , max = 1 ;",
        "for ( j = 0 ; j < n ; j ++ )",
        "break break ;"
      ],
      "err_line": 11,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        14
      ],
      "mod_code": [
        "int n , d , index , sum = 0 , max = 1 ;",
        "break break ;"
      ],
      "err_line": 14,
      "err_msg": "expected ‘;’ before ‘break’"
    },
    {
      "mod_line": [
        0,
        10
      ],
      "mod_code": [
        "int a [ 1001 ] ;",
        "for ( i = 0 ; i < d ; i ++ )"
      ],
      "err_line": 10,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        0,
        10,
        13
      ],
      "mod_code": [
        "int a [ 1001 ] ;",
        "for ( i = 0 ; i < d ; i ++ )",
        "value [ ++ index ++ ] = i ;"
      ],
      "err_line": 10,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        0,
        10,
        13,
        11
      ],
      "mod_code": [
        "int a [ 1001 ] ;",
        "for ( i = 0 ; i < d ; i ++ )",
        "value [ ++ index ++ ] = i ;",
        "for ( j = 0 ; j < n ; j ++ )"
      ],
      "err_line": 10,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        0,
        10,
        13,
        14
      ],
      "mod_code": [
        "int a [ 1001 ] ;",
        "for ( i = 0 ; i < d ; i ++ )",
        "value [ ++ index ++ ] = i ;",
        "break break ;"
      ],
      "err_line": 10,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        0,
        10,
        11
      ],
      "mod_code": [
        "int a [ 1001 ] ;",
        "for ( i = 0 ; i < d ; i ++ )",
        "for ( j = 0 ; j < n ; j ++ )"
      ],
      "err_line": 10,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        0,
        10,
        11,
        14
      ],
      "mod_code": [
        "int a [ 1001 ] ;",
        "for ( i = 0 ; i < d ; i ++ )",
        "for ( j = 0 ; j < n ; j ++ )",
        "break break ;"
      ],
      "err_line": 10,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        0,
        10,
        14
      ],
      "mod_code": [
        "int a [ 1001 ] ;",
        "for ( i = 0 ; i < d ; i ++ )",
        "break break ;"
      ],
      "err_line": 10,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        0,
        13
      ],
      "mod_code": [
        "int a [ 1001 ] ;",
        "value [ ++ index ++ ] = i ;"
      ],
      "err_line": 13,
      "err_msg": "‘value’ was not declared in this scope"
    },
    {
      "mod_line": [
        0,
        13,
        11
      ],
      "mod_code": [
        "int a [ 1001 ] ;",
        "value [ ++ index ++ ] = i ;",
        "for ( j = 0 ; j < n ; j ++ )"
      ],
      "err_line": 11,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        0,
        13,
        11,
        14
      ],
      "mod_code": [
        "int a [ 1001 ] ;",
        "value [ ++ index ++ ] = i ;",
        "for ( j = 0 ; j < n ; j ++ )",
        "break break ;"
      ],
      "err_line": 11,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        0,
        13,
        14
      ],
      "mod_code": [
        "int a [ 1001 ] ;",
        "value [ ++ index ++ ] = i ;",
        "break break ;"
      ],
      "err_line": 13,
      "err_msg": "‘value’ was not declared in this scope"
    },
    {
      "mod_line": [
        0,
        11
      ],
      "mod_code": [
        "int a [ 1001 ] ;",
        "for ( j = 0 ; j < n ; j ++ )"
      ],
      "err_line": 11,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        0,
        11,
        14
      ],
      "mod_code": [
        "int a [ 1001 ] ;",
        "for ( j = 0 ; j < n ; j ++ )",
        "break break ;"
      ],
      "err_line": 11,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        0,
        14
      ],
      "mod_code": [
        "int a [ 1001 ] ;",
        "break break ;"
      ],
      "err_line": 13,
      "err_msg": "‘value’ was not declared in this scope"
    },
    {
      "mod_line": [
        10,
        13
      ],
      "mod_code": [
        "for ( i = 0 ; i < d ; i ++ )",
        "value [ ++ index ++ ] = i ;"
      ],
      "err_line": 10,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        10,
        13,
        11
      ],
      "mod_code": [
        "for ( i = 0 ; i < d ; i ++ )",
        "value [ ++ index ++ ] = i ;",
        "for ( j = 0 ; j < n ; j ++ )"
      ],
      "err_line": 10,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        10,
        13,
        11,
        14
      ],
      "mod_code": [
        "for ( i = 0 ; i < d ; i ++ )",
        "value [ ++ index ++ ] = i ;",
        "for ( j = 0 ; j < n ; j ++ )",
        "break break ;"
      ],
      "err_line": 10,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        10,
        13,
        14
      ],
      "mod_code": [
        "for ( i = 0 ; i < d ; i ++ )",
        "value [ ++ index ++ ] = i ;",
        "break break ;"
      ],
      "err_line": 10,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        10,
        11
      ],
      "mod_code": [
        "for ( i = 0 ; i < d ; i ++ )",
        "for ( j = 0 ; j < n ; j ++ )"
      ],
      "err_line": 10,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        10,
        11,
        14
      ],
      "mod_code": [
        "for ( i = 0 ; i < d ; i ++ )",
        "for ( j = 0 ; j < n ; j ++ )",
        "break break ;"
      ],
      "err_line": 10,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        10,
        14
      ],
      "mod_code": [
        "for ( i = 0 ; i < d ; i ++ )",
        "break break ;"
      ],
      "err_line": 10,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        13,
        11
      ],
      "mod_code": [
        "value [ ++ index ++ ] = i ;",
        "for ( j = 0 ; j < n ; j ++ )"
      ],
      "err_line": 11,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        11,
        14
      ],
      "mod_code": [
        "value [ ++ index ++ ] = i ;",
        "for ( j = 0 ; j < n ; j ++ )",
        "break break ;"
      ],
      "err_line": 11,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        14
      ],
      "mod_code": [
        "value [ ++ index ++ ] = i ;",
        "break break ;"
      ],
      "err_line": 13,
      "err_msg": "lvalue required as increment operand"
    },
    {
      "mod_line": [
        11,
        14
      ],
      "mod_code": [
        "for ( j = 0 ; j < n ; j ++ )",
        "break break ;"
      ],
      "err_line": 11,
      "err_msg": "‘j’ was not declared in this scope"
    }
  ]
}