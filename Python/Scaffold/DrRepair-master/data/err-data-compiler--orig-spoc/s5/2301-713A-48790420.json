{
  "meta": {
    "index": 2301,
    "hitid": "39O0SQZVJN17TAJX6GJ0Q3YC27Y7RN",
    "workerid": "AIWEXPJAU66D9",
    "probid": "713A",
    "subid": "48790420"
  },
  "lines": [
    {
      "line": 0,
      "text": "tran is a function with string argument s , and return type = vector of ints",
      "code": "vector < int > tran ( string s )",
      "indent": 0
    },
    {
      "line": 1,
      "text": "declare vector of integers res with 18 elements , filled with 0",
      "code": "vector < int > res ( 18 , 0 ) ;",
      "indent": 1
    },
    {
      "line": 2,
      "text": "create new integer i = 1",
      "code": "int i = 1 ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "while length of s - i > = 0",
      "code": "while ( ( int ) s . size ( ) - i >= 0 )",
      "indent": 1
    },
    {
      "line": 4,
      "text": "change res [ 18 - i ] to ( s [ length of s - i ] - ' 0 ' ) % 2",
      "code": "res [ 18 - i ] = ( s [ s . size ( ) - i ] - ' 0 ' ) % 2 ;",
      "indent": 2
    },
    {
      "line": 5,
      "text": "increment i",
      "code": "i ++ ;",
      "indent": 2
    },
    {
      "line": 6,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 7,
      "text": "return res",
      "code": "return res ;",
      "indent": 1
    },
    {
      "line": 8,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    },
    {
      "line": 9,
      "text": "judge is a bool function with integer vector arguments num and temp",
      "code": "bool judge ( vector < int > num , vector < int > temp )",
      "indent": 0
    },
    {
      "line": 10,
      "text": "for i from 17 to 0 inclusive counting down",
      "code": "for ( int i = 17 ; i >= 0 ; i -- )",
      "indent": 1
    },
    {
      "line": 11,
      "text": "return false if i - th element of num ! = i - th element of temp",
      "code": "if ( num [ i ] != temp [ i ] ) return false ;",
      "indent": 2
    },
    {
      "line": 12,
      "text": "return true",
      "code": "return true ;",
      "indent": 1
    },
    {
      "line": 13,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    },
    {
      "line": 14,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 15,
      "text": "biao is a new map of int vectors to integers",
      "code": "map < vector < int > , int > biao ;",
      "indent": 1
    },
    {
      "line": 16,
      "text": "create new integer called t",
      "code": "int t ;",
      "indent": 1
    },
    {
      "line": 17,
      "text": "read t",
      "code": "cin >> t ;",
      "indent": 1
    },
    {
      "line": 18,
      "text": "in a for loop , change i from 0 to t exclusive",
      "code": "for ( int i = 0 ; i < t ; i ++ )",
      "indent": 1
    },
    {
      "line": 19,
      "text": "define new character variable op",
      "code": "char op ;",
      "indent": 2
    },
    {
      "line": 20,
      "text": "read standard input to op",
      "code": "cin >> op ;",
      "indent": 2
    },
    {
      "line": 21,
      "text": "if op is ' + '",
      "code": "if ( op == ' + ' )",
      "indent": 2
    },
    {
      "line": 22,
      "text": "define string variable s",
      "code": "string s ;",
      "indent": 3
    },
    {
      "line": 23,
      "text": "read user input to s",
      "code": "cin >> s ;",
      "indent": 3
    },
    {
      "line": 24,
      "text": "declare vector of integers called num",
      "code": "vector < int > num ;",
      "indent": 3
    },
    {
      "line": 25,
      "text": "assign the new value = tran of s to num",
      "code": "num = tran ( s ) ;",
      "indent": 3
    },
    {
      "line": 26,
      "text": "increment biao [ num ]",
      "code": "biao [ num ] ++ ;",
      "indent": 3
    },
    {
      "line": 27,
      "text": "else if op = ' - '",
      "code": "else if ( op == ' - ' )",
      "indent": 2
    },
    {
      "line": 28,
      "text": "define new string called s",
      "code": "string s ;",
      "indent": 3
    },
    {
      "line": 29,
      "text": "read s from the user input",
      "code": "cin >> s ;",
      "indent": 3
    },
    {
      "line": 30,
      "text": "create vector of integers num",
      "code": "vector < int > num ;",
      "indent": 3
    },
    {
      "line": 31,
      "text": "change the value of num to the resulf of tran ( s )",
      "code": "num = tran ( s ) ;",
      "indent": 3
    },
    {
      "line": 32,
      "text": "decrement biao [ num ] by one",
      "code": "biao [ num ] -- ;",
      "indent": 3
    },
    {
      "line": 33,
      "text": "if biao [ num ] = 0 , remove num from biao",
      "code": "if ( biao [ num ] == 0 ) { biao . erase ( num ) ; }",
      "indent": 3
    },
    {
      "line": 34,
      "text": "else if op is equal to ' ? '",
      "code": "else if ( op == ' ? ' )",
      "indent": 2
    },
    {
      "line": 35,
      "text": "create new string s",
      "code": "string s ;",
      "indent": 3
    },
    {
      "line": 36,
      "text": "read from the input to s",
      "code": "cin >> s ;",
      "indent": 3
    },
    {
      "line": 37,
      "text": "create vector of integers num",
      "code": "vector < int > num = tran ( s ) ;",
      "indent": 3
    },
    {
      "line": 38,
      "text": "create new map iterator it for a map of int vectors to integers",
      "code": "map < vector < int > , int > :: iterator it ;",
      "indent": 3
    },
    {
      "line": 39,
      "text": "set it to the start of biao",
      "code": "it = biao . begin ( ) ;",
      "indent": 3
    },
    {
      "line": 40,
      "text": "declare new integer res = biao [ num ]",
      "code": "int res = biao [ num ] ;",
      "indent": 3
    },
    {
      "line": 41,
      "text": "print res",
      "code": "cout << res << endl ;",
      "indent": 3
    },
    {
      "line": 42,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 43,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 44,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        0
      ],
      "mod_code": [
        "vector < string > tran ( s , type ) ;"
      ],
      "err_line": 0,
      "err_msg": "‘s’ was not declared in this scope"
    },
    {
      "mod_line": [
        9
      ],
      "mod_code": [
        "bool judge ( vector < int > num , int temp )"
      ],
      "err_line": 11,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        11
      ],
      "mod_code": [
        "return ( num [ i ] [ i ] ) ;"
      ],
      "err_line": 11,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        15
      ],
      "mod_code": [
        "vector < int , int > biao ;"
      ],
      "err_line": 26,
      "err_msg": "no match for ‘operator[]’ (operand types are ‘std::vector<int, int>’ and ‘std::vector<int>’)"
    },
    {
      "mod_line": [
        33
      ],
      "mod_code": [
        "if ( biao [ num ] == 0 ) num . erase ( num ) ;"
      ],
      "err_line": 33,
      "err_msg": "no matching function for call to ‘std::vector<int>::erase(std::vector<int>&)’"
    },
    {
      "mod_line": [
        38
      ],
      "mod_code": [
        "map < int , int > :: iterator it ;"
      ],
      "err_line": 39,
      "err_msg": "no match for ‘operator=’ (operand types are ‘std::map<int, int>::iterator {aka std::_Rb_tree_iterator<std::pair<const int, int> >}’ and ‘std::map<std::vector<int>, int>::iterator {aka std::_Rb_tree_iterator<std::pair<const std::vector<int>, int> >}’)"
    },
    {
      "mod_line": [
        39
      ],
      "mod_code": [
        "it = biao ( it ) ;"
      ],
      "err_line": 39,
      "err_msg": "no match for call to ‘(std::map<std::vector<int>, int>) (std::map<std::vector<int>, int>::iterator&)’"
    },
    {
      "mod_line": [
        0
      ],
      "mod_code": [
        "vector < string > tran ( s , s ) ;"
      ],
      "err_line": 0,
      "err_msg": "‘s’ was not declared in this scope"
    },
    {
      "mod_line": [
        9
      ],
      "mod_code": [
        "bool judge ( vector < int > & num , int temp )"
      ],
      "err_line": 11,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        10
      ],
      "mod_code": [
        "for ( i = 17 ; i >= 0 ; i -- )"
      ],
      "err_line": 10,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        11
      ],
      "mod_code": [
        "return num [ i ] [ i ] ;"
      ],
      "err_line": 11,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        15
      ],
      "mod_code": [
        "vector < char , int > biao ;"
      ],
      "err_line": 26,
      "err_msg": "no match for ‘operator[]’ (operand types are ‘std::vector<char, int>’ and ‘std::vector<int>’)"
    },
    {
      "mod_line": [
        16
      ],
      "mod_code": [
        "int n ;"
      ],
      "err_line": 17,
      "err_msg": "‘t’ was not declared in this scope"
    },
    {
      "mod_line": [
        17
      ],
      "mod_code": [
        "cin . get ( t ) ;"
      ],
      "err_line": 17,
      "err_msg": "invalid initialization of non-const reference of type ‘std::basic_istream<char>::char_type& {aka char&}’ from an rvalue of type ‘std::basic_istream<char>::char_type {aka char}’"
    },
    {
      "mod_line": [
        18
      ],
      "mod_code": [
        "for ( i = 0 ; i < t ; i ++ )"
      ],
      "err_line": 18,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        19
      ],
      "mod_code": [
        "char op [ 8 ] [ 8 ] ;"
      ],
      "err_line": 20,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘char [8][8]’)"
    },
    {
      "mod_line": [
        21
      ],
      "mod_code": [
        "if ( op == ' + ' ) break ;"
      ],
      "err_line": 27,
      "err_msg": "‘else’ without a previous ‘if’"
    },
    {
      "mod_line": [
        22
      ],
      "mod_code": [
        "string n ;"
      ],
      "err_line": 23,
      "err_msg": "‘s’ was not declared in this scope"
    },
    {
      "mod_line": [
        23
      ],
      "mod_code": [
        "cin >> n ;"
      ],
      "err_line": 23,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        24
      ],
      "mod_code": [
        "vector < int > :: num ;"
      ],
      "err_line": 24,
      "err_msg": "‘num’ is not a member of ‘std::vector<int>’"
    },
    {
      "mod_line": [
        25
      ],
      "mod_code": [
        "num = s . tran ( ) ;"
      ],
      "err_line": 25,
      "err_msg": "‘std::__cxx11::string {aka class std::__cxx11::basic_string<char>}’ has no member named ‘tran’"
    },
    {
      "mod_line": [
        26
      ],
      "mod_code": [
        "biao [ num ++ ] ++ ;"
      ],
      "err_line": 26,
      "err_msg": "no ‘operator++(int)’ declared for postfix ‘++’ [-fpermissive]"
    },
    {
      "mod_line": [
        28
      ],
      "mod_code": [
        "vector < string > s ;"
      ],
      "err_line": 29,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘std::vector<std::__cxx11::basic_string<char> >’)"
    },
    {
      "mod_line": [
        29
      ],
      "mod_code": [
        "int s ;"
      ],
      "err_line": 29,
      "err_msg": "conflicting declaration ‘int s’"
    },
    {
      "mod_line": [
        30
      ],
      "mod_code": [
        "vector < long long > num ;"
      ],
      "err_line": 31,
      "err_msg": "no match for ‘operator=’ (operand types are ‘std::vector<long long int>’ and ‘std::vector<int>’)"
    },
    {
      "mod_line": [
        31
      ],
      "mod_code": [
        "num *= tran ;"
      ],
      "err_line": 31,
      "err_msg": "no match for ‘operator*=’ (operand types are ‘std::vector<int>’ and ‘std::vector<int>(std::__cxx11::string) {aka std::vector<int>(std::__cxx11::basic_string<char>)}’)"
    },
    {
      "mod_line": [
        32
      ],
      "mod_code": [
        "biao [ num ] -= one ;"
      ],
      "err_line": 32,
      "err_msg": "‘one’ was not declared in this scope"
    },
    {
      "mod_line": [
        33
      ],
      "mod_code": [
        "if ( biao [ num ] == 0 ) { num . erase ( num ) ; }"
      ],
      "err_line": 33,
      "err_msg": "no matching function for call to ‘std::vector<int>::erase(std::vector<int>&)’"
    },
    {
      "mod_line": [
        34
      ],
      "mod_code": [
        "else if ( op == ' ? ' ) ' ;"
      ],
      "err_line": 34,
      "err_msg": "missing terminating ' character"
    },
    {
      "mod_line": [
        35
      ],
      "mod_code": [
        "string n ;"
      ],
      "err_line": 36,
      "err_msg": "‘s’ was not declared in this scope"
    },
    {
      "mod_line": [
        36
      ],
      "mod_code": [
        "s >> s ;"
      ],
      "err_line": 36,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        37
      ],
      "mod_code": [
        "vector < long long > num ;"
      ],
      "err_line": 40,
      "err_msg": "no match for ‘operator[]’ (operand types are ‘std::map<std::vector<int>, int>’ and ‘std::vector<long long int>’)"
    },
    {
      "mod_line": [
        38
      ],
      "mod_code": [
        "map < int , int > :: iterator itr ;"
      ],
      "err_line": 39,
      "err_msg": "‘it’ was not declared in this scope"
    },
    {
      "mod_line": [
        39
      ],
      "mod_code": [
        "it = 1 ;"
      ],
      "err_line": 39,
      "err_msg": "no match for ‘operator=’ (operand types are ‘std::map<std::vector<int>, int>::iterator {aka std::_Rb_tree_iterator<std::pair<const std::vector<int>, int> >}’ and ‘int’)"
    },
    {
      "mod_line": [
        40
      ],
      "mod_code": [
        "int res = biao [ num ++ ] ;"
      ],
      "err_line": 40,
      "err_msg": "no ‘operator++(int)’ declared for postfix ‘++’ [-fpermissive]"
    },
    {
      "mod_line": [
        0,
        3
      ],
      "mod_code": [
        "vector < string > tran ( s , type ) ;",
        "while ( s . length ( ) - i >= 0 )"
      ],
      "err_line": 0,
      "err_msg": "‘s’ was not declared in this scope"
    },
    {
      "mod_line": [
        0,
        3,
        9
      ],
      "mod_code": [
        "vector < string > tran ( s , type ) ;",
        "while ( s . length ( ) - i >= 0 )",
        "bool judge ( vector < int > num , int temp )"
      ],
      "err_line": 0,
      "err_msg": "‘s’ was not declared in this scope"
    },
    {
      "mod_line": [
        0,
        3,
        9,
        11
      ],
      "mod_code": [
        "vector < string > tran ( s , type ) ;",
        "while ( s . length ( ) - i >= 0 )",
        "bool judge ( vector < int > num , int temp )",
        "return ( num [ i ] [ i ] ) ;"
      ],
      "err_line": 0,
      "err_msg": "‘s’ was not declared in this scope"
    },
    {
      "mod_line": [
        0,
        3,
        9,
        15
      ],
      "mod_code": [
        "vector < string > tran ( s , type ) ;",
        "while ( s . length ( ) - i >= 0 )",
        "bool judge ( vector < int > num , int temp )",
        "vector < int , int > biao ;"
      ],
      "err_line": 0,
      "err_msg": "‘s’ was not declared in this scope"
    },
    {
      "mod_line": [
        0,
        3,
        9,
        33
      ],
      "mod_code": [
        "vector < string > tran ( s , type ) ;",
        "while ( s . length ( ) - i >= 0 )",
        "bool judge ( vector < int > num , int temp )",
        "if ( biao [ num ] == 0 ) num . erase ( num ) ;"
      ],
      "err_line": 0,
      "err_msg": "‘s’ was not declared in this scope"
    },
    {
      "mod_line": [
        0,
        3,
        9,
        37
      ],
      "mod_code": [
        "vector < string > tran ( s , type ) ;",
        "while ( s . length ( ) - i >= 0 )",
        "bool judge ( vector < int > num , int temp )",
        "vector < int > num ;"
      ],
      "err_line": 0,
      "err_msg": "‘s’ was not declared in this scope"
    },
    {
      "mod_line": [
        0,
        3,
        9,
        38
      ],
      "mod_code": [
        "vector < string > tran ( s , type ) ;",
        "while ( s . length ( ) - i >= 0 )",
        "bool judge ( vector < int > num , int temp )",
        "map < int , int > :: iterator it ;"
      ],
      "err_line": 0,
      "err_msg": "‘s’ was not declared in this scope"
    },
    {
      "mod_line": [
        0,
        3,
        9,
        39
      ],
      "mod_code": [
        "vector < string > tran ( s , type ) ;",
        "while ( s . length ( ) - i >= 0 )",
        "bool judge ( vector < int > num , int temp )",
        "it = biao ( it ) ;"
      ],
      "err_line": 0,
      "err_msg": "‘s’ was not declared in this scope"
    },
    {
      "mod_line": [
        0,
        3,
        11
      ],
      "mod_code": [
        "vector < string > tran ( s , type ) ;",
        "while ( s . length ( ) - i >= 0 )",
        "return ( num [ i ] [ i ] ) ;"
      ],
      "err_line": 0,
      "err_msg": "‘s’ was not declared in this scope"
    },
    {
      "mod_line": [
        0,
        3,
        11,
        15
      ],
      "mod_code": [
        "vector < string > tran ( s , type ) ;",
        "while ( s . length ( ) - i >= 0 )",
        "return ( num [ i ] [ i ] ) ;",
        "vector < int , int > biao ;"
      ],
      "err_line": 0,
      "err_msg": "‘s’ was not declared in this scope"
    },
    {
      "mod_line": [
        0,
        3,
        11,
        33
      ],
      "mod_code": [
        "vector < string > tran ( s , type ) ;",
        "while ( s . length ( ) - i >= 0 )",
        "return ( num [ i ] [ i ] ) ;",
        "if ( biao [ num ] == 0 ) num . erase ( num ) ;"
      ],
      "err_line": 0,
      "err_msg": "‘s’ was not declared in this scope"
    },
    {
      "mod_line": [
        0,
        3,
        11,
        37
      ],
      "mod_code": [
        "vector < string > tran ( s , type ) ;",
        "while ( s . length ( ) - i >= 0 )",
        "return ( num [ i ] [ i ] ) ;",
        "vector < int > num ;"
      ],
      "err_line": 0,
      "err_msg": "‘s’ was not declared in this scope"
    },
    {
      "mod_line": [
        0,
        3,
        11,
        38
      ],
      "mod_code": [
        "vector < string > tran ( s , type ) ;",
        "while ( s . length ( ) - i >= 0 )",
        "return ( num [ i ] [ i ] ) ;",
        "map < int , int > :: iterator it ;"
      ],
      "err_line": 0,
      "err_msg": "‘s’ was not declared in this scope"
    },
    {
      "mod_line": [
        0,
        3,
        11,
        39
      ],
      "mod_code": [
        "vector < string > tran ( s , type ) ;",
        "while ( s . length ( ) - i >= 0 )",
        "return ( num [ i ] [ i ] ) ;",
        "it = biao ( it ) ;"
      ],
      "err_line": 0,
      "err_msg": "‘s’ was not declared in this scope"
    },
    {
      "mod_line": [
        0,
        3,
        15
      ],
      "mod_code": [
        "vector < string > tran ( s , type ) ;",
        "while ( s . length ( ) - i >= 0 )",
        "vector < int , int > biao ;"
      ],
      "err_line": 0,
      "err_msg": "‘s’ was not declared in this scope"
    },
    {
      "mod_line": [
        0,
        3,
        15,
        33
      ],
      "mod_code": [
        "vector < string > tran ( s , type ) ;",
        "while ( s . length ( ) - i >= 0 )",
        "vector < int , int > biao ;",
        "if ( biao [ num ] == 0 ) num . erase ( num ) ;"
      ],
      "err_line": 0,
      "err_msg": "‘s’ was not declared in this scope"
    },
    {
      "mod_line": [
        0,
        3,
        15,
        37
      ],
      "mod_code": [
        "vector < string > tran ( s , type ) ;",
        "while ( s . length ( ) - i >= 0 )",
        "vector < int , int > biao ;",
        "vector < int > num ;"
      ],
      "err_line": 0,
      "err_msg": "‘s’ was not declared in this scope"
    },
    {
      "mod_line": [
        0,
        3,
        15,
        38
      ],
      "mod_code": [
        "vector < string > tran ( s , type ) ;",
        "while ( s . length ( ) - i >= 0 )",
        "vector < int , int > biao ;",
        "map < int , int > :: iterator it ;"
      ],
      "err_line": 0,
      "err_msg": "‘s’ was not declared in this scope"
    },
    {
      "mod_line": [
        0,
        3,
        15,
        39
      ],
      "mod_code": [
        "vector < string > tran ( s , type ) ;",
        "while ( s . length ( ) - i >= 0 )",
        "vector < int , int > biao ;",
        "it = biao ( it ) ;"
      ],
      "err_line": 0,
      "err_msg": "‘s’ was not declared in this scope"
    },
    {
      "mod_line": [
        0,
        3,
        33
      ],
      "mod_code": [
        "vector < string > tran ( s , type ) ;",
        "while ( s . length ( ) - i >= 0 )",
        "if ( biao [ num ] == 0 ) num . erase ( num ) ;"
      ],
      "err_line": 0,
      "err_msg": "‘s’ was not declared in this scope"
    },
    {
      "mod_line": [
        0,
        3,
        33,
        37
      ],
      "mod_code": [
        "vector < string > tran ( s , type ) ;",
        "while ( s . length ( ) - i >= 0 )",
        "if ( biao [ num ] == 0 ) num . erase ( num ) ;",
        "vector < int > num ;"
      ],
      "err_line": 0,
      "err_msg": "‘s’ was not declared in this scope"
    },
    {
      "mod_line": [
        0,
        3,
        33,
        38
      ],
      "mod_code": [
        "vector < string > tran ( s , type ) ;",
        "while ( s . length ( ) - i >= 0 )",
        "if ( biao [ num ] == 0 ) num . erase ( num ) ;",
        "map < int , int > :: iterator it ;"
      ],
      "err_line": 0,
      "err_msg": "‘s’ was not declared in this scope"
    },
    {
      "mod_line": [
        0,
        3,
        33,
        39
      ],
      "mod_code": [
        "vector < string > tran ( s , type ) ;",
        "while ( s . length ( ) - i >= 0 )",
        "if ( biao [ num ] == 0 ) num . erase ( num ) ;",
        "it = biao ( it ) ;"
      ],
      "err_line": 0,
      "err_msg": "‘s’ was not declared in this scope"
    },
    {
      "mod_line": [
        0,
        3,
        37
      ],
      "mod_code": [
        "vector < string > tran ( s , type ) ;",
        "while ( s . length ( ) - i >= 0 )",
        "vector < int > num ;"
      ],
      "err_line": 0,
      "err_msg": "‘s’ was not declared in this scope"
    },
    {
      "mod_line": [
        0,
        3,
        37,
        38
      ],
      "mod_code": [
        "vector < string > tran ( s , type ) ;",
        "while ( s . length ( ) - i >= 0 )",
        "vector < int > num ;",
        "map < int , int > :: iterator it ;"
      ],
      "err_line": 0,
      "err_msg": "‘s’ was not declared in this scope"
    },
    {
      "mod_line": [
        0,
        3,
        37,
        39
      ],
      "mod_code": [
        "vector < string > tran ( s , type ) ;",
        "while ( s . length ( ) - i >= 0 )",
        "vector < int > num ;",
        "it = biao ( it ) ;"
      ],
      "err_line": 0,
      "err_msg": "‘s’ was not declared in this scope"
    },
    {
      "mod_line": [
        0,
        3,
        38
      ],
      "mod_code": [
        "vector < string > tran ( s , type ) ;",
        "while ( s . length ( ) - i >= 0 )",
        "map < int , int > :: iterator it ;"
      ],
      "err_line": 0,
      "err_msg": "‘s’ was not declared in this scope"
    },
    {
      "mod_line": [
        0,
        3,
        38,
        39
      ],
      "mod_code": [
        "vector < string > tran ( s , type ) ;",
        "while ( s . length ( ) - i >= 0 )",
        "map < int , int > :: iterator it ;",
        "it = biao ( it ) ;"
      ],
      "err_line": 0,
      "err_msg": "‘s’ was not declared in this scope"
    },
    {
      "mod_line": [
        0,
        3,
        39
      ],
      "mod_code": [
        "vector < string > tran ( s , type ) ;",
        "while ( s . length ( ) - i >= 0 )",
        "it = biao ( it ) ;"
      ],
      "err_line": 0,
      "err_msg": "‘s’ was not declared in this scope"
    },
    {
      "mod_line": [
        0,
        9
      ],
      "mod_code": [
        "vector < string > tran ( s , type ) ;",
        "bool judge ( vector < int > num , int temp )"
      ],
      "err_line": 0,
      "err_msg": "‘s’ was not declared in this scope"
    },
    {
      "mod_line": [
        0,
        9,
        11
      ],
      "mod_code": [
        "vector < string > tran ( s , type ) ;",
        "bool judge ( vector < int > num , int temp )",
        "return ( num [ i ] [ i ] ) ;"
      ],
      "err_line": 0,
      "err_msg": "‘s’ was not declared in this scope"
    },
    {
      "mod_line": [
        0,
        9,
        11,
        15
      ],
      "mod_code": [
        "vector < string > tran ( s , type ) ;",
        "bool judge ( vector < int > num , int temp )",
        "return ( num [ i ] [ i ] ) ;",
        "vector < int , int > biao ;"
      ],
      "err_line": 0,
      "err_msg": "‘s’ was not declared in this scope"
    },
    {
      "mod_line": [
        0,
        9,
        11,
        33
      ],
      "mod_code": [
        "vector < string > tran ( s , type ) ;",
        "bool judge ( vector < int > num , int temp )",
        "return ( num [ i ] [ i ] ) ;",
        "if ( biao [ num ] == 0 ) num . erase ( num ) ;"
      ],
      "err_line": 0,
      "err_msg": "‘s’ was not declared in this scope"
    },
    {
      "mod_line": [
        0,
        9,
        11,
        37
      ],
      "mod_code": [
        "vector < string > tran ( s , type ) ;",
        "bool judge ( vector < int > num , int temp )",
        "return ( num [ i ] [ i ] ) ;",
        "vector < int > num ;"
      ],
      "err_line": 0,
      "err_msg": "‘s’ was not declared in this scope"
    },
    {
      "mod_line": [
        0,
        9,
        11,
        38
      ],
      "mod_code": [
        "vector < string > tran ( s , type ) ;",
        "bool judge ( vector < int > num , int temp )",
        "return ( num [ i ] [ i ] ) ;",
        "map < int , int > :: iterator it ;"
      ],
      "err_line": 0,
      "err_msg": "‘s’ was not declared in this scope"
    },
    {
      "mod_line": [
        0,
        9,
        11,
        39
      ],
      "mod_code": [
        "vector < string > tran ( s , type ) ;",
        "bool judge ( vector < int > num , int temp )",
        "return ( num [ i ] [ i ] ) ;",
        "it = biao ( it ) ;"
      ],
      "err_line": 0,
      "err_msg": "‘s’ was not declared in this scope"
    },
    {
      "mod_line": [
        0,
        9,
        15
      ],
      "mod_code": [
        "vector < string > tran ( s , type ) ;",
        "bool judge ( vector < int > num , int temp )",
        "vector < int , int > biao ;"
      ],
      "err_line": 0,
      "err_msg": "‘s’ was not declared in this scope"
    },
    {
      "mod_line": [
        0,
        9,
        15,
        33
      ],
      "mod_code": [
        "vector < string > tran ( s , type ) ;",
        "bool judge ( vector < int > num , int temp )",
        "vector < int , int > biao ;",
        "if ( biao [ num ] == 0 ) num . erase ( num ) ;"
      ],
      "err_line": 0,
      "err_msg": "‘s’ was not declared in this scope"
    },
    {
      "mod_line": [
        0,
        9,
        15,
        37
      ],
      "mod_code": [
        "vector < string > tran ( s , type ) ;",
        "bool judge ( vector < int > num , int temp )",
        "vector < int , int > biao ;",
        "vector < int > num ;"
      ],
      "err_line": 0,
      "err_msg": "‘s’ was not declared in this scope"
    },
    {
      "mod_line": [
        0,
        9,
        15,
        38
      ],
      "mod_code": [
        "vector < string > tran ( s , type ) ;",
        "bool judge ( vector < int > num , int temp )",
        "vector < int , int > biao ;",
        "map < int , int > :: iterator it ;"
      ],
      "err_line": 0,
      "err_msg": "‘s’ was not declared in this scope"
    },
    {
      "mod_line": [
        0,
        9,
        15,
        39
      ],
      "mod_code": [
        "vector < string > tran ( s , type ) ;",
        "bool judge ( vector < int > num , int temp )",
        "vector < int , int > biao ;",
        "it = biao ( it ) ;"
      ],
      "err_line": 0,
      "err_msg": "‘s’ was not declared in this scope"
    },
    {
      "mod_line": [
        0,
        9,
        33
      ],
      "mod_code": [
        "vector < string > tran ( s , type ) ;",
        "bool judge ( vector < int > num , int temp )",
        "if ( biao [ num ] == 0 ) num . erase ( num ) ;"
      ],
      "err_line": 0,
      "err_msg": "‘s’ was not declared in this scope"
    },
    {
      "mod_line": [
        0,
        9,
        33,
        37
      ],
      "mod_code": [
        "vector < string > tran ( s , type ) ;",
        "bool judge ( vector < int > num , int temp )",
        "if ( biao [ num ] == 0 ) num . erase ( num ) ;",
        "vector < int > num ;"
      ],
      "err_line": 0,
      "err_msg": "‘s’ was not declared in this scope"
    },
    {
      "mod_line": [
        0,
        9,
        33,
        38
      ],
      "mod_code": [
        "vector < string > tran ( s , type ) ;",
        "bool judge ( vector < int > num , int temp )",
        "if ( biao [ num ] == 0 ) num . erase ( num ) ;",
        "map < int , int > :: iterator it ;"
      ],
      "err_line": 0,
      "err_msg": "‘s’ was not declared in this scope"
    },
    {
      "mod_line": [
        0,
        9,
        33,
        39
      ],
      "mod_code": [
        "vector < string > tran ( s , type ) ;",
        "bool judge ( vector < int > num , int temp )",
        "if ( biao [ num ] == 0 ) num . erase ( num ) ;",
        "it = biao ( it ) ;"
      ],
      "err_line": 0,
      "err_msg": "‘s’ was not declared in this scope"
    },
    {
      "mod_line": [
        0,
        9,
        37
      ],
      "mod_code": [
        "vector < string > tran ( s , type ) ;",
        "bool judge ( vector < int > num , int temp )",
        "vector < int > num ;"
      ],
      "err_line": 0,
      "err_msg": "‘s’ was not declared in this scope"
    },
    {
      "mod_line": [
        0,
        9,
        37,
        38
      ],
      "mod_code": [
        "vector < string > tran ( s , type ) ;",
        "bool judge ( vector < int > num , int temp )",
        "vector < int > num ;",
        "map < int , int > :: iterator it ;"
      ],
      "err_line": 0,
      "err_msg": "‘s’ was not declared in this scope"
    },
    {
      "mod_line": [
        0,
        9,
        37,
        39
      ],
      "mod_code": [
        "vector < string > tran ( s , type ) ;",
        "bool judge ( vector < int > num , int temp )",
        "vector < int > num ;",
        "it = biao ( it ) ;"
      ],
      "err_line": 0,
      "err_msg": "‘s’ was not declared in this scope"
    },
    {
      "mod_line": [
        0,
        9,
        38
      ],
      "mod_code": [
        "vector < string > tran ( s , type ) ;",
        "bool judge ( vector < int > num , int temp )",
        "map < int , int > :: iterator it ;"
      ],
      "err_line": 0,
      "err_msg": "‘s’ was not declared in this scope"
    },
    {
      "mod_line": [
        0,
        9,
        38,
        39
      ],
      "mod_code": [
        "vector < string > tran ( s , type ) ;",
        "bool judge ( vector < int > num , int temp )",
        "map < int , int > :: iterator it ;",
        "it = biao ( it ) ;"
      ],
      "err_line": 0,
      "err_msg": "‘s’ was not declared in this scope"
    },
    {
      "mod_line": [
        0,
        9,
        39
      ],
      "mod_code": [
        "vector < string > tran ( s , type ) ;",
        "bool judge ( vector < int > num , int temp )",
        "it = biao ( it ) ;"
      ],
      "err_line": 0,
      "err_msg": "‘s’ was not declared in this scope"
    },
    {
      "mod_line": [
        0,
        11
      ],
      "mod_code": [
        "vector < string > tran ( s , type ) ;",
        "return ( num [ i ] [ i ] ) ;"
      ],
      "err_line": 0,
      "err_msg": "‘s’ was not declared in this scope"
    },
    {
      "mod_line": [
        0,
        11,
        15
      ],
      "mod_code": [
        "vector < string > tran ( s , type ) ;",
        "return ( num [ i ] [ i ] ) ;",
        "vector < int , int > biao ;"
      ],
      "err_line": 0,
      "err_msg": "‘s’ was not declared in this scope"
    },
    {
      "mod_line": [
        0,
        11,
        15,
        33
      ],
      "mod_code": [
        "vector < string > tran ( s , type ) ;",
        "return ( num [ i ] [ i ] ) ;",
        "vector < int , int > biao ;",
        "if ( biao [ num ] == 0 ) num . erase ( num ) ;"
      ],
      "err_line": 0,
      "err_msg": "‘s’ was not declared in this scope"
    },
    {
      "mod_line": [
        0,
        11,
        15,
        37
      ],
      "mod_code": [
        "vector < string > tran ( s , type ) ;",
        "return ( num [ i ] [ i ] ) ;",
        "vector < int , int > biao ;",
        "vector < int > num ;"
      ],
      "err_line": 0,
      "err_msg": "‘s’ was not declared in this scope"
    },
    {
      "mod_line": [
        0,
        11,
        15,
        38
      ],
      "mod_code": [
        "vector < string > tran ( s , type ) ;",
        "return ( num [ i ] [ i ] ) ;",
        "vector < int , int > biao ;",
        "map < int , int > :: iterator it ;"
      ],
      "err_line": 0,
      "err_msg": "‘s’ was not declared in this scope"
    },
    {
      "mod_line": [
        0,
        11,
        15,
        39
      ],
      "mod_code": [
        "vector < string > tran ( s , type ) ;",
        "return ( num [ i ] [ i ] ) ;",
        "vector < int , int > biao ;",
        "it = biao ( it ) ;"
      ],
      "err_line": 0,
      "err_msg": "‘s’ was not declared in this scope"
    },
    {
      "mod_line": [
        0,
        11,
        33
      ],
      "mod_code": [
        "vector < string > tran ( s , type ) ;",
        "return ( num [ i ] [ i ] ) ;",
        "if ( biao [ num ] == 0 ) num . erase ( num ) ;"
      ],
      "err_line": 0,
      "err_msg": "‘s’ was not declared in this scope"
    },
    {
      "mod_line": [
        0,
        11,
        33,
        37
      ],
      "mod_code": [
        "vector < string > tran ( s , type ) ;",
        "return ( num [ i ] [ i ] ) ;",
        "if ( biao [ num ] == 0 ) num . erase ( num ) ;",
        "vector < int > num ;"
      ],
      "err_line": 0,
      "err_msg": "‘s’ was not declared in this scope"
    },
    {
      "mod_line": [
        0,
        11,
        33,
        38
      ],
      "mod_code": [
        "vector < string > tran ( s , type ) ;",
        "return ( num [ i ] [ i ] ) ;",
        "if ( biao [ num ] == 0 ) num . erase ( num ) ;",
        "map < int , int > :: iterator it ;"
      ],
      "err_line": 0,
      "err_msg": "‘s’ was not declared in this scope"
    },
    {
      "mod_line": [
        0,
        11,
        33,
        39
      ],
      "mod_code": [
        "vector < string > tran ( s , type ) ;",
        "return ( num [ i ] [ i ] ) ;",
        "if ( biao [ num ] == 0 ) num . erase ( num ) ;",
        "it = biao ( it ) ;"
      ],
      "err_line": 0,
      "err_msg": "‘s’ was not declared in this scope"
    },
    {
      "mod_line": [
        0,
        11,
        37
      ],
      "mod_code": [
        "vector < string > tran ( s , type ) ;",
        "return ( num [ i ] [ i ] ) ;",
        "vector < int > num ;"
      ],
      "err_line": 0,
      "err_msg": "‘s’ was not declared in this scope"
    },
    {
      "mod_line": [
        0,
        11,
        37,
        38
      ],
      "mod_code": [
        "vector < string > tran ( s , type ) ;",
        "return ( num [ i ] [ i ] ) ;",
        "vector < int > num ;",
        "map < int , int > :: iterator it ;"
      ],
      "err_line": 0,
      "err_msg": "‘s’ was not declared in this scope"
    },
    {
      "mod_line": [
        0,
        11,
        37,
        39
      ],
      "mod_code": [
        "vector < string > tran ( s , type ) ;",
        "return ( num [ i ] [ i ] ) ;",
        "vector < int > num ;",
        "it = biao ( it ) ;"
      ],
      "err_line": 0,
      "err_msg": "‘s’ was not declared in this scope"
    },
    {
      "mod_line": [
        0,
        11,
        38
      ],
      "mod_code": [
        "vector < string > tran ( s , type ) ;",
        "return ( num [ i ] [ i ] ) ;",
        "map < int , int > :: iterator it ;"
      ],
      "err_line": 0,
      "err_msg": "‘s’ was not declared in this scope"
    },
    {
      "mod_line": [
        0,
        11,
        38,
        39
      ],
      "mod_code": [
        "vector < string > tran ( s , type ) ;",
        "return ( num [ i ] [ i ] ) ;",
        "map < int , int > :: iterator it ;",
        "it = biao ( it ) ;"
      ],
      "err_line": 0,
      "err_msg": "‘s’ was not declared in this scope"
    },
    {
      "mod_line": [
        0,
        11,
        39
      ],
      "mod_code": [
        "vector < string > tran ( s , type ) ;",
        "return ( num [ i ] [ i ] ) ;",
        "it = biao ( it ) ;"
      ],
      "err_line": 0,
      "err_msg": "‘s’ was not declared in this scope"
    },
    {
      "mod_line": [
        0,
        15
      ],
      "mod_code": [
        "vector < string > tran ( s , type ) ;",
        "vector < int , int > biao ;"
      ],
      "err_line": 0,
      "err_msg": "‘s’ was not declared in this scope"
    },
    {
      "mod_line": [
        0,
        15,
        33
      ],
      "mod_code": [
        "vector < string > tran ( s , type ) ;",
        "vector < int , int > biao ;",
        "if ( biao [ num ] == 0 ) num . erase ( num ) ;"
      ],
      "err_line": 0,
      "err_msg": "‘s’ was not declared in this scope"
    },
    {
      "mod_line": [
        0,
        15,
        33,
        37
      ],
      "mod_code": [
        "vector < string > tran ( s , type ) ;",
        "vector < int , int > biao ;",
        "if ( biao [ num ] == 0 ) num . erase ( num ) ;",
        "vector < int > num ;"
      ],
      "err_line": 0,
      "err_msg": "‘s’ was not declared in this scope"
    },
    {
      "mod_line": [
        0,
        15,
        33,
        38
      ],
      "mod_code": [
        "vector < string > tran ( s , type ) ;",
        "vector < int , int > biao ;",
        "if ( biao [ num ] == 0 ) num . erase ( num ) ;",
        "map < int , int > :: iterator it ;"
      ],
      "err_line": 0,
      "err_msg": "‘s’ was not declared in this scope"
    },
    {
      "mod_line": [
        0,
        15,
        33,
        39
      ],
      "mod_code": [
        "vector < string > tran ( s , type ) ;",
        "vector < int , int > biao ;",
        "if ( biao [ num ] == 0 ) num . erase ( num ) ;",
        "it = biao ( it ) ;"
      ],
      "err_line": 0,
      "err_msg": "‘s’ was not declared in this scope"
    },
    {
      "mod_line": [
        0,
        15,
        37
      ],
      "mod_code": [
        "vector < string > tran ( s , type ) ;",
        "vector < int , int > biao ;",
        "vector < int > num ;"
      ],
      "err_line": 0,
      "err_msg": "‘s’ was not declared in this scope"
    },
    {
      "mod_line": [
        0,
        15,
        37,
        38
      ],
      "mod_code": [
        "vector < string > tran ( s , type ) ;",
        "vector < int , int > biao ;",
        "vector < int > num ;",
        "map < int , int > :: iterator it ;"
      ],
      "err_line": 0,
      "err_msg": "‘s’ was not declared in this scope"
    },
    {
      "mod_line": [
        0,
        15,
        37,
        39
      ],
      "mod_code": [
        "vector < string > tran ( s , type ) ;",
        "vector < int , int > biao ;",
        "vector < int > num ;",
        "it = biao ( it ) ;"
      ],
      "err_line": 0,
      "err_msg": "‘s’ was not declared in this scope"
    },
    {
      "mod_line": [
        0,
        15,
        38
      ],
      "mod_code": [
        "vector < string > tran ( s , type ) ;",
        "vector < int , int > biao ;",
        "map < int , int > :: iterator it ;"
      ],
      "err_line": 0,
      "err_msg": "‘s’ was not declared in this scope"
    },
    {
      "mod_line": [
        0,
        15,
        38,
        39
      ],
      "mod_code": [
        "vector < string > tran ( s , type ) ;",
        "vector < int , int > biao ;",
        "map < int , int > :: iterator it ;",
        "it = biao ( it ) ;"
      ],
      "err_line": 0,
      "err_msg": "‘s’ was not declared in this scope"
    },
    {
      "mod_line": [
        0,
        15,
        39
      ],
      "mod_code": [
        "vector < string > tran ( s , type ) ;",
        "vector < int , int > biao ;",
        "it = biao ( it ) ;"
      ],
      "err_line": 0,
      "err_msg": "‘s’ was not declared in this scope"
    },
    {
      "mod_line": [
        0,
        33
      ],
      "mod_code": [
        "vector < string > tran ( s , type ) ;",
        "if ( biao [ num ] == 0 ) num . erase ( num ) ;"
      ],
      "err_line": 0,
      "err_msg": "‘s’ was not declared in this scope"
    },
    {
      "mod_line": [
        0,
        33,
        37
      ],
      "mod_code": [
        "vector < string > tran ( s , type ) ;",
        "if ( biao [ num ] == 0 ) num . erase ( num ) ;",
        "vector < int > num ;"
      ],
      "err_line": 0,
      "err_msg": "‘s’ was not declared in this scope"
    },
    {
      "mod_line": [
        0,
        33,
        37,
        38
      ],
      "mod_code": [
        "vector < string > tran ( s , type ) ;",
        "if ( biao [ num ] == 0 ) num . erase ( num ) ;",
        "vector < int > num ;",
        "map < int , int > :: iterator it ;"
      ],
      "err_line": 0,
      "err_msg": "‘s’ was not declared in this scope"
    },
    {
      "mod_line": [
        0,
        33,
        37,
        39
      ],
      "mod_code": [
        "vector < string > tran ( s , type ) ;",
        "if ( biao [ num ] == 0 ) num . erase ( num ) ;",
        "vector < int > num ;",
        "it = biao ( it ) ;"
      ],
      "err_line": 0,
      "err_msg": "‘s’ was not declared in this scope"
    },
    {
      "mod_line": [
        0,
        33,
        38
      ],
      "mod_code": [
        "vector < string > tran ( s , type ) ;",
        "if ( biao [ num ] == 0 ) num . erase ( num ) ;",
        "map < int , int > :: iterator it ;"
      ],
      "err_line": 0,
      "err_msg": "‘s’ was not declared in this scope"
    },
    {
      "mod_line": [
        0,
        33,
        38,
        39
      ],
      "mod_code": [
        "vector < string > tran ( s , type ) ;",
        "if ( biao [ num ] == 0 ) num . erase ( num ) ;",
        "map < int , int > :: iterator it ;",
        "it = biao ( it ) ;"
      ],
      "err_line": 0,
      "err_msg": "‘s’ was not declared in this scope"
    },
    {
      "mod_line": [
        0,
        33,
        39
      ],
      "mod_code": [
        "vector < string > tran ( s , type ) ;",
        "if ( biao [ num ] == 0 ) num . erase ( num ) ;",
        "it = biao ( it ) ;"
      ],
      "err_line": 0,
      "err_msg": "‘s’ was not declared in this scope"
    },
    {
      "mod_line": [
        0,
        37
      ],
      "mod_code": [
        "vector < string > tran ( s , type ) ;",
        "vector < int > num ;"
      ],
      "err_line": 0,
      "err_msg": "‘s’ was not declared in this scope"
    },
    {
      "mod_line": [
        0,
        37,
        38
      ],
      "mod_code": [
        "vector < string > tran ( s , type ) ;",
        "vector < int > num ;",
        "map < int , int > :: iterator it ;"
      ],
      "err_line": 0,
      "err_msg": "‘s’ was not declared in this scope"
    },
    {
      "mod_line": [
        0,
        37,
        38,
        39
      ],
      "mod_code": [
        "vector < string > tran ( s , type ) ;",
        "vector < int > num ;",
        "map < int , int > :: iterator it ;",
        "it = biao ( it ) ;"
      ],
      "err_line": 0,
      "err_msg": "‘s’ was not declared in this scope"
    },
    {
      "mod_line": [
        0,
        37,
        39
      ],
      "mod_code": [
        "vector < string > tran ( s , type ) ;",
        "vector < int > num ;",
        "it = biao ( it ) ;"
      ],
      "err_line": 0,
      "err_msg": "‘s’ was not declared in this scope"
    },
    {
      "mod_line": [
        0,
        38
      ],
      "mod_code": [
        "vector < string > tran ( s , type ) ;",
        "map < int , int > :: iterator it ;"
      ],
      "err_line": 0,
      "err_msg": "‘s’ was not declared in this scope"
    },
    {
      "mod_line": [
        0,
        38,
        39
      ],
      "mod_code": [
        "vector < string > tran ( s , type ) ;",
        "map < int , int > :: iterator it ;",
        "it = biao ( it ) ;"
      ],
      "err_line": 0,
      "err_msg": "‘s’ was not declared in this scope"
    },
    {
      "mod_line": [
        0,
        39
      ],
      "mod_code": [
        "vector < string > tran ( s , type ) ;",
        "it = biao ( it ) ;"
      ],
      "err_line": 0,
      "err_msg": "‘s’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        9
      ],
      "mod_code": [
        "while ( s . length ( ) - i >= 0 )",
        "bool judge ( vector < int > num , int temp )"
      ],
      "err_line": 11,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        3,
        9,
        11
      ],
      "mod_code": [
        "while ( s . length ( ) - i >= 0 )",
        "bool judge ( vector < int > num , int temp )",
        "return ( num [ i ] [ i ] ) ;"
      ],
      "err_line": 11,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        3,
        9,
        11,
        15
      ],
      "mod_code": [
        "while ( s . length ( ) - i >= 0 )",
        "bool judge ( vector < int > num , int temp )",
        "return ( num [ i ] [ i ] ) ;",
        "vector < int , int > biao ;"
      ],
      "err_line": 11,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        3,
        9,
        11,
        33
      ],
      "mod_code": [
        "while ( s . length ( ) - i >= 0 )",
        "bool judge ( vector < int > num , int temp )",
        "return ( num [ i ] [ i ] ) ;",
        "if ( biao [ num ] == 0 ) num . erase ( num ) ;"
      ],
      "err_line": 11,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        3,
        9,
        11,
        37
      ],
      "mod_code": [
        "while ( s . length ( ) - i >= 0 )",
        "bool judge ( vector < int > num , int temp )",
        "return ( num [ i ] [ i ] ) ;",
        "vector < int > num ;"
      ],
      "err_line": 11,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        3,
        9,
        11,
        38
      ],
      "mod_code": [
        "while ( s . length ( ) - i >= 0 )",
        "bool judge ( vector < int > num , int temp )",
        "return ( num [ i ] [ i ] ) ;",
        "map < int , int > :: iterator it ;"
      ],
      "err_line": 11,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        3,
        9,
        11,
        39
      ],
      "mod_code": [
        "while ( s . length ( ) - i >= 0 )",
        "bool judge ( vector < int > num , int temp )",
        "return ( num [ i ] [ i ] ) ;",
        "it = biao ( it ) ;"
      ],
      "err_line": 11,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        3,
        9,
        15
      ],
      "mod_code": [
        "while ( s . length ( ) - i >= 0 )",
        "bool judge ( vector < int > num , int temp )",
        "vector < int , int > biao ;"
      ],
      "err_line": 11,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        3,
        9,
        15,
        33
      ],
      "mod_code": [
        "while ( s . length ( ) - i >= 0 )",
        "bool judge ( vector < int > num , int temp )",
        "vector < int , int > biao ;",
        "if ( biao [ num ] == 0 ) num . erase ( num ) ;"
      ],
      "err_line": 11,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        3,
        9,
        15,
        37
      ],
      "mod_code": [
        "while ( s . length ( ) - i >= 0 )",
        "bool judge ( vector < int > num , int temp )",
        "vector < int , int > biao ;",
        "vector < int > num ;"
      ],
      "err_line": 11,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        3,
        9,
        15,
        38
      ],
      "mod_code": [
        "while ( s . length ( ) - i >= 0 )",
        "bool judge ( vector < int > num , int temp )",
        "vector < int , int > biao ;",
        "map < int , int > :: iterator it ;"
      ],
      "err_line": 11,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        3,
        9,
        15,
        39
      ],
      "mod_code": [
        "while ( s . length ( ) - i >= 0 )",
        "bool judge ( vector < int > num , int temp )",
        "vector < int , int > biao ;",
        "it = biao ( it ) ;"
      ],
      "err_line": 11,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        3,
        9,
        33
      ],
      "mod_code": [
        "while ( s . length ( ) - i >= 0 )",
        "bool judge ( vector < int > num , int temp )",
        "if ( biao [ num ] == 0 ) num . erase ( num ) ;"
      ],
      "err_line": 11,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        3,
        9,
        33,
        37
      ],
      "mod_code": [
        "while ( s . length ( ) - i >= 0 )",
        "bool judge ( vector < int > num , int temp )",
        "if ( biao [ num ] == 0 ) num . erase ( num ) ;",
        "vector < int > num ;"
      ],
      "err_line": 11,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        3,
        9,
        33,
        38
      ],
      "mod_code": [
        "while ( s . length ( ) - i >= 0 )",
        "bool judge ( vector < int > num , int temp )",
        "if ( biao [ num ] == 0 ) num . erase ( num ) ;",
        "map < int , int > :: iterator it ;"
      ],
      "err_line": 11,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        3,
        9,
        33,
        39
      ],
      "mod_code": [
        "while ( s . length ( ) - i >= 0 )",
        "bool judge ( vector < int > num , int temp )",
        "if ( biao [ num ] == 0 ) num . erase ( num ) ;",
        "it = biao ( it ) ;"
      ],
      "err_line": 11,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        3,
        9,
        37
      ],
      "mod_code": [
        "while ( s . length ( ) - i >= 0 )",
        "bool judge ( vector < int > num , int temp )",
        "vector < int > num ;"
      ],
      "err_line": 11,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        3,
        9,
        37,
        38
      ],
      "mod_code": [
        "while ( s . length ( ) - i >= 0 )",
        "bool judge ( vector < int > num , int temp )",
        "vector < int > num ;",
        "map < int , int > :: iterator it ;"
      ],
      "err_line": 11,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        3,
        9,
        37,
        39
      ],
      "mod_code": [
        "while ( s . length ( ) - i >= 0 )",
        "bool judge ( vector < int > num , int temp )",
        "vector < int > num ;",
        "it = biao ( it ) ;"
      ],
      "err_line": 11,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        3,
        9,
        38
      ],
      "mod_code": [
        "while ( s . length ( ) - i >= 0 )",
        "bool judge ( vector < int > num , int temp )",
        "map < int , int > :: iterator it ;"
      ],
      "err_line": 11,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        3,
        9,
        38,
        39
      ],
      "mod_code": [
        "while ( s . length ( ) - i >= 0 )",
        "bool judge ( vector < int > num , int temp )",
        "map < int , int > :: iterator it ;",
        "it = biao ( it ) ;"
      ],
      "err_line": 11,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        3,
        9,
        39
      ],
      "mod_code": [
        "while ( s . length ( ) - i >= 0 )",
        "bool judge ( vector < int > num , int temp )",
        "it = biao ( it ) ;"
      ],
      "err_line": 11,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        3,
        11
      ],
      "mod_code": [
        "while ( s . length ( ) - i >= 0 )",
        "return ( num [ i ] [ i ] ) ;"
      ],
      "err_line": 11,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        3,
        11,
        15
      ],
      "mod_code": [
        "while ( s . length ( ) - i >= 0 )",
        "return ( num [ i ] [ i ] ) ;",
        "vector < int , int > biao ;"
      ],
      "err_line": 11,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        3,
        11,
        15,
        33
      ],
      "mod_code": [
        "while ( s . length ( ) - i >= 0 )",
        "return ( num [ i ] [ i ] ) ;",
        "vector < int , int > biao ;",
        "if ( biao [ num ] == 0 ) num . erase ( num ) ;"
      ],
      "err_line": 11,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        3,
        11,
        15,
        37
      ],
      "mod_code": [
        "while ( s . length ( ) - i >= 0 )",
        "return ( num [ i ] [ i ] ) ;",
        "vector < int , int > biao ;",
        "vector < int > num ;"
      ],
      "err_line": 11,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        3,
        11,
        15,
        38
      ],
      "mod_code": [
        "while ( s . length ( ) - i >= 0 )",
        "return ( num [ i ] [ i ] ) ;",
        "vector < int , int > biao ;",
        "map < int , int > :: iterator it ;"
      ],
      "err_line": 11,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        3,
        11,
        15,
        39
      ],
      "mod_code": [
        "while ( s . length ( ) - i >= 0 )",
        "return ( num [ i ] [ i ] ) ;",
        "vector < int , int > biao ;",
        "it = biao ( it ) ;"
      ],
      "err_line": 11,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        3,
        11,
        33
      ],
      "mod_code": [
        "while ( s . length ( ) - i >= 0 )",
        "return ( num [ i ] [ i ] ) ;",
        "if ( biao [ num ] == 0 ) num . erase ( num ) ;"
      ],
      "err_line": 11,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        3,
        11,
        33,
        37
      ],
      "mod_code": [
        "while ( s . length ( ) - i >= 0 )",
        "return ( num [ i ] [ i ] ) ;",
        "if ( biao [ num ] == 0 ) num . erase ( num ) ;",
        "vector < int > num ;"
      ],
      "err_line": 11,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        3,
        11,
        33,
        38
      ],
      "mod_code": [
        "while ( s . length ( ) - i >= 0 )",
        "return ( num [ i ] [ i ] ) ;",
        "if ( biao [ num ] == 0 ) num . erase ( num ) ;",
        "map < int , int > :: iterator it ;"
      ],
      "err_line": 11,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        3,
        11,
        33,
        39
      ],
      "mod_code": [
        "while ( s . length ( ) - i >= 0 )",
        "return ( num [ i ] [ i ] ) ;",
        "if ( biao [ num ] == 0 ) num . erase ( num ) ;",
        "it = biao ( it ) ;"
      ],
      "err_line": 11,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        3,
        11,
        37
      ],
      "mod_code": [
        "while ( s . length ( ) - i >= 0 )",
        "return ( num [ i ] [ i ] ) ;",
        "vector < int > num ;"
      ],
      "err_line": 11,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        3,
        11,
        37,
        38
      ],
      "mod_code": [
        "while ( s . length ( ) - i >= 0 )",
        "return ( num [ i ] [ i ] ) ;",
        "vector < int > num ;",
        "map < int , int > :: iterator it ;"
      ],
      "err_line": 11,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        3,
        11,
        37,
        39
      ],
      "mod_code": [
        "while ( s . length ( ) - i >= 0 )",
        "return ( num [ i ] [ i ] ) ;",
        "vector < int > num ;",
        "it = biao ( it ) ;"
      ],
      "err_line": 11,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        3,
        11,
        38
      ],
      "mod_code": [
        "while ( s . length ( ) - i >= 0 )",
        "return ( num [ i ] [ i ] ) ;",
        "map < int , int > :: iterator it ;"
      ],
      "err_line": 11,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        3,
        11,
        38,
        39
      ],
      "mod_code": [
        "while ( s . length ( ) - i >= 0 )",
        "return ( num [ i ] [ i ] ) ;",
        "map < int , int > :: iterator it ;",
        "it = biao ( it ) ;"
      ],
      "err_line": 11,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        3,
        11,
        39
      ],
      "mod_code": [
        "while ( s . length ( ) - i >= 0 )",
        "return ( num [ i ] [ i ] ) ;",
        "it = biao ( it ) ;"
      ],
      "err_line": 11,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        3,
        15
      ],
      "mod_code": [
        "while ( s . length ( ) - i >= 0 )",
        "vector < int , int > biao ;"
      ],
      "err_line": 26,
      "err_msg": "no match for ‘operator[]’ (operand types are ‘std::vector<int, int>’ and ‘std::vector<int>’)"
    },
    {
      "mod_line": [
        3,
        15,
        33
      ],
      "mod_code": [
        "while ( s . length ( ) - i >= 0 )",
        "vector < int , int > biao ;",
        "if ( biao [ num ] == 0 ) num . erase ( num ) ;"
      ],
      "err_line": 26,
      "err_msg": "no match for ‘operator[]’ (operand types are ‘std::vector<int, int>’ and ‘std::vector<int>’)"
    },
    {
      "mod_line": [
        3,
        15,
        33,
        37
      ],
      "mod_code": [
        "while ( s . length ( ) - i >= 0 )",
        "vector < int , int > biao ;",
        "if ( biao [ num ] == 0 ) num . erase ( num ) ;",
        "vector < int > num ;"
      ],
      "err_line": 26,
      "err_msg": "no match for ‘operator[]’ (operand types are ‘std::vector<int, int>’ and ‘std::vector<int>’)"
    },
    {
      "mod_line": [
        3,
        15,
        33,
        38
      ],
      "mod_code": [
        "while ( s . length ( ) - i >= 0 )",
        "vector < int , int > biao ;",
        "if ( biao [ num ] == 0 ) num . erase ( num ) ;",
        "map < int , int > :: iterator it ;"
      ],
      "err_line": 26,
      "err_msg": "no match for ‘operator[]’ (operand types are ‘std::vector<int, int>’ and ‘std::vector<int>’)"
    },
    {
      "mod_line": [
        3,
        15,
        33,
        39
      ],
      "mod_code": [
        "while ( s . length ( ) - i >= 0 )",
        "vector < int , int > biao ;",
        "if ( biao [ num ] == 0 ) num . erase ( num ) ;",
        "it = biao ( it ) ;"
      ],
      "err_line": 26,
      "err_msg": "no match for ‘operator[]’ (operand types are ‘std::vector<int, int>’ and ‘std::vector<int>’)"
    },
    {
      "mod_line": [
        3,
        15,
        37
      ],
      "mod_code": [
        "while ( s . length ( ) - i >= 0 )",
        "vector < int , int > biao ;",
        "vector < int > num ;"
      ],
      "err_line": 26,
      "err_msg": "no match for ‘operator[]’ (operand types are ‘std::vector<int, int>’ and ‘std::vector<int>’)"
    },
    {
      "mod_line": [
        3,
        15,
        37,
        38
      ],
      "mod_code": [
        "while ( s . length ( ) - i >= 0 )",
        "vector < int , int > biao ;",
        "vector < int > num ;",
        "map < int , int > :: iterator it ;"
      ],
      "err_line": 26,
      "err_msg": "no match for ‘operator[]’ (operand types are ‘std::vector<int, int>’ and ‘std::vector<int>’)"
    },
    {
      "mod_line": [
        3,
        15,
        37,
        39
      ],
      "mod_code": [
        "while ( s . length ( ) - i >= 0 )",
        "vector < int , int > biao ;",
        "vector < int > num ;",
        "it = biao ( it ) ;"
      ],
      "err_line": 26,
      "err_msg": "no match for ‘operator[]’ (operand types are ‘std::vector<int, int>’ and ‘std::vector<int>’)"
    },
    {
      "mod_line": [
        3,
        15,
        38
      ],
      "mod_code": [
        "while ( s . length ( ) - i >= 0 )",
        "vector < int , int > biao ;",
        "map < int , int > :: iterator it ;"
      ],
      "err_line": 26,
      "err_msg": "no match for ‘operator[]’ (operand types are ‘std::vector<int, int>’ and ‘std::vector<int>’)"
    },
    {
      "mod_line": [
        3,
        15,
        38,
        39
      ],
      "mod_code": [
        "while ( s . length ( ) - i >= 0 )",
        "vector < int , int > biao ;",
        "map < int , int > :: iterator it ;",
        "it = biao ( it ) ;"
      ],
      "err_line": 26,
      "err_msg": "no match for ‘operator[]’ (operand types are ‘std::vector<int, int>’ and ‘std::vector<int>’)"
    },
    {
      "mod_line": [
        3,
        15,
        39
      ],
      "mod_code": [
        "while ( s . length ( ) - i >= 0 )",
        "vector < int , int > biao ;",
        "it = biao ( it ) ;"
      ],
      "err_line": 26,
      "err_msg": "no match for ‘operator[]’ (operand types are ‘std::vector<int, int>’ and ‘std::vector<int>’)"
    },
    {
      "mod_line": [
        3,
        33
      ],
      "mod_code": [
        "while ( s . length ( ) - i >= 0 )",
        "if ( biao [ num ] == 0 ) num . erase ( num ) ;"
      ],
      "err_line": 33,
      "err_msg": "no matching function for call to ‘std::vector<int>::erase(std::vector<int>&)’"
    },
    {
      "mod_line": [
        3,
        33,
        37
      ],
      "mod_code": [
        "while ( s . length ( ) - i >= 0 )",
        "if ( biao [ num ] == 0 ) num . erase ( num ) ;",
        "vector < int > num ;"
      ],
      "err_line": 33,
      "err_msg": "no matching function for call to ‘std::vector<int>::erase(std::vector<int>&)’"
    },
    {
      "mod_line": [
        3,
        33,
        37,
        38
      ],
      "mod_code": [
        "while ( s . length ( ) - i >= 0 )",
        "if ( biao [ num ] == 0 ) num . erase ( num ) ;",
        "vector < int > num ;",
        "map < int , int > :: iterator it ;"
      ],
      "err_line": 33,
      "err_msg": "no matching function for call to ‘std::vector<int>::erase(std::vector<int>&)’"
    },
    {
      "mod_line": [
        3,
        33,
        37,
        39
      ],
      "mod_code": [
        "while ( s . length ( ) - i >= 0 )",
        "if ( biao [ num ] == 0 ) num . erase ( num ) ;",
        "vector < int > num ;",
        "it = biao ( it ) ;"
      ],
      "err_line": 33,
      "err_msg": "no matching function for call to ‘std::vector<int>::erase(std::vector<int>&)’"
    },
    {
      "mod_line": [
        3,
        33,
        38
      ],
      "mod_code": [
        "while ( s . length ( ) - i >= 0 )",
        "if ( biao [ num ] == 0 ) num . erase ( num ) ;",
        "map < int , int > :: iterator it ;"
      ],
      "err_line": 33,
      "err_msg": "no matching function for call to ‘std::vector<int>::erase(std::vector<int>&)’"
    },
    {
      "mod_line": [
        3,
        33,
        38,
        39
      ],
      "mod_code": [
        "while ( s . length ( ) - i >= 0 )",
        "if ( biao [ num ] == 0 ) num . erase ( num ) ;",
        "map < int , int > :: iterator it ;",
        "it = biao ( it ) ;"
      ],
      "err_line": 33,
      "err_msg": "no matching function for call to ‘std::vector<int>::erase(std::vector<int>&)’"
    },
    {
      "mod_line": [
        3,
        33,
        39
      ],
      "mod_code": [
        "while ( s . length ( ) - i >= 0 )",
        "if ( biao [ num ] == 0 ) num . erase ( num ) ;",
        "it = biao ( it ) ;"
      ],
      "err_line": 33,
      "err_msg": "no matching function for call to ‘std::vector<int>::erase(std::vector<int>&)’"
    },
    {
      "mod_line": [
        3,
        37,
        38
      ],
      "mod_code": [
        "while ( s . length ( ) - i >= 0 )",
        "vector < int > num ;",
        "map < int , int > :: iterator it ;"
      ],
      "err_line": 39,
      "err_msg": "no match for ‘operator=’ (operand types are ‘std::map<int, int>::iterator {aka std::_Rb_tree_iterator<std::pair<const int, int> >}’ and ‘std::map<std::vector<int>, int>::iterator {aka std::_Rb_tree_iterator<std::pair<const std::vector<int>, int> >}’)"
    },
    {
      "mod_line": [
        3,
        37,
        38,
        39
      ],
      "mod_code": [
        "while ( s . length ( ) - i >= 0 )",
        "vector < int > num ;",
        "map < int , int > :: iterator it ;",
        "it = biao ( it ) ;"
      ],
      "err_line": 39,
      "err_msg": "no match for call to ‘(std::map<std::vector<int>, int>) (std::map<int, int>::iterator&)’"
    },
    {
      "mod_line": [
        3,
        37,
        39
      ],
      "mod_code": [
        "while ( s . length ( ) - i >= 0 )",
        "vector < int > num ;",
        "it = biao ( it ) ;"
      ],
      "err_line": 39,
      "err_msg": "no match for call to ‘(std::map<std::vector<int>, int>) (std::map<std::vector<int>, int>::iterator&)’"
    },
    {
      "mod_line": [
        3,
        38
      ],
      "mod_code": [
        "while ( s . length ( ) - i >= 0 )",
        "map < int , int > :: iterator it ;"
      ],
      "err_line": 39,
      "err_msg": "no match for ‘operator=’ (operand types are ‘std::map<int, int>::iterator {aka std::_Rb_tree_iterator<std::pair<const int, int> >}’ and ‘std::map<std::vector<int>, int>::iterator {aka std::_Rb_tree_iterator<std::pair<const std::vector<int>, int> >}’)"
    },
    {
      "mod_line": [
        3,
        38,
        39
      ],
      "mod_code": [
        "while ( s . length ( ) - i >= 0 )",
        "map < int , int > :: iterator it ;",
        "it = biao ( it ) ;"
      ],
      "err_line": 39,
      "err_msg": "no match for call to ‘(std::map<std::vector<int>, int>) (std::map<int, int>::iterator&)’"
    },
    {
      "mod_line": [
        3,
        39
      ],
      "mod_code": [
        "while ( s . length ( ) - i >= 0 )",
        "it = biao ( it ) ;"
      ],
      "err_line": 39,
      "err_msg": "no match for call to ‘(std::map<std::vector<int>, int>) (std::map<std::vector<int>, int>::iterator&)’"
    },
    {
      "mod_line": [
        9,
        11
      ],
      "mod_code": [
        "bool judge ( vector < int > num , int temp )",
        "return ( num [ i ] [ i ] ) ;"
      ],
      "err_line": 11,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        9,
        11,
        15
      ],
      "mod_code": [
        "bool judge ( vector < int > num , int temp )",
        "return ( num [ i ] [ i ] ) ;",
        "vector < int , int > biao ;"
      ],
      "err_line": 11,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        9,
        11,
        15,
        33
      ],
      "mod_code": [
        "bool judge ( vector < int > num , int temp )",
        "return ( num [ i ] [ i ] ) ;",
        "vector < int , int > biao ;",
        "if ( biao [ num ] == 0 ) num . erase ( num ) ;"
      ],
      "err_line": 11,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        9,
        11,
        15,
        37
      ],
      "mod_code": [
        "bool judge ( vector < int > num , int temp )",
        "return ( num [ i ] [ i ] ) ;",
        "vector < int , int > biao ;",
        "vector < int > num ;"
      ],
      "err_line": 11,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        9,
        11,
        15,
        38
      ],
      "mod_code": [
        "bool judge ( vector < int > num , int temp )",
        "return ( num [ i ] [ i ] ) ;",
        "vector < int , int > biao ;",
        "map < int , int > :: iterator it ;"
      ],
      "err_line": 11,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        9,
        11,
        15,
        39
      ],
      "mod_code": [
        "bool judge ( vector < int > num , int temp )",
        "return ( num [ i ] [ i ] ) ;",
        "vector < int , int > biao ;",
        "it = biao ( it ) ;"
      ],
      "err_line": 11,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        9,
        11,
        33
      ],
      "mod_code": [
        "bool judge ( vector < int > num , int temp )",
        "return ( num [ i ] [ i ] ) ;",
        "if ( biao [ num ] == 0 ) num . erase ( num ) ;"
      ],
      "err_line": 11,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        9,
        11,
        33,
        37
      ],
      "mod_code": [
        "bool judge ( vector < int > num , int temp )",
        "return ( num [ i ] [ i ] ) ;",
        "if ( biao [ num ] == 0 ) num . erase ( num ) ;",
        "vector < int > num ;"
      ],
      "err_line": 11,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        9,
        11,
        33,
        38
      ],
      "mod_code": [
        "bool judge ( vector < int > num , int temp )",
        "return ( num [ i ] [ i ] ) ;",
        "if ( biao [ num ] == 0 ) num . erase ( num ) ;",
        "map < int , int > :: iterator it ;"
      ],
      "err_line": 11,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        9,
        11,
        33,
        39
      ],
      "mod_code": [
        "bool judge ( vector < int > num , int temp )",
        "return ( num [ i ] [ i ] ) ;",
        "if ( biao [ num ] == 0 ) num . erase ( num ) ;",
        "it = biao ( it ) ;"
      ],
      "err_line": 11,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        9,
        11,
        37
      ],
      "mod_code": [
        "bool judge ( vector < int > num , int temp )",
        "return ( num [ i ] [ i ] ) ;",
        "vector < int > num ;"
      ],
      "err_line": 11,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        9,
        11,
        37,
        38
      ],
      "mod_code": [
        "bool judge ( vector < int > num , int temp )",
        "return ( num [ i ] [ i ] ) ;",
        "vector < int > num ;",
        "map < int , int > :: iterator it ;"
      ],
      "err_line": 11,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        9,
        11,
        37,
        39
      ],
      "mod_code": [
        "bool judge ( vector < int > num , int temp )",
        "return ( num [ i ] [ i ] ) ;",
        "vector < int > num ;",
        "it = biao ( it ) ;"
      ],
      "err_line": 11,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        9,
        11,
        38
      ],
      "mod_code": [
        "bool judge ( vector < int > num , int temp )",
        "return ( num [ i ] [ i ] ) ;",
        "map < int , int > :: iterator it ;"
      ],
      "err_line": 11,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        9,
        11,
        38,
        39
      ],
      "mod_code": [
        "bool judge ( vector < int > num , int temp )",
        "return ( num [ i ] [ i ] ) ;",
        "map < int , int > :: iterator it ;",
        "it = biao ( it ) ;"
      ],
      "err_line": 11,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        9,
        11,
        39
      ],
      "mod_code": [
        "bool judge ( vector < int > num , int temp )",
        "return ( num [ i ] [ i ] ) ;",
        "it = biao ( it ) ;"
      ],
      "err_line": 11,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        9,
        15
      ],
      "mod_code": [
        "bool judge ( vector < int > num , int temp )",
        "vector < int , int > biao ;"
      ],
      "err_line": 11,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        9,
        15,
        33
      ],
      "mod_code": [
        "bool judge ( vector < int > num , int temp )",
        "vector < int , int > biao ;",
        "if ( biao [ num ] == 0 ) num . erase ( num ) ;"
      ],
      "err_line": 11,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        9,
        15,
        33,
        37
      ],
      "mod_code": [
        "bool judge ( vector < int > num , int temp )",
        "vector < int , int > biao ;",
        "if ( biao [ num ] == 0 ) num . erase ( num ) ;",
        "vector < int > num ;"
      ],
      "err_line": 11,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        9,
        15,
        33,
        38
      ],
      "mod_code": [
        "bool judge ( vector < int > num , int temp )",
        "vector < int , int > biao ;",
        "if ( biao [ num ] == 0 ) num . erase ( num ) ;",
        "map < int , int > :: iterator it ;"
      ],
      "err_line": 11,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        9,
        15,
        33,
        39
      ],
      "mod_code": [
        "bool judge ( vector < int > num , int temp )",
        "vector < int , int > biao ;",
        "if ( biao [ num ] == 0 ) num . erase ( num ) ;",
        "it = biao ( it ) ;"
      ],
      "err_line": 11,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        9,
        15,
        37
      ],
      "mod_code": [
        "bool judge ( vector < int > num , int temp )",
        "vector < int , int > biao ;",
        "vector < int > num ;"
      ],
      "err_line": 11,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        9,
        15,
        37,
        38
      ],
      "mod_code": [
        "bool judge ( vector < int > num , int temp )",
        "vector < int , int > biao ;",
        "vector < int > num ;",
        "map < int , int > :: iterator it ;"
      ],
      "err_line": 11,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        9,
        15,
        37,
        39
      ],
      "mod_code": [
        "bool judge ( vector < int > num , int temp )",
        "vector < int , int > biao ;",
        "vector < int > num ;",
        "it = biao ( it ) ;"
      ],
      "err_line": 11,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        9,
        15,
        38
      ],
      "mod_code": [
        "bool judge ( vector < int > num , int temp )",
        "vector < int , int > biao ;",
        "map < int , int > :: iterator it ;"
      ],
      "err_line": 11,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        9,
        15,
        38,
        39
      ],
      "mod_code": [
        "bool judge ( vector < int > num , int temp )",
        "vector < int , int > biao ;",
        "map < int , int > :: iterator it ;",
        "it = biao ( it ) ;"
      ],
      "err_line": 11,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        9,
        15,
        39
      ],
      "mod_code": [
        "bool judge ( vector < int > num , int temp )",
        "vector < int , int > biao ;",
        "it = biao ( it ) ;"
      ],
      "err_line": 11,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        9,
        33
      ],
      "mod_code": [
        "bool judge ( vector < int > num , int temp )",
        "if ( biao [ num ] == 0 ) num . erase ( num ) ;"
      ],
      "err_line": 11,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        9,
        33,
        37
      ],
      "mod_code": [
        "bool judge ( vector < int > num , int temp )",
        "if ( biao [ num ] == 0 ) num . erase ( num ) ;",
        "vector < int > num ;"
      ],
      "err_line": 11,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        9,
        33,
        37,
        38
      ],
      "mod_code": [
        "bool judge ( vector < int > num , int temp )",
        "if ( biao [ num ] == 0 ) num . erase ( num ) ;",
        "vector < int > num ;",
        "map < int , int > :: iterator it ;"
      ],
      "err_line": 11,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        9,
        33,
        37,
        39
      ],
      "mod_code": [
        "bool judge ( vector < int > num , int temp )",
        "if ( biao [ num ] == 0 ) num . erase ( num ) ;",
        "vector < int > num ;",
        "it = biao ( it ) ;"
      ],
      "err_line": 11,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        9,
        33,
        38
      ],
      "mod_code": [
        "bool judge ( vector < int > num , int temp )",
        "if ( biao [ num ] == 0 ) num . erase ( num ) ;",
        "map < int , int > :: iterator it ;"
      ],
      "err_line": 11,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        9,
        33,
        38,
        39
      ],
      "mod_code": [
        "bool judge ( vector < int > num , int temp )",
        "if ( biao [ num ] == 0 ) num . erase ( num ) ;",
        "map < int , int > :: iterator it ;",
        "it = biao ( it ) ;"
      ],
      "err_line": 11,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        9,
        33,
        39
      ],
      "mod_code": [
        "bool judge ( vector < int > num , int temp )",
        "if ( biao [ num ] == 0 ) num . erase ( num ) ;",
        "it = biao ( it ) ;"
      ],
      "err_line": 11,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        9,
        37
      ],
      "mod_code": [
        "bool judge ( vector < int > num , int temp )",
        "vector < int > num ;"
      ],
      "err_line": 11,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        9,
        37,
        38
      ],
      "mod_code": [
        "bool judge ( vector < int > num , int temp )",
        "vector < int > num ;",
        "map < int , int > :: iterator it ;"
      ],
      "err_line": 11,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        9,
        37,
        38,
        39
      ],
      "mod_code": [
        "bool judge ( vector < int > num , int temp )",
        "vector < int > num ;",
        "map < int , int > :: iterator it ;",
        "it = biao ( it ) ;"
      ],
      "err_line": 11,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        9,
        37,
        39
      ],
      "mod_code": [
        "bool judge ( vector < int > num , int temp )",
        "vector < int > num ;",
        "it = biao ( it ) ;"
      ],
      "err_line": 11,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        9,
        38
      ],
      "mod_code": [
        "bool judge ( vector < int > num , int temp )",
        "map < int , int > :: iterator it ;"
      ],
      "err_line": 11,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        9,
        38,
        39
      ],
      "mod_code": [
        "bool judge ( vector < int > num , int temp )",
        "map < int , int > :: iterator it ;",
        "it = biao ( it ) ;"
      ],
      "err_line": 11,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        9,
        39
      ],
      "mod_code": [
        "bool judge ( vector < int > num , int temp )",
        "it = biao ( it ) ;"
      ],
      "err_line": 11,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        11,
        15
      ],
      "mod_code": [
        "return ( num [ i ] [ i ] ) ;",
        "vector < int , int > biao ;"
      ],
      "err_line": 11,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        11,
        15,
        33
      ],
      "mod_code": [
        "return ( num [ i ] [ i ] ) ;",
        "vector < int , int > biao ;",
        "if ( biao [ num ] == 0 ) num . erase ( num ) ;"
      ],
      "err_line": 11,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        11,
        15,
        33,
        37
      ],
      "mod_code": [
        "return ( num [ i ] [ i ] ) ;",
        "vector < int , int > biao ;",
        "if ( biao [ num ] == 0 ) num . erase ( num ) ;",
        "vector < int > num ;"
      ],
      "err_line": 11,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        11,
        15,
        33,
        38
      ],
      "mod_code": [
        "return ( num [ i ] [ i ] ) ;",
        "vector < int , int > biao ;",
        "if ( biao [ num ] == 0 ) num . erase ( num ) ;",
        "map < int , int > :: iterator it ;"
      ],
      "err_line": 11,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        11,
        15,
        33,
        39
      ],
      "mod_code": [
        "return ( num [ i ] [ i ] ) ;",
        "vector < int , int > biao ;",
        "if ( biao [ num ] == 0 ) num . erase ( num ) ;",
        "it = biao ( it ) ;"
      ],
      "err_line": 11,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        11,
        15,
        37
      ],
      "mod_code": [
        "return ( num [ i ] [ i ] ) ;",
        "vector < int , int > biao ;",
        "vector < int > num ;"
      ],
      "err_line": 11,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        11,
        15,
        37,
        38
      ],
      "mod_code": [
        "return ( num [ i ] [ i ] ) ;",
        "vector < int , int > biao ;",
        "vector < int > num ;",
        "map < int , int > :: iterator it ;"
      ],
      "err_line": 11,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        11,
        15,
        37,
        39
      ],
      "mod_code": [
        "return ( num [ i ] [ i ] ) ;",
        "vector < int , int > biao ;",
        "vector < int > num ;",
        "it = biao ( it ) ;"
      ],
      "err_line": 11,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        11,
        15,
        38
      ],
      "mod_code": [
        "return ( num [ i ] [ i ] ) ;",
        "vector < int , int > biao ;",
        "map < int , int > :: iterator it ;"
      ],
      "err_line": 11,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        11,
        15,
        38,
        39
      ],
      "mod_code": [
        "return ( num [ i ] [ i ] ) ;",
        "vector < int , int > biao ;",
        "map < int , int > :: iterator it ;",
        "it = biao ( it ) ;"
      ],
      "err_line": 11,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        11,
        15,
        39
      ],
      "mod_code": [
        "return ( num [ i ] [ i ] ) ;",
        "vector < int , int > biao ;",
        "it = biao ( it ) ;"
      ],
      "err_line": 11,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        11,
        33
      ],
      "mod_code": [
        "return ( num [ i ] [ i ] ) ;",
        "if ( biao [ num ] == 0 ) num . erase ( num ) ;"
      ],
      "err_line": 11,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        11,
        33,
        37
      ],
      "mod_code": [
        "return ( num [ i ] [ i ] ) ;",
        "if ( biao [ num ] == 0 ) num . erase ( num ) ;",
        "vector < int > num ;"
      ],
      "err_line": 11,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        11,
        33,
        37,
        38
      ],
      "mod_code": [
        "return ( num [ i ] [ i ] ) ;",
        "if ( biao [ num ] == 0 ) num . erase ( num ) ;",
        "vector < int > num ;",
        "map < int , int > :: iterator it ;"
      ],
      "err_line": 11,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        11,
        33,
        37,
        39
      ],
      "mod_code": [
        "return ( num [ i ] [ i ] ) ;",
        "if ( biao [ num ] == 0 ) num . erase ( num ) ;",
        "vector < int > num ;",
        "it = biao ( it ) ;"
      ],
      "err_line": 11,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        11,
        33,
        38
      ],
      "mod_code": [
        "return ( num [ i ] [ i ] ) ;",
        "if ( biao [ num ] == 0 ) num . erase ( num ) ;",
        "map < int , int > :: iterator it ;"
      ],
      "err_line": 11,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        11,
        33,
        38,
        39
      ],
      "mod_code": [
        "return ( num [ i ] [ i ] ) ;",
        "if ( biao [ num ] == 0 ) num . erase ( num ) ;",
        "map < int , int > :: iterator it ;",
        "it = biao ( it ) ;"
      ],
      "err_line": 11,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        11,
        33,
        39
      ],
      "mod_code": [
        "return ( num [ i ] [ i ] ) ;",
        "if ( biao [ num ] == 0 ) num . erase ( num ) ;",
        "it = biao ( it ) ;"
      ],
      "err_line": 11,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        11,
        37
      ],
      "mod_code": [
        "return ( num [ i ] [ i ] ) ;",
        "vector < int > num ;"
      ],
      "err_line": 11,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        11,
        37,
        38
      ],
      "mod_code": [
        "return ( num [ i ] [ i ] ) ;",
        "vector < int > num ;",
        "map < int , int > :: iterator it ;"
      ],
      "err_line": 11,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        11,
        37,
        38,
        39
      ],
      "mod_code": [
        "return ( num [ i ] [ i ] ) ;",
        "vector < int > num ;",
        "map < int , int > :: iterator it ;",
        "it = biao ( it ) ;"
      ],
      "err_line": 11,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        11,
        37,
        39
      ],
      "mod_code": [
        "return ( num [ i ] [ i ] ) ;",
        "vector < int > num ;",
        "it = biao ( it ) ;"
      ],
      "err_line": 11,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        11,
        38
      ],
      "mod_code": [
        "return ( num [ i ] [ i ] ) ;",
        "map < int , int > :: iterator it ;"
      ],
      "err_line": 11,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        11,
        38,
        39
      ],
      "mod_code": [
        "return ( num [ i ] [ i ] ) ;",
        "map < int , int > :: iterator it ;",
        "it = biao ( it ) ;"
      ],
      "err_line": 11,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        11,
        39
      ],
      "mod_code": [
        "return ( num [ i ] [ i ] ) ;",
        "it = biao ( it ) ;"
      ],
      "err_line": 11,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        15,
        33
      ],
      "mod_code": [
        "vector < int , int > biao ;",
        "if ( biao [ num ] == 0 ) num . erase ( num ) ;"
      ],
      "err_line": 26,
      "err_msg": "no match for ‘operator[]’ (operand types are ‘std::vector<int, int>’ and ‘std::vector<int>’)"
    },
    {
      "mod_line": [
        15,
        33,
        37
      ],
      "mod_code": [
        "vector < int , int > biao ;",
        "if ( biao [ num ] == 0 ) num . erase ( num ) ;",
        "vector < int > num ;"
      ],
      "err_line": 26,
      "err_msg": "no match for ‘operator[]’ (operand types are ‘std::vector<int, int>’ and ‘std::vector<int>’)"
    },
    {
      "mod_line": [
        15,
        33,
        37,
        38
      ],
      "mod_code": [
        "vector < int , int > biao ;",
        "if ( biao [ num ] == 0 ) num . erase ( num ) ;",
        "vector < int > num ;",
        "map < int , int > :: iterator it ;"
      ],
      "err_line": 26,
      "err_msg": "no match for ‘operator[]’ (operand types are ‘std::vector<int, int>’ and ‘std::vector<int>’)"
    },
    {
      "mod_line": [
        15,
        33,
        37,
        39
      ],
      "mod_code": [
        "vector < int , int > biao ;",
        "if ( biao [ num ] == 0 ) num . erase ( num ) ;",
        "vector < int > num ;",
        "it = biao ( it ) ;"
      ],
      "err_line": 26,
      "err_msg": "no match for ‘operator[]’ (operand types are ‘std::vector<int, int>’ and ‘std::vector<int>’)"
    },
    {
      "mod_line": [
        15,
        33,
        38
      ],
      "mod_code": [
        "vector < int , int > biao ;",
        "if ( biao [ num ] == 0 ) num . erase ( num ) ;",
        "map < int , int > :: iterator it ;"
      ],
      "err_line": 26,
      "err_msg": "no match for ‘operator[]’ (operand types are ‘std::vector<int, int>’ and ‘std::vector<int>’)"
    },
    {
      "mod_line": [
        15,
        33,
        38,
        39
      ],
      "mod_code": [
        "vector < int , int > biao ;",
        "if ( biao [ num ] == 0 ) num . erase ( num ) ;",
        "map < int , int > :: iterator it ;",
        "it = biao ( it ) ;"
      ],
      "err_line": 26,
      "err_msg": "no match for ‘operator[]’ (operand types are ‘std::vector<int, int>’ and ‘std::vector<int>’)"
    },
    {
      "mod_line": [
        15,
        33,
        39
      ],
      "mod_code": [
        "vector < int , int > biao ;",
        "if ( biao [ num ] == 0 ) num . erase ( num ) ;",
        "it = biao ( it ) ;"
      ],
      "err_line": 26,
      "err_msg": "no match for ‘operator[]’ (operand types are ‘std::vector<int, int>’ and ‘std::vector<int>’)"
    },
    {
      "mod_line": [
        15,
        37
      ],
      "mod_code": [
        "vector < int , int > biao ;",
        "vector < int > num ;"
      ],
      "err_line": 26,
      "err_msg": "no match for ‘operator[]’ (operand types are ‘std::vector<int, int>’ and ‘std::vector<int>’)"
    },
    {
      "mod_line": [
        15,
        37,
        38
      ],
      "mod_code": [
        "vector < int , int > biao ;",
        "vector < int > num ;",
        "map < int , int > :: iterator it ;"
      ],
      "err_line": 26,
      "err_msg": "no match for ‘operator[]’ (operand types are ‘std::vector<int, int>’ and ‘std::vector<int>’)"
    },
    {
      "mod_line": [
        15,
        37,
        38,
        39
      ],
      "mod_code": [
        "vector < int , int > biao ;",
        "vector < int > num ;",
        "map < int , int > :: iterator it ;",
        "it = biao ( it ) ;"
      ],
      "err_line": 26,
      "err_msg": "no match for ‘operator[]’ (operand types are ‘std::vector<int, int>’ and ‘std::vector<int>’)"
    },
    {
      "mod_line": [
        15,
        37,
        39
      ],
      "mod_code": [
        "vector < int , int > biao ;",
        "vector < int > num ;",
        "it = biao ( it ) ;"
      ],
      "err_line": 26,
      "err_msg": "no match for ‘operator[]’ (operand types are ‘std::vector<int, int>’ and ‘std::vector<int>’)"
    },
    {
      "mod_line": [
        15,
        38
      ],
      "mod_code": [
        "vector < int , int > biao ;",
        "map < int , int > :: iterator it ;"
      ],
      "err_line": 26,
      "err_msg": "no match for ‘operator[]’ (operand types are ‘std::vector<int, int>’ and ‘std::vector<int>’)"
    },
    {
      "mod_line": [
        15,
        38,
        39
      ],
      "mod_code": [
        "vector < int , int > biao ;",
        "map < int , int > :: iterator it ;",
        "it = biao ( it ) ;"
      ],
      "err_line": 26,
      "err_msg": "no match for ‘operator[]’ (operand types are ‘std::vector<int, int>’ and ‘std::vector<int>’)"
    },
    {
      "mod_line": [
        15,
        39
      ],
      "mod_code": [
        "vector < int , int > biao ;",
        "it = biao ( it ) ;"
      ],
      "err_line": 26,
      "err_msg": "no match for ‘operator[]’ (operand types are ‘std::vector<int, int>’ and ‘std::vector<int>’)"
    },
    {
      "mod_line": [
        33,
        37
      ],
      "mod_code": [
        "if ( biao [ num ] == 0 ) num . erase ( num ) ;",
        "vector < int > num ;"
      ],
      "err_line": 33,
      "err_msg": "no matching function for call to ‘std::vector<int>::erase(std::vector<int>&)’"
    },
    {
      "mod_line": [
        33,
        37,
        38
      ],
      "mod_code": [
        "if ( biao [ num ] == 0 ) num . erase ( num ) ;",
        "vector < int > num ;",
        "map < int , int > :: iterator it ;"
      ],
      "err_line": 33,
      "err_msg": "no matching function for call to ‘std::vector<int>::erase(std::vector<int>&)’"
    },
    {
      "mod_line": [
        33,
        37,
        38,
        39
      ],
      "mod_code": [
        "if ( biao [ num ] == 0 ) num . erase ( num ) ;",
        "vector < int > num ;",
        "map < int , int > :: iterator it ;",
        "it = biao ( it ) ;"
      ],
      "err_line": 33,
      "err_msg": "no matching function for call to ‘std::vector<int>::erase(std::vector<int>&)’"
    },
    {
      "mod_line": [
        33,
        37,
        39
      ],
      "mod_code": [
        "if ( biao [ num ] == 0 ) num . erase ( num ) ;",
        "vector < int > num ;",
        "it = biao ( it ) ;"
      ],
      "err_line": 33,
      "err_msg": "no matching function for call to ‘std::vector<int>::erase(std::vector<int>&)’"
    },
    {
      "mod_line": [
        33,
        38
      ],
      "mod_code": [
        "if ( biao [ num ] == 0 ) num . erase ( num ) ;",
        "map < int , int > :: iterator it ;"
      ],
      "err_line": 33,
      "err_msg": "no matching function for call to ‘std::vector<int>::erase(std::vector<int>&)’"
    },
    {
      "mod_line": [
        33,
        38,
        39
      ],
      "mod_code": [
        "if ( biao [ num ] == 0 ) num . erase ( num ) ;",
        "map < int , int > :: iterator it ;",
        "it = biao ( it ) ;"
      ],
      "err_line": 33,
      "err_msg": "no matching function for call to ‘std::vector<int>::erase(std::vector<int>&)’"
    },
    {
      "mod_line": [
        33,
        39
      ],
      "mod_code": [
        "if ( biao [ num ] == 0 ) num . erase ( num ) ;",
        "it = biao ( it ) ;"
      ],
      "err_line": 33,
      "err_msg": "no matching function for call to ‘std::vector<int>::erase(std::vector<int>&)’"
    },
    {
      "mod_line": [
        37,
        38
      ],
      "mod_code": [
        "vector < int > num ;",
        "map < int , int > :: iterator it ;"
      ],
      "err_line": 39,
      "err_msg": "no match for ‘operator=’ (operand types are ‘std::map<int, int>::iterator {aka std::_Rb_tree_iterator<std::pair<const int, int> >}’ and ‘std::map<std::vector<int>, int>::iterator {aka std::_Rb_tree_iterator<std::pair<const std::vector<int>, int> >}’)"
    },
    {
      "mod_line": [
        37,
        38,
        39
      ],
      "mod_code": [
        "vector < int > num ;",
        "map < int , int > :: iterator it ;",
        "it = biao ( it ) ;"
      ],
      "err_line": 39,
      "err_msg": "no match for call to ‘(std::map<std::vector<int>, int>) (std::map<int, int>::iterator&)’"
    },
    {
      "mod_line": [
        37,
        39
      ],
      "mod_code": [
        "vector < int > num ;",
        "it = biao ( it ) ;"
      ],
      "err_line": 39,
      "err_msg": "no match for call to ‘(std::map<std::vector<int>, int>) (std::map<std::vector<int>, int>::iterator&)’"
    },
    {
      "mod_line": [
        38,
        39
      ],
      "mod_code": [
        "map < int , int > :: iterator it ;",
        "it = biao ( it ) ;"
      ],
      "err_line": 39,
      "err_msg": "no match for call to ‘(std::map<std::vector<int>, int>) (std::map<int, int>::iterator&)’"
    }
  ]
}