{
  "meta": {
    "index": 1918,
    "hitid": "3OID399FXG1Q7TFY6YMS96UPLUNFDQ",
    "workerid": "AIWEXPJAU66D9",
    "probid": "351A",
    "subid": "46816462"
  },
  "lines": [
    {
      "line": 0,
      "text": "frac is a double function with double argument x",
      "code": "double frac ( double x )",
      "indent": 0
    },
    {
      "line": 1,
      "text": "return x - ( x casted to long long )",
      "code": "return x - ( long long ) x ;",
      "indent": 1
    },
    {
      "line": 2,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    },
    {
      "line": 3,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 4,
      "text": "create integer n",
      "code": "int n ;",
      "indent": 1
    },
    {
      "line": 5,
      "text": "read variable n from the input",
      "code": "cin >> n ;",
      "indent": 1
    },
    {
      "line": 6,
      "text": "declare double variable diff with value 0",
      "code": "double diff = 0 ;",
      "indent": 1
    },
    {
      "line": 7,
      "text": "create new long long called c with value 0",
      "code": "long long c = 0 ;",
      "indent": 1
    },
    {
      "line": 8,
      "text": "a is a new vector of doubles",
      "code": "vector < double > a ;",
      "indent": 1
    },
    {
      "line": 9,
      "text": "loop i from 0 to 2 * n exclusive",
      "code": "for ( int i = 0 ; i < 2 * n ; i ++ )",
      "indent": 1
    },
    {
      "line": 10,
      "text": "x is a new double",
      "code": "double x ;",
      "indent": 2
    },
    {
      "line": 11,
      "text": "read x from the user input",
      "code": "cin >> x ;",
      "indent": 2
    },
    {
      "line": 12,
      "text": "push frac ( x ) to the end of a",
      "code": "a . push_back ( frac ( x ) ) ;",
      "indent": 2
    },
    {
      "line": 13,
      "text": "if a [ i ] = 0 , increment c",
      "code": "if ( a [ i ] == 0 ) c ++ ;",
      "indent": 2
    },
    {
      "line": 14,
      "text": "increase diff by a [ i ]",
      "code": "diff += a [ i ] ;",
      "indent": 2
    },
    {
      "line": 15,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 16,
      "text": "create new double ans = 1e9",
      "code": "double ans = 1e9 ;",
      "indent": 1
    },
    {
      "line": 17,
      "text": "for i from 0 to c inclusive",
      "code": "for ( int i = 0 ; i <= c ; i ++ )",
      "indent": 1
    },
    {
      "line": 18,
      "text": "if i is less than c - n , go to the start of the loop",
      "code": "if ( i < c - n ) { continue ; }",
      "indent": 2
    },
    {
      "line": 19,
      "text": "declare new double variable p = abs ( diff - ( n - i ) * 1 . 0 )",
      "code": "double p = abs ( diff - ( n - i ) * 1.0 ) ;",
      "indent": 2
    },
    {
      "line": 20,
      "text": "set ans to min of p and ans",
      "code": "ans = min ( p , ans ) ;",
      "indent": 2
    },
    {
      "line": 21,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 22,
      "text": "set decimal output precision to 3 and force it to usefixed floating - point notation",
      "code": "cout << setprecision ( 3 ) << fixed ;",
      "indent": 1
    },
    {
      "line": 23,
      "text": "print ans and ' \\ n ' to the output",
      "code": "cout << ans << ' \\n ' ;",
      "indent": 1
    },
    {
      "line": 24,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 25,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        1
      ],
      "mod_code": [
        "return ( x - ( long long ) ( x ) ;"
      ],
      "err_line": 1,
      "err_msg": "expected ‘)’ before ‘;’ token"
    },
    {
      "mod_line": [
        12
      ],
      "mod_code": [
        "a . push_back ( frac ) ;"
      ],
      "err_line": 12,
      "err_msg": "no matching function for call to ‘std::vector<double>::push_back(double (&)(double))’"
    },
    {
      "mod_line": [
        22
      ],
      "mod_code": [
        "cout . setf ( 3 , 3 ) ;"
      ],
      "err_line": 22,
      "err_msg": "invalid conversion from ‘int’ to ‘std::ios_base::fmtflags {aka std::_Ios_Fmtflags}’ [-fpermissive]"
    },
    {
      "mod_line": [
        0
      ],
      "mod_code": [
        "double frac ( double x ) ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        5
      ],
      "mod_code": [
        "while ( cin >> n )"
      ],
      "err_line": 14,
      "err_msg": "‘diff’ was not declared in this scope"
    },
    {
      "mod_line": [
        6
      ],
      "mod_code": [
        "double * diff = 0 ;"
      ],
      "err_line": 14,
      "err_msg": "invalid operands of types ‘double*’ and ‘double’ to binary ‘operator+’"
    },
    {
      "mod_line": [
        9
      ],
      "mod_code": [
        "for ( i = 0 ; i < 2 * n ; i ++ )"
      ],
      "err_line": 9,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        11
      ],
      "mod_code": [
        "int x ;"
      ],
      "err_line": 11,
      "err_msg": "conflicting declaration ‘int x’"
    },
    {
      "mod_line": [
        12
      ],
      "mod_code": [
        "a . push ( frac ) ;"
      ],
      "err_line": 12,
      "err_msg": "‘class std::vector<double>’ has no member named ‘push’"
    },
    {
      "mod_line": [
        16
      ],
      "mod_code": [
        "double ans = \" 1e9 ;"
      ],
      "err_line": 16,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        17
      ],
      "mod_code": [
        "for ( i = 0 ; i <= c ; i ++ )"
      ],
      "err_line": 17,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        20
      ],
      "mod_code": [
        "int ans = min ( p , ans ) ;"
      ],
      "err_line": 20,
      "err_msg": "no matching function for call to ‘min(double&, int&)’"
    },
    {
      "mod_line": [
        22
      ],
      "mod_code": [
        "cout . setf ( 3 , usefixed ) ;"
      ],
      "err_line": 22,
      "err_msg": "‘usefixed’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        12
      ],
      "mod_code": [
        "return ( x - ( long long ) ( x ) ;",
        "a . push_back ( frac ) ;"
      ],
      "err_line": 1,
      "err_msg": "expected ‘)’ before ‘;’ token"
    },
    {
      "mod_line": [
        1,
        12,
        22
      ],
      "mod_code": [
        "return ( x - ( long long ) ( x ) ;",
        "a . push_back ( frac ) ;",
        "cout . setf ( 3 , 3 ) ;"
      ],
      "err_line": 1,
      "err_msg": "expected ‘)’ before ‘;’ token"
    },
    {
      "mod_line": [
        1,
        12,
        22,
        16
      ],
      "mod_code": [
        "return ( x - ( long long ) ( x ) ;",
        "a . push_back ( frac ) ;",
        "cout . setf ( 3 , 3 ) ;",
        "double ans = \" 1e9 ;"
      ],
      "err_line": 16,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        1,
        12,
        22,
        20
      ],
      "mod_code": [
        "return ( x - ( long long ) ( x ) ;",
        "a . push_back ( frac ) ;",
        "cout . setf ( 3 , 3 ) ;",
        "int ans = min ( p , ans ) ;"
      ],
      "err_line": 1,
      "err_msg": "expected ‘)’ before ‘;’ token"
    },
    {
      "mod_line": [
        1,
        12,
        16
      ],
      "mod_code": [
        "return ( x - ( long long ) ( x ) ;",
        "a . push_back ( frac ) ;",
        "double ans = \" 1e9 ;"
      ],
      "err_line": 16,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        1,
        12,
        16,
        20
      ],
      "mod_code": [
        "return ( x - ( long long ) ( x ) ;",
        "a . push_back ( frac ) ;",
        "double ans = \" 1e9 ;",
        "int ans = min ( p , ans ) ;"
      ],
      "err_line": 16,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        1,
        12,
        20
      ],
      "mod_code": [
        "return ( x - ( long long ) ( x ) ;",
        "a . push_back ( frac ) ;",
        "int ans = min ( p , ans ) ;"
      ],
      "err_line": 1,
      "err_msg": "expected ‘)’ before ‘;’ token"
    },
    {
      "mod_line": [
        1,
        22
      ],
      "mod_code": [
        "return ( x - ( long long ) ( x ) ;",
        "cout . setf ( 3 , 3 ) ;"
      ],
      "err_line": 1,
      "err_msg": "expected ‘)’ before ‘;’ token"
    },
    {
      "mod_line": [
        1,
        22,
        16
      ],
      "mod_code": [
        "return ( x - ( long long ) ( x ) ;",
        "cout . setf ( 3 , 3 ) ;",
        "double ans = \" 1e9 ;"
      ],
      "err_line": 16,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        1,
        22,
        16,
        20
      ],
      "mod_code": [
        "return ( x - ( long long ) ( x ) ;",
        "cout . setf ( 3 , 3 ) ;",
        "double ans = \" 1e9 ;",
        "int ans = min ( p , ans ) ;"
      ],
      "err_line": 16,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        1,
        22,
        16,
        12
      ],
      "mod_code": [
        "return ( x - ( long long ) ( x ) ;",
        "cout . setf ( 3 , 3 ) ;",
        "double ans = \" 1e9 ;",
        "a . push ( frac ) ;"
      ],
      "err_line": 16,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        1,
        22,
        20
      ],
      "mod_code": [
        "return ( x - ( long long ) ( x ) ;",
        "cout . setf ( 3 , 3 ) ;",
        "int ans = min ( p , ans ) ;"
      ],
      "err_line": 1,
      "err_msg": "expected ‘)’ before ‘;’ token"
    },
    {
      "mod_line": [
        1,
        22,
        20,
        12
      ],
      "mod_code": [
        "return ( x - ( long long ) ( x ) ;",
        "cout . setf ( 3 , 3 ) ;",
        "int ans = min ( p , ans ) ;",
        "a . push ( frac ) ;"
      ],
      "err_line": 1,
      "err_msg": "expected ‘)’ before ‘;’ token"
    },
    {
      "mod_line": [
        1,
        22,
        12
      ],
      "mod_code": [
        "return ( x - ( long long ) ( x ) ;",
        "cout . setf ( 3 , 3 ) ;",
        "a . push ( frac ) ;"
      ],
      "err_line": 1,
      "err_msg": "expected ‘)’ before ‘;’ token"
    },
    {
      "mod_line": [
        1,
        16
      ],
      "mod_code": [
        "return ( x - ( long long ) ( x ) ;",
        "double ans = \" 1e9 ;"
      ],
      "err_line": 16,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        1,
        16,
        20
      ],
      "mod_code": [
        "return ( x - ( long long ) ( x ) ;",
        "double ans = \" 1e9 ;",
        "int ans = min ( p , ans ) ;"
      ],
      "err_line": 16,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        1,
        16,
        20,
        12
      ],
      "mod_code": [
        "return ( x - ( long long ) ( x ) ;",
        "double ans = \" 1e9 ;",
        "int ans = min ( p , ans ) ;",
        "a . push ( frac ) ;"
      ],
      "err_line": 16,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        1,
        16,
        12
      ],
      "mod_code": [
        "return ( x - ( long long ) ( x ) ;",
        "double ans = \" 1e9 ;",
        "a . push ( frac ) ;"
      ],
      "err_line": 16,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        1,
        20
      ],
      "mod_code": [
        "return ( x - ( long long ) ( x ) ;",
        "int ans = min ( p , ans ) ;"
      ],
      "err_line": 1,
      "err_msg": "expected ‘)’ before ‘;’ token"
    },
    {
      "mod_line": [
        1,
        20,
        12
      ],
      "mod_code": [
        "return ( x - ( long long ) ( x ) ;",
        "int ans = min ( p , ans ) ;",
        "a . push ( frac ) ;"
      ],
      "err_line": 1,
      "err_msg": "expected ‘)’ before ‘;’ token"
    },
    {
      "mod_line": [
        1,
        12
      ],
      "mod_code": [
        "return ( x - ( long long ) ( x ) ;",
        "a . push ( frac ) ;"
      ],
      "err_line": 1,
      "err_msg": "expected ‘)’ before ‘;’ token"
    },
    {
      "mod_line": [
        12,
        22
      ],
      "mod_code": [
        "a . push_back ( frac ) ;",
        "cout . setf ( 3 , 3 ) ;"
      ],
      "err_line": 12,
      "err_msg": "no matching function for call to ‘std::vector<double>::push_back(double (&)(double))’"
    },
    {
      "mod_line": [
        12,
        22,
        16
      ],
      "mod_code": [
        "a . push_back ( frac ) ;",
        "cout . setf ( 3 , 3 ) ;",
        "double ans = \" 1e9 ;"
      ],
      "err_line": 16,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        12,
        22,
        16,
        20
      ],
      "mod_code": [
        "a . push_back ( frac ) ;",
        "cout . setf ( 3 , 3 ) ;",
        "double ans = \" 1e9 ;",
        "int ans = min ( p , ans ) ;"
      ],
      "err_line": 16,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        12,
        22,
        20
      ],
      "mod_code": [
        "a . push_back ( frac ) ;",
        "cout . setf ( 3 , 3 ) ;",
        "int ans = min ( p , ans ) ;"
      ],
      "err_line": 12,
      "err_msg": "no matching function for call to ‘std::vector<double>::push_back(double (&)(double))’"
    },
    {
      "mod_line": [
        12,
        16
      ],
      "mod_code": [
        "a . push_back ( frac ) ;",
        "double ans = \" 1e9 ;"
      ],
      "err_line": 16,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        12,
        16,
        20
      ],
      "mod_code": [
        "a . push_back ( frac ) ;",
        "double ans = \" 1e9 ;",
        "int ans = min ( p , ans ) ;"
      ],
      "err_line": 16,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        12,
        20
      ],
      "mod_code": [
        "a . push_back ( frac ) ;",
        "int ans = min ( p , ans ) ;"
      ],
      "err_line": 12,
      "err_msg": "no matching function for call to ‘std::vector<double>::push_back(double (&)(double))’"
    },
    {
      "mod_line": [
        22,
        16
      ],
      "mod_code": [
        "cout . setf ( 3 , 3 ) ;",
        "double ans = \" 1e9 ;"
      ],
      "err_line": 16,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        22,
        16,
        20
      ],
      "mod_code": [
        "cout . setf ( 3 , 3 ) ;",
        "double ans = \" 1e9 ;",
        "int ans = min ( p , ans ) ;"
      ],
      "err_line": 16,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        22,
        16,
        20,
        12
      ],
      "mod_code": [
        "cout . setf ( 3 , 3 ) ;",
        "double ans = \" 1e9 ;",
        "int ans = min ( p , ans ) ;",
        "a . push ( frac ) ;"
      ],
      "err_line": 16,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        22,
        16,
        12
      ],
      "mod_code": [
        "cout . setf ( 3 , 3 ) ;",
        "double ans = \" 1e9 ;",
        "a . push ( frac ) ;"
      ],
      "err_line": 16,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        22,
        20
      ],
      "mod_code": [
        "cout . setf ( 3 , 3 ) ;",
        "int ans = min ( p , ans ) ;"
      ],
      "err_line": 20,
      "err_msg": "no matching function for call to ‘min(double&, int&)’"
    },
    {
      "mod_line": [
        22,
        20,
        12
      ],
      "mod_code": [
        "cout . setf ( 3 , 3 ) ;",
        "int ans = min ( p , ans ) ;",
        "a . push ( frac ) ;"
      ],
      "err_line": 12,
      "err_msg": "‘class std::vector<double>’ has no member named ‘push’"
    },
    {
      "mod_line": [
        22,
        12
      ],
      "mod_code": [
        "cout . setf ( 3 , 3 ) ;",
        "a . push ( frac ) ;"
      ],
      "err_line": 12,
      "err_msg": "‘class std::vector<double>’ has no member named ‘push’"
    },
    {
      "mod_line": [
        16,
        20
      ],
      "mod_code": [
        "double ans = \" 1e9 ;",
        "int ans = min ( p , ans ) ;"
      ],
      "err_line": 16,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        16,
        20,
        12
      ],
      "mod_code": [
        "double ans = \" 1e9 ;",
        "int ans = min ( p , ans ) ;",
        "a . push ( frac ) ;"
      ],
      "err_line": 16,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        16,
        12
      ],
      "mod_code": [
        "double ans = \" 1e9 ;",
        "a . push ( frac ) ;"
      ],
      "err_line": 16,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        20,
        12
      ],
      "mod_code": [
        "int ans = min ( p , ans ) ;",
        "a . push ( frac ) ;"
      ],
      "err_line": 12,
      "err_msg": "‘class std::vector<double>’ has no member named ‘push’"
    }
  ]
}