{
  "meta": {
    "index": 1207,
    "hitid": "3LVTFB9DE5CQA2FYM4YURQ1041IGQQ",
    "workerid": "A1AYVATMT88U1W",
    "probid": "870A",
    "subid": "47449570"
  },
  "lines": [
    {
      "line": 0,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 1,
      "text": "let n , m , ele , min1 , min2 , store be integers with values min1 is equal to 1000000 , min2 is equal to 1000000 and store is equal to 1000000 respectivwly",
      "code": "int n , m , ele , min1 = 1000000 , min2 = 1000000 , store = 1000000 ;",
      "indent": 1
    },
    {
      "line": 2,
      "text": "read n and m",
      "code": "cin >> n >> m ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "let arr = array of integers of length n",
      "code": "int arr [ n ] ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "let arr2 = array of integers of length m",
      "code": "int arr2 [ m ] ;",
      "indent": 1
    },
    {
      "line": 5,
      "text": "for ( integer i = 0 to n exclusive )",
      "code": "for ( int i = 0 ; i < n ; i ++ )",
      "indent": 1
    },
    {
      "line": 6,
      "text": "read ith element in array arr",
      "code": "cin >> arr [ i ] ;",
      "indent": 2
    },
    {
      "line": 7,
      "text": "if ( the ith element in array arr is less than min1 ) , min1 is equal to ith element in array arr",
      "code": "if ( arr [ i ] < min1 ) { min1 = arr [ i ] ; }",
      "indent": 2
    },
    {
      "line": 8,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 9,
      "text": "for ( integer i = 0 to m exclusive )",
      "code": "for ( int i = 0 ; i < m ; i ++ )",
      "indent": 1
    },
    {
      "line": 10,
      "text": "read ith element in array arr2",
      "code": "cin >> arr2 [ i ] ;",
      "indent": 2
    },
    {
      "line": 11,
      "text": "if ( the ith element in array arr2 is less than min2 ) , min2 is equal to ith element in array arr2",
      "code": "if ( arr2 [ i ] < min2 ) { min2 = arr2 [ i ] ; }",
      "indent": 2
    },
    {
      "line": 12,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 13,
      "text": "for ( integer i = 0 to n exclusive )",
      "code": "for ( int i = 0 ; i < n ; i ++ )",
      "indent": 1
    },
    {
      "line": 14,
      "text": "for ( integer j = 0 to m exclusive )",
      "code": "for ( int j = 0 ; j < m ; j ++ )",
      "indent": 2
    },
    {
      "line": 15,
      "text": "if ( ith element in array arr is equal to jth element in array arr2 and ith element in array arr is less than store ) , store = ith element in array arr",
      "code": "if ( arr [ i ] == arr2 [ j ] && arr [ i ] < store ) { store = arr [ i ] ; }",
      "indent": 3
    },
    {
      "line": 16,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 17,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 18,
      "text": "if ( store is equal to 1000000 )",
      "code": "if ( store == 1000000 )",
      "indent": 1
    },
    {
      "line": 19,
      "text": "if ( min1 is greater than min2 )",
      "code": "if ( min1 > min2 )",
      "indent": 2
    },
    {
      "line": 20,
      "text": "print min2 * 10 + min1",
      "code": "cout << min2 * 10 + min1 ;",
      "indent": 3
    },
    {
      "line": 21,
      "text": "else , do the following",
      "code": "else",
      "indent": 2
    },
    {
      "line": 22,
      "text": "print min1 * 10 + min2",
      "code": "cout << min1 * 10 + min2 ;",
      "indent": 3
    },
    {
      "line": 23,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 24,
      "text": "else , do the following",
      "code": "else",
      "indent": 1
    },
    {
      "line": 25,
      "text": "print store",
      "code": "cout << store ;",
      "indent": 2
    },
    {
      "line": 26,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 27,
      "text": "print newline",
      "code": "cout << \" \\n \" ;",
      "indent": 1
    },
    {
      "line": 28,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        1
      ],
      "mod_code": [
        "int n , m , ele , min1 = 1000000 ;"
      ],
      "err_line": 11,
      "err_msg": "‘min2’ was not declared in this scope"
    },
    {
      "mod_line": [
        15
      ],
      "mod_code": [
        "if ( arr [ i ] > store ) { arr2 = arr2 [ i ] ; }"
      ],
      "err_line": 15,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [m]’"
    },
    {
      "mod_line": [
        15
      ],
      "mod_code": [
        "if ( arr [ i ] > store ) arr2 = arr2 [ i ] ;"
      ],
      "err_line": 15,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [m]’"
    },
    {
      "mod_line": [
        1,
        15
      ],
      "mod_code": [
        "int n , m , ele , min1 = 1000000 ;",
        "if ( arr [ i ] > store ) { arr2 = arr2 [ i ] ; }"
      ],
      "err_line": 11,
      "err_msg": "‘min2’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        15,
        20
      ],
      "mod_code": [
        "int n , m , ele , min1 = 1000000 ;",
        "if ( arr [ i ] > store ) { arr2 = arr2 [ i ] ; }",
        "cout << min2 * 10 + min1 << endl ;"
      ],
      "err_line": 11,
      "err_msg": "‘min2’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        15,
        20,
        22
      ],
      "mod_code": [
        "int n , m , ele , min1 = 1000000 ;",
        "if ( arr [ i ] > store ) { arr2 = arr2 [ i ] ; }",
        "cout << min2 * 10 + min1 << endl ;",
        "cout << min1 * 10 + min2 << endl ;"
      ],
      "err_line": 11,
      "err_msg": "‘min2’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        15,
        20,
        25
      ],
      "mod_code": [
        "int n , m , ele , min1 = 1000000 ;",
        "if ( arr [ i ] > store ) { arr2 = arr2 [ i ] ; }",
        "cout << min2 * 10 + min1 << endl ;",
        "cout << store << endl ;"
      ],
      "err_line": 11,
      "err_msg": "‘min2’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        15,
        20,
        3
      ],
      "mod_code": [
        "int n , m , ele , min1 = 1000000 ;",
        "if ( arr [ i ] > store ) { arr2 = arr2 [ i ] ; }",
        "cout << min2 * 10 + min1 << endl ;",
        "char arr [ n ] ;"
      ],
      "err_line": 11,
      "err_msg": "‘min2’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        15,
        22
      ],
      "mod_code": [
        "int n , m , ele , min1 = 1000000 ;",
        "if ( arr [ i ] > store ) { arr2 = arr2 [ i ] ; }",
        "cout << min1 * 10 + min2 << endl ;"
      ],
      "err_line": 11,
      "err_msg": "‘min2’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        15,
        22,
        25
      ],
      "mod_code": [
        "int n , m , ele , min1 = 1000000 ;",
        "if ( arr [ i ] > store ) { arr2 = arr2 [ i ] ; }",
        "cout << min1 * 10 + min2 << endl ;",
        "cout << store << endl ;"
      ],
      "err_line": 11,
      "err_msg": "‘min2’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        15,
        22,
        3
      ],
      "mod_code": [
        "int n , m , ele , min1 = 1000000 ;",
        "if ( arr [ i ] > store ) { arr2 = arr2 [ i ] ; }",
        "cout << min1 * 10 + min2 << endl ;",
        "char arr [ n ] ;"
      ],
      "err_line": 11,
      "err_msg": "‘min2’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        15,
        25
      ],
      "mod_code": [
        "int n , m , ele , min1 = 1000000 ;",
        "if ( arr [ i ] > store ) { arr2 = arr2 [ i ] ; }",
        "cout << store << endl ;"
      ],
      "err_line": 11,
      "err_msg": "‘min2’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        15,
        25,
        3
      ],
      "mod_code": [
        "int n , m , ele , min1 = 1000000 ;",
        "if ( arr [ i ] > store ) { arr2 = arr2 [ i ] ; }",
        "cout << store << endl ;",
        "char arr [ n ] ;"
      ],
      "err_line": 11,
      "err_msg": "‘min2’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        15,
        3
      ],
      "mod_code": [
        "int n , m , ele , min1 = 1000000 ;",
        "if ( arr [ i ] > store ) { arr2 = arr2 [ i ] ; }",
        "char arr [ n ] ;"
      ],
      "err_line": 11,
      "err_msg": "‘min2’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        20
      ],
      "mod_code": [
        "int n , m , ele , min1 = 1000000 ;",
        "cout << min2 * 10 + min1 << endl ;"
      ],
      "err_line": 11,
      "err_msg": "‘min2’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        20,
        22
      ],
      "mod_code": [
        "int n , m , ele , min1 = 1000000 ;",
        "cout << min2 * 10 + min1 << endl ;",
        "cout << min1 * 10 + min2 << endl ;"
      ],
      "err_line": 11,
      "err_msg": "‘min2’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        20,
        22,
        25
      ],
      "mod_code": [
        "int n , m , ele , min1 = 1000000 ;",
        "cout << min2 * 10 + min1 << endl ;",
        "cout << min1 * 10 + min2 << endl ;",
        "cout << store << endl ;"
      ],
      "err_line": 11,
      "err_msg": "‘min2’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        20,
        22,
        3
      ],
      "mod_code": [
        "int n , m , ele , min1 = 1000000 ;",
        "cout << min2 * 10 + min1 << endl ;",
        "cout << min1 * 10 + min2 << endl ;",
        "char arr [ n ] ;"
      ],
      "err_line": 11,
      "err_msg": "‘min2’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        20,
        25
      ],
      "mod_code": [
        "int n , m , ele , min1 = 1000000 ;",
        "cout << min2 * 10 + min1 << endl ;",
        "cout << store << endl ;"
      ],
      "err_line": 11,
      "err_msg": "‘min2’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        20,
        25,
        3
      ],
      "mod_code": [
        "int n , m , ele , min1 = 1000000 ;",
        "cout << min2 * 10 + min1 << endl ;",
        "cout << store << endl ;",
        "char arr [ n ] ;"
      ],
      "err_line": 11,
      "err_msg": "‘min2’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        20,
        3
      ],
      "mod_code": [
        "int n , m , ele , min1 = 1000000 ;",
        "cout << min2 * 10 + min1 << endl ;",
        "char arr [ n ] ;"
      ],
      "err_line": 11,
      "err_msg": "‘min2’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        22
      ],
      "mod_code": [
        "int n , m , ele , min1 = 1000000 ;",
        "cout << min1 * 10 + min2 << endl ;"
      ],
      "err_line": 11,
      "err_msg": "‘min2’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        22,
        25
      ],
      "mod_code": [
        "int n , m , ele , min1 = 1000000 ;",
        "cout << min1 * 10 + min2 << endl ;",
        "cout << store << endl ;"
      ],
      "err_line": 11,
      "err_msg": "‘min2’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        22,
        25,
        3
      ],
      "mod_code": [
        "int n , m , ele , min1 = 1000000 ;",
        "cout << min1 * 10 + min2 << endl ;",
        "cout << store << endl ;",
        "char arr [ n ] ;"
      ],
      "err_line": 11,
      "err_msg": "‘min2’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        22,
        3
      ],
      "mod_code": [
        "int n , m , ele , min1 = 1000000 ;",
        "cout << min1 * 10 + min2 << endl ;",
        "char arr [ n ] ;"
      ],
      "err_line": 11,
      "err_msg": "‘min2’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        25
      ],
      "mod_code": [
        "int n , m , ele , min1 = 1000000 ;",
        "cout << store << endl ;"
      ],
      "err_line": 11,
      "err_msg": "‘min2’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        25,
        3
      ],
      "mod_code": [
        "int n , m , ele , min1 = 1000000 ;",
        "cout << store << endl ;",
        "char arr [ n ] ;"
      ],
      "err_line": 11,
      "err_msg": "‘min2’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        3
      ],
      "mod_code": [
        "int n , m , ele , min1 = 1000000 ;",
        "char arr [ n ] ;"
      ],
      "err_line": 11,
      "err_msg": "‘min2’ was not declared in this scope"
    },
    {
      "mod_line": [
        15,
        20
      ],
      "mod_code": [
        "if ( arr [ i ] > store ) { arr2 = arr2 [ i ] ; }",
        "cout << min2 * 10 + min1 << endl ;"
      ],
      "err_line": 15,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [m]’"
    },
    {
      "mod_line": [
        15,
        20,
        22
      ],
      "mod_code": [
        "if ( arr [ i ] > store ) { arr2 = arr2 [ i ] ; }",
        "cout << min2 * 10 + min1 << endl ;",
        "cout << min1 * 10 + min2 << endl ;"
      ],
      "err_line": 15,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [m]’"
    },
    {
      "mod_line": [
        15,
        20,
        22,
        25
      ],
      "mod_code": [
        "if ( arr [ i ] > store ) { arr2 = arr2 [ i ] ; }",
        "cout << min2 * 10 + min1 << endl ;",
        "cout << min1 * 10 + min2 << endl ;",
        "cout << store << endl ;"
      ],
      "err_line": 15,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [m]’"
    },
    {
      "mod_line": [
        15,
        20,
        22,
        3
      ],
      "mod_code": [
        "if ( arr [ i ] > store ) { arr2 = arr2 [ i ] ; }",
        "cout << min2 * 10 + min1 << endl ;",
        "cout << min1 * 10 + min2 << endl ;",
        "char arr [ n ] ;"
      ],
      "err_line": 15,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [m]’"
    },
    {
      "mod_line": [
        15,
        20,
        25
      ],
      "mod_code": [
        "if ( arr [ i ] > store ) { arr2 = arr2 [ i ] ; }",
        "cout << min2 * 10 + min1 << endl ;",
        "cout << store << endl ;"
      ],
      "err_line": 15,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [m]’"
    },
    {
      "mod_line": [
        15,
        20,
        25,
        3
      ],
      "mod_code": [
        "if ( arr [ i ] > store ) { arr2 = arr2 [ i ] ; }",
        "cout << min2 * 10 + min1 << endl ;",
        "cout << store << endl ;",
        "char arr [ n ] ;"
      ],
      "err_line": 15,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [m]’"
    },
    {
      "mod_line": [
        15,
        20,
        3
      ],
      "mod_code": [
        "if ( arr [ i ] > store ) { arr2 = arr2 [ i ] ; }",
        "cout << min2 * 10 + min1 << endl ;",
        "char arr [ n ] ;"
      ],
      "err_line": 15,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [m]’"
    },
    {
      "mod_line": [
        15,
        22
      ],
      "mod_code": [
        "if ( arr [ i ] > store ) { arr2 = arr2 [ i ] ; }",
        "cout << min1 * 10 + min2 << endl ;"
      ],
      "err_line": 15,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [m]’"
    },
    {
      "mod_line": [
        15,
        22,
        25
      ],
      "mod_code": [
        "if ( arr [ i ] > store ) { arr2 = arr2 [ i ] ; }",
        "cout << min1 * 10 + min2 << endl ;",
        "cout << store << endl ;"
      ],
      "err_line": 15,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [m]’"
    },
    {
      "mod_line": [
        15,
        22,
        25,
        3
      ],
      "mod_code": [
        "if ( arr [ i ] > store ) { arr2 = arr2 [ i ] ; }",
        "cout << min1 * 10 + min2 << endl ;",
        "cout << store << endl ;",
        "char arr [ n ] ;"
      ],
      "err_line": 15,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [m]’"
    },
    {
      "mod_line": [
        15,
        22,
        3
      ],
      "mod_code": [
        "if ( arr [ i ] > store ) { arr2 = arr2 [ i ] ; }",
        "cout << min1 * 10 + min2 << endl ;",
        "char arr [ n ] ;"
      ],
      "err_line": 15,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [m]’"
    },
    {
      "mod_line": [
        15,
        25
      ],
      "mod_code": [
        "if ( arr [ i ] > store ) { arr2 = arr2 [ i ] ; }",
        "cout << store << endl ;"
      ],
      "err_line": 15,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [m]’"
    },
    {
      "mod_line": [
        15,
        25,
        3
      ],
      "mod_code": [
        "if ( arr [ i ] > store ) { arr2 = arr2 [ i ] ; }",
        "cout << store << endl ;",
        "char arr [ n ] ;"
      ],
      "err_line": 15,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [m]’"
    },
    {
      "mod_line": [
        15,
        3
      ],
      "mod_code": [
        "if ( arr [ i ] > store ) { arr2 = arr2 [ i ] ; }",
        "char arr [ n ] ;"
      ],
      "err_line": 15,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [m]’"
    }
  ]
}