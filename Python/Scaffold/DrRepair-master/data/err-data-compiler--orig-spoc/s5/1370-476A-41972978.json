{
  "meta": {
    "index": 1370,
    "hitid": "3FI30CQHVKD193O3R9SIKATCOND6B1",
    "workerid": "A1C6BNLZXBOMT7",
    "probid": "476A",
    "subid": "41972978"
  },
  "lines": [
    {
      "line": 0,
      "text": "a = array of 100010 integers",
      "code": "int a [ 100010 ] ;",
      "indent": 0
    },
    {
      "line": 1,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 2,
      "text": "n , m = integers",
      "code": "int n , m ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "while reading n , m",
      "code": "while ( cin >> n >> m )",
      "indent": 1
    },
    {
      "line": 4,
      "text": "flag = integer with 1",
      "code": "int flag = 1 ;",
      "indent": 2
    },
    {
      "line": 5,
      "text": "for i = n + 1 / 2 to n exclusive",
      "code": "for ( int i = ( n + 1 ) / 2 ; i <= n ; i ++ )",
      "indent": 2
    },
    {
      "line": 6,
      "text": "if i modulo m is equal to 0",
      "code": "if ( i % m == 0 )",
      "indent": 3
    },
    {
      "line": 7,
      "text": "set flag to 0",
      "code": "flag = 0 ;",
      "indent": 4
    },
    {
      "line": 8,
      "text": "print i and a new line",
      "code": "cout << i << endl ;",
      "indent": 4
    },
    {
      "line": 9,
      "text": "Terminate the loop",
      "code": "break ;",
      "indent": 4
    },
    {
      "line": 10,
      "text": "DUMMY",
      "code": "}",
      "indent": 3
    },
    {
      "line": 11,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 12,
      "text": "if flag is not equal to 0 , print - 1 and a new line",
      "code": "if ( flag ) cout << - 1 << endl ;",
      "indent": 2
    },
    {
      "line": 13,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 14,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 15,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        3
      ],
      "mod_code": [
        "while ("
      ],
      "err_line": 4,
      "err_msg": "expected primary-expression before ‘{’ token"
    },
    {
      "mod_line": [
        5
      ],
      "mod_code": [
        "for ( i = n + 1 / 2 ; i < n ; i ++ )"
      ],
      "err_line": 5,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        9
      ],
      "mod_code": [
        "Terminate ;"
      ],
      "err_line": 9,
      "err_msg": "‘Terminate’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        3
      ],
      "mod_code": [
        "for ( int i = n + 1 / 2 ; i < n ; i ++ )",
        "while ("
      ],
      "err_line": 4,
      "err_msg": "expected primary-expression before ‘{’ token"
    },
    {
      "mod_line": [
        5,
        3,
        9
      ],
      "mod_code": [
        "for ( int i = n + 1 / 2 ; i < n ; i ++ )",
        "while (",
        "Terminate ;"
      ],
      "err_line": 4,
      "err_msg": "expected primary-expression before ‘{’ token"
    },
    {
      "mod_line": [
        5,
        3,
        9,
        7
      ],
      "mod_code": [
        "for ( int i = n + 1 / 2 ; i < n ; i ++ )",
        "while (",
        "Terminate ;",
        "int flag = 0 ;"
      ],
      "err_line": 4,
      "err_msg": "expected primary-expression before ‘{’ token"
    },
    {
      "mod_line": [
        5,
        3,
        7
      ],
      "mod_code": [
        "for ( int i = n + 1 / 2 ; i < n ; i ++ )",
        "while (",
        "int flag = 0 ;"
      ],
      "err_line": 4,
      "err_msg": "expected primary-expression before ‘{’ token"
    },
    {
      "mod_line": [
        5,
        9
      ],
      "mod_code": [
        "for ( int i = n + 1 / 2 ; i < n ; i ++ )",
        "Terminate ;"
      ],
      "err_line": 9,
      "err_msg": "‘Terminate’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        9,
        7
      ],
      "mod_code": [
        "for ( int i = n + 1 / 2 ; i < n ; i ++ )",
        "Terminate ;",
        "int flag = 0 ;"
      ],
      "err_line": 9,
      "err_msg": "‘Terminate’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        9
      ],
      "mod_code": [
        "while (",
        "Terminate ;"
      ],
      "err_line": 4,
      "err_msg": "expected primary-expression before ‘{’ token"
    },
    {
      "mod_line": [
        3,
        9,
        7
      ],
      "mod_code": [
        "while (",
        "Terminate ;",
        "int flag = 0 ;"
      ],
      "err_line": 4,
      "err_msg": "expected primary-expression before ‘{’ token"
    },
    {
      "mod_line": [
        3,
        9,
        7,
        5
      ],
      "mod_code": [
        "while (",
        "Terminate ;",
        "int flag = 0 ;",
        "for ( i = n + 1 / 2 ; i < n ; i ++ )"
      ],
      "err_line": 4,
      "err_msg": "expected primary-expression before ‘{’ token"
    },
    {
      "mod_line": [
        3,
        9,
        5
      ],
      "mod_code": [
        "while (",
        "Terminate ;",
        "for ( i = n + 1 / 2 ; i < n ; i ++ )"
      ],
      "err_line": 4,
      "err_msg": "expected primary-expression before ‘{’ token"
    },
    {
      "mod_line": [
        3,
        7
      ],
      "mod_code": [
        "while (",
        "int flag = 0 ;"
      ],
      "err_line": 4,
      "err_msg": "expected primary-expression before ‘{’ token"
    },
    {
      "mod_line": [
        3,
        7,
        5
      ],
      "mod_code": [
        "while (",
        "int flag = 0 ;",
        "for ( i = n + 1 / 2 ; i < n ; i ++ )"
      ],
      "err_line": 4,
      "err_msg": "expected primary-expression before ‘{’ token"
    },
    {
      "mod_line": [
        3,
        5
      ],
      "mod_code": [
        "while (",
        "for ( i = n + 1 / 2 ; i < n ; i ++ )"
      ],
      "err_line": 4,
      "err_msg": "expected primary-expression before ‘{’ token"
    },
    {
      "mod_line": [
        9,
        7
      ],
      "mod_code": [
        "Terminate ;",
        "int flag = 0 ;"
      ],
      "err_line": 9,
      "err_msg": "‘Terminate’ was not declared in this scope"
    },
    {
      "mod_line": [
        9,
        7,
        5
      ],
      "mod_code": [
        "Terminate ;",
        "int flag = 0 ;",
        "for ( i = n + 1 / 2 ; i < n ; i ++ )"
      ],
      "err_line": 5,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        9,
        5
      ],
      "mod_code": [
        "Terminate ;",
        "for ( i = n + 1 / 2 ; i < n ; i ++ )"
      ],
      "err_line": 5,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        7,
        5
      ],
      "mod_code": [
        "int flag = 0 ;",
        "for ( i = n + 1 / 2 ; i < n ; i ++ )"
      ],
      "err_line": 5,
      "err_msg": "‘i’ was not declared in this scope"
    }
  ]
}