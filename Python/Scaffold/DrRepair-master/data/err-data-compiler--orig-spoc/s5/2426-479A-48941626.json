{
  "meta": {
    "index": 2426,
    "hitid": "3KVQ0UJWPXFXE2M0HHE9FISX2TM5W2",
    "workerid": "A1AYVATMT88U1W",
    "probid": "479A",
    "subid": "48941626"
  },
  "lines": [
    {
      "line": 0,
      "text": "receive 3 integers from main fucntion and store them in a , b , c",
      "code": "int getAns ( int a , int b , int c )",
      "indent": 0
    },
    {
      "line": 1,
      "text": "x be a array of 6 integers",
      "code": "int x [ 6 ] ;",
      "indent": 1
    },
    {
      "line": 2,
      "text": "first element of array x equals a + ( b * c )",
      "code": "x [ 0 ] = a + ( b * c ) ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "second element of array x equals ( a * b ) + c",
      "code": "x [ 1 ] = ( a * b ) + c ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "third element of array x equals ( a + b ) * c",
      "code": "x [ 2 ] = ( a + b ) * c ;",
      "indent": 1
    },
    {
      "line": 5,
      "text": "third element of array x equals a * ( b + c )",
      "code": "x [ 3 ] = a * ( b + c ) ;",
      "indent": 1
    },
    {
      "line": 6,
      "text": "fourth element of array x equals a * b * c",
      "code": "x [ 4 ] = a * b * c ;",
      "indent": 1
    },
    {
      "line": 7,
      "text": "fifth element of array x equals a + b + c",
      "code": "x [ 5 ] = a + b + c ;",
      "indent": 1
    },
    {
      "line": 8,
      "text": "i is initialized as integer 6",
      "code": "int i = 6 ;",
      "indent": 1
    },
    {
      "line": 9,
      "text": "ans is an integer and equals to first element of array x",
      "code": "int ans = x [ 0 ] ;",
      "indent": 1
    },
    {
      "line": 10,
      "text": "while i is true even after decremented by 1",
      "code": "while ( i -- )",
      "indent": 1
    },
    {
      "line": 11,
      "text": "if ans < x [ i ] , ans is equal to x [ i ]",
      "code": "if ( ans < x [ i ] ) ans = x [ i ] ;",
      "indent": 2
    },
    {
      "line": 12,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 13,
      "text": "return ans to the main function",
      "code": "return ans ;",
      "indent": 1
    },
    {
      "line": 14,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    },
    {
      "line": 15,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 16,
      "text": "a , b , c are integers",
      "code": "int a , b , c ;",
      "indent": 1
    },
    {
      "line": 17,
      "text": "read a , b , c",
      "code": "cin >> a >> b >> c ;",
      "indent": 1
    },
    {
      "line": 18,
      "text": "print output of function getAns when a , b , c are sent to it and a new line",
      "code": "cout << getAns ( a , b , c ) << \" \\n \" ;",
      "indent": 1
    },
    {
      "line": 19,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        0
      ],
      "mod_code": [
        "int a [ 3 ] , b , c ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        2
      ],
      "mod_code": [
        "x . first = a + ( b * c ) ;"
      ],
      "err_line": 2,
      "err_msg": "request for member ‘first’ in ‘x’, which is of non-class type ‘int [6]’"
    },
    {
      "mod_line": [
        3
      ],
      "mod_code": [
        "x . second = ( a * b ) + c ;"
      ],
      "err_line": 3,
      "err_msg": "request for member ‘second’ in ‘x’, which is of non-class type ‘int [6]’"
    },
    {
      "mod_line": [
        4
      ],
      "mod_code": [
        "x = ( x + b ) * c ;"
      ],
      "err_line": 4,
      "err_msg": "invalid operands of types ‘int*’ and ‘int’ to binary ‘operator*’"
    },
    {
      "mod_line": [
        6
      ],
      "mod_code": [
        "x = a * b * c ;"
      ],
      "err_line": 6,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [6]’"
    },
    {
      "mod_line": [
        7
      ],
      "mod_code": [
        "int x [ b + c + c ] ;"
      ],
      "err_line": 7,
      "err_msg": "conflicting declaration ‘int x [((b + c) + c)]’"
    },
    {
      "mod_line": [
        9
      ],
      "mod_code": [
        "int ans = x . first ;"
      ],
      "err_line": 9,
      "err_msg": "request for member ‘first’ in ‘x’, which is of non-class type ‘int [6]’"
    },
    {
      "mod_line": [
        18
      ],
      "mod_code": [
        "cout << getAns ( a , b ) << \" \" << c = it << endl ;"
      ],
      "err_line": 18,
      "err_msg": "too few arguments to function ‘int getAns(int, int, int)’"
    },
    {
      "mod_line": [
        0
      ],
      "mod_code": [
        "int a , b , c = 0 ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        3
      ],
      "mod_code": [
        "x . second = ( x * b ) + c ;"
      ],
      "err_line": 3,
      "err_msg": "request for member ‘second’ in ‘x’, which is of non-class type ‘int [6]’"
    },
    {
      "mod_line": [
        4
      ],
      "mod_code": [
        "x . ( x + b ) * c ;"
      ],
      "err_line": 4,
      "err_msg": "expected unqualified-id before ‘(’ token"
    },
    {
      "mod_line": [
        7
      ],
      "mod_code": [
        "int x [ b + b + c ] ;"
      ],
      "err_line": 7,
      "err_msg": "conflicting declaration ‘int x [((b + b) + c)]’"
    },
    {
      "mod_line": [
        0,
        2
      ],
      "mod_code": [
        "int a [ 3 ] , b , c ;",
        "x . first = a + ( b * c ) ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        0,
        2,
        3
      ],
      "mod_code": [
        "int a [ 3 ] , b , c ;",
        "x . first = a + ( b * c ) ;",
        "x . second = ( a * b ) + c ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        0,
        2,
        3,
        4
      ],
      "mod_code": [
        "int a [ 3 ] , b , c ;",
        "x . first = a + ( b * c ) ;",
        "x . second = ( a * b ) + c ;",
        "x = ( x + b ) * c ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        0,
        2,
        3,
        5
      ],
      "mod_code": [
        "int a [ 3 ] , b , c ;",
        "x . first = a + ( b * c ) ;",
        "x . second = ( a * b ) + c ;",
        "x [ 0 ] = a * ( b + c ) ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        0,
        2,
        3,
        6
      ],
      "mod_code": [
        "int a [ 3 ] , b , c ;",
        "x . first = a + ( b * c ) ;",
        "x . second = ( a * b ) + c ;",
        "x = a * b * c ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        0,
        2,
        3,
        7
      ],
      "mod_code": [
        "int a [ 3 ] , b , c ;",
        "x . first = a + ( b * c ) ;",
        "x . second = ( a * b ) + c ;",
        "int x [ b + c + c ] ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        0,
        2,
        3,
        9
      ],
      "mod_code": [
        "int a [ 3 ] , b , c ;",
        "x . first = a + ( b * c ) ;",
        "x . second = ( a * b ) + c ;",
        "int ans = x . first ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        0,
        2,
        3,
        18
      ],
      "mod_code": [
        "int a [ 3 ] , b , c ;",
        "x . first = a + ( b * c ) ;",
        "x . second = ( a * b ) + c ;",
        "cout << getAns ( a , b ) << \" \" << c = it << endl ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        0,
        2,
        4
      ],
      "mod_code": [
        "int a [ 3 ] , b , c ;",
        "x . first = a + ( b * c ) ;",
        "x = ( x + b ) * c ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        0,
        2,
        4,
        5
      ],
      "mod_code": [
        "int a [ 3 ] , b , c ;",
        "x . first = a + ( b * c ) ;",
        "x = ( x + b ) * c ;",
        "x [ 0 ] = a * ( b + c ) ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        0,
        2,
        4,
        6
      ],
      "mod_code": [
        "int a [ 3 ] , b , c ;",
        "x . first = a + ( b * c ) ;",
        "x = ( x + b ) * c ;",
        "x = a * b * c ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        0,
        2,
        4,
        7
      ],
      "mod_code": [
        "int a [ 3 ] , b , c ;",
        "x . first = a + ( b * c ) ;",
        "x = ( x + b ) * c ;",
        "int x [ b + c + c ] ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        0,
        2,
        4,
        9
      ],
      "mod_code": [
        "int a [ 3 ] , b , c ;",
        "x . first = a + ( b * c ) ;",
        "x = ( x + b ) * c ;",
        "int ans = x . first ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        0,
        2,
        4,
        18
      ],
      "mod_code": [
        "int a [ 3 ] , b , c ;",
        "x . first = a + ( b * c ) ;",
        "x = ( x + b ) * c ;",
        "cout << getAns ( a , b ) << \" \" << c = it << endl ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        0,
        2,
        5
      ],
      "mod_code": [
        "int a [ 3 ] , b , c ;",
        "x . first = a + ( b * c ) ;",
        "x [ 0 ] = a * ( b + c ) ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        0,
        2,
        5,
        6
      ],
      "mod_code": [
        "int a [ 3 ] , b , c ;",
        "x . first = a + ( b * c ) ;",
        "x [ 0 ] = a * ( b + c ) ;",
        "x = a * b * c ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        0,
        2,
        5,
        7
      ],
      "mod_code": [
        "int a [ 3 ] , b , c ;",
        "x . first = a + ( b * c ) ;",
        "x [ 0 ] = a * ( b + c ) ;",
        "int x [ b + c + c ] ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        0,
        2,
        5,
        9
      ],
      "mod_code": [
        "int a [ 3 ] , b , c ;",
        "x . first = a + ( b * c ) ;",
        "x [ 0 ] = a * ( b + c ) ;",
        "int ans = x . first ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        0,
        2,
        5,
        18
      ],
      "mod_code": [
        "int a [ 3 ] , b , c ;",
        "x . first = a + ( b * c ) ;",
        "x [ 0 ] = a * ( b + c ) ;",
        "cout << getAns ( a , b ) << \" \" << c = it << endl ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        0,
        2,
        6
      ],
      "mod_code": [
        "int a [ 3 ] , b , c ;",
        "x . first = a + ( b * c ) ;",
        "x = a * b * c ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        0,
        2,
        6,
        7
      ],
      "mod_code": [
        "int a [ 3 ] , b , c ;",
        "x . first = a + ( b * c ) ;",
        "x = a * b * c ;",
        "int x [ b + c + c ] ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        0,
        2,
        6,
        9
      ],
      "mod_code": [
        "int a [ 3 ] , b , c ;",
        "x . first = a + ( b * c ) ;",
        "x = a * b * c ;",
        "int ans = x . first ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        0,
        2,
        6,
        18
      ],
      "mod_code": [
        "int a [ 3 ] , b , c ;",
        "x . first = a + ( b * c ) ;",
        "x = a * b * c ;",
        "cout << getAns ( a , b ) << \" \" << c = it << endl ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        0,
        2,
        7
      ],
      "mod_code": [
        "int a [ 3 ] , b , c ;",
        "x . first = a + ( b * c ) ;",
        "int x [ b + c + c ] ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        0,
        2,
        7,
        9
      ],
      "mod_code": [
        "int a [ 3 ] , b , c ;",
        "x . first = a + ( b * c ) ;",
        "int x [ b + c + c ] ;",
        "int ans = x . first ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        0,
        2,
        7,
        18
      ],
      "mod_code": [
        "int a [ 3 ] , b , c ;",
        "x . first = a + ( b * c ) ;",
        "int x [ b + c + c ] ;",
        "cout << getAns ( a , b ) << \" \" << c = it << endl ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        0,
        2,
        9
      ],
      "mod_code": [
        "int a [ 3 ] , b , c ;",
        "x . first = a + ( b * c ) ;",
        "int ans = x . first ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        0,
        2,
        9,
        18
      ],
      "mod_code": [
        "int a [ 3 ] , b , c ;",
        "x . first = a + ( b * c ) ;",
        "int ans = x . first ;",
        "cout << getAns ( a , b ) << \" \" << c = it << endl ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        0,
        2,
        18
      ],
      "mod_code": [
        "int a [ 3 ] , b , c ;",
        "x . first = a + ( b * c ) ;",
        "cout << getAns ( a , b ) << \" \" << c = it << endl ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        0,
        3
      ],
      "mod_code": [
        "int a [ 3 ] , b , c ;",
        "x . second = ( a * b ) + c ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        0,
        3,
        4
      ],
      "mod_code": [
        "int a [ 3 ] , b , c ;",
        "x . second = ( a * b ) + c ;",
        "x = ( x + b ) * c ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        0,
        3,
        4,
        5
      ],
      "mod_code": [
        "int a [ 3 ] , b , c ;",
        "x . second = ( a * b ) + c ;",
        "x = ( x + b ) * c ;",
        "x [ 0 ] = a * ( b + c ) ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        0,
        3,
        4,
        6
      ],
      "mod_code": [
        "int a [ 3 ] , b , c ;",
        "x . second = ( a * b ) + c ;",
        "x = ( x + b ) * c ;",
        "x = a * b * c ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        0,
        3,
        4,
        7
      ],
      "mod_code": [
        "int a [ 3 ] , b , c ;",
        "x . second = ( a * b ) + c ;",
        "x = ( x + b ) * c ;",
        "int x [ b + c + c ] ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        0,
        3,
        4,
        9
      ],
      "mod_code": [
        "int a [ 3 ] , b , c ;",
        "x . second = ( a * b ) + c ;",
        "x = ( x + b ) * c ;",
        "int ans = x . first ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        0,
        3,
        4,
        18
      ],
      "mod_code": [
        "int a [ 3 ] , b , c ;",
        "x . second = ( a * b ) + c ;",
        "x = ( x + b ) * c ;",
        "cout << getAns ( a , b ) << \" \" << c = it << endl ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        0,
        3,
        5
      ],
      "mod_code": [
        "int a [ 3 ] , b , c ;",
        "x . second = ( a * b ) + c ;",
        "x [ 0 ] = a * ( b + c ) ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        0,
        3,
        5,
        6
      ],
      "mod_code": [
        "int a [ 3 ] , b , c ;",
        "x . second = ( a * b ) + c ;",
        "x [ 0 ] = a * ( b + c ) ;",
        "x = a * b * c ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        0,
        3,
        5,
        7
      ],
      "mod_code": [
        "int a [ 3 ] , b , c ;",
        "x . second = ( a * b ) + c ;",
        "x [ 0 ] = a * ( b + c ) ;",
        "int x [ b + c + c ] ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        0,
        3,
        5,
        9
      ],
      "mod_code": [
        "int a [ 3 ] , b , c ;",
        "x . second = ( a * b ) + c ;",
        "x [ 0 ] = a * ( b + c ) ;",
        "int ans = x . first ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        0,
        3,
        5,
        18
      ],
      "mod_code": [
        "int a [ 3 ] , b , c ;",
        "x . second = ( a * b ) + c ;",
        "x [ 0 ] = a * ( b + c ) ;",
        "cout << getAns ( a , b ) << \" \" << c = it << endl ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        0,
        3,
        6
      ],
      "mod_code": [
        "int a [ 3 ] , b , c ;",
        "x . second = ( a * b ) + c ;",
        "x = a * b * c ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        0,
        3,
        6,
        7
      ],
      "mod_code": [
        "int a [ 3 ] , b , c ;",
        "x . second = ( a * b ) + c ;",
        "x = a * b * c ;",
        "int x [ b + c + c ] ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        0,
        3,
        6,
        9
      ],
      "mod_code": [
        "int a [ 3 ] , b , c ;",
        "x . second = ( a * b ) + c ;",
        "x = a * b * c ;",
        "int ans = x . first ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        0,
        3,
        6,
        18
      ],
      "mod_code": [
        "int a [ 3 ] , b , c ;",
        "x . second = ( a * b ) + c ;",
        "x = a * b * c ;",
        "cout << getAns ( a , b ) << \" \" << c = it << endl ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        0,
        3,
        7
      ],
      "mod_code": [
        "int a [ 3 ] , b , c ;",
        "x . second = ( a * b ) + c ;",
        "int x [ b + c + c ] ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        0,
        3,
        7,
        9
      ],
      "mod_code": [
        "int a [ 3 ] , b , c ;",
        "x . second = ( a * b ) + c ;",
        "int x [ b + c + c ] ;",
        "int ans = x . first ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        0,
        3,
        7,
        18
      ],
      "mod_code": [
        "int a [ 3 ] , b , c ;",
        "x . second = ( a * b ) + c ;",
        "int x [ b + c + c ] ;",
        "cout << getAns ( a , b ) << \" \" << c = it << endl ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        0,
        3,
        9
      ],
      "mod_code": [
        "int a [ 3 ] , b , c ;",
        "x . second = ( a * b ) + c ;",
        "int ans = x . first ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        0,
        3,
        9,
        18
      ],
      "mod_code": [
        "int a [ 3 ] , b , c ;",
        "x . second = ( a * b ) + c ;",
        "int ans = x . first ;",
        "cout << getAns ( a , b ) << \" \" << c = it << endl ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        0,
        3,
        18
      ],
      "mod_code": [
        "int a [ 3 ] , b , c ;",
        "x . second = ( a * b ) + c ;",
        "cout << getAns ( a , b ) << \" \" << c = it << endl ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        0,
        4
      ],
      "mod_code": [
        "int a [ 3 ] , b , c ;",
        "x = ( x + b ) * c ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        0,
        4,
        5
      ],
      "mod_code": [
        "int a [ 3 ] , b , c ;",
        "x = ( x + b ) * c ;",
        "x [ 0 ] = a * ( b + c ) ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        0,
        4,
        5,
        6
      ],
      "mod_code": [
        "int a [ 3 ] , b , c ;",
        "x = ( x + b ) * c ;",
        "x [ 0 ] = a * ( b + c ) ;",
        "x = a * b * c ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        0,
        4,
        5,
        7
      ],
      "mod_code": [
        "int a [ 3 ] , b , c ;",
        "x = ( x + b ) * c ;",
        "x [ 0 ] = a * ( b + c ) ;",
        "int x [ b + c + c ] ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        0,
        4,
        5,
        9
      ],
      "mod_code": [
        "int a [ 3 ] , b , c ;",
        "x = ( x + b ) * c ;",
        "x [ 0 ] = a * ( b + c ) ;",
        "int ans = x . first ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        0,
        4,
        5,
        18
      ],
      "mod_code": [
        "int a [ 3 ] , b , c ;",
        "x = ( x + b ) * c ;",
        "x [ 0 ] = a * ( b + c ) ;",
        "cout << getAns ( a , b ) << \" \" << c = it << endl ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        0,
        4,
        6
      ],
      "mod_code": [
        "int a [ 3 ] , b , c ;",
        "x = ( x + b ) * c ;",
        "x = a * b * c ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        0,
        4,
        6,
        7
      ],
      "mod_code": [
        "int a [ 3 ] , b , c ;",
        "x = ( x + b ) * c ;",
        "x = a * b * c ;",
        "int x [ b + c + c ] ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        0,
        4,
        6,
        9
      ],
      "mod_code": [
        "int a [ 3 ] , b , c ;",
        "x = ( x + b ) * c ;",
        "x = a * b * c ;",
        "int ans = x . first ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        0,
        4,
        6,
        18
      ],
      "mod_code": [
        "int a [ 3 ] , b , c ;",
        "x = ( x + b ) * c ;",
        "x = a * b * c ;",
        "cout << getAns ( a , b ) << \" \" << c = it << endl ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        0,
        4,
        7
      ],
      "mod_code": [
        "int a [ 3 ] , b , c ;",
        "x = ( x + b ) * c ;",
        "int x [ b + c + c ] ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        0,
        4,
        7,
        9
      ],
      "mod_code": [
        "int a [ 3 ] , b , c ;",
        "x = ( x + b ) * c ;",
        "int x [ b + c + c ] ;",
        "int ans = x . first ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        0,
        4,
        7,
        18
      ],
      "mod_code": [
        "int a [ 3 ] , b , c ;",
        "x = ( x + b ) * c ;",
        "int x [ b + c + c ] ;",
        "cout << getAns ( a , b ) << \" \" << c = it << endl ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        0,
        4,
        9
      ],
      "mod_code": [
        "int a [ 3 ] , b , c ;",
        "x = ( x + b ) * c ;",
        "int ans = x . first ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        0,
        4,
        9,
        18
      ],
      "mod_code": [
        "int a [ 3 ] , b , c ;",
        "x = ( x + b ) * c ;",
        "int ans = x . first ;",
        "cout << getAns ( a , b ) << \" \" << c = it << endl ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        0,
        4,
        18
      ],
      "mod_code": [
        "int a [ 3 ] , b , c ;",
        "x = ( x + b ) * c ;",
        "cout << getAns ( a , b ) << \" \" << c = it << endl ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        0,
        5
      ],
      "mod_code": [
        "int a [ 3 ] , b , c ;",
        "x [ 0 ] = a * ( b + c ) ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        0,
        5,
        6
      ],
      "mod_code": [
        "int a [ 3 ] , b , c ;",
        "x [ 0 ] = a * ( b + c ) ;",
        "x = a * b * c ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        0,
        5,
        6,
        7
      ],
      "mod_code": [
        "int a [ 3 ] , b , c ;",
        "x [ 0 ] = a * ( b + c ) ;",
        "x = a * b * c ;",
        "int x [ b + c + c ] ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        0,
        5,
        6,
        9
      ],
      "mod_code": [
        "int a [ 3 ] , b , c ;",
        "x [ 0 ] = a * ( b + c ) ;",
        "x = a * b * c ;",
        "int ans = x . first ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        0,
        5,
        6,
        18
      ],
      "mod_code": [
        "int a [ 3 ] , b , c ;",
        "x [ 0 ] = a * ( b + c ) ;",
        "x = a * b * c ;",
        "cout << getAns ( a , b ) << \" \" << c = it << endl ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        0,
        5,
        7
      ],
      "mod_code": [
        "int a [ 3 ] , b , c ;",
        "x [ 0 ] = a * ( b + c ) ;",
        "int x [ b + c + c ] ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        0,
        5,
        7,
        9
      ],
      "mod_code": [
        "int a [ 3 ] , b , c ;",
        "x [ 0 ] = a * ( b + c ) ;",
        "int x [ b + c + c ] ;",
        "int ans = x . first ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        0,
        5,
        7,
        18
      ],
      "mod_code": [
        "int a [ 3 ] , b , c ;",
        "x [ 0 ] = a * ( b + c ) ;",
        "int x [ b + c + c ] ;",
        "cout << getAns ( a , b ) << \" \" << c = it << endl ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        0,
        5,
        9
      ],
      "mod_code": [
        "int a [ 3 ] , b , c ;",
        "x [ 0 ] = a * ( b + c ) ;",
        "int ans = x . first ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        0,
        5,
        9,
        18
      ],
      "mod_code": [
        "int a [ 3 ] , b , c ;",
        "x [ 0 ] = a * ( b + c ) ;",
        "int ans = x . first ;",
        "cout << getAns ( a , b ) << \" \" << c = it << endl ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        0,
        5,
        18
      ],
      "mod_code": [
        "int a [ 3 ] , b , c ;",
        "x [ 0 ] = a * ( b + c ) ;",
        "cout << getAns ( a , b ) << \" \" << c = it << endl ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        0,
        6
      ],
      "mod_code": [
        "int a [ 3 ] , b , c ;",
        "x = a * b * c ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        0,
        6,
        7
      ],
      "mod_code": [
        "int a [ 3 ] , b , c ;",
        "x = a * b * c ;",
        "int x [ b + c + c ] ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        0,
        6,
        7,
        9
      ],
      "mod_code": [
        "int a [ 3 ] , b , c ;",
        "x = a * b * c ;",
        "int x [ b + c + c ] ;",
        "int ans = x . first ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        0,
        6,
        7,
        18
      ],
      "mod_code": [
        "int a [ 3 ] , b , c ;",
        "x = a * b * c ;",
        "int x [ b + c + c ] ;",
        "cout << getAns ( a , b ) << \" \" << c = it << endl ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        0,
        6,
        9
      ],
      "mod_code": [
        "int a [ 3 ] , b , c ;",
        "x = a * b * c ;",
        "int ans = x . first ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        0,
        6,
        9,
        18
      ],
      "mod_code": [
        "int a [ 3 ] , b , c ;",
        "x = a * b * c ;",
        "int ans = x . first ;",
        "cout << getAns ( a , b ) << \" \" << c = it << endl ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        0,
        6,
        18
      ],
      "mod_code": [
        "int a [ 3 ] , b , c ;",
        "x = a * b * c ;",
        "cout << getAns ( a , b ) << \" \" << c = it << endl ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        0,
        7
      ],
      "mod_code": [
        "int a [ 3 ] , b , c ;",
        "int x [ b + c + c ] ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        0,
        7,
        9
      ],
      "mod_code": [
        "int a [ 3 ] , b , c ;",
        "int x [ b + c + c ] ;",
        "int ans = x . first ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        0,
        7,
        9,
        18
      ],
      "mod_code": [
        "int a [ 3 ] , b , c ;",
        "int x [ b + c + c ] ;",
        "int ans = x . first ;",
        "cout << getAns ( a , b ) << \" \" << c = it << endl ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        0,
        7,
        18
      ],
      "mod_code": [
        "int a [ 3 ] , b , c ;",
        "int x [ b + c + c ] ;",
        "cout << getAns ( a , b ) << \" \" << c = it << endl ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        0,
        9
      ],
      "mod_code": [
        "int a [ 3 ] , b , c ;",
        "int ans = x . first ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        0,
        9,
        18
      ],
      "mod_code": [
        "int a [ 3 ] , b , c ;",
        "int ans = x . first ;",
        "cout << getAns ( a , b ) << \" \" << c = it << endl ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        0,
        18
      ],
      "mod_code": [
        "int a [ 3 ] , b , c ;",
        "cout << getAns ( a , b ) << \" \" << c = it << endl ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        2,
        3
      ],
      "mod_code": [
        "x . first = a + ( b * c ) ;",
        "x . second = ( a * b ) + c ;"
      ],
      "err_line": 2,
      "err_msg": "request for member ‘first’ in ‘x’, which is of non-class type ‘int [6]’"
    },
    {
      "mod_line": [
        2,
        3,
        4
      ],
      "mod_code": [
        "x . first = a + ( b * c ) ;",
        "x . second = ( a * b ) + c ;",
        "x = ( x + b ) * c ;"
      ],
      "err_line": 2,
      "err_msg": "request for member ‘first’ in ‘x’, which is of non-class type ‘int [6]’"
    },
    {
      "mod_line": [
        2,
        3,
        4,
        5
      ],
      "mod_code": [
        "x . first = a + ( b * c ) ;",
        "x . second = ( a * b ) + c ;",
        "x = ( x + b ) * c ;",
        "x [ 0 ] = a * ( b + c ) ;"
      ],
      "err_line": 2,
      "err_msg": "request for member ‘first’ in ‘x’, which is of non-class type ‘int [6]’"
    },
    {
      "mod_line": [
        2,
        3,
        4,
        6
      ],
      "mod_code": [
        "x . first = a + ( b * c ) ;",
        "x . second = ( a * b ) + c ;",
        "x = ( x + b ) * c ;",
        "x = a * b * c ;"
      ],
      "err_line": 2,
      "err_msg": "request for member ‘first’ in ‘x’, which is of non-class type ‘int [6]’"
    },
    {
      "mod_line": [
        2,
        3,
        4,
        7
      ],
      "mod_code": [
        "x . first = a + ( b * c ) ;",
        "x . second = ( a * b ) + c ;",
        "x = ( x + b ) * c ;",
        "int x [ b + c + c ] ;"
      ],
      "err_line": 2,
      "err_msg": "request for member ‘first’ in ‘x’, which is of non-class type ‘int [6]’"
    },
    {
      "mod_line": [
        2,
        3,
        4,
        9
      ],
      "mod_code": [
        "x . first = a + ( b * c ) ;",
        "x . second = ( a * b ) + c ;",
        "x = ( x + b ) * c ;",
        "int ans = x . first ;"
      ],
      "err_line": 2,
      "err_msg": "request for member ‘first’ in ‘x’, which is of non-class type ‘int [6]’"
    },
    {
      "mod_line": [
        2,
        3,
        4,
        18
      ],
      "mod_code": [
        "x . first = a + ( b * c ) ;",
        "x . second = ( a * b ) + c ;",
        "x = ( x + b ) * c ;",
        "cout << getAns ( a , b ) << \" \" << c = it << endl ;"
      ],
      "err_line": 2,
      "err_msg": "request for member ‘first’ in ‘x’, which is of non-class type ‘int [6]’"
    },
    {
      "mod_line": [
        2,
        3,
        5
      ],
      "mod_code": [
        "x . first = a + ( b * c ) ;",
        "x . second = ( a * b ) + c ;",
        "x [ 0 ] = a * ( b + c ) ;"
      ],
      "err_line": 2,
      "err_msg": "request for member ‘first’ in ‘x’, which is of non-class type ‘int [6]’"
    },
    {
      "mod_line": [
        2,
        3,
        5,
        6
      ],
      "mod_code": [
        "x . first = a + ( b * c ) ;",
        "x . second = ( a * b ) + c ;",
        "x [ 0 ] = a * ( b + c ) ;",
        "x = a * b * c ;"
      ],
      "err_line": 2,
      "err_msg": "request for member ‘first’ in ‘x’, which is of non-class type ‘int [6]’"
    },
    {
      "mod_line": [
        2,
        3,
        5,
        7
      ],
      "mod_code": [
        "x . first = a + ( b * c ) ;",
        "x . second = ( a * b ) + c ;",
        "x [ 0 ] = a * ( b + c ) ;",
        "int x [ b + c + c ] ;"
      ],
      "err_line": 2,
      "err_msg": "request for member ‘first’ in ‘x’, which is of non-class type ‘int [6]’"
    },
    {
      "mod_line": [
        2,
        3,
        5,
        9
      ],
      "mod_code": [
        "x . first = a + ( b * c ) ;",
        "x . second = ( a * b ) + c ;",
        "x [ 0 ] = a * ( b + c ) ;",
        "int ans = x . first ;"
      ],
      "err_line": 2,
      "err_msg": "request for member ‘first’ in ‘x’, which is of non-class type ‘int [6]’"
    },
    {
      "mod_line": [
        2,
        3,
        5,
        18
      ],
      "mod_code": [
        "x . first = a + ( b * c ) ;",
        "x . second = ( a * b ) + c ;",
        "x [ 0 ] = a * ( b + c ) ;",
        "cout << getAns ( a , b ) << \" \" << c = it << endl ;"
      ],
      "err_line": 2,
      "err_msg": "request for member ‘first’ in ‘x’, which is of non-class type ‘int [6]’"
    },
    {
      "mod_line": [
        2,
        3,
        6
      ],
      "mod_code": [
        "x . first = a + ( b * c ) ;",
        "x . second = ( a * b ) + c ;",
        "x = a * b * c ;"
      ],
      "err_line": 2,
      "err_msg": "request for member ‘first’ in ‘x’, which is of non-class type ‘int [6]’"
    },
    {
      "mod_line": [
        2,
        3,
        6,
        7
      ],
      "mod_code": [
        "x . first = a + ( b * c ) ;",
        "x . second = ( a * b ) + c ;",
        "x = a * b * c ;",
        "int x [ b + c + c ] ;"
      ],
      "err_line": 2,
      "err_msg": "request for member ‘first’ in ‘x’, which is of non-class type ‘int [6]’"
    },
    {
      "mod_line": [
        2,
        3,
        6,
        9
      ],
      "mod_code": [
        "x . first = a + ( b * c ) ;",
        "x . second = ( a * b ) + c ;",
        "x = a * b * c ;",
        "int ans = x . first ;"
      ],
      "err_line": 2,
      "err_msg": "request for member ‘first’ in ‘x’, which is of non-class type ‘int [6]’"
    },
    {
      "mod_line": [
        2,
        3,
        6,
        18
      ],
      "mod_code": [
        "x . first = a + ( b * c ) ;",
        "x . second = ( a * b ) + c ;",
        "x = a * b * c ;",
        "cout << getAns ( a , b ) << \" \" << c = it << endl ;"
      ],
      "err_line": 2,
      "err_msg": "request for member ‘first’ in ‘x’, which is of non-class type ‘int [6]’"
    },
    {
      "mod_line": [
        2,
        3,
        7
      ],
      "mod_code": [
        "x . first = a + ( b * c ) ;",
        "x . second = ( a * b ) + c ;",
        "int x [ b + c + c ] ;"
      ],
      "err_line": 2,
      "err_msg": "request for member ‘first’ in ‘x’, which is of non-class type ‘int [6]’"
    },
    {
      "mod_line": [
        2,
        3,
        7,
        9
      ],
      "mod_code": [
        "x . first = a + ( b * c ) ;",
        "x . second = ( a * b ) + c ;",
        "int x [ b + c + c ] ;",
        "int ans = x . first ;"
      ],
      "err_line": 2,
      "err_msg": "request for member ‘first’ in ‘x’, which is of non-class type ‘int [6]’"
    },
    {
      "mod_line": [
        2,
        3,
        7,
        18
      ],
      "mod_code": [
        "x . first = a + ( b * c ) ;",
        "x . second = ( a * b ) + c ;",
        "int x [ b + c + c ] ;",
        "cout << getAns ( a , b ) << \" \" << c = it << endl ;"
      ],
      "err_line": 2,
      "err_msg": "request for member ‘first’ in ‘x’, which is of non-class type ‘int [6]’"
    },
    {
      "mod_line": [
        2,
        3,
        9
      ],
      "mod_code": [
        "x . first = a + ( b * c ) ;",
        "x . second = ( a * b ) + c ;",
        "int ans = x . first ;"
      ],
      "err_line": 2,
      "err_msg": "request for member ‘first’ in ‘x’, which is of non-class type ‘int [6]’"
    },
    {
      "mod_line": [
        2,
        3,
        9,
        18
      ],
      "mod_code": [
        "x . first = a + ( b * c ) ;",
        "x . second = ( a * b ) + c ;",
        "int ans = x . first ;",
        "cout << getAns ( a , b ) << \" \" << c = it << endl ;"
      ],
      "err_line": 2,
      "err_msg": "request for member ‘first’ in ‘x’, which is of non-class type ‘int [6]’"
    },
    {
      "mod_line": [
        2,
        3,
        18
      ],
      "mod_code": [
        "x . first = a + ( b * c ) ;",
        "x . second = ( a * b ) + c ;",
        "cout << getAns ( a , b ) << \" \" << c = it << endl ;"
      ],
      "err_line": 2,
      "err_msg": "request for member ‘first’ in ‘x’, which is of non-class type ‘int [6]’"
    },
    {
      "mod_line": [
        2,
        4
      ],
      "mod_code": [
        "x . first = a + ( b * c ) ;",
        "x = ( x + b ) * c ;"
      ],
      "err_line": 2,
      "err_msg": "request for member ‘first’ in ‘x’, which is of non-class type ‘int [6]’"
    },
    {
      "mod_line": [
        2,
        4,
        5
      ],
      "mod_code": [
        "x . first = a + ( b * c ) ;",
        "x = ( x + b ) * c ;",
        "x [ 0 ] = a * ( b + c ) ;"
      ],
      "err_line": 2,
      "err_msg": "request for member ‘first’ in ‘x’, which is of non-class type ‘int [6]’"
    },
    {
      "mod_line": [
        2,
        4,
        5,
        6
      ],
      "mod_code": [
        "x . first = a + ( b * c ) ;",
        "x = ( x + b ) * c ;",
        "x [ 0 ] = a * ( b + c ) ;",
        "x = a * b * c ;"
      ],
      "err_line": 2,
      "err_msg": "request for member ‘first’ in ‘x’, which is of non-class type ‘int [6]’"
    },
    {
      "mod_line": [
        2,
        4,
        5,
        7
      ],
      "mod_code": [
        "x . first = a + ( b * c ) ;",
        "x = ( x + b ) * c ;",
        "x [ 0 ] = a * ( b + c ) ;",
        "int x [ b + c + c ] ;"
      ],
      "err_line": 2,
      "err_msg": "request for member ‘first’ in ‘x’, which is of non-class type ‘int [6]’"
    },
    {
      "mod_line": [
        2,
        4,
        5,
        9
      ],
      "mod_code": [
        "x . first = a + ( b * c ) ;",
        "x = ( x + b ) * c ;",
        "x [ 0 ] = a * ( b + c ) ;",
        "int ans = x . first ;"
      ],
      "err_line": 2,
      "err_msg": "request for member ‘first’ in ‘x’, which is of non-class type ‘int [6]’"
    },
    {
      "mod_line": [
        2,
        4,
        5,
        18
      ],
      "mod_code": [
        "x . first = a + ( b * c ) ;",
        "x = ( x + b ) * c ;",
        "x [ 0 ] = a * ( b + c ) ;",
        "cout << getAns ( a , b ) << \" \" << c = it << endl ;"
      ],
      "err_line": 2,
      "err_msg": "request for member ‘first’ in ‘x’, which is of non-class type ‘int [6]’"
    },
    {
      "mod_line": [
        2,
        4,
        6
      ],
      "mod_code": [
        "x . first = a + ( b * c ) ;",
        "x = ( x + b ) * c ;",
        "x = a * b * c ;"
      ],
      "err_line": 2,
      "err_msg": "request for member ‘first’ in ‘x’, which is of non-class type ‘int [6]’"
    },
    {
      "mod_line": [
        2,
        4,
        6,
        7
      ],
      "mod_code": [
        "x . first = a + ( b * c ) ;",
        "x = ( x + b ) * c ;",
        "x = a * b * c ;",
        "int x [ b + c + c ] ;"
      ],
      "err_line": 2,
      "err_msg": "request for member ‘first’ in ‘x’, which is of non-class type ‘int [6]’"
    },
    {
      "mod_line": [
        2,
        4,
        6,
        9
      ],
      "mod_code": [
        "x . first = a + ( b * c ) ;",
        "x = ( x + b ) * c ;",
        "x = a * b * c ;",
        "int ans = x . first ;"
      ],
      "err_line": 2,
      "err_msg": "request for member ‘first’ in ‘x’, which is of non-class type ‘int [6]’"
    },
    {
      "mod_line": [
        2,
        4,
        6,
        18
      ],
      "mod_code": [
        "x . first = a + ( b * c ) ;",
        "x = ( x + b ) * c ;",
        "x = a * b * c ;",
        "cout << getAns ( a , b ) << \" \" << c = it << endl ;"
      ],
      "err_line": 2,
      "err_msg": "request for member ‘first’ in ‘x’, which is of non-class type ‘int [6]’"
    },
    {
      "mod_line": [
        2,
        4,
        7
      ],
      "mod_code": [
        "x . first = a + ( b * c ) ;",
        "x = ( x + b ) * c ;",
        "int x [ b + c + c ] ;"
      ],
      "err_line": 2,
      "err_msg": "request for member ‘first’ in ‘x’, which is of non-class type ‘int [6]’"
    },
    {
      "mod_line": [
        2,
        4,
        7,
        9
      ],
      "mod_code": [
        "x . first = a + ( b * c ) ;",
        "x = ( x + b ) * c ;",
        "int x [ b + c + c ] ;",
        "int ans = x . first ;"
      ],
      "err_line": 2,
      "err_msg": "request for member ‘first’ in ‘x’, which is of non-class type ‘int [6]’"
    },
    {
      "mod_line": [
        2,
        4,
        7,
        18
      ],
      "mod_code": [
        "x . first = a + ( b * c ) ;",
        "x = ( x + b ) * c ;",
        "int x [ b + c + c ] ;",
        "cout << getAns ( a , b ) << \" \" << c = it << endl ;"
      ],
      "err_line": 2,
      "err_msg": "request for member ‘first’ in ‘x’, which is of non-class type ‘int [6]’"
    },
    {
      "mod_line": [
        2,
        4,
        9
      ],
      "mod_code": [
        "x . first = a + ( b * c ) ;",
        "x = ( x + b ) * c ;",
        "int ans = x . first ;"
      ],
      "err_line": 2,
      "err_msg": "request for member ‘first’ in ‘x’, which is of non-class type ‘int [6]’"
    },
    {
      "mod_line": [
        2,
        4,
        9,
        18
      ],
      "mod_code": [
        "x . first = a + ( b * c ) ;",
        "x = ( x + b ) * c ;",
        "int ans = x . first ;",
        "cout << getAns ( a , b ) << \" \" << c = it << endl ;"
      ],
      "err_line": 2,
      "err_msg": "request for member ‘first’ in ‘x’, which is of non-class type ‘int [6]’"
    },
    {
      "mod_line": [
        2,
        4,
        18
      ],
      "mod_code": [
        "x . first = a + ( b * c ) ;",
        "x = ( x + b ) * c ;",
        "cout << getAns ( a , b ) << \" \" << c = it << endl ;"
      ],
      "err_line": 2,
      "err_msg": "request for member ‘first’ in ‘x’, which is of non-class type ‘int [6]’"
    },
    {
      "mod_line": [
        2,
        5
      ],
      "mod_code": [
        "x . first = a + ( b * c ) ;",
        "x [ 0 ] = a * ( b + c ) ;"
      ],
      "err_line": 2,
      "err_msg": "request for member ‘first’ in ‘x’, which is of non-class type ‘int [6]’"
    },
    {
      "mod_line": [
        2,
        5,
        6
      ],
      "mod_code": [
        "x . first = a + ( b * c ) ;",
        "x [ 0 ] = a * ( b + c ) ;",
        "x = a * b * c ;"
      ],
      "err_line": 2,
      "err_msg": "request for member ‘first’ in ‘x’, which is of non-class type ‘int [6]’"
    },
    {
      "mod_line": [
        2,
        5,
        6,
        7
      ],
      "mod_code": [
        "x . first = a + ( b * c ) ;",
        "x [ 0 ] = a * ( b + c ) ;",
        "x = a * b * c ;",
        "int x [ b + c + c ] ;"
      ],
      "err_line": 2,
      "err_msg": "request for member ‘first’ in ‘x’, which is of non-class type ‘int [6]’"
    },
    {
      "mod_line": [
        2,
        5,
        6,
        9
      ],
      "mod_code": [
        "x . first = a + ( b * c ) ;",
        "x [ 0 ] = a * ( b + c ) ;",
        "x = a * b * c ;",
        "int ans = x . first ;"
      ],
      "err_line": 2,
      "err_msg": "request for member ‘first’ in ‘x’, which is of non-class type ‘int [6]’"
    },
    {
      "mod_line": [
        2,
        5,
        6,
        18
      ],
      "mod_code": [
        "x . first = a + ( b * c ) ;",
        "x [ 0 ] = a * ( b + c ) ;",
        "x = a * b * c ;",
        "cout << getAns ( a , b ) << \" \" << c = it << endl ;"
      ],
      "err_line": 2,
      "err_msg": "request for member ‘first’ in ‘x’, which is of non-class type ‘int [6]’"
    },
    {
      "mod_line": [
        2,
        5,
        7
      ],
      "mod_code": [
        "x . first = a + ( b * c ) ;",
        "x [ 0 ] = a * ( b + c ) ;",
        "int x [ b + c + c ] ;"
      ],
      "err_line": 2,
      "err_msg": "request for member ‘first’ in ‘x’, which is of non-class type ‘int [6]’"
    },
    {
      "mod_line": [
        2,
        5,
        7,
        9
      ],
      "mod_code": [
        "x . first = a + ( b * c ) ;",
        "x [ 0 ] = a * ( b + c ) ;",
        "int x [ b + c + c ] ;",
        "int ans = x . first ;"
      ],
      "err_line": 2,
      "err_msg": "request for member ‘first’ in ‘x’, which is of non-class type ‘int [6]’"
    },
    {
      "mod_line": [
        2,
        5,
        7,
        18
      ],
      "mod_code": [
        "x . first = a + ( b * c ) ;",
        "x [ 0 ] = a * ( b + c ) ;",
        "int x [ b + c + c ] ;",
        "cout << getAns ( a , b ) << \" \" << c = it << endl ;"
      ],
      "err_line": 2,
      "err_msg": "request for member ‘first’ in ‘x’, which is of non-class type ‘int [6]’"
    },
    {
      "mod_line": [
        2,
        5,
        9
      ],
      "mod_code": [
        "x . first = a + ( b * c ) ;",
        "x [ 0 ] = a * ( b + c ) ;",
        "int ans = x . first ;"
      ],
      "err_line": 2,
      "err_msg": "request for member ‘first’ in ‘x’, which is of non-class type ‘int [6]’"
    },
    {
      "mod_line": [
        2,
        5,
        9,
        18
      ],
      "mod_code": [
        "x . first = a + ( b * c ) ;",
        "x [ 0 ] = a * ( b + c ) ;",
        "int ans = x . first ;",
        "cout << getAns ( a , b ) << \" \" << c = it << endl ;"
      ],
      "err_line": 2,
      "err_msg": "request for member ‘first’ in ‘x’, which is of non-class type ‘int [6]’"
    },
    {
      "mod_line": [
        2,
        5,
        18
      ],
      "mod_code": [
        "x . first = a + ( b * c ) ;",
        "x [ 0 ] = a * ( b + c ) ;",
        "cout << getAns ( a , b ) << \" \" << c = it << endl ;"
      ],
      "err_line": 2,
      "err_msg": "request for member ‘first’ in ‘x’, which is of non-class type ‘int [6]’"
    },
    {
      "mod_line": [
        2,
        6
      ],
      "mod_code": [
        "x . first = a + ( b * c ) ;",
        "x = a * b * c ;"
      ],
      "err_line": 2,
      "err_msg": "request for member ‘first’ in ‘x’, which is of non-class type ‘int [6]’"
    },
    {
      "mod_line": [
        2,
        6,
        7
      ],
      "mod_code": [
        "x . first = a + ( b * c ) ;",
        "x = a * b * c ;",
        "int x [ b + c + c ] ;"
      ],
      "err_line": 2,
      "err_msg": "request for member ‘first’ in ‘x’, which is of non-class type ‘int [6]’"
    },
    {
      "mod_line": [
        2,
        6,
        7,
        9
      ],
      "mod_code": [
        "x . first = a + ( b * c ) ;",
        "x = a * b * c ;",
        "int x [ b + c + c ] ;",
        "int ans = x . first ;"
      ],
      "err_line": 2,
      "err_msg": "request for member ‘first’ in ‘x’, which is of non-class type ‘int [6]’"
    },
    {
      "mod_line": [
        2,
        6,
        7,
        18
      ],
      "mod_code": [
        "x . first = a + ( b * c ) ;",
        "x = a * b * c ;",
        "int x [ b + c + c ] ;",
        "cout << getAns ( a , b ) << \" \" << c = it << endl ;"
      ],
      "err_line": 2,
      "err_msg": "request for member ‘first’ in ‘x’, which is of non-class type ‘int [6]’"
    },
    {
      "mod_line": [
        2,
        6,
        9
      ],
      "mod_code": [
        "x . first = a + ( b * c ) ;",
        "x = a * b * c ;",
        "int ans = x . first ;"
      ],
      "err_line": 2,
      "err_msg": "request for member ‘first’ in ‘x’, which is of non-class type ‘int [6]’"
    },
    {
      "mod_line": [
        2,
        6,
        9,
        18
      ],
      "mod_code": [
        "x . first = a + ( b * c ) ;",
        "x = a * b * c ;",
        "int ans = x . first ;",
        "cout << getAns ( a , b ) << \" \" << c = it << endl ;"
      ],
      "err_line": 2,
      "err_msg": "request for member ‘first’ in ‘x’, which is of non-class type ‘int [6]’"
    },
    {
      "mod_line": [
        2,
        6,
        18
      ],
      "mod_code": [
        "x . first = a + ( b * c ) ;",
        "x = a * b * c ;",
        "cout << getAns ( a , b ) << \" \" << c = it << endl ;"
      ],
      "err_line": 2,
      "err_msg": "request for member ‘first’ in ‘x’, which is of non-class type ‘int [6]’"
    },
    {
      "mod_line": [
        2,
        7
      ],
      "mod_code": [
        "x . first = a + ( b * c ) ;",
        "int x [ b + c + c ] ;"
      ],
      "err_line": 2,
      "err_msg": "request for member ‘first’ in ‘x’, which is of non-class type ‘int [6]’"
    },
    {
      "mod_line": [
        2,
        7,
        9
      ],
      "mod_code": [
        "x . first = a + ( b * c ) ;",
        "int x [ b + c + c ] ;",
        "int ans = x . first ;"
      ],
      "err_line": 2,
      "err_msg": "request for member ‘first’ in ‘x’, which is of non-class type ‘int [6]’"
    },
    {
      "mod_line": [
        2,
        7,
        9,
        18
      ],
      "mod_code": [
        "x . first = a + ( b * c ) ;",
        "int x [ b + c + c ] ;",
        "int ans = x . first ;",
        "cout << getAns ( a , b ) << \" \" << c = it << endl ;"
      ],
      "err_line": 2,
      "err_msg": "request for member ‘first’ in ‘x’, which is of non-class type ‘int [6]’"
    },
    {
      "mod_line": [
        2,
        7,
        18
      ],
      "mod_code": [
        "x . first = a + ( b * c ) ;",
        "int x [ b + c + c ] ;",
        "cout << getAns ( a , b ) << \" \" << c = it << endl ;"
      ],
      "err_line": 2,
      "err_msg": "request for member ‘first’ in ‘x’, which is of non-class type ‘int [6]’"
    },
    {
      "mod_line": [
        2,
        9
      ],
      "mod_code": [
        "x . first = a + ( b * c ) ;",
        "int ans = x . first ;"
      ],
      "err_line": 2,
      "err_msg": "request for member ‘first’ in ‘x’, which is of non-class type ‘int [6]’"
    },
    {
      "mod_line": [
        2,
        9,
        18
      ],
      "mod_code": [
        "x . first = a + ( b * c ) ;",
        "int ans = x . first ;",
        "cout << getAns ( a , b ) << \" \" << c = it << endl ;"
      ],
      "err_line": 2,
      "err_msg": "request for member ‘first’ in ‘x’, which is of non-class type ‘int [6]’"
    },
    {
      "mod_line": [
        2,
        18
      ],
      "mod_code": [
        "x . first = a + ( b * c ) ;",
        "cout << getAns ( a , b ) << \" \" << c = it << endl ;"
      ],
      "err_line": 2,
      "err_msg": "request for member ‘first’ in ‘x’, which is of non-class type ‘int [6]’"
    },
    {
      "mod_line": [
        3,
        4
      ],
      "mod_code": [
        "x . second = ( a * b ) + c ;",
        "x = ( x + b ) * c ;"
      ],
      "err_line": 3,
      "err_msg": "request for member ‘second’ in ‘x’, which is of non-class type ‘int [6]’"
    },
    {
      "mod_line": [
        3,
        4,
        5
      ],
      "mod_code": [
        "x . second = ( a * b ) + c ;",
        "x = ( x + b ) * c ;",
        "x [ 0 ] = a * ( b + c ) ;"
      ],
      "err_line": 3,
      "err_msg": "request for member ‘second’ in ‘x’, which is of non-class type ‘int [6]’"
    },
    {
      "mod_line": [
        3,
        4,
        5,
        6
      ],
      "mod_code": [
        "x . second = ( a * b ) + c ;",
        "x = ( x + b ) * c ;",
        "x [ 0 ] = a * ( b + c ) ;",
        "x = a * b * c ;"
      ],
      "err_line": 3,
      "err_msg": "request for member ‘second’ in ‘x’, which is of non-class type ‘int [6]’"
    },
    {
      "mod_line": [
        3,
        4,
        5,
        7
      ],
      "mod_code": [
        "x . second = ( a * b ) + c ;",
        "x = ( x + b ) * c ;",
        "x [ 0 ] = a * ( b + c ) ;",
        "int x [ b + c + c ] ;"
      ],
      "err_line": 3,
      "err_msg": "request for member ‘second’ in ‘x’, which is of non-class type ‘int [6]’"
    },
    {
      "mod_line": [
        3,
        4,
        5,
        9
      ],
      "mod_code": [
        "x . second = ( a * b ) + c ;",
        "x = ( x + b ) * c ;",
        "x [ 0 ] = a * ( b + c ) ;",
        "int ans = x . first ;"
      ],
      "err_line": 3,
      "err_msg": "request for member ‘second’ in ‘x’, which is of non-class type ‘int [6]’"
    },
    {
      "mod_line": [
        3,
        4,
        5,
        18
      ],
      "mod_code": [
        "x . second = ( a * b ) + c ;",
        "x = ( x + b ) * c ;",
        "x [ 0 ] = a * ( b + c ) ;",
        "cout << getAns ( a , b ) << \" \" << c = it << endl ;"
      ],
      "err_line": 3,
      "err_msg": "request for member ‘second’ in ‘x’, which is of non-class type ‘int [6]’"
    },
    {
      "mod_line": [
        3,
        4,
        6
      ],
      "mod_code": [
        "x . second = ( a * b ) + c ;",
        "x = ( x + b ) * c ;",
        "x = a * b * c ;"
      ],
      "err_line": 3,
      "err_msg": "request for member ‘second’ in ‘x’, which is of non-class type ‘int [6]’"
    },
    {
      "mod_line": [
        3,
        4,
        6,
        7
      ],
      "mod_code": [
        "x . second = ( a * b ) + c ;",
        "x = ( x + b ) * c ;",
        "x = a * b * c ;",
        "int x [ b + c + c ] ;"
      ],
      "err_line": 3,
      "err_msg": "request for member ‘second’ in ‘x’, which is of non-class type ‘int [6]’"
    },
    {
      "mod_line": [
        3,
        4,
        6,
        9
      ],
      "mod_code": [
        "x . second = ( a * b ) + c ;",
        "x = ( x + b ) * c ;",
        "x = a * b * c ;",
        "int ans = x . first ;"
      ],
      "err_line": 3,
      "err_msg": "request for member ‘second’ in ‘x’, which is of non-class type ‘int [6]’"
    },
    {
      "mod_line": [
        3,
        4,
        6,
        18
      ],
      "mod_code": [
        "x . second = ( a * b ) + c ;",
        "x = ( x + b ) * c ;",
        "x = a * b * c ;",
        "cout << getAns ( a , b ) << \" \" << c = it << endl ;"
      ],
      "err_line": 3,
      "err_msg": "request for member ‘second’ in ‘x’, which is of non-class type ‘int [6]’"
    },
    {
      "mod_line": [
        3,
        4,
        7
      ],
      "mod_code": [
        "x . second = ( a * b ) + c ;",
        "x = ( x + b ) * c ;",
        "int x [ b + c + c ] ;"
      ],
      "err_line": 3,
      "err_msg": "request for member ‘second’ in ‘x’, which is of non-class type ‘int [6]’"
    },
    {
      "mod_line": [
        3,
        4,
        7,
        9
      ],
      "mod_code": [
        "x . second = ( a * b ) + c ;",
        "x = ( x + b ) * c ;",
        "int x [ b + c + c ] ;",
        "int ans = x . first ;"
      ],
      "err_line": 3,
      "err_msg": "request for member ‘second’ in ‘x’, which is of non-class type ‘int [6]’"
    },
    {
      "mod_line": [
        3,
        4,
        7,
        18
      ],
      "mod_code": [
        "x . second = ( a * b ) + c ;",
        "x = ( x + b ) * c ;",
        "int x [ b + c + c ] ;",
        "cout << getAns ( a , b ) << \" \" << c = it << endl ;"
      ],
      "err_line": 3,
      "err_msg": "request for member ‘second’ in ‘x’, which is of non-class type ‘int [6]’"
    },
    {
      "mod_line": [
        3,
        4,
        9
      ],
      "mod_code": [
        "x . second = ( a * b ) + c ;",
        "x = ( x + b ) * c ;",
        "int ans = x . first ;"
      ],
      "err_line": 3,
      "err_msg": "request for member ‘second’ in ‘x’, which is of non-class type ‘int [6]’"
    },
    {
      "mod_line": [
        3,
        4,
        9,
        18
      ],
      "mod_code": [
        "x . second = ( a * b ) + c ;",
        "x = ( x + b ) * c ;",
        "int ans = x . first ;",
        "cout << getAns ( a , b ) << \" \" << c = it << endl ;"
      ],
      "err_line": 3,
      "err_msg": "request for member ‘second’ in ‘x’, which is of non-class type ‘int [6]’"
    },
    {
      "mod_line": [
        3,
        4,
        18
      ],
      "mod_code": [
        "x . second = ( a * b ) + c ;",
        "x = ( x + b ) * c ;",
        "cout << getAns ( a , b ) << \" \" << c = it << endl ;"
      ],
      "err_line": 3,
      "err_msg": "request for member ‘second’ in ‘x’, which is of non-class type ‘int [6]’"
    },
    {
      "mod_line": [
        3,
        5
      ],
      "mod_code": [
        "x . second = ( a * b ) + c ;",
        "x [ 0 ] = a * ( b + c ) ;"
      ],
      "err_line": 3,
      "err_msg": "request for member ‘second’ in ‘x’, which is of non-class type ‘int [6]’"
    },
    {
      "mod_line": [
        3,
        5,
        6
      ],
      "mod_code": [
        "x . second = ( a * b ) + c ;",
        "x [ 0 ] = a * ( b + c ) ;",
        "x = a * b * c ;"
      ],
      "err_line": 3,
      "err_msg": "request for member ‘second’ in ‘x’, which is of non-class type ‘int [6]’"
    },
    {
      "mod_line": [
        3,
        5,
        6,
        7
      ],
      "mod_code": [
        "x . second = ( a * b ) + c ;",
        "x [ 0 ] = a * ( b + c ) ;",
        "x = a * b * c ;",
        "int x [ b + c + c ] ;"
      ],
      "err_line": 3,
      "err_msg": "request for member ‘second’ in ‘x’, which is of non-class type ‘int [6]’"
    },
    {
      "mod_line": [
        3,
        5,
        6,
        9
      ],
      "mod_code": [
        "x . second = ( a * b ) + c ;",
        "x [ 0 ] = a * ( b + c ) ;",
        "x = a * b * c ;",
        "int ans = x . first ;"
      ],
      "err_line": 3,
      "err_msg": "request for member ‘second’ in ‘x’, which is of non-class type ‘int [6]’"
    },
    {
      "mod_line": [
        3,
        5,
        6,
        18
      ],
      "mod_code": [
        "x . second = ( a * b ) + c ;",
        "x [ 0 ] = a * ( b + c ) ;",
        "x = a * b * c ;",
        "cout << getAns ( a , b ) << \" \" << c = it << endl ;"
      ],
      "err_line": 3,
      "err_msg": "request for member ‘second’ in ‘x’, which is of non-class type ‘int [6]’"
    },
    {
      "mod_line": [
        3,
        5,
        7
      ],
      "mod_code": [
        "x . second = ( a * b ) + c ;",
        "x [ 0 ] = a * ( b + c ) ;",
        "int x [ b + c + c ] ;"
      ],
      "err_line": 3,
      "err_msg": "request for member ‘second’ in ‘x’, which is of non-class type ‘int [6]’"
    },
    {
      "mod_line": [
        3,
        5,
        7,
        9
      ],
      "mod_code": [
        "x . second = ( a * b ) + c ;",
        "x [ 0 ] = a * ( b + c ) ;",
        "int x [ b + c + c ] ;",
        "int ans = x . first ;"
      ],
      "err_line": 3,
      "err_msg": "request for member ‘second’ in ‘x’, which is of non-class type ‘int [6]’"
    },
    {
      "mod_line": [
        3,
        5,
        7,
        18
      ],
      "mod_code": [
        "x . second = ( a * b ) + c ;",
        "x [ 0 ] = a * ( b + c ) ;",
        "int x [ b + c + c ] ;",
        "cout << getAns ( a , b ) << \" \" << c = it << endl ;"
      ],
      "err_line": 3,
      "err_msg": "request for member ‘second’ in ‘x’, which is of non-class type ‘int [6]’"
    },
    {
      "mod_line": [
        3,
        5,
        9
      ],
      "mod_code": [
        "x . second = ( a * b ) + c ;",
        "x [ 0 ] = a * ( b + c ) ;",
        "int ans = x . first ;"
      ],
      "err_line": 3,
      "err_msg": "request for member ‘second’ in ‘x’, which is of non-class type ‘int [6]’"
    },
    {
      "mod_line": [
        3,
        5,
        9,
        18
      ],
      "mod_code": [
        "x . second = ( a * b ) + c ;",
        "x [ 0 ] = a * ( b + c ) ;",
        "int ans = x . first ;",
        "cout << getAns ( a , b ) << \" \" << c = it << endl ;"
      ],
      "err_line": 3,
      "err_msg": "request for member ‘second’ in ‘x’, which is of non-class type ‘int [6]’"
    },
    {
      "mod_line": [
        3,
        5,
        18
      ],
      "mod_code": [
        "x . second = ( a * b ) + c ;",
        "x [ 0 ] = a * ( b + c ) ;",
        "cout << getAns ( a , b ) << \" \" << c = it << endl ;"
      ],
      "err_line": 3,
      "err_msg": "request for member ‘second’ in ‘x’, which is of non-class type ‘int [6]’"
    },
    {
      "mod_line": [
        3,
        6
      ],
      "mod_code": [
        "x . second = ( a * b ) + c ;",
        "x = a * b * c ;"
      ],
      "err_line": 3,
      "err_msg": "request for member ‘second’ in ‘x’, which is of non-class type ‘int [6]’"
    },
    {
      "mod_line": [
        3,
        6,
        7
      ],
      "mod_code": [
        "x . second = ( a * b ) + c ;",
        "x = a * b * c ;",
        "int x [ b + c + c ] ;"
      ],
      "err_line": 3,
      "err_msg": "request for member ‘second’ in ‘x’, which is of non-class type ‘int [6]’"
    },
    {
      "mod_line": [
        3,
        6,
        7,
        9
      ],
      "mod_code": [
        "x . second = ( a * b ) + c ;",
        "x = a * b * c ;",
        "int x [ b + c + c ] ;",
        "int ans = x . first ;"
      ],
      "err_line": 3,
      "err_msg": "request for member ‘second’ in ‘x’, which is of non-class type ‘int [6]’"
    },
    {
      "mod_line": [
        3,
        6,
        7,
        18
      ],
      "mod_code": [
        "x . second = ( a * b ) + c ;",
        "x = a * b * c ;",
        "int x [ b + c + c ] ;",
        "cout << getAns ( a , b ) << \" \" << c = it << endl ;"
      ],
      "err_line": 3,
      "err_msg": "request for member ‘second’ in ‘x’, which is of non-class type ‘int [6]’"
    },
    {
      "mod_line": [
        3,
        6,
        9
      ],
      "mod_code": [
        "x . second = ( a * b ) + c ;",
        "x = a * b * c ;",
        "int ans = x . first ;"
      ],
      "err_line": 3,
      "err_msg": "request for member ‘second’ in ‘x’, which is of non-class type ‘int [6]’"
    },
    {
      "mod_line": [
        3,
        6,
        9,
        18
      ],
      "mod_code": [
        "x . second = ( a * b ) + c ;",
        "x = a * b * c ;",
        "int ans = x . first ;",
        "cout << getAns ( a , b ) << \" \" << c = it << endl ;"
      ],
      "err_line": 3,
      "err_msg": "request for member ‘second’ in ‘x’, which is of non-class type ‘int [6]’"
    },
    {
      "mod_line": [
        3,
        6,
        18
      ],
      "mod_code": [
        "x . second = ( a * b ) + c ;",
        "x = a * b * c ;",
        "cout << getAns ( a , b ) << \" \" << c = it << endl ;"
      ],
      "err_line": 3,
      "err_msg": "request for member ‘second’ in ‘x’, which is of non-class type ‘int [6]’"
    },
    {
      "mod_line": [
        3,
        7
      ],
      "mod_code": [
        "x . second = ( a * b ) + c ;",
        "int x [ b + c + c ] ;"
      ],
      "err_line": 3,
      "err_msg": "request for member ‘second’ in ‘x’, which is of non-class type ‘int [6]’"
    },
    {
      "mod_line": [
        3,
        7,
        9
      ],
      "mod_code": [
        "x . second = ( a * b ) + c ;",
        "int x [ b + c + c ] ;",
        "int ans = x . first ;"
      ],
      "err_line": 3,
      "err_msg": "request for member ‘second’ in ‘x’, which is of non-class type ‘int [6]’"
    },
    {
      "mod_line": [
        3,
        7,
        9,
        18
      ],
      "mod_code": [
        "x . second = ( a * b ) + c ;",
        "int x [ b + c + c ] ;",
        "int ans = x . first ;",
        "cout << getAns ( a , b ) << \" \" << c = it << endl ;"
      ],
      "err_line": 3,
      "err_msg": "request for member ‘second’ in ‘x’, which is of non-class type ‘int [6]’"
    },
    {
      "mod_line": [
        3,
        7,
        18
      ],
      "mod_code": [
        "x . second = ( a * b ) + c ;",
        "int x [ b + c + c ] ;",
        "cout << getAns ( a , b ) << \" \" << c = it << endl ;"
      ],
      "err_line": 3,
      "err_msg": "request for member ‘second’ in ‘x’, which is of non-class type ‘int [6]’"
    },
    {
      "mod_line": [
        3,
        9
      ],
      "mod_code": [
        "x . second = ( a * b ) + c ;",
        "int ans = x . first ;"
      ],
      "err_line": 3,
      "err_msg": "request for member ‘second’ in ‘x’, which is of non-class type ‘int [6]’"
    },
    {
      "mod_line": [
        3,
        9,
        18
      ],
      "mod_code": [
        "x . second = ( a * b ) + c ;",
        "int ans = x . first ;",
        "cout << getAns ( a , b ) << \" \" << c = it << endl ;"
      ],
      "err_line": 3,
      "err_msg": "request for member ‘second’ in ‘x’, which is of non-class type ‘int [6]’"
    },
    {
      "mod_line": [
        3,
        18
      ],
      "mod_code": [
        "x . second = ( a * b ) + c ;",
        "cout << getAns ( a , b ) << \" \" << c = it << endl ;"
      ],
      "err_line": 3,
      "err_msg": "request for member ‘second’ in ‘x’, which is of non-class type ‘int [6]’"
    },
    {
      "mod_line": [
        4,
        5
      ],
      "mod_code": [
        "x = ( x + b ) * c ;",
        "x [ 0 ] = a * ( b + c ) ;"
      ],
      "err_line": 4,
      "err_msg": "invalid operands of types ‘int*’ and ‘int’ to binary ‘operator*’"
    },
    {
      "mod_line": [
        4,
        5,
        6
      ],
      "mod_code": [
        "x = ( x + b ) * c ;",
        "x [ 0 ] = a * ( b + c ) ;",
        "x = a * b * c ;"
      ],
      "err_line": 4,
      "err_msg": "invalid operands of types ‘int*’ and ‘int’ to binary ‘operator*’"
    },
    {
      "mod_line": [
        4,
        5,
        6,
        7
      ],
      "mod_code": [
        "x = ( x + b ) * c ;",
        "x [ 0 ] = a * ( b + c ) ;",
        "x = a * b * c ;",
        "int x [ b + c + c ] ;"
      ],
      "err_line": 4,
      "err_msg": "invalid operands of types ‘int*’ and ‘int’ to binary ‘operator*’"
    },
    {
      "mod_line": [
        4,
        5,
        6,
        9
      ],
      "mod_code": [
        "x = ( x + b ) * c ;",
        "x [ 0 ] = a * ( b + c ) ;",
        "x = a * b * c ;",
        "int ans = x . first ;"
      ],
      "err_line": 4,
      "err_msg": "invalid operands of types ‘int*’ and ‘int’ to binary ‘operator*’"
    },
    {
      "mod_line": [
        4,
        5,
        6,
        18
      ],
      "mod_code": [
        "x = ( x + b ) * c ;",
        "x [ 0 ] = a * ( b + c ) ;",
        "x = a * b * c ;",
        "cout << getAns ( a , b ) << \" \" << c = it << endl ;"
      ],
      "err_line": 4,
      "err_msg": "invalid operands of types ‘int*’ and ‘int’ to binary ‘operator*’"
    },
    {
      "mod_line": [
        4,
        5,
        7
      ],
      "mod_code": [
        "x = ( x + b ) * c ;",
        "x [ 0 ] = a * ( b + c ) ;",
        "int x [ b + c + c ] ;"
      ],
      "err_line": 4,
      "err_msg": "invalid operands of types ‘int*’ and ‘int’ to binary ‘operator*’"
    },
    {
      "mod_line": [
        4,
        5,
        7,
        9
      ],
      "mod_code": [
        "x = ( x + b ) * c ;",
        "x [ 0 ] = a * ( b + c ) ;",
        "int x [ b + c + c ] ;",
        "int ans = x . first ;"
      ],
      "err_line": 4,
      "err_msg": "invalid operands of types ‘int*’ and ‘int’ to binary ‘operator*’"
    },
    {
      "mod_line": [
        4,
        5,
        7,
        18
      ],
      "mod_code": [
        "x = ( x + b ) * c ;",
        "x [ 0 ] = a * ( b + c ) ;",
        "int x [ b + c + c ] ;",
        "cout << getAns ( a , b ) << \" \" << c = it << endl ;"
      ],
      "err_line": 4,
      "err_msg": "invalid operands of types ‘int*’ and ‘int’ to binary ‘operator*’"
    },
    {
      "mod_line": [
        4,
        5,
        9
      ],
      "mod_code": [
        "x = ( x + b ) * c ;",
        "x [ 0 ] = a * ( b + c ) ;",
        "int ans = x . first ;"
      ],
      "err_line": 4,
      "err_msg": "invalid operands of types ‘int*’ and ‘int’ to binary ‘operator*’"
    },
    {
      "mod_line": [
        4,
        5,
        9,
        18
      ],
      "mod_code": [
        "x = ( x + b ) * c ;",
        "x [ 0 ] = a * ( b + c ) ;",
        "int ans = x . first ;",
        "cout << getAns ( a , b ) << \" \" << c = it << endl ;"
      ],
      "err_line": 4,
      "err_msg": "invalid operands of types ‘int*’ and ‘int’ to binary ‘operator*’"
    },
    {
      "mod_line": [
        4,
        5,
        18
      ],
      "mod_code": [
        "x = ( x + b ) * c ;",
        "x [ 0 ] = a * ( b + c ) ;",
        "cout << getAns ( a , b ) << \" \" << c = it << endl ;"
      ],
      "err_line": 4,
      "err_msg": "invalid operands of types ‘int*’ and ‘int’ to binary ‘operator*’"
    },
    {
      "mod_line": [
        4,
        6
      ],
      "mod_code": [
        "x = ( x + b ) * c ;",
        "x = a * b * c ;"
      ],
      "err_line": 4,
      "err_msg": "invalid operands of types ‘int*’ and ‘int’ to binary ‘operator*’"
    },
    {
      "mod_line": [
        4,
        6,
        7
      ],
      "mod_code": [
        "x = ( x + b ) * c ;",
        "x = a * b * c ;",
        "int x [ b + c + c ] ;"
      ],
      "err_line": 4,
      "err_msg": "invalid operands of types ‘int*’ and ‘int’ to binary ‘operator*’"
    },
    {
      "mod_line": [
        4,
        6,
        7,
        9
      ],
      "mod_code": [
        "x = ( x + b ) * c ;",
        "x = a * b * c ;",
        "int x [ b + c + c ] ;",
        "int ans = x . first ;"
      ],
      "err_line": 4,
      "err_msg": "invalid operands of types ‘int*’ and ‘int’ to binary ‘operator*’"
    },
    {
      "mod_line": [
        4,
        6,
        7,
        18
      ],
      "mod_code": [
        "x = ( x + b ) * c ;",
        "x = a * b * c ;",
        "int x [ b + c + c ] ;",
        "cout << getAns ( a , b ) << \" \" << c = it << endl ;"
      ],
      "err_line": 4,
      "err_msg": "invalid operands of types ‘int*’ and ‘int’ to binary ‘operator*’"
    },
    {
      "mod_line": [
        4,
        6,
        9
      ],
      "mod_code": [
        "x = ( x + b ) * c ;",
        "x = a * b * c ;",
        "int ans = x . first ;"
      ],
      "err_line": 4,
      "err_msg": "invalid operands of types ‘int*’ and ‘int’ to binary ‘operator*’"
    },
    {
      "mod_line": [
        4,
        6,
        9,
        18
      ],
      "mod_code": [
        "x = ( x + b ) * c ;",
        "x = a * b * c ;",
        "int ans = x . first ;",
        "cout << getAns ( a , b ) << \" \" << c = it << endl ;"
      ],
      "err_line": 4,
      "err_msg": "invalid operands of types ‘int*’ and ‘int’ to binary ‘operator*’"
    },
    {
      "mod_line": [
        4,
        6,
        18
      ],
      "mod_code": [
        "x = ( x + b ) * c ;",
        "x = a * b * c ;",
        "cout << getAns ( a , b ) << \" \" << c = it << endl ;"
      ],
      "err_line": 4,
      "err_msg": "invalid operands of types ‘int*’ and ‘int’ to binary ‘operator*’"
    },
    {
      "mod_line": [
        4,
        7
      ],
      "mod_code": [
        "x = ( x + b ) * c ;",
        "int x [ b + c + c ] ;"
      ],
      "err_line": 4,
      "err_msg": "invalid operands of types ‘int*’ and ‘int’ to binary ‘operator*’"
    },
    {
      "mod_line": [
        4,
        7,
        9
      ],
      "mod_code": [
        "x = ( x + b ) * c ;",
        "int x [ b + c + c ] ;",
        "int ans = x . first ;"
      ],
      "err_line": 4,
      "err_msg": "invalid operands of types ‘int*’ and ‘int’ to binary ‘operator*’"
    },
    {
      "mod_line": [
        4,
        7,
        9,
        18
      ],
      "mod_code": [
        "x = ( x + b ) * c ;",
        "int x [ b + c + c ] ;",
        "int ans = x . first ;",
        "cout << getAns ( a , b ) << \" \" << c = it << endl ;"
      ],
      "err_line": 4,
      "err_msg": "invalid operands of types ‘int*’ and ‘int’ to binary ‘operator*’"
    },
    {
      "mod_line": [
        4,
        7,
        18
      ],
      "mod_code": [
        "x = ( x + b ) * c ;",
        "int x [ b + c + c ] ;",
        "cout << getAns ( a , b ) << \" \" << c = it << endl ;"
      ],
      "err_line": 4,
      "err_msg": "invalid operands of types ‘int*’ and ‘int’ to binary ‘operator*’"
    },
    {
      "mod_line": [
        4,
        9
      ],
      "mod_code": [
        "x = ( x + b ) * c ;",
        "int ans = x . first ;"
      ],
      "err_line": 4,
      "err_msg": "invalid operands of types ‘int*’ and ‘int’ to binary ‘operator*’"
    },
    {
      "mod_line": [
        4,
        9,
        18
      ],
      "mod_code": [
        "x = ( x + b ) * c ;",
        "int ans = x . first ;",
        "cout << getAns ( a , b ) << \" \" << c = it << endl ;"
      ],
      "err_line": 4,
      "err_msg": "invalid operands of types ‘int*’ and ‘int’ to binary ‘operator*’"
    },
    {
      "mod_line": [
        4,
        18
      ],
      "mod_code": [
        "x = ( x + b ) * c ;",
        "cout << getAns ( a , b ) << \" \" << c = it << endl ;"
      ],
      "err_line": 4,
      "err_msg": "invalid operands of types ‘int*’ and ‘int’ to binary ‘operator*’"
    },
    {
      "mod_line": [
        5,
        6
      ],
      "mod_code": [
        "x [ 0 ] = a * ( b + c ) ;",
        "x = a * b * c ;"
      ],
      "err_line": 6,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [6]’"
    },
    {
      "mod_line": [
        5,
        6,
        7
      ],
      "mod_code": [
        "x [ 0 ] = a * ( b + c ) ;",
        "x = a * b * c ;",
        "int x [ b + c + c ] ;"
      ],
      "err_line": 6,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [6]’"
    },
    {
      "mod_line": [
        5,
        6,
        7,
        9
      ],
      "mod_code": [
        "x [ 0 ] = a * ( b + c ) ;",
        "x = a * b * c ;",
        "int x [ b + c + c ] ;",
        "int ans = x . first ;"
      ],
      "err_line": 6,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [6]’"
    },
    {
      "mod_line": [
        5,
        6,
        7,
        18
      ],
      "mod_code": [
        "x [ 0 ] = a * ( b + c ) ;",
        "x = a * b * c ;",
        "int x [ b + c + c ] ;",
        "cout << getAns ( a , b ) << \" \" << c = it << endl ;"
      ],
      "err_line": 6,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [6]’"
    },
    {
      "mod_line": [
        5,
        6,
        9
      ],
      "mod_code": [
        "x [ 0 ] = a * ( b + c ) ;",
        "x = a * b * c ;",
        "int ans = x . first ;"
      ],
      "err_line": 6,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [6]’"
    },
    {
      "mod_line": [
        5,
        6,
        9,
        18
      ],
      "mod_code": [
        "x [ 0 ] = a * ( b + c ) ;",
        "x = a * b * c ;",
        "int ans = x . first ;",
        "cout << getAns ( a , b ) << \" \" << c = it << endl ;"
      ],
      "err_line": 6,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [6]’"
    },
    {
      "mod_line": [
        5,
        6,
        18
      ],
      "mod_code": [
        "x [ 0 ] = a * ( b + c ) ;",
        "x = a * b * c ;",
        "cout << getAns ( a , b ) << \" \" << c = it << endl ;"
      ],
      "err_line": 6,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [6]’"
    },
    {
      "mod_line": [
        5,
        7
      ],
      "mod_code": [
        "x [ 0 ] = a * ( b + c ) ;",
        "int x [ b + c + c ] ;"
      ],
      "err_line": 7,
      "err_msg": "conflicting declaration ‘int x [((b + c) + c)]’"
    },
    {
      "mod_line": [
        5,
        7,
        9
      ],
      "mod_code": [
        "x [ 0 ] = a * ( b + c ) ;",
        "int x [ b + c + c ] ;",
        "int ans = x . first ;"
      ],
      "err_line": 7,
      "err_msg": "conflicting declaration ‘int x [((b + c) + c)]’"
    },
    {
      "mod_line": [
        5,
        7,
        9,
        18
      ],
      "mod_code": [
        "x [ 0 ] = a * ( b + c ) ;",
        "int x [ b + c + c ] ;",
        "int ans = x . first ;",
        "cout << getAns ( a , b ) << \" \" << c = it << endl ;"
      ],
      "err_line": 7,
      "err_msg": "conflicting declaration ‘int x [((b + c) + c)]’"
    },
    {
      "mod_line": [
        5,
        7,
        18
      ],
      "mod_code": [
        "x [ 0 ] = a * ( b + c ) ;",
        "int x [ b + c + c ] ;",
        "cout << getAns ( a , b ) << \" \" << c = it << endl ;"
      ],
      "err_line": 7,
      "err_msg": "conflicting declaration ‘int x [((b + c) + c)]’"
    },
    {
      "mod_line": [
        5,
        9
      ],
      "mod_code": [
        "x [ 0 ] = a * ( b + c ) ;",
        "int ans = x . first ;"
      ],
      "err_line": 9,
      "err_msg": "request for member ‘first’ in ‘x’, which is of non-class type ‘int [6]’"
    },
    {
      "mod_line": [
        5,
        9,
        18
      ],
      "mod_code": [
        "x [ 0 ] = a * ( b + c ) ;",
        "int ans = x . first ;",
        "cout << getAns ( a , b ) << \" \" << c = it << endl ;"
      ],
      "err_line": 9,
      "err_msg": "request for member ‘first’ in ‘x’, which is of non-class type ‘int [6]’"
    },
    {
      "mod_line": [
        5,
        18
      ],
      "mod_code": [
        "x [ 0 ] = a * ( b + c ) ;",
        "cout << getAns ( a , b ) << \" \" << c = it << endl ;"
      ],
      "err_line": 18,
      "err_msg": "too few arguments to function ‘int getAns(int, int, int)’"
    },
    {
      "mod_line": [
        6,
        7
      ],
      "mod_code": [
        "x = a * b * c ;",
        "int x [ b + c + c ] ;"
      ],
      "err_line": 6,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [6]’"
    },
    {
      "mod_line": [
        6,
        7,
        9
      ],
      "mod_code": [
        "x = a * b * c ;",
        "int x [ b + c + c ] ;",
        "int ans = x . first ;"
      ],
      "err_line": 6,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [6]’"
    },
    {
      "mod_line": [
        6,
        7,
        9,
        18
      ],
      "mod_code": [
        "x = a * b * c ;",
        "int x [ b + c + c ] ;",
        "int ans = x . first ;",
        "cout << getAns ( a , b ) << \" \" << c = it << endl ;"
      ],
      "err_line": 6,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [6]’"
    },
    {
      "mod_line": [
        6,
        7,
        18
      ],
      "mod_code": [
        "x = a * b * c ;",
        "int x [ b + c + c ] ;",
        "cout << getAns ( a , b ) << \" \" << c = it << endl ;"
      ],
      "err_line": 6,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [6]’"
    },
    {
      "mod_line": [
        6,
        9
      ],
      "mod_code": [
        "x = a * b * c ;",
        "int ans = x . first ;"
      ],
      "err_line": 6,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [6]’"
    },
    {
      "mod_line": [
        6,
        9,
        18
      ],
      "mod_code": [
        "x = a * b * c ;",
        "int ans = x . first ;",
        "cout << getAns ( a , b ) << \" \" << c = it << endl ;"
      ],
      "err_line": 6,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [6]’"
    },
    {
      "mod_line": [
        6,
        18
      ],
      "mod_code": [
        "x = a * b * c ;",
        "cout << getAns ( a , b ) << \" \" << c = it << endl ;"
      ],
      "err_line": 6,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [6]’"
    },
    {
      "mod_line": [
        7,
        9
      ],
      "mod_code": [
        "int x [ b + c + c ] ;",
        "int ans = x . first ;"
      ],
      "err_line": 7,
      "err_msg": "conflicting declaration ‘int x [((b + c) + c)]’"
    },
    {
      "mod_line": [
        7,
        9,
        18
      ],
      "mod_code": [
        "int x [ b + c + c ] ;",
        "int ans = x . first ;",
        "cout << getAns ( a , b ) << \" \" << c = it << endl ;"
      ],
      "err_line": 7,
      "err_msg": "conflicting declaration ‘int x [((b + c) + c)]’"
    },
    {
      "mod_line": [
        7,
        18
      ],
      "mod_code": [
        "int x [ b + c + c ] ;",
        "cout << getAns ( a , b ) << \" \" << c = it << endl ;"
      ],
      "err_line": 7,
      "err_msg": "conflicting declaration ‘int x [((b + c) + c)]’"
    },
    {
      "mod_line": [
        9,
        18
      ],
      "mod_code": [
        "int ans = x . first ;",
        "cout << getAns ( a , b ) << \" \" << c = it << endl ;"
      ],
      "err_line": 9,
      "err_msg": "request for member ‘first’ in ‘x’, which is of non-class type ‘int [6]’"
    }
  ]
}