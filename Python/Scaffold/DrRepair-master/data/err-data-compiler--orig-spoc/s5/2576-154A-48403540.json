{
  "meta": {
    "index": 2576,
    "hitid": "3X2YVV51PUYYQKLHGUCXCSFGQDFW19",
    "workerid": "A1C5H6OY3HGO4U",
    "probid": "154A",
    "subid": "48403540"
  },
  "lines": [
    {
      "line": 0,
      "text": "PI = double constant with value of arccosine of - 1 . 0",
      "code": "const double PI = acos ( - 1.0 ) ;",
      "indent": 0
    },
    {
      "line": 1,
      "text": "EPS = double constant with value of 1e - 11",
      "code": "const double EPS = 1e-11 ;",
      "indent": 0
    },
    {
      "line": 2,
      "text": "MOD = constant long long with value of 1000000007",
      "code": "const long long MOD = 1000000007 ;",
      "indent": 0
    },
    {
      "line": 3,
      "text": "N = constant integer with value of 100007",
      "code": "const int N = 100000 + 7 ;",
      "indent": 0
    },
    {
      "line": 4,
      "text": "declare function fast that takes no arguments and requires nothing",
      "code": "void fast ( ) { }",
      "indent": 0
    },
    {
      "line": 5,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 6,
      "text": "s , s2 = strings",
      "code": "string s , s2 ;",
      "indent": 1
    },
    {
      "line": 7,
      "text": "read s",
      "code": "cin >> s ;",
      "indent": 1
    },
    {
      "line": 8,
      "text": "add ' * ' to the end of s",
      "code": "s += ' * ' ;",
      "indent": 1
    },
    {
      "line": 9,
      "text": "k = integer",
      "code": "int k ;",
      "indent": 1
    },
    {
      "line": 10,
      "text": "read k",
      "code": "cin >> k ;",
      "indent": 1
    },
    {
      "line": 11,
      "text": "ans = integer with value of 0",
      "code": "int ans = 0 ;",
      "indent": 1
    },
    {
      "line": 12,
      "text": "sum1 , sum2 = integers both with value of 0",
      "code": "int sum1 = 0 , sum2 = 0 ;",
      "indent": 1
    },
    {
      "line": 13,
      "text": "while k is not zero subtract 1 from k do",
      "code": "while ( k -- )",
      "indent": 1
    },
    {
      "line": 14,
      "text": "set sum1 and sum2 to 0",
      "code": "sum1 = 0 , sum2 = 0 ;",
      "indent": 2
    },
    {
      "line": 15,
      "text": "read s2",
      "code": "cin >> s2 ;",
      "indent": 2
    },
    {
      "line": 16,
      "text": "for i = 0 to size of s exclusive",
      "code": "for ( int i = 0 ; i < s . size ( ) ; i ++ )",
      "indent": 2
    },
    {
      "line": 17,
      "text": "if s [ i ] equals s2 [ 0 ] or s2 [ 1 ]",
      "code": "if ( s [ i ] == s2 [ 0 ] || s [ i ] == s2 [ 1 ] )",
      "indent": 3
    },
    {
      "line": 18,
      "text": "if s [ i ] equals s2 [ 0 ] add 1 to sum1",
      "code": "if ( s [ i ] == s2 [ 0 ] ) sum1 ++ ;",
      "indent": 4
    },
    {
      "line": 19,
      "text": "if s [ i ] equals s2 [ 1 ] add 1 to sum2",
      "code": "if ( s [ i ] == s2 [ 1 ] ) sum2 ++ ;",
      "indent": 4
    },
    {
      "line": 20,
      "text": "else",
      "code": "else",
      "indent": 3
    },
    {
      "line": 21,
      "text": "increase ans by the minimum of sum1 and sum2",
      "code": "ans += min ( sum1 , sum2 ) ;",
      "indent": 4
    },
    {
      "line": 22,
      "text": "set sum1 and sum2 to 0",
      "code": "sum1 = sum2 = 0 ;",
      "indent": 4
    },
    {
      "line": 23,
      "text": "DUMMY",
      "code": "}",
      "indent": 3
    },
    {
      "line": 24,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 25,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 26,
      "text": "print ans",
      "code": "cout << ans << endl ;",
      "indent": 1
    },
    {
      "line": 27,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 28,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        4
      ],
      "mod_code": [
        "void fast ( int & requires )"
      ],
      "err_line": 5,
      "err_msg": "expected initializer before ‘int’"
    },
    {
      "mod_line": [
        0
      ],
      "mod_code": [
        "const double PI = arccosine ( - 1.0 ) ;"
      ],
      "err_line": 0,
      "err_msg": "‘arccosine’ was not declared in this scope"
    },
    {
      "mod_line": [
        1
      ],
      "mod_code": [
        "const double EPS = 1e - 11 ;"
      ],
      "err_line": 1,
      "err_msg": "exponent has no digits"
    },
    {
      "mod_line": [
        4
      ],
      "mod_code": [
        "int fast ( long requires )"
      ],
      "err_line": 5,
      "err_msg": "expected initializer before ‘int’"
    },
    {
      "mod_line": [
        6
      ],
      "mod_code": [
        "strings , s2 ;"
      ],
      "err_line": 6,
      "err_msg": "‘strings’ was not declared in this scope"
    },
    {
      "mod_line": [
        8
      ],
      "mod_code": [
        "s . end ( ' * ' ) ;"
      ],
      "err_line": 8,
      "err_msg": "no matching function for call to ‘std::__cxx11::basic_string<char>::end(char)’"
    },
    {
      "mod_line": [
        10
      ],
      "mod_code": [
        "cin >> n ;"
      ],
      "err_line": 10,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        16
      ],
      "mod_code": [
        "for ( i = 0 ; i < s . size ( ) ; i ++ )"
      ],
      "err_line": 16,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        17
      ],
      "mod_code": [
        "void fast ( int & requires )",
        "if ( s [ i ] == s2 [ 0 ] || s2 [ 1 ] == s2 [ 1 ] )"
      ],
      "err_line": 5,
      "err_msg": "expected initializer before ‘int’"
    },
    {
      "mod_line": [
        4,
        17,
        22
      ],
      "mod_code": [
        "void fast ( int & requires )",
        "if ( s [ i ] == s2 [ 0 ] || s2 [ 1 ] == s2 [ 1 ] )",
        "int sum1 = 0 , sum2 = 0 ;"
      ],
      "err_line": 5,
      "err_msg": "expected initializer before ‘int’"
    },
    {
      "mod_line": [
        4,
        17,
        22,
        1
      ],
      "mod_code": [
        "void fast ( int & requires )",
        "if ( s [ i ] == s2 [ 0 ] || s2 [ 1 ] == s2 [ 1 ] )",
        "int sum1 = 0 , sum2 = 0 ;",
        "const double EPS = 1e - 11 ;"
      ],
      "err_line": 1,
      "err_msg": "exponent has no digits"
    },
    {
      "mod_line": [
        4,
        17,
        22,
        0
      ],
      "mod_code": [
        "void fast ( int & requires )",
        "if ( s [ i ] == s2 [ 0 ] || s2 [ 1 ] == s2 [ 1 ] )",
        "int sum1 = 0 , sum2 = 0 ;",
        "const double PI = arccosine ( - 1.0 ) ;"
      ],
      "err_line": 0,
      "err_msg": "‘arccosine’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        17,
        22,
        13
      ],
      "mod_code": [
        "void fast ( int & requires )",
        "if ( s [ i ] == s2 [ 0 ] || s2 [ 1 ] == s2 [ 1 ] )",
        "int sum1 = 0 , sum2 = 0 ;",
        "while ( ! k ) k -- ;"
      ],
      "err_line": 5,
      "err_msg": "expected initializer before ‘int’"
    },
    {
      "mod_line": [
        4,
        17,
        1
      ],
      "mod_code": [
        "void fast ( int & requires )",
        "if ( s [ i ] == s2 [ 0 ] || s2 [ 1 ] == s2 [ 1 ] )",
        "const double EPS = 1e - 11 ;"
      ],
      "err_line": 1,
      "err_msg": "exponent has no digits"
    },
    {
      "mod_line": [
        4,
        17,
        1,
        0
      ],
      "mod_code": [
        "void fast ( int & requires )",
        "if ( s [ i ] == s2 [ 0 ] || s2 [ 1 ] == s2 [ 1 ] )",
        "const double EPS = 1e - 11 ;",
        "const double PI = arccosine ( - 1.0 ) ;"
      ],
      "err_line": 1,
      "err_msg": "exponent has no digits"
    },
    {
      "mod_line": [
        4,
        17,
        1,
        13
      ],
      "mod_code": [
        "void fast ( int & requires )",
        "if ( s [ i ] == s2 [ 0 ] || s2 [ 1 ] == s2 [ 1 ] )",
        "const double EPS = 1e - 11 ;",
        "while ( ! k ) k -- ;"
      ],
      "err_line": 1,
      "err_msg": "exponent has no digits"
    },
    {
      "mod_line": [
        4,
        17,
        0
      ],
      "mod_code": [
        "void fast ( int & requires )",
        "if ( s [ i ] == s2 [ 0 ] || s2 [ 1 ] == s2 [ 1 ] )",
        "const double PI = arccosine ( - 1.0 ) ;"
      ],
      "err_line": 0,
      "err_msg": "‘arccosine’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        17,
        0,
        13
      ],
      "mod_code": [
        "void fast ( int & requires )",
        "if ( s [ i ] == s2 [ 0 ] || s2 [ 1 ] == s2 [ 1 ] )",
        "const double PI = arccosine ( - 1.0 ) ;",
        "while ( ! k ) k -- ;"
      ],
      "err_line": 0,
      "err_msg": "‘arccosine’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        17,
        13
      ],
      "mod_code": [
        "void fast ( int & requires )",
        "if ( s [ i ] == s2 [ 0 ] || s2 [ 1 ] == s2 [ 1 ] )",
        "while ( ! k ) k -- ;"
      ],
      "err_line": 5,
      "err_msg": "expected initializer before ‘int’"
    },
    {
      "mod_line": [
        4,
        22
      ],
      "mod_code": [
        "void fast ( int & requires )",
        "int sum1 = 0 , sum2 = 0 ;"
      ],
      "err_line": 5,
      "err_msg": "expected initializer before ‘int’"
    },
    {
      "mod_line": [
        4,
        22,
        1
      ],
      "mod_code": [
        "void fast ( int & requires )",
        "int sum1 = 0 , sum2 = 0 ;",
        "const double EPS = 1e - 11 ;"
      ],
      "err_line": 1,
      "err_msg": "exponent has no digits"
    },
    {
      "mod_line": [
        4,
        22,
        1,
        0
      ],
      "mod_code": [
        "void fast ( int & requires )",
        "int sum1 = 0 , sum2 = 0 ;",
        "const double EPS = 1e - 11 ;",
        "const double PI = arccosine ( - 1.0 ) ;"
      ],
      "err_line": 1,
      "err_msg": "exponent has no digits"
    },
    {
      "mod_line": [
        4,
        22,
        1,
        13
      ],
      "mod_code": [
        "void fast ( int & requires )",
        "int sum1 = 0 , sum2 = 0 ;",
        "const double EPS = 1e - 11 ;",
        "while ( ! k ) k -- ;"
      ],
      "err_line": 1,
      "err_msg": "exponent has no digits"
    },
    {
      "mod_line": [
        4,
        22,
        0
      ],
      "mod_code": [
        "void fast ( int & requires )",
        "int sum1 = 0 , sum2 = 0 ;",
        "const double PI = arccosine ( - 1.0 ) ;"
      ],
      "err_line": 0,
      "err_msg": "‘arccosine’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        22,
        0,
        13
      ],
      "mod_code": [
        "void fast ( int & requires )",
        "int sum1 = 0 , sum2 = 0 ;",
        "const double PI = arccosine ( - 1.0 ) ;",
        "while ( ! k ) k -- ;"
      ],
      "err_line": 0,
      "err_msg": "‘arccosine’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        22,
        13
      ],
      "mod_code": [
        "void fast ( int & requires )",
        "int sum1 = 0 , sum2 = 0 ;",
        "while ( ! k ) k -- ;"
      ],
      "err_line": 5,
      "err_msg": "expected initializer before ‘int’"
    },
    {
      "mod_line": [
        4,
        1
      ],
      "mod_code": [
        "void fast ( int & requires )",
        "const double EPS = 1e - 11 ;"
      ],
      "err_line": 1,
      "err_msg": "exponent has no digits"
    },
    {
      "mod_line": [
        4,
        1,
        0
      ],
      "mod_code": [
        "void fast ( int & requires )",
        "const double EPS = 1e - 11 ;",
        "const double PI = arccosine ( - 1.0 ) ;"
      ],
      "err_line": 1,
      "err_msg": "exponent has no digits"
    },
    {
      "mod_line": [
        4,
        1,
        0,
        13
      ],
      "mod_code": [
        "void fast ( int & requires )",
        "const double EPS = 1e - 11 ;",
        "const double PI = arccosine ( - 1.0 ) ;",
        "while ( ! k ) k -- ;"
      ],
      "err_line": 1,
      "err_msg": "exponent has no digits"
    },
    {
      "mod_line": [
        4,
        1,
        13
      ],
      "mod_code": [
        "void fast ( int & requires )",
        "const double EPS = 1e - 11 ;",
        "while ( ! k ) k -- ;"
      ],
      "err_line": 1,
      "err_msg": "exponent has no digits"
    },
    {
      "mod_line": [
        4,
        0
      ],
      "mod_code": [
        "void fast ( int & requires )",
        "const double PI = arccosine ( - 1.0 ) ;"
      ],
      "err_line": 0,
      "err_msg": "‘arccosine’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        0,
        13
      ],
      "mod_code": [
        "void fast ( int & requires )",
        "const double PI = arccosine ( - 1.0 ) ;",
        "while ( ! k ) k -- ;"
      ],
      "err_line": 0,
      "err_msg": "‘arccosine’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        13
      ],
      "mod_code": [
        "void fast ( int & requires )",
        "while ( ! k ) k -- ;"
      ],
      "err_line": 5,
      "err_msg": "expected initializer before ‘int’"
    },
    {
      "mod_line": [
        17,
        22,
        1
      ],
      "mod_code": [
        "if ( s [ i ] == s2 [ 0 ] || s2 [ 1 ] == s2 [ 1 ] )",
        "int sum1 = 0 , sum2 = 0 ;",
        "const double EPS = 1e - 11 ;"
      ],
      "err_line": 1,
      "err_msg": "exponent has no digits"
    },
    {
      "mod_line": [
        17,
        22,
        1,
        0
      ],
      "mod_code": [
        "if ( s [ i ] == s2 [ 0 ] || s2 [ 1 ] == s2 [ 1 ] )",
        "int sum1 = 0 , sum2 = 0 ;",
        "const double EPS = 1e - 11 ;",
        "const double PI = arccosine ( - 1.0 ) ;"
      ],
      "err_line": 1,
      "err_msg": "exponent has no digits"
    },
    {
      "mod_line": [
        17,
        22,
        1,
        13
      ],
      "mod_code": [
        "if ( s [ i ] == s2 [ 0 ] || s2 [ 1 ] == s2 [ 1 ] )",
        "int sum1 = 0 , sum2 = 0 ;",
        "const double EPS = 1e - 11 ;",
        "while ( ! k ) k -- ;"
      ],
      "err_line": 1,
      "err_msg": "exponent has no digits"
    },
    {
      "mod_line": [
        17,
        22,
        0
      ],
      "mod_code": [
        "if ( s [ i ] == s2 [ 0 ] || s2 [ 1 ] == s2 [ 1 ] )",
        "int sum1 = 0 , sum2 = 0 ;",
        "const double PI = arccosine ( - 1.0 ) ;"
      ],
      "err_line": 0,
      "err_msg": "‘arccosine’ was not declared in this scope"
    },
    {
      "mod_line": [
        17,
        22,
        0,
        13
      ],
      "mod_code": [
        "if ( s [ i ] == s2 [ 0 ] || s2 [ 1 ] == s2 [ 1 ] )",
        "int sum1 = 0 , sum2 = 0 ;",
        "const double PI = arccosine ( - 1.0 ) ;",
        "while ( ! k ) k -- ;"
      ],
      "err_line": 0,
      "err_msg": "‘arccosine’ was not declared in this scope"
    },
    {
      "mod_line": [
        17,
        1
      ],
      "mod_code": [
        "if ( s [ i ] == s2 [ 0 ] || s2 [ 1 ] == s2 [ 1 ] )",
        "const double EPS = 1e - 11 ;"
      ],
      "err_line": 1,
      "err_msg": "exponent has no digits"
    },
    {
      "mod_line": [
        17,
        1,
        0
      ],
      "mod_code": [
        "if ( s [ i ] == s2 [ 0 ] || s2 [ 1 ] == s2 [ 1 ] )",
        "const double EPS = 1e - 11 ;",
        "const double PI = arccosine ( - 1.0 ) ;"
      ],
      "err_line": 1,
      "err_msg": "exponent has no digits"
    },
    {
      "mod_line": [
        17,
        1,
        0,
        13
      ],
      "mod_code": [
        "if ( s [ i ] == s2 [ 0 ] || s2 [ 1 ] == s2 [ 1 ] )",
        "const double EPS = 1e - 11 ;",
        "const double PI = arccosine ( - 1.0 ) ;",
        "while ( ! k ) k -- ;"
      ],
      "err_line": 1,
      "err_msg": "exponent has no digits"
    },
    {
      "mod_line": [
        17,
        1,
        13
      ],
      "mod_code": [
        "if ( s [ i ] == s2 [ 0 ] || s2 [ 1 ] == s2 [ 1 ] )",
        "const double EPS = 1e - 11 ;",
        "while ( ! k ) k -- ;"
      ],
      "err_line": 1,
      "err_msg": "exponent has no digits"
    },
    {
      "mod_line": [
        17,
        0
      ],
      "mod_code": [
        "if ( s [ i ] == s2 [ 0 ] || s2 [ 1 ] == s2 [ 1 ] )",
        "const double PI = arccosine ( - 1.0 ) ;"
      ],
      "err_line": 0,
      "err_msg": "‘arccosine’ was not declared in this scope"
    },
    {
      "mod_line": [
        17,
        0,
        13
      ],
      "mod_code": [
        "if ( s [ i ] == s2 [ 0 ] || s2 [ 1 ] == s2 [ 1 ] )",
        "const double PI = arccosine ( - 1.0 ) ;",
        "while ( ! k ) k -- ;"
      ],
      "err_line": 0,
      "err_msg": "‘arccosine’ was not declared in this scope"
    },
    {
      "mod_line": [
        22,
        1
      ],
      "mod_code": [
        "int sum1 = 0 , sum2 = 0 ;",
        "const double EPS = 1e - 11 ;"
      ],
      "err_line": 1,
      "err_msg": "exponent has no digits"
    },
    {
      "mod_line": [
        22,
        1,
        0
      ],
      "mod_code": [
        "int sum1 = 0 , sum2 = 0 ;",
        "const double EPS = 1e - 11 ;",
        "const double PI = arccosine ( - 1.0 ) ;"
      ],
      "err_line": 1,
      "err_msg": "exponent has no digits"
    },
    {
      "mod_line": [
        22,
        1,
        0,
        13
      ],
      "mod_code": [
        "int sum1 = 0 , sum2 = 0 ;",
        "const double EPS = 1e - 11 ;",
        "const double PI = arccosine ( - 1.0 ) ;",
        "while ( ! k ) k -- ;"
      ],
      "err_line": 1,
      "err_msg": "exponent has no digits"
    },
    {
      "mod_line": [
        22,
        1,
        13
      ],
      "mod_code": [
        "int sum1 = 0 , sum2 = 0 ;",
        "const double EPS = 1e - 11 ;",
        "while ( ! k ) k -- ;"
      ],
      "err_line": 1,
      "err_msg": "exponent has no digits"
    },
    {
      "mod_line": [
        22,
        0
      ],
      "mod_code": [
        "int sum1 = 0 , sum2 = 0 ;",
        "const double PI = arccosine ( - 1.0 ) ;"
      ],
      "err_line": 0,
      "err_msg": "‘arccosine’ was not declared in this scope"
    },
    {
      "mod_line": [
        22,
        0,
        13
      ],
      "mod_code": [
        "int sum1 = 0 , sum2 = 0 ;",
        "const double PI = arccosine ( - 1.0 ) ;",
        "while ( ! k ) k -- ;"
      ],
      "err_line": 0,
      "err_msg": "‘arccosine’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        0
      ],
      "mod_code": [
        "const double EPS = 1e - 11 ;",
        "const double PI = arccosine ( - 1.0 ) ;"
      ],
      "err_line": 1,
      "err_msg": "exponent has no digits"
    },
    {
      "mod_line": [
        1,
        0,
        13
      ],
      "mod_code": [
        "const double EPS = 1e - 11 ;",
        "const double PI = arccosine ( - 1.0 ) ;",
        "while ( ! k ) k -- ;"
      ],
      "err_line": 1,
      "err_msg": "exponent has no digits"
    },
    {
      "mod_line": [
        1,
        13
      ],
      "mod_code": [
        "const double EPS = 1e - 11 ;",
        "while ( ! k ) k -- ;"
      ],
      "err_line": 1,
      "err_msg": "exponent has no digits"
    },
    {
      "mod_line": [
        0,
        13
      ],
      "mod_code": [
        "const double PI = arccosine ( - 1.0 ) ;",
        "while ( ! k ) k -- ;"
      ],
      "err_line": 0,
      "err_msg": "‘arccosine’ was not declared in this scope"
    }
  ]
}