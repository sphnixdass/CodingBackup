{
  "meta": {
    "index": 1729,
    "hitid": "3LN50BUKPV5LWISKXIGL4DGYW9DLPG",
    "workerid": "A1APYLD4DUK33J",
    "probid": "573A",
    "subid": "48693805"
  },
  "lines": [
    {
      "line": 0,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 1,
      "text": "set cout flag ios : : fixed",
      "code": "cout . setf ( ios :: fixed ) ;",
      "indent": 1
    },
    {
      "line": 2,
      "text": "set cout precision 10",
      "code": "cout . precision ( 10 ) ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "declare integer n",
      "code": "int n ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "read n",
      "code": "cin >> n ;",
      "indent": 1
    },
    {
      "line": 5,
      "text": "declare long long vector items initialized with n",
      "code": "vector < long long > items ( n ) ;",
      "indent": 1
    },
    {
      "line": 6,
      "text": "for i = 0 to n exclusive",
      "code": "for ( int i = 0 ; i < n ; i ++ )",
      "indent": 1
    },
    {
      "line": 7,
      "text": "read items [ i ]",
      "code": "cin >> items [ i ] ;",
      "indent": 2
    },
    {
      "line": 8,
      "text": "while items [ i ] % 2 is 0 , let items [ i ] be items [ i ] / 2",
      "code": "while ( items [ i ] % 2 == 0 ) { items [ i ] = items [ i ] / 2 ; }",
      "indent": 2
    },
    {
      "line": 9,
      "text": "while items [ i ] % 3 is 0 , let items [ i ] be items [ i ] / 3",
      "code": "while ( items [ i ] % 3 == 0 ) { items [ i ] = items [ i ] / 3 ; }",
      "indent": 2
    },
    {
      "line": 10,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 11,
      "text": "declare boolean yes = true",
      "code": "bool yes = true ;",
      "indent": 1
    },
    {
      "line": 12,
      "text": "fo ri = 1 to n exclusive",
      "code": "for ( int i = 1 ; i < n ; i ++ )",
      "indent": 1
    },
    {
      "line": 13,
      "text": "if items [ i ] is not items [ i - 1 ]",
      "code": "if ( items [ i ] != items [ i - 1 ] )",
      "indent": 2
    },
    {
      "line": 14,
      "text": "let yes be false",
      "code": "yes = false ;",
      "indent": 3
    },
    {
      "line": 15,
      "text": "end loop",
      "code": "break ;",
      "indent": 3
    },
    {
      "line": 16,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 17,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 18,
      "text": "if yes is true",
      "code": "if ( yes )",
      "indent": 1
    },
    {
      "line": 19,
      "text": "print \" Yes \" and newline",
      "code": "cout << \" Yes \" << endl ;",
      "indent": 2
    },
    {
      "line": 20,
      "text": "else",
      "code": "else",
      "indent": 1
    },
    {
      "line": 21,
      "text": "print \" No \" and newline",
      "code": "cout << \" No \" << endl ;",
      "indent": 2
    },
    {
      "line": 22,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 23,
      "text": "declare pause as integer",
      "code": "int pause ;",
      "indent": 1
    },
    {
      "line": 24,
      "text": "read pause",
      "code": "cin >> pause ;",
      "indent": 1
    },
    {
      "line": 25,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 26,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        1
      ],
      "mod_code": [
        "cout . fixed == fixed ;"
      ],
      "err_line": 1,
      "err_msg": "no match for ‘operator==’ (operand types are ‘const fmtflags {aka const std::_Ios_Fmtflags}’ and ‘std::ios_base&(std::ios_base&)’)"
    },
    {
      "mod_line": [
        2
      ],
      "mod_code": [
        "exit . precision ( 10 ) ;"
      ],
      "err_line": 2,
      "err_msg": "request for member ‘precision’ in ‘exit’, which is of non-class type ‘void(int) throw ()’"
    },
    {
      "mod_line": [
        4
      ],
      "mod_code": [
        "while ( cin >> n )"
      ],
      "err_line": 7,
      "err_msg": "‘items’ was not declared in this scope"
    },
    {
      "mod_line": [
        6
      ],
      "mod_code": [
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 6,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        23
      ],
      "mod_code": [
        "int pause ( )"
      ],
      "err_line": 24,
      "err_msg": "expected initializer before ‘cin’"
    },
    {
      "mod_line": [
        1,
        14
      ],
      "mod_code": [
        "cout . fixed == fixed ;",
        "bool yes = false ;"
      ],
      "err_line": 1,
      "err_msg": "no match for ‘operator==’ (operand types are ‘const fmtflags {aka const std::_Ios_Fmtflags}’ and ‘std::ios_base&(std::ios_base&)’)"
    },
    {
      "mod_line": [
        1,
        14,
        2
      ],
      "mod_code": [
        "cout . fixed == fixed ;",
        "bool yes = false ;",
        "exit . precision ( 10 ) ;"
      ],
      "err_line": 1,
      "err_msg": "no match for ‘operator==’ (operand types are ‘const fmtflags {aka const std::_Ios_Fmtflags}’ and ‘std::ios_base&(std::ios_base&)’)"
    },
    {
      "mod_line": [
        1,
        14,
        2,
        12
      ],
      "mod_code": [
        "cout . fixed == fixed ;",
        "bool yes = false ;",
        "exit . precision ( 10 ) ;",
        "for ( int i = 1 ; i <= n ; i ++ )"
      ],
      "err_line": 1,
      "err_msg": "no match for ‘operator==’ (operand types are ‘const fmtflags {aka const std::_Ios_Fmtflags}’ and ‘std::ios_base&(std::ios_base&)’)"
    },
    {
      "mod_line": [
        1,
        14,
        2,
        18
      ],
      "mod_code": [
        "cout . fixed == fixed ;",
        "bool yes = false ;",
        "exit . precision ( 10 ) ;",
        "if ( ! yes )"
      ],
      "err_line": 1,
      "err_msg": "no match for ‘operator==’ (operand types are ‘const fmtflags {aka const std::_Ios_Fmtflags}’ and ‘std::ios_base&(std::ios_base&)’)"
    },
    {
      "mod_line": [
        1,
        14,
        2,
        4
      ],
      "mod_code": [
        "cout . fixed == fixed ;",
        "bool yes = false ;",
        "exit . precision ( 10 ) ;",
        "while ( cin >> n )"
      ],
      "err_line": 1,
      "err_msg": "no match for ‘operator==’ (operand types are ‘const fmtflags {aka const std::_Ios_Fmtflags}’ and ‘std::ios_base&(std::ios_base&)’)"
    },
    {
      "mod_line": [
        1,
        14,
        12
      ],
      "mod_code": [
        "cout . fixed == fixed ;",
        "bool yes = false ;",
        "for ( int i = 1 ; i <= n ; i ++ )"
      ],
      "err_line": 1,
      "err_msg": "no match for ‘operator==’ (operand types are ‘const fmtflags {aka const std::_Ios_Fmtflags}’ and ‘std::ios_base&(std::ios_base&)’)"
    },
    {
      "mod_line": [
        1,
        14,
        12,
        18
      ],
      "mod_code": [
        "cout . fixed == fixed ;",
        "bool yes = false ;",
        "for ( int i = 1 ; i <= n ; i ++ )",
        "if ( ! yes )"
      ],
      "err_line": 1,
      "err_msg": "no match for ‘operator==’ (operand types are ‘const fmtflags {aka const std::_Ios_Fmtflags}’ and ‘std::ios_base&(std::ios_base&)’)"
    },
    {
      "mod_line": [
        1,
        14,
        12,
        4
      ],
      "mod_code": [
        "cout . fixed == fixed ;",
        "bool yes = false ;",
        "for ( int i = 1 ; i <= n ; i ++ )",
        "while ( cin >> n )"
      ],
      "err_line": 1,
      "err_msg": "no match for ‘operator==’ (operand types are ‘const fmtflags {aka const std::_Ios_Fmtflags}’ and ‘std::ios_base&(std::ios_base&)’)"
    },
    {
      "mod_line": [
        1,
        14,
        18
      ],
      "mod_code": [
        "cout . fixed == fixed ;",
        "bool yes = false ;",
        "if ( ! yes )"
      ],
      "err_line": 1,
      "err_msg": "no match for ‘operator==’ (operand types are ‘const fmtflags {aka const std::_Ios_Fmtflags}’ and ‘std::ios_base&(std::ios_base&)’)"
    },
    {
      "mod_line": [
        1,
        14,
        18,
        4
      ],
      "mod_code": [
        "cout . fixed == fixed ;",
        "bool yes = false ;",
        "if ( ! yes )",
        "while ( cin >> n )"
      ],
      "err_line": 1,
      "err_msg": "no match for ‘operator==’ (operand types are ‘const fmtflags {aka const std::_Ios_Fmtflags}’ and ‘std::ios_base&(std::ios_base&)’)"
    },
    {
      "mod_line": [
        1,
        14,
        4
      ],
      "mod_code": [
        "cout . fixed == fixed ;",
        "bool yes = false ;",
        "while ( cin >> n )"
      ],
      "err_line": 1,
      "err_msg": "no match for ‘operator==’ (operand types are ‘const fmtflags {aka const std::_Ios_Fmtflags}’ and ‘std::ios_base&(std::ios_base&)’)"
    },
    {
      "mod_line": [
        1,
        2
      ],
      "mod_code": [
        "cout . fixed == fixed ;",
        "exit . precision ( 10 ) ;"
      ],
      "err_line": 1,
      "err_msg": "no match for ‘operator==’ (operand types are ‘const fmtflags {aka const std::_Ios_Fmtflags}’ and ‘std::ios_base&(std::ios_base&)’)"
    },
    {
      "mod_line": [
        1,
        2,
        12
      ],
      "mod_code": [
        "cout . fixed == fixed ;",
        "exit . precision ( 10 ) ;",
        "for ( int i = 1 ; i <= n ; i ++ )"
      ],
      "err_line": 1,
      "err_msg": "no match for ‘operator==’ (operand types are ‘const fmtflags {aka const std::_Ios_Fmtflags}’ and ‘std::ios_base&(std::ios_base&)’)"
    },
    {
      "mod_line": [
        1,
        2,
        12,
        18
      ],
      "mod_code": [
        "cout . fixed == fixed ;",
        "exit . precision ( 10 ) ;",
        "for ( int i = 1 ; i <= n ; i ++ )",
        "if ( ! yes )"
      ],
      "err_line": 1,
      "err_msg": "no match for ‘operator==’ (operand types are ‘const fmtflags {aka const std::_Ios_Fmtflags}’ and ‘std::ios_base&(std::ios_base&)’)"
    },
    {
      "mod_line": [
        1,
        2,
        12,
        4
      ],
      "mod_code": [
        "cout . fixed == fixed ;",
        "exit . precision ( 10 ) ;",
        "for ( int i = 1 ; i <= n ; i ++ )",
        "while ( cin >> n )"
      ],
      "err_line": 1,
      "err_msg": "no match for ‘operator==’ (operand types are ‘const fmtflags {aka const std::_Ios_Fmtflags}’ and ‘std::ios_base&(std::ios_base&)’)"
    },
    {
      "mod_line": [
        1,
        2,
        18
      ],
      "mod_code": [
        "cout . fixed == fixed ;",
        "exit . precision ( 10 ) ;",
        "if ( ! yes )"
      ],
      "err_line": 1,
      "err_msg": "no match for ‘operator==’ (operand types are ‘const fmtflags {aka const std::_Ios_Fmtflags}’ and ‘std::ios_base&(std::ios_base&)’)"
    },
    {
      "mod_line": [
        1,
        2,
        18,
        4
      ],
      "mod_code": [
        "cout . fixed == fixed ;",
        "exit . precision ( 10 ) ;",
        "if ( ! yes )",
        "while ( cin >> n )"
      ],
      "err_line": 1,
      "err_msg": "no match for ‘operator==’ (operand types are ‘const fmtflags {aka const std::_Ios_Fmtflags}’ and ‘std::ios_base&(std::ios_base&)’)"
    },
    {
      "mod_line": [
        1,
        2,
        4
      ],
      "mod_code": [
        "cout . fixed == fixed ;",
        "exit . precision ( 10 ) ;",
        "while ( cin >> n )"
      ],
      "err_line": 1,
      "err_msg": "no match for ‘operator==’ (operand types are ‘const fmtflags {aka const std::_Ios_Fmtflags}’ and ‘std::ios_base&(std::ios_base&)’)"
    },
    {
      "mod_line": [
        1,
        12
      ],
      "mod_code": [
        "cout . fixed == fixed ;",
        "for ( int i = 1 ; i <= n ; i ++ )"
      ],
      "err_line": 1,
      "err_msg": "no match for ‘operator==’ (operand types are ‘const fmtflags {aka const std::_Ios_Fmtflags}’ and ‘std::ios_base&(std::ios_base&)’)"
    },
    {
      "mod_line": [
        1,
        12,
        18
      ],
      "mod_code": [
        "cout . fixed == fixed ;",
        "for ( int i = 1 ; i <= n ; i ++ )",
        "if ( ! yes )"
      ],
      "err_line": 1,
      "err_msg": "no match for ‘operator==’ (operand types are ‘const fmtflags {aka const std::_Ios_Fmtflags}’ and ‘std::ios_base&(std::ios_base&)’)"
    },
    {
      "mod_line": [
        1,
        12,
        18,
        4
      ],
      "mod_code": [
        "cout . fixed == fixed ;",
        "for ( int i = 1 ; i <= n ; i ++ )",
        "if ( ! yes )",
        "while ( cin >> n )"
      ],
      "err_line": 1,
      "err_msg": "no match for ‘operator==’ (operand types are ‘const fmtflags {aka const std::_Ios_Fmtflags}’ and ‘std::ios_base&(std::ios_base&)’)"
    },
    {
      "mod_line": [
        1,
        12,
        4
      ],
      "mod_code": [
        "cout . fixed == fixed ;",
        "for ( int i = 1 ; i <= n ; i ++ )",
        "while ( cin >> n )"
      ],
      "err_line": 1,
      "err_msg": "no match for ‘operator==’ (operand types are ‘const fmtflags {aka const std::_Ios_Fmtflags}’ and ‘std::ios_base&(std::ios_base&)’)"
    },
    {
      "mod_line": [
        1,
        18
      ],
      "mod_code": [
        "cout . fixed == fixed ;",
        "if ( ! yes )"
      ],
      "err_line": 1,
      "err_msg": "no match for ‘operator==’ (operand types are ‘const fmtflags {aka const std::_Ios_Fmtflags}’ and ‘std::ios_base&(std::ios_base&)’)"
    },
    {
      "mod_line": [
        1,
        18,
        4
      ],
      "mod_code": [
        "cout . fixed == fixed ;",
        "if ( ! yes )",
        "while ( cin >> n )"
      ],
      "err_line": 1,
      "err_msg": "no match for ‘operator==’ (operand types are ‘const fmtflags {aka const std::_Ios_Fmtflags}’ and ‘std::ios_base&(std::ios_base&)’)"
    },
    {
      "mod_line": [
        1,
        4
      ],
      "mod_code": [
        "cout . fixed == fixed ;",
        "while ( cin >> n )"
      ],
      "err_line": 1,
      "err_msg": "no match for ‘operator==’ (operand types are ‘const fmtflags {aka const std::_Ios_Fmtflags}’ and ‘std::ios_base&(std::ios_base&)’)"
    },
    {
      "mod_line": [
        14,
        2
      ],
      "mod_code": [
        "bool yes = false ;",
        "exit . precision ( 10 ) ;"
      ],
      "err_line": 2,
      "err_msg": "request for member ‘precision’ in ‘exit’, which is of non-class type ‘void(int) throw ()’"
    },
    {
      "mod_line": [
        14,
        2,
        12
      ],
      "mod_code": [
        "bool yes = false ;",
        "exit . precision ( 10 ) ;",
        "for ( int i = 1 ; i <= n ; i ++ )"
      ],
      "err_line": 2,
      "err_msg": "request for member ‘precision’ in ‘exit’, which is of non-class type ‘void(int) throw ()’"
    },
    {
      "mod_line": [
        14,
        2,
        12,
        18
      ],
      "mod_code": [
        "bool yes = false ;",
        "exit . precision ( 10 ) ;",
        "for ( int i = 1 ; i <= n ; i ++ )",
        "if ( ! yes )"
      ],
      "err_line": 2,
      "err_msg": "request for member ‘precision’ in ‘exit’, which is of non-class type ‘void(int) throw ()’"
    },
    {
      "mod_line": [
        14,
        2,
        12,
        4
      ],
      "mod_code": [
        "bool yes = false ;",
        "exit . precision ( 10 ) ;",
        "for ( int i = 1 ; i <= n ; i ++ )",
        "while ( cin >> n )"
      ],
      "err_line": 2,
      "err_msg": "request for member ‘precision’ in ‘exit’, which is of non-class type ‘void(int) throw ()’"
    },
    {
      "mod_line": [
        14,
        2,
        18
      ],
      "mod_code": [
        "bool yes = false ;",
        "exit . precision ( 10 ) ;",
        "if ( ! yes )"
      ],
      "err_line": 2,
      "err_msg": "request for member ‘precision’ in ‘exit’, which is of non-class type ‘void(int) throw ()’"
    },
    {
      "mod_line": [
        14,
        2,
        18,
        4
      ],
      "mod_code": [
        "bool yes = false ;",
        "exit . precision ( 10 ) ;",
        "if ( ! yes )",
        "while ( cin >> n )"
      ],
      "err_line": 2,
      "err_msg": "request for member ‘precision’ in ‘exit’, which is of non-class type ‘void(int) throw ()’"
    },
    {
      "mod_line": [
        14,
        2,
        4
      ],
      "mod_code": [
        "bool yes = false ;",
        "exit . precision ( 10 ) ;",
        "while ( cin >> n )"
      ],
      "err_line": 2,
      "err_msg": "request for member ‘precision’ in ‘exit’, which is of non-class type ‘void(int) throw ()’"
    },
    {
      "mod_line": [
        14,
        12,
        18,
        4
      ],
      "mod_code": [
        "bool yes = false ;",
        "for ( int i = 1 ; i <= n ; i ++ )",
        "if ( ! yes )",
        "while ( cin >> n )"
      ],
      "err_line": 7,
      "err_msg": "‘items’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        12,
        4
      ],
      "mod_code": [
        "bool yes = false ;",
        "for ( int i = 1 ; i <= n ; i ++ )",
        "while ( cin >> n )"
      ],
      "err_line": 7,
      "err_msg": "‘items’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        18,
        4
      ],
      "mod_code": [
        "bool yes = false ;",
        "if ( ! yes )",
        "while ( cin >> n )"
      ],
      "err_line": 7,
      "err_msg": "‘items’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        4
      ],
      "mod_code": [
        "bool yes = false ;",
        "while ( cin >> n )"
      ],
      "err_line": 7,
      "err_msg": "‘items’ was not declared in this scope"
    },
    {
      "mod_line": [
        2,
        12
      ],
      "mod_code": [
        "exit . precision ( 10 ) ;",
        "for ( int i = 1 ; i <= n ; i ++ )"
      ],
      "err_line": 2,
      "err_msg": "request for member ‘precision’ in ‘exit’, which is of non-class type ‘void(int) throw ()’"
    },
    {
      "mod_line": [
        2,
        12,
        18
      ],
      "mod_code": [
        "exit . precision ( 10 ) ;",
        "for ( int i = 1 ; i <= n ; i ++ )",
        "if ( ! yes )"
      ],
      "err_line": 2,
      "err_msg": "request for member ‘precision’ in ‘exit’, which is of non-class type ‘void(int) throw ()’"
    },
    {
      "mod_line": [
        2,
        12,
        18,
        4
      ],
      "mod_code": [
        "exit . precision ( 10 ) ;",
        "for ( int i = 1 ; i <= n ; i ++ )",
        "if ( ! yes )",
        "while ( cin >> n )"
      ],
      "err_line": 2,
      "err_msg": "request for member ‘precision’ in ‘exit’, which is of non-class type ‘void(int) throw ()’"
    },
    {
      "mod_line": [
        2,
        12,
        4
      ],
      "mod_code": [
        "exit . precision ( 10 ) ;",
        "for ( int i = 1 ; i <= n ; i ++ )",
        "while ( cin >> n )"
      ],
      "err_line": 2,
      "err_msg": "request for member ‘precision’ in ‘exit’, which is of non-class type ‘void(int) throw ()’"
    },
    {
      "mod_line": [
        2,
        18
      ],
      "mod_code": [
        "exit . precision ( 10 ) ;",
        "if ( ! yes )"
      ],
      "err_line": 2,
      "err_msg": "request for member ‘precision’ in ‘exit’, which is of non-class type ‘void(int) throw ()’"
    },
    {
      "mod_line": [
        2,
        18,
        4
      ],
      "mod_code": [
        "exit . precision ( 10 ) ;",
        "if ( ! yes )",
        "while ( cin >> n )"
      ],
      "err_line": 2,
      "err_msg": "request for member ‘precision’ in ‘exit’, which is of non-class type ‘void(int) throw ()’"
    },
    {
      "mod_line": [
        2,
        4
      ],
      "mod_code": [
        "exit . precision ( 10 ) ;",
        "while ( cin >> n )"
      ],
      "err_line": 2,
      "err_msg": "request for member ‘precision’ in ‘exit’, which is of non-class type ‘void(int) throw ()’"
    },
    {
      "mod_line": [
        12,
        18,
        4
      ],
      "mod_code": [
        "for ( int i = 1 ; i <= n ; i ++ )",
        "if ( ! yes )",
        "while ( cin >> n )"
      ],
      "err_line": 7,
      "err_msg": "‘items’ was not declared in this scope"
    },
    {
      "mod_line": [
        12,
        4
      ],
      "mod_code": [
        "for ( int i = 1 ; i <= n ; i ++ )",
        "while ( cin >> n )"
      ],
      "err_line": 7,
      "err_msg": "‘items’ was not declared in this scope"
    },
    {
      "mod_line": [
        18,
        4
      ],
      "mod_code": [
        "if ( ! yes )",
        "while ( cin >> n )"
      ],
      "err_line": 7,
      "err_msg": "‘items’ was not declared in this scope"
    }
  ]
}