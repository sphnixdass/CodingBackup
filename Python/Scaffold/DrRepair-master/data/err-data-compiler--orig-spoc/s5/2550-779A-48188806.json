{
  "meta": {
    "index": 2550,
    "hitid": "3T8DUCXY0N0ON8KIP2MF4EQ0LIN9TI",
    "workerid": "A1APYLD4DUK33J",
    "probid": "779A",
    "subid": "48188806"
  },
  "lines": [
    {
      "line": 0,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 1,
      "text": "declare long longs n , aexc , bexc , exc , odd , even , flag",
      "code": "long long n , aexc , bexc , exc , odd , even , flag ;",
      "indent": 1
    },
    {
      "line": 2,
      "text": "read n",
      "code": "cin >> n ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "declare long long arrays a size n , b size n , i , ac size 6 , bc size 6",
      "code": "long long a [ n ] , b [ n ] , i , ac [ 6 ] , bc [ 6 ] ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "for i = 0 to 6 exclusive",
      "code": "for ( i = 0 ; i < 6 ; i ++ )",
      "indent": 1
    },
    {
      "line": 5,
      "text": "let ac [ i ] be 0",
      "code": "ac [ i ] = 0 ;",
      "indent": 2
    },
    {
      "line": 6,
      "text": "let bc [ i ] be 0",
      "code": "bc [ i ] = 0 ;",
      "indent": 2
    },
    {
      "line": 7,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 8,
      "text": "for i = 0 to n exclusive",
      "code": "for ( i = 0 ; i < n ; i ++ )",
      "indent": 1
    },
    {
      "line": 9,
      "text": "read a [ i ]",
      "code": "cin >> a [ i ] ;",
      "indent": 2
    },
    {
      "line": 10,
      "text": "increment ac [ a [ i ] ]",
      "code": "ac [ a [ i ] ] ++ ;",
      "indent": 2
    },
    {
      "line": 11,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 12,
      "text": "for i = 0 to n exclusive",
      "code": "for ( i = 0 ; i < n ; i ++ )",
      "indent": 1
    },
    {
      "line": 13,
      "text": "read b [ i ]",
      "code": "cin >> b [ i ] ;",
      "indent": 2
    },
    {
      "line": 14,
      "text": "increment bc [ b [ i ] ]",
      "code": "bc [ b [ i ] ] ++ ;",
      "indent": 2
    },
    {
      "line": 15,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 16,
      "text": "let exc be 0",
      "code": "exc = 0 ;",
      "indent": 1
    },
    {
      "line": 17,
      "text": "let aexc be 0",
      "code": "aexc = 0 ;",
      "indent": 1
    },
    {
      "line": 18,
      "text": "let bexc be 0",
      "code": "bexc = 0 ;",
      "indent": 1
    },
    {
      "line": 19,
      "text": "let odd be 0",
      "code": "odd = 0 ;",
      "indent": 1
    },
    {
      "line": 20,
      "text": "let even be 0",
      "code": "even = 0 ;",
      "indent": 1
    },
    {
      "line": 21,
      "text": "let flag be 0",
      "code": "flag = 0 ;",
      "indent": 1
    },
    {
      "line": 22,
      "text": "for i = 1 to 6 exclusive",
      "code": "for ( i = 1 ; i < 6 ; i ++ )",
      "indent": 1
    },
    {
      "line": 23,
      "text": "if ac [ i ] % 2 is bc [ i ] % 2",
      "code": "if ( ac [ i ] % 2 == bc [ i ] % 2 )",
      "indent": 2
    },
    {
      "line": 24,
      "text": "if ac [ i ] is greater than bc [ i ]",
      "code": "if ( ac [ i ] > bc [ i ] )",
      "indent": 3
    },
    {
      "line": 25,
      "text": "increment aexc by ( ac [ i ] - bc [ i ] )",
      "code": "aexc += ( ac [ i ] - bc [ i ] ) ;",
      "indent": 4
    },
    {
      "line": 26,
      "text": "else",
      "code": "else",
      "indent": 3
    },
    {
      "line": 27,
      "text": "increment bexc by ( bc [ i ] - ac [ i ] )",
      "code": "bexc += ( bc [ i ] - ac [ i ] ) ;",
      "indent": 4
    },
    {
      "line": 28,
      "text": "DUMMY",
      "code": "}",
      "indent": 3
    },
    {
      "line": 29,
      "text": "else",
      "code": "else",
      "indent": 2
    },
    {
      "line": 30,
      "text": "let flag be - 1",
      "code": "flag = - 1 ;",
      "indent": 3
    },
    {
      "line": 31,
      "text": "end loop",
      "code": "break ;",
      "indent": 3
    },
    {
      "line": 32,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 33,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 34,
      "text": "if ( flag is - 1 ) or ( aexc % 2 is 1 ) or ( bexc % 2 is 1 )",
      "code": "if ( ( flag == - 1 ) || ( aexc % 2 == 1 ) || ( bexc % 2 == 1 ) )",
      "indent": 1
    },
    {
      "line": 35,
      "text": "print - 1",
      "code": "cout << - 1 ;",
      "indent": 2
    },
    {
      "line": 36,
      "text": "else",
      "code": "else",
      "indent": 1
    },
    {
      "line": 37,
      "text": "if aexc is greater than bexc",
      "code": "if ( aexc > bexc )",
      "indent": 2
    },
    {
      "line": 38,
      "text": "let exc be aexc / 2",
      "code": "exc = ( aexc / 2 ) ;",
      "indent": 3
    },
    {
      "line": 39,
      "text": "else",
      "code": "else",
      "indent": 2
    },
    {
      "line": 40,
      "text": "let exc be bexc / 2",
      "code": "exc = ( bexc / 2 ) ;",
      "indent": 3
    },
    {
      "line": 41,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 42,
      "text": "print exc",
      "code": "cout << exc ;",
      "indent": 2
    },
    {
      "line": 43,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 44,
      "text": "print newline",
      "code": "cout << endl ;",
      "indent": 1
    },
    {
      "line": 45,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        1
      ],
      "mod_code": [
        "long long n , aexc , bexc , exc , odd , flag , flag ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘long long int flag’"
    },
    {
      "mod_line": [
        3
      ],
      "mod_code": [
        "long long a [ n ] , b [ n ] , ac [ 6 ] , ac [ 6 ] ;"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘long long int ac [6]’"
    },
    {
      "mod_line": [
        1
      ],
      "mod_code": [
        "long long n , aexc , bexc , exc , odd , odd , flag ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘long long int odd’"
    },
    {
      "mod_line": [
        2
      ],
      "mod_code": [
        "while ( cin >> n )"
      ],
      "err_line": 4,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        3
      ],
      "mod_code": [
        "long long a [ n ] , b [ n ] , ac [ 6 ] , bc [ 6 ] ;"
      ],
      "err_line": 4,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        16
      ],
      "mod_code": [
        "int exc = 0 ;"
      ],
      "err_line": 16,
      "err_msg": "conflicting declaration ‘int exc’"
    },
    {
      "mod_line": [
        17
      ],
      "mod_code": [
        "int aexc = 0 ;"
      ],
      "err_line": 17,
      "err_msg": "conflicting declaration ‘int aexc’"
    },
    {
      "mod_line": [
        18
      ],
      "mod_code": [
        "int bexc = 0 ;"
      ],
      "err_line": 18,
      "err_msg": "conflicting declaration ‘int bexc’"
    },
    {
      "mod_line": [
        19
      ],
      "mod_code": [
        "vector < int > odd ( 0 ) ;"
      ],
      "err_line": 19,
      "err_msg": "conflicting declaration ‘std::vector<int> odd’"
    },
    {
      "mod_line": [
        20
      ],
      "mod_code": [
        "int even = 0 ;"
      ],
      "err_line": 20,
      "err_msg": "conflicting declaration ‘int even’"
    },
    {
      "mod_line": [
        21
      ],
      "mod_code": [
        "int flag = 0 ;"
      ],
      "err_line": 21,
      "err_msg": "conflicting declaration ‘int flag’"
    },
    {
      "mod_line": [
        24
      ],
      "mod_code": [
        "if ( ac [ i ] ] > bc [ i ] )"
      ],
      "err_line": 24,
      "err_msg": "expected ‘)’ before ‘]’ token"
    },
    {
      "mod_line": [
        34
      ],
      "mod_code": [
        "if ( ( flag == - 1 ) || ( aexc % 2 == 1 ) || ( bexc % 2 == 1 ) ) )"
      ],
      "err_line": 34,
      "err_msg": "expected primary-expression before ‘)’ token"
    },
    {
      "mod_line": [
        1,
        3
      ],
      "mod_code": [
        "long long n , aexc , bexc , exc , odd , flag , flag ;",
        "long long a [ n ] , b [ n ] , ac [ 6 ] , ac [ 6 ] ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘long long int flag’"
    },
    {
      "mod_line": [
        1,
        3,
        35
      ],
      "mod_code": [
        "long long n , aexc , bexc , exc , odd , flag , flag ;",
        "long long a [ n ] , b [ n ] , ac [ 6 ] , ac [ 6 ] ;",
        "cout << - 1 << endl ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘long long int flag’"
    },
    {
      "mod_line": [
        1,
        3,
        35,
        42
      ],
      "mod_code": [
        "long long n , aexc , bexc , exc , odd , flag , flag ;",
        "long long a [ n ] , b [ n ] , ac [ 6 ] , ac [ 6 ] ;",
        "cout << - 1 << endl ;",
        "cout << exc << endl ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘long long int flag’"
    },
    {
      "mod_line": [
        1,
        3,
        35,
        9
      ],
      "mod_code": [
        "long long n , aexc , bexc , exc , odd , flag , flag ;",
        "long long a [ n ] , b [ n ] , ac [ 6 ] , ac [ 6 ] ;",
        "cout << - 1 << endl ;",
        "cout << a [ i ] ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘long long int flag’"
    },
    {
      "mod_line": [
        1,
        3,
        42
      ],
      "mod_code": [
        "long long n , aexc , bexc , exc , odd , flag , flag ;",
        "long long a [ n ] , b [ n ] , ac [ 6 ] , ac [ 6 ] ;",
        "cout << exc << endl ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘long long int flag’"
    },
    {
      "mod_line": [
        1,
        3,
        42,
        9
      ],
      "mod_code": [
        "long long n , aexc , bexc , exc , odd , flag , flag ;",
        "long long a [ n ] , b [ n ] , ac [ 6 ] , ac [ 6 ] ;",
        "cout << exc << endl ;",
        "cout << a [ i ] ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘long long int flag’"
    },
    {
      "mod_line": [
        1,
        3,
        9
      ],
      "mod_code": [
        "long long n , aexc , bexc , exc , odd , flag , flag ;",
        "long long a [ n ] , b [ n ] , ac [ 6 ] , ac [ 6 ] ;",
        "cout << a [ i ] ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘long long int flag’"
    },
    {
      "mod_line": [
        1,
        35
      ],
      "mod_code": [
        "long long n , aexc , bexc , exc , odd , flag , flag ;",
        "cout << - 1 << endl ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘long long int flag’"
    },
    {
      "mod_line": [
        1,
        35,
        42
      ],
      "mod_code": [
        "long long n , aexc , bexc , exc , odd , flag , flag ;",
        "cout << - 1 << endl ;",
        "cout << exc << endl ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘long long int flag’"
    },
    {
      "mod_line": [
        1,
        35,
        42,
        9
      ],
      "mod_code": [
        "long long n , aexc , bexc , exc , odd , flag , flag ;",
        "cout << - 1 << endl ;",
        "cout << exc << endl ;",
        "cout << a [ i ] ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘long long int flag’"
    },
    {
      "mod_line": [
        1,
        35,
        42,
        3
      ],
      "mod_code": [
        "long long n , aexc , bexc , exc , odd , flag , flag ;",
        "cout << - 1 << endl ;",
        "cout << exc << endl ;",
        "long long a [ n ] , b [ n ] , ac [ 6 ] , bc [ 6 ] ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘long long int flag’"
    },
    {
      "mod_line": [
        1,
        35,
        9
      ],
      "mod_code": [
        "long long n , aexc , bexc , exc , odd , flag , flag ;",
        "cout << - 1 << endl ;",
        "cout << a [ i ] ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘long long int flag’"
    },
    {
      "mod_line": [
        1,
        35,
        9,
        3
      ],
      "mod_code": [
        "long long n , aexc , bexc , exc , odd , flag , flag ;",
        "cout << - 1 << endl ;",
        "cout << a [ i ] ;",
        "long long a [ n ] , b [ n ] , ac [ 6 ] , bc [ 6 ] ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘long long int flag’"
    },
    {
      "mod_line": [
        1,
        35,
        3
      ],
      "mod_code": [
        "long long n , aexc , bexc , exc , odd , flag , flag ;",
        "cout << - 1 << endl ;",
        "long long a [ n ] , b [ n ] , ac [ 6 ] , bc [ 6 ] ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘long long int flag’"
    },
    {
      "mod_line": [
        1,
        42
      ],
      "mod_code": [
        "long long n , aexc , bexc , exc , odd , flag , flag ;",
        "cout << exc << endl ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘long long int flag’"
    },
    {
      "mod_line": [
        1,
        42,
        9
      ],
      "mod_code": [
        "long long n , aexc , bexc , exc , odd , flag , flag ;",
        "cout << exc << endl ;",
        "cout << a [ i ] ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘long long int flag’"
    },
    {
      "mod_line": [
        1,
        42,
        9,
        3
      ],
      "mod_code": [
        "long long n , aexc , bexc , exc , odd , flag , flag ;",
        "cout << exc << endl ;",
        "cout << a [ i ] ;",
        "long long a [ n ] , b [ n ] , ac [ 6 ] , bc [ 6 ] ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘long long int flag’"
    },
    {
      "mod_line": [
        1,
        42,
        3
      ],
      "mod_code": [
        "long long n , aexc , bexc , exc , odd , flag , flag ;",
        "cout << exc << endl ;",
        "long long a [ n ] , b [ n ] , ac [ 6 ] , bc [ 6 ] ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘long long int flag’"
    },
    {
      "mod_line": [
        1,
        9
      ],
      "mod_code": [
        "long long n , aexc , bexc , exc , odd , flag , flag ;",
        "cout << a [ i ] ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘long long int flag’"
    },
    {
      "mod_line": [
        1,
        9,
        3
      ],
      "mod_code": [
        "long long n , aexc , bexc , exc , odd , flag , flag ;",
        "cout << a [ i ] ;",
        "long long a [ n ] , b [ n ] , ac [ 6 ] , bc [ 6 ] ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘long long int flag’"
    },
    {
      "mod_line": [
        1,
        3
      ],
      "mod_code": [
        "long long n , aexc , bexc , exc , odd , flag , flag ;",
        "long long a [ n ] , b [ n ] , ac [ 6 ] , bc [ 6 ] ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘long long int flag’"
    },
    {
      "mod_line": [
        3,
        35
      ],
      "mod_code": [
        "long long a [ n ] , b [ n ] , ac [ 6 ] , ac [ 6 ] ;",
        "cout << - 1 << endl ;"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘long long int ac [6]’"
    },
    {
      "mod_line": [
        3,
        35,
        42
      ],
      "mod_code": [
        "long long a [ n ] , b [ n ] , ac [ 6 ] , ac [ 6 ] ;",
        "cout << - 1 << endl ;",
        "cout << exc << endl ;"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘long long int ac [6]’"
    },
    {
      "mod_line": [
        3,
        35,
        42,
        9
      ],
      "mod_code": [
        "long long a [ n ] , b [ n ] , ac [ 6 ] , ac [ 6 ] ;",
        "cout << - 1 << endl ;",
        "cout << exc << endl ;",
        "cout << a [ i ] ;"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘long long int ac [6]’"
    },
    {
      "mod_line": [
        3,
        35,
        9
      ],
      "mod_code": [
        "long long a [ n ] , b [ n ] , ac [ 6 ] , ac [ 6 ] ;",
        "cout << - 1 << endl ;",
        "cout << a [ i ] ;"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘long long int ac [6]’"
    },
    {
      "mod_line": [
        3,
        42
      ],
      "mod_code": [
        "long long a [ n ] , b [ n ] , ac [ 6 ] , ac [ 6 ] ;",
        "cout << exc << endl ;"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘long long int ac [6]’"
    },
    {
      "mod_line": [
        3,
        42,
        9
      ],
      "mod_code": [
        "long long a [ n ] , b [ n ] , ac [ 6 ] , ac [ 6 ] ;",
        "cout << exc << endl ;",
        "cout << a [ i ] ;"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘long long int ac [6]’"
    },
    {
      "mod_line": [
        3,
        9
      ],
      "mod_code": [
        "long long a [ n ] , b [ n ] , ac [ 6 ] , ac [ 6 ] ;",
        "cout << a [ i ] ;"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘long long int ac [6]’"
    },
    {
      "mod_line": [
        35,
        42,
        9,
        3
      ],
      "mod_code": [
        "cout << - 1 << endl ;",
        "cout << exc << endl ;",
        "cout << a [ i ] ;",
        "long long a [ n ] , b [ n ] , ac [ 6 ] , bc [ 6 ] ;"
      ],
      "err_line": 4,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        35,
        42,
        3
      ],
      "mod_code": [
        "cout << - 1 << endl ;",
        "cout << exc << endl ;",
        "long long a [ n ] , b [ n ] , ac [ 6 ] , bc [ 6 ] ;"
      ],
      "err_line": 4,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        35,
        9,
        3
      ],
      "mod_code": [
        "cout << - 1 << endl ;",
        "cout << a [ i ] ;",
        "long long a [ n ] , b [ n ] , ac [ 6 ] , bc [ 6 ] ;"
      ],
      "err_line": 4,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        35,
        3
      ],
      "mod_code": [
        "cout << - 1 << endl ;",
        "long long a [ n ] , b [ n ] , ac [ 6 ] , bc [ 6 ] ;"
      ],
      "err_line": 4,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        42,
        9,
        3
      ],
      "mod_code": [
        "cout << exc << endl ;",
        "cout << a [ i ] ;",
        "long long a [ n ] , b [ n ] , ac [ 6 ] , bc [ 6 ] ;"
      ],
      "err_line": 4,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        42,
        3
      ],
      "mod_code": [
        "cout << exc << endl ;",
        "long long a [ n ] , b [ n ] , ac [ 6 ] , bc [ 6 ] ;"
      ],
      "err_line": 4,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        9,
        3
      ],
      "mod_code": [
        "cout << a [ i ] ;",
        "long long a [ n ] , b [ n ] , ac [ 6 ] , bc [ 6 ] ;"
      ],
      "err_line": 4,
      "err_msg": "‘i’ was not declared in this scope"
    }
  ]
}