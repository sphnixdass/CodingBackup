{
  "meta": {
    "index": 1000,
    "hitid": "3TUOHPJXYHR6GL6ANNX471JHVSTXW1",
    "workerid": "A1APYLD4DUK33J",
    "probid": "196A",
    "subid": "40013164"
  },
  "lines": [
    {
      "line": 0,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 1,
      "text": "create character arrays s , ss , rs , with s size 100005 , ss size 100005 , rs size 100005",
      "code": "char s [ 100005 ] , ss [ 100005 ] , rs [ 100005 ] ;",
      "indent": 1
    },
    {
      "line": 2,
      "text": "read s",
      "code": "cin >> s ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "create integer sz with sz = string length of s",
      "code": "int sz = strlen ( s ) ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "create character ch with ch = ' A '",
      "code": "char ch = ' A ' ;",
      "indent": 1
    },
    {
      "line": 5,
      "text": "create integer k with k = 0",
      "code": "int k = 0 ;",
      "indent": 1
    },
    {
      "line": 6,
      "text": "for i = sz - 1 to 0 inclusive , decrementing i",
      "code": "for ( int i = sz - 1 ; i >= 0 ; i -- )",
      "indent": 1
    },
    {
      "line": 7,
      "text": "if s [ i ] is greater than or equal to ch",
      "code": "if ( s [ i ] >= ch )",
      "indent": 2
    },
    {
      "line": 8,
      "text": "set ch to s [ i ]",
      "code": "ch = s [ i ] ;",
      "indent": 3
    },
    {
      "line": 9,
      "text": "set rs [ increment k ] to ch",
      "code": "rs [ k ++ ] = ch ;",
      "indent": 3
    },
    {
      "line": 10,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 11,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 12,
      "text": "set rs [ k ] to ' \\ 0 '",
      "code": "rs [ k ] = ' \\0 ' ;",
      "indent": 1
    },
    {
      "line": 13,
      "text": "create integer p with p = 0",
      "code": "int p = 0 ;",
      "indent": 1
    },
    {
      "line": 14,
      "text": "for i = k - 1 to 0 inclusive , decrementing i , set ss [ increment p ] to rs [ i ]",
      "code": "for ( int i = k - 1 ; i >= 0 ; i -- ) { ss [ p ++ ] = rs [ i ] ; }",
      "indent": 1
    },
    {
      "line": 15,
      "text": "set ss [ p ] to ' \\ 0 '",
      "code": "ss [ p ] = ' \\0 ' ;",
      "indent": 1
    },
    {
      "line": 16,
      "text": "print ss print newline",
      "code": "cout << ss << endl ;",
      "indent": 1
    },
    {
      "line": 17,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 18,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        1
      ],
      "mod_code": [
        "char s [ 100005 ] , ss [ 100005 ] , ss [ 100005 ] ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘char ss [100005]’"
    },
    {
      "mod_line": [
        3
      ],
      "mod_code": [
        "int sz = s . size ( ) ;"
      ],
      "err_line": 3,
      "err_msg": "request for member ‘size’ in ‘s’, which is of non-class type ‘char [100005]’"
    },
    {
      "mod_line": [
        4
      ],
      "mod_code": [
        "char * ch = ' A ' ;"
      ],
      "err_line": 4,
      "err_msg": "invalid conversion from ‘char’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        6
      ],
      "mod_code": [
        "for ( i = sz - 1 ; i >= 0 ; i -- )"
      ],
      "err_line": 6,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        12
      ],
      "mod_code": [
        "rs [ k ] = ' \\ ' ;"
      ],
      "err_line": 12,
      "err_msg": "missing terminating ' character"
    },
    {
      "mod_line": [
        13
      ],
      "mod_code": [
        "int * p = 0 ;"
      ],
      "err_line": 14,
      "err_msg": "invalid types ‘char [100005][int*]’ for array subscript"
    },
    {
      "mod_line": [
        15
      ],
      "mod_code": [
        "ss [ p ] = ' \\ ' ;"
      ],
      "err_line": 15,
      "err_msg": "missing terminating ' character"
    },
    {
      "mod_line": [
        1,
        9
      ],
      "mod_code": [
        "char s [ 100005 ] , ss [ 100005 ] , ss [ 100005 ] ;",
        "rs [ ++ k ] = ch ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘char ss [100005]’"
    },
    {
      "mod_line": [
        1,
        9,
        3
      ],
      "mod_code": [
        "char s [ 100005 ] , ss [ 100005 ] , ss [ 100005 ] ;",
        "rs [ ++ k ] = ch ;",
        "int sz = s . size ( ) ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘char ss [100005]’"
    },
    {
      "mod_line": [
        1,
        9,
        3,
        4
      ],
      "mod_code": [
        "char s [ 100005 ] , ss [ 100005 ] , ss [ 100005 ] ;",
        "rs [ ++ k ] = ch ;",
        "int sz = s . size ( ) ;",
        "char * ch = ' A ' ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘char ss [100005]’"
    },
    {
      "mod_line": [
        1,
        9,
        3,
        15
      ],
      "mod_code": [
        "char s [ 100005 ] , ss [ 100005 ] , ss [ 100005 ] ;",
        "rs [ ++ k ] = ch ;",
        "int sz = s . size ( ) ;",
        "ss [ p ] = ' \\ ' ;"
      ],
      "err_line": 15,
      "err_msg": "missing terminating ' character"
    },
    {
      "mod_line": [
        1,
        9,
        3,
        6
      ],
      "mod_code": [
        "char s [ 100005 ] , ss [ 100005 ] , ss [ 100005 ] ;",
        "rs [ ++ k ] = ch ;",
        "int sz = s . size ( ) ;",
        "for ( i = sz - 1 ; i >= 0 ; i -- )"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘char ss [100005]’"
    },
    {
      "mod_line": [
        1,
        9,
        4
      ],
      "mod_code": [
        "char s [ 100005 ] , ss [ 100005 ] , ss [ 100005 ] ;",
        "rs [ ++ k ] = ch ;",
        "char * ch = ' A ' ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘char ss [100005]’"
    },
    {
      "mod_line": [
        1,
        9,
        4,
        15
      ],
      "mod_code": [
        "char s [ 100005 ] , ss [ 100005 ] , ss [ 100005 ] ;",
        "rs [ ++ k ] = ch ;",
        "char * ch = ' A ' ;",
        "ss [ p ] = ' \\ ' ;"
      ],
      "err_line": 15,
      "err_msg": "missing terminating ' character"
    },
    {
      "mod_line": [
        1,
        9,
        4,
        6
      ],
      "mod_code": [
        "char s [ 100005 ] , ss [ 100005 ] , ss [ 100005 ] ;",
        "rs [ ++ k ] = ch ;",
        "char * ch = ' A ' ;",
        "for ( i = sz - 1 ; i >= 0 ; i -- )"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘char ss [100005]’"
    },
    {
      "mod_line": [
        1,
        9,
        15
      ],
      "mod_code": [
        "char s [ 100005 ] , ss [ 100005 ] , ss [ 100005 ] ;",
        "rs [ ++ k ] = ch ;",
        "ss [ p ] = ' \\ ' ;"
      ],
      "err_line": 15,
      "err_msg": "missing terminating ' character"
    },
    {
      "mod_line": [
        1,
        9,
        15,
        6
      ],
      "mod_code": [
        "char s [ 100005 ] , ss [ 100005 ] , ss [ 100005 ] ;",
        "rs [ ++ k ] = ch ;",
        "ss [ p ] = ' \\ ' ;",
        "for ( i = sz - 1 ; i >= 0 ; i -- )"
      ],
      "err_line": 15,
      "err_msg": "missing terminating ' character"
    },
    {
      "mod_line": [
        1,
        9,
        6
      ],
      "mod_code": [
        "char s [ 100005 ] , ss [ 100005 ] , ss [ 100005 ] ;",
        "rs [ ++ k ] = ch ;",
        "for ( i = sz - 1 ; i >= 0 ; i -- )"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘char ss [100005]’"
    },
    {
      "mod_line": [
        1,
        3
      ],
      "mod_code": [
        "char s [ 100005 ] , ss [ 100005 ] , ss [ 100005 ] ;",
        "int sz = s . size ( ) ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘char ss [100005]’"
    },
    {
      "mod_line": [
        1,
        3,
        4
      ],
      "mod_code": [
        "char s [ 100005 ] , ss [ 100005 ] , ss [ 100005 ] ;",
        "int sz = s . size ( ) ;",
        "char * ch = ' A ' ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘char ss [100005]’"
    },
    {
      "mod_line": [
        1,
        3,
        4,
        15
      ],
      "mod_code": [
        "char s [ 100005 ] , ss [ 100005 ] , ss [ 100005 ] ;",
        "int sz = s . size ( ) ;",
        "char * ch = ' A ' ;",
        "ss [ p ] = ' \\ ' ;"
      ],
      "err_line": 15,
      "err_msg": "missing terminating ' character"
    },
    {
      "mod_line": [
        1,
        3,
        4,
        6
      ],
      "mod_code": [
        "char s [ 100005 ] , ss [ 100005 ] , ss [ 100005 ] ;",
        "int sz = s . size ( ) ;",
        "char * ch = ' A ' ;",
        "for ( i = sz - 1 ; i >= 0 ; i -- )"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘char ss [100005]’"
    },
    {
      "mod_line": [
        1,
        3,
        15
      ],
      "mod_code": [
        "char s [ 100005 ] , ss [ 100005 ] , ss [ 100005 ] ;",
        "int sz = s . size ( ) ;",
        "ss [ p ] = ' \\ ' ;"
      ],
      "err_line": 15,
      "err_msg": "missing terminating ' character"
    },
    {
      "mod_line": [
        1,
        3,
        15,
        6
      ],
      "mod_code": [
        "char s [ 100005 ] , ss [ 100005 ] , ss [ 100005 ] ;",
        "int sz = s . size ( ) ;",
        "ss [ p ] = ' \\ ' ;",
        "for ( i = sz - 1 ; i >= 0 ; i -- )"
      ],
      "err_line": 15,
      "err_msg": "missing terminating ' character"
    },
    {
      "mod_line": [
        1,
        3,
        6
      ],
      "mod_code": [
        "char s [ 100005 ] , ss [ 100005 ] , ss [ 100005 ] ;",
        "int sz = s . size ( ) ;",
        "for ( i = sz - 1 ; i >= 0 ; i -- )"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘char ss [100005]’"
    },
    {
      "mod_line": [
        1,
        4
      ],
      "mod_code": [
        "char s [ 100005 ] , ss [ 100005 ] , ss [ 100005 ] ;",
        "char * ch = ' A ' ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘char ss [100005]’"
    },
    {
      "mod_line": [
        1,
        4,
        15
      ],
      "mod_code": [
        "char s [ 100005 ] , ss [ 100005 ] , ss [ 100005 ] ;",
        "char * ch = ' A ' ;",
        "ss [ p ] = ' \\ ' ;"
      ],
      "err_line": 15,
      "err_msg": "missing terminating ' character"
    },
    {
      "mod_line": [
        1,
        4,
        15,
        6
      ],
      "mod_code": [
        "char s [ 100005 ] , ss [ 100005 ] , ss [ 100005 ] ;",
        "char * ch = ' A ' ;",
        "ss [ p ] = ' \\ ' ;",
        "for ( i = sz - 1 ; i >= 0 ; i -- )"
      ],
      "err_line": 15,
      "err_msg": "missing terminating ' character"
    },
    {
      "mod_line": [
        1,
        4,
        6
      ],
      "mod_code": [
        "char s [ 100005 ] , ss [ 100005 ] , ss [ 100005 ] ;",
        "char * ch = ' A ' ;",
        "for ( i = sz - 1 ; i >= 0 ; i -- )"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘char ss [100005]’"
    },
    {
      "mod_line": [
        1,
        15
      ],
      "mod_code": [
        "char s [ 100005 ] , ss [ 100005 ] , ss [ 100005 ] ;",
        "ss [ p ] = ' \\ ' ;"
      ],
      "err_line": 15,
      "err_msg": "missing terminating ' character"
    },
    {
      "mod_line": [
        1,
        15,
        6
      ],
      "mod_code": [
        "char s [ 100005 ] , ss [ 100005 ] , ss [ 100005 ] ;",
        "ss [ p ] = ' \\ ' ;",
        "for ( i = sz - 1 ; i >= 0 ; i -- )"
      ],
      "err_line": 15,
      "err_msg": "missing terminating ' character"
    },
    {
      "mod_line": [
        1,
        6
      ],
      "mod_code": [
        "char s [ 100005 ] , ss [ 100005 ] , ss [ 100005 ] ;",
        "for ( i = sz - 1 ; i >= 0 ; i -- )"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘char ss [100005]’"
    },
    {
      "mod_line": [
        9,
        3
      ],
      "mod_code": [
        "rs [ ++ k ] = ch ;",
        "int sz = s . size ( ) ;"
      ],
      "err_line": 3,
      "err_msg": "request for member ‘size’ in ‘s’, which is of non-class type ‘char [100005]’"
    },
    {
      "mod_line": [
        9,
        3,
        4
      ],
      "mod_code": [
        "rs [ ++ k ] = ch ;",
        "int sz = s . size ( ) ;",
        "char * ch = ' A ' ;"
      ],
      "err_line": 3,
      "err_msg": "request for member ‘size’ in ‘s’, which is of non-class type ‘char [100005]’"
    },
    {
      "mod_line": [
        9,
        3,
        4,
        15
      ],
      "mod_code": [
        "rs [ ++ k ] = ch ;",
        "int sz = s . size ( ) ;",
        "char * ch = ' A ' ;",
        "ss [ p ] = ' \\ ' ;"
      ],
      "err_line": 15,
      "err_msg": "missing terminating ' character"
    },
    {
      "mod_line": [
        9,
        3,
        4,
        6
      ],
      "mod_code": [
        "rs [ ++ k ] = ch ;",
        "int sz = s . size ( ) ;",
        "char * ch = ' A ' ;",
        "for ( i = sz - 1 ; i >= 0 ; i -- )"
      ],
      "err_line": 3,
      "err_msg": "request for member ‘size’ in ‘s’, which is of non-class type ‘char [100005]’"
    },
    {
      "mod_line": [
        9,
        3,
        15
      ],
      "mod_code": [
        "rs [ ++ k ] = ch ;",
        "int sz = s . size ( ) ;",
        "ss [ p ] = ' \\ ' ;"
      ],
      "err_line": 15,
      "err_msg": "missing terminating ' character"
    },
    {
      "mod_line": [
        9,
        3,
        15,
        6
      ],
      "mod_code": [
        "rs [ ++ k ] = ch ;",
        "int sz = s . size ( ) ;",
        "ss [ p ] = ' \\ ' ;",
        "for ( i = sz - 1 ; i >= 0 ; i -- )"
      ],
      "err_line": 15,
      "err_msg": "missing terminating ' character"
    },
    {
      "mod_line": [
        9,
        3,
        6
      ],
      "mod_code": [
        "rs [ ++ k ] = ch ;",
        "int sz = s . size ( ) ;",
        "for ( i = sz - 1 ; i >= 0 ; i -- )"
      ],
      "err_line": 3,
      "err_msg": "request for member ‘size’ in ‘s’, which is of non-class type ‘char [100005]’"
    },
    {
      "mod_line": [
        9,
        4
      ],
      "mod_code": [
        "rs [ ++ k ] = ch ;",
        "char * ch = ' A ' ;"
      ],
      "err_line": 4,
      "err_msg": "invalid conversion from ‘char’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        9,
        4,
        15
      ],
      "mod_code": [
        "rs [ ++ k ] = ch ;",
        "char * ch = ' A ' ;",
        "ss [ p ] = ' \\ ' ;"
      ],
      "err_line": 15,
      "err_msg": "missing terminating ' character"
    },
    {
      "mod_line": [
        9,
        4,
        15,
        6
      ],
      "mod_code": [
        "rs [ ++ k ] = ch ;",
        "char * ch = ' A ' ;",
        "ss [ p ] = ' \\ ' ;",
        "for ( i = sz - 1 ; i >= 0 ; i -- )"
      ],
      "err_line": 15,
      "err_msg": "missing terminating ' character"
    },
    {
      "mod_line": [
        9,
        4,
        6
      ],
      "mod_code": [
        "rs [ ++ k ] = ch ;",
        "char * ch = ' A ' ;",
        "for ( i = sz - 1 ; i >= 0 ; i -- )"
      ],
      "err_line": 4,
      "err_msg": "invalid conversion from ‘char’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        9,
        15
      ],
      "mod_code": [
        "rs [ ++ k ] = ch ;",
        "ss [ p ] = ' \\ ' ;"
      ],
      "err_line": 15,
      "err_msg": "missing terminating ' character"
    },
    {
      "mod_line": [
        9,
        15,
        6
      ],
      "mod_code": [
        "rs [ ++ k ] = ch ;",
        "ss [ p ] = ' \\ ' ;",
        "for ( i = sz - 1 ; i >= 0 ; i -- )"
      ],
      "err_line": 15,
      "err_msg": "missing terminating ' character"
    },
    {
      "mod_line": [
        9,
        6
      ],
      "mod_code": [
        "rs [ ++ k ] = ch ;",
        "for ( i = sz - 1 ; i >= 0 ; i -- )"
      ],
      "err_line": 6,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        4
      ],
      "mod_code": [
        "int sz = s . size ( ) ;",
        "char * ch = ' A ' ;"
      ],
      "err_line": 3,
      "err_msg": "request for member ‘size’ in ‘s’, which is of non-class type ‘char [100005]’"
    },
    {
      "mod_line": [
        3,
        4,
        15
      ],
      "mod_code": [
        "int sz = s . size ( ) ;",
        "char * ch = ' A ' ;",
        "ss [ p ] = ' \\ ' ;"
      ],
      "err_line": 15,
      "err_msg": "missing terminating ' character"
    },
    {
      "mod_line": [
        3,
        4,
        15,
        6
      ],
      "mod_code": [
        "int sz = s . size ( ) ;",
        "char * ch = ' A ' ;",
        "ss [ p ] = ' \\ ' ;",
        "for ( i = sz - 1 ; i >= 0 ; i -- )"
      ],
      "err_line": 15,
      "err_msg": "missing terminating ' character"
    },
    {
      "mod_line": [
        3,
        4,
        6
      ],
      "mod_code": [
        "int sz = s . size ( ) ;",
        "char * ch = ' A ' ;",
        "for ( i = sz - 1 ; i >= 0 ; i -- )"
      ],
      "err_line": 3,
      "err_msg": "request for member ‘size’ in ‘s’, which is of non-class type ‘char [100005]’"
    },
    {
      "mod_line": [
        3,
        15
      ],
      "mod_code": [
        "int sz = s . size ( ) ;",
        "ss [ p ] = ' \\ ' ;"
      ],
      "err_line": 15,
      "err_msg": "missing terminating ' character"
    },
    {
      "mod_line": [
        3,
        15,
        6
      ],
      "mod_code": [
        "int sz = s . size ( ) ;",
        "ss [ p ] = ' \\ ' ;",
        "for ( i = sz - 1 ; i >= 0 ; i -- )"
      ],
      "err_line": 15,
      "err_msg": "missing terminating ' character"
    },
    {
      "mod_line": [
        3,
        6
      ],
      "mod_code": [
        "int sz = s . size ( ) ;",
        "for ( i = sz - 1 ; i >= 0 ; i -- )"
      ],
      "err_line": 3,
      "err_msg": "request for member ‘size’ in ‘s’, which is of non-class type ‘char [100005]’"
    },
    {
      "mod_line": [
        4,
        15
      ],
      "mod_code": [
        "char * ch = ' A ' ;",
        "ss [ p ] = ' \\ ' ;"
      ],
      "err_line": 15,
      "err_msg": "missing terminating ' character"
    },
    {
      "mod_line": [
        4,
        15,
        6
      ],
      "mod_code": [
        "char * ch = ' A ' ;",
        "ss [ p ] = ' \\ ' ;",
        "for ( i = sz - 1 ; i >= 0 ; i -- )"
      ],
      "err_line": 15,
      "err_msg": "missing terminating ' character"
    },
    {
      "mod_line": [
        4,
        6
      ],
      "mod_code": [
        "char * ch = ' A ' ;",
        "for ( i = sz - 1 ; i >= 0 ; i -- )"
      ],
      "err_line": 4,
      "err_msg": "invalid conversion from ‘char’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        15,
        6
      ],
      "mod_code": [
        "ss [ p ] = ' \\ ' ;",
        "for ( i = sz - 1 ; i >= 0 ; i -- )"
      ],
      "err_line": 15,
      "err_msg": "missing terminating ' character"
    }
  ]
}