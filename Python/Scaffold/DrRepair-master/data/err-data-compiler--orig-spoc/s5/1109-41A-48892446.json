{
  "meta": {
    "index": 1109,
    "hitid": "30EV7DWJTVPXMBHE1162SLRD9HF6Y6",
    "workerid": "AIWEXPJAU66D9",
    "probid": "41A",
    "subid": "48892446"
  },
  "lines": [
    {
      "line": 0,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 1,
      "text": "create strings s1 and s2",
      "code": "string s1 , s2 ;",
      "indent": 1
    },
    {
      "line": 2,
      "text": "read s1 and s2",
      "code": "cin >> s1 >> s2 ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "let n and flag be integers with n = length of s1 and flag = 0",
      "code": "int n = s1 . length ( ) , flag = 0 ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "if n ! = length of s2 set flag to 1",
      "code": "if ( n != s2 . length ( ) ) flag = 1 ;",
      "indent": 1
    },
    {
      "line": 5,
      "text": "for integer i = 0 to n exclusive and ! flag",
      "code": "for ( int i = 0 ; i < n && ! flag ; i ++ )",
      "indent": 1
    },
    {
      "line": 6,
      "text": "if character at the index i in ! = character at the index n - 1 - i in s2",
      "code": "if ( s1 . at ( i ) != s2 . at ( n - 1 - i ) )",
      "indent": 2
    },
    {
      "line": 7,
      "text": "flag = 1",
      "code": "flag = 1 ;",
      "indent": 3
    },
    {
      "line": 8,
      "text": "break the loop",
      "code": "break ;",
      "indent": 3
    },
    {
      "line": 9,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 10,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 11,
      "text": "print \" NO \" if flag is set or \" YES \" if it is not , and a new line",
      "code": "cout << ( ( flag ) ? ( \" NO \" ) : ( \" YES \" ) ) << endl ;",
      "indent": 1
    },
    {
      "line": 12,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 13,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        3
      ],
      "mod_code": [
        "int n , flag = s1 . length ( ) = 0 ;"
      ],
      "err_line": 3,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        11
      ],
      "mod_code": [
        "cout << ( it ? \" NO \" : \" YES \" ) << endl ;"
      ],
      "err_line": 11,
      "err_msg": "‘it’ was not declared in this scope"
    },
    {
      "mod_line": [
        1
      ],
      "mod_code": [
        "string s1 create s2 ;"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘create’"
    },
    {
      "mod_line": [
        2
      ],
      "mod_code": [
        "cout << s1 >> s2 ;"
      ],
      "err_line": 2,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::basic_ostream<char>’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        3
      ],
      "mod_code": [
        "int n , flag = 0 , flag = 0 ;"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘int flag’"
    },
    {
      "mod_line": [
        8
      ],
      "mod_code": [
        "break the ;"
      ],
      "err_line": 8,
      "err_msg": "expected ‘;’ before ‘the’"
    },
    {
      "mod_line": [
        3,
        6
      ],
      "mod_code": [
        "int n , flag = s1 . length ( ) = 0 ;",
        "if ( ! s2 . at ( i ) != s2 . at ( n - 1 - i ) )"
      ],
      "err_line": 3,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        3,
        6,
        11
      ],
      "mod_code": [
        "int n , flag = s1 . length ( ) = 0 ;",
        "if ( ! s2 . at ( i ) != s2 . at ( n - 1 - i ) )",
        "cout << ( it ? \" NO \" : \" YES \" ) << endl ;"
      ],
      "err_line": 3,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        3,
        6,
        11,
        8
      ],
      "mod_code": [
        "int n , flag = s1 . length ( ) = 0 ;",
        "if ( ! s2 . at ( i ) != s2 . at ( n - 1 - i ) )",
        "cout << ( it ? \" NO \" : \" YES \" ) << endl ;",
        "break the ;"
      ],
      "err_line": 3,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        3,
        6,
        11,
        1
      ],
      "mod_code": [
        "int n , flag = s1 . length ( ) = 0 ;",
        "if ( ! s2 . at ( i ) != s2 . at ( n - 1 - i ) )",
        "cout << ( it ? \" NO \" : \" YES \" ) << endl ;",
        "string s1 create s2 ;"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘create’"
    },
    {
      "mod_line": [
        3,
        6,
        8
      ],
      "mod_code": [
        "int n , flag = s1 . length ( ) = 0 ;",
        "if ( ! s2 . at ( i ) != s2 . at ( n - 1 - i ) )",
        "break the ;"
      ],
      "err_line": 3,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        3,
        6,
        8,
        1
      ],
      "mod_code": [
        "int n , flag = s1 . length ( ) = 0 ;",
        "if ( ! s2 . at ( i ) != s2 . at ( n - 1 - i ) )",
        "break the ;",
        "string s1 create s2 ;"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘create’"
    },
    {
      "mod_line": [
        3,
        6,
        1
      ],
      "mod_code": [
        "int n , flag = s1 . length ( ) = 0 ;",
        "if ( ! s2 . at ( i ) != s2 . at ( n - 1 - i ) )",
        "string s1 create s2 ;"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘create’"
    },
    {
      "mod_line": [
        3,
        11
      ],
      "mod_code": [
        "int n , flag = s1 . length ( ) = 0 ;",
        "cout << ( it ? \" NO \" : \" YES \" ) << endl ;"
      ],
      "err_line": 3,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        3,
        11,
        8
      ],
      "mod_code": [
        "int n , flag = s1 . length ( ) = 0 ;",
        "cout << ( it ? \" NO \" : \" YES \" ) << endl ;",
        "break the ;"
      ],
      "err_line": 3,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        3,
        11,
        8,
        6
      ],
      "mod_code": [
        "int n , flag = s1 . length ( ) = 0 ;",
        "cout << ( it ? \" NO \" : \" YES \" ) << endl ;",
        "break the ;",
        "if ( ! s2 . find ( i ) != s2 . at ( n - 1 - i ) )"
      ],
      "err_line": 3,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        3,
        11,
        8,
        1
      ],
      "mod_code": [
        "int n , flag = s1 . length ( ) = 0 ;",
        "cout << ( it ? \" NO \" : \" YES \" ) << endl ;",
        "break the ;",
        "string s1 create s2 ;"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘create’"
    },
    {
      "mod_line": [
        3,
        11,
        6
      ],
      "mod_code": [
        "int n , flag = s1 . length ( ) = 0 ;",
        "cout << ( it ? \" NO \" : \" YES \" ) << endl ;",
        "if ( ! s2 . find ( i ) != s2 . at ( n - 1 - i ) )"
      ],
      "err_line": 3,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        3,
        11,
        6,
        1
      ],
      "mod_code": [
        "int n , flag = s1 . length ( ) = 0 ;",
        "cout << ( it ? \" NO \" : \" YES \" ) << endl ;",
        "if ( ! s2 . find ( i ) != s2 . at ( n - 1 - i ) )",
        "string s1 create s2 ;"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘create’"
    },
    {
      "mod_line": [
        3,
        11,
        1
      ],
      "mod_code": [
        "int n , flag = s1 . length ( ) = 0 ;",
        "cout << ( it ? \" NO \" : \" YES \" ) << endl ;",
        "string s1 create s2 ;"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘create’"
    },
    {
      "mod_line": [
        3,
        8
      ],
      "mod_code": [
        "int n , flag = s1 . length ( ) = 0 ;",
        "break the ;"
      ],
      "err_line": 3,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        3,
        8,
        6
      ],
      "mod_code": [
        "int n , flag = s1 . length ( ) = 0 ;",
        "break the ;",
        "if ( ! s2 . find ( i ) != s2 . at ( n - 1 - i ) )"
      ],
      "err_line": 3,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        3,
        8,
        6,
        1
      ],
      "mod_code": [
        "int n , flag = s1 . length ( ) = 0 ;",
        "break the ;",
        "if ( ! s2 . find ( i ) != s2 . at ( n - 1 - i ) )",
        "string s1 create s2 ;"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘create’"
    },
    {
      "mod_line": [
        3,
        8,
        1
      ],
      "mod_code": [
        "int n , flag = s1 . length ( ) = 0 ;",
        "break the ;",
        "string s1 create s2 ;"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘create’"
    },
    {
      "mod_line": [
        3,
        6
      ],
      "mod_code": [
        "int n , flag = s1 . length ( ) = 0 ;",
        "if ( ! s2 . find ( i ) != s2 . at ( n - 1 - i ) )"
      ],
      "err_line": 3,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        3,
        6,
        1
      ],
      "mod_code": [
        "int n , flag = s1 . length ( ) = 0 ;",
        "if ( ! s2 . find ( i ) != s2 . at ( n - 1 - i ) )",
        "string s1 create s2 ;"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘create’"
    },
    {
      "mod_line": [
        3,
        1
      ],
      "mod_code": [
        "int n , flag = s1 . length ( ) = 0 ;",
        "string s1 create s2 ;"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘create’"
    },
    {
      "mod_line": [
        6,
        11
      ],
      "mod_code": [
        "if ( ! s2 . at ( i ) != s2 . at ( n - 1 - i ) )",
        "cout << ( it ? \" NO \" : \" YES \" ) << endl ;"
      ],
      "err_line": 11,
      "err_msg": "‘it’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        11,
        8
      ],
      "mod_code": [
        "if ( ! s2 . at ( i ) != s2 . at ( n - 1 - i ) )",
        "cout << ( it ? \" NO \" : \" YES \" ) << endl ;",
        "break the ;"
      ],
      "err_line": 8,
      "err_msg": "expected ‘;’ before ‘the’"
    },
    {
      "mod_line": [
        6,
        11,
        8,
        1
      ],
      "mod_code": [
        "if ( ! s2 . at ( i ) != s2 . at ( n - 1 - i ) )",
        "cout << ( it ? \" NO \" : \" YES \" ) << endl ;",
        "break the ;",
        "string s1 create s2 ;"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘create’"
    },
    {
      "mod_line": [
        6,
        11,
        1
      ],
      "mod_code": [
        "if ( ! s2 . at ( i ) != s2 . at ( n - 1 - i ) )",
        "cout << ( it ? \" NO \" : \" YES \" ) << endl ;",
        "string s1 create s2 ;"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘create’"
    },
    {
      "mod_line": [
        6,
        8
      ],
      "mod_code": [
        "if ( ! s2 . at ( i ) != s2 . at ( n - 1 - i ) )",
        "break the ;"
      ],
      "err_line": 8,
      "err_msg": "expected ‘;’ before ‘the’"
    },
    {
      "mod_line": [
        6,
        8,
        1
      ],
      "mod_code": [
        "if ( ! s2 . at ( i ) != s2 . at ( n - 1 - i ) )",
        "break the ;",
        "string s1 create s2 ;"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘create’"
    },
    {
      "mod_line": [
        6,
        1
      ],
      "mod_code": [
        "if ( ! s2 . at ( i ) != s2 . at ( n - 1 - i ) )",
        "string s1 create s2 ;"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘create’"
    },
    {
      "mod_line": [
        11,
        8
      ],
      "mod_code": [
        "cout << ( it ? \" NO \" : \" YES \" ) << endl ;",
        "break the ;"
      ],
      "err_line": 8,
      "err_msg": "expected ‘;’ before ‘the’"
    },
    {
      "mod_line": [
        11,
        8,
        6
      ],
      "mod_code": [
        "cout << ( it ? \" NO \" : \" YES \" ) << endl ;",
        "break the ;",
        "if ( ! s2 . find ( i ) != s2 . at ( n - 1 - i ) )"
      ],
      "err_line": 8,
      "err_msg": "expected ‘;’ before ‘the’"
    },
    {
      "mod_line": [
        11,
        8,
        6,
        1
      ],
      "mod_code": [
        "cout << ( it ? \" NO \" : \" YES \" ) << endl ;",
        "break the ;",
        "if ( ! s2 . find ( i ) != s2 . at ( n - 1 - i ) )",
        "string s1 create s2 ;"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘create’"
    },
    {
      "mod_line": [
        11,
        8,
        1
      ],
      "mod_code": [
        "cout << ( it ? \" NO \" : \" YES \" ) << endl ;",
        "break the ;",
        "string s1 create s2 ;"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘create’"
    },
    {
      "mod_line": [
        11,
        6
      ],
      "mod_code": [
        "cout << ( it ? \" NO \" : \" YES \" ) << endl ;",
        "if ( ! s2 . find ( i ) != s2 . at ( n - 1 - i ) )"
      ],
      "err_line": 11,
      "err_msg": "‘it’ was not declared in this scope"
    },
    {
      "mod_line": [
        11,
        6,
        1
      ],
      "mod_code": [
        "cout << ( it ? \" NO \" : \" YES \" ) << endl ;",
        "if ( ! s2 . find ( i ) != s2 . at ( n - 1 - i ) )",
        "string s1 create s2 ;"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘create’"
    },
    {
      "mod_line": [
        11,
        1
      ],
      "mod_code": [
        "cout << ( it ? \" NO \" : \" YES \" ) << endl ;",
        "string s1 create s2 ;"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘create’"
    },
    {
      "mod_line": [
        8,
        6
      ],
      "mod_code": [
        "break the ;",
        "if ( ! s2 . find ( i ) != s2 . at ( n - 1 - i ) )"
      ],
      "err_line": 8,
      "err_msg": "expected ‘;’ before ‘the’"
    },
    {
      "mod_line": [
        8,
        6,
        1
      ],
      "mod_code": [
        "break the ;",
        "if ( ! s2 . find ( i ) != s2 . at ( n - 1 - i ) )",
        "string s1 create s2 ;"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘create’"
    },
    {
      "mod_line": [
        8,
        1
      ],
      "mod_code": [
        "break the ;",
        "string s1 create s2 ;"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘create’"
    },
    {
      "mod_line": [
        6,
        1
      ],
      "mod_code": [
        "if ( ! s2 . find ( i ) != s2 . at ( n - 1 - i ) )",
        "string s1 create s2 ;"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘create’"
    }
  ]
}