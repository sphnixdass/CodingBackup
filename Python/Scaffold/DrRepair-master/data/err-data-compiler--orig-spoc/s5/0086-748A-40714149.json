{
  "meta": {
    "index": 86,
    "hitid": "3DZKABX2ZIZ5YYVA6HWL7MFTN14VCO",
    "workerid": "AIWEXPJAU66D9",
    "probid": "748A",
    "subid": "40714149"
  },
  "lines": [
    {
      "line": 0,
      "text": "create integers n , m and k",
      "code": "int n , m , k ;",
      "indent": 0
    },
    {
      "line": 1,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 2,
      "text": "read n , m and k",
      "code": "cin >> n >> m >> k ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "declare integer l = ( k + ( 2 * m - 1 ) ) / ( 2 * m )",
      "code": "int l = ( k + ( 2 * m - 1 ) ) / ( 2 * m ) ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "declare integer d = ( k - 2 * ( l - 1 ) * m + 1 ) / 2",
      "code": "int d = ( k - 2 * ( l - 1 ) * m + 1 ) / 2 ;",
      "indent": 1
    },
    {
      "line": 5,
      "text": "if ( k - 2 * ( l - 1 ) * m ) % 2 = 1",
      "code": "if ( ( k - 2 * ( l - 1 ) * m ) % 2 == 1 )",
      "indent": 1
    },
    {
      "line": 6,
      "text": "print l , \" \" , d and \" L \\ n \"",
      "code": "cout << l << \" \" << d << \" L\\n \" ;",
      "indent": 2
    },
    {
      "line": 7,
      "text": "else",
      "code": "else",
      "indent": 1
    },
    {
      "line": 8,
      "text": "print l , \" \" , d and \" R \\ n \"",
      "code": "cout << l << \" \" << d << \" R\\n \" ;",
      "indent": 2
    },
    {
      "line": 9,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 10,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        3
      ],
      "mod_code": [
        "int * l = ( k + ( 2 * m - 1 ) ) / ( 2 * m ) ;"
      ],
      "err_line": 3,
      "err_msg": "invalid conversion from ‘int’ to ‘int*’ [-fpermissive]"
    },
    {
      "mod_line": [
        6,
        8,
        2,
        3
      ],
      "mod_code": [
        "cout << l << \" \" << d << \" \\n \" ;",
        "cout << l << \" \" << d << \" \\n \" ;",
        "cin >> n >> m >> n ;",
        "int * l = ( k + ( 2 * m - 1 ) ) / ( 2 * m ) ;"
      ],
      "err_line": 3,
      "err_msg": "invalid conversion from ‘int’ to ‘int*’ [-fpermissive]"
    },
    {
      "mod_line": [
        6,
        8,
        3
      ],
      "mod_code": [
        "cout << l << \" \" << d << \" \\n \" ;",
        "cout << l << \" \" << d << \" \\n \" ;",
        "int * l = ( k + ( 2 * m - 1 ) ) / ( 2 * m ) ;"
      ],
      "err_line": 3,
      "err_msg": "invalid conversion from ‘int’ to ‘int*’ [-fpermissive]"
    },
    {
      "mod_line": [
        6,
        2,
        3
      ],
      "mod_code": [
        "cout << l << \" \" << d << \" \\n \" ;",
        "cin >> n >> m >> n ;",
        "int * l = ( k + ( 2 * m - 1 ) ) / ( 2 * m ) ;"
      ],
      "err_line": 3,
      "err_msg": "invalid conversion from ‘int’ to ‘int*’ [-fpermissive]"
    },
    {
      "mod_line": [
        6,
        2,
        3,
        8
      ],
      "mod_code": [
        "cout << l << \" \" << d << \" \\n \" ;",
        "cin >> n >> m >> n ;",
        "int * l = ( k + ( 2 * m - 1 ) ) / ( 2 * m ) ;",
        "cout << l << \" \" << d << \" 1\\n \" ;"
      ],
      "err_line": 3,
      "err_msg": "invalid conversion from ‘int’ to ‘int*’ [-fpermissive]"
    },
    {
      "mod_line": [
        6,
        3
      ],
      "mod_code": [
        "cout << l << \" \" << d << \" \\n \" ;",
        "int * l = ( k + ( 2 * m - 1 ) ) / ( 2 * m ) ;"
      ],
      "err_line": 3,
      "err_msg": "invalid conversion from ‘int’ to ‘int*’ [-fpermissive]"
    },
    {
      "mod_line": [
        6,
        3,
        8
      ],
      "mod_code": [
        "cout << l << \" \" << d << \" \\n \" ;",
        "int * l = ( k + ( 2 * m - 1 ) ) / ( 2 * m ) ;",
        "cout << l << \" \" << d << \" 1\\n \" ;"
      ],
      "err_line": 3,
      "err_msg": "invalid conversion from ‘int’ to ‘int*’ [-fpermissive]"
    },
    {
      "mod_line": [
        8,
        2,
        3
      ],
      "mod_code": [
        "cout << l << \" \" << d << \" \\n \" ;",
        "cin >> n >> m >> n ;",
        "int * l = ( k + ( 2 * m - 1 ) ) / ( 2 * m ) ;"
      ],
      "err_line": 3,
      "err_msg": "invalid conversion from ‘int’ to ‘int*’ [-fpermissive]"
    },
    {
      "mod_line": [
        8,
        2,
        3,
        6
      ],
      "mod_code": [
        "cout << l << \" \" << d << \" \\n \" ;",
        "cin >> n >> m >> n ;",
        "int * l = ( k + ( 2 * m - 1 ) ) / ( 2 * m ) ;",
        "cout << l << \" \" << d << \" 1\\n \" ;"
      ],
      "err_line": 3,
      "err_msg": "invalid conversion from ‘int’ to ‘int*’ [-fpermissive]"
    },
    {
      "mod_line": [
        8,
        3
      ],
      "mod_code": [
        "cout << l << \" \" << d << \" \\n \" ;",
        "int * l = ( k + ( 2 * m - 1 ) ) / ( 2 * m ) ;"
      ],
      "err_line": 3,
      "err_msg": "invalid conversion from ‘int’ to ‘int*’ [-fpermissive]"
    },
    {
      "mod_line": [
        8,
        3,
        6
      ],
      "mod_code": [
        "cout << l << \" \" << d << \" \\n \" ;",
        "int * l = ( k + ( 2 * m - 1 ) ) / ( 2 * m ) ;",
        "cout << l << \" \" << d << \" 1\\n \" ;"
      ],
      "err_line": 3,
      "err_msg": "invalid conversion from ‘int’ to ‘int*’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        3
      ],
      "mod_code": [
        "cin >> n >> m >> n ;",
        "int * l = ( k + ( 2 * m - 1 ) ) / ( 2 * m ) ;"
      ],
      "err_line": 3,
      "err_msg": "invalid conversion from ‘int’ to ‘int*’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        3,
        6
      ],
      "mod_code": [
        "cin >> n >> m >> n ;",
        "int * l = ( k + ( 2 * m - 1 ) ) / ( 2 * m ) ;",
        "cout << l << \" \" << d << \" 1\\n \" ;"
      ],
      "err_line": 3,
      "err_msg": "invalid conversion from ‘int’ to ‘int*’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        3,
        6,
        8
      ],
      "mod_code": [
        "cin >> n >> m >> n ;",
        "int * l = ( k + ( 2 * m - 1 ) ) / ( 2 * m ) ;",
        "cout << l << \" \" << d << \" 1\\n \" ;",
        "cout << l << \" \" << d << \" 1\\n \" ;"
      ],
      "err_line": 3,
      "err_msg": "invalid conversion from ‘int’ to ‘int*’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        3,
        8
      ],
      "mod_code": [
        "cin >> n >> m >> n ;",
        "int * l = ( k + ( 2 * m - 1 ) ) / ( 2 * m ) ;",
        "cout << l << \" \" << d << \" 1\\n \" ;"
      ],
      "err_line": 3,
      "err_msg": "invalid conversion from ‘int’ to ‘int*’ [-fpermissive]"
    },
    {
      "mod_line": [
        3,
        6
      ],
      "mod_code": [
        "int * l = ( k + ( 2 * m - 1 ) ) / ( 2 * m ) ;",
        "cout << l << \" \" << d << \" 1\\n \" ;"
      ],
      "err_line": 3,
      "err_msg": "invalid conversion from ‘int’ to ‘int*’ [-fpermissive]"
    },
    {
      "mod_line": [
        3,
        6,
        8
      ],
      "mod_code": [
        "int * l = ( k + ( 2 * m - 1 ) ) / ( 2 * m ) ;",
        "cout << l << \" \" << d << \" 1\\n \" ;",
        "cout << l << \" \" << d << \" 1\\n \" ;"
      ],
      "err_line": 3,
      "err_msg": "invalid conversion from ‘int’ to ‘int*’ [-fpermissive]"
    },
    {
      "mod_line": [
        3,
        8
      ],
      "mod_code": [
        "int * l = ( k + ( 2 * m - 1 ) ) / ( 2 * m ) ;",
        "cout << l << \" \" << d << \" 1\\n \" ;"
      ],
      "err_line": 3,
      "err_msg": "invalid conversion from ‘int’ to ‘int*’ [-fpermissive]"
    }
  ]
}