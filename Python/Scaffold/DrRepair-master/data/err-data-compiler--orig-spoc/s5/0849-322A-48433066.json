{
  "meta": {
    "index": 849,
    "hitid": "3JUDR1D0D6L0V87RNPD5PM7ZUIBQ2F",
    "workerid": "AIWEXPJAU66D9",
    "probid": "322A",
    "subid": "48433066"
  },
  "lines": [
    {
      "line": 0,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 1,
      "text": "declare integer variables n and m",
      "code": "int n , m ;",
      "indent": 1
    },
    {
      "line": 2,
      "text": "read n and m",
      "code": "cin >> n >> m ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "print n + ( m - 1 ) and \" \\ n \"",
      "code": "cout << n + ( m - 1 ) << \" \\n \" ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "create integers p , j and k = 1",
      "code": "int p = 1 , j = 1 , k = 1 ;",
      "indent": 1
    },
    {
      "line": 5,
      "text": "for i = 0 to n + ( m - 1 ) exclusive",
      "code": "for ( int i = 0 ; i < n + ( m - 1 ) ; i ++ )",
      "indent": 1
    },
    {
      "line": 6,
      "text": "if i is less than m",
      "code": "if ( i < m )",
      "indent": 2
    },
    {
      "line": 7,
      "text": "print p , \" \" , j and \" \\ n \"",
      "code": "cout << p << \" \" << j << \" \\n \" ;",
      "indent": 3
    },
    {
      "line": 8,
      "text": "increment j",
      "code": "j ++ ;",
      "indent": 3
    },
    {
      "line": 9,
      "text": "else",
      "code": "else",
      "indent": 2
    },
    {
      "line": 10,
      "text": "increase p",
      "code": "p ++ ;",
      "indent": 3
    },
    {
      "line": 11,
      "text": "print p , \" \" , k and \" \\ n \"",
      "code": "cout << p << \" \" << k << \" \\n \" ;",
      "indent": 3
    },
    {
      "line": 12,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 13,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 14,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        5
      ],
      "mod_code": [
        "for ( i = 0 ; i < n + ( m - 1 ) ; i ++ )"
      ],
      "err_line": 5,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        7
      ],
      "mod_code": [
        "cout << p , \" \" << j << \" \\n \" ;"
      ],
      "err_line": 7,
      "err_msg": "invalid operands of types ‘const char [2]’ and ‘int’ to binary ‘operator<<’"
    },
    {
      "mod_line": [
        11
      ],
      "mod_code": [
        "cout << p , \" \" << k << \" \\n \" ;"
      ],
      "err_line": 11,
      "err_msg": "invalid operands of types ‘const char [2]’ and ‘int’ to binary ‘operator<<’"
    },
    {
      "mod_line": [
        5,
        11
      ],
      "mod_code": [
        "for ( i = 0 ; i < n + ( m - 1 ) ; i ++ )",
        "cout << p , \" \" << k << \" \\n \" ;"
      ],
      "err_line": 5,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        11,
        6
      ],
      "mod_code": [
        "for ( i = 0 ; i < n + ( m - 1 ) ; i ++ )",
        "cout << p , \" \" << k << \" \\n \" ;",
        "if ( i <= m )"
      ],
      "err_line": 5,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        11,
        6,
        4
      ],
      "mod_code": [
        "for ( i = 0 ; i < n + ( m - 1 ) ; i ++ )",
        "cout << p , \" \" << k << \" \\n \" ;",
        "if ( i <= m )",
        "int p = 1 , j = 1 , k ;"
      ],
      "err_line": 5,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        11,
        6,
        2
      ],
      "mod_code": [
        "for ( i = 0 ; i < n + ( m - 1 ) ; i ++ )",
        "cout << p , \" \" << k << \" \\n \" ;",
        "if ( i <= m )",
        "cin >> m >> m ;"
      ],
      "err_line": 5,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        11,
        6,
        7
      ],
      "mod_code": [
        "for ( i = 0 ; i < n + ( m - 1 ) ; i ++ )",
        "cout << p , \" \" << k << \" \\n \" ;",
        "if ( i <= m )",
        "cout << p , \" \" << j << \" \\n \" ;"
      ],
      "err_line": 5,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        11,
        4
      ],
      "mod_code": [
        "for ( i = 0 ; i < n + ( m - 1 ) ; i ++ )",
        "cout << p , \" \" << k << \" \\n \" ;",
        "int p = 1 , j = 1 , k ;"
      ],
      "err_line": 5,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        11,
        4,
        2
      ],
      "mod_code": [
        "for ( i = 0 ; i < n + ( m - 1 ) ; i ++ )",
        "cout << p , \" \" << k << \" \\n \" ;",
        "int p = 1 , j = 1 , k ;",
        "cin >> m >> m ;"
      ],
      "err_line": 5,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        11,
        4,
        7
      ],
      "mod_code": [
        "for ( i = 0 ; i < n + ( m - 1 ) ; i ++ )",
        "cout << p , \" \" << k << \" \\n \" ;",
        "int p = 1 , j = 1 , k ;",
        "cout << p , \" \" << j << \" \\n \" ;"
      ],
      "err_line": 5,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        11,
        2
      ],
      "mod_code": [
        "for ( i = 0 ; i < n + ( m - 1 ) ; i ++ )",
        "cout << p , \" \" << k << \" \\n \" ;",
        "cin >> m >> m ;"
      ],
      "err_line": 5,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        11,
        2,
        7
      ],
      "mod_code": [
        "for ( i = 0 ; i < n + ( m - 1 ) ; i ++ )",
        "cout << p , \" \" << k << \" \\n \" ;",
        "cin >> m >> m ;",
        "cout << p , \" \" << j << \" \\n \" ;"
      ],
      "err_line": 5,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        11,
        7
      ],
      "mod_code": [
        "for ( i = 0 ; i < n + ( m - 1 ) ; i ++ )",
        "cout << p , \" \" << k << \" \\n \" ;",
        "cout << p , \" \" << j << \" \\n \" ;"
      ],
      "err_line": 5,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        6
      ],
      "mod_code": [
        "for ( i = 0 ; i < n + ( m - 1 ) ; i ++ )",
        "if ( i <= m )"
      ],
      "err_line": 5,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        6,
        4
      ],
      "mod_code": [
        "for ( i = 0 ; i < n + ( m - 1 ) ; i ++ )",
        "if ( i <= m )",
        "int p = 1 , j = 1 , k ;"
      ],
      "err_line": 5,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        6,
        4,
        2
      ],
      "mod_code": [
        "for ( i = 0 ; i < n + ( m - 1 ) ; i ++ )",
        "if ( i <= m )",
        "int p = 1 , j = 1 , k ;",
        "cin >> m >> m ;"
      ],
      "err_line": 5,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        6,
        4,
        7
      ],
      "mod_code": [
        "for ( i = 0 ; i < n + ( m - 1 ) ; i ++ )",
        "if ( i <= m )",
        "int p = 1 , j = 1 , k ;",
        "cout << p , \" \" << j << \" \\n \" ;"
      ],
      "err_line": 5,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        6,
        2
      ],
      "mod_code": [
        "for ( i = 0 ; i < n + ( m - 1 ) ; i ++ )",
        "if ( i <= m )",
        "cin >> m >> m ;"
      ],
      "err_line": 5,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        6,
        2,
        7
      ],
      "mod_code": [
        "for ( i = 0 ; i < n + ( m - 1 ) ; i ++ )",
        "if ( i <= m )",
        "cin >> m >> m ;",
        "cout << p , \" \" << j << \" \\n \" ;"
      ],
      "err_line": 5,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        6,
        7
      ],
      "mod_code": [
        "for ( i = 0 ; i < n + ( m - 1 ) ; i ++ )",
        "if ( i <= m )",
        "cout << p , \" \" << j << \" \\n \" ;"
      ],
      "err_line": 5,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        4
      ],
      "mod_code": [
        "for ( i = 0 ; i < n + ( m - 1 ) ; i ++ )",
        "int p = 1 , j = 1 , k ;"
      ],
      "err_line": 5,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        4,
        2
      ],
      "mod_code": [
        "for ( i = 0 ; i < n + ( m - 1 ) ; i ++ )",
        "int p = 1 , j = 1 , k ;",
        "cin >> m >> m ;"
      ],
      "err_line": 5,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        4,
        2,
        7
      ],
      "mod_code": [
        "for ( i = 0 ; i < n + ( m - 1 ) ; i ++ )",
        "int p = 1 , j = 1 , k ;",
        "cin >> m >> m ;",
        "cout << p , \" \" << j << \" \\n \" ;"
      ],
      "err_line": 5,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        4,
        7
      ],
      "mod_code": [
        "for ( i = 0 ; i < n + ( m - 1 ) ; i ++ )",
        "int p = 1 , j = 1 , k ;",
        "cout << p , \" \" << j << \" \\n \" ;"
      ],
      "err_line": 5,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        2
      ],
      "mod_code": [
        "for ( i = 0 ; i < n + ( m - 1 ) ; i ++ )",
        "cin >> m >> m ;"
      ],
      "err_line": 5,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        2,
        7
      ],
      "mod_code": [
        "for ( i = 0 ; i < n + ( m - 1 ) ; i ++ )",
        "cin >> m >> m ;",
        "cout << p , \" \" << j << \" \\n \" ;"
      ],
      "err_line": 5,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        7
      ],
      "mod_code": [
        "for ( i = 0 ; i < n + ( m - 1 ) ; i ++ )",
        "cout << p , \" \" << j << \" \\n \" ;"
      ],
      "err_line": 5,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        11,
        6
      ],
      "mod_code": [
        "cout << p , \" \" << k << \" \\n \" ;",
        "if ( i <= m )"
      ],
      "err_line": 11,
      "err_msg": "invalid operands of types ‘const char [2]’ and ‘int’ to binary ‘operator<<’"
    },
    {
      "mod_line": [
        11,
        6,
        4
      ],
      "mod_code": [
        "cout << p , \" \" << k << \" \\n \" ;",
        "if ( i <= m )",
        "int p = 1 , j = 1 , k ;"
      ],
      "err_line": 11,
      "err_msg": "invalid operands of types ‘const char [2]’ and ‘int’ to binary ‘operator<<’"
    },
    {
      "mod_line": [
        11,
        6,
        4,
        2
      ],
      "mod_code": [
        "cout << p , \" \" << k << \" \\n \" ;",
        "if ( i <= m )",
        "int p = 1 , j = 1 , k ;",
        "cin >> m >> m ;"
      ],
      "err_line": 11,
      "err_msg": "invalid operands of types ‘const char [2]’ and ‘int’ to binary ‘operator<<’"
    },
    {
      "mod_line": [
        11,
        6,
        4,
        7
      ],
      "mod_code": [
        "cout << p , \" \" << k << \" \\n \" ;",
        "if ( i <= m )",
        "int p = 1 , j = 1 , k ;",
        "cout << p , \" \" << j << \" \\n \" ;"
      ],
      "err_line": 7,
      "err_msg": "invalid operands of types ‘const char [2]’ and ‘int’ to binary ‘operator<<’"
    },
    {
      "mod_line": [
        11,
        6,
        2
      ],
      "mod_code": [
        "cout << p , \" \" << k << \" \\n \" ;",
        "if ( i <= m )",
        "cin >> m >> m ;"
      ],
      "err_line": 11,
      "err_msg": "invalid operands of types ‘const char [2]’ and ‘int’ to binary ‘operator<<’"
    },
    {
      "mod_line": [
        11,
        6,
        2,
        7
      ],
      "mod_code": [
        "cout << p , \" \" << k << \" \\n \" ;",
        "if ( i <= m )",
        "cin >> m >> m ;",
        "cout << p , \" \" << j << \" \\n \" ;"
      ],
      "err_line": 7,
      "err_msg": "invalid operands of types ‘const char [2]’ and ‘int’ to binary ‘operator<<’"
    },
    {
      "mod_line": [
        11,
        6,
        7
      ],
      "mod_code": [
        "cout << p , \" \" << k << \" \\n \" ;",
        "if ( i <= m )",
        "cout << p , \" \" << j << \" \\n \" ;"
      ],
      "err_line": 7,
      "err_msg": "invalid operands of types ‘const char [2]’ and ‘int’ to binary ‘operator<<’"
    },
    {
      "mod_line": [
        11,
        4
      ],
      "mod_code": [
        "cout << p , \" \" << k << \" \\n \" ;",
        "int p = 1 , j = 1 , k ;"
      ],
      "err_line": 11,
      "err_msg": "invalid operands of types ‘const char [2]’ and ‘int’ to binary ‘operator<<’"
    },
    {
      "mod_line": [
        11,
        4,
        2
      ],
      "mod_code": [
        "cout << p , \" \" << k << \" \\n \" ;",
        "int p = 1 , j = 1 , k ;",
        "cin >> m >> m ;"
      ],
      "err_line": 11,
      "err_msg": "invalid operands of types ‘const char [2]’ and ‘int’ to binary ‘operator<<’"
    },
    {
      "mod_line": [
        11,
        4,
        2,
        7
      ],
      "mod_code": [
        "cout << p , \" \" << k << \" \\n \" ;",
        "int p = 1 , j = 1 , k ;",
        "cin >> m >> m ;",
        "cout << p , \" \" << j << \" \\n \" ;"
      ],
      "err_line": 7,
      "err_msg": "invalid operands of types ‘const char [2]’ and ‘int’ to binary ‘operator<<’"
    },
    {
      "mod_line": [
        11,
        4,
        7
      ],
      "mod_code": [
        "cout << p , \" \" << k << \" \\n \" ;",
        "int p = 1 , j = 1 , k ;",
        "cout << p , \" \" << j << \" \\n \" ;"
      ],
      "err_line": 7,
      "err_msg": "invalid operands of types ‘const char [2]’ and ‘int’ to binary ‘operator<<’"
    },
    {
      "mod_line": [
        11,
        2
      ],
      "mod_code": [
        "cout << p , \" \" << k << \" \\n \" ;",
        "cin >> m >> m ;"
      ],
      "err_line": 11,
      "err_msg": "invalid operands of types ‘const char [2]’ and ‘int’ to binary ‘operator<<’"
    },
    {
      "mod_line": [
        11,
        2,
        7
      ],
      "mod_code": [
        "cout << p , \" \" << k << \" \\n \" ;",
        "cin >> m >> m ;",
        "cout << p , \" \" << j << \" \\n \" ;"
      ],
      "err_line": 7,
      "err_msg": "invalid operands of types ‘const char [2]’ and ‘int’ to binary ‘operator<<’"
    },
    {
      "mod_line": [
        11,
        7
      ],
      "mod_code": [
        "cout << p , \" \" << k << \" \\n \" ;",
        "cout << p , \" \" << j << \" \\n \" ;"
      ],
      "err_line": 7,
      "err_msg": "invalid operands of types ‘const char [2]’ and ‘int’ to binary ‘operator<<’"
    },
    {
      "mod_line": [
        6,
        4,
        2,
        7
      ],
      "mod_code": [
        "if ( i <= m )",
        "int p = 1 , j = 1 , k ;",
        "cin >> m >> m ;",
        "cout << p , \" \" << j << \" \\n \" ;"
      ],
      "err_line": 7,
      "err_msg": "invalid operands of types ‘const char [2]’ and ‘int’ to binary ‘operator<<’"
    },
    {
      "mod_line": [
        6,
        4,
        7
      ],
      "mod_code": [
        "if ( i <= m )",
        "int p = 1 , j = 1 , k ;",
        "cout << p , \" \" << j << \" \\n \" ;"
      ],
      "err_line": 7,
      "err_msg": "invalid operands of types ‘const char [2]’ and ‘int’ to binary ‘operator<<’"
    },
    {
      "mod_line": [
        6,
        2,
        7
      ],
      "mod_code": [
        "if ( i <= m )",
        "cin >> m >> m ;",
        "cout << p , \" \" << j << \" \\n \" ;"
      ],
      "err_line": 7,
      "err_msg": "invalid operands of types ‘const char [2]’ and ‘int’ to binary ‘operator<<’"
    },
    {
      "mod_line": [
        6,
        7
      ],
      "mod_code": [
        "if ( i <= m )",
        "cout << p , \" \" << j << \" \\n \" ;"
      ],
      "err_line": 7,
      "err_msg": "invalid operands of types ‘const char [2]’ and ‘int’ to binary ‘operator<<’"
    },
    {
      "mod_line": [
        4,
        2,
        7
      ],
      "mod_code": [
        "int p = 1 , j = 1 , k ;",
        "cin >> m >> m ;",
        "cout << p , \" \" << j << \" \\n \" ;"
      ],
      "err_line": 7,
      "err_msg": "invalid operands of types ‘const char [2]’ and ‘int’ to binary ‘operator<<’"
    },
    {
      "mod_line": [
        4,
        7
      ],
      "mod_code": [
        "int p = 1 , j = 1 , k ;",
        "cout << p , \" \" << j << \" \\n \" ;"
      ],
      "err_line": 7,
      "err_msg": "invalid operands of types ‘const char [2]’ and ‘int’ to binary ‘operator<<’"
    },
    {
      "mod_line": [
        2,
        7
      ],
      "mod_code": [
        "cin >> m >> m ;",
        "cout << p , \" \" << j << \" \\n \" ;"
      ],
      "err_line": 7,
      "err_msg": "invalid operands of types ‘const char [2]’ and ‘int’ to binary ‘operator<<’"
    }
  ]
}