{
  "meta": {
    "index": 1368,
    "hitid": "3EAWOID6MTRL460UU131CLDSEC70V0",
    "workerid": "A1APYLD4DUK33J",
    "probid": "476A",
    "subid": "42233089"
  },
  "lines": [
    {
      "line": 0,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 1,
      "text": "create integers n , m",
      "code": "int n , m ;",
      "indent": 1
    },
    {
      "line": 2,
      "text": "read n read m",
      "code": "cin >> n >> m ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "create integer l",
      "code": "int l ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "set l to ( n / 2 ) + ( n % 2 )",
      "code": "l = ( n / 2 ) + ( n % 2 ) ;",
      "indent": 1
    },
    {
      "line": 5,
      "text": "if m is greater than n",
      "code": "if ( m > n )",
      "indent": 1
    },
    {
      "line": 6,
      "text": "print \" - 1 \" print newline",
      "code": "cout << \" -1 \" << endl ;",
      "indent": 2
    },
    {
      "line": 7,
      "text": "else",
      "code": "else",
      "indent": 1
    },
    {
      "line": 8,
      "text": "for i = 1 , incrementing i",
      "code": "for ( int i = 1 ; ; i ++ )",
      "indent": 2
    },
    {
      "line": 9,
      "text": "if i * m is greater than n",
      "code": "if ( ( i * m ) > n )",
      "indent": 3
    },
    {
      "line": 10,
      "text": "print \" - 1 \" print newline",
      "code": "cout << \" -1 \" << endl ;",
      "indent": 4
    },
    {
      "line": 11,
      "text": "break loop",
      "code": "break ;",
      "indent": 4
    },
    {
      "line": 12,
      "text": "else if i * m is greater than or equal to l and i * m is less than or equal to n",
      "code": "else if ( ( i * m ) >= l && ( i * m ) <= n )",
      "indent": 3
    },
    {
      "line": 13,
      "text": "print i * m print newline",
      "code": "cout << ( i * m ) << endl ;",
      "indent": 4
    },
    {
      "line": 14,
      "text": "break loop",
      "code": "break ;",
      "indent": 4
    },
    {
      "line": 15,
      "text": "DUMMY",
      "code": "}",
      "indent": 3
    },
    {
      "line": 16,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 17,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 18,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 19,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        2
      ],
      "mod_code": [
        "cin >> n read m ;"
      ],
      "err_line": 2,
      "err_msg": "expected ‘;’ before ‘read’"
    },
    {
      "mod_line": [
        8
      ],
      "mod_code": [
        "for ( i = 1 ; ; i ++ )"
      ],
      "err_line": 8,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        11
      ],
      "mod_code": [
        "break break ;"
      ],
      "err_line": 11,
      "err_msg": "expected ‘;’ before ‘break’"
    },
    {
      "mod_line": [
        14
      ],
      "mod_code": [
        "break break ;"
      ],
      "err_line": 14,
      "err_msg": "expected ‘;’ before ‘break’"
    },
    {
      "mod_line": [
        6,
        8
      ],
      "mod_code": [
        "cout << \" -1\\n \" << endl ;",
        "for ( i = 1 ; ; i ++ )"
      ],
      "err_line": 8,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        8,
        14
      ],
      "mod_code": [
        "cout << \" -1\\n \" << endl ;",
        "for ( i = 1 ; ; i ++ )",
        "break break ;"
      ],
      "err_line": 8,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        8,
        14,
        2
      ],
      "mod_code": [
        "cout << \" -1\\n \" << endl ;",
        "for ( i = 1 ; ; i ++ )",
        "break break ;",
        "cin >> n read m ;"
      ],
      "err_line": 2,
      "err_msg": "expected ‘;’ before ‘read’"
    },
    {
      "mod_line": [
        6,
        8,
        14,
        5
      ],
      "mod_code": [
        "cout << \" -1\\n \" << endl ;",
        "for ( i = 1 ; ; i ++ )",
        "break break ;",
        "if ( m >= n )"
      ],
      "err_line": 8,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        8,
        14,
        11
      ],
      "mod_code": [
        "cout << \" -1\\n \" << endl ;",
        "for ( i = 1 ; ; i ++ )",
        "break break ;",
        "break break ;"
      ],
      "err_line": 8,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        8,
        2
      ],
      "mod_code": [
        "cout << \" -1\\n \" << endl ;",
        "for ( i = 1 ; ; i ++ )",
        "cin >> n read m ;"
      ],
      "err_line": 2,
      "err_msg": "expected ‘;’ before ‘read’"
    },
    {
      "mod_line": [
        6,
        8,
        2,
        5
      ],
      "mod_code": [
        "cout << \" -1\\n \" << endl ;",
        "for ( i = 1 ; ; i ++ )",
        "cin >> n read m ;",
        "if ( m >= n )"
      ],
      "err_line": 2,
      "err_msg": "expected ‘;’ before ‘read’"
    },
    {
      "mod_line": [
        6,
        8,
        2,
        11
      ],
      "mod_code": [
        "cout << \" -1\\n \" << endl ;",
        "for ( i = 1 ; ; i ++ )",
        "cin >> n read m ;",
        "break break ;"
      ],
      "err_line": 2,
      "err_msg": "expected ‘;’ before ‘read’"
    },
    {
      "mod_line": [
        6,
        8,
        5
      ],
      "mod_code": [
        "cout << \" -1\\n \" << endl ;",
        "for ( i = 1 ; ; i ++ )",
        "if ( m >= n )"
      ],
      "err_line": 8,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        8,
        5,
        11
      ],
      "mod_code": [
        "cout << \" -1\\n \" << endl ;",
        "for ( i = 1 ; ; i ++ )",
        "if ( m >= n )",
        "break break ;"
      ],
      "err_line": 8,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        8,
        11
      ],
      "mod_code": [
        "cout << \" -1\\n \" << endl ;",
        "for ( i = 1 ; ; i ++ )",
        "break break ;"
      ],
      "err_line": 8,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        14
      ],
      "mod_code": [
        "cout << \" -1\\n \" << endl ;",
        "break break ;"
      ],
      "err_line": 14,
      "err_msg": "expected ‘;’ before ‘break’"
    },
    {
      "mod_line": [
        6,
        14,
        2
      ],
      "mod_code": [
        "cout << \" -1\\n \" << endl ;",
        "break break ;",
        "cin >> n read m ;"
      ],
      "err_line": 2,
      "err_msg": "expected ‘;’ before ‘read’"
    },
    {
      "mod_line": [
        6,
        14,
        2,
        5
      ],
      "mod_code": [
        "cout << \" -1\\n \" << endl ;",
        "break break ;",
        "cin >> n read m ;",
        "if ( m >= n )"
      ],
      "err_line": 2,
      "err_msg": "expected ‘;’ before ‘read’"
    },
    {
      "mod_line": [
        6,
        14,
        2,
        11
      ],
      "mod_code": [
        "cout << \" -1\\n \" << endl ;",
        "break break ;",
        "cin >> n read m ;",
        "break break ;"
      ],
      "err_line": 2,
      "err_msg": "expected ‘;’ before ‘read’"
    },
    {
      "mod_line": [
        6,
        14,
        5
      ],
      "mod_code": [
        "cout << \" -1\\n \" << endl ;",
        "break break ;",
        "if ( m >= n )"
      ],
      "err_line": 14,
      "err_msg": "expected ‘;’ before ‘break’"
    },
    {
      "mod_line": [
        6,
        14,
        5,
        11
      ],
      "mod_code": [
        "cout << \" -1\\n \" << endl ;",
        "break break ;",
        "if ( m >= n )",
        "break break ;"
      ],
      "err_line": 11,
      "err_msg": "expected ‘;’ before ‘break’"
    },
    {
      "mod_line": [
        6,
        14,
        11
      ],
      "mod_code": [
        "cout << \" -1\\n \" << endl ;",
        "break break ;",
        "break break ;"
      ],
      "err_line": 11,
      "err_msg": "expected ‘;’ before ‘break’"
    },
    {
      "mod_line": [
        6,
        2
      ],
      "mod_code": [
        "cout << \" -1\\n \" << endl ;",
        "cin >> n read m ;"
      ],
      "err_line": 2,
      "err_msg": "expected ‘;’ before ‘read’"
    },
    {
      "mod_line": [
        6,
        2,
        5
      ],
      "mod_code": [
        "cout << \" -1\\n \" << endl ;",
        "cin >> n read m ;",
        "if ( m >= n )"
      ],
      "err_line": 2,
      "err_msg": "expected ‘;’ before ‘read’"
    },
    {
      "mod_line": [
        6,
        2,
        5,
        11
      ],
      "mod_code": [
        "cout << \" -1\\n \" << endl ;",
        "cin >> n read m ;",
        "if ( m >= n )",
        "break break ;"
      ],
      "err_line": 2,
      "err_msg": "expected ‘;’ before ‘read’"
    },
    {
      "mod_line": [
        6,
        2,
        11
      ],
      "mod_code": [
        "cout << \" -1\\n \" << endl ;",
        "cin >> n read m ;",
        "break break ;"
      ],
      "err_line": 2,
      "err_msg": "expected ‘;’ before ‘read’"
    },
    {
      "mod_line": [
        6,
        5,
        11
      ],
      "mod_code": [
        "cout << \" -1\\n \" << endl ;",
        "if ( m >= n )",
        "break break ;"
      ],
      "err_line": 11,
      "err_msg": "expected ‘;’ before ‘break’"
    },
    {
      "mod_line": [
        6,
        11
      ],
      "mod_code": [
        "cout << \" -1\\n \" << endl ;",
        "break break ;"
      ],
      "err_line": 11,
      "err_msg": "expected ‘;’ before ‘break’"
    },
    {
      "mod_line": [
        8,
        14
      ],
      "mod_code": [
        "for ( i = 1 ; ; i ++ )",
        "break break ;"
      ],
      "err_line": 8,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        8,
        14,
        2
      ],
      "mod_code": [
        "for ( i = 1 ; ; i ++ )",
        "break break ;",
        "cin >> n read m ;"
      ],
      "err_line": 2,
      "err_msg": "expected ‘;’ before ‘read’"
    },
    {
      "mod_line": [
        8,
        14,
        2,
        5
      ],
      "mod_code": [
        "for ( i = 1 ; ; i ++ )",
        "break break ;",
        "cin >> n read m ;",
        "if ( m >= n )"
      ],
      "err_line": 2,
      "err_msg": "expected ‘;’ before ‘read’"
    },
    {
      "mod_line": [
        8,
        14,
        2,
        11
      ],
      "mod_code": [
        "for ( i = 1 ; ; i ++ )",
        "break break ;",
        "cin >> n read m ;",
        "break break ;"
      ],
      "err_line": 2,
      "err_msg": "expected ‘;’ before ‘read’"
    },
    {
      "mod_line": [
        8,
        14,
        5
      ],
      "mod_code": [
        "for ( i = 1 ; ; i ++ )",
        "break break ;",
        "if ( m >= n )"
      ],
      "err_line": 8,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        8,
        14,
        5,
        11
      ],
      "mod_code": [
        "for ( i = 1 ; ; i ++ )",
        "break break ;",
        "if ( m >= n )",
        "break break ;"
      ],
      "err_line": 8,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        8,
        14,
        11
      ],
      "mod_code": [
        "for ( i = 1 ; ; i ++ )",
        "break break ;",
        "break break ;"
      ],
      "err_line": 8,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        8,
        2
      ],
      "mod_code": [
        "for ( i = 1 ; ; i ++ )",
        "cin >> n read m ;"
      ],
      "err_line": 2,
      "err_msg": "expected ‘;’ before ‘read’"
    },
    {
      "mod_line": [
        8,
        2,
        5
      ],
      "mod_code": [
        "for ( i = 1 ; ; i ++ )",
        "cin >> n read m ;",
        "if ( m >= n )"
      ],
      "err_line": 2,
      "err_msg": "expected ‘;’ before ‘read’"
    },
    {
      "mod_line": [
        8,
        2,
        5,
        11
      ],
      "mod_code": [
        "for ( i = 1 ; ; i ++ )",
        "cin >> n read m ;",
        "if ( m >= n )",
        "break break ;"
      ],
      "err_line": 2,
      "err_msg": "expected ‘;’ before ‘read’"
    },
    {
      "mod_line": [
        8,
        2,
        11
      ],
      "mod_code": [
        "for ( i = 1 ; ; i ++ )",
        "cin >> n read m ;",
        "break break ;"
      ],
      "err_line": 2,
      "err_msg": "expected ‘;’ before ‘read’"
    },
    {
      "mod_line": [
        8,
        5
      ],
      "mod_code": [
        "for ( i = 1 ; ; i ++ )",
        "if ( m >= n )"
      ],
      "err_line": 8,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        8,
        5,
        11
      ],
      "mod_code": [
        "for ( i = 1 ; ; i ++ )",
        "if ( m >= n )",
        "break break ;"
      ],
      "err_line": 8,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        8,
        11
      ],
      "mod_code": [
        "for ( i = 1 ; ; i ++ )",
        "break break ;"
      ],
      "err_line": 8,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        2
      ],
      "mod_code": [
        "break break ;",
        "cin >> n read m ;"
      ],
      "err_line": 2,
      "err_msg": "expected ‘;’ before ‘read’"
    },
    {
      "mod_line": [
        14,
        2,
        5
      ],
      "mod_code": [
        "break break ;",
        "cin >> n read m ;",
        "if ( m >= n )"
      ],
      "err_line": 2,
      "err_msg": "expected ‘;’ before ‘read’"
    },
    {
      "mod_line": [
        14,
        2,
        5,
        11
      ],
      "mod_code": [
        "break break ;",
        "cin >> n read m ;",
        "if ( m >= n )",
        "break break ;"
      ],
      "err_line": 2,
      "err_msg": "expected ‘;’ before ‘read’"
    },
    {
      "mod_line": [
        14,
        2,
        11
      ],
      "mod_code": [
        "break break ;",
        "cin >> n read m ;",
        "break break ;"
      ],
      "err_line": 2,
      "err_msg": "expected ‘;’ before ‘read’"
    },
    {
      "mod_line": [
        14,
        5
      ],
      "mod_code": [
        "break break ;",
        "if ( m >= n )"
      ],
      "err_line": 14,
      "err_msg": "expected ‘;’ before ‘break’"
    },
    {
      "mod_line": [
        14,
        5,
        11
      ],
      "mod_code": [
        "break break ;",
        "if ( m >= n )",
        "break break ;"
      ],
      "err_line": 11,
      "err_msg": "expected ‘;’ before ‘break’"
    },
    {
      "mod_line": [
        14,
        11
      ],
      "mod_code": [
        "break break ;",
        "break break ;"
      ],
      "err_line": 11,
      "err_msg": "expected ‘;’ before ‘break’"
    },
    {
      "mod_line": [
        2,
        5
      ],
      "mod_code": [
        "cin >> n read m ;",
        "if ( m >= n )"
      ],
      "err_line": 2,
      "err_msg": "expected ‘;’ before ‘read’"
    },
    {
      "mod_line": [
        2,
        5,
        11
      ],
      "mod_code": [
        "cin >> n read m ;",
        "if ( m >= n )",
        "break break ;"
      ],
      "err_line": 2,
      "err_msg": "expected ‘;’ before ‘read’"
    },
    {
      "mod_line": [
        2,
        11
      ],
      "mod_code": [
        "cin >> n read m ;",
        "break break ;"
      ],
      "err_line": 2,
      "err_msg": "expected ‘;’ before ‘read’"
    },
    {
      "mod_line": [
        5,
        11
      ],
      "mod_code": [
        "if ( m >= n )",
        "break break ;"
      ],
      "err_line": 11,
      "err_msg": "expected ‘;’ before ‘break’"
    }
  ]
}