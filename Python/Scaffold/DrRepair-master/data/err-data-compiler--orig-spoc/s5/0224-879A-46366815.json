{
  "meta": {
    "index": 224,
    "hitid": "301KG0KX9CFNIF8O4ZQBG8FY3VHH2C",
    "workerid": "A121O0X5UNK37S",
    "probid": "879A",
    "subid": "46366815"
  },
  "lines": [
    {
      "line": 0,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 1,
      "text": "let a , n , b , c , sum be long long with sum = 0",
      "code": "long long a , n , b , c , sum = 0 ;",
      "indent": 1
    },
    {
      "line": 2,
      "text": "read n",
      "code": "cin >> n ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "for i = 1 to n inclusive",
      "code": "for ( int i = 1 ; i <= n ; i ++ )",
      "indent": 1
    },
    {
      "line": 4,
      "text": "read a and b",
      "code": "cin >> a >> b ;",
      "indent": 2
    },
    {
      "line": 5,
      "text": "if i is equal to 1",
      "code": "if ( i == 1 )",
      "indent": 2
    },
    {
      "line": 6,
      "text": "assign a to sum",
      "code": "sum = a ;",
      "indent": 3
    },
    {
      "line": 7,
      "text": "else",
      "code": "else",
      "indent": 2
    },
    {
      "line": 8,
      "text": "add a and b and assign to c",
      "code": "c = a + b ;",
      "indent": 3
    },
    {
      "line": 9,
      "text": "if sum is less than a",
      "code": "if ( sum < a )",
      "indent": 3
    },
    {
      "line": 10,
      "text": "assign a to sum",
      "code": "sum = a ;",
      "indent": 4
    },
    {
      "line": 11,
      "text": "else if sum is less than c",
      "code": "else if ( sum < c )",
      "indent": 3
    },
    {
      "line": 12,
      "text": "assign c to sum",
      "code": "sum = c ;",
      "indent": 4
    },
    {
      "line": 13,
      "text": "else",
      "code": "else",
      "indent": 3
    },
    {
      "line": 14,
      "text": "while sum is greater than or equal to c",
      "code": "while ( sum >= c )",
      "indent": 4
    },
    {
      "line": 15,
      "text": "add c and b and assign to c",
      "code": "c = c + b ;",
      "indent": 5
    },
    {
      "line": 16,
      "text": "if sum is less than c",
      "code": "if ( sum < c )",
      "indent": 5
    },
    {
      "line": 17,
      "text": "assign c to sum",
      "code": "sum = c ;",
      "indent": 6
    },
    {
      "line": 18,
      "text": "break",
      "code": "break ;",
      "indent": 6
    },
    {
      "line": 19,
      "text": "DUMMY",
      "code": "}",
      "indent": 5
    },
    {
      "line": 20,
      "text": "DUMMY",
      "code": "}",
      "indent": 4
    },
    {
      "line": 21,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 22,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 23,
      "text": "print sum",
      "code": "cout << sum << endl ;",
      "indent": 1
    },
    {
      "line": 24,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        3
      ],
      "mod_code": [
        "for ( i = 1 ; i <= n ; i ++ )"
      ],
      "err_line": 3,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        8
      ],
      "mod_code": [
        "c . push ( b , b ) ;"
      ],
      "err_line": 8,
      "err_msg": "request for member ‘push’ in ‘c’, which is of non-class type ‘long long int’"
    },
    {
      "mod_line": [
        15
      ],
      "mod_code": [
        "c . push_back ( b , b ) ;"
      ],
      "err_line": 15,
      "err_msg": "request for member ‘push_back’ in ‘c’, which is of non-class type ‘long long int’"
    },
    {
      "mod_line": [
        18
      ],
      "mod_code": [
        "break break ;"
      ],
      "err_line": 18,
      "err_msg": "expected ‘;’ before ‘break’"
    },
    {
      "mod_line": [
        8,
        15,
        6,
        18
      ],
      "mod_code": [
        "c += a + b ;",
        "c += c + b ;",
        "sum = 1 ;",
        "break break ;"
      ],
      "err_line": 18,
      "err_msg": "expected ‘;’ before ‘break’"
    },
    {
      "mod_line": [
        8,
        15,
        16,
        18
      ],
      "mod_code": [
        "c += a + b ;",
        "c += c + b ;",
        "if ( sum <= c )",
        "break break ;"
      ],
      "err_line": 18,
      "err_msg": "expected ‘;’ before ‘break’"
    },
    {
      "mod_line": [
        8,
        15,
        17,
        18
      ],
      "mod_code": [
        "c += a + b ;",
        "c += c + b ;",
        "sum = 1 ;",
        "break break ;"
      ],
      "err_line": 18,
      "err_msg": "expected ‘;’ before ‘break’"
    },
    {
      "mod_line": [
        8,
        15,
        18
      ],
      "mod_code": [
        "c += a + b ;",
        "c += c + b ;",
        "break break ;"
      ],
      "err_line": 18,
      "err_msg": "expected ‘;’ before ‘break’"
    },
    {
      "mod_line": [
        8,
        6,
        16,
        18
      ],
      "mod_code": [
        "c += a + b ;",
        "sum = 1 ;",
        "if ( sum <= c )",
        "break break ;"
      ],
      "err_line": 18,
      "err_msg": "expected ‘;’ before ‘break’"
    },
    {
      "mod_line": [
        8,
        6,
        17,
        18
      ],
      "mod_code": [
        "c += a + b ;",
        "sum = 1 ;",
        "sum = 1 ;",
        "break break ;"
      ],
      "err_line": 18,
      "err_msg": "expected ‘;’ before ‘break’"
    },
    {
      "mod_line": [
        8,
        6,
        18
      ],
      "mod_code": [
        "c += a + b ;",
        "sum = 1 ;",
        "break break ;"
      ],
      "err_line": 18,
      "err_msg": "expected ‘;’ before ‘break’"
    },
    {
      "mod_line": [
        8,
        16,
        17,
        18
      ],
      "mod_code": [
        "c += a + b ;",
        "if ( sum <= c )",
        "sum = 1 ;",
        "break break ;"
      ],
      "err_line": 18,
      "err_msg": "expected ‘;’ before ‘break’"
    },
    {
      "mod_line": [
        8,
        16,
        18
      ],
      "mod_code": [
        "c += a + b ;",
        "if ( sum <= c )",
        "break break ;"
      ],
      "err_line": 18,
      "err_msg": "expected ‘;’ before ‘break’"
    },
    {
      "mod_line": [
        8,
        17,
        18
      ],
      "mod_code": [
        "c += a + b ;",
        "sum = 1 ;",
        "break break ;"
      ],
      "err_line": 18,
      "err_msg": "expected ‘;’ before ‘break’"
    },
    {
      "mod_line": [
        8,
        18
      ],
      "mod_code": [
        "c += a + b ;",
        "break break ;"
      ],
      "err_line": 18,
      "err_msg": "expected ‘;’ before ‘break’"
    },
    {
      "mod_line": [
        15,
        6,
        16,
        18
      ],
      "mod_code": [
        "c += c + b ;",
        "sum = 1 ;",
        "if ( sum <= c )",
        "break break ;"
      ],
      "err_line": 18,
      "err_msg": "expected ‘;’ before ‘break’"
    },
    {
      "mod_line": [
        15,
        6,
        17,
        18
      ],
      "mod_code": [
        "c += c + b ;",
        "sum = 1 ;",
        "sum = 1 ;",
        "break break ;"
      ],
      "err_line": 18,
      "err_msg": "expected ‘;’ before ‘break’"
    },
    {
      "mod_line": [
        15,
        6,
        18
      ],
      "mod_code": [
        "c += c + b ;",
        "sum = 1 ;",
        "break break ;"
      ],
      "err_line": 18,
      "err_msg": "expected ‘;’ before ‘break’"
    },
    {
      "mod_line": [
        15,
        16,
        17,
        18
      ],
      "mod_code": [
        "c += c + b ;",
        "if ( sum <= c )",
        "sum = 1 ;",
        "break break ;"
      ],
      "err_line": 18,
      "err_msg": "expected ‘;’ before ‘break’"
    },
    {
      "mod_line": [
        15,
        16,
        18
      ],
      "mod_code": [
        "c += c + b ;",
        "if ( sum <= c )",
        "break break ;"
      ],
      "err_line": 18,
      "err_msg": "expected ‘;’ before ‘break’"
    },
    {
      "mod_line": [
        15,
        17,
        18
      ],
      "mod_code": [
        "c += c + b ;",
        "sum = 1 ;",
        "break break ;"
      ],
      "err_line": 18,
      "err_msg": "expected ‘;’ before ‘break’"
    },
    {
      "mod_line": [
        15,
        18
      ],
      "mod_code": [
        "c += c + b ;",
        "break break ;"
      ],
      "err_line": 18,
      "err_msg": "expected ‘;’ before ‘break’"
    },
    {
      "mod_line": [
        6,
        16,
        17,
        18
      ],
      "mod_code": [
        "sum = 1 ;",
        "if ( sum <= c )",
        "sum = 1 ;",
        "break break ;"
      ],
      "err_line": 18,
      "err_msg": "expected ‘;’ before ‘break’"
    },
    {
      "mod_line": [
        6,
        16,
        18
      ],
      "mod_code": [
        "sum = 1 ;",
        "if ( sum <= c )",
        "break break ;"
      ],
      "err_line": 18,
      "err_msg": "expected ‘;’ before ‘break’"
    },
    {
      "mod_line": [
        6,
        17,
        18
      ],
      "mod_code": [
        "sum = 1 ;",
        "sum = 1 ;",
        "break break ;"
      ],
      "err_line": 18,
      "err_msg": "expected ‘;’ before ‘break’"
    },
    {
      "mod_line": [
        6,
        18
      ],
      "mod_code": [
        "sum = 1 ;",
        "break break ;"
      ],
      "err_line": 18,
      "err_msg": "expected ‘;’ before ‘break’"
    },
    {
      "mod_line": [
        16,
        17,
        18
      ],
      "mod_code": [
        "if ( sum <= c )",
        "sum = 1 ;",
        "break break ;"
      ],
      "err_line": 18,
      "err_msg": "expected ‘;’ before ‘break’"
    },
    {
      "mod_line": [
        16,
        18
      ],
      "mod_code": [
        "if ( sum <= c )",
        "break break ;"
      ],
      "err_line": 18,
      "err_msg": "expected ‘;’ before ‘break’"
    },
    {
      "mod_line": [
        17,
        18
      ],
      "mod_code": [
        "sum = 1 ;",
        "break break ;"
      ],
      "err_line": 18,
      "err_msg": "expected ‘;’ before ‘break’"
    }
  ]
}