{
  "meta": {
    "index": 2299,
    "hitid": "39HYCOOPKOFWD37FSLQ54WEYIV2MD7",
    "workerid": "A1EKVUFWL7OJMO",
    "probid": "713A",
    "subid": "48021009"
  },
  "lines": [
    {
      "line": 0,
      "text": "arr = integer array of size 524289 = { 0 }",
      "code": "int arr [ 524289 ] = { 0 } ;",
      "indent": 0
    },
    {
      "line": 1,
      "text": "in the function conv that takes long long integer num and returns integer",
      "code": "int conv ( long long int num )",
      "indent": 0
    },
    {
      "line": 2,
      "text": "pos , ans = integers with pos = 0 , ans = 0",
      "code": "int pos = 0 , ans = 0 ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "while ( num > 0 )",
      "code": "while ( num > 0 )",
      "indent": 1
    },
    {
      "line": 4,
      "text": "s = integer with s = num modulo 10",
      "code": "int s = num % 10 ;",
      "indent": 2
    },
    {
      "line": 5,
      "text": "num = num / 10",
      "code": "num /= 10 ;",
      "indent": 2
    },
    {
      "line": 6,
      "text": "if ( s modulo 2 is not 0 ) , ans = ans + pow ( 2 , pos )",
      "code": "if ( s % 2 != 0 ) ans += pow ( 2 , pos ) ;",
      "indent": 2
    },
    {
      "line": 7,
      "text": "increment pos",
      "code": "pos ++ ;",
      "indent": 2
    },
    {
      "line": 8,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 9,
      "text": "return ans",
      "code": "return ans ;",
      "indent": 1
    },
    {
      "line": 10,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    },
    {
      "line": 11,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 12,
      "text": "t = integer",
      "code": "int t ;",
      "indent": 1
    },
    {
      "line": 13,
      "text": "read t",
      "code": "cin >> t ;",
      "indent": 1
    },
    {
      "line": 14,
      "text": "while decrement t",
      "code": "while ( t -- )",
      "indent": 1
    },
    {
      "line": 15,
      "text": "c = character",
      "code": "char c ;",
      "indent": 2
    },
    {
      "line": 16,
      "text": "num = long long integer",
      "code": "long long int num ;",
      "indent": 2
    },
    {
      "line": 17,
      "text": "read c , num",
      "code": "cin >> c >> num ;",
      "indent": 2
    },
    {
      "line": 18,
      "text": "position = integer with position = conv ( num )",
      "code": "int position = conv ( num ) ;",
      "indent": 2
    },
    {
      "line": 19,
      "text": "if ( c is + )",
      "code": "if ( c == ' + ' )",
      "indent": 2
    },
    {
      "line": 20,
      "text": "increment arr [ position ]",
      "code": "arr [ position ] ++ ;",
      "indent": 3
    },
    {
      "line": 21,
      "text": "else if ( c is - )",
      "code": "else if ( c == ' - ' )",
      "indent": 2
    },
    {
      "line": 22,
      "text": "decrement arr [ position ]",
      "code": "arr [ position ] -- ;",
      "indent": 3
    },
    {
      "line": 23,
      "text": "else",
      "code": "else",
      "indent": 2
    },
    {
      "line": 24,
      "text": "print arr [ position ]",
      "code": "cout << arr [ position ] << \" \\n \" ;",
      "indent": 3
    },
    {
      "line": 25,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 26,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        1
      ],
      "mod_code": [
        "void conv ( long long int num )"
      ],
      "err_line": 9,
      "err_msg": "return-statement with a value, in function returning 'void' [-fpermissive]"
    },
    {
      "mod_line": [
        3
      ],
      "mod_code": [
        "while ( num > 0 ) )"
      ],
      "err_line": 3,
      "err_msg": "expected primary-expression before ‘)’ token"
    },
    {
      "mod_line": [
        4
      ],
      "mod_code": [
        "int s [ 10 ] ;"
      ],
      "err_line": 6,
      "err_msg": "invalid operands of types ‘int [10]’ and ‘int’ to binary ‘operator%’"
    },
    {
      "mod_line": [
        13
      ],
      "mod_code": [
        "cin . get ( t ) ;"
      ],
      "err_line": 13,
      "err_msg": "invalid initialization of non-const reference of type ‘std::basic_istream<char>::char_type& {aka char&}’ from an rvalue of type ‘std::basic_istream<char>::char_type {aka char}’"
    },
    {
      "mod_line": [
        19
      ],
      "mod_code": [
        "if ( c == \" + \" )"
      ],
      "err_line": 19,
      "err_msg": "ISO C++ forbids comparison between pointer and integer [-fpermissive]"
    },
    {
      "mod_line": [
        21
      ],
      "mod_code": [
        "else if ( c == \" - \" )"
      ],
      "err_line": 21,
      "err_msg": "ISO C++ forbids comparison between pointer and integer [-fpermissive]"
    },
    {
      "mod_line": [
        1,
        3
      ],
      "mod_code": [
        "void conv ( long long int num )",
        "while ( num > 0 ) )"
      ],
      "err_line": 3,
      "err_msg": "expected primary-expression before ‘)’ token"
    },
    {
      "mod_line": [
        1,
        3,
        0
      ],
      "mod_code": [
        "void conv ( long long int num )",
        "while ( num > 0 ) )",
        "int arr [ ] = { 0 } ;"
      ],
      "err_line": 3,
      "err_msg": "expected primary-expression before ‘)’ token"
    },
    {
      "mod_line": [
        1,
        3,
        0,
        17
      ],
      "mod_code": [
        "void conv ( long long int num )",
        "while ( num > 0 ) )",
        "int arr [ ] = { 0 } ;",
        "cin >> c >> c ;"
      ],
      "err_line": 3,
      "err_msg": "expected primary-expression before ‘)’ token"
    },
    {
      "mod_line": [
        1,
        3,
        0,
        21
      ],
      "mod_code": [
        "void conv ( long long int num )",
        "while ( num > 0 ) )",
        "int arr [ ] = { 0 } ;",
        "else if ( c == \" - \" )"
      ],
      "err_line": 3,
      "err_msg": "expected primary-expression before ‘)’ token"
    },
    {
      "mod_line": [
        1,
        3,
        0,
        4
      ],
      "mod_code": [
        "void conv ( long long int num )",
        "while ( num > 0 ) )",
        "int arr [ ] = { 0 } ;",
        "int s [ 10 ] ;"
      ],
      "err_line": 3,
      "err_msg": "expected primary-expression before ‘)’ token"
    },
    {
      "mod_line": [
        1,
        3,
        17
      ],
      "mod_code": [
        "void conv ( long long int num )",
        "while ( num > 0 ) )",
        "cin >> c >> c ;"
      ],
      "err_line": 3,
      "err_msg": "expected primary-expression before ‘)’ token"
    },
    {
      "mod_line": [
        1,
        3,
        17,
        21
      ],
      "mod_code": [
        "void conv ( long long int num )",
        "while ( num > 0 ) )",
        "cin >> c >> c ;",
        "else if ( c == \" - \" )"
      ],
      "err_line": 3,
      "err_msg": "expected primary-expression before ‘)’ token"
    },
    {
      "mod_line": [
        1,
        3,
        17,
        4
      ],
      "mod_code": [
        "void conv ( long long int num )",
        "while ( num > 0 ) )",
        "cin >> c >> c ;",
        "int s [ 10 ] ;"
      ],
      "err_line": 3,
      "err_msg": "expected primary-expression before ‘)’ token"
    },
    {
      "mod_line": [
        1,
        3,
        21
      ],
      "mod_code": [
        "void conv ( long long int num )",
        "while ( num > 0 ) )",
        "else if ( c == \" - \" )"
      ],
      "err_line": 3,
      "err_msg": "expected primary-expression before ‘)’ token"
    },
    {
      "mod_line": [
        1,
        3,
        21,
        4
      ],
      "mod_code": [
        "void conv ( long long int num )",
        "while ( num > 0 ) )",
        "else if ( c == \" - \" )",
        "int s [ 10 ] ;"
      ],
      "err_line": 3,
      "err_msg": "expected primary-expression before ‘)’ token"
    },
    {
      "mod_line": [
        1,
        3,
        4
      ],
      "mod_code": [
        "void conv ( long long int num )",
        "while ( num > 0 ) )",
        "int s [ 10 ] ;"
      ],
      "err_line": 3,
      "err_msg": "expected primary-expression before ‘)’ token"
    },
    {
      "mod_line": [
        1,
        0
      ],
      "mod_code": [
        "void conv ( long long int num )",
        "int arr [ ] = { 0 } ;"
      ],
      "err_line": 9,
      "err_msg": "return-statement with a value, in function returning 'void' [-fpermissive]"
    },
    {
      "mod_line": [
        1,
        0,
        17
      ],
      "mod_code": [
        "void conv ( long long int num )",
        "int arr [ ] = { 0 } ;",
        "cin >> c >> c ;"
      ],
      "err_line": 9,
      "err_msg": "return-statement with a value, in function returning 'void' [-fpermissive]"
    },
    {
      "mod_line": [
        1,
        0,
        17,
        21
      ],
      "mod_code": [
        "void conv ( long long int num )",
        "int arr [ ] = { 0 } ;",
        "cin >> c >> c ;",
        "else if ( c == \" - \" )"
      ],
      "err_line": 9,
      "err_msg": "return-statement with a value, in function returning 'void' [-fpermissive]"
    },
    {
      "mod_line": [
        1,
        0,
        17,
        4
      ],
      "mod_code": [
        "void conv ( long long int num )",
        "int arr [ ] = { 0 } ;",
        "cin >> c >> c ;",
        "int s [ 10 ] ;"
      ],
      "err_line": 6,
      "err_msg": "invalid operands of types ‘int [10]’ and ‘int’ to binary ‘operator%’"
    },
    {
      "mod_line": [
        1,
        0,
        21
      ],
      "mod_code": [
        "void conv ( long long int num )",
        "int arr [ ] = { 0 } ;",
        "else if ( c == \" - \" )"
      ],
      "err_line": 9,
      "err_msg": "return-statement with a value, in function returning 'void' [-fpermissive]"
    },
    {
      "mod_line": [
        1,
        0,
        21,
        4
      ],
      "mod_code": [
        "void conv ( long long int num )",
        "int arr [ ] = { 0 } ;",
        "else if ( c == \" - \" )",
        "int s [ 10 ] ;"
      ],
      "err_line": 6,
      "err_msg": "invalid operands of types ‘int [10]’ and ‘int’ to binary ‘operator%’"
    },
    {
      "mod_line": [
        1,
        0,
        4
      ],
      "mod_code": [
        "void conv ( long long int num )",
        "int arr [ ] = { 0 } ;",
        "int s [ 10 ] ;"
      ],
      "err_line": 6,
      "err_msg": "invalid operands of types ‘int [10]’ and ‘int’ to binary ‘operator%’"
    },
    {
      "mod_line": [
        1,
        17
      ],
      "mod_code": [
        "void conv ( long long int num )",
        "cin >> c >> c ;"
      ],
      "err_line": 9,
      "err_msg": "return-statement with a value, in function returning 'void' [-fpermissive]"
    },
    {
      "mod_line": [
        1,
        17,
        21
      ],
      "mod_code": [
        "void conv ( long long int num )",
        "cin >> c >> c ;",
        "else if ( c == \" - \" )"
      ],
      "err_line": 9,
      "err_msg": "return-statement with a value, in function returning 'void' [-fpermissive]"
    },
    {
      "mod_line": [
        1,
        17,
        21,
        4
      ],
      "mod_code": [
        "void conv ( long long int num )",
        "cin >> c >> c ;",
        "else if ( c == \" - \" )",
        "int s [ 10 ] ;"
      ],
      "err_line": 6,
      "err_msg": "invalid operands of types ‘int [10]’ and ‘int’ to binary ‘operator%’"
    },
    {
      "mod_line": [
        1,
        17,
        4
      ],
      "mod_code": [
        "void conv ( long long int num )",
        "cin >> c >> c ;",
        "int s [ 10 ] ;"
      ],
      "err_line": 6,
      "err_msg": "invalid operands of types ‘int [10]’ and ‘int’ to binary ‘operator%’"
    },
    {
      "mod_line": [
        1,
        21
      ],
      "mod_code": [
        "void conv ( long long int num )",
        "else if ( c == \" - \" )"
      ],
      "err_line": 9,
      "err_msg": "return-statement with a value, in function returning 'void' [-fpermissive]"
    },
    {
      "mod_line": [
        1,
        21,
        4
      ],
      "mod_code": [
        "void conv ( long long int num )",
        "else if ( c == \" - \" )",
        "int s [ 10 ] ;"
      ],
      "err_line": 6,
      "err_msg": "invalid operands of types ‘int [10]’ and ‘int’ to binary ‘operator%’"
    },
    {
      "mod_line": [
        1,
        4
      ],
      "mod_code": [
        "void conv ( long long int num )",
        "int s [ 10 ] ;"
      ],
      "err_line": 6,
      "err_msg": "invalid operands of types ‘int [10]’ and ‘int’ to binary ‘operator%’"
    },
    {
      "mod_line": [
        3,
        0
      ],
      "mod_code": [
        "while ( num > 0 ) )",
        "int arr [ ] = { 0 } ;"
      ],
      "err_line": 3,
      "err_msg": "expected primary-expression before ‘)’ token"
    },
    {
      "mod_line": [
        3,
        0,
        17
      ],
      "mod_code": [
        "while ( num > 0 ) )",
        "int arr [ ] = { 0 } ;",
        "cin >> c >> c ;"
      ],
      "err_line": 3,
      "err_msg": "expected primary-expression before ‘)’ token"
    },
    {
      "mod_line": [
        3,
        0,
        17,
        21
      ],
      "mod_code": [
        "while ( num > 0 ) )",
        "int arr [ ] = { 0 } ;",
        "cin >> c >> c ;",
        "else if ( c == \" - \" )"
      ],
      "err_line": 3,
      "err_msg": "expected primary-expression before ‘)’ token"
    },
    {
      "mod_line": [
        3,
        0,
        17,
        4
      ],
      "mod_code": [
        "while ( num > 0 ) )",
        "int arr [ ] = { 0 } ;",
        "cin >> c >> c ;",
        "int s [ 10 ] ;"
      ],
      "err_line": 3,
      "err_msg": "expected primary-expression before ‘)’ token"
    },
    {
      "mod_line": [
        3,
        0,
        21
      ],
      "mod_code": [
        "while ( num > 0 ) )",
        "int arr [ ] = { 0 } ;",
        "else if ( c == \" - \" )"
      ],
      "err_line": 3,
      "err_msg": "expected primary-expression before ‘)’ token"
    },
    {
      "mod_line": [
        3,
        0,
        21,
        4
      ],
      "mod_code": [
        "while ( num > 0 ) )",
        "int arr [ ] = { 0 } ;",
        "else if ( c == \" - \" )",
        "int s [ 10 ] ;"
      ],
      "err_line": 3,
      "err_msg": "expected primary-expression before ‘)’ token"
    },
    {
      "mod_line": [
        3,
        0,
        4
      ],
      "mod_code": [
        "while ( num > 0 ) )",
        "int arr [ ] = { 0 } ;",
        "int s [ 10 ] ;"
      ],
      "err_line": 3,
      "err_msg": "expected primary-expression before ‘)’ token"
    },
    {
      "mod_line": [
        3,
        17
      ],
      "mod_code": [
        "while ( num > 0 ) )",
        "cin >> c >> c ;"
      ],
      "err_line": 3,
      "err_msg": "expected primary-expression before ‘)’ token"
    },
    {
      "mod_line": [
        3,
        17,
        21
      ],
      "mod_code": [
        "while ( num > 0 ) )",
        "cin >> c >> c ;",
        "else if ( c == \" - \" )"
      ],
      "err_line": 3,
      "err_msg": "expected primary-expression before ‘)’ token"
    },
    {
      "mod_line": [
        3,
        17,
        21,
        4
      ],
      "mod_code": [
        "while ( num > 0 ) )",
        "cin >> c >> c ;",
        "else if ( c == \" - \" )",
        "int s [ 10 ] ;"
      ],
      "err_line": 3,
      "err_msg": "expected primary-expression before ‘)’ token"
    },
    {
      "mod_line": [
        3,
        17,
        4
      ],
      "mod_code": [
        "while ( num > 0 ) )",
        "cin >> c >> c ;",
        "int s [ 10 ] ;"
      ],
      "err_line": 3,
      "err_msg": "expected primary-expression before ‘)’ token"
    },
    {
      "mod_line": [
        3,
        21
      ],
      "mod_code": [
        "while ( num > 0 ) )",
        "else if ( c == \" - \" )"
      ],
      "err_line": 3,
      "err_msg": "expected primary-expression before ‘)’ token"
    },
    {
      "mod_line": [
        3,
        21,
        4
      ],
      "mod_code": [
        "while ( num > 0 ) )",
        "else if ( c == \" - \" )",
        "int s [ 10 ] ;"
      ],
      "err_line": 3,
      "err_msg": "expected primary-expression before ‘)’ token"
    },
    {
      "mod_line": [
        3,
        4
      ],
      "mod_code": [
        "while ( num > 0 ) )",
        "int s [ 10 ] ;"
      ],
      "err_line": 3,
      "err_msg": "expected primary-expression before ‘)’ token"
    },
    {
      "mod_line": [
        0,
        17,
        21
      ],
      "mod_code": [
        "int arr [ ] = { 0 } ;",
        "cin >> c >> c ;",
        "else if ( c == \" - \" )"
      ],
      "err_line": 21,
      "err_msg": "ISO C++ forbids comparison between pointer and integer [-fpermissive]"
    },
    {
      "mod_line": [
        0,
        17,
        21,
        4
      ],
      "mod_code": [
        "int arr [ ] = { 0 } ;",
        "cin >> c >> c ;",
        "else if ( c == \" - \" )",
        "int s [ 10 ] ;"
      ],
      "err_line": 6,
      "err_msg": "invalid operands of types ‘int [10]’ and ‘int’ to binary ‘operator%’"
    },
    {
      "mod_line": [
        0,
        17,
        4
      ],
      "mod_code": [
        "int arr [ ] = { 0 } ;",
        "cin >> c >> c ;",
        "int s [ 10 ] ;"
      ],
      "err_line": 6,
      "err_msg": "invalid operands of types ‘int [10]’ and ‘int’ to binary ‘operator%’"
    },
    {
      "mod_line": [
        0,
        21
      ],
      "mod_code": [
        "int arr [ ] = { 0 } ;",
        "else if ( c == \" - \" )"
      ],
      "err_line": 21,
      "err_msg": "ISO C++ forbids comparison between pointer and integer [-fpermissive]"
    },
    {
      "mod_line": [
        0,
        21,
        4
      ],
      "mod_code": [
        "int arr [ ] = { 0 } ;",
        "else if ( c == \" - \" )",
        "int s [ 10 ] ;"
      ],
      "err_line": 6,
      "err_msg": "invalid operands of types ‘int [10]’ and ‘int’ to binary ‘operator%’"
    },
    {
      "mod_line": [
        0,
        4
      ],
      "mod_code": [
        "int arr [ ] = { 0 } ;",
        "int s [ 10 ] ;"
      ],
      "err_line": 6,
      "err_msg": "invalid operands of types ‘int [10]’ and ‘int’ to binary ‘operator%’"
    },
    {
      "mod_line": [
        17,
        21
      ],
      "mod_code": [
        "cin >> c >> c ;",
        "else if ( c == \" - \" )"
      ],
      "err_line": 21,
      "err_msg": "ISO C++ forbids comparison between pointer and integer [-fpermissive]"
    },
    {
      "mod_line": [
        17,
        21,
        4
      ],
      "mod_code": [
        "cin >> c >> c ;",
        "else if ( c == \" - \" )",
        "int s [ 10 ] ;"
      ],
      "err_line": 6,
      "err_msg": "invalid operands of types ‘int [10]’ and ‘int’ to binary ‘operator%’"
    },
    {
      "mod_line": [
        17,
        4
      ],
      "mod_code": [
        "cin >> c >> c ;",
        "int s [ 10 ] ;"
      ],
      "err_line": 6,
      "err_msg": "invalid operands of types ‘int [10]’ and ‘int’ to binary ‘operator%’"
    },
    {
      "mod_line": [
        21,
        4
      ],
      "mod_code": [
        "else if ( c == \" - \" )",
        "int s [ 10 ] ;"
      ],
      "err_line": 6,
      "err_msg": "invalid operands of types ‘int [10]’ and ‘int’ to binary ‘operator%’"
    }
  ]
}