{
  "meta": {
    "index": 2683,
    "hitid": "3VGET1QSZ0TC160J5AT6D26TTKYW7V",
    "workerid": "A1APYLD4DUK33J",
    "probid": "16A",
    "subid": "47972759"
  },
  "lines": [
    {
      "line": 0,
      "text": "create integer SIZE with SIZE = 110",
      "code": "const int SIZE = 110 ;",
      "indent": 0
    },
    {
      "line": 1,
      "text": "create string array M with size SIZE",
      "code": "string M [ SIZE ] ;",
      "indent": 0
    },
    {
      "line": 2,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 3,
      "text": "create integers t , i , j , k , n , m",
      "code": "int t , i , j , k , n , m ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "read m read n",
      "code": "cin >> m >> n ;",
      "indent": 1
    },
    {
      "line": 5,
      "text": "for i = 0 to m exclusive , read M [ i ]",
      "code": "for ( i = 0 ; i < m ; i ++ ) cin >> M [ i ] ;",
      "indent": 1
    },
    {
      "line": 6,
      "text": "for i = 0 to m exclusive",
      "code": "for ( i = 0 ; i < m ; i ++ )",
      "indent": 1
    },
    {
      "line": 7,
      "text": "for j = 0 to n exclusive",
      "code": "for ( j = 0 ; j < n ; j ++ )",
      "indent": 2
    },
    {
      "line": 8,
      "text": "if j + 1 is less than n and M [ i ] [ j ] is not M [ i ] [ j + 1 ]",
      "code": "if ( j + 1 < n && M [ i ] [ j ] != M [ i ] [ j + 1 ] )",
      "indent": 3
    },
    {
      "line": 9,
      "text": "print \" NO \" print newline",
      "code": "cout << \" NO \" << endl ;",
      "indent": 4
    },
    {
      "line": 10,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 4
    },
    {
      "line": 11,
      "text": "DUMMY",
      "code": "}",
      "indent": 3
    },
    {
      "line": 12,
      "text": "if i + 1 is less than m and M [ i ] [ j ] is M [ i + 1 ] [ j ]",
      "code": "if ( i + 1 < m && M [ i ] [ j ] == M [ i + 1 ] [ j ] )",
      "indent": 3
    },
    {
      "line": 13,
      "text": "print \" NO \" print newline",
      "code": "cout << \" NO \" << endl ;",
      "indent": 4
    },
    {
      "line": 14,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 4
    },
    {
      "line": 15,
      "text": "DUMMY",
      "code": "}",
      "indent": 3
    },
    {
      "line": 16,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 17,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 18,
      "text": "print \" YES \" print newline",
      "code": "cout << \" YES \" << endl ;",
      "indent": 1
    },
    {
      "line": 19,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 20,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        0
      ],
      "mod_code": [
        "int SIZE = 110 ;"
      ],
      "err_line": 1,
      "err_msg": "array bound is not an integer constant before ‘]’ token"
    },
    {
      "mod_line": [
        0
      ],
      "mod_code": [
        "long int SIZE = 110 ;"
      ],
      "err_line": 1,
      "err_msg": "array bound is not an integer constant before ‘]’ token"
    },
    {
      "mod_line": [
        1
      ],
      "mod_code": [
        "char M [ SIZE ] ;"
      ],
      "err_line": 8,
      "err_msg": "invalid types ‘char[int]’ for array subscript"
    },
    {
      "mod_line": [
        0,
        1
      ],
      "mod_code": [
        "int SIZE = 110 ;",
        "char M [ SIZE ] ;"
      ],
      "err_line": 1,
      "err_msg": "array bound is not an integer constant before ‘]’ token"
    },
    {
      "mod_line": [
        0,
        1,
        18
      ],
      "mod_code": [
        "int SIZE = 110 ;",
        "char M [ SIZE ] ;",
        "cout << \" YES\\n \" << endl ;"
      ],
      "err_line": 1,
      "err_msg": "array bound is not an integer constant before ‘]’ token"
    },
    {
      "mod_line": [
        0,
        18
      ],
      "mod_code": [
        "int SIZE = 110 ;",
        "cout << \" YES\\n \" << endl ;"
      ],
      "err_line": 1,
      "err_msg": "array bound is not an integer constant before ‘]’ token"
    },
    {
      "mod_line": [
        1,
        18
      ],
      "mod_code": [
        "char M [ SIZE ] ;",
        "cout << \" YES\\n \" << endl ;"
      ],
      "err_line": 8,
      "err_msg": "invalid types ‘char[int]’ for array subscript"
    },
    {
      "mod_line": [
        1,
        18,
        0
      ],
      "mod_code": [
        "char M [ SIZE ] ;",
        "cout << \" YES\\n \" << endl ;",
        "long int SIZE = 110 ;"
      ],
      "err_line": 1,
      "err_msg": "array bound is not an integer constant before ‘]’ token"
    },
    {
      "mod_line": [
        1,
        0
      ],
      "mod_code": [
        "char M [ SIZE ] ;",
        "long int SIZE = 110 ;"
      ],
      "err_line": 1,
      "err_msg": "array bound is not an integer constant before ‘]’ token"
    },
    {
      "mod_line": [
        18,
        0
      ],
      "mod_code": [
        "cout << \" YES\\n \" << endl ;",
        "long int SIZE = 110 ;"
      ],
      "err_line": 1,
      "err_msg": "array bound is not an integer constant before ‘]’ token"
    }
  ]
}