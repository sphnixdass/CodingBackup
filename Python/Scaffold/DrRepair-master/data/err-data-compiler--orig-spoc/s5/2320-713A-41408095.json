{
  "meta": {
    "index": 2320,
    "hitid": "3W0KKJIARR3P6KBLQ1293R8TIZAK8U",
    "workerid": "A1R0Q9CUUBSM5F",
    "probid": "713A",
    "subid": "41408095"
  },
  "lines": [
    {
      "line": 0,
      "text": "make constant ints N = 1e5 + 5 and mod = 1e9 + 7",
      "code": "const int N = 1e5 + 5 , mod = 1e9 + 7 ;",
      "indent": 0
    },
    {
      "line": 1,
      "text": "create map Cnt from ints to ints",
      "code": "map < int , int > Cnt ;",
      "indent": 0
    },
    {
      "line": 2,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 3,
      "text": "make int q",
      "code": "int q ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "read q",
      "code": "cin >> q ;",
      "indent": 1
    },
    {
      "line": 5,
      "text": "while q - - is truthy",
      "code": "while ( q -- )",
      "indent": 1
    },
    {
      "line": 6,
      "text": "make strings s and num",
      "code": "string s , num ;",
      "indent": 2
    },
    {
      "line": 7,
      "text": "read s and num",
      "code": "cin >> s >> num ;",
      "indent": 2
    },
    {
      "line": 8,
      "text": "make ints x = 0 and msk = 0",
      "code": "int x = 0 , msk = 0 ;",
      "indent": 2
    },
    {
      "line": 9,
      "text": "for i = num . size ( ) - 1 to 0 by decreasing by 1",
      "code": "for ( int i = num . size ( ) - 1 ; i >= 0 ; i -- )",
      "indent": 2
    },
    {
      "line": 10,
      "text": "if ( num [ i ] - ' 0 ' ) & 1 is truthy , set msk to msk | ( 1 < < x )",
      "code": "if ( ( num [ i ] - ' 0 ' ) & 1 ) msk |= ( 1 << x ) ;",
      "indent": 3
    },
    {
      "line": 11,
      "text": "increment x",
      "code": "x ++ ;",
      "indent": 3
    },
    {
      "line": 12,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 13,
      "text": "if s is equal to \" + \"",
      "code": "if ( s == \" + \" )",
      "indent": 2
    },
    {
      "line": 14,
      "text": "increment Cnt [ msk ]",
      "code": "Cnt [ msk ] ++ ;",
      "indent": 3
    },
    {
      "line": 15,
      "text": "else if s is equal to \" - \"",
      "code": "else if ( s == \" - \" )",
      "indent": 2
    },
    {
      "line": 16,
      "text": "decrease Cnt [ msk ] by 1",
      "code": "Cnt [ msk ] -- ;",
      "indent": 3
    },
    {
      "line": 17,
      "text": "else do",
      "code": "else",
      "indent": 2
    },
    {
      "line": 18,
      "text": "print Cnt [ msk ]",
      "code": "cout << Cnt [ msk ] << \" \\n \" ;",
      "indent": 3
    },
    {
      "line": 19,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 20,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 21,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        0
      ],
      "mod_code": [
        "const int N = 1e5 + 5 and mod = 1e9 + 7 ;"
      ],
      "err_line": 0,
      "err_msg": "‘mod’ was not declared in this scope"
    },
    {
      "mod_line": [
        1
      ],
      "mod_code": [
        "map < ints , int > Cnt ;"
      ],
      "err_line": 1,
      "err_msg": "‘ints’ was not declared in this scope"
    },
    {
      "mod_line": [
        3
      ],
      "mod_code": [
        "int n ;"
      ],
      "err_line": 4,
      "err_msg": "‘q’ was not declared in this scope"
    },
    {
      "mod_line": [
        4
      ],
      "mod_code": [
        "cin >> n ;"
      ],
      "err_line": 4,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        6
      ],
      "mod_code": [
        "string s and num ;"
      ],
      "err_line": 6,
      "err_msg": "expected initializer before ‘and’ token"
    },
    {
      "mod_line": [
        7
      ],
      "mod_code": [
        "cout << s >> num ;"
      ],
      "err_line": 7,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::basic_ostream<char>’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        8
      ],
      "mod_code": [
        "int x = 0 and msk = 0 ;"
      ],
      "err_line": 8,
      "err_msg": "‘msk’ was not declared in this scope"
    },
    {
      "mod_line": [
        13
      ],
      "mod_code": [
        "if ( s == ' + ' )"
      ],
      "err_line": 13,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        15
      ],
      "mod_code": [
        "else if ( s == ' - \" )"
      ],
      "err_line": 15,
      "err_msg": "missing terminating ' character"
    },
    {
      "mod_line": [
        17
      ],
      "mod_code": [
        "else do"
      ],
      "err_line": 19,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        7,
        6
      ],
      "mod_code": [
        "cout << s >> num ;",
        "string s and num ;"
      ],
      "err_line": 6,
      "err_msg": "expected initializer before ‘and’ token"
    },
    {
      "mod_line": [
        7,
        6,
        5
      ],
      "mod_code": [
        "cout << s >> num ;",
        "string s and num ;",
        "while ( q - ' - ' )"
      ],
      "err_line": 6,
      "err_msg": "expected initializer before ‘and’ token"
    },
    {
      "mod_line": [
        7,
        6,
        5,
        9
      ],
      "mod_code": [
        "cout << s >> num ;",
        "string s and num ;",
        "while ( q - ' - ' )",
        "for ( int i = num . size ( ) - 1 ; i > 0 ; i -- )"
      ],
      "err_line": 6,
      "err_msg": "expected initializer before ‘and’ token"
    },
    {
      "mod_line": [
        7,
        6,
        5,
        0
      ],
      "mod_code": [
        "cout << s >> num ;",
        "string s and num ;",
        "while ( q - ' - ' )",
        "const int N = 1e5 + 5 and mod = 1e9 + 7 ;"
      ],
      "err_line": 0,
      "err_msg": "‘mod’ was not declared in this scope"
    },
    {
      "mod_line": [
        7,
        6,
        5,
        17
      ],
      "mod_code": [
        "cout << s >> num ;",
        "string s and num ;",
        "while ( q - ' - ' )",
        "else do"
      ],
      "err_line": 6,
      "err_msg": "expected initializer before ‘and’ token"
    },
    {
      "mod_line": [
        7,
        6,
        9
      ],
      "mod_code": [
        "cout << s >> num ;",
        "string s and num ;",
        "for ( int i = num . size ( ) - 1 ; i > 0 ; i -- )"
      ],
      "err_line": 6,
      "err_msg": "expected initializer before ‘and’ token"
    },
    {
      "mod_line": [
        7,
        6,
        9,
        0
      ],
      "mod_code": [
        "cout << s >> num ;",
        "string s and num ;",
        "for ( int i = num . size ( ) - 1 ; i > 0 ; i -- )",
        "const int N = 1e5 + 5 and mod = 1e9 + 7 ;"
      ],
      "err_line": 0,
      "err_msg": "‘mod’ was not declared in this scope"
    },
    {
      "mod_line": [
        7,
        6,
        9,
        17
      ],
      "mod_code": [
        "cout << s >> num ;",
        "string s and num ;",
        "for ( int i = num . size ( ) - 1 ; i > 0 ; i -- )",
        "else do"
      ],
      "err_line": 6,
      "err_msg": "expected initializer before ‘and’ token"
    },
    {
      "mod_line": [
        7,
        6,
        0
      ],
      "mod_code": [
        "cout << s >> num ;",
        "string s and num ;",
        "const int N = 1e5 + 5 and mod = 1e9 + 7 ;"
      ],
      "err_line": 0,
      "err_msg": "‘mod’ was not declared in this scope"
    },
    {
      "mod_line": [
        7,
        6,
        0,
        17
      ],
      "mod_code": [
        "cout << s >> num ;",
        "string s and num ;",
        "const int N = 1e5 + 5 and mod = 1e9 + 7 ;",
        "else do"
      ],
      "err_line": 0,
      "err_msg": "‘mod’ was not declared in this scope"
    },
    {
      "mod_line": [
        7,
        6,
        17
      ],
      "mod_code": [
        "cout << s >> num ;",
        "string s and num ;",
        "else do"
      ],
      "err_line": 6,
      "err_msg": "expected initializer before ‘and’ token"
    },
    {
      "mod_line": [
        7,
        5
      ],
      "mod_code": [
        "cout << s >> num ;",
        "while ( q - ' - ' )"
      ],
      "err_line": 7,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::basic_ostream<char>’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        7,
        5,
        9
      ],
      "mod_code": [
        "cout << s >> num ;",
        "while ( q - ' - ' )",
        "for ( int i = num . size ( ) - 1 ; i > 0 ; i -- )"
      ],
      "err_line": 7,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::basic_ostream<char>’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        7,
        5,
        9,
        0
      ],
      "mod_code": [
        "cout << s >> num ;",
        "while ( q - ' - ' )",
        "for ( int i = num . size ( ) - 1 ; i > 0 ; i -- )",
        "const int N = 1e5 + 5 and mod = 1e9 + 7 ;"
      ],
      "err_line": 0,
      "err_msg": "‘mod’ was not declared in this scope"
    },
    {
      "mod_line": [
        7,
        5,
        9,
        17
      ],
      "mod_code": [
        "cout << s >> num ;",
        "while ( q - ' - ' )",
        "for ( int i = num . size ( ) - 1 ; i > 0 ; i -- )",
        "else do"
      ],
      "err_line": 7,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::basic_ostream<char>’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        7,
        5,
        0
      ],
      "mod_code": [
        "cout << s >> num ;",
        "while ( q - ' - ' )",
        "const int N = 1e5 + 5 and mod = 1e9 + 7 ;"
      ],
      "err_line": 0,
      "err_msg": "‘mod’ was not declared in this scope"
    },
    {
      "mod_line": [
        7,
        5,
        0,
        17
      ],
      "mod_code": [
        "cout << s >> num ;",
        "while ( q - ' - ' )",
        "const int N = 1e5 + 5 and mod = 1e9 + 7 ;",
        "else do"
      ],
      "err_line": 0,
      "err_msg": "‘mod’ was not declared in this scope"
    },
    {
      "mod_line": [
        7,
        5,
        17
      ],
      "mod_code": [
        "cout << s >> num ;",
        "while ( q - ' - ' )",
        "else do"
      ],
      "err_line": 7,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::basic_ostream<char>’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        7,
        9
      ],
      "mod_code": [
        "cout << s >> num ;",
        "for ( int i = num . size ( ) - 1 ; i > 0 ; i -- )"
      ],
      "err_line": 7,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::basic_ostream<char>’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        7,
        9,
        0
      ],
      "mod_code": [
        "cout << s >> num ;",
        "for ( int i = num . size ( ) - 1 ; i > 0 ; i -- )",
        "const int N = 1e5 + 5 and mod = 1e9 + 7 ;"
      ],
      "err_line": 0,
      "err_msg": "‘mod’ was not declared in this scope"
    },
    {
      "mod_line": [
        7,
        9,
        0,
        17
      ],
      "mod_code": [
        "cout << s >> num ;",
        "for ( int i = num . size ( ) - 1 ; i > 0 ; i -- )",
        "const int N = 1e5 + 5 and mod = 1e9 + 7 ;",
        "else do"
      ],
      "err_line": 0,
      "err_msg": "‘mod’ was not declared in this scope"
    },
    {
      "mod_line": [
        7,
        9,
        17
      ],
      "mod_code": [
        "cout << s >> num ;",
        "for ( int i = num . size ( ) - 1 ; i > 0 ; i -- )",
        "else do"
      ],
      "err_line": 7,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::basic_ostream<char>’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        7,
        0
      ],
      "mod_code": [
        "cout << s >> num ;",
        "const int N = 1e5 + 5 and mod = 1e9 + 7 ;"
      ],
      "err_line": 0,
      "err_msg": "‘mod’ was not declared in this scope"
    },
    {
      "mod_line": [
        7,
        0,
        17
      ],
      "mod_code": [
        "cout << s >> num ;",
        "const int N = 1e5 + 5 and mod = 1e9 + 7 ;",
        "else do"
      ],
      "err_line": 0,
      "err_msg": "‘mod’ was not declared in this scope"
    },
    {
      "mod_line": [
        7,
        17
      ],
      "mod_code": [
        "cout << s >> num ;",
        "else do"
      ],
      "err_line": 7,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::basic_ostream<char>’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        6,
        5
      ],
      "mod_code": [
        "string s and num ;",
        "while ( q - ' - ' )"
      ],
      "err_line": 6,
      "err_msg": "expected initializer before ‘and’ token"
    },
    {
      "mod_line": [
        6,
        5,
        9
      ],
      "mod_code": [
        "string s and num ;",
        "while ( q - ' - ' )",
        "for ( int i = num . size ( ) - 1 ; i > 0 ; i -- )"
      ],
      "err_line": 6,
      "err_msg": "expected initializer before ‘and’ token"
    },
    {
      "mod_line": [
        6,
        5,
        9,
        0
      ],
      "mod_code": [
        "string s and num ;",
        "while ( q - ' - ' )",
        "for ( int i = num . size ( ) - 1 ; i > 0 ; i -- )",
        "const int N = 1e5 + 5 and mod = 1e9 + 7 ;"
      ],
      "err_line": 0,
      "err_msg": "‘mod’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        5,
        9,
        17
      ],
      "mod_code": [
        "string s and num ;",
        "while ( q - ' - ' )",
        "for ( int i = num . size ( ) - 1 ; i > 0 ; i -- )",
        "else do"
      ],
      "err_line": 6,
      "err_msg": "expected initializer before ‘and’ token"
    },
    {
      "mod_line": [
        6,
        5,
        0
      ],
      "mod_code": [
        "string s and num ;",
        "while ( q - ' - ' )",
        "const int N = 1e5 + 5 and mod = 1e9 + 7 ;"
      ],
      "err_line": 0,
      "err_msg": "‘mod’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        5,
        0,
        17
      ],
      "mod_code": [
        "string s and num ;",
        "while ( q - ' - ' )",
        "const int N = 1e5 + 5 and mod = 1e9 + 7 ;",
        "else do"
      ],
      "err_line": 0,
      "err_msg": "‘mod’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        5,
        17
      ],
      "mod_code": [
        "string s and num ;",
        "while ( q - ' - ' )",
        "else do"
      ],
      "err_line": 6,
      "err_msg": "expected initializer before ‘and’ token"
    },
    {
      "mod_line": [
        6,
        9
      ],
      "mod_code": [
        "string s and num ;",
        "for ( int i = num . size ( ) - 1 ; i > 0 ; i -- )"
      ],
      "err_line": 6,
      "err_msg": "expected initializer before ‘and’ token"
    },
    {
      "mod_line": [
        6,
        9,
        0
      ],
      "mod_code": [
        "string s and num ;",
        "for ( int i = num . size ( ) - 1 ; i > 0 ; i -- )",
        "const int N = 1e5 + 5 and mod = 1e9 + 7 ;"
      ],
      "err_line": 0,
      "err_msg": "‘mod’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        9,
        0,
        17
      ],
      "mod_code": [
        "string s and num ;",
        "for ( int i = num . size ( ) - 1 ; i > 0 ; i -- )",
        "const int N = 1e5 + 5 and mod = 1e9 + 7 ;",
        "else do"
      ],
      "err_line": 0,
      "err_msg": "‘mod’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        9,
        17
      ],
      "mod_code": [
        "string s and num ;",
        "for ( int i = num . size ( ) - 1 ; i > 0 ; i -- )",
        "else do"
      ],
      "err_line": 6,
      "err_msg": "expected initializer before ‘and’ token"
    },
    {
      "mod_line": [
        6,
        0
      ],
      "mod_code": [
        "string s and num ;",
        "const int N = 1e5 + 5 and mod = 1e9 + 7 ;"
      ],
      "err_line": 0,
      "err_msg": "‘mod’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        0,
        17
      ],
      "mod_code": [
        "string s and num ;",
        "const int N = 1e5 + 5 and mod = 1e9 + 7 ;",
        "else do"
      ],
      "err_line": 0,
      "err_msg": "‘mod’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        17
      ],
      "mod_code": [
        "string s and num ;",
        "else do"
      ],
      "err_line": 6,
      "err_msg": "expected initializer before ‘and’ token"
    },
    {
      "mod_line": [
        5,
        9,
        0
      ],
      "mod_code": [
        "while ( q - ' - ' )",
        "for ( int i = num . size ( ) - 1 ; i > 0 ; i -- )",
        "const int N = 1e5 + 5 and mod = 1e9 + 7 ;"
      ],
      "err_line": 0,
      "err_msg": "‘mod’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        9,
        0,
        17
      ],
      "mod_code": [
        "while ( q - ' - ' )",
        "for ( int i = num . size ( ) - 1 ; i > 0 ; i -- )",
        "const int N = 1e5 + 5 and mod = 1e9 + 7 ;",
        "else do"
      ],
      "err_line": 0,
      "err_msg": "‘mod’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        9,
        17
      ],
      "mod_code": [
        "while ( q - ' - ' )",
        "for ( int i = num . size ( ) - 1 ; i > 0 ; i -- )",
        "else do"
      ],
      "err_line": 19,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        5,
        0
      ],
      "mod_code": [
        "while ( q - ' - ' )",
        "const int N = 1e5 + 5 and mod = 1e9 + 7 ;"
      ],
      "err_line": 0,
      "err_msg": "‘mod’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        0,
        17
      ],
      "mod_code": [
        "while ( q - ' - ' )",
        "const int N = 1e5 + 5 and mod = 1e9 + 7 ;",
        "else do"
      ],
      "err_line": 0,
      "err_msg": "‘mod’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        17
      ],
      "mod_code": [
        "while ( q - ' - ' )",
        "else do"
      ],
      "err_line": 19,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        9,
        0
      ],
      "mod_code": [
        "for ( int i = num . size ( ) - 1 ; i > 0 ; i -- )",
        "const int N = 1e5 + 5 and mod = 1e9 + 7 ;"
      ],
      "err_line": 0,
      "err_msg": "‘mod’ was not declared in this scope"
    },
    {
      "mod_line": [
        9,
        0,
        17
      ],
      "mod_code": [
        "for ( int i = num . size ( ) - 1 ; i > 0 ; i -- )",
        "const int N = 1e5 + 5 and mod = 1e9 + 7 ;",
        "else do"
      ],
      "err_line": 0,
      "err_msg": "‘mod’ was not declared in this scope"
    },
    {
      "mod_line": [
        9,
        17
      ],
      "mod_code": [
        "for ( int i = num . size ( ) - 1 ; i > 0 ; i -- )",
        "else do"
      ],
      "err_line": 19,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        0,
        17
      ],
      "mod_code": [
        "const int N = 1e5 + 5 and mod = 1e9 + 7 ;",
        "else do"
      ],
      "err_line": 0,
      "err_msg": "‘mod’ was not declared in this scope"
    }
  ]
}