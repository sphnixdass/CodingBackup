{
  "meta": {
    "index": 310,
    "hitid": "3OID399FXG1Q7TFY6YMS96UPLUMDFN",
    "workerid": "A1NBHCFZKJGHKW",
    "probid": "61A",
    "subid": "48871715"
  },
  "lines": [
    {
      "line": 0,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 1,
      "text": "s , s1 , s2 = string with s = \" \" and s1 = \" \" and s2 = \" \"",
      "code": "string s = \" \" , s1 = \" \" , s2 = \" \" ;",
      "indent": 1
    },
    {
      "line": 2,
      "text": "read s1 then s2",
      "code": "cin >> s1 >> s2 ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "for i = 0 to length of s1",
      "code": "for ( int i = 0 ; i < s1 . length ( ) ; i ++ )",
      "indent": 1
    },
    {
      "line": 4,
      "text": "if sq [ i ] is s2 [ i ]",
      "code": "if ( s1 [ i ] == s2 [ i ] )",
      "indent": 2
    },
    {
      "line": 5,
      "text": "append ' 0 ' to s",
      "code": "s += ' 0 ' ;",
      "indent": 3
    },
    {
      "line": 6,
      "text": "else",
      "code": "else",
      "indent": 2
    },
    {
      "line": 7,
      "text": "append ' 1 ' to s",
      "code": "s += ' 1 ' ;",
      "indent": 3
    },
    {
      "line": 8,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 9,
      "text": "print s",
      "code": "cout << s << endl ;",
      "indent": 1
    },
    {
      "line": 10,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 11,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        1
      ],
      "mod_code": [
        "string s , s1 = \" \" , s2 = \" \" , s2 = \" \" ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘std::__cxx11::string s2’"
    },
    {
      "mod_line": [
        4
      ],
      "mod_code": [
        "if ( sq [ i ] == s2 [ i ] )"
      ],
      "err_line": 4,
      "err_msg": "‘sq’ was not declared in this scope"
    },
    {
      "mod_line": [
        1
      ],
      "mod_code": [
        "string s , s1 = \" \" , s1 = \" \" , s2 = \" \" ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘std::__cxx11::string s1’"
    },
    {
      "mod_line": [
        2
      ],
      "mod_code": [
        "cout << s1 >> s2 ;"
      ],
      "err_line": 2,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::basic_ostream<char>’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        3
      ],
      "mod_code": [
        "for ( i = 0 ; i < s1 . length ( ) ; i ++ )"
      ],
      "err_line": 3,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        4
      ],
      "mod_code": [
        "if ( strcmp ( sq [ i ] ) == s2 [ i ] )"
      ],
      "err_line": 4,
      "err_msg": "‘sq’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        4
      ],
      "mod_code": [
        "string s , s1 = \" \" , s2 = \" \" , s2 = \" \" ;",
        "if ( sq [ i ] == s2 [ i ] )"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘std::__cxx11::string s2’"
    },
    {
      "mod_line": [
        1,
        4,
        3
      ],
      "mod_code": [
        "string s , s1 = \" \" , s2 = \" \" , s2 = \" \" ;",
        "if ( sq [ i ] == s2 [ i ] )",
        "for ( i = 0 ; i < s1 . length ( ) ; i ++ )"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘std::__cxx11::string s2’"
    },
    {
      "mod_line": [
        1,
        4,
        3,
        2
      ],
      "mod_code": [
        "string s , s1 = \" \" , s2 = \" \" , s2 = \" \" ;",
        "if ( sq [ i ] == s2 [ i ] )",
        "for ( i = 0 ; i < s1 . length ( ) ; i ++ )",
        "cout << s1 >> s2 ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘std::__cxx11::string s2’"
    },
    {
      "mod_line": [
        1,
        4,
        2
      ],
      "mod_code": [
        "string s , s1 = \" \" , s2 = \" \" , s2 = \" \" ;",
        "if ( sq [ i ] == s2 [ i ] )",
        "cout << s1 >> s2 ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘std::__cxx11::string s2’"
    },
    {
      "mod_line": [
        1,
        3
      ],
      "mod_code": [
        "string s , s1 = \" \" , s2 = \" \" , s2 = \" \" ;",
        "for ( i = 0 ; i < s1 . length ( ) ; i ++ )"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘std::__cxx11::string s2’"
    },
    {
      "mod_line": [
        1,
        3,
        2
      ],
      "mod_code": [
        "string s , s1 = \" \" , s2 = \" \" , s2 = \" \" ;",
        "for ( i = 0 ; i < s1 . length ( ) ; i ++ )",
        "cout << s1 >> s2 ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘std::__cxx11::string s2’"
    },
    {
      "mod_line": [
        1,
        3,
        2,
        4
      ],
      "mod_code": [
        "string s , s1 = \" \" , s2 = \" \" , s2 = \" \" ;",
        "for ( i = 0 ; i < s1 . length ( ) ; i ++ )",
        "cout << s1 >> s2 ;",
        "if ( strcmp ( sq [ i ] ) == s2 [ i ] )"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘std::__cxx11::string s2’"
    },
    {
      "mod_line": [
        1,
        3,
        4
      ],
      "mod_code": [
        "string s , s1 = \" \" , s2 = \" \" , s2 = \" \" ;",
        "for ( i = 0 ; i < s1 . length ( ) ; i ++ )",
        "if ( strcmp ( sq [ i ] ) == s2 [ i ] )"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘std::__cxx11::string s2’"
    },
    {
      "mod_line": [
        1,
        2
      ],
      "mod_code": [
        "string s , s1 = \" \" , s2 = \" \" , s2 = \" \" ;",
        "cout << s1 >> s2 ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘std::__cxx11::string s2’"
    },
    {
      "mod_line": [
        1,
        2,
        4
      ],
      "mod_code": [
        "string s , s1 = \" \" , s2 = \" \" , s2 = \" \" ;",
        "cout << s1 >> s2 ;",
        "if ( strcmp ( sq [ i ] ) == s2 [ i ] )"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘std::__cxx11::string s2’"
    },
    {
      "mod_line": [
        1,
        4
      ],
      "mod_code": [
        "string s , s1 = \" \" , s2 = \" \" , s2 = \" \" ;",
        "if ( strcmp ( sq [ i ] ) == s2 [ i ] )"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘std::__cxx11::string s2’"
    },
    {
      "mod_line": [
        4,
        3
      ],
      "mod_code": [
        "if ( sq [ i ] == s2 [ i ] )",
        "for ( i = 0 ; i < s1 . length ( ) ; i ++ )"
      ],
      "err_line": 3,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        3,
        2
      ],
      "mod_code": [
        "if ( sq [ i ] == s2 [ i ] )",
        "for ( i = 0 ; i < s1 . length ( ) ; i ++ )",
        "cout << s1 >> s2 ;"
      ],
      "err_line": 2,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::basic_ostream<char>’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        4,
        3,
        2,
        1
      ],
      "mod_code": [
        "if ( sq [ i ] == s2 [ i ] )",
        "for ( i = 0 ; i < s1 . length ( ) ; i ++ )",
        "cout << s1 >> s2 ;",
        "string s , s1 = \" \" , s1 = \" \" , s2 = \" \" ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘std::__cxx11::string s1’"
    },
    {
      "mod_line": [
        4,
        3,
        1
      ],
      "mod_code": [
        "if ( sq [ i ] == s2 [ i ] )",
        "for ( i = 0 ; i < s1 . length ( ) ; i ++ )",
        "string s , s1 = \" \" , s1 = \" \" , s2 = \" \" ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘std::__cxx11::string s1’"
    },
    {
      "mod_line": [
        4,
        2
      ],
      "mod_code": [
        "if ( sq [ i ] == s2 [ i ] )",
        "cout << s1 >> s2 ;"
      ],
      "err_line": 2,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::basic_ostream<char>’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        4,
        2,
        1
      ],
      "mod_code": [
        "if ( sq [ i ] == s2 [ i ] )",
        "cout << s1 >> s2 ;",
        "string s , s1 = \" \" , s1 = \" \" , s2 = \" \" ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘std::__cxx11::string s1’"
    },
    {
      "mod_line": [
        4,
        1
      ],
      "mod_code": [
        "if ( sq [ i ] == s2 [ i ] )",
        "string s , s1 = \" \" , s1 = \" \" , s2 = \" \" ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘std::__cxx11::string s1’"
    },
    {
      "mod_line": [
        3,
        2
      ],
      "mod_code": [
        "for ( i = 0 ; i < s1 . length ( ) ; i ++ )",
        "cout << s1 >> s2 ;"
      ],
      "err_line": 2,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::basic_ostream<char>’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        3,
        2,
        4
      ],
      "mod_code": [
        "for ( i = 0 ; i < s1 . length ( ) ; i ++ )",
        "cout << s1 >> s2 ;",
        "if ( strcmp ( sq [ i ] ) == s2 [ i ] )"
      ],
      "err_line": 2,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::basic_ostream<char>’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        3,
        2,
        4,
        1
      ],
      "mod_code": [
        "for ( i = 0 ; i < s1 . length ( ) ; i ++ )",
        "cout << s1 >> s2 ;",
        "if ( strcmp ( sq [ i ] ) == s2 [ i ] )",
        "string s , s1 = \" \" , s1 = \" \" , s2 = \" \" ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘std::__cxx11::string s1’"
    },
    {
      "mod_line": [
        3,
        2,
        1
      ],
      "mod_code": [
        "for ( i = 0 ; i < s1 . length ( ) ; i ++ )",
        "cout << s1 >> s2 ;",
        "string s , s1 = \" \" , s1 = \" \" , s2 = \" \" ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘std::__cxx11::string s1’"
    },
    {
      "mod_line": [
        3,
        4
      ],
      "mod_code": [
        "for ( i = 0 ; i < s1 . length ( ) ; i ++ )",
        "if ( strcmp ( sq [ i ] ) == s2 [ i ] )"
      ],
      "err_line": 3,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        4,
        1
      ],
      "mod_code": [
        "for ( i = 0 ; i < s1 . length ( ) ; i ++ )",
        "if ( strcmp ( sq [ i ] ) == s2 [ i ] )",
        "string s , s1 = \" \" , s1 = \" \" , s2 = \" \" ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘std::__cxx11::string s1’"
    },
    {
      "mod_line": [
        3,
        1
      ],
      "mod_code": [
        "for ( i = 0 ; i < s1 . length ( ) ; i ++ )",
        "string s , s1 = \" \" , s1 = \" \" , s2 = \" \" ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘std::__cxx11::string s1’"
    },
    {
      "mod_line": [
        2,
        4
      ],
      "mod_code": [
        "cout << s1 >> s2 ;",
        "if ( strcmp ( sq [ i ] ) == s2 [ i ] )"
      ],
      "err_line": 2,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::basic_ostream<char>’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        2,
        4,
        1
      ],
      "mod_code": [
        "cout << s1 >> s2 ;",
        "if ( strcmp ( sq [ i ] ) == s2 [ i ] )",
        "string s , s1 = \" \" , s1 = \" \" , s2 = \" \" ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘std::__cxx11::string s1’"
    },
    {
      "mod_line": [
        2,
        1
      ],
      "mod_code": [
        "cout << s1 >> s2 ;",
        "string s , s1 = \" \" , s1 = \" \" , s2 = \" \" ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘std::__cxx11::string s1’"
    },
    {
      "mod_line": [
        4,
        1
      ],
      "mod_code": [
        "if ( strcmp ( sq [ i ] ) == s2 [ i ] )",
        "string s , s1 = \" \" , s1 = \" \" , s2 = \" \" ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘std::__cxx11::string s1’"
    }
  ]
}