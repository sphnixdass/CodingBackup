{
  "meta": {
    "index": 2641,
    "hitid": "307FVKVSYR90S4HZV4NNIAN296I74X",
    "workerid": "A1AYVATMT88U1W",
    "probid": "768A",
    "subid": "41084240"
  },
  "lines": [
    {
      "line": 0,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 1,
      "text": "let cns , cnt be integers with cns is equal to 0 , cnt is equal to 0x3f3f3f3f",
      "code": "int cns = 0 , cnt = 0x3f3f3f3f ;",
      "indent": 1
    },
    {
      "line": 2,
      "text": "let n , strength be integers with strength is equal to array of integers of length 100001",
      "code": "int n , strength [ 100001 ] ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "read n",
      "code": "cin >> n ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "for i = 0 to n exclusive",
      "code": "for ( int i = 0 ; i < n ; i ++ )",
      "indent": 1
    },
    {
      "line": 5,
      "text": "read ith element of array strength",
      "code": "cin >> strength [ i ] ;",
      "indent": 2
    },
    {
      "line": 6,
      "text": "if ( ith element of array strength is greater than cns ) , cns is equal to ith element of array strength",
      "code": "if ( strength [ i ] > cns ) cns = strength [ i ] ;",
      "indent": 2
    },
    {
      "line": 7,
      "text": "if ( ith element of array strength is less than cnt ) , cnt is equal to ith element of array strength",
      "code": "if ( strength [ i ] < cnt ) cnt = strength [ i ] ;",
      "indent": 2
    },
    {
      "line": 8,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 9,
      "text": "let vis be a integer with value is equal to 0",
      "code": "int vis = 0 ;",
      "indent": 1
    },
    {
      "line": 10,
      "text": "for ( i = 0 to n exclusive )",
      "code": "for ( int i = 0 ; i < n ; i ++ )",
      "indent": 1
    },
    {
      "line": 11,
      "text": "if ( ith element of array strength is equal to cns or ith element of array strength is equal to cnt ) , increase vis by 1",
      "code": "if ( strength [ i ] == cns || strength [ i ] == cnt ) vis ++ ;",
      "indent": 2
    },
    {
      "line": 12,
      "text": "print n - vis and newline",
      "code": "cout << n - vis << endl ;",
      "indent": 1
    },
    {
      "line": 13,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 14,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        6
      ],
      "mod_code": [
        "if ( strength [ i ] > cns ) { cns = strength [ strength ] ; }"
      ],
      "err_line": 6,
      "err_msg": "invalid types ‘int [100001][int [100001]]’ for array subscript"
    },
    {
      "mod_line": [
        11
      ],
      "mod_code": [
        "if ( strength [ i ] == ' cns ' || strength == ' cnt ' ) vis ++ ;"
      ],
      "err_line": 11,
      "err_msg": "ISO C++ forbids comparison between pointer and integer [-fpermissive]"
    },
    {
      "mod_line": [
        2
      ],
      "mod_code": [
        "int n , strength , strength ;"
      ],
      "err_line": 2,
      "err_msg": "redeclaration of ‘int strength’"
    },
    {
      "mod_line": [
        4
      ],
      "mod_code": [
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 4,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        7
      ],
      "mod_code": [
        "if ( strength [ i ] < cnt ) cnt = strength [ strength ] ;"
      ],
      "err_line": 7,
      "err_msg": "invalid types ‘int [100001][int [100001]]’ for array subscript"
    },
    {
      "mod_line": [
        10
      ],
      "mod_code": [
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 10,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        11
      ],
      "mod_code": [
        "if ( strength [ i ] == \" cns \" ) vis ++ ;"
      ],
      "err_line": 11,
      "err_msg": "ISO C++ forbids comparison between pointer and integer [-fpermissive]"
    },
    {
      "mod_line": [
        6,
        11
      ],
      "mod_code": [
        "if ( strength [ i ] > cns ) { cns = strength [ strength ] ; }",
        "if ( strength [ i ] == ' cns ' || strength == ' cnt ' ) vis ++ ;"
      ],
      "err_line": 6,
      "err_msg": "invalid types ‘int [100001][int [100001]]’ for array subscript"
    },
    {
      "mod_line": [
        6,
        11,
        10
      ],
      "mod_code": [
        "if ( strength [ i ] > cns ) { cns = strength [ strength ] ; }",
        "if ( strength [ i ] == ' cns ' || strength == ' cnt ' ) vis ++ ;",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 6,
      "err_msg": "invalid types ‘int [100001][int [100001]]’ for array subscript"
    },
    {
      "mod_line": [
        6,
        11,
        10,
        7
      ],
      "mod_code": [
        "if ( strength [ i ] > cns ) { cns = strength [ strength ] ; }",
        "if ( strength [ i ] == ' cns ' || strength == ' cnt ' ) vis ++ ;",
        "for ( i = 0 ; i < n ; i ++ )",
        "if ( strength [ i ] < cnt ) cnt = strength [ strength ] ;"
      ],
      "err_line": 6,
      "err_msg": "invalid types ‘int [100001][int [100001]]’ for array subscript"
    },
    {
      "mod_line": [
        6,
        11,
        10,
        5
      ],
      "mod_code": [
        "if ( strength [ i ] > cns ) { cns = strength [ strength ] ; }",
        "if ( strength [ i ] == ' cns ' || strength == ' cnt ' ) vis ++ ;",
        "for ( i = 0 ; i < n ; i ++ )",
        "cin >> strength [ i ] >> strength [ i ] ;"
      ],
      "err_line": 6,
      "err_msg": "invalid types ‘int [100001][int [100001]]’ for array subscript"
    },
    {
      "mod_line": [
        6,
        11,
        7
      ],
      "mod_code": [
        "if ( strength [ i ] > cns ) { cns = strength [ strength ] ; }",
        "if ( strength [ i ] == ' cns ' || strength == ' cnt ' ) vis ++ ;",
        "if ( strength [ i ] < cnt ) cnt = strength [ strength ] ;"
      ],
      "err_line": 6,
      "err_msg": "invalid types ‘int [100001][int [100001]]’ for array subscript"
    },
    {
      "mod_line": [
        6,
        11,
        7,
        5
      ],
      "mod_code": [
        "if ( strength [ i ] > cns ) { cns = strength [ strength ] ; }",
        "if ( strength [ i ] == ' cns ' || strength == ' cnt ' ) vis ++ ;",
        "if ( strength [ i ] < cnt ) cnt = strength [ strength ] ;",
        "cin >> strength [ i ] >> strength [ i ] ;"
      ],
      "err_line": 6,
      "err_msg": "invalid types ‘int [100001][int [100001]]’ for array subscript"
    },
    {
      "mod_line": [
        6,
        11,
        5
      ],
      "mod_code": [
        "if ( strength [ i ] > cns ) { cns = strength [ strength ] ; }",
        "if ( strength [ i ] == ' cns ' || strength == ' cnt ' ) vis ++ ;",
        "cin >> strength [ i ] >> strength [ i ] ;"
      ],
      "err_line": 6,
      "err_msg": "invalid types ‘int [100001][int [100001]]’ for array subscript"
    },
    {
      "mod_line": [
        6,
        10
      ],
      "mod_code": [
        "if ( strength [ i ] > cns ) { cns = strength [ strength ] ; }",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 6,
      "err_msg": "invalid types ‘int [100001][int [100001]]’ for array subscript"
    },
    {
      "mod_line": [
        6,
        10,
        7
      ],
      "mod_code": [
        "if ( strength [ i ] > cns ) { cns = strength [ strength ] ; }",
        "for ( i = 0 ; i < n ; i ++ )",
        "if ( strength [ i ] < cnt ) cnt = strength [ strength ] ;"
      ],
      "err_line": 6,
      "err_msg": "invalid types ‘int [100001][int [100001]]’ for array subscript"
    },
    {
      "mod_line": [
        6,
        10,
        7,
        11
      ],
      "mod_code": [
        "if ( strength [ i ] > cns ) { cns = strength [ strength ] ; }",
        "for ( i = 0 ; i < n ; i ++ )",
        "if ( strength [ i ] < cnt ) cnt = strength [ strength ] ;",
        "if ( strength [ i ] == \" cns \" ) vis ++ ;"
      ],
      "err_line": 6,
      "err_msg": "invalid types ‘int [100001][int [100001]]’ for array subscript"
    },
    {
      "mod_line": [
        6,
        10,
        7,
        5
      ],
      "mod_code": [
        "if ( strength [ i ] > cns ) { cns = strength [ strength ] ; }",
        "for ( i = 0 ; i < n ; i ++ )",
        "if ( strength [ i ] < cnt ) cnt = strength [ strength ] ;",
        "cin >> strength [ i ] >> strength [ i ] ;"
      ],
      "err_line": 6,
      "err_msg": "invalid types ‘int [100001][int [100001]]’ for array subscript"
    },
    {
      "mod_line": [
        6,
        10,
        11
      ],
      "mod_code": [
        "if ( strength [ i ] > cns ) { cns = strength [ strength ] ; }",
        "for ( i = 0 ; i < n ; i ++ )",
        "if ( strength [ i ] == \" cns \" ) vis ++ ;"
      ],
      "err_line": 6,
      "err_msg": "invalid types ‘int [100001][int [100001]]’ for array subscript"
    },
    {
      "mod_line": [
        6,
        10,
        11,
        5
      ],
      "mod_code": [
        "if ( strength [ i ] > cns ) { cns = strength [ strength ] ; }",
        "for ( i = 0 ; i < n ; i ++ )",
        "if ( strength [ i ] == \" cns \" ) vis ++ ;",
        "cin >> strength [ i ] >> strength [ i ] ;"
      ],
      "err_line": 6,
      "err_msg": "invalid types ‘int [100001][int [100001]]’ for array subscript"
    },
    {
      "mod_line": [
        6,
        10,
        5
      ],
      "mod_code": [
        "if ( strength [ i ] > cns ) { cns = strength [ strength ] ; }",
        "for ( i = 0 ; i < n ; i ++ )",
        "cin >> strength [ i ] >> strength [ i ] ;"
      ],
      "err_line": 6,
      "err_msg": "invalid types ‘int [100001][int [100001]]’ for array subscript"
    },
    {
      "mod_line": [
        6,
        7
      ],
      "mod_code": [
        "if ( strength [ i ] > cns ) { cns = strength [ strength ] ; }",
        "if ( strength [ i ] < cnt ) cnt = strength [ strength ] ;"
      ],
      "err_line": 6,
      "err_msg": "invalid types ‘int [100001][int [100001]]’ for array subscript"
    },
    {
      "mod_line": [
        6,
        7,
        11
      ],
      "mod_code": [
        "if ( strength [ i ] > cns ) { cns = strength [ strength ] ; }",
        "if ( strength [ i ] < cnt ) cnt = strength [ strength ] ;",
        "if ( strength [ i ] == \" cns \" ) vis ++ ;"
      ],
      "err_line": 6,
      "err_msg": "invalid types ‘int [100001][int [100001]]’ for array subscript"
    },
    {
      "mod_line": [
        6,
        7,
        11,
        5
      ],
      "mod_code": [
        "if ( strength [ i ] > cns ) { cns = strength [ strength ] ; }",
        "if ( strength [ i ] < cnt ) cnt = strength [ strength ] ;",
        "if ( strength [ i ] == \" cns \" ) vis ++ ;",
        "cin >> strength [ i ] >> strength [ i ] ;"
      ],
      "err_line": 6,
      "err_msg": "invalid types ‘int [100001][int [100001]]’ for array subscript"
    },
    {
      "mod_line": [
        6,
        7,
        5
      ],
      "mod_code": [
        "if ( strength [ i ] > cns ) { cns = strength [ strength ] ; }",
        "if ( strength [ i ] < cnt ) cnt = strength [ strength ] ;",
        "cin >> strength [ i ] >> strength [ i ] ;"
      ],
      "err_line": 6,
      "err_msg": "invalid types ‘int [100001][int [100001]]’ for array subscript"
    },
    {
      "mod_line": [
        6,
        11
      ],
      "mod_code": [
        "if ( strength [ i ] > cns ) { cns = strength [ strength ] ; }",
        "if ( strength [ i ] == \" cns \" ) vis ++ ;"
      ],
      "err_line": 6,
      "err_msg": "invalid types ‘int [100001][int [100001]]’ for array subscript"
    },
    {
      "mod_line": [
        6,
        11,
        5
      ],
      "mod_code": [
        "if ( strength [ i ] > cns ) { cns = strength [ strength ] ; }",
        "if ( strength [ i ] == \" cns \" ) vis ++ ;",
        "cin >> strength [ i ] >> strength [ i ] ;"
      ],
      "err_line": 6,
      "err_msg": "invalid types ‘int [100001][int [100001]]’ for array subscript"
    },
    {
      "mod_line": [
        6,
        5
      ],
      "mod_code": [
        "if ( strength [ i ] > cns ) { cns = strength [ strength ] ; }",
        "cin >> strength [ i ] >> strength [ i ] ;"
      ],
      "err_line": 6,
      "err_msg": "invalid types ‘int [100001][int [100001]]’ for array subscript"
    },
    {
      "mod_line": [
        11,
        10
      ],
      "mod_code": [
        "if ( strength [ i ] == ' cns ' || strength == ' cnt ' ) vis ++ ;",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 10,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        11,
        10,
        7
      ],
      "mod_code": [
        "if ( strength [ i ] == ' cns ' || strength == ' cnt ' ) vis ++ ;",
        "for ( i = 0 ; i < n ; i ++ )",
        "if ( strength [ i ] < cnt ) cnt = strength [ strength ] ;"
      ],
      "err_line": 7,
      "err_msg": "invalid types ‘int [100001][int [100001]]’ for array subscript"
    },
    {
      "mod_line": [
        11,
        10,
        7,
        5
      ],
      "mod_code": [
        "if ( strength [ i ] == ' cns ' || strength == ' cnt ' ) vis ++ ;",
        "for ( i = 0 ; i < n ; i ++ )",
        "if ( strength [ i ] < cnt ) cnt = strength [ strength ] ;",
        "cin >> strength [ i ] >> strength [ i ] ;"
      ],
      "err_line": 7,
      "err_msg": "invalid types ‘int [100001][int [100001]]’ for array subscript"
    },
    {
      "mod_line": [
        11,
        10,
        5
      ],
      "mod_code": [
        "if ( strength [ i ] == ' cns ' || strength == ' cnt ' ) vis ++ ;",
        "for ( i = 0 ; i < n ; i ++ )",
        "cin >> strength [ i ] >> strength [ i ] ;"
      ],
      "err_line": 10,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        11,
        7
      ],
      "mod_code": [
        "if ( strength [ i ] == ' cns ' || strength == ' cnt ' ) vis ++ ;",
        "if ( strength [ i ] < cnt ) cnt = strength [ strength ] ;"
      ],
      "err_line": 7,
      "err_msg": "invalid types ‘int [100001][int [100001]]’ for array subscript"
    },
    {
      "mod_line": [
        11,
        7,
        5
      ],
      "mod_code": [
        "if ( strength [ i ] == ' cns ' || strength == ' cnt ' ) vis ++ ;",
        "if ( strength [ i ] < cnt ) cnt = strength [ strength ] ;",
        "cin >> strength [ i ] >> strength [ i ] ;"
      ],
      "err_line": 7,
      "err_msg": "invalid types ‘int [100001][int [100001]]’ for array subscript"
    },
    {
      "mod_line": [
        11,
        5
      ],
      "mod_code": [
        "if ( strength [ i ] == ' cns ' || strength == ' cnt ' ) vis ++ ;",
        "cin >> strength [ i ] >> strength [ i ] ;"
      ],
      "err_line": 11,
      "err_msg": "ISO C++ forbids comparison between pointer and integer [-fpermissive]"
    },
    {
      "mod_line": [
        10,
        7
      ],
      "mod_code": [
        "for ( i = 0 ; i < n ; i ++ )",
        "if ( strength [ i ] < cnt ) cnt = strength [ strength ] ;"
      ],
      "err_line": 7,
      "err_msg": "invalid types ‘int [100001][int [100001]]’ for array subscript"
    },
    {
      "mod_line": [
        10,
        7,
        11
      ],
      "mod_code": [
        "for ( i = 0 ; i < n ; i ++ )",
        "if ( strength [ i ] < cnt ) cnt = strength [ strength ] ;",
        "if ( strength [ i ] == \" cns \" ) vis ++ ;"
      ],
      "err_line": 7,
      "err_msg": "invalid types ‘int [100001][int [100001]]’ for array subscript"
    },
    {
      "mod_line": [
        10,
        7,
        11,
        5
      ],
      "mod_code": [
        "for ( i = 0 ; i < n ; i ++ )",
        "if ( strength [ i ] < cnt ) cnt = strength [ strength ] ;",
        "if ( strength [ i ] == \" cns \" ) vis ++ ;",
        "cin >> strength [ i ] >> strength [ i ] ;"
      ],
      "err_line": 7,
      "err_msg": "invalid types ‘int [100001][int [100001]]’ for array subscript"
    },
    {
      "mod_line": [
        10,
        7,
        5
      ],
      "mod_code": [
        "for ( i = 0 ; i < n ; i ++ )",
        "if ( strength [ i ] < cnt ) cnt = strength [ strength ] ;",
        "cin >> strength [ i ] >> strength [ i ] ;"
      ],
      "err_line": 7,
      "err_msg": "invalid types ‘int [100001][int [100001]]’ for array subscript"
    },
    {
      "mod_line": [
        10,
        11
      ],
      "mod_code": [
        "for ( i = 0 ; i < n ; i ++ )",
        "if ( strength [ i ] == \" cns \" ) vis ++ ;"
      ],
      "err_line": 10,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        10,
        11,
        5
      ],
      "mod_code": [
        "for ( i = 0 ; i < n ; i ++ )",
        "if ( strength [ i ] == \" cns \" ) vis ++ ;",
        "cin >> strength [ i ] >> strength [ i ] ;"
      ],
      "err_line": 10,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        10,
        5
      ],
      "mod_code": [
        "for ( i = 0 ; i < n ; i ++ )",
        "cin >> strength [ i ] >> strength [ i ] ;"
      ],
      "err_line": 10,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        7,
        11
      ],
      "mod_code": [
        "if ( strength [ i ] < cnt ) cnt = strength [ strength ] ;",
        "if ( strength [ i ] == \" cns \" ) vis ++ ;"
      ],
      "err_line": 7,
      "err_msg": "invalid types ‘int [100001][int [100001]]’ for array subscript"
    },
    {
      "mod_line": [
        7,
        11,
        5
      ],
      "mod_code": [
        "if ( strength [ i ] < cnt ) cnt = strength [ strength ] ;",
        "if ( strength [ i ] == \" cns \" ) vis ++ ;",
        "cin >> strength [ i ] >> strength [ i ] ;"
      ],
      "err_line": 7,
      "err_msg": "invalid types ‘int [100001][int [100001]]’ for array subscript"
    },
    {
      "mod_line": [
        7,
        5
      ],
      "mod_code": [
        "if ( strength [ i ] < cnt ) cnt = strength [ strength ] ;",
        "cin >> strength [ i ] >> strength [ i ] ;"
      ],
      "err_line": 7,
      "err_msg": "invalid types ‘int [100001][int [100001]]’ for array subscript"
    },
    {
      "mod_line": [
        11,
        5
      ],
      "mod_code": [
        "if ( strength [ i ] == \" cns \" ) vis ++ ;",
        "cin >> strength [ i ] >> strength [ i ] ;"
      ],
      "err_line": 11,
      "err_msg": "ISO C++ forbids comparison between pointer and integer [-fpermissive]"
    }
  ]
}