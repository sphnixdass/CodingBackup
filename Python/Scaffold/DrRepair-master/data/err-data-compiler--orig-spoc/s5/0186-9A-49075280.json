{
  "meta": {
    "index": 186,
    "hitid": "3XABXM4AJ1ZBHN9G36M6ZDK2G3O8QR",
    "workerid": "AIWEXPJAU66D9",
    "probid": "9A",
    "subid": "49075280"
  },
  "lines": [
    {
      "line": 0,
      "text": "declare integers called y and w",
      "code": "int y , w ;",
      "indent": 0
    },
    {
      "line": 1,
      "text": "function gcd with integer arguments a and b with return type of integer",
      "code": "int gcd ( int a , int b )",
      "indent": 0
    },
    {
      "line": 2,
      "text": "return b if a = 0 and gcd of b % a and a otherwise",
      "code": "return ( a == 0 ? b : gcd ( b % a , a ) ) ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    },
    {
      "line": 4,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 5,
      "text": "read y and w",
      "code": "cin >> y >> w ;",
      "indent": 1
    },
    {
      "line": 6,
      "text": "set integer x to max of y and w",
      "code": "int x = max ( y , w ) ;",
      "indent": 1
    },
    {
      "line": 7,
      "text": "x = 7 - x",
      "code": "x = 7 - x ;",
      "indent": 1
    },
    {
      "line": 8,
      "text": "if x is equal to 6",
      "code": "if ( x == 6 )",
      "indent": 1
    },
    {
      "line": 9,
      "text": "print \" 1 / 1 \\ n \"",
      "code": "cout << \" 1/1\\n \" ;",
      "indent": 2
    },
    {
      "line": 10,
      "text": "else",
      "code": "else",
      "indent": 1
    },
    {
      "line": 11,
      "text": "create integer y with value gcd of x and 6",
      "code": "int y = gcd ( x , 6 ) ;",
      "indent": 2
    },
    {
      "line": 12,
      "text": "divide x by y",
      "code": "x /= y ;",
      "indent": 2
    },
    {
      "line": 13,
      "text": "print x , \" / \" , 6 / y and \" \\ n \"",
      "code": "cout << x << \" / \" << 6 / y << \" \\n \" ;",
      "indent": 2
    },
    {
      "line": 14,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 15,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 16,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        2
      ],
      "mod_code": [
        "return a == 0 ? gcd ( b % a ) : a ;"
      ],
      "err_line": 2,
      "err_msg": "too few arguments to function ‘int gcd(int, int)’"
    },
    {
      "mod_line": [
        1
      ],
      "mod_code": [
        "return gcd ( int a , int b )"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘return’"
    },
    {
      "mod_line": [
        2
      ],
      "mod_code": [
        "return a == 0 ? b : gcd ( b % a ) ;"
      ],
      "err_line": 2,
      "err_msg": "too few arguments to function ‘int gcd(int, int)’"
    },
    {
      "mod_line": [
        5
      ],
      "mod_code": [
        "while ( cin >> y >> w )"
      ],
      "err_line": 7,
      "err_msg": "‘x’ was not declared in this scope"
    },
    {
      "mod_line": [
        6
      ],
      "mod_code": [
        "x = max ( y , w ) ;"
      ],
      "err_line": 6,
      "err_msg": "‘x’ was not declared in this scope"
    },
    {
      "mod_line": [
        7
      ],
      "mod_code": [
        "int x = 7 - x ;"
      ],
      "err_line": 7,
      "err_msg": "redeclaration of ‘int x’"
    },
    {
      "mod_line": [
        8
      ],
      "mod_code": [
        "if ( x == \" 6 \" )"
      ],
      "err_line": 8,
      "err_msg": "ISO C++ forbids comparison between pointer and integer [-fpermissive]"
    },
    {
      "mod_line": [
        11
      ],
      "mod_code": [
        "int * y = gcd ( x , 6 ) ;"
      ],
      "err_line": 11,
      "err_msg": "invalid conversion from ‘int’ to ‘int*’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        9
      ],
      "mod_code": [
        "return a == 0 ? gcd ( b % a ) : a ;",
        "cout << \" 1\\n \" ;"
      ],
      "err_line": 2,
      "err_msg": "too few arguments to function ‘int gcd(int, int)’"
    },
    {
      "mod_line": [
        2,
        9,
        11
      ],
      "mod_code": [
        "return a == 0 ? gcd ( b % a ) : a ;",
        "cout << \" 1\\n \" ;",
        "int * y = gcd ( x , 6 ) ;"
      ],
      "err_line": 2,
      "err_msg": "too few arguments to function ‘int gcd(int, int)’"
    },
    {
      "mod_line": [
        2,
        9,
        11,
        1
      ],
      "mod_code": [
        "return a == 0 ? gcd ( b % a ) : a ;",
        "cout << \" 1\\n \" ;",
        "int * y = gcd ( x , 6 ) ;",
        "return gcd ( int a , int b )"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘return’"
    },
    {
      "mod_line": [
        2,
        9,
        11,
        5
      ],
      "mod_code": [
        "return a == 0 ? gcd ( b % a ) : a ;",
        "cout << \" 1\\n \" ;",
        "int * y = gcd ( x , 6 ) ;",
        "while ( cin >> y >> w )"
      ],
      "err_line": 2,
      "err_msg": "too few arguments to function ‘int gcd(int, int)’"
    },
    {
      "mod_line": [
        2,
        9,
        11,
        8
      ],
      "mod_code": [
        "return a == 0 ? gcd ( b % a ) : a ;",
        "cout << \" 1\\n \" ;",
        "int * y = gcd ( x , 6 ) ;",
        "if ( x == \" 6 \" )"
      ],
      "err_line": 2,
      "err_msg": "too few arguments to function ‘int gcd(int, int)’"
    },
    {
      "mod_line": [
        2,
        9,
        1
      ],
      "mod_code": [
        "return a == 0 ? gcd ( b % a ) : a ;",
        "cout << \" 1\\n \" ;",
        "return gcd ( int a , int b )"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘return’"
    },
    {
      "mod_line": [
        2,
        9,
        1,
        5
      ],
      "mod_code": [
        "return a == 0 ? gcd ( b % a ) : a ;",
        "cout << \" 1\\n \" ;",
        "return gcd ( int a , int b )",
        "while ( cin >> y >> w )"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘return’"
    },
    {
      "mod_line": [
        2,
        9,
        1,
        8
      ],
      "mod_code": [
        "return a == 0 ? gcd ( b % a ) : a ;",
        "cout << \" 1\\n \" ;",
        "return gcd ( int a , int b )",
        "if ( x == \" 6 \" )"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘return’"
    },
    {
      "mod_line": [
        2,
        9,
        5
      ],
      "mod_code": [
        "return a == 0 ? gcd ( b % a ) : a ;",
        "cout << \" 1\\n \" ;",
        "while ( cin >> y >> w )"
      ],
      "err_line": 2,
      "err_msg": "too few arguments to function ‘int gcd(int, int)’"
    },
    {
      "mod_line": [
        2,
        9,
        5,
        8
      ],
      "mod_code": [
        "return a == 0 ? gcd ( b % a ) : a ;",
        "cout << \" 1\\n \" ;",
        "while ( cin >> y >> w )",
        "if ( x == \" 6 \" )"
      ],
      "err_line": 2,
      "err_msg": "too few arguments to function ‘int gcd(int, int)’"
    },
    {
      "mod_line": [
        2,
        9,
        8
      ],
      "mod_code": [
        "return a == 0 ? gcd ( b % a ) : a ;",
        "cout << \" 1\\n \" ;",
        "if ( x == \" 6 \" )"
      ],
      "err_line": 2,
      "err_msg": "too few arguments to function ‘int gcd(int, int)’"
    },
    {
      "mod_line": [
        2,
        11
      ],
      "mod_code": [
        "return a == 0 ? gcd ( b % a ) : a ;",
        "int * y = gcd ( x , 6 ) ;"
      ],
      "err_line": 2,
      "err_msg": "too few arguments to function ‘int gcd(int, int)’"
    },
    {
      "mod_line": [
        2,
        11,
        1
      ],
      "mod_code": [
        "return a == 0 ? gcd ( b % a ) : a ;",
        "int * y = gcd ( x , 6 ) ;",
        "return gcd ( int a , int b )"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘return’"
    },
    {
      "mod_line": [
        2,
        11,
        1,
        5
      ],
      "mod_code": [
        "return a == 0 ? gcd ( b % a ) : a ;",
        "int * y = gcd ( x , 6 ) ;",
        "return gcd ( int a , int b )",
        "while ( cin >> y >> w )"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘return’"
    },
    {
      "mod_line": [
        2,
        11,
        1,
        8
      ],
      "mod_code": [
        "return a == 0 ? gcd ( b % a ) : a ;",
        "int * y = gcd ( x , 6 ) ;",
        "return gcd ( int a , int b )",
        "if ( x == \" 6 \" )"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘return’"
    },
    {
      "mod_line": [
        2,
        11,
        5
      ],
      "mod_code": [
        "return a == 0 ? gcd ( b % a ) : a ;",
        "int * y = gcd ( x , 6 ) ;",
        "while ( cin >> y >> w )"
      ],
      "err_line": 2,
      "err_msg": "too few arguments to function ‘int gcd(int, int)’"
    },
    {
      "mod_line": [
        2,
        11,
        5,
        8
      ],
      "mod_code": [
        "return a == 0 ? gcd ( b % a ) : a ;",
        "int * y = gcd ( x , 6 ) ;",
        "while ( cin >> y >> w )",
        "if ( x == \" 6 \" )"
      ],
      "err_line": 2,
      "err_msg": "too few arguments to function ‘int gcd(int, int)’"
    },
    {
      "mod_line": [
        2,
        11,
        8
      ],
      "mod_code": [
        "return a == 0 ? gcd ( b % a ) : a ;",
        "int * y = gcd ( x , 6 ) ;",
        "if ( x == \" 6 \" )"
      ],
      "err_line": 2,
      "err_msg": "too few arguments to function ‘int gcd(int, int)’"
    },
    {
      "mod_line": [
        2,
        1
      ],
      "mod_code": [
        "return a == 0 ? gcd ( b % a ) : a ;",
        "return gcd ( int a , int b )"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘return’"
    },
    {
      "mod_line": [
        2,
        1,
        5
      ],
      "mod_code": [
        "return a == 0 ? gcd ( b % a ) : a ;",
        "return gcd ( int a , int b )",
        "while ( cin >> y >> w )"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘return’"
    },
    {
      "mod_line": [
        2,
        1,
        5,
        8
      ],
      "mod_code": [
        "return a == 0 ? gcd ( b % a ) : a ;",
        "return gcd ( int a , int b )",
        "while ( cin >> y >> w )",
        "if ( x == \" 6 \" )"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘return’"
    },
    {
      "mod_line": [
        2,
        1,
        8
      ],
      "mod_code": [
        "return a == 0 ? gcd ( b % a ) : a ;",
        "return gcd ( int a , int b )",
        "if ( x == \" 6 \" )"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘return’"
    },
    {
      "mod_line": [
        2,
        5
      ],
      "mod_code": [
        "return a == 0 ? gcd ( b % a ) : a ;",
        "while ( cin >> y >> w )"
      ],
      "err_line": 2,
      "err_msg": "too few arguments to function ‘int gcd(int, int)’"
    },
    {
      "mod_line": [
        2,
        5,
        8
      ],
      "mod_code": [
        "return a == 0 ? gcd ( b % a ) : a ;",
        "while ( cin >> y >> w )",
        "if ( x == \" 6 \" )"
      ],
      "err_line": 2,
      "err_msg": "too few arguments to function ‘int gcd(int, int)’"
    },
    {
      "mod_line": [
        2,
        8
      ],
      "mod_code": [
        "return a == 0 ? gcd ( b % a ) : a ;",
        "if ( x == \" 6 \" )"
      ],
      "err_line": 2,
      "err_msg": "too few arguments to function ‘int gcd(int, int)’"
    },
    {
      "mod_line": [
        9,
        11
      ],
      "mod_code": [
        "cout << \" 1\\n \" ;",
        "int * y = gcd ( x , 6 ) ;"
      ],
      "err_line": 11,
      "err_msg": "invalid conversion from ‘int’ to ‘int*’ [-fpermissive]"
    },
    {
      "mod_line": [
        9,
        11,
        1
      ],
      "mod_code": [
        "cout << \" 1\\n \" ;",
        "int * y = gcd ( x , 6 ) ;",
        "return gcd ( int a , int b )"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘return’"
    },
    {
      "mod_line": [
        9,
        11,
        1,
        5
      ],
      "mod_code": [
        "cout << \" 1\\n \" ;",
        "int * y = gcd ( x , 6 ) ;",
        "return gcd ( int a , int b )",
        "while ( cin >> y >> w )"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘return’"
    },
    {
      "mod_line": [
        9,
        11,
        1,
        8
      ],
      "mod_code": [
        "cout << \" 1\\n \" ;",
        "int * y = gcd ( x , 6 ) ;",
        "return gcd ( int a , int b )",
        "if ( x == \" 6 \" )"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘return’"
    },
    {
      "mod_line": [
        9,
        11,
        5
      ],
      "mod_code": [
        "cout << \" 1\\n \" ;",
        "int * y = gcd ( x , 6 ) ;",
        "while ( cin >> y >> w )"
      ],
      "err_line": 7,
      "err_msg": "‘x’ was not declared in this scope"
    },
    {
      "mod_line": [
        9,
        11,
        5,
        8
      ],
      "mod_code": [
        "cout << \" 1\\n \" ;",
        "int * y = gcd ( x , 6 ) ;",
        "while ( cin >> y >> w )",
        "if ( x == \" 6 \" )"
      ],
      "err_line": 7,
      "err_msg": "‘x’ was not declared in this scope"
    },
    {
      "mod_line": [
        9,
        11,
        8
      ],
      "mod_code": [
        "cout << \" 1\\n \" ;",
        "int * y = gcd ( x , 6 ) ;",
        "if ( x == \" 6 \" )"
      ],
      "err_line": 8,
      "err_msg": "ISO C++ forbids comparison between pointer and integer [-fpermissive]"
    },
    {
      "mod_line": [
        9,
        1
      ],
      "mod_code": [
        "cout << \" 1\\n \" ;",
        "return gcd ( int a , int b )"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘return’"
    },
    {
      "mod_line": [
        9,
        1,
        5
      ],
      "mod_code": [
        "cout << \" 1\\n \" ;",
        "return gcd ( int a , int b )",
        "while ( cin >> y >> w )"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘return’"
    },
    {
      "mod_line": [
        9,
        1,
        5,
        8
      ],
      "mod_code": [
        "cout << \" 1\\n \" ;",
        "return gcd ( int a , int b )",
        "while ( cin >> y >> w )",
        "if ( x == \" 6 \" )"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘return’"
    },
    {
      "mod_line": [
        9,
        1,
        8
      ],
      "mod_code": [
        "cout << \" 1\\n \" ;",
        "return gcd ( int a , int b )",
        "if ( x == \" 6 \" )"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘return’"
    },
    {
      "mod_line": [
        9,
        5
      ],
      "mod_code": [
        "cout << \" 1\\n \" ;",
        "while ( cin >> y >> w )"
      ],
      "err_line": 7,
      "err_msg": "‘x’ was not declared in this scope"
    },
    {
      "mod_line": [
        9,
        5,
        8
      ],
      "mod_code": [
        "cout << \" 1\\n \" ;",
        "while ( cin >> y >> w )",
        "if ( x == \" 6 \" )"
      ],
      "err_line": 7,
      "err_msg": "‘x’ was not declared in this scope"
    },
    {
      "mod_line": [
        9,
        8
      ],
      "mod_code": [
        "cout << \" 1\\n \" ;",
        "if ( x == \" 6 \" )"
      ],
      "err_line": 8,
      "err_msg": "ISO C++ forbids comparison between pointer and integer [-fpermissive]"
    },
    {
      "mod_line": [
        11,
        1
      ],
      "mod_code": [
        "int * y = gcd ( x , 6 ) ;",
        "return gcd ( int a , int b )"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘return’"
    },
    {
      "mod_line": [
        11,
        1,
        5
      ],
      "mod_code": [
        "int * y = gcd ( x , 6 ) ;",
        "return gcd ( int a , int b )",
        "while ( cin >> y >> w )"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘return’"
    },
    {
      "mod_line": [
        11,
        1,
        5,
        8
      ],
      "mod_code": [
        "int * y = gcd ( x , 6 ) ;",
        "return gcd ( int a , int b )",
        "while ( cin >> y >> w )",
        "if ( x == \" 6 \" )"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘return’"
    },
    {
      "mod_line": [
        11,
        1,
        8
      ],
      "mod_code": [
        "int * y = gcd ( x , 6 ) ;",
        "return gcd ( int a , int b )",
        "if ( x == \" 6 \" )"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘return’"
    },
    {
      "mod_line": [
        11,
        5
      ],
      "mod_code": [
        "int * y = gcd ( x , 6 ) ;",
        "while ( cin >> y >> w )"
      ],
      "err_line": 7,
      "err_msg": "‘x’ was not declared in this scope"
    },
    {
      "mod_line": [
        11,
        5,
        8
      ],
      "mod_code": [
        "int * y = gcd ( x , 6 ) ;",
        "while ( cin >> y >> w )",
        "if ( x == \" 6 \" )"
      ],
      "err_line": 7,
      "err_msg": "‘x’ was not declared in this scope"
    },
    {
      "mod_line": [
        11,
        8
      ],
      "mod_code": [
        "int * y = gcd ( x , 6 ) ;",
        "if ( x == \" 6 \" )"
      ],
      "err_line": 8,
      "err_msg": "ISO C++ forbids comparison between pointer and integer [-fpermissive]"
    },
    {
      "mod_line": [
        1,
        5
      ],
      "mod_code": [
        "return gcd ( int a , int b )",
        "while ( cin >> y >> w )"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘return’"
    },
    {
      "mod_line": [
        1,
        5,
        8
      ],
      "mod_code": [
        "return gcd ( int a , int b )",
        "while ( cin >> y >> w )",
        "if ( x == \" 6 \" )"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘return’"
    },
    {
      "mod_line": [
        1,
        8
      ],
      "mod_code": [
        "return gcd ( int a , int b )",
        "if ( x == \" 6 \" )"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘return’"
    },
    {
      "mod_line": [
        5,
        8
      ],
      "mod_code": [
        "while ( cin >> y >> w )",
        "if ( x == \" 6 \" )"
      ],
      "err_line": 7,
      "err_msg": "‘x’ was not declared in this scope"
    }
  ]
}