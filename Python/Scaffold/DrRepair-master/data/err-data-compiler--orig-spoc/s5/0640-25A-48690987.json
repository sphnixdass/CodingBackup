{
  "meta": {
    "index": 640,
    "hitid": "3R15W654VDN6WUTZXVVA4I6803NLQQ",
    "workerid": "AIWEXPJAU66D9",
    "probid": "25A",
    "subid": "48690987"
  },
  "lines": [
    {
      "line": 0,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 1,
      "text": "let n , i , j , arr , o , odd , even and e are integers , with o and e = 0",
      "code": "int n , i , j , arr , o = 0 , odd , even , e = 0 ;",
      "indent": 1
    },
    {
      "line": 2,
      "text": "read n",
      "code": "cin >> n ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "for i = 0 to n exclusive",
      "code": "for ( i = 0 ; i < n ; i ++ )",
      "indent": 1
    },
    {
      "line": 4,
      "text": "read arr",
      "code": "cin >> arr ;",
      "indent": 2
    },
    {
      "line": 5,
      "text": "if arr is even",
      "code": "if ( arr % 2 == 0 )",
      "indent": 2
    },
    {
      "line": 6,
      "text": "increase e by one",
      "code": "e ++ ;",
      "indent": 3
    },
    {
      "line": 7,
      "text": "even = i + 1",
      "code": "even = i + 1 ;",
      "indent": 3
    },
    {
      "line": 8,
      "text": "else",
      "code": "else",
      "indent": 2
    },
    {
      "line": 9,
      "text": "increase o",
      "code": "o ++ ;",
      "indent": 3
    },
    {
      "line": 10,
      "text": "odd = i + 1",
      "code": "odd = i + 1 ;",
      "indent": 3
    },
    {
      "line": 11,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 12,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 13,
      "text": "if o = 1",
      "code": "if ( o == 1 )",
      "indent": 1
    },
    {
      "line": 14,
      "text": "print odd and a new line",
      "code": "cout << odd << endl ;",
      "indent": 2
    },
    {
      "line": 15,
      "text": "else",
      "code": "else",
      "indent": 1
    },
    {
      "line": 16,
      "text": "print even and a new line",
      "code": "cout << even << endl ;",
      "indent": 2
    },
    {
      "line": 17,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 18,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        1
      ],
      "mod_code": [
        "int n , i , j , arr , o , odd = 0 , e = 0 ;"
      ],
      "err_line": 7,
      "err_msg": "‘even’ was not declared in this scope"
    },
    {
      "mod_line": [
        1
      ],
      "mod_code": [
        "int n , i , j , arr , o , odd = 0 , e , e ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int e’"
    },
    {
      "mod_line": [
        4
      ],
      "mod_code": [
        "gets ( arr ) ;"
      ],
      "err_line": 4,
      "err_msg": "invalid conversion from ‘int’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        1,
        14
      ],
      "mod_code": [
        "int n , i , j , arr , o , odd = 0 , e = 0 ;",
        "cout << \" odd \" << endl ;"
      ],
      "err_line": 7,
      "err_msg": "‘even’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        14,
        4
      ],
      "mod_code": [
        "int n , i , j , arr , o , odd = 0 , e = 0 ;",
        "cout << \" odd \" << endl ;",
        "gets ( arr ) ;"
      ],
      "err_line": 4,
      "err_msg": "invalid conversion from ‘int’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        1,
        14,
        4,
        13
      ],
      "mod_code": [
        "int n , i , j , arr , o , odd = 0 , e = 0 ;",
        "cout << \" odd \" << endl ;",
        "gets ( arr ) ;",
        "if ( ! o )"
      ],
      "err_line": 4,
      "err_msg": "invalid conversion from ‘int’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        1,
        14,
        13
      ],
      "mod_code": [
        "int n , i , j , arr , o , odd = 0 , e = 0 ;",
        "cout << \" odd \" << endl ;",
        "if ( ! o )"
      ],
      "err_line": 7,
      "err_msg": "‘even’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        4
      ],
      "mod_code": [
        "int n , i , j , arr , o , odd = 0 , e = 0 ;",
        "gets ( arr ) ;"
      ],
      "err_line": 4,
      "err_msg": "invalid conversion from ‘int’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        1,
        4,
        13
      ],
      "mod_code": [
        "int n , i , j , arr , o , odd = 0 , e = 0 ;",
        "gets ( arr ) ;",
        "if ( ! o )"
      ],
      "err_line": 4,
      "err_msg": "invalid conversion from ‘int’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        1,
        4,
        13,
        14
      ],
      "mod_code": [
        "int n , i , j , arr , o , odd = 0 , e = 0 ;",
        "gets ( arr ) ;",
        "if ( ! o )",
        "cout << \" YES\\n \" ;"
      ],
      "err_line": 4,
      "err_msg": "invalid conversion from ‘int’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        1,
        4,
        14
      ],
      "mod_code": [
        "int n , i , j , arr , o , odd = 0 , e = 0 ;",
        "gets ( arr ) ;",
        "cout << \" YES\\n \" ;"
      ],
      "err_line": 4,
      "err_msg": "invalid conversion from ‘int’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        1,
        13
      ],
      "mod_code": [
        "int n , i , j , arr , o , odd = 0 , e = 0 ;",
        "if ( ! o )"
      ],
      "err_line": 7,
      "err_msg": "‘even’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        13,
        14
      ],
      "mod_code": [
        "int n , i , j , arr , o , odd = 0 , e = 0 ;",
        "if ( ! o )",
        "cout << \" YES\\n \" ;"
      ],
      "err_line": 7,
      "err_msg": "‘even’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        14
      ],
      "mod_code": [
        "int n , i , j , arr , o , odd = 0 , e = 0 ;",
        "cout << \" YES\\n \" ;"
      ],
      "err_line": 7,
      "err_msg": "‘even’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        4
      ],
      "mod_code": [
        "cout << \" odd \" << endl ;",
        "gets ( arr ) ;"
      ],
      "err_line": 4,
      "err_msg": "invalid conversion from ‘int’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        14,
        4,
        13
      ],
      "mod_code": [
        "cout << \" odd \" << endl ;",
        "gets ( arr ) ;",
        "if ( ! o )"
      ],
      "err_line": 4,
      "err_msg": "invalid conversion from ‘int’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        14,
        4,
        13,
        1
      ],
      "mod_code": [
        "cout << \" odd \" << endl ;",
        "gets ( arr ) ;",
        "if ( ! o )",
        "int n , i , j , arr , o , odd = 0 , e , e ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int e’"
    },
    {
      "mod_line": [
        14,
        4,
        1
      ],
      "mod_code": [
        "cout << \" odd \" << endl ;",
        "gets ( arr ) ;",
        "int n , i , j , arr , o , odd = 0 , e , e ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int e’"
    },
    {
      "mod_line": [
        14,
        13,
        1
      ],
      "mod_code": [
        "cout << \" odd \" << endl ;",
        "if ( ! o )",
        "int n , i , j , arr , o , odd = 0 , e , e ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int e’"
    },
    {
      "mod_line": [
        14,
        1
      ],
      "mod_code": [
        "cout << \" odd \" << endl ;",
        "int n , i , j , arr , o , odd = 0 , e , e ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int e’"
    },
    {
      "mod_line": [
        4,
        13
      ],
      "mod_code": [
        "gets ( arr ) ;",
        "if ( ! o )"
      ],
      "err_line": 4,
      "err_msg": "invalid conversion from ‘int’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        4,
        13,
        14
      ],
      "mod_code": [
        "gets ( arr ) ;",
        "if ( ! o )",
        "cout << \" YES\\n \" ;"
      ],
      "err_line": 4,
      "err_msg": "invalid conversion from ‘int’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        4,
        13,
        14,
        1
      ],
      "mod_code": [
        "gets ( arr ) ;",
        "if ( ! o )",
        "cout << \" YES\\n \" ;",
        "int n , i , j , arr , o , odd = 0 , e , e ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int e’"
    },
    {
      "mod_line": [
        4,
        13,
        1
      ],
      "mod_code": [
        "gets ( arr ) ;",
        "if ( ! o )",
        "int n , i , j , arr , o , odd = 0 , e , e ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int e’"
    },
    {
      "mod_line": [
        4,
        14
      ],
      "mod_code": [
        "gets ( arr ) ;",
        "cout << \" YES\\n \" ;"
      ],
      "err_line": 4,
      "err_msg": "invalid conversion from ‘int’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        4,
        14,
        1
      ],
      "mod_code": [
        "gets ( arr ) ;",
        "cout << \" YES\\n \" ;",
        "int n , i , j , arr , o , odd = 0 , e , e ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int e’"
    },
    {
      "mod_line": [
        4,
        1
      ],
      "mod_code": [
        "gets ( arr ) ;",
        "int n , i , j , arr , o , odd = 0 , e , e ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int e’"
    },
    {
      "mod_line": [
        13,
        14,
        1
      ],
      "mod_code": [
        "if ( ! o )",
        "cout << \" YES\\n \" ;",
        "int n , i , j , arr , o , odd = 0 , e , e ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int e’"
    },
    {
      "mod_line": [
        13,
        1
      ],
      "mod_code": [
        "if ( ! o )",
        "int n , i , j , arr , o , odd = 0 , e , e ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int e’"
    },
    {
      "mod_line": [
        14,
        1
      ],
      "mod_code": [
        "cout << \" YES\\n \" ;",
        "int n , i , j , arr , o , odd = 0 , e , e ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int e’"
    }
  ]
}