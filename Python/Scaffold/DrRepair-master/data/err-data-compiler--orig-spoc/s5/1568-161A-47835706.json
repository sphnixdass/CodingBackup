{
  "meta": {
    "index": 1568,
    "hitid": "31GN6YMHLPMYK4KBTDRH8T2PH0LSWT",
    "workerid": "A24WRPQYGMQLGF",
    "probid": "161A",
    "subid": "47835706"
  },
  "lines": [
    {
      "line": 0,
      "text": "soldier = integer array of size 100001",
      "code": "int soldier [ 100001 ] ;",
      "indent": 0
    },
    {
      "line": 1,
      "text": "armor = integer array of size 100001",
      "code": "int armor [ 100001 ] ;",
      "indent": 0
    },
    {
      "line": 2,
      "text": "ans1 = integer vector",
      "code": "vector < int > ans1 ;",
      "indent": 0
    },
    {
      "line": 3,
      "text": "ans2 = integer vector",
      "code": "vector < int > ans2 ;",
      "indent": 0
    },
    {
      "line": 4,
      "text": "n , m , x , y = integer , s = integer = 0 , a = integer = 0",
      "code": "int n , m , x , y , s = 0 , a = 0 ;",
      "indent": 0
    },
    {
      "line": 5,
      "text": "in function f with arguments integer a and integer b that returns an integer",
      "code": "int f ( int a , int b )",
      "indent": 0
    },
    {
      "line": 6,
      "text": "if a < b",
      "code": "if ( a < b )",
      "indent": 1
    },
    {
      "line": 7,
      "text": "if a + y > = b , then return 0",
      "code": "if ( a + y >= b ) { return 0 ; }",
      "indent": 2
    },
    {
      "line": 8,
      "text": "if a + y < b , then return 0",
      "code": "if ( a + y < b ) { return 1 ; }",
      "indent": 2
    },
    {
      "line": 9,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 10,
      "text": "if a > b",
      "code": "if ( a > b )",
      "indent": 1
    },
    {
      "line": 11,
      "text": "if a - x < = b , then return 0",
      "code": "if ( a - x <= b ) { return 0 ; }",
      "indent": 2
    },
    {
      "line": 12,
      "text": "if a - x > b , then return 2",
      "code": "if ( a - x > b ) { return 2 ; }",
      "indent": 2
    },
    {
      "line": 13,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 14,
      "text": "if a is b , then return 0",
      "code": "if ( a == b ) { return 0 ; }",
      "indent": 1
    },
    {
      "line": 15,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    },
    {
      "line": 16,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 17,
      "text": "read n , m , x , y",
      "code": "cin >> n >> m >> x >> y ;",
      "indent": 1
    },
    {
      "line": 18,
      "text": "for i = 0 to n exclusive read soldier [ i ]",
      "code": "for ( int i = 0 ; i < n ; i ++ ) { cin >> soldier [ i ] ; }",
      "indent": 1
    },
    {
      "line": 19,
      "text": "for i = 0 to m exclusive read armor [ i ]",
      "code": "for ( int i = 0 ; i < m ; i ++ ) { cin >> armor [ i ] ; }",
      "indent": 1
    },
    {
      "line": 20,
      "text": "while s is not n and a is not m",
      "code": "while ( s != n && a != m )",
      "indent": 1
    },
    {
      "line": 21,
      "text": "if the result of callingf with arguments soldier [ s ] and armor [ a ] is 0",
      "code": "if ( f ( soldier [ s ] , armor [ a ] ) == 0 )",
      "indent": 2
    },
    {
      "line": 22,
      "text": "push back the values of ans1 and insert a new value at the end of s + 1",
      "code": "ans1 . push_back ( s + 1 ) ;",
      "indent": 3
    },
    {
      "line": 23,
      "text": "push back the values of ans2 and insert a new value at the end of a + 1",
      "code": "ans2 . push_back ( a + 1 ) ;",
      "indent": 3
    },
    {
      "line": 24,
      "text": "increase s by 1",
      "code": "s ++ ;",
      "indent": 3
    },
    {
      "line": 25,
      "text": "increase a by 1",
      "code": "a ++ ;",
      "indent": 3
    },
    {
      "line": 26,
      "text": "else if the result of f with arguments soldier [ s ] and armor [ a ] is 2",
      "code": "else if ( f ( soldier [ s ] , armor [ a ] ) == 2 )",
      "indent": 2
    },
    {
      "line": 27,
      "text": "increase a by 1",
      "code": "a ++ ;",
      "indent": 3
    },
    {
      "line": 28,
      "text": "else if the result of f with arguments soldier [ s ] and armor [ a ] is 1",
      "code": "else if ( f ( soldier [ s ] , armor [ a ] ) == 1 )",
      "indent": 2
    },
    {
      "line": 29,
      "text": "increase s by 1",
      "code": "s ++ ;",
      "indent": 3
    },
    {
      "line": 30,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 31,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 32,
      "text": "print the size of ans1",
      "code": "cout << ans1 . size ( ) << endl ;",
      "indent": 1
    },
    {
      "line": 33,
      "text": "for i = 0 to the size of ans1 inclusive , print ans1 [ i ] ans2 [ i ]",
      "code": "for ( int i = 0 ; i < ans1 . size ( ) ; i ++ ) { cout << ans1 [ i ] << \" \" << ans2 [ i ] << endl ; }",
      "indent": 1
    },
    {
      "line": 34,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 35,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        4
      ],
      "mod_code": [
        "int n , m , x = 0 , y = 0 , y = 0 ;"
      ],
      "err_line": 4,
      "err_msg": "redefinition of ‘int y’"
    },
    {
      "mod_line": [
        21
      ],
      "mod_code": [
        "if ( callingf ( soldier [ s ] ) && armor [ a ] == 0 )"
      ],
      "err_line": 21,
      "err_msg": "‘callingf’ was not declared in this scope"
    },
    {
      "mod_line": [
        22
      ],
      "mod_code": [
        "s . push_back ( a ) ;"
      ],
      "err_line": 22,
      "err_msg": "request for member ‘push_back’ in ‘s’, which is of non-class type ‘int’"
    },
    {
      "mod_line": [
        26
      ],
      "mod_code": [
        "else if ( f ( soldier [ s ] ) && armor [ a ] == 2 )"
      ],
      "err_line": 26,
      "err_msg": "too few arguments to function ‘int f(int, int)’"
    },
    {
      "mod_line": [
        28
      ],
      "mod_code": [
        "else if ( f ( soldier [ s ] ) && armor [ a ] == 1 )"
      ],
      "err_line": 28,
      "err_msg": "too few arguments to function ‘int f(int, int)’"
    },
    {
      "mod_line": [
        33
      ],
      "mod_code": [
        "for ( int i = 0 ; i < ans1 . size ( ) ; i ++ ) { cout << ans1 [ i ] [ i ] ; }"
      ],
      "err_line": 33,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        4
      ],
      "mod_code": [
        "int n , m , x , y = 0 , a , y = 0 ;"
      ],
      "err_line": 4,
      "err_msg": "redefinition of ‘int y’"
    },
    {
      "mod_line": [
        21
      ],
      "mod_code": [
        "if ( callingf ( soldier [ s ] ) && ! armor [ a ] )"
      ],
      "err_line": 21,
      "err_msg": "‘callingf’ was not declared in this scope"
    },
    {
      "mod_line": [
        22
      ],
      "mod_code": [
        "s . push_back ( 1 ) ;"
      ],
      "err_line": 22,
      "err_msg": "request for member ‘push_back’ in ‘s’, which is of non-class type ‘int’"
    },
    {
      "mod_line": [
        23
      ],
      "mod_code": [
        "a . push_back ( a ) ;"
      ],
      "err_line": 23,
      "err_msg": "request for member ‘push_back’ in ‘a’, which is of non-class type ‘int’"
    },
    {
      "mod_line": [
        26
      ],
      "mod_code": [
        "else if ( f ( soldier [ s ] ) && ! armor [ a ] )"
      ],
      "err_line": 26,
      "err_msg": "too few arguments to function ‘int f(int, int)’"
    },
    {
      "mod_line": [
        28
      ],
      "mod_code": [
        "else if ( f ( soldier [ s ] ) && ! armor [ a ] )"
      ],
      "err_line": 28,
      "err_msg": "too few arguments to function ‘int f(int, int)’"
    },
    {
      "mod_line": [
        33
      ],
      "mod_code": [
        "for ( int i = 0 ; i < ans1 . size ( ) ; i ++ ) cout << ans1 [ i ] [ i ] ;"
      ],
      "err_line": 33,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        4,
        8
      ],
      "mod_code": [
        "int n , m , x = 0 , y = 0 , y = 0 ;",
        "if ( a + y < b ) return 0 ;"
      ],
      "err_line": 4,
      "err_msg": "redefinition of ‘int y’"
    },
    {
      "mod_line": [
        4,
        8,
        21
      ],
      "mod_code": [
        "int n , m , x = 0 , y = 0 , y = 0 ;",
        "if ( a + y < b ) return 0 ;",
        "if ( callingf ( soldier [ s ] ) && armor [ a ] == 0 )"
      ],
      "err_line": 4,
      "err_msg": "redefinition of ‘int y’"
    },
    {
      "mod_line": [
        4,
        8,
        21,
        22
      ],
      "mod_code": [
        "int n , m , x = 0 , y = 0 , y = 0 ;",
        "if ( a + y < b ) return 0 ;",
        "if ( callingf ( soldier [ s ] ) && armor [ a ] == 0 )",
        "s . push_back ( a ) ;"
      ],
      "err_line": 4,
      "err_msg": "redefinition of ‘int y’"
    },
    {
      "mod_line": [
        4,
        8,
        21,
        23
      ],
      "mod_code": [
        "int n , m , x = 0 , y = 0 , y = 0 ;",
        "if ( a + y < b ) return 0 ;",
        "if ( callingf ( soldier [ s ] ) && armor [ a ] == 0 )",
        "ans2 . push_back ( a ) ;"
      ],
      "err_line": 4,
      "err_msg": "redefinition of ‘int y’"
    },
    {
      "mod_line": [
        4,
        8,
        21,
        26
      ],
      "mod_code": [
        "int n , m , x = 0 , y = 0 , y = 0 ;",
        "if ( a + y < b ) return 0 ;",
        "if ( callingf ( soldier [ s ] ) && armor [ a ] == 0 )",
        "else if ( f ( soldier [ s ] ) && armor [ a ] == 2 )"
      ],
      "err_line": 4,
      "err_msg": "redefinition of ‘int y’"
    },
    {
      "mod_line": [
        4,
        8,
        21,
        28
      ],
      "mod_code": [
        "int n , m , x = 0 , y = 0 , y = 0 ;",
        "if ( a + y < b ) return 0 ;",
        "if ( callingf ( soldier [ s ] ) && armor [ a ] == 0 )",
        "else if ( f ( soldier [ s ] ) && armor [ a ] == 1 )"
      ],
      "err_line": 4,
      "err_msg": "redefinition of ‘int y’"
    },
    {
      "mod_line": [
        4,
        8,
        21,
        33
      ],
      "mod_code": [
        "int n , m , x = 0 , y = 0 , y = 0 ;",
        "if ( a + y < b ) return 0 ;",
        "if ( callingf ( soldier [ s ] ) && armor [ a ] == 0 )",
        "for ( int i = 0 ; i < ans1 . size ( ) ; i ++ ) { cout << ans1 [ i ] [ i ] ; }"
      ],
      "err_line": 4,
      "err_msg": "redefinition of ‘int y’"
    },
    {
      "mod_line": [
        4,
        8,
        22
      ],
      "mod_code": [
        "int n , m , x = 0 , y = 0 , y = 0 ;",
        "if ( a + y < b ) return 0 ;",
        "s . push_back ( a ) ;"
      ],
      "err_line": 4,
      "err_msg": "redefinition of ‘int y’"
    },
    {
      "mod_line": [
        4,
        8,
        22,
        23
      ],
      "mod_code": [
        "int n , m , x = 0 , y = 0 , y = 0 ;",
        "if ( a + y < b ) return 0 ;",
        "s . push_back ( a ) ;",
        "ans2 . push_back ( a ) ;"
      ],
      "err_line": 4,
      "err_msg": "redefinition of ‘int y’"
    },
    {
      "mod_line": [
        4,
        8,
        22,
        26
      ],
      "mod_code": [
        "int n , m , x = 0 , y = 0 , y = 0 ;",
        "if ( a + y < b ) return 0 ;",
        "s . push_back ( a ) ;",
        "else if ( f ( soldier [ s ] ) && armor [ a ] == 2 )"
      ],
      "err_line": 4,
      "err_msg": "redefinition of ‘int y’"
    },
    {
      "mod_line": [
        4,
        8,
        22,
        28
      ],
      "mod_code": [
        "int n , m , x = 0 , y = 0 , y = 0 ;",
        "if ( a + y < b ) return 0 ;",
        "s . push_back ( a ) ;",
        "else if ( f ( soldier [ s ] ) && armor [ a ] == 1 )"
      ],
      "err_line": 4,
      "err_msg": "redefinition of ‘int y’"
    },
    {
      "mod_line": [
        4,
        8,
        22,
        33
      ],
      "mod_code": [
        "int n , m , x = 0 , y = 0 , y = 0 ;",
        "if ( a + y < b ) return 0 ;",
        "s . push_back ( a ) ;",
        "for ( int i = 0 ; i < ans1 . size ( ) ; i ++ ) { cout << ans1 [ i ] [ i ] ; }"
      ],
      "err_line": 4,
      "err_msg": "redefinition of ‘int y’"
    },
    {
      "mod_line": [
        4,
        8,
        23
      ],
      "mod_code": [
        "int n , m , x = 0 , y = 0 , y = 0 ;",
        "if ( a + y < b ) return 0 ;",
        "ans2 . push_back ( a ) ;"
      ],
      "err_line": 4,
      "err_msg": "redefinition of ‘int y’"
    },
    {
      "mod_line": [
        4,
        8,
        23,
        26
      ],
      "mod_code": [
        "int n , m , x = 0 , y = 0 , y = 0 ;",
        "if ( a + y < b ) return 0 ;",
        "ans2 . push_back ( a ) ;",
        "else if ( f ( soldier [ s ] ) && armor [ a ] == 2 )"
      ],
      "err_line": 4,
      "err_msg": "redefinition of ‘int y’"
    },
    {
      "mod_line": [
        4,
        8,
        23,
        28
      ],
      "mod_code": [
        "int n , m , x = 0 , y = 0 , y = 0 ;",
        "if ( a + y < b ) return 0 ;",
        "ans2 . push_back ( a ) ;",
        "else if ( f ( soldier [ s ] ) && armor [ a ] == 1 )"
      ],
      "err_line": 4,
      "err_msg": "redefinition of ‘int y’"
    },
    {
      "mod_line": [
        4,
        8,
        23,
        33
      ],
      "mod_code": [
        "int n , m , x = 0 , y = 0 , y = 0 ;",
        "if ( a + y < b ) return 0 ;",
        "ans2 . push_back ( a ) ;",
        "for ( int i = 0 ; i < ans1 . size ( ) ; i ++ ) { cout << ans1 [ i ] [ i ] ; }"
      ],
      "err_line": 4,
      "err_msg": "redefinition of ‘int y’"
    },
    {
      "mod_line": [
        4,
        8,
        26
      ],
      "mod_code": [
        "int n , m , x = 0 , y = 0 , y = 0 ;",
        "if ( a + y < b ) return 0 ;",
        "else if ( f ( soldier [ s ] ) && armor [ a ] == 2 )"
      ],
      "err_line": 4,
      "err_msg": "redefinition of ‘int y’"
    },
    {
      "mod_line": [
        4,
        8,
        26,
        28
      ],
      "mod_code": [
        "int n , m , x = 0 , y = 0 , y = 0 ;",
        "if ( a + y < b ) return 0 ;",
        "else if ( f ( soldier [ s ] ) && armor [ a ] == 2 )",
        "else if ( f ( soldier [ s ] ) && armor [ a ] == 1 )"
      ],
      "err_line": 4,
      "err_msg": "redefinition of ‘int y’"
    },
    {
      "mod_line": [
        4,
        8,
        26,
        33
      ],
      "mod_code": [
        "int n , m , x = 0 , y = 0 , y = 0 ;",
        "if ( a + y < b ) return 0 ;",
        "else if ( f ( soldier [ s ] ) && armor [ a ] == 2 )",
        "for ( int i = 0 ; i < ans1 . size ( ) ; i ++ ) { cout << ans1 [ i ] [ i ] ; }"
      ],
      "err_line": 4,
      "err_msg": "redefinition of ‘int y’"
    },
    {
      "mod_line": [
        4,
        8,
        28
      ],
      "mod_code": [
        "int n , m , x = 0 , y = 0 , y = 0 ;",
        "if ( a + y < b ) return 0 ;",
        "else if ( f ( soldier [ s ] ) && armor [ a ] == 1 )"
      ],
      "err_line": 4,
      "err_msg": "redefinition of ‘int y’"
    },
    {
      "mod_line": [
        4,
        8,
        28,
        33
      ],
      "mod_code": [
        "int n , m , x = 0 , y = 0 , y = 0 ;",
        "if ( a + y < b ) return 0 ;",
        "else if ( f ( soldier [ s ] ) && armor [ a ] == 1 )",
        "for ( int i = 0 ; i < ans1 . size ( ) ; i ++ ) { cout << ans1 [ i ] [ i ] ; }"
      ],
      "err_line": 4,
      "err_msg": "redefinition of ‘int y’"
    },
    {
      "mod_line": [
        4,
        8,
        33
      ],
      "mod_code": [
        "int n , m , x = 0 , y = 0 , y = 0 ;",
        "if ( a + y < b ) return 0 ;",
        "for ( int i = 0 ; i < ans1 . size ( ) ; i ++ ) { cout << ans1 [ i ] [ i ] ; }"
      ],
      "err_line": 4,
      "err_msg": "redefinition of ‘int y’"
    },
    {
      "mod_line": [
        4,
        21
      ],
      "mod_code": [
        "int n , m , x = 0 , y = 0 , y = 0 ;",
        "if ( callingf ( soldier [ s ] ) && armor [ a ] == 0 )"
      ],
      "err_line": 4,
      "err_msg": "redefinition of ‘int y’"
    },
    {
      "mod_line": [
        4,
        21,
        22
      ],
      "mod_code": [
        "int n , m , x = 0 , y = 0 , y = 0 ;",
        "if ( callingf ( soldier [ s ] ) && armor [ a ] == 0 )",
        "s . push_back ( a ) ;"
      ],
      "err_line": 4,
      "err_msg": "redefinition of ‘int y’"
    },
    {
      "mod_line": [
        4,
        21,
        22,
        23
      ],
      "mod_code": [
        "int n , m , x = 0 , y = 0 , y = 0 ;",
        "if ( callingf ( soldier [ s ] ) && armor [ a ] == 0 )",
        "s . push_back ( a ) ;",
        "ans2 . push_back ( a ) ;"
      ],
      "err_line": 4,
      "err_msg": "redefinition of ‘int y’"
    },
    {
      "mod_line": [
        4,
        21,
        22,
        26
      ],
      "mod_code": [
        "int n , m , x = 0 , y = 0 , y = 0 ;",
        "if ( callingf ( soldier [ s ] ) && armor [ a ] == 0 )",
        "s . push_back ( a ) ;",
        "else if ( f ( soldier [ s ] ) && armor [ a ] == 2 )"
      ],
      "err_line": 4,
      "err_msg": "redefinition of ‘int y’"
    },
    {
      "mod_line": [
        4,
        21,
        22,
        28
      ],
      "mod_code": [
        "int n , m , x = 0 , y = 0 , y = 0 ;",
        "if ( callingf ( soldier [ s ] ) && armor [ a ] == 0 )",
        "s . push_back ( a ) ;",
        "else if ( f ( soldier [ s ] ) && armor [ a ] == 1 )"
      ],
      "err_line": 4,
      "err_msg": "redefinition of ‘int y’"
    },
    {
      "mod_line": [
        4,
        21,
        22,
        33
      ],
      "mod_code": [
        "int n , m , x = 0 , y = 0 , y = 0 ;",
        "if ( callingf ( soldier [ s ] ) && armor [ a ] == 0 )",
        "s . push_back ( a ) ;",
        "for ( int i = 0 ; i < ans1 . size ( ) ; i ++ ) { cout << ans1 [ i ] [ i ] ; }"
      ],
      "err_line": 4,
      "err_msg": "redefinition of ‘int y’"
    },
    {
      "mod_line": [
        4,
        21,
        23
      ],
      "mod_code": [
        "int n , m , x = 0 , y = 0 , y = 0 ;",
        "if ( callingf ( soldier [ s ] ) && armor [ a ] == 0 )",
        "ans2 . push_back ( a ) ;"
      ],
      "err_line": 4,
      "err_msg": "redefinition of ‘int y’"
    },
    {
      "mod_line": [
        4,
        21,
        23,
        26
      ],
      "mod_code": [
        "int n , m , x = 0 , y = 0 , y = 0 ;",
        "if ( callingf ( soldier [ s ] ) && armor [ a ] == 0 )",
        "ans2 . push_back ( a ) ;",
        "else if ( f ( soldier [ s ] ) && armor [ a ] == 2 )"
      ],
      "err_line": 4,
      "err_msg": "redefinition of ‘int y’"
    },
    {
      "mod_line": [
        4,
        21,
        23,
        28
      ],
      "mod_code": [
        "int n , m , x = 0 , y = 0 , y = 0 ;",
        "if ( callingf ( soldier [ s ] ) && armor [ a ] == 0 )",
        "ans2 . push_back ( a ) ;",
        "else if ( f ( soldier [ s ] ) && armor [ a ] == 1 )"
      ],
      "err_line": 4,
      "err_msg": "redefinition of ‘int y’"
    },
    {
      "mod_line": [
        4,
        21,
        23,
        33
      ],
      "mod_code": [
        "int n , m , x = 0 , y = 0 , y = 0 ;",
        "if ( callingf ( soldier [ s ] ) && armor [ a ] == 0 )",
        "ans2 . push_back ( a ) ;",
        "for ( int i = 0 ; i < ans1 . size ( ) ; i ++ ) { cout << ans1 [ i ] [ i ] ; }"
      ],
      "err_line": 4,
      "err_msg": "redefinition of ‘int y’"
    },
    {
      "mod_line": [
        4,
        21,
        26
      ],
      "mod_code": [
        "int n , m , x = 0 , y = 0 , y = 0 ;",
        "if ( callingf ( soldier [ s ] ) && armor [ a ] == 0 )",
        "else if ( f ( soldier [ s ] ) && armor [ a ] == 2 )"
      ],
      "err_line": 4,
      "err_msg": "redefinition of ‘int y’"
    },
    {
      "mod_line": [
        4,
        21,
        26,
        28
      ],
      "mod_code": [
        "int n , m , x = 0 , y = 0 , y = 0 ;",
        "if ( callingf ( soldier [ s ] ) && armor [ a ] == 0 )",
        "else if ( f ( soldier [ s ] ) && armor [ a ] == 2 )",
        "else if ( f ( soldier [ s ] ) && armor [ a ] == 1 )"
      ],
      "err_line": 4,
      "err_msg": "redefinition of ‘int y’"
    },
    {
      "mod_line": [
        4,
        21,
        26,
        33
      ],
      "mod_code": [
        "int n , m , x = 0 , y = 0 , y = 0 ;",
        "if ( callingf ( soldier [ s ] ) && armor [ a ] == 0 )",
        "else if ( f ( soldier [ s ] ) && armor [ a ] == 2 )",
        "for ( int i = 0 ; i < ans1 . size ( ) ; i ++ ) { cout << ans1 [ i ] [ i ] ; }"
      ],
      "err_line": 4,
      "err_msg": "redefinition of ‘int y’"
    },
    {
      "mod_line": [
        4,
        21,
        28
      ],
      "mod_code": [
        "int n , m , x = 0 , y = 0 , y = 0 ;",
        "if ( callingf ( soldier [ s ] ) && armor [ a ] == 0 )",
        "else if ( f ( soldier [ s ] ) && armor [ a ] == 1 )"
      ],
      "err_line": 4,
      "err_msg": "redefinition of ‘int y’"
    },
    {
      "mod_line": [
        4,
        21,
        28,
        33
      ],
      "mod_code": [
        "int n , m , x = 0 , y = 0 , y = 0 ;",
        "if ( callingf ( soldier [ s ] ) && armor [ a ] == 0 )",
        "else if ( f ( soldier [ s ] ) && armor [ a ] == 1 )",
        "for ( int i = 0 ; i < ans1 . size ( ) ; i ++ ) { cout << ans1 [ i ] [ i ] ; }"
      ],
      "err_line": 4,
      "err_msg": "redefinition of ‘int y’"
    },
    {
      "mod_line": [
        4,
        21,
        33
      ],
      "mod_code": [
        "int n , m , x = 0 , y = 0 , y = 0 ;",
        "if ( callingf ( soldier [ s ] ) && armor [ a ] == 0 )",
        "for ( int i = 0 ; i < ans1 . size ( ) ; i ++ ) { cout << ans1 [ i ] [ i ] ; }"
      ],
      "err_line": 4,
      "err_msg": "redefinition of ‘int y’"
    },
    {
      "mod_line": [
        4,
        22
      ],
      "mod_code": [
        "int n , m , x = 0 , y = 0 , y = 0 ;",
        "s . push_back ( a ) ;"
      ],
      "err_line": 4,
      "err_msg": "redefinition of ‘int y’"
    },
    {
      "mod_line": [
        4,
        22,
        23
      ],
      "mod_code": [
        "int n , m , x = 0 , y = 0 , y = 0 ;",
        "s . push_back ( a ) ;",
        "ans2 . push_back ( a ) ;"
      ],
      "err_line": 4,
      "err_msg": "redefinition of ‘int y’"
    },
    {
      "mod_line": [
        4,
        22,
        23,
        26
      ],
      "mod_code": [
        "int n , m , x = 0 , y = 0 , y = 0 ;",
        "s . push_back ( a ) ;",
        "ans2 . push_back ( a ) ;",
        "else if ( f ( soldier [ s ] ) && armor [ a ] == 2 )"
      ],
      "err_line": 4,
      "err_msg": "redefinition of ‘int y’"
    },
    {
      "mod_line": [
        4,
        22,
        23,
        28
      ],
      "mod_code": [
        "int n , m , x = 0 , y = 0 , y = 0 ;",
        "s . push_back ( a ) ;",
        "ans2 . push_back ( a ) ;",
        "else if ( f ( soldier [ s ] ) && armor [ a ] == 1 )"
      ],
      "err_line": 4,
      "err_msg": "redefinition of ‘int y’"
    },
    {
      "mod_line": [
        4,
        22,
        23,
        33
      ],
      "mod_code": [
        "int n , m , x = 0 , y = 0 , y = 0 ;",
        "s . push_back ( a ) ;",
        "ans2 . push_back ( a ) ;",
        "for ( int i = 0 ; i < ans1 . size ( ) ; i ++ ) { cout << ans1 [ i ] [ i ] ; }"
      ],
      "err_line": 4,
      "err_msg": "redefinition of ‘int y’"
    },
    {
      "mod_line": [
        4,
        22,
        26
      ],
      "mod_code": [
        "int n , m , x = 0 , y = 0 , y = 0 ;",
        "s . push_back ( a ) ;",
        "else if ( f ( soldier [ s ] ) && armor [ a ] == 2 )"
      ],
      "err_line": 4,
      "err_msg": "redefinition of ‘int y’"
    },
    {
      "mod_line": [
        4,
        22,
        26,
        28
      ],
      "mod_code": [
        "int n , m , x = 0 , y = 0 , y = 0 ;",
        "s . push_back ( a ) ;",
        "else if ( f ( soldier [ s ] ) && armor [ a ] == 2 )",
        "else if ( f ( soldier [ s ] ) && armor [ a ] == 1 )"
      ],
      "err_line": 4,
      "err_msg": "redefinition of ‘int y’"
    },
    {
      "mod_line": [
        4,
        22,
        26,
        33
      ],
      "mod_code": [
        "int n , m , x = 0 , y = 0 , y = 0 ;",
        "s . push_back ( a ) ;",
        "else if ( f ( soldier [ s ] ) && armor [ a ] == 2 )",
        "for ( int i = 0 ; i < ans1 . size ( ) ; i ++ ) { cout << ans1 [ i ] [ i ] ; }"
      ],
      "err_line": 4,
      "err_msg": "redefinition of ‘int y’"
    },
    {
      "mod_line": [
        4,
        22,
        28
      ],
      "mod_code": [
        "int n , m , x = 0 , y = 0 , y = 0 ;",
        "s . push_back ( a ) ;",
        "else if ( f ( soldier [ s ] ) && armor [ a ] == 1 )"
      ],
      "err_line": 4,
      "err_msg": "redefinition of ‘int y’"
    },
    {
      "mod_line": [
        4,
        22,
        28,
        33
      ],
      "mod_code": [
        "int n , m , x = 0 , y = 0 , y = 0 ;",
        "s . push_back ( a ) ;",
        "else if ( f ( soldier [ s ] ) && armor [ a ] == 1 )",
        "for ( int i = 0 ; i < ans1 . size ( ) ; i ++ ) { cout << ans1 [ i ] [ i ] ; }"
      ],
      "err_line": 4,
      "err_msg": "redefinition of ‘int y’"
    },
    {
      "mod_line": [
        4,
        22,
        33
      ],
      "mod_code": [
        "int n , m , x = 0 , y = 0 , y = 0 ;",
        "s . push_back ( a ) ;",
        "for ( int i = 0 ; i < ans1 . size ( ) ; i ++ ) { cout << ans1 [ i ] [ i ] ; }"
      ],
      "err_line": 4,
      "err_msg": "redefinition of ‘int y’"
    },
    {
      "mod_line": [
        4,
        23
      ],
      "mod_code": [
        "int n , m , x = 0 , y = 0 , y = 0 ;",
        "ans2 . push_back ( a ) ;"
      ],
      "err_line": 4,
      "err_msg": "redefinition of ‘int y’"
    },
    {
      "mod_line": [
        4,
        23,
        26
      ],
      "mod_code": [
        "int n , m , x = 0 , y = 0 , y = 0 ;",
        "ans2 . push_back ( a ) ;",
        "else if ( f ( soldier [ s ] ) && armor [ a ] == 2 )"
      ],
      "err_line": 4,
      "err_msg": "redefinition of ‘int y’"
    },
    {
      "mod_line": [
        4,
        23,
        26,
        28
      ],
      "mod_code": [
        "int n , m , x = 0 , y = 0 , y = 0 ;",
        "ans2 . push_back ( a ) ;",
        "else if ( f ( soldier [ s ] ) && armor [ a ] == 2 )",
        "else if ( f ( soldier [ s ] ) && armor [ a ] == 1 )"
      ],
      "err_line": 4,
      "err_msg": "redefinition of ‘int y’"
    },
    {
      "mod_line": [
        4,
        23,
        26,
        33
      ],
      "mod_code": [
        "int n , m , x = 0 , y = 0 , y = 0 ;",
        "ans2 . push_back ( a ) ;",
        "else if ( f ( soldier [ s ] ) && armor [ a ] == 2 )",
        "for ( int i = 0 ; i < ans1 . size ( ) ; i ++ ) { cout << ans1 [ i ] [ i ] ; }"
      ],
      "err_line": 4,
      "err_msg": "redefinition of ‘int y’"
    },
    {
      "mod_line": [
        4,
        23,
        28
      ],
      "mod_code": [
        "int n , m , x = 0 , y = 0 , y = 0 ;",
        "ans2 . push_back ( a ) ;",
        "else if ( f ( soldier [ s ] ) && armor [ a ] == 1 )"
      ],
      "err_line": 4,
      "err_msg": "redefinition of ‘int y’"
    },
    {
      "mod_line": [
        4,
        23,
        28,
        33
      ],
      "mod_code": [
        "int n , m , x = 0 , y = 0 , y = 0 ;",
        "ans2 . push_back ( a ) ;",
        "else if ( f ( soldier [ s ] ) && armor [ a ] == 1 )",
        "for ( int i = 0 ; i < ans1 . size ( ) ; i ++ ) { cout << ans1 [ i ] [ i ] ; }"
      ],
      "err_line": 4,
      "err_msg": "redefinition of ‘int y’"
    },
    {
      "mod_line": [
        4,
        23,
        33
      ],
      "mod_code": [
        "int n , m , x = 0 , y = 0 , y = 0 ;",
        "ans2 . push_back ( a ) ;",
        "for ( int i = 0 ; i < ans1 . size ( ) ; i ++ ) { cout << ans1 [ i ] [ i ] ; }"
      ],
      "err_line": 4,
      "err_msg": "redefinition of ‘int y’"
    },
    {
      "mod_line": [
        4,
        26
      ],
      "mod_code": [
        "int n , m , x = 0 , y = 0 , y = 0 ;",
        "else if ( f ( soldier [ s ] ) && armor [ a ] == 2 )"
      ],
      "err_line": 4,
      "err_msg": "redefinition of ‘int y’"
    },
    {
      "mod_line": [
        4,
        26,
        28
      ],
      "mod_code": [
        "int n , m , x = 0 , y = 0 , y = 0 ;",
        "else if ( f ( soldier [ s ] ) && armor [ a ] == 2 )",
        "else if ( f ( soldier [ s ] ) && armor [ a ] == 1 )"
      ],
      "err_line": 4,
      "err_msg": "redefinition of ‘int y’"
    },
    {
      "mod_line": [
        4,
        26,
        28,
        33
      ],
      "mod_code": [
        "int n , m , x = 0 , y = 0 , y = 0 ;",
        "else if ( f ( soldier [ s ] ) && armor [ a ] == 2 )",
        "else if ( f ( soldier [ s ] ) && armor [ a ] == 1 )",
        "for ( int i = 0 ; i < ans1 . size ( ) ; i ++ ) { cout << ans1 [ i ] [ i ] ; }"
      ],
      "err_line": 4,
      "err_msg": "redefinition of ‘int y’"
    },
    {
      "mod_line": [
        4,
        26,
        33
      ],
      "mod_code": [
        "int n , m , x = 0 , y = 0 , y = 0 ;",
        "else if ( f ( soldier [ s ] ) && armor [ a ] == 2 )",
        "for ( int i = 0 ; i < ans1 . size ( ) ; i ++ ) { cout << ans1 [ i ] [ i ] ; }"
      ],
      "err_line": 4,
      "err_msg": "redefinition of ‘int y’"
    },
    {
      "mod_line": [
        4,
        28
      ],
      "mod_code": [
        "int n , m , x = 0 , y = 0 , y = 0 ;",
        "else if ( f ( soldier [ s ] ) && armor [ a ] == 1 )"
      ],
      "err_line": 4,
      "err_msg": "redefinition of ‘int y’"
    },
    {
      "mod_line": [
        4,
        28,
        33
      ],
      "mod_code": [
        "int n , m , x = 0 , y = 0 , y = 0 ;",
        "else if ( f ( soldier [ s ] ) && armor [ a ] == 1 )",
        "for ( int i = 0 ; i < ans1 . size ( ) ; i ++ ) { cout << ans1 [ i ] [ i ] ; }"
      ],
      "err_line": 4,
      "err_msg": "redefinition of ‘int y’"
    },
    {
      "mod_line": [
        4,
        33
      ],
      "mod_code": [
        "int n , m , x = 0 , y = 0 , y = 0 ;",
        "for ( int i = 0 ; i < ans1 . size ( ) ; i ++ ) { cout << ans1 [ i ] [ i ] ; }"
      ],
      "err_line": 4,
      "err_msg": "redefinition of ‘int y’"
    },
    {
      "mod_line": [
        8,
        21
      ],
      "mod_code": [
        "if ( a + y < b ) return 0 ;",
        "if ( callingf ( soldier [ s ] ) && armor [ a ] == 0 )"
      ],
      "err_line": 21,
      "err_msg": "‘callingf’ was not declared in this scope"
    },
    {
      "mod_line": [
        8,
        21,
        22
      ],
      "mod_code": [
        "if ( a + y < b ) return 0 ;",
        "if ( callingf ( soldier [ s ] ) && armor [ a ] == 0 )",
        "s . push_back ( a ) ;"
      ],
      "err_line": 21,
      "err_msg": "‘callingf’ was not declared in this scope"
    },
    {
      "mod_line": [
        8,
        21,
        22,
        23
      ],
      "mod_code": [
        "if ( a + y < b ) return 0 ;",
        "if ( callingf ( soldier [ s ] ) && armor [ a ] == 0 )",
        "s . push_back ( a ) ;",
        "ans2 . push_back ( a ) ;"
      ],
      "err_line": 21,
      "err_msg": "‘callingf’ was not declared in this scope"
    },
    {
      "mod_line": [
        8,
        21,
        22,
        26
      ],
      "mod_code": [
        "if ( a + y < b ) return 0 ;",
        "if ( callingf ( soldier [ s ] ) && armor [ a ] == 0 )",
        "s . push_back ( a ) ;",
        "else if ( f ( soldier [ s ] ) && armor [ a ] == 2 )"
      ],
      "err_line": 21,
      "err_msg": "‘callingf’ was not declared in this scope"
    },
    {
      "mod_line": [
        8,
        21,
        22,
        28
      ],
      "mod_code": [
        "if ( a + y < b ) return 0 ;",
        "if ( callingf ( soldier [ s ] ) && armor [ a ] == 0 )",
        "s . push_back ( a ) ;",
        "else if ( f ( soldier [ s ] ) && armor [ a ] == 1 )"
      ],
      "err_line": 21,
      "err_msg": "‘callingf’ was not declared in this scope"
    },
    {
      "mod_line": [
        8,
        21,
        22,
        33
      ],
      "mod_code": [
        "if ( a + y < b ) return 0 ;",
        "if ( callingf ( soldier [ s ] ) && armor [ a ] == 0 )",
        "s . push_back ( a ) ;",
        "for ( int i = 0 ; i < ans1 . size ( ) ; i ++ ) { cout << ans1 [ i ] [ i ] ; }"
      ],
      "err_line": 21,
      "err_msg": "‘callingf’ was not declared in this scope"
    },
    {
      "mod_line": [
        8,
        21,
        23
      ],
      "mod_code": [
        "if ( a + y < b ) return 0 ;",
        "if ( callingf ( soldier [ s ] ) && armor [ a ] == 0 )",
        "ans2 . push_back ( a ) ;"
      ],
      "err_line": 21,
      "err_msg": "‘callingf’ was not declared in this scope"
    },
    {
      "mod_line": [
        8,
        21,
        23,
        26
      ],
      "mod_code": [
        "if ( a + y < b ) return 0 ;",
        "if ( callingf ( soldier [ s ] ) && armor [ a ] == 0 )",
        "ans2 . push_back ( a ) ;",
        "else if ( f ( soldier [ s ] ) && armor [ a ] == 2 )"
      ],
      "err_line": 21,
      "err_msg": "‘callingf’ was not declared in this scope"
    },
    {
      "mod_line": [
        8,
        21,
        23,
        28
      ],
      "mod_code": [
        "if ( a + y < b ) return 0 ;",
        "if ( callingf ( soldier [ s ] ) && armor [ a ] == 0 )",
        "ans2 . push_back ( a ) ;",
        "else if ( f ( soldier [ s ] ) && armor [ a ] == 1 )"
      ],
      "err_line": 21,
      "err_msg": "‘callingf’ was not declared in this scope"
    },
    {
      "mod_line": [
        8,
        21,
        23,
        33
      ],
      "mod_code": [
        "if ( a + y < b ) return 0 ;",
        "if ( callingf ( soldier [ s ] ) && armor [ a ] == 0 )",
        "ans2 . push_back ( a ) ;",
        "for ( int i = 0 ; i < ans1 . size ( ) ; i ++ ) { cout << ans1 [ i ] [ i ] ; }"
      ],
      "err_line": 21,
      "err_msg": "‘callingf’ was not declared in this scope"
    },
    {
      "mod_line": [
        8,
        21,
        26
      ],
      "mod_code": [
        "if ( a + y < b ) return 0 ;",
        "if ( callingf ( soldier [ s ] ) && armor [ a ] == 0 )",
        "else if ( f ( soldier [ s ] ) && armor [ a ] == 2 )"
      ],
      "err_line": 21,
      "err_msg": "‘callingf’ was not declared in this scope"
    },
    {
      "mod_line": [
        8,
        21,
        26,
        28
      ],
      "mod_code": [
        "if ( a + y < b ) return 0 ;",
        "if ( callingf ( soldier [ s ] ) && armor [ a ] == 0 )",
        "else if ( f ( soldier [ s ] ) && armor [ a ] == 2 )",
        "else if ( f ( soldier [ s ] ) && armor [ a ] == 1 )"
      ],
      "err_line": 21,
      "err_msg": "‘callingf’ was not declared in this scope"
    },
    {
      "mod_line": [
        8,
        21,
        26,
        33
      ],
      "mod_code": [
        "if ( a + y < b ) return 0 ;",
        "if ( callingf ( soldier [ s ] ) && armor [ a ] == 0 )",
        "else if ( f ( soldier [ s ] ) && armor [ a ] == 2 )",
        "for ( int i = 0 ; i < ans1 . size ( ) ; i ++ ) { cout << ans1 [ i ] [ i ] ; }"
      ],
      "err_line": 21,
      "err_msg": "‘callingf’ was not declared in this scope"
    },
    {
      "mod_line": [
        8,
        21,
        28
      ],
      "mod_code": [
        "if ( a + y < b ) return 0 ;",
        "if ( callingf ( soldier [ s ] ) && armor [ a ] == 0 )",
        "else if ( f ( soldier [ s ] ) && armor [ a ] == 1 )"
      ],
      "err_line": 21,
      "err_msg": "‘callingf’ was not declared in this scope"
    },
    {
      "mod_line": [
        8,
        21,
        28,
        33
      ],
      "mod_code": [
        "if ( a + y < b ) return 0 ;",
        "if ( callingf ( soldier [ s ] ) && armor [ a ] == 0 )",
        "else if ( f ( soldier [ s ] ) && armor [ a ] == 1 )",
        "for ( int i = 0 ; i < ans1 . size ( ) ; i ++ ) { cout << ans1 [ i ] [ i ] ; }"
      ],
      "err_line": 21,
      "err_msg": "‘callingf’ was not declared in this scope"
    },
    {
      "mod_line": [
        8,
        21,
        33
      ],
      "mod_code": [
        "if ( a + y < b ) return 0 ;",
        "if ( callingf ( soldier [ s ] ) && armor [ a ] == 0 )",
        "for ( int i = 0 ; i < ans1 . size ( ) ; i ++ ) { cout << ans1 [ i ] [ i ] ; }"
      ],
      "err_line": 21,
      "err_msg": "‘callingf’ was not declared in this scope"
    },
    {
      "mod_line": [
        8,
        22
      ],
      "mod_code": [
        "if ( a + y < b ) return 0 ;",
        "s . push_back ( a ) ;"
      ],
      "err_line": 22,
      "err_msg": "request for member ‘push_back’ in ‘s’, which is of non-class type ‘int’"
    },
    {
      "mod_line": [
        8,
        22,
        23
      ],
      "mod_code": [
        "if ( a + y < b ) return 0 ;",
        "s . push_back ( a ) ;",
        "ans2 . push_back ( a ) ;"
      ],
      "err_line": 22,
      "err_msg": "request for member ‘push_back’ in ‘s’, which is of non-class type ‘int’"
    },
    {
      "mod_line": [
        8,
        22,
        23,
        26
      ],
      "mod_code": [
        "if ( a + y < b ) return 0 ;",
        "s . push_back ( a ) ;",
        "ans2 . push_back ( a ) ;",
        "else if ( f ( soldier [ s ] ) && armor [ a ] == 2 )"
      ],
      "err_line": 22,
      "err_msg": "request for member ‘push_back’ in ‘s’, which is of non-class type ‘int’"
    },
    {
      "mod_line": [
        8,
        22,
        23,
        28
      ],
      "mod_code": [
        "if ( a + y < b ) return 0 ;",
        "s . push_back ( a ) ;",
        "ans2 . push_back ( a ) ;",
        "else if ( f ( soldier [ s ] ) && armor [ a ] == 1 )"
      ],
      "err_line": 22,
      "err_msg": "request for member ‘push_back’ in ‘s’, which is of non-class type ‘int’"
    },
    {
      "mod_line": [
        8,
        22,
        23,
        33
      ],
      "mod_code": [
        "if ( a + y < b ) return 0 ;",
        "s . push_back ( a ) ;",
        "ans2 . push_back ( a ) ;",
        "for ( int i = 0 ; i < ans1 . size ( ) ; i ++ ) { cout << ans1 [ i ] [ i ] ; }"
      ],
      "err_line": 22,
      "err_msg": "request for member ‘push_back’ in ‘s’, which is of non-class type ‘int’"
    },
    {
      "mod_line": [
        8,
        22,
        26
      ],
      "mod_code": [
        "if ( a + y < b ) return 0 ;",
        "s . push_back ( a ) ;",
        "else if ( f ( soldier [ s ] ) && armor [ a ] == 2 )"
      ],
      "err_line": 22,
      "err_msg": "request for member ‘push_back’ in ‘s’, which is of non-class type ‘int’"
    },
    {
      "mod_line": [
        8,
        22,
        26,
        28
      ],
      "mod_code": [
        "if ( a + y < b ) return 0 ;",
        "s . push_back ( a ) ;",
        "else if ( f ( soldier [ s ] ) && armor [ a ] == 2 )",
        "else if ( f ( soldier [ s ] ) && armor [ a ] == 1 )"
      ],
      "err_line": 22,
      "err_msg": "request for member ‘push_back’ in ‘s’, which is of non-class type ‘int’"
    },
    {
      "mod_line": [
        8,
        22,
        26,
        33
      ],
      "mod_code": [
        "if ( a + y < b ) return 0 ;",
        "s . push_back ( a ) ;",
        "else if ( f ( soldier [ s ] ) && armor [ a ] == 2 )",
        "for ( int i = 0 ; i < ans1 . size ( ) ; i ++ ) { cout << ans1 [ i ] [ i ] ; }"
      ],
      "err_line": 22,
      "err_msg": "request for member ‘push_back’ in ‘s’, which is of non-class type ‘int’"
    },
    {
      "mod_line": [
        8,
        22,
        28
      ],
      "mod_code": [
        "if ( a + y < b ) return 0 ;",
        "s . push_back ( a ) ;",
        "else if ( f ( soldier [ s ] ) && armor [ a ] == 1 )"
      ],
      "err_line": 22,
      "err_msg": "request for member ‘push_back’ in ‘s’, which is of non-class type ‘int’"
    },
    {
      "mod_line": [
        8,
        22,
        28,
        33
      ],
      "mod_code": [
        "if ( a + y < b ) return 0 ;",
        "s . push_back ( a ) ;",
        "else if ( f ( soldier [ s ] ) && armor [ a ] == 1 )",
        "for ( int i = 0 ; i < ans1 . size ( ) ; i ++ ) { cout << ans1 [ i ] [ i ] ; }"
      ],
      "err_line": 22,
      "err_msg": "request for member ‘push_back’ in ‘s’, which is of non-class type ‘int’"
    },
    {
      "mod_line": [
        8,
        22,
        33
      ],
      "mod_code": [
        "if ( a + y < b ) return 0 ;",
        "s . push_back ( a ) ;",
        "for ( int i = 0 ; i < ans1 . size ( ) ; i ++ ) { cout << ans1 [ i ] [ i ] ; }"
      ],
      "err_line": 22,
      "err_msg": "request for member ‘push_back’ in ‘s’, which is of non-class type ‘int’"
    },
    {
      "mod_line": [
        8,
        23,
        26
      ],
      "mod_code": [
        "if ( a + y < b ) return 0 ;",
        "ans2 . push_back ( a ) ;",
        "else if ( f ( soldier [ s ] ) && armor [ a ] == 2 )"
      ],
      "err_line": 26,
      "err_msg": "too few arguments to function ‘int f(int, int)’"
    },
    {
      "mod_line": [
        8,
        23,
        26,
        28
      ],
      "mod_code": [
        "if ( a + y < b ) return 0 ;",
        "ans2 . push_back ( a ) ;",
        "else if ( f ( soldier [ s ] ) && armor [ a ] == 2 )",
        "else if ( f ( soldier [ s ] ) && armor [ a ] == 1 )"
      ],
      "err_line": 26,
      "err_msg": "too few arguments to function ‘int f(int, int)’"
    },
    {
      "mod_line": [
        8,
        23,
        26,
        33
      ],
      "mod_code": [
        "if ( a + y < b ) return 0 ;",
        "ans2 . push_back ( a ) ;",
        "else if ( f ( soldier [ s ] ) && armor [ a ] == 2 )",
        "for ( int i = 0 ; i < ans1 . size ( ) ; i ++ ) { cout << ans1 [ i ] [ i ] ; }"
      ],
      "err_line": 26,
      "err_msg": "too few arguments to function ‘int f(int, int)’"
    },
    {
      "mod_line": [
        8,
        23,
        28
      ],
      "mod_code": [
        "if ( a + y < b ) return 0 ;",
        "ans2 . push_back ( a ) ;",
        "else if ( f ( soldier [ s ] ) && armor [ a ] == 1 )"
      ],
      "err_line": 28,
      "err_msg": "too few arguments to function ‘int f(int, int)’"
    },
    {
      "mod_line": [
        8,
        23,
        28,
        33
      ],
      "mod_code": [
        "if ( a + y < b ) return 0 ;",
        "ans2 . push_back ( a ) ;",
        "else if ( f ( soldier [ s ] ) && armor [ a ] == 1 )",
        "for ( int i = 0 ; i < ans1 . size ( ) ; i ++ ) { cout << ans1 [ i ] [ i ] ; }"
      ],
      "err_line": 28,
      "err_msg": "too few arguments to function ‘int f(int, int)’"
    },
    {
      "mod_line": [
        8,
        23,
        33
      ],
      "mod_code": [
        "if ( a + y < b ) return 0 ;",
        "ans2 . push_back ( a ) ;",
        "for ( int i = 0 ; i < ans1 . size ( ) ; i ++ ) { cout << ans1 [ i ] [ i ] ; }"
      ],
      "err_line": 33,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        8,
        26
      ],
      "mod_code": [
        "if ( a + y < b ) return 0 ;",
        "else if ( f ( soldier [ s ] ) && armor [ a ] == 2 )"
      ],
      "err_line": 26,
      "err_msg": "too few arguments to function ‘int f(int, int)’"
    },
    {
      "mod_line": [
        8,
        26,
        28
      ],
      "mod_code": [
        "if ( a + y < b ) return 0 ;",
        "else if ( f ( soldier [ s ] ) && armor [ a ] == 2 )",
        "else if ( f ( soldier [ s ] ) && armor [ a ] == 1 )"
      ],
      "err_line": 26,
      "err_msg": "too few arguments to function ‘int f(int, int)’"
    },
    {
      "mod_line": [
        8,
        26,
        28,
        33
      ],
      "mod_code": [
        "if ( a + y < b ) return 0 ;",
        "else if ( f ( soldier [ s ] ) && armor [ a ] == 2 )",
        "else if ( f ( soldier [ s ] ) && armor [ a ] == 1 )",
        "for ( int i = 0 ; i < ans1 . size ( ) ; i ++ ) { cout << ans1 [ i ] [ i ] ; }"
      ],
      "err_line": 26,
      "err_msg": "too few arguments to function ‘int f(int, int)’"
    },
    {
      "mod_line": [
        8,
        26,
        33
      ],
      "mod_code": [
        "if ( a + y < b ) return 0 ;",
        "else if ( f ( soldier [ s ] ) && armor [ a ] == 2 )",
        "for ( int i = 0 ; i < ans1 . size ( ) ; i ++ ) { cout << ans1 [ i ] [ i ] ; }"
      ],
      "err_line": 26,
      "err_msg": "too few arguments to function ‘int f(int, int)’"
    },
    {
      "mod_line": [
        8,
        28
      ],
      "mod_code": [
        "if ( a + y < b ) return 0 ;",
        "else if ( f ( soldier [ s ] ) && armor [ a ] == 1 )"
      ],
      "err_line": 28,
      "err_msg": "too few arguments to function ‘int f(int, int)’"
    },
    {
      "mod_line": [
        8,
        28,
        33
      ],
      "mod_code": [
        "if ( a + y < b ) return 0 ;",
        "else if ( f ( soldier [ s ] ) && armor [ a ] == 1 )",
        "for ( int i = 0 ; i < ans1 . size ( ) ; i ++ ) { cout << ans1 [ i ] [ i ] ; }"
      ],
      "err_line": 28,
      "err_msg": "too few arguments to function ‘int f(int, int)’"
    },
    {
      "mod_line": [
        8,
        33
      ],
      "mod_code": [
        "if ( a + y < b ) return 0 ;",
        "for ( int i = 0 ; i < ans1 . size ( ) ; i ++ ) { cout << ans1 [ i ] [ i ] ; }"
      ],
      "err_line": 33,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        21,
        22
      ],
      "mod_code": [
        "if ( callingf ( soldier [ s ] ) && armor [ a ] == 0 )",
        "s . push_back ( a ) ;"
      ],
      "err_line": 21,
      "err_msg": "‘callingf’ was not declared in this scope"
    },
    {
      "mod_line": [
        21,
        22,
        23
      ],
      "mod_code": [
        "if ( callingf ( soldier [ s ] ) && armor [ a ] == 0 )",
        "s . push_back ( a ) ;",
        "ans2 . push_back ( a ) ;"
      ],
      "err_line": 21,
      "err_msg": "‘callingf’ was not declared in this scope"
    },
    {
      "mod_line": [
        21,
        22,
        23,
        26
      ],
      "mod_code": [
        "if ( callingf ( soldier [ s ] ) && armor [ a ] == 0 )",
        "s . push_back ( a ) ;",
        "ans2 . push_back ( a ) ;",
        "else if ( f ( soldier [ s ] ) && armor [ a ] == 2 )"
      ],
      "err_line": 21,
      "err_msg": "‘callingf’ was not declared in this scope"
    },
    {
      "mod_line": [
        21,
        22,
        23,
        28
      ],
      "mod_code": [
        "if ( callingf ( soldier [ s ] ) && armor [ a ] == 0 )",
        "s . push_back ( a ) ;",
        "ans2 . push_back ( a ) ;",
        "else if ( f ( soldier [ s ] ) && armor [ a ] == 1 )"
      ],
      "err_line": 21,
      "err_msg": "‘callingf’ was not declared in this scope"
    },
    {
      "mod_line": [
        21,
        22,
        23,
        33
      ],
      "mod_code": [
        "if ( callingf ( soldier [ s ] ) && armor [ a ] == 0 )",
        "s . push_back ( a ) ;",
        "ans2 . push_back ( a ) ;",
        "for ( int i = 0 ; i < ans1 . size ( ) ; i ++ ) { cout << ans1 [ i ] [ i ] ; }"
      ],
      "err_line": 21,
      "err_msg": "‘callingf’ was not declared in this scope"
    },
    {
      "mod_line": [
        21,
        22,
        26
      ],
      "mod_code": [
        "if ( callingf ( soldier [ s ] ) && armor [ a ] == 0 )",
        "s . push_back ( a ) ;",
        "else if ( f ( soldier [ s ] ) && armor [ a ] == 2 )"
      ],
      "err_line": 21,
      "err_msg": "‘callingf’ was not declared in this scope"
    },
    {
      "mod_line": [
        21,
        22,
        26,
        28
      ],
      "mod_code": [
        "if ( callingf ( soldier [ s ] ) && armor [ a ] == 0 )",
        "s . push_back ( a ) ;",
        "else if ( f ( soldier [ s ] ) && armor [ a ] == 2 )",
        "else if ( f ( soldier [ s ] ) && armor [ a ] == 1 )"
      ],
      "err_line": 21,
      "err_msg": "‘callingf’ was not declared in this scope"
    },
    {
      "mod_line": [
        21,
        22,
        26,
        33
      ],
      "mod_code": [
        "if ( callingf ( soldier [ s ] ) && armor [ a ] == 0 )",
        "s . push_back ( a ) ;",
        "else if ( f ( soldier [ s ] ) && armor [ a ] == 2 )",
        "for ( int i = 0 ; i < ans1 . size ( ) ; i ++ ) { cout << ans1 [ i ] [ i ] ; }"
      ],
      "err_line": 21,
      "err_msg": "‘callingf’ was not declared in this scope"
    },
    {
      "mod_line": [
        21,
        22,
        28
      ],
      "mod_code": [
        "if ( callingf ( soldier [ s ] ) && armor [ a ] == 0 )",
        "s . push_back ( a ) ;",
        "else if ( f ( soldier [ s ] ) && armor [ a ] == 1 )"
      ],
      "err_line": 21,
      "err_msg": "‘callingf’ was not declared in this scope"
    },
    {
      "mod_line": [
        21,
        22,
        28,
        33
      ],
      "mod_code": [
        "if ( callingf ( soldier [ s ] ) && armor [ a ] == 0 )",
        "s . push_back ( a ) ;",
        "else if ( f ( soldier [ s ] ) && armor [ a ] == 1 )",
        "for ( int i = 0 ; i < ans1 . size ( ) ; i ++ ) { cout << ans1 [ i ] [ i ] ; }"
      ],
      "err_line": 21,
      "err_msg": "‘callingf’ was not declared in this scope"
    },
    {
      "mod_line": [
        21,
        22,
        33
      ],
      "mod_code": [
        "if ( callingf ( soldier [ s ] ) && armor [ a ] == 0 )",
        "s . push_back ( a ) ;",
        "for ( int i = 0 ; i < ans1 . size ( ) ; i ++ ) { cout << ans1 [ i ] [ i ] ; }"
      ],
      "err_line": 21,
      "err_msg": "‘callingf’ was not declared in this scope"
    },
    {
      "mod_line": [
        21,
        23
      ],
      "mod_code": [
        "if ( callingf ( soldier [ s ] ) && armor [ a ] == 0 )",
        "ans2 . push_back ( a ) ;"
      ],
      "err_line": 21,
      "err_msg": "‘callingf’ was not declared in this scope"
    },
    {
      "mod_line": [
        21,
        23,
        26
      ],
      "mod_code": [
        "if ( callingf ( soldier [ s ] ) && armor [ a ] == 0 )",
        "ans2 . push_back ( a ) ;",
        "else if ( f ( soldier [ s ] ) && armor [ a ] == 2 )"
      ],
      "err_line": 21,
      "err_msg": "‘callingf’ was not declared in this scope"
    },
    {
      "mod_line": [
        21,
        23,
        26,
        28
      ],
      "mod_code": [
        "if ( callingf ( soldier [ s ] ) && armor [ a ] == 0 )",
        "ans2 . push_back ( a ) ;",
        "else if ( f ( soldier [ s ] ) && armor [ a ] == 2 )",
        "else if ( f ( soldier [ s ] ) && armor [ a ] == 1 )"
      ],
      "err_line": 21,
      "err_msg": "‘callingf’ was not declared in this scope"
    },
    {
      "mod_line": [
        21,
        23,
        26,
        33
      ],
      "mod_code": [
        "if ( callingf ( soldier [ s ] ) && armor [ a ] == 0 )",
        "ans2 . push_back ( a ) ;",
        "else if ( f ( soldier [ s ] ) && armor [ a ] == 2 )",
        "for ( int i = 0 ; i < ans1 . size ( ) ; i ++ ) { cout << ans1 [ i ] [ i ] ; }"
      ],
      "err_line": 21,
      "err_msg": "‘callingf’ was not declared in this scope"
    },
    {
      "mod_line": [
        21,
        23,
        28
      ],
      "mod_code": [
        "if ( callingf ( soldier [ s ] ) && armor [ a ] == 0 )",
        "ans2 . push_back ( a ) ;",
        "else if ( f ( soldier [ s ] ) && armor [ a ] == 1 )"
      ],
      "err_line": 21,
      "err_msg": "‘callingf’ was not declared in this scope"
    },
    {
      "mod_line": [
        21,
        23,
        28,
        33
      ],
      "mod_code": [
        "if ( callingf ( soldier [ s ] ) && armor [ a ] == 0 )",
        "ans2 . push_back ( a ) ;",
        "else if ( f ( soldier [ s ] ) && armor [ a ] == 1 )",
        "for ( int i = 0 ; i < ans1 . size ( ) ; i ++ ) { cout << ans1 [ i ] [ i ] ; }"
      ],
      "err_line": 21,
      "err_msg": "‘callingf’ was not declared in this scope"
    },
    {
      "mod_line": [
        21,
        23,
        33
      ],
      "mod_code": [
        "if ( callingf ( soldier [ s ] ) && armor [ a ] == 0 )",
        "ans2 . push_back ( a ) ;",
        "for ( int i = 0 ; i < ans1 . size ( ) ; i ++ ) { cout << ans1 [ i ] [ i ] ; }"
      ],
      "err_line": 21,
      "err_msg": "‘callingf’ was not declared in this scope"
    },
    {
      "mod_line": [
        21,
        26
      ],
      "mod_code": [
        "if ( callingf ( soldier [ s ] ) && armor [ a ] == 0 )",
        "else if ( f ( soldier [ s ] ) && armor [ a ] == 2 )"
      ],
      "err_line": 21,
      "err_msg": "‘callingf’ was not declared in this scope"
    },
    {
      "mod_line": [
        21,
        26,
        28
      ],
      "mod_code": [
        "if ( callingf ( soldier [ s ] ) && armor [ a ] == 0 )",
        "else if ( f ( soldier [ s ] ) && armor [ a ] == 2 )",
        "else if ( f ( soldier [ s ] ) && armor [ a ] == 1 )"
      ],
      "err_line": 21,
      "err_msg": "‘callingf’ was not declared in this scope"
    },
    {
      "mod_line": [
        21,
        26,
        28,
        33
      ],
      "mod_code": [
        "if ( callingf ( soldier [ s ] ) && armor [ a ] == 0 )",
        "else if ( f ( soldier [ s ] ) && armor [ a ] == 2 )",
        "else if ( f ( soldier [ s ] ) && armor [ a ] == 1 )",
        "for ( int i = 0 ; i < ans1 . size ( ) ; i ++ ) { cout << ans1 [ i ] [ i ] ; }"
      ],
      "err_line": 21,
      "err_msg": "‘callingf’ was not declared in this scope"
    },
    {
      "mod_line": [
        21,
        26,
        33
      ],
      "mod_code": [
        "if ( callingf ( soldier [ s ] ) && armor [ a ] == 0 )",
        "else if ( f ( soldier [ s ] ) && armor [ a ] == 2 )",
        "for ( int i = 0 ; i < ans1 . size ( ) ; i ++ ) { cout << ans1 [ i ] [ i ] ; }"
      ],
      "err_line": 21,
      "err_msg": "‘callingf’ was not declared in this scope"
    },
    {
      "mod_line": [
        21,
        28
      ],
      "mod_code": [
        "if ( callingf ( soldier [ s ] ) && armor [ a ] == 0 )",
        "else if ( f ( soldier [ s ] ) && armor [ a ] == 1 )"
      ],
      "err_line": 21,
      "err_msg": "‘callingf’ was not declared in this scope"
    },
    {
      "mod_line": [
        21,
        28,
        33
      ],
      "mod_code": [
        "if ( callingf ( soldier [ s ] ) && armor [ a ] == 0 )",
        "else if ( f ( soldier [ s ] ) && armor [ a ] == 1 )",
        "for ( int i = 0 ; i < ans1 . size ( ) ; i ++ ) { cout << ans1 [ i ] [ i ] ; }"
      ],
      "err_line": 21,
      "err_msg": "‘callingf’ was not declared in this scope"
    },
    {
      "mod_line": [
        21,
        33
      ],
      "mod_code": [
        "if ( callingf ( soldier [ s ] ) && armor [ a ] == 0 )",
        "for ( int i = 0 ; i < ans1 . size ( ) ; i ++ ) { cout << ans1 [ i ] [ i ] ; }"
      ],
      "err_line": 21,
      "err_msg": "‘callingf’ was not declared in this scope"
    },
    {
      "mod_line": [
        22,
        23
      ],
      "mod_code": [
        "s . push_back ( a ) ;",
        "ans2 . push_back ( a ) ;"
      ],
      "err_line": 22,
      "err_msg": "request for member ‘push_back’ in ‘s’, which is of non-class type ‘int’"
    },
    {
      "mod_line": [
        22,
        23,
        26
      ],
      "mod_code": [
        "s . push_back ( a ) ;",
        "ans2 . push_back ( a ) ;",
        "else if ( f ( soldier [ s ] ) && armor [ a ] == 2 )"
      ],
      "err_line": 22,
      "err_msg": "request for member ‘push_back’ in ‘s’, which is of non-class type ‘int’"
    },
    {
      "mod_line": [
        22,
        23,
        26,
        28
      ],
      "mod_code": [
        "s . push_back ( a ) ;",
        "ans2 . push_back ( a ) ;",
        "else if ( f ( soldier [ s ] ) && armor [ a ] == 2 )",
        "else if ( f ( soldier [ s ] ) && armor [ a ] == 1 )"
      ],
      "err_line": 22,
      "err_msg": "request for member ‘push_back’ in ‘s’, which is of non-class type ‘int’"
    },
    {
      "mod_line": [
        22,
        23,
        26,
        33
      ],
      "mod_code": [
        "s . push_back ( a ) ;",
        "ans2 . push_back ( a ) ;",
        "else if ( f ( soldier [ s ] ) && armor [ a ] == 2 )",
        "for ( int i = 0 ; i < ans1 . size ( ) ; i ++ ) { cout << ans1 [ i ] [ i ] ; }"
      ],
      "err_line": 22,
      "err_msg": "request for member ‘push_back’ in ‘s’, which is of non-class type ‘int’"
    },
    {
      "mod_line": [
        22,
        23,
        28
      ],
      "mod_code": [
        "s . push_back ( a ) ;",
        "ans2 . push_back ( a ) ;",
        "else if ( f ( soldier [ s ] ) && armor [ a ] == 1 )"
      ],
      "err_line": 22,
      "err_msg": "request for member ‘push_back’ in ‘s’, which is of non-class type ‘int’"
    },
    {
      "mod_line": [
        22,
        23,
        28,
        33
      ],
      "mod_code": [
        "s . push_back ( a ) ;",
        "ans2 . push_back ( a ) ;",
        "else if ( f ( soldier [ s ] ) && armor [ a ] == 1 )",
        "for ( int i = 0 ; i < ans1 . size ( ) ; i ++ ) { cout << ans1 [ i ] [ i ] ; }"
      ],
      "err_line": 22,
      "err_msg": "request for member ‘push_back’ in ‘s’, which is of non-class type ‘int’"
    },
    {
      "mod_line": [
        22,
        23,
        33
      ],
      "mod_code": [
        "s . push_back ( a ) ;",
        "ans2 . push_back ( a ) ;",
        "for ( int i = 0 ; i < ans1 . size ( ) ; i ++ ) { cout << ans1 [ i ] [ i ] ; }"
      ],
      "err_line": 22,
      "err_msg": "request for member ‘push_back’ in ‘s’, which is of non-class type ‘int’"
    },
    {
      "mod_line": [
        22,
        26
      ],
      "mod_code": [
        "s . push_back ( a ) ;",
        "else if ( f ( soldier [ s ] ) && armor [ a ] == 2 )"
      ],
      "err_line": 22,
      "err_msg": "request for member ‘push_back’ in ‘s’, which is of non-class type ‘int’"
    },
    {
      "mod_line": [
        22,
        26,
        28
      ],
      "mod_code": [
        "s . push_back ( a ) ;",
        "else if ( f ( soldier [ s ] ) && armor [ a ] == 2 )",
        "else if ( f ( soldier [ s ] ) && armor [ a ] == 1 )"
      ],
      "err_line": 22,
      "err_msg": "request for member ‘push_back’ in ‘s’, which is of non-class type ‘int’"
    },
    {
      "mod_line": [
        22,
        26,
        28,
        33
      ],
      "mod_code": [
        "s . push_back ( a ) ;",
        "else if ( f ( soldier [ s ] ) && armor [ a ] == 2 )",
        "else if ( f ( soldier [ s ] ) && armor [ a ] == 1 )",
        "for ( int i = 0 ; i < ans1 . size ( ) ; i ++ ) { cout << ans1 [ i ] [ i ] ; }"
      ],
      "err_line": 22,
      "err_msg": "request for member ‘push_back’ in ‘s’, which is of non-class type ‘int’"
    },
    {
      "mod_line": [
        22,
        26,
        33
      ],
      "mod_code": [
        "s . push_back ( a ) ;",
        "else if ( f ( soldier [ s ] ) && armor [ a ] == 2 )",
        "for ( int i = 0 ; i < ans1 . size ( ) ; i ++ ) { cout << ans1 [ i ] [ i ] ; }"
      ],
      "err_line": 22,
      "err_msg": "request for member ‘push_back’ in ‘s’, which is of non-class type ‘int’"
    },
    {
      "mod_line": [
        22,
        28
      ],
      "mod_code": [
        "s . push_back ( a ) ;",
        "else if ( f ( soldier [ s ] ) && armor [ a ] == 1 )"
      ],
      "err_line": 22,
      "err_msg": "request for member ‘push_back’ in ‘s’, which is of non-class type ‘int’"
    },
    {
      "mod_line": [
        22,
        28,
        33
      ],
      "mod_code": [
        "s . push_back ( a ) ;",
        "else if ( f ( soldier [ s ] ) && armor [ a ] == 1 )",
        "for ( int i = 0 ; i < ans1 . size ( ) ; i ++ ) { cout << ans1 [ i ] [ i ] ; }"
      ],
      "err_line": 22,
      "err_msg": "request for member ‘push_back’ in ‘s’, which is of non-class type ‘int’"
    },
    {
      "mod_line": [
        22,
        33
      ],
      "mod_code": [
        "s . push_back ( a ) ;",
        "for ( int i = 0 ; i < ans1 . size ( ) ; i ++ ) { cout << ans1 [ i ] [ i ] ; }"
      ],
      "err_line": 22,
      "err_msg": "request for member ‘push_back’ in ‘s’, which is of non-class type ‘int’"
    },
    {
      "mod_line": [
        23,
        26
      ],
      "mod_code": [
        "ans2 . push_back ( a ) ;",
        "else if ( f ( soldier [ s ] ) && armor [ a ] == 2 )"
      ],
      "err_line": 26,
      "err_msg": "too few arguments to function ‘int f(int, int)’"
    },
    {
      "mod_line": [
        23,
        26,
        28
      ],
      "mod_code": [
        "ans2 . push_back ( a ) ;",
        "else if ( f ( soldier [ s ] ) && armor [ a ] == 2 )",
        "else if ( f ( soldier [ s ] ) && armor [ a ] == 1 )"
      ],
      "err_line": 26,
      "err_msg": "too few arguments to function ‘int f(int, int)’"
    },
    {
      "mod_line": [
        23,
        26,
        28,
        33
      ],
      "mod_code": [
        "ans2 . push_back ( a ) ;",
        "else if ( f ( soldier [ s ] ) && armor [ a ] == 2 )",
        "else if ( f ( soldier [ s ] ) && armor [ a ] == 1 )",
        "for ( int i = 0 ; i < ans1 . size ( ) ; i ++ ) { cout << ans1 [ i ] [ i ] ; }"
      ],
      "err_line": 26,
      "err_msg": "too few arguments to function ‘int f(int, int)’"
    },
    {
      "mod_line": [
        23,
        26,
        33
      ],
      "mod_code": [
        "ans2 . push_back ( a ) ;",
        "else if ( f ( soldier [ s ] ) && armor [ a ] == 2 )",
        "for ( int i = 0 ; i < ans1 . size ( ) ; i ++ ) { cout << ans1 [ i ] [ i ] ; }"
      ],
      "err_line": 26,
      "err_msg": "too few arguments to function ‘int f(int, int)’"
    },
    {
      "mod_line": [
        23,
        28
      ],
      "mod_code": [
        "ans2 . push_back ( a ) ;",
        "else if ( f ( soldier [ s ] ) && armor [ a ] == 1 )"
      ],
      "err_line": 28,
      "err_msg": "too few arguments to function ‘int f(int, int)’"
    },
    {
      "mod_line": [
        23,
        28,
        33
      ],
      "mod_code": [
        "ans2 . push_back ( a ) ;",
        "else if ( f ( soldier [ s ] ) && armor [ a ] == 1 )",
        "for ( int i = 0 ; i < ans1 . size ( ) ; i ++ ) { cout << ans1 [ i ] [ i ] ; }"
      ],
      "err_line": 28,
      "err_msg": "too few arguments to function ‘int f(int, int)’"
    },
    {
      "mod_line": [
        23,
        33
      ],
      "mod_code": [
        "ans2 . push_back ( a ) ;",
        "for ( int i = 0 ; i < ans1 . size ( ) ; i ++ ) { cout << ans1 [ i ] [ i ] ; }"
      ],
      "err_line": 33,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        26,
        28
      ],
      "mod_code": [
        "else if ( f ( soldier [ s ] ) && armor [ a ] == 2 )",
        "else if ( f ( soldier [ s ] ) && armor [ a ] == 1 )"
      ],
      "err_line": 26,
      "err_msg": "too few arguments to function ‘int f(int, int)’"
    },
    {
      "mod_line": [
        26,
        28,
        33
      ],
      "mod_code": [
        "else if ( f ( soldier [ s ] ) && armor [ a ] == 2 )",
        "else if ( f ( soldier [ s ] ) && armor [ a ] == 1 )",
        "for ( int i = 0 ; i < ans1 . size ( ) ; i ++ ) { cout << ans1 [ i ] [ i ] ; }"
      ],
      "err_line": 26,
      "err_msg": "too few arguments to function ‘int f(int, int)’"
    },
    {
      "mod_line": [
        26,
        33
      ],
      "mod_code": [
        "else if ( f ( soldier [ s ] ) && armor [ a ] == 2 )",
        "for ( int i = 0 ; i < ans1 . size ( ) ; i ++ ) { cout << ans1 [ i ] [ i ] ; }"
      ],
      "err_line": 26,
      "err_msg": "too few arguments to function ‘int f(int, int)’"
    },
    {
      "mod_line": [
        28,
        33
      ],
      "mod_code": [
        "else if ( f ( soldier [ s ] ) && armor [ a ] == 1 )",
        "for ( int i = 0 ; i < ans1 . size ( ) ; i ++ ) { cout << ans1 [ i ] [ i ] ; }"
      ],
      "err_line": 28,
      "err_msg": "too few arguments to function ‘int f(int, int)’"
    }
  ]
}