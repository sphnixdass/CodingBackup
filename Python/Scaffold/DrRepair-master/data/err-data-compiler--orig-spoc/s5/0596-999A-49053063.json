{
  "meta": {
    "index": 596,
    "hitid": "3INZSNUD80KH6JOL3CM0ZA8EIWR9DR",
    "workerid": "AIWEXPJAU66D9",
    "probid": "999A",
    "subid": "49053063"
  },
  "lines": [
    {
      "line": 0,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 1,
      "text": "declare integer variables n and k",
      "code": "int n , k ;",
      "indent": 1
    },
    {
      "line": 2,
      "text": "read input to n and k",
      "code": "cin >> n >> k ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "declare vector of ints v with size n",
      "code": "vector < int > v ( n ) ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "for integer i = 0 to n exclusive , read v [ i ]",
      "code": "for ( int i = 0 ; i < n ; i ++ ) cin >> v [ i ] ;",
      "indent": 1
    },
    {
      "line": 5,
      "text": "declare integers f = 0 and b = n - 1",
      "code": "int f = 0 , b = n - 1 ;",
      "indent": 1
    },
    {
      "line": 6,
      "text": "while f < n and v [ f ] < = k , incrementing f",
      "code": "for ( ; f < n && v [ f ] <= k ; f ++ )",
      "indent": 1
    },
    {
      "line": 7,
      "text": "DUMMY",
      "code": ";",
      "indent": 2
    },
    {
      "line": 8,
      "text": "while b > = 0 and v [ b ] < = k , decrementing b",
      "code": "for ( ; b >= 0 && v [ b ] <= k ; b -- )",
      "indent": 1
    },
    {
      "line": 9,
      "text": "DUMMY",
      "code": ";",
      "indent": 2
    },
    {
      "line": 10,
      "text": "if f is equal to n",
      "code": "if ( f == n )",
      "indent": 1
    },
    {
      "line": 11,
      "text": "print n",
      "code": "cout << n << endl ;",
      "indent": 2
    },
    {
      "line": 12,
      "text": "else",
      "code": "else",
      "indent": 1
    },
    {
      "line": 13,
      "text": "print f + n - 1 - b",
      "code": "cout << f + n - 1 - b << endl ;",
      "indent": 2
    },
    {
      "line": 14,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 15,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        3
      ],
      "mod_code": [
        "vector < int > v [ n ] ;"
      ],
      "err_line": 4,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘std::vector<int>’)"
    },
    {
      "mod_line": [
        5
      ],
      "mod_code": [
        "int b = 0 , b = n - 1 ;"
      ],
      "err_line": 5,
      "err_msg": "redeclaration of ‘int b’"
    },
    {
      "mod_line": [
        10
      ],
      "mod_code": [
        "if ( f == n ) break ;"
      ],
      "err_line": 10,
      "err_msg": "break statement not within loop or switch"
    },
    {
      "mod_line": [
        10,
        2
      ],
      "mod_code": [
        "if ( f == n ) break ;",
        "cin >> k >> k ;"
      ],
      "err_line": 10,
      "err_msg": "break statement not within loop or switch"
    },
    {
      "mod_line": [
        10,
        2,
        5
      ],
      "mod_code": [
        "if ( f == n ) break ;",
        "cin >> k >> k ;",
        "int b = 0 , b = n - 1 ;"
      ],
      "err_line": 5,
      "err_msg": "redeclaration of ‘int b’"
    },
    {
      "mod_line": [
        10,
        2,
        5,
        3
      ],
      "mod_code": [
        "if ( f == n ) break ;",
        "cin >> k >> k ;",
        "int b = 0 , b = n - 1 ;",
        "vector < int > v [ n ] ;"
      ],
      "err_line": 4,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘std::vector<int>’)"
    },
    {
      "mod_line": [
        10,
        2,
        3
      ],
      "mod_code": [
        "if ( f == n ) break ;",
        "cin >> k >> k ;",
        "vector < int > v [ n ] ;"
      ],
      "err_line": 4,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘std::vector<int>’)"
    },
    {
      "mod_line": [
        10,
        5
      ],
      "mod_code": [
        "if ( f == n ) break ;",
        "int b = 0 , b = n - 1 ;"
      ],
      "err_line": 5,
      "err_msg": "redeclaration of ‘int b’"
    },
    {
      "mod_line": [
        10,
        5,
        3
      ],
      "mod_code": [
        "if ( f == n ) break ;",
        "int b = 0 , b = n - 1 ;",
        "vector < int > v [ n ] ;"
      ],
      "err_line": 4,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘std::vector<int>’)"
    },
    {
      "mod_line": [
        10,
        3
      ],
      "mod_code": [
        "if ( f == n ) break ;",
        "vector < int > v [ n ] ;"
      ],
      "err_line": 4,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘std::vector<int>’)"
    },
    {
      "mod_line": [
        2,
        5
      ],
      "mod_code": [
        "cin >> k >> k ;",
        "int b = 0 , b = n - 1 ;"
      ],
      "err_line": 5,
      "err_msg": "redeclaration of ‘int b’"
    },
    {
      "mod_line": [
        2,
        5,
        3
      ],
      "mod_code": [
        "cin >> k >> k ;",
        "int b = 0 , b = n - 1 ;",
        "vector < int > v [ n ] ;"
      ],
      "err_line": 4,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘std::vector<int>’)"
    },
    {
      "mod_line": [
        2,
        3
      ],
      "mod_code": [
        "cin >> k >> k ;",
        "vector < int > v [ n ] ;"
      ],
      "err_line": 4,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘std::vector<int>’)"
    },
    {
      "mod_line": [
        5,
        3
      ],
      "mod_code": [
        "int b = 0 , b = n - 1 ;",
        "vector < int > v [ n ] ;"
      ],
      "err_line": 4,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘std::vector<int>’)"
    }
  ]
}