{
  "meta": {
    "index": 2345,
    "hitid": "3ZQA3IO31BLQLBCFP8LNVY2UOYI1OF",
    "workerid": "A59A6LMCQRBL3",
    "probid": "834A",
    "subid": "46305409"
  },
  "lines": [
    {
      "line": 0,
      "text": "number = int array size 5",
      "code": "int number [ 5 ] ;",
      "indent": 0
    },
    {
      "line": 1,
      "text": "cw , ccw = int",
      "code": "int cw , ccw ;",
      "indent": 0
    },
    {
      "line": 2,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 3,
      "text": "q = char , q = >",
      "code": "char q = ' > ' ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "u = int , u = q",
      "code": "int u = q ;",
      "indent": 1
    },
    {
      "line": 5,
      "text": "let number [ u ] = 1",
      "code": "number [ u ] = 1 ;",
      "indent": 1
    },
    {
      "line": 6,
      "text": "r = char , r = v",
      "code": "char r = ' v ' ;",
      "indent": 1
    },
    {
      "line": 7,
      "text": "v = int , v = r",
      "code": "int v = r ;",
      "indent": 1
    },
    {
      "line": 8,
      "text": "let number [ v ] = 2",
      "code": "number [ v ] = 2 ;",
      "indent": 1
    },
    {
      "line": 9,
      "text": "s = char , s = <",
      "code": "char s = ' < ' ;",
      "indent": 1
    },
    {
      "line": 10,
      "text": "w = int , w = s",
      "code": "int w = s ;",
      "indent": 1
    },
    {
      "line": 11,
      "text": "let number [ w ] = 3",
      "code": "number [ w ] = 3 ;",
      "indent": 1
    },
    {
      "line": 12,
      "text": "t = char , t = ^",
      "code": "char t = ' ^ ' ;",
      "indent": 1
    },
    {
      "line": 13,
      "text": "x = int , x = t",
      "code": "int x = t ;",
      "indent": 1
    },
    {
      "line": 14,
      "text": "let number [ x ] = 4",
      "code": "number [ x ] = 4 ;",
      "indent": 1
    },
    {
      "line": 15,
      "text": "a , b = char",
      "code": "char a , b ;",
      "indent": 1
    },
    {
      "line": 16,
      "text": "read a , b",
      "code": "cin >> a >> b ;",
      "indent": 1
    },
    {
      "line": 17,
      "text": "p = int",
      "code": "int p ;",
      "indent": 1
    },
    {
      "line": 18,
      "text": "read p",
      "code": "cin >> p ;",
      "indent": 1
    },
    {
      "line": 19,
      "text": "let p % = 4",
      "code": "p %= 4 ;",
      "indent": 1
    },
    {
      "line": 20,
      "text": "oo = int , oo = a",
      "code": "int oo = a ;",
      "indent": 1
    },
    {
      "line": 21,
      "text": "pp = int , pp = b",
      "code": "int pp = b ;",
      "indent": 1
    },
    {
      "line": 22,
      "text": "y = int , y = number [ oo ] + p",
      "code": "int y = number [ oo ] + p ;",
      "indent": 1
    },
    {
      "line": 23,
      "text": "if y > 4 , subtract 4 from y",
      "code": "if ( y > 4 ) { y -= 4 ; }",
      "indent": 1
    },
    {
      "line": 24,
      "text": "z = int , z = number [ oo ] - p",
      "code": "int z = number [ oo ] - p ;",
      "indent": 1
    },
    {
      "line": 25,
      "text": "if z is less than or equal to 0 , add 4 to z",
      "code": "if ( z <= 0 ) { z += 4 ; }",
      "indent": 1
    },
    {
      "line": 26,
      "text": "if z equals number [ pp ] , let ccw = 1",
      "code": "if ( z == number [ pp ] ) { ccw = 1 ; }",
      "indent": 1
    },
    {
      "line": 27,
      "text": "if y equals number [ pp ] , let cw = 1",
      "code": "if ( y == number [ pp ] ) { cw = 1 ; }",
      "indent": 1
    },
    {
      "line": 28,
      "text": "total = int , total = cw + ccw",
      "code": "int total = cw + ccw ;",
      "indent": 1
    },
    {
      "line": 29,
      "text": "if cw = 1 and total = 1",
      "code": "if ( cw == 1 && total == 1 )",
      "indent": 1
    },
    {
      "line": 30,
      "text": "print cw",
      "code": "cout << \" cw \" << endl ;",
      "indent": 2
    },
    {
      "line": 31,
      "text": "else if ccw = 1 and total = 1",
      "code": "else if ( ccw == 1 && total == 1 )",
      "indent": 1
    },
    {
      "line": 32,
      "text": "print ccw",
      "code": "cout << \" ccw \" << endl ;",
      "indent": 2
    },
    {
      "line": 33,
      "text": "else",
      "code": "else",
      "indent": 1
    },
    {
      "line": 34,
      "text": "print undefined",
      "code": "cout << \" undefined \" << endl ;",
      "indent": 2
    },
    {
      "line": 35,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 36,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 37,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        3
      ],
      "mod_code": [
        "char q , q ;"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘char q’"
    },
    {
      "mod_line": [
        4
      ],
      "mod_code": [
        "int u , u = q ;"
      ],
      "err_line": 4,
      "err_msg": "redeclaration of ‘int u’"
    },
    {
      "mod_line": [
        6
      ],
      "mod_code": [
        "char r , r = v ;"
      ],
      "err_line": 6,
      "err_msg": "redeclaration of ‘char r’"
    },
    {
      "mod_line": [
        12
      ],
      "mod_code": [
        "char t = \" \" ;"
      ],
      "err_line": 12,
      "err_msg": "invalid conversion from ‘const char*’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        13
      ],
      "mod_code": [
        "int x , x = t ;"
      ],
      "err_line": 13,
      "err_msg": "redeclaration of ‘int x’"
    },
    {
      "mod_line": [
        1
      ],
      "mod_code": [
        "int cw , cw ;"
      ],
      "err_line": 1,
      "err_msg": "redefinition of ‘int cw’"
    },
    {
      "mod_line": [
        6
      ],
      "mod_code": [
        "char r = v ;"
      ],
      "err_line": 6,
      "err_msg": "‘v’ was not declared in this scope"
    },
    {
      "mod_line": [
        7
      ],
      "mod_code": [
        "int v , v = r ;"
      ],
      "err_line": 7,
      "err_msg": "redeclaration of ‘int v’"
    },
    {
      "mod_line": [
        9
      ],
      "mod_code": [
        "char s = s , s ;"
      ],
      "err_line": 9,
      "err_msg": "redeclaration of ‘char s’"
    },
    {
      "mod_line": [
        10
      ],
      "mod_code": [
        "int w , w = s ;"
      ],
      "err_line": 10,
      "err_msg": "redeclaration of ‘int w’"
    },
    {
      "mod_line": [
        16
      ],
      "mod_code": [
        "while ( cin >> a >> b )"
      ],
      "err_line": 18,
      "err_msg": "‘p’ was not declared in this scope"
    },
    {
      "mod_line": [
        20
      ],
      "mod_code": [
        "int oo , oo = a ;"
      ],
      "err_line": 20,
      "err_msg": "redeclaration of ‘int oo’"
    },
    {
      "mod_line": [
        21
      ],
      "mod_code": [
        "int pp , pp = b ;"
      ],
      "err_line": 21,
      "err_msg": "redeclaration of ‘int pp’"
    },
    {
      "mod_line": [
        28
      ],
      "mod_code": [
        "int total , total = cw + ccw ;"
      ],
      "err_line": 28,
      "err_msg": "redeclaration of ‘int total’"
    },
    {
      "mod_line": [
        32
      ],
      "mod_code": [
        "ccw << ccw << endl ;"
      ],
      "err_line": 32,
      "err_msg": "invalid operands of types ‘int’ and ‘<unresolved overloaded function type>’ to binary ‘operator<<’"
    },
    {
      "mod_line": [
        3,
        4
      ],
      "mod_code": [
        "char q , q ;",
        "int u , u = q ;"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘char q’"
    },
    {
      "mod_line": [
        3,
        4,
        6
      ],
      "mod_code": [
        "char q , q ;",
        "int u , u = q ;",
        "char r , r = v ;"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘char q’"
    },
    {
      "mod_line": [
        3,
        4,
        6,
        9
      ],
      "mod_code": [
        "char q , q ;",
        "int u , u = q ;",
        "char r , r = v ;",
        "char s = s ;"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘char q’"
    },
    {
      "mod_line": [
        3,
        4,
        6,
        12
      ],
      "mod_code": [
        "char q , q ;",
        "int u , u = q ;",
        "char r , r = v ;",
        "char t = \" \" ;"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘char q’"
    },
    {
      "mod_line": [
        3,
        4,
        6,
        13
      ],
      "mod_code": [
        "char q , q ;",
        "int u , u = q ;",
        "char r , r = v ;",
        "int x , x = t ;"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘char q’"
    },
    {
      "mod_line": [
        3,
        4,
        6,
        14
      ],
      "mod_code": [
        "char q , q ;",
        "int u , u = q ;",
        "char r , r = v ;",
        "number [ x ] = 4 ;"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘char q’"
    },
    {
      "mod_line": [
        3,
        4,
        6,
        30
      ],
      "mod_code": [
        "char q , q ;",
        "int u , u = q ;",
        "char r , r = v ;",
        "cout << cw << endl ;"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘char q’"
    },
    {
      "mod_line": [
        3,
        4,
        6,
        32
      ],
      "mod_code": [
        "char q , q ;",
        "int u , u = q ;",
        "char r , r = v ;",
        "cout << ccw << endl ;"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘char q’"
    },
    {
      "mod_line": [
        3,
        4,
        6,
        34
      ],
      "mod_code": [
        "char q , q ;",
        "int u , u = q ;",
        "char r , r = v ;",
        "cout << endl ;"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘char q’"
    },
    {
      "mod_line": [
        3,
        4,
        9
      ],
      "mod_code": [
        "char q , q ;",
        "int u , u = q ;",
        "char s = s ;"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘char q’"
    },
    {
      "mod_line": [
        3,
        4,
        9,
        12
      ],
      "mod_code": [
        "char q , q ;",
        "int u , u = q ;",
        "char s = s ;",
        "char t = \" \" ;"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘char q’"
    },
    {
      "mod_line": [
        3,
        4,
        9,
        13
      ],
      "mod_code": [
        "char q , q ;",
        "int u , u = q ;",
        "char s = s ;",
        "int x , x = t ;"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘char q’"
    },
    {
      "mod_line": [
        3,
        4,
        9,
        14
      ],
      "mod_code": [
        "char q , q ;",
        "int u , u = q ;",
        "char s = s ;",
        "number [ x ] = 4 ;"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘char q’"
    },
    {
      "mod_line": [
        3,
        4,
        9,
        30
      ],
      "mod_code": [
        "char q , q ;",
        "int u , u = q ;",
        "char s = s ;",
        "cout << cw << endl ;"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘char q’"
    },
    {
      "mod_line": [
        3,
        4,
        9,
        32
      ],
      "mod_code": [
        "char q , q ;",
        "int u , u = q ;",
        "char s = s ;",
        "cout << ccw << endl ;"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘char q’"
    },
    {
      "mod_line": [
        3,
        4,
        9,
        34
      ],
      "mod_code": [
        "char q , q ;",
        "int u , u = q ;",
        "char s = s ;",
        "cout << endl ;"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘char q’"
    },
    {
      "mod_line": [
        3,
        4,
        12
      ],
      "mod_code": [
        "char q , q ;",
        "int u , u = q ;",
        "char t = \" \" ;"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘char q’"
    },
    {
      "mod_line": [
        3,
        4,
        12,
        13
      ],
      "mod_code": [
        "char q , q ;",
        "int u , u = q ;",
        "char t = \" \" ;",
        "int x , x = t ;"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘char q’"
    },
    {
      "mod_line": [
        3,
        4,
        12,
        14
      ],
      "mod_code": [
        "char q , q ;",
        "int u , u = q ;",
        "char t = \" \" ;",
        "number [ x ] = 4 ;"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘char q’"
    },
    {
      "mod_line": [
        3,
        4,
        12,
        30
      ],
      "mod_code": [
        "char q , q ;",
        "int u , u = q ;",
        "char t = \" \" ;",
        "cout << cw << endl ;"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘char q’"
    },
    {
      "mod_line": [
        3,
        4,
        12,
        32
      ],
      "mod_code": [
        "char q , q ;",
        "int u , u = q ;",
        "char t = \" \" ;",
        "cout << ccw << endl ;"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘char q’"
    },
    {
      "mod_line": [
        3,
        4,
        12,
        34
      ],
      "mod_code": [
        "char q , q ;",
        "int u , u = q ;",
        "char t = \" \" ;",
        "cout << endl ;"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘char q’"
    },
    {
      "mod_line": [
        3,
        4,
        13
      ],
      "mod_code": [
        "char q , q ;",
        "int u , u = q ;",
        "int x , x = t ;"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘char q’"
    },
    {
      "mod_line": [
        3,
        4,
        13,
        14
      ],
      "mod_code": [
        "char q , q ;",
        "int u , u = q ;",
        "int x , x = t ;",
        "number [ x ] = 4 ;"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘char q’"
    },
    {
      "mod_line": [
        3,
        4,
        13,
        30
      ],
      "mod_code": [
        "char q , q ;",
        "int u , u = q ;",
        "int x , x = t ;",
        "cout << cw << endl ;"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘char q’"
    },
    {
      "mod_line": [
        3,
        4,
        13,
        32
      ],
      "mod_code": [
        "char q , q ;",
        "int u , u = q ;",
        "int x , x = t ;",
        "cout << ccw << endl ;"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘char q’"
    },
    {
      "mod_line": [
        3,
        4,
        13,
        34
      ],
      "mod_code": [
        "char q , q ;",
        "int u , u = q ;",
        "int x , x = t ;",
        "cout << endl ;"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘char q’"
    },
    {
      "mod_line": [
        3,
        4,
        14
      ],
      "mod_code": [
        "char q , q ;",
        "int u , u = q ;",
        "number [ x ] = 4 ;"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘char q’"
    },
    {
      "mod_line": [
        3,
        4,
        14,
        30
      ],
      "mod_code": [
        "char q , q ;",
        "int u , u = q ;",
        "number [ x ] = 4 ;",
        "cout << cw << endl ;"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘char q’"
    },
    {
      "mod_line": [
        3,
        4,
        14,
        32
      ],
      "mod_code": [
        "char q , q ;",
        "int u , u = q ;",
        "number [ x ] = 4 ;",
        "cout << ccw << endl ;"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘char q’"
    },
    {
      "mod_line": [
        3,
        4,
        14,
        34
      ],
      "mod_code": [
        "char q , q ;",
        "int u , u = q ;",
        "number [ x ] = 4 ;",
        "cout << endl ;"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘char q’"
    },
    {
      "mod_line": [
        3,
        4,
        30
      ],
      "mod_code": [
        "char q , q ;",
        "int u , u = q ;",
        "cout << cw << endl ;"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘char q’"
    },
    {
      "mod_line": [
        3,
        4,
        30,
        32
      ],
      "mod_code": [
        "char q , q ;",
        "int u , u = q ;",
        "cout << cw << endl ;",
        "cout << ccw << endl ;"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘char q’"
    },
    {
      "mod_line": [
        3,
        4,
        30,
        34
      ],
      "mod_code": [
        "char q , q ;",
        "int u , u = q ;",
        "cout << cw << endl ;",
        "cout << endl ;"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘char q’"
    },
    {
      "mod_line": [
        3,
        4,
        32
      ],
      "mod_code": [
        "char q , q ;",
        "int u , u = q ;",
        "cout << ccw << endl ;"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘char q’"
    },
    {
      "mod_line": [
        3,
        4,
        32,
        34
      ],
      "mod_code": [
        "char q , q ;",
        "int u , u = q ;",
        "cout << ccw << endl ;",
        "cout << endl ;"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘char q’"
    },
    {
      "mod_line": [
        3,
        4,
        34
      ],
      "mod_code": [
        "char q , q ;",
        "int u , u = q ;",
        "cout << endl ;"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘char q’"
    },
    {
      "mod_line": [
        3,
        6
      ],
      "mod_code": [
        "char q , q ;",
        "char r , r = v ;"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘char q’"
    },
    {
      "mod_line": [
        3,
        6,
        9
      ],
      "mod_code": [
        "char q , q ;",
        "char r , r = v ;",
        "char s = s ;"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘char q’"
    },
    {
      "mod_line": [
        3,
        6,
        9,
        12
      ],
      "mod_code": [
        "char q , q ;",
        "char r , r = v ;",
        "char s = s ;",
        "char t = \" \" ;"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘char q’"
    },
    {
      "mod_line": [
        3,
        6,
        9,
        13
      ],
      "mod_code": [
        "char q , q ;",
        "char r , r = v ;",
        "char s = s ;",
        "int x , x = t ;"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘char q’"
    },
    {
      "mod_line": [
        3,
        6,
        9,
        14
      ],
      "mod_code": [
        "char q , q ;",
        "char r , r = v ;",
        "char s = s ;",
        "number [ x ] = 4 ;"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘char q’"
    },
    {
      "mod_line": [
        3,
        6,
        9,
        30
      ],
      "mod_code": [
        "char q , q ;",
        "char r , r = v ;",
        "char s = s ;",
        "cout << cw << endl ;"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘char q’"
    },
    {
      "mod_line": [
        3,
        6,
        9,
        32
      ],
      "mod_code": [
        "char q , q ;",
        "char r , r = v ;",
        "char s = s ;",
        "cout << ccw << endl ;"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘char q’"
    },
    {
      "mod_line": [
        3,
        6,
        9,
        34
      ],
      "mod_code": [
        "char q , q ;",
        "char r , r = v ;",
        "char s = s ;",
        "cout << endl ;"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘char q’"
    },
    {
      "mod_line": [
        3,
        6,
        12
      ],
      "mod_code": [
        "char q , q ;",
        "char r , r = v ;",
        "char t = \" \" ;"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘char q’"
    },
    {
      "mod_line": [
        3,
        6,
        12,
        13
      ],
      "mod_code": [
        "char q , q ;",
        "char r , r = v ;",
        "char t = \" \" ;",
        "int x , x = t ;"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘char q’"
    },
    {
      "mod_line": [
        3,
        6,
        12,
        14
      ],
      "mod_code": [
        "char q , q ;",
        "char r , r = v ;",
        "char t = \" \" ;",
        "number [ x ] = 4 ;"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘char q’"
    },
    {
      "mod_line": [
        3,
        6,
        12,
        30
      ],
      "mod_code": [
        "char q , q ;",
        "char r , r = v ;",
        "char t = \" \" ;",
        "cout << cw << endl ;"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘char q’"
    },
    {
      "mod_line": [
        3,
        6,
        12,
        32
      ],
      "mod_code": [
        "char q , q ;",
        "char r , r = v ;",
        "char t = \" \" ;",
        "cout << ccw << endl ;"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘char q’"
    },
    {
      "mod_line": [
        3,
        6,
        12,
        34
      ],
      "mod_code": [
        "char q , q ;",
        "char r , r = v ;",
        "char t = \" \" ;",
        "cout << endl ;"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘char q’"
    },
    {
      "mod_line": [
        3,
        6,
        13
      ],
      "mod_code": [
        "char q , q ;",
        "char r , r = v ;",
        "int x , x = t ;"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘char q’"
    },
    {
      "mod_line": [
        3,
        6,
        13,
        14
      ],
      "mod_code": [
        "char q , q ;",
        "char r , r = v ;",
        "int x , x = t ;",
        "number [ x ] = 4 ;"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘char q’"
    },
    {
      "mod_line": [
        3,
        6,
        13,
        30
      ],
      "mod_code": [
        "char q , q ;",
        "char r , r = v ;",
        "int x , x = t ;",
        "cout << cw << endl ;"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘char q’"
    },
    {
      "mod_line": [
        3,
        6,
        13,
        32
      ],
      "mod_code": [
        "char q , q ;",
        "char r , r = v ;",
        "int x , x = t ;",
        "cout << ccw << endl ;"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘char q’"
    },
    {
      "mod_line": [
        3,
        6,
        13,
        34
      ],
      "mod_code": [
        "char q , q ;",
        "char r , r = v ;",
        "int x , x = t ;",
        "cout << endl ;"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘char q’"
    },
    {
      "mod_line": [
        3,
        6,
        14
      ],
      "mod_code": [
        "char q , q ;",
        "char r , r = v ;",
        "number [ x ] = 4 ;"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘char q’"
    },
    {
      "mod_line": [
        3,
        6,
        14,
        30
      ],
      "mod_code": [
        "char q , q ;",
        "char r , r = v ;",
        "number [ x ] = 4 ;",
        "cout << cw << endl ;"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘char q’"
    },
    {
      "mod_line": [
        3,
        6,
        14,
        32
      ],
      "mod_code": [
        "char q , q ;",
        "char r , r = v ;",
        "number [ x ] = 4 ;",
        "cout << ccw << endl ;"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘char q’"
    },
    {
      "mod_line": [
        3,
        6,
        14,
        34
      ],
      "mod_code": [
        "char q , q ;",
        "char r , r = v ;",
        "number [ x ] = 4 ;",
        "cout << endl ;"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘char q’"
    },
    {
      "mod_line": [
        3,
        6,
        30
      ],
      "mod_code": [
        "char q , q ;",
        "char r , r = v ;",
        "cout << cw << endl ;"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘char q’"
    },
    {
      "mod_line": [
        3,
        6,
        30,
        32
      ],
      "mod_code": [
        "char q , q ;",
        "char r , r = v ;",
        "cout << cw << endl ;",
        "cout << ccw << endl ;"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘char q’"
    },
    {
      "mod_line": [
        3,
        6,
        30,
        34
      ],
      "mod_code": [
        "char q , q ;",
        "char r , r = v ;",
        "cout << cw << endl ;",
        "cout << endl ;"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘char q’"
    },
    {
      "mod_line": [
        3,
        6,
        32
      ],
      "mod_code": [
        "char q , q ;",
        "char r , r = v ;",
        "cout << ccw << endl ;"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘char q’"
    },
    {
      "mod_line": [
        3,
        6,
        32,
        34
      ],
      "mod_code": [
        "char q , q ;",
        "char r , r = v ;",
        "cout << ccw << endl ;",
        "cout << endl ;"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘char q’"
    },
    {
      "mod_line": [
        3,
        6,
        34
      ],
      "mod_code": [
        "char q , q ;",
        "char r , r = v ;",
        "cout << endl ;"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘char q’"
    },
    {
      "mod_line": [
        3,
        9
      ],
      "mod_code": [
        "char q , q ;",
        "char s = s ;"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘char q’"
    },
    {
      "mod_line": [
        3,
        9,
        12
      ],
      "mod_code": [
        "char q , q ;",
        "char s = s ;",
        "char t = \" \" ;"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘char q’"
    },
    {
      "mod_line": [
        3,
        9,
        12,
        13
      ],
      "mod_code": [
        "char q , q ;",
        "char s = s ;",
        "char t = \" \" ;",
        "int x , x = t ;"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘char q’"
    },
    {
      "mod_line": [
        3,
        9,
        12,
        14
      ],
      "mod_code": [
        "char q , q ;",
        "char s = s ;",
        "char t = \" \" ;",
        "number [ x ] = 4 ;"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘char q’"
    },
    {
      "mod_line": [
        3,
        9,
        12,
        30
      ],
      "mod_code": [
        "char q , q ;",
        "char s = s ;",
        "char t = \" \" ;",
        "cout << cw << endl ;"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘char q’"
    },
    {
      "mod_line": [
        3,
        9,
        12,
        32
      ],
      "mod_code": [
        "char q , q ;",
        "char s = s ;",
        "char t = \" \" ;",
        "cout << ccw << endl ;"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘char q’"
    },
    {
      "mod_line": [
        3,
        9,
        12,
        34
      ],
      "mod_code": [
        "char q , q ;",
        "char s = s ;",
        "char t = \" \" ;",
        "cout << endl ;"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘char q’"
    },
    {
      "mod_line": [
        3,
        9,
        13
      ],
      "mod_code": [
        "char q , q ;",
        "char s = s ;",
        "int x , x = t ;"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘char q’"
    },
    {
      "mod_line": [
        3,
        9,
        13,
        14
      ],
      "mod_code": [
        "char q , q ;",
        "char s = s ;",
        "int x , x = t ;",
        "number [ x ] = 4 ;"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘char q’"
    },
    {
      "mod_line": [
        3,
        9,
        13,
        30
      ],
      "mod_code": [
        "char q , q ;",
        "char s = s ;",
        "int x , x = t ;",
        "cout << cw << endl ;"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘char q’"
    },
    {
      "mod_line": [
        3,
        9,
        13,
        32
      ],
      "mod_code": [
        "char q , q ;",
        "char s = s ;",
        "int x , x = t ;",
        "cout << ccw << endl ;"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘char q’"
    },
    {
      "mod_line": [
        3,
        9,
        13,
        34
      ],
      "mod_code": [
        "char q , q ;",
        "char s = s ;",
        "int x , x = t ;",
        "cout << endl ;"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘char q’"
    },
    {
      "mod_line": [
        3,
        9,
        14
      ],
      "mod_code": [
        "char q , q ;",
        "char s = s ;",
        "number [ x ] = 4 ;"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘char q’"
    },
    {
      "mod_line": [
        3,
        9,
        14,
        30
      ],
      "mod_code": [
        "char q , q ;",
        "char s = s ;",
        "number [ x ] = 4 ;",
        "cout << cw << endl ;"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘char q’"
    },
    {
      "mod_line": [
        3,
        9,
        14,
        32
      ],
      "mod_code": [
        "char q , q ;",
        "char s = s ;",
        "number [ x ] = 4 ;",
        "cout << ccw << endl ;"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘char q’"
    },
    {
      "mod_line": [
        3,
        9,
        14,
        34
      ],
      "mod_code": [
        "char q , q ;",
        "char s = s ;",
        "number [ x ] = 4 ;",
        "cout << endl ;"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘char q’"
    },
    {
      "mod_line": [
        3,
        9,
        30
      ],
      "mod_code": [
        "char q , q ;",
        "char s = s ;",
        "cout << cw << endl ;"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘char q’"
    },
    {
      "mod_line": [
        3,
        9,
        30,
        32
      ],
      "mod_code": [
        "char q , q ;",
        "char s = s ;",
        "cout << cw << endl ;",
        "cout << ccw << endl ;"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘char q’"
    },
    {
      "mod_line": [
        3,
        9,
        30,
        34
      ],
      "mod_code": [
        "char q , q ;",
        "char s = s ;",
        "cout << cw << endl ;",
        "cout << endl ;"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘char q’"
    },
    {
      "mod_line": [
        3,
        9,
        32
      ],
      "mod_code": [
        "char q , q ;",
        "char s = s ;",
        "cout << ccw << endl ;"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘char q’"
    },
    {
      "mod_line": [
        3,
        9,
        32,
        34
      ],
      "mod_code": [
        "char q , q ;",
        "char s = s ;",
        "cout << ccw << endl ;",
        "cout << endl ;"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘char q’"
    },
    {
      "mod_line": [
        3,
        9,
        34
      ],
      "mod_code": [
        "char q , q ;",
        "char s = s ;",
        "cout << endl ;"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘char q’"
    },
    {
      "mod_line": [
        3,
        12
      ],
      "mod_code": [
        "char q , q ;",
        "char t = \" \" ;"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘char q’"
    },
    {
      "mod_line": [
        3,
        12,
        13
      ],
      "mod_code": [
        "char q , q ;",
        "char t = \" \" ;",
        "int x , x = t ;"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘char q’"
    },
    {
      "mod_line": [
        3,
        12,
        13,
        14
      ],
      "mod_code": [
        "char q , q ;",
        "char t = \" \" ;",
        "int x , x = t ;",
        "number [ x ] = 4 ;"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘char q’"
    },
    {
      "mod_line": [
        3,
        12,
        13,
        30
      ],
      "mod_code": [
        "char q , q ;",
        "char t = \" \" ;",
        "int x , x = t ;",
        "cout << cw << endl ;"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘char q’"
    },
    {
      "mod_line": [
        3,
        12,
        13,
        32
      ],
      "mod_code": [
        "char q , q ;",
        "char t = \" \" ;",
        "int x , x = t ;",
        "cout << ccw << endl ;"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘char q’"
    },
    {
      "mod_line": [
        3,
        12,
        13,
        34
      ],
      "mod_code": [
        "char q , q ;",
        "char t = \" \" ;",
        "int x , x = t ;",
        "cout << endl ;"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘char q’"
    },
    {
      "mod_line": [
        3,
        12,
        14
      ],
      "mod_code": [
        "char q , q ;",
        "char t = \" \" ;",
        "number [ x ] = 4 ;"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘char q’"
    },
    {
      "mod_line": [
        3,
        12,
        14,
        30
      ],
      "mod_code": [
        "char q , q ;",
        "char t = \" \" ;",
        "number [ x ] = 4 ;",
        "cout << cw << endl ;"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘char q’"
    },
    {
      "mod_line": [
        3,
        12,
        14,
        32
      ],
      "mod_code": [
        "char q , q ;",
        "char t = \" \" ;",
        "number [ x ] = 4 ;",
        "cout << ccw << endl ;"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘char q’"
    },
    {
      "mod_line": [
        3,
        12,
        14,
        34
      ],
      "mod_code": [
        "char q , q ;",
        "char t = \" \" ;",
        "number [ x ] = 4 ;",
        "cout << endl ;"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘char q’"
    },
    {
      "mod_line": [
        3,
        12,
        30
      ],
      "mod_code": [
        "char q , q ;",
        "char t = \" \" ;",
        "cout << cw << endl ;"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘char q’"
    },
    {
      "mod_line": [
        3,
        12,
        30,
        32
      ],
      "mod_code": [
        "char q , q ;",
        "char t = \" \" ;",
        "cout << cw << endl ;",
        "cout << ccw << endl ;"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘char q’"
    },
    {
      "mod_line": [
        3,
        12,
        30,
        34
      ],
      "mod_code": [
        "char q , q ;",
        "char t = \" \" ;",
        "cout << cw << endl ;",
        "cout << endl ;"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘char q’"
    },
    {
      "mod_line": [
        3,
        12,
        32
      ],
      "mod_code": [
        "char q , q ;",
        "char t = \" \" ;",
        "cout << ccw << endl ;"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘char q’"
    },
    {
      "mod_line": [
        3,
        12,
        32,
        34
      ],
      "mod_code": [
        "char q , q ;",
        "char t = \" \" ;",
        "cout << ccw << endl ;",
        "cout << endl ;"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘char q’"
    },
    {
      "mod_line": [
        3,
        12,
        34
      ],
      "mod_code": [
        "char q , q ;",
        "char t = \" \" ;",
        "cout << endl ;"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘char q’"
    },
    {
      "mod_line": [
        3,
        13
      ],
      "mod_code": [
        "char q , q ;",
        "int x , x = t ;"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘char q’"
    },
    {
      "mod_line": [
        3,
        13,
        14
      ],
      "mod_code": [
        "char q , q ;",
        "int x , x = t ;",
        "number [ x ] = 4 ;"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘char q’"
    },
    {
      "mod_line": [
        3,
        13,
        14,
        30
      ],
      "mod_code": [
        "char q , q ;",
        "int x , x = t ;",
        "number [ x ] = 4 ;",
        "cout << cw << endl ;"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘char q’"
    },
    {
      "mod_line": [
        3,
        13,
        14,
        32
      ],
      "mod_code": [
        "char q , q ;",
        "int x , x = t ;",
        "number [ x ] = 4 ;",
        "cout << ccw << endl ;"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘char q’"
    },
    {
      "mod_line": [
        3,
        13,
        14,
        34
      ],
      "mod_code": [
        "char q , q ;",
        "int x , x = t ;",
        "number [ x ] = 4 ;",
        "cout << endl ;"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘char q’"
    },
    {
      "mod_line": [
        3,
        13,
        30
      ],
      "mod_code": [
        "char q , q ;",
        "int x , x = t ;",
        "cout << cw << endl ;"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘char q’"
    },
    {
      "mod_line": [
        3,
        13,
        30,
        32
      ],
      "mod_code": [
        "char q , q ;",
        "int x , x = t ;",
        "cout << cw << endl ;",
        "cout << ccw << endl ;"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘char q’"
    },
    {
      "mod_line": [
        3,
        13,
        30,
        34
      ],
      "mod_code": [
        "char q , q ;",
        "int x , x = t ;",
        "cout << cw << endl ;",
        "cout << endl ;"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘char q’"
    },
    {
      "mod_line": [
        3,
        13,
        32
      ],
      "mod_code": [
        "char q , q ;",
        "int x , x = t ;",
        "cout << ccw << endl ;"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘char q’"
    },
    {
      "mod_line": [
        3,
        13,
        32,
        34
      ],
      "mod_code": [
        "char q , q ;",
        "int x , x = t ;",
        "cout << ccw << endl ;",
        "cout << endl ;"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘char q’"
    },
    {
      "mod_line": [
        3,
        13,
        34
      ],
      "mod_code": [
        "char q , q ;",
        "int x , x = t ;",
        "cout << endl ;"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘char q’"
    },
    {
      "mod_line": [
        3,
        14
      ],
      "mod_code": [
        "char q , q ;",
        "number [ x ] = 4 ;"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘char q’"
    },
    {
      "mod_line": [
        3,
        14,
        30
      ],
      "mod_code": [
        "char q , q ;",
        "number [ x ] = 4 ;",
        "cout << cw << endl ;"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘char q’"
    },
    {
      "mod_line": [
        3,
        14,
        30,
        32
      ],
      "mod_code": [
        "char q , q ;",
        "number [ x ] = 4 ;",
        "cout << cw << endl ;",
        "cout << ccw << endl ;"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘char q’"
    },
    {
      "mod_line": [
        3,
        14,
        30,
        34
      ],
      "mod_code": [
        "char q , q ;",
        "number [ x ] = 4 ;",
        "cout << cw << endl ;",
        "cout << endl ;"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘char q’"
    },
    {
      "mod_line": [
        3,
        14,
        32
      ],
      "mod_code": [
        "char q , q ;",
        "number [ x ] = 4 ;",
        "cout << ccw << endl ;"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘char q’"
    },
    {
      "mod_line": [
        3,
        14,
        32,
        34
      ],
      "mod_code": [
        "char q , q ;",
        "number [ x ] = 4 ;",
        "cout << ccw << endl ;",
        "cout << endl ;"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘char q’"
    },
    {
      "mod_line": [
        3,
        14,
        34
      ],
      "mod_code": [
        "char q , q ;",
        "number [ x ] = 4 ;",
        "cout << endl ;"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘char q’"
    },
    {
      "mod_line": [
        3,
        30
      ],
      "mod_code": [
        "char q , q ;",
        "cout << cw << endl ;"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘char q’"
    },
    {
      "mod_line": [
        3,
        30,
        32
      ],
      "mod_code": [
        "char q , q ;",
        "cout << cw << endl ;",
        "cout << ccw << endl ;"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘char q’"
    },
    {
      "mod_line": [
        3,
        30,
        32,
        34
      ],
      "mod_code": [
        "char q , q ;",
        "cout << cw << endl ;",
        "cout << ccw << endl ;",
        "cout << endl ;"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘char q’"
    },
    {
      "mod_line": [
        3,
        30,
        34
      ],
      "mod_code": [
        "char q , q ;",
        "cout << cw << endl ;",
        "cout << endl ;"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘char q’"
    },
    {
      "mod_line": [
        3,
        32
      ],
      "mod_code": [
        "char q , q ;",
        "cout << ccw << endl ;"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘char q’"
    },
    {
      "mod_line": [
        3,
        32,
        34
      ],
      "mod_code": [
        "char q , q ;",
        "cout << ccw << endl ;",
        "cout << endl ;"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘char q’"
    },
    {
      "mod_line": [
        3,
        34
      ],
      "mod_code": [
        "char q , q ;",
        "cout << endl ;"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘char q’"
    },
    {
      "mod_line": [
        4,
        6
      ],
      "mod_code": [
        "int u , u = q ;",
        "char r , r = v ;"
      ],
      "err_line": 4,
      "err_msg": "redeclaration of ‘int u’"
    },
    {
      "mod_line": [
        4,
        6,
        9
      ],
      "mod_code": [
        "int u , u = q ;",
        "char r , r = v ;",
        "char s = s ;"
      ],
      "err_line": 4,
      "err_msg": "redeclaration of ‘int u’"
    },
    {
      "mod_line": [
        4,
        6,
        9,
        12
      ],
      "mod_code": [
        "int u , u = q ;",
        "char r , r = v ;",
        "char s = s ;",
        "char t = \" \" ;"
      ],
      "err_line": 4,
      "err_msg": "redeclaration of ‘int u’"
    },
    {
      "mod_line": [
        4,
        6,
        9,
        13
      ],
      "mod_code": [
        "int u , u = q ;",
        "char r , r = v ;",
        "char s = s ;",
        "int x , x = t ;"
      ],
      "err_line": 4,
      "err_msg": "redeclaration of ‘int u’"
    },
    {
      "mod_line": [
        4,
        6,
        9,
        14
      ],
      "mod_code": [
        "int u , u = q ;",
        "char r , r = v ;",
        "char s = s ;",
        "number [ x ] = 4 ;"
      ],
      "err_line": 4,
      "err_msg": "redeclaration of ‘int u’"
    },
    {
      "mod_line": [
        4,
        6,
        9,
        30
      ],
      "mod_code": [
        "int u , u = q ;",
        "char r , r = v ;",
        "char s = s ;",
        "cout << cw << endl ;"
      ],
      "err_line": 4,
      "err_msg": "redeclaration of ‘int u’"
    },
    {
      "mod_line": [
        4,
        6,
        9,
        32
      ],
      "mod_code": [
        "int u , u = q ;",
        "char r , r = v ;",
        "char s = s ;",
        "cout << ccw << endl ;"
      ],
      "err_line": 4,
      "err_msg": "redeclaration of ‘int u’"
    },
    {
      "mod_line": [
        4,
        6,
        9,
        34
      ],
      "mod_code": [
        "int u , u = q ;",
        "char r , r = v ;",
        "char s = s ;",
        "cout << endl ;"
      ],
      "err_line": 4,
      "err_msg": "redeclaration of ‘int u’"
    },
    {
      "mod_line": [
        4,
        6,
        12
      ],
      "mod_code": [
        "int u , u = q ;",
        "char r , r = v ;",
        "char t = \" \" ;"
      ],
      "err_line": 4,
      "err_msg": "redeclaration of ‘int u’"
    },
    {
      "mod_line": [
        4,
        6,
        12,
        13
      ],
      "mod_code": [
        "int u , u = q ;",
        "char r , r = v ;",
        "char t = \" \" ;",
        "int x , x = t ;"
      ],
      "err_line": 4,
      "err_msg": "redeclaration of ‘int u’"
    },
    {
      "mod_line": [
        4,
        6,
        12,
        14
      ],
      "mod_code": [
        "int u , u = q ;",
        "char r , r = v ;",
        "char t = \" \" ;",
        "number [ x ] = 4 ;"
      ],
      "err_line": 4,
      "err_msg": "redeclaration of ‘int u’"
    },
    {
      "mod_line": [
        4,
        6,
        12,
        30
      ],
      "mod_code": [
        "int u , u = q ;",
        "char r , r = v ;",
        "char t = \" \" ;",
        "cout << cw << endl ;"
      ],
      "err_line": 4,
      "err_msg": "redeclaration of ‘int u’"
    },
    {
      "mod_line": [
        4,
        6,
        12,
        32
      ],
      "mod_code": [
        "int u , u = q ;",
        "char r , r = v ;",
        "char t = \" \" ;",
        "cout << ccw << endl ;"
      ],
      "err_line": 4,
      "err_msg": "redeclaration of ‘int u’"
    },
    {
      "mod_line": [
        4,
        6,
        12,
        34
      ],
      "mod_code": [
        "int u , u = q ;",
        "char r , r = v ;",
        "char t = \" \" ;",
        "cout << endl ;"
      ],
      "err_line": 4,
      "err_msg": "redeclaration of ‘int u’"
    },
    {
      "mod_line": [
        4,
        6,
        13
      ],
      "mod_code": [
        "int u , u = q ;",
        "char r , r = v ;",
        "int x , x = t ;"
      ],
      "err_line": 4,
      "err_msg": "redeclaration of ‘int u’"
    },
    {
      "mod_line": [
        4,
        6,
        13,
        14
      ],
      "mod_code": [
        "int u , u = q ;",
        "char r , r = v ;",
        "int x , x = t ;",
        "number [ x ] = 4 ;"
      ],
      "err_line": 4,
      "err_msg": "redeclaration of ‘int u’"
    },
    {
      "mod_line": [
        4,
        6,
        13,
        30
      ],
      "mod_code": [
        "int u , u = q ;",
        "char r , r = v ;",
        "int x , x = t ;",
        "cout << cw << endl ;"
      ],
      "err_line": 4,
      "err_msg": "redeclaration of ‘int u’"
    },
    {
      "mod_line": [
        4,
        6,
        13,
        32
      ],
      "mod_code": [
        "int u , u = q ;",
        "char r , r = v ;",
        "int x , x = t ;",
        "cout << ccw << endl ;"
      ],
      "err_line": 4,
      "err_msg": "redeclaration of ‘int u’"
    },
    {
      "mod_line": [
        4,
        6,
        13,
        34
      ],
      "mod_code": [
        "int u , u = q ;",
        "char r , r = v ;",
        "int x , x = t ;",
        "cout << endl ;"
      ],
      "err_line": 4,
      "err_msg": "redeclaration of ‘int u’"
    },
    {
      "mod_line": [
        4,
        6,
        14
      ],
      "mod_code": [
        "int u , u = q ;",
        "char r , r = v ;",
        "number [ x ] = 4 ;"
      ],
      "err_line": 4,
      "err_msg": "redeclaration of ‘int u’"
    },
    {
      "mod_line": [
        4,
        6,
        14,
        30
      ],
      "mod_code": [
        "int u , u = q ;",
        "char r , r = v ;",
        "number [ x ] = 4 ;",
        "cout << cw << endl ;"
      ],
      "err_line": 4,
      "err_msg": "redeclaration of ‘int u’"
    },
    {
      "mod_line": [
        4,
        6,
        14,
        32
      ],
      "mod_code": [
        "int u , u = q ;",
        "char r , r = v ;",
        "number [ x ] = 4 ;",
        "cout << ccw << endl ;"
      ],
      "err_line": 4,
      "err_msg": "redeclaration of ‘int u’"
    },
    {
      "mod_line": [
        4,
        6,
        14,
        34
      ],
      "mod_code": [
        "int u , u = q ;",
        "char r , r = v ;",
        "number [ x ] = 4 ;",
        "cout << endl ;"
      ],
      "err_line": 4,
      "err_msg": "redeclaration of ‘int u’"
    },
    {
      "mod_line": [
        4,
        6,
        30
      ],
      "mod_code": [
        "int u , u = q ;",
        "char r , r = v ;",
        "cout << cw << endl ;"
      ],
      "err_line": 4,
      "err_msg": "redeclaration of ‘int u’"
    },
    {
      "mod_line": [
        4,
        6,
        30,
        32
      ],
      "mod_code": [
        "int u , u = q ;",
        "char r , r = v ;",
        "cout << cw << endl ;",
        "cout << ccw << endl ;"
      ],
      "err_line": 4,
      "err_msg": "redeclaration of ‘int u’"
    },
    {
      "mod_line": [
        4,
        6,
        30,
        34
      ],
      "mod_code": [
        "int u , u = q ;",
        "char r , r = v ;",
        "cout << cw << endl ;",
        "cout << endl ;"
      ],
      "err_line": 4,
      "err_msg": "redeclaration of ‘int u’"
    },
    {
      "mod_line": [
        4,
        6,
        32
      ],
      "mod_code": [
        "int u , u = q ;",
        "char r , r = v ;",
        "cout << ccw << endl ;"
      ],
      "err_line": 4,
      "err_msg": "redeclaration of ‘int u’"
    },
    {
      "mod_line": [
        4,
        6,
        32,
        34
      ],
      "mod_code": [
        "int u , u = q ;",
        "char r , r = v ;",
        "cout << ccw << endl ;",
        "cout << endl ;"
      ],
      "err_line": 4,
      "err_msg": "redeclaration of ‘int u’"
    },
    {
      "mod_line": [
        4,
        6,
        34
      ],
      "mod_code": [
        "int u , u = q ;",
        "char r , r = v ;",
        "cout << endl ;"
      ],
      "err_line": 4,
      "err_msg": "redeclaration of ‘int u’"
    },
    {
      "mod_line": [
        4,
        9
      ],
      "mod_code": [
        "int u , u = q ;",
        "char s = s ;"
      ],
      "err_line": 4,
      "err_msg": "redeclaration of ‘int u’"
    },
    {
      "mod_line": [
        4,
        9,
        12
      ],
      "mod_code": [
        "int u , u = q ;",
        "char s = s ;",
        "char t = \" \" ;"
      ],
      "err_line": 4,
      "err_msg": "redeclaration of ‘int u’"
    },
    {
      "mod_line": [
        4,
        9,
        12,
        13
      ],
      "mod_code": [
        "int u , u = q ;",
        "char s = s ;",
        "char t = \" \" ;",
        "int x , x = t ;"
      ],
      "err_line": 4,
      "err_msg": "redeclaration of ‘int u’"
    },
    {
      "mod_line": [
        4,
        9,
        12,
        14
      ],
      "mod_code": [
        "int u , u = q ;",
        "char s = s ;",
        "char t = \" \" ;",
        "number [ x ] = 4 ;"
      ],
      "err_line": 4,
      "err_msg": "redeclaration of ‘int u’"
    },
    {
      "mod_line": [
        4,
        9,
        12,
        30
      ],
      "mod_code": [
        "int u , u = q ;",
        "char s = s ;",
        "char t = \" \" ;",
        "cout << cw << endl ;"
      ],
      "err_line": 4,
      "err_msg": "redeclaration of ‘int u’"
    },
    {
      "mod_line": [
        4,
        9,
        12,
        32
      ],
      "mod_code": [
        "int u , u = q ;",
        "char s = s ;",
        "char t = \" \" ;",
        "cout << ccw << endl ;"
      ],
      "err_line": 4,
      "err_msg": "redeclaration of ‘int u’"
    },
    {
      "mod_line": [
        4,
        9,
        12,
        34
      ],
      "mod_code": [
        "int u , u = q ;",
        "char s = s ;",
        "char t = \" \" ;",
        "cout << endl ;"
      ],
      "err_line": 4,
      "err_msg": "redeclaration of ‘int u’"
    },
    {
      "mod_line": [
        4,
        9,
        13
      ],
      "mod_code": [
        "int u , u = q ;",
        "char s = s ;",
        "int x , x = t ;"
      ],
      "err_line": 4,
      "err_msg": "redeclaration of ‘int u’"
    },
    {
      "mod_line": [
        4,
        9,
        13,
        14
      ],
      "mod_code": [
        "int u , u = q ;",
        "char s = s ;",
        "int x , x = t ;",
        "number [ x ] = 4 ;"
      ],
      "err_line": 4,
      "err_msg": "redeclaration of ‘int u’"
    },
    {
      "mod_line": [
        4,
        9,
        13,
        30
      ],
      "mod_code": [
        "int u , u = q ;",
        "char s = s ;",
        "int x , x = t ;",
        "cout << cw << endl ;"
      ],
      "err_line": 4,
      "err_msg": "redeclaration of ‘int u’"
    },
    {
      "mod_line": [
        4,
        9,
        13,
        32
      ],
      "mod_code": [
        "int u , u = q ;",
        "char s = s ;",
        "int x , x = t ;",
        "cout << ccw << endl ;"
      ],
      "err_line": 4,
      "err_msg": "redeclaration of ‘int u’"
    },
    {
      "mod_line": [
        4,
        9,
        13,
        34
      ],
      "mod_code": [
        "int u , u = q ;",
        "char s = s ;",
        "int x , x = t ;",
        "cout << endl ;"
      ],
      "err_line": 4,
      "err_msg": "redeclaration of ‘int u’"
    },
    {
      "mod_line": [
        4,
        9,
        14
      ],
      "mod_code": [
        "int u , u = q ;",
        "char s = s ;",
        "number [ x ] = 4 ;"
      ],
      "err_line": 4,
      "err_msg": "redeclaration of ‘int u’"
    },
    {
      "mod_line": [
        4,
        9,
        14,
        30
      ],
      "mod_code": [
        "int u , u = q ;",
        "char s = s ;",
        "number [ x ] = 4 ;",
        "cout << cw << endl ;"
      ],
      "err_line": 4,
      "err_msg": "redeclaration of ‘int u’"
    },
    {
      "mod_line": [
        4,
        9,
        14,
        32
      ],
      "mod_code": [
        "int u , u = q ;",
        "char s = s ;",
        "number [ x ] = 4 ;",
        "cout << ccw << endl ;"
      ],
      "err_line": 4,
      "err_msg": "redeclaration of ‘int u’"
    },
    {
      "mod_line": [
        4,
        9,
        14,
        34
      ],
      "mod_code": [
        "int u , u = q ;",
        "char s = s ;",
        "number [ x ] = 4 ;",
        "cout << endl ;"
      ],
      "err_line": 4,
      "err_msg": "redeclaration of ‘int u’"
    },
    {
      "mod_line": [
        4,
        9,
        30
      ],
      "mod_code": [
        "int u , u = q ;",
        "char s = s ;",
        "cout << cw << endl ;"
      ],
      "err_line": 4,
      "err_msg": "redeclaration of ‘int u’"
    },
    {
      "mod_line": [
        4,
        9,
        30,
        32
      ],
      "mod_code": [
        "int u , u = q ;",
        "char s = s ;",
        "cout << cw << endl ;",
        "cout << ccw << endl ;"
      ],
      "err_line": 4,
      "err_msg": "redeclaration of ‘int u’"
    },
    {
      "mod_line": [
        4,
        9,
        30,
        34
      ],
      "mod_code": [
        "int u , u = q ;",
        "char s = s ;",
        "cout << cw << endl ;",
        "cout << endl ;"
      ],
      "err_line": 4,
      "err_msg": "redeclaration of ‘int u’"
    },
    {
      "mod_line": [
        4,
        9,
        32
      ],
      "mod_code": [
        "int u , u = q ;",
        "char s = s ;",
        "cout << ccw << endl ;"
      ],
      "err_line": 4,
      "err_msg": "redeclaration of ‘int u’"
    },
    {
      "mod_line": [
        4,
        9,
        32,
        34
      ],
      "mod_code": [
        "int u , u = q ;",
        "char s = s ;",
        "cout << ccw << endl ;",
        "cout << endl ;"
      ],
      "err_line": 4,
      "err_msg": "redeclaration of ‘int u’"
    },
    {
      "mod_line": [
        4,
        9,
        34
      ],
      "mod_code": [
        "int u , u = q ;",
        "char s = s ;",
        "cout << endl ;"
      ],
      "err_line": 4,
      "err_msg": "redeclaration of ‘int u’"
    },
    {
      "mod_line": [
        4,
        12
      ],
      "mod_code": [
        "int u , u = q ;",
        "char t = \" \" ;"
      ],
      "err_line": 4,
      "err_msg": "redeclaration of ‘int u’"
    },
    {
      "mod_line": [
        4,
        12,
        13
      ],
      "mod_code": [
        "int u , u = q ;",
        "char t = \" \" ;",
        "int x , x = t ;"
      ],
      "err_line": 4,
      "err_msg": "redeclaration of ‘int u’"
    },
    {
      "mod_line": [
        4,
        12,
        13,
        14
      ],
      "mod_code": [
        "int u , u = q ;",
        "char t = \" \" ;",
        "int x , x = t ;",
        "number [ x ] = 4 ;"
      ],
      "err_line": 4,
      "err_msg": "redeclaration of ‘int u’"
    },
    {
      "mod_line": [
        4,
        12,
        13,
        30
      ],
      "mod_code": [
        "int u , u = q ;",
        "char t = \" \" ;",
        "int x , x = t ;",
        "cout << cw << endl ;"
      ],
      "err_line": 4,
      "err_msg": "redeclaration of ‘int u’"
    },
    {
      "mod_line": [
        4,
        12,
        13,
        32
      ],
      "mod_code": [
        "int u , u = q ;",
        "char t = \" \" ;",
        "int x , x = t ;",
        "cout << ccw << endl ;"
      ],
      "err_line": 4,
      "err_msg": "redeclaration of ‘int u’"
    },
    {
      "mod_line": [
        4,
        12,
        13,
        34
      ],
      "mod_code": [
        "int u , u = q ;",
        "char t = \" \" ;",
        "int x , x = t ;",
        "cout << endl ;"
      ],
      "err_line": 4,
      "err_msg": "redeclaration of ‘int u’"
    },
    {
      "mod_line": [
        4,
        12,
        14
      ],
      "mod_code": [
        "int u , u = q ;",
        "char t = \" \" ;",
        "number [ x ] = 4 ;"
      ],
      "err_line": 4,
      "err_msg": "redeclaration of ‘int u’"
    },
    {
      "mod_line": [
        4,
        12,
        14,
        30
      ],
      "mod_code": [
        "int u , u = q ;",
        "char t = \" \" ;",
        "number [ x ] = 4 ;",
        "cout << cw << endl ;"
      ],
      "err_line": 4,
      "err_msg": "redeclaration of ‘int u’"
    },
    {
      "mod_line": [
        4,
        12,
        14,
        32
      ],
      "mod_code": [
        "int u , u = q ;",
        "char t = \" \" ;",
        "number [ x ] = 4 ;",
        "cout << ccw << endl ;"
      ],
      "err_line": 4,
      "err_msg": "redeclaration of ‘int u’"
    },
    {
      "mod_line": [
        4,
        12,
        14,
        34
      ],
      "mod_code": [
        "int u , u = q ;",
        "char t = \" \" ;",
        "number [ x ] = 4 ;",
        "cout << endl ;"
      ],
      "err_line": 4,
      "err_msg": "redeclaration of ‘int u’"
    },
    {
      "mod_line": [
        4,
        12,
        30
      ],
      "mod_code": [
        "int u , u = q ;",
        "char t = \" \" ;",
        "cout << cw << endl ;"
      ],
      "err_line": 4,
      "err_msg": "redeclaration of ‘int u’"
    },
    {
      "mod_line": [
        4,
        12,
        30,
        32
      ],
      "mod_code": [
        "int u , u = q ;",
        "char t = \" \" ;",
        "cout << cw << endl ;",
        "cout << ccw << endl ;"
      ],
      "err_line": 4,
      "err_msg": "redeclaration of ‘int u’"
    },
    {
      "mod_line": [
        4,
        12,
        30,
        34
      ],
      "mod_code": [
        "int u , u = q ;",
        "char t = \" \" ;",
        "cout << cw << endl ;",
        "cout << endl ;"
      ],
      "err_line": 4,
      "err_msg": "redeclaration of ‘int u’"
    },
    {
      "mod_line": [
        4,
        12,
        32
      ],
      "mod_code": [
        "int u , u = q ;",
        "char t = \" \" ;",
        "cout << ccw << endl ;"
      ],
      "err_line": 4,
      "err_msg": "redeclaration of ‘int u’"
    },
    {
      "mod_line": [
        4,
        12,
        32,
        34
      ],
      "mod_code": [
        "int u , u = q ;",
        "char t = \" \" ;",
        "cout << ccw << endl ;",
        "cout << endl ;"
      ],
      "err_line": 4,
      "err_msg": "redeclaration of ‘int u’"
    },
    {
      "mod_line": [
        4,
        12,
        34
      ],
      "mod_code": [
        "int u , u = q ;",
        "char t = \" \" ;",
        "cout << endl ;"
      ],
      "err_line": 4,
      "err_msg": "redeclaration of ‘int u’"
    },
    {
      "mod_line": [
        4,
        13
      ],
      "mod_code": [
        "int u , u = q ;",
        "int x , x = t ;"
      ],
      "err_line": 4,
      "err_msg": "redeclaration of ‘int u’"
    },
    {
      "mod_line": [
        4,
        13,
        14
      ],
      "mod_code": [
        "int u , u = q ;",
        "int x , x = t ;",
        "number [ x ] = 4 ;"
      ],
      "err_line": 4,
      "err_msg": "redeclaration of ‘int u’"
    },
    {
      "mod_line": [
        4,
        13,
        14,
        30
      ],
      "mod_code": [
        "int u , u = q ;",
        "int x , x = t ;",
        "number [ x ] = 4 ;",
        "cout << cw << endl ;"
      ],
      "err_line": 4,
      "err_msg": "redeclaration of ‘int u’"
    },
    {
      "mod_line": [
        4,
        13,
        14,
        32
      ],
      "mod_code": [
        "int u , u = q ;",
        "int x , x = t ;",
        "number [ x ] = 4 ;",
        "cout << ccw << endl ;"
      ],
      "err_line": 4,
      "err_msg": "redeclaration of ‘int u’"
    },
    {
      "mod_line": [
        4,
        13,
        14,
        34
      ],
      "mod_code": [
        "int u , u = q ;",
        "int x , x = t ;",
        "number [ x ] = 4 ;",
        "cout << endl ;"
      ],
      "err_line": 4,
      "err_msg": "redeclaration of ‘int u’"
    },
    {
      "mod_line": [
        4,
        13,
        30
      ],
      "mod_code": [
        "int u , u = q ;",
        "int x , x = t ;",
        "cout << cw << endl ;"
      ],
      "err_line": 4,
      "err_msg": "redeclaration of ‘int u’"
    },
    {
      "mod_line": [
        4,
        13,
        30,
        32
      ],
      "mod_code": [
        "int u , u = q ;",
        "int x , x = t ;",
        "cout << cw << endl ;",
        "cout << ccw << endl ;"
      ],
      "err_line": 4,
      "err_msg": "redeclaration of ‘int u’"
    },
    {
      "mod_line": [
        4,
        13,
        30,
        34
      ],
      "mod_code": [
        "int u , u = q ;",
        "int x , x = t ;",
        "cout << cw << endl ;",
        "cout << endl ;"
      ],
      "err_line": 4,
      "err_msg": "redeclaration of ‘int u’"
    },
    {
      "mod_line": [
        4,
        13,
        32
      ],
      "mod_code": [
        "int u , u = q ;",
        "int x , x = t ;",
        "cout << ccw << endl ;"
      ],
      "err_line": 4,
      "err_msg": "redeclaration of ‘int u’"
    },
    {
      "mod_line": [
        4,
        13,
        32,
        34
      ],
      "mod_code": [
        "int u , u = q ;",
        "int x , x = t ;",
        "cout << ccw << endl ;",
        "cout << endl ;"
      ],
      "err_line": 4,
      "err_msg": "redeclaration of ‘int u’"
    },
    {
      "mod_line": [
        4,
        13,
        34
      ],
      "mod_code": [
        "int u , u = q ;",
        "int x , x = t ;",
        "cout << endl ;"
      ],
      "err_line": 4,
      "err_msg": "redeclaration of ‘int u’"
    },
    {
      "mod_line": [
        4,
        14
      ],
      "mod_code": [
        "int u , u = q ;",
        "number [ x ] = 4 ;"
      ],
      "err_line": 4,
      "err_msg": "redeclaration of ‘int u’"
    },
    {
      "mod_line": [
        4,
        14,
        30
      ],
      "mod_code": [
        "int u , u = q ;",
        "number [ x ] = 4 ;",
        "cout << cw << endl ;"
      ],
      "err_line": 4,
      "err_msg": "redeclaration of ‘int u’"
    },
    {
      "mod_line": [
        4,
        14,
        30,
        32
      ],
      "mod_code": [
        "int u , u = q ;",
        "number [ x ] = 4 ;",
        "cout << cw << endl ;",
        "cout << ccw << endl ;"
      ],
      "err_line": 4,
      "err_msg": "redeclaration of ‘int u’"
    },
    {
      "mod_line": [
        4,
        14,
        30,
        34
      ],
      "mod_code": [
        "int u , u = q ;",
        "number [ x ] = 4 ;",
        "cout << cw << endl ;",
        "cout << endl ;"
      ],
      "err_line": 4,
      "err_msg": "redeclaration of ‘int u’"
    },
    {
      "mod_line": [
        4,
        14,
        32
      ],
      "mod_code": [
        "int u , u = q ;",
        "number [ x ] = 4 ;",
        "cout << ccw << endl ;"
      ],
      "err_line": 4,
      "err_msg": "redeclaration of ‘int u’"
    },
    {
      "mod_line": [
        4,
        14,
        32,
        34
      ],
      "mod_code": [
        "int u , u = q ;",
        "number [ x ] = 4 ;",
        "cout << ccw << endl ;",
        "cout << endl ;"
      ],
      "err_line": 4,
      "err_msg": "redeclaration of ‘int u’"
    },
    {
      "mod_line": [
        4,
        14,
        34
      ],
      "mod_code": [
        "int u , u = q ;",
        "number [ x ] = 4 ;",
        "cout << endl ;"
      ],
      "err_line": 4,
      "err_msg": "redeclaration of ‘int u’"
    },
    {
      "mod_line": [
        4,
        30
      ],
      "mod_code": [
        "int u , u = q ;",
        "cout << cw << endl ;"
      ],
      "err_line": 4,
      "err_msg": "redeclaration of ‘int u’"
    },
    {
      "mod_line": [
        4,
        30,
        32
      ],
      "mod_code": [
        "int u , u = q ;",
        "cout << cw << endl ;",
        "cout << ccw << endl ;"
      ],
      "err_line": 4,
      "err_msg": "redeclaration of ‘int u’"
    },
    {
      "mod_line": [
        4,
        30,
        32,
        34
      ],
      "mod_code": [
        "int u , u = q ;",
        "cout << cw << endl ;",
        "cout << ccw << endl ;",
        "cout << endl ;"
      ],
      "err_line": 4,
      "err_msg": "redeclaration of ‘int u’"
    },
    {
      "mod_line": [
        4,
        30,
        34
      ],
      "mod_code": [
        "int u , u = q ;",
        "cout << cw << endl ;",
        "cout << endl ;"
      ],
      "err_line": 4,
      "err_msg": "redeclaration of ‘int u’"
    },
    {
      "mod_line": [
        4,
        32
      ],
      "mod_code": [
        "int u , u = q ;",
        "cout << ccw << endl ;"
      ],
      "err_line": 4,
      "err_msg": "redeclaration of ‘int u’"
    },
    {
      "mod_line": [
        4,
        32,
        34
      ],
      "mod_code": [
        "int u , u = q ;",
        "cout << ccw << endl ;",
        "cout << endl ;"
      ],
      "err_line": 4,
      "err_msg": "redeclaration of ‘int u’"
    },
    {
      "mod_line": [
        4,
        34
      ],
      "mod_code": [
        "int u , u = q ;",
        "cout << endl ;"
      ],
      "err_line": 4,
      "err_msg": "redeclaration of ‘int u’"
    },
    {
      "mod_line": [
        6,
        9
      ],
      "mod_code": [
        "char r , r = v ;",
        "char s = s ;"
      ],
      "err_line": 6,
      "err_msg": "redeclaration of ‘char r’"
    },
    {
      "mod_line": [
        6,
        9,
        12
      ],
      "mod_code": [
        "char r , r = v ;",
        "char s = s ;",
        "char t = \" \" ;"
      ],
      "err_line": 6,
      "err_msg": "redeclaration of ‘char r’"
    },
    {
      "mod_line": [
        6,
        9,
        12,
        13
      ],
      "mod_code": [
        "char r , r = v ;",
        "char s = s ;",
        "char t = \" \" ;",
        "int x , x = t ;"
      ],
      "err_line": 6,
      "err_msg": "redeclaration of ‘char r’"
    },
    {
      "mod_line": [
        6,
        9,
        12,
        14
      ],
      "mod_code": [
        "char r , r = v ;",
        "char s = s ;",
        "char t = \" \" ;",
        "number [ x ] = 4 ;"
      ],
      "err_line": 6,
      "err_msg": "redeclaration of ‘char r’"
    },
    {
      "mod_line": [
        6,
        9,
        12,
        30
      ],
      "mod_code": [
        "char r , r = v ;",
        "char s = s ;",
        "char t = \" \" ;",
        "cout << cw << endl ;"
      ],
      "err_line": 6,
      "err_msg": "redeclaration of ‘char r’"
    },
    {
      "mod_line": [
        6,
        9,
        12,
        32
      ],
      "mod_code": [
        "char r , r = v ;",
        "char s = s ;",
        "char t = \" \" ;",
        "cout << ccw << endl ;"
      ],
      "err_line": 6,
      "err_msg": "redeclaration of ‘char r’"
    },
    {
      "mod_line": [
        6,
        9,
        12,
        34
      ],
      "mod_code": [
        "char r , r = v ;",
        "char s = s ;",
        "char t = \" \" ;",
        "cout << endl ;"
      ],
      "err_line": 6,
      "err_msg": "redeclaration of ‘char r’"
    },
    {
      "mod_line": [
        6,
        9,
        13
      ],
      "mod_code": [
        "char r , r = v ;",
        "char s = s ;",
        "int x , x = t ;"
      ],
      "err_line": 6,
      "err_msg": "redeclaration of ‘char r’"
    },
    {
      "mod_line": [
        6,
        9,
        13,
        14
      ],
      "mod_code": [
        "char r , r = v ;",
        "char s = s ;",
        "int x , x = t ;",
        "number [ x ] = 4 ;"
      ],
      "err_line": 6,
      "err_msg": "redeclaration of ‘char r’"
    },
    {
      "mod_line": [
        6,
        9,
        13,
        30
      ],
      "mod_code": [
        "char r , r = v ;",
        "char s = s ;",
        "int x , x = t ;",
        "cout << cw << endl ;"
      ],
      "err_line": 6,
      "err_msg": "redeclaration of ‘char r’"
    },
    {
      "mod_line": [
        6,
        9,
        13,
        32
      ],
      "mod_code": [
        "char r , r = v ;",
        "char s = s ;",
        "int x , x = t ;",
        "cout << ccw << endl ;"
      ],
      "err_line": 6,
      "err_msg": "redeclaration of ‘char r’"
    },
    {
      "mod_line": [
        6,
        9,
        13,
        34
      ],
      "mod_code": [
        "char r , r = v ;",
        "char s = s ;",
        "int x , x = t ;",
        "cout << endl ;"
      ],
      "err_line": 6,
      "err_msg": "redeclaration of ‘char r’"
    },
    {
      "mod_line": [
        6,
        9,
        14
      ],
      "mod_code": [
        "char r , r = v ;",
        "char s = s ;",
        "number [ x ] = 4 ;"
      ],
      "err_line": 6,
      "err_msg": "redeclaration of ‘char r’"
    },
    {
      "mod_line": [
        6,
        9,
        14,
        30
      ],
      "mod_code": [
        "char r , r = v ;",
        "char s = s ;",
        "number [ x ] = 4 ;",
        "cout << cw << endl ;"
      ],
      "err_line": 6,
      "err_msg": "redeclaration of ‘char r’"
    },
    {
      "mod_line": [
        6,
        9,
        14,
        32
      ],
      "mod_code": [
        "char r , r = v ;",
        "char s = s ;",
        "number [ x ] = 4 ;",
        "cout << ccw << endl ;"
      ],
      "err_line": 6,
      "err_msg": "redeclaration of ‘char r’"
    },
    {
      "mod_line": [
        6,
        9,
        14,
        34
      ],
      "mod_code": [
        "char r , r = v ;",
        "char s = s ;",
        "number [ x ] = 4 ;",
        "cout << endl ;"
      ],
      "err_line": 6,
      "err_msg": "redeclaration of ‘char r’"
    },
    {
      "mod_line": [
        6,
        9,
        30
      ],
      "mod_code": [
        "char r , r = v ;",
        "char s = s ;",
        "cout << cw << endl ;"
      ],
      "err_line": 6,
      "err_msg": "redeclaration of ‘char r’"
    },
    {
      "mod_line": [
        6,
        9,
        30,
        32
      ],
      "mod_code": [
        "char r , r = v ;",
        "char s = s ;",
        "cout << cw << endl ;",
        "cout << ccw << endl ;"
      ],
      "err_line": 6,
      "err_msg": "redeclaration of ‘char r’"
    },
    {
      "mod_line": [
        6,
        9,
        30,
        34
      ],
      "mod_code": [
        "char r , r = v ;",
        "char s = s ;",
        "cout << cw << endl ;",
        "cout << endl ;"
      ],
      "err_line": 6,
      "err_msg": "redeclaration of ‘char r’"
    },
    {
      "mod_line": [
        6,
        9,
        32
      ],
      "mod_code": [
        "char r , r = v ;",
        "char s = s ;",
        "cout << ccw << endl ;"
      ],
      "err_line": 6,
      "err_msg": "redeclaration of ‘char r’"
    },
    {
      "mod_line": [
        6,
        9,
        32,
        34
      ],
      "mod_code": [
        "char r , r = v ;",
        "char s = s ;",
        "cout << ccw << endl ;",
        "cout << endl ;"
      ],
      "err_line": 6,
      "err_msg": "redeclaration of ‘char r’"
    },
    {
      "mod_line": [
        6,
        9,
        34
      ],
      "mod_code": [
        "char r , r = v ;",
        "char s = s ;",
        "cout << endl ;"
      ],
      "err_line": 6,
      "err_msg": "redeclaration of ‘char r’"
    },
    {
      "mod_line": [
        6,
        12
      ],
      "mod_code": [
        "char r , r = v ;",
        "char t = \" \" ;"
      ],
      "err_line": 6,
      "err_msg": "redeclaration of ‘char r’"
    },
    {
      "mod_line": [
        6,
        12,
        13
      ],
      "mod_code": [
        "char r , r = v ;",
        "char t = \" \" ;",
        "int x , x = t ;"
      ],
      "err_line": 6,
      "err_msg": "redeclaration of ‘char r’"
    },
    {
      "mod_line": [
        6,
        12,
        13,
        14
      ],
      "mod_code": [
        "char r , r = v ;",
        "char t = \" \" ;",
        "int x , x = t ;",
        "number [ x ] = 4 ;"
      ],
      "err_line": 6,
      "err_msg": "redeclaration of ‘char r’"
    },
    {
      "mod_line": [
        6,
        12,
        13,
        30
      ],
      "mod_code": [
        "char r , r = v ;",
        "char t = \" \" ;",
        "int x , x = t ;",
        "cout << cw << endl ;"
      ],
      "err_line": 6,
      "err_msg": "redeclaration of ‘char r’"
    },
    {
      "mod_line": [
        6,
        12,
        13,
        32
      ],
      "mod_code": [
        "char r , r = v ;",
        "char t = \" \" ;",
        "int x , x = t ;",
        "cout << ccw << endl ;"
      ],
      "err_line": 6,
      "err_msg": "redeclaration of ‘char r’"
    },
    {
      "mod_line": [
        6,
        12,
        13,
        34
      ],
      "mod_code": [
        "char r , r = v ;",
        "char t = \" \" ;",
        "int x , x = t ;",
        "cout << endl ;"
      ],
      "err_line": 6,
      "err_msg": "redeclaration of ‘char r’"
    },
    {
      "mod_line": [
        6,
        12,
        14
      ],
      "mod_code": [
        "char r , r = v ;",
        "char t = \" \" ;",
        "number [ x ] = 4 ;"
      ],
      "err_line": 6,
      "err_msg": "redeclaration of ‘char r’"
    },
    {
      "mod_line": [
        6,
        12,
        14,
        30
      ],
      "mod_code": [
        "char r , r = v ;",
        "char t = \" \" ;",
        "number [ x ] = 4 ;",
        "cout << cw << endl ;"
      ],
      "err_line": 6,
      "err_msg": "redeclaration of ‘char r’"
    },
    {
      "mod_line": [
        6,
        12,
        14,
        32
      ],
      "mod_code": [
        "char r , r = v ;",
        "char t = \" \" ;",
        "number [ x ] = 4 ;",
        "cout << ccw << endl ;"
      ],
      "err_line": 6,
      "err_msg": "redeclaration of ‘char r’"
    },
    {
      "mod_line": [
        6,
        12,
        14,
        34
      ],
      "mod_code": [
        "char r , r = v ;",
        "char t = \" \" ;",
        "number [ x ] = 4 ;",
        "cout << endl ;"
      ],
      "err_line": 6,
      "err_msg": "redeclaration of ‘char r’"
    },
    {
      "mod_line": [
        6,
        12,
        30
      ],
      "mod_code": [
        "char r , r = v ;",
        "char t = \" \" ;",
        "cout << cw << endl ;"
      ],
      "err_line": 6,
      "err_msg": "redeclaration of ‘char r’"
    },
    {
      "mod_line": [
        6,
        12,
        30,
        32
      ],
      "mod_code": [
        "char r , r = v ;",
        "char t = \" \" ;",
        "cout << cw << endl ;",
        "cout << ccw << endl ;"
      ],
      "err_line": 6,
      "err_msg": "redeclaration of ‘char r’"
    },
    {
      "mod_line": [
        6,
        12,
        30,
        34
      ],
      "mod_code": [
        "char r , r = v ;",
        "char t = \" \" ;",
        "cout << cw << endl ;",
        "cout << endl ;"
      ],
      "err_line": 6,
      "err_msg": "redeclaration of ‘char r’"
    },
    {
      "mod_line": [
        6,
        12,
        32
      ],
      "mod_code": [
        "char r , r = v ;",
        "char t = \" \" ;",
        "cout << ccw << endl ;"
      ],
      "err_line": 6,
      "err_msg": "redeclaration of ‘char r’"
    },
    {
      "mod_line": [
        6,
        12,
        32,
        34
      ],
      "mod_code": [
        "char r , r = v ;",
        "char t = \" \" ;",
        "cout << ccw << endl ;",
        "cout << endl ;"
      ],
      "err_line": 6,
      "err_msg": "redeclaration of ‘char r’"
    },
    {
      "mod_line": [
        6,
        12,
        34
      ],
      "mod_code": [
        "char r , r = v ;",
        "char t = \" \" ;",
        "cout << endl ;"
      ],
      "err_line": 6,
      "err_msg": "redeclaration of ‘char r’"
    },
    {
      "mod_line": [
        6,
        13
      ],
      "mod_code": [
        "char r , r = v ;",
        "int x , x = t ;"
      ],
      "err_line": 6,
      "err_msg": "redeclaration of ‘char r’"
    },
    {
      "mod_line": [
        6,
        13,
        14
      ],
      "mod_code": [
        "char r , r = v ;",
        "int x , x = t ;",
        "number [ x ] = 4 ;"
      ],
      "err_line": 6,
      "err_msg": "redeclaration of ‘char r’"
    },
    {
      "mod_line": [
        6,
        13,
        14,
        30
      ],
      "mod_code": [
        "char r , r = v ;",
        "int x , x = t ;",
        "number [ x ] = 4 ;",
        "cout << cw << endl ;"
      ],
      "err_line": 6,
      "err_msg": "redeclaration of ‘char r’"
    },
    {
      "mod_line": [
        6,
        13,
        14,
        32
      ],
      "mod_code": [
        "char r , r = v ;",
        "int x , x = t ;",
        "number [ x ] = 4 ;",
        "cout << ccw << endl ;"
      ],
      "err_line": 6,
      "err_msg": "redeclaration of ‘char r’"
    },
    {
      "mod_line": [
        6,
        13,
        14,
        34
      ],
      "mod_code": [
        "char r , r = v ;",
        "int x , x = t ;",
        "number [ x ] = 4 ;",
        "cout << endl ;"
      ],
      "err_line": 6,
      "err_msg": "redeclaration of ‘char r’"
    },
    {
      "mod_line": [
        6,
        13,
        30
      ],
      "mod_code": [
        "char r , r = v ;",
        "int x , x = t ;",
        "cout << cw << endl ;"
      ],
      "err_line": 6,
      "err_msg": "redeclaration of ‘char r’"
    },
    {
      "mod_line": [
        6,
        13,
        30,
        32
      ],
      "mod_code": [
        "char r , r = v ;",
        "int x , x = t ;",
        "cout << cw << endl ;",
        "cout << ccw << endl ;"
      ],
      "err_line": 6,
      "err_msg": "redeclaration of ‘char r’"
    },
    {
      "mod_line": [
        6,
        13,
        30,
        34
      ],
      "mod_code": [
        "char r , r = v ;",
        "int x , x = t ;",
        "cout << cw << endl ;",
        "cout << endl ;"
      ],
      "err_line": 6,
      "err_msg": "redeclaration of ‘char r’"
    },
    {
      "mod_line": [
        6,
        13,
        32
      ],
      "mod_code": [
        "char r , r = v ;",
        "int x , x = t ;",
        "cout << ccw << endl ;"
      ],
      "err_line": 6,
      "err_msg": "redeclaration of ‘char r’"
    },
    {
      "mod_line": [
        6,
        13,
        32,
        34
      ],
      "mod_code": [
        "char r , r = v ;",
        "int x , x = t ;",
        "cout << ccw << endl ;",
        "cout << endl ;"
      ],
      "err_line": 6,
      "err_msg": "redeclaration of ‘char r’"
    },
    {
      "mod_line": [
        6,
        13,
        34
      ],
      "mod_code": [
        "char r , r = v ;",
        "int x , x = t ;",
        "cout << endl ;"
      ],
      "err_line": 6,
      "err_msg": "redeclaration of ‘char r’"
    },
    {
      "mod_line": [
        6,
        14
      ],
      "mod_code": [
        "char r , r = v ;",
        "number [ x ] = 4 ;"
      ],
      "err_line": 6,
      "err_msg": "redeclaration of ‘char r’"
    },
    {
      "mod_line": [
        6,
        14,
        30
      ],
      "mod_code": [
        "char r , r = v ;",
        "number [ x ] = 4 ;",
        "cout << cw << endl ;"
      ],
      "err_line": 6,
      "err_msg": "redeclaration of ‘char r’"
    },
    {
      "mod_line": [
        6,
        14,
        30,
        32
      ],
      "mod_code": [
        "char r , r = v ;",
        "number [ x ] = 4 ;",
        "cout << cw << endl ;",
        "cout << ccw << endl ;"
      ],
      "err_line": 6,
      "err_msg": "redeclaration of ‘char r’"
    },
    {
      "mod_line": [
        6,
        14,
        30,
        34
      ],
      "mod_code": [
        "char r , r = v ;",
        "number [ x ] = 4 ;",
        "cout << cw << endl ;",
        "cout << endl ;"
      ],
      "err_line": 6,
      "err_msg": "redeclaration of ‘char r’"
    },
    {
      "mod_line": [
        6,
        14,
        32
      ],
      "mod_code": [
        "char r , r = v ;",
        "number [ x ] = 4 ;",
        "cout << ccw << endl ;"
      ],
      "err_line": 6,
      "err_msg": "redeclaration of ‘char r’"
    },
    {
      "mod_line": [
        6,
        14,
        32,
        34
      ],
      "mod_code": [
        "char r , r = v ;",
        "number [ x ] = 4 ;",
        "cout << ccw << endl ;",
        "cout << endl ;"
      ],
      "err_line": 6,
      "err_msg": "redeclaration of ‘char r’"
    },
    {
      "mod_line": [
        6,
        14,
        34
      ],
      "mod_code": [
        "char r , r = v ;",
        "number [ x ] = 4 ;",
        "cout << endl ;"
      ],
      "err_line": 6,
      "err_msg": "redeclaration of ‘char r’"
    },
    {
      "mod_line": [
        6,
        30
      ],
      "mod_code": [
        "char r , r = v ;",
        "cout << cw << endl ;"
      ],
      "err_line": 6,
      "err_msg": "redeclaration of ‘char r’"
    },
    {
      "mod_line": [
        6,
        30,
        32
      ],
      "mod_code": [
        "char r , r = v ;",
        "cout << cw << endl ;",
        "cout << ccw << endl ;"
      ],
      "err_line": 6,
      "err_msg": "redeclaration of ‘char r’"
    },
    {
      "mod_line": [
        6,
        30,
        32,
        34
      ],
      "mod_code": [
        "char r , r = v ;",
        "cout << cw << endl ;",
        "cout << ccw << endl ;",
        "cout << endl ;"
      ],
      "err_line": 6,
      "err_msg": "redeclaration of ‘char r’"
    },
    {
      "mod_line": [
        6,
        30,
        34
      ],
      "mod_code": [
        "char r , r = v ;",
        "cout << cw << endl ;",
        "cout << endl ;"
      ],
      "err_line": 6,
      "err_msg": "redeclaration of ‘char r’"
    },
    {
      "mod_line": [
        6,
        32
      ],
      "mod_code": [
        "char r , r = v ;",
        "cout << ccw << endl ;"
      ],
      "err_line": 6,
      "err_msg": "redeclaration of ‘char r’"
    },
    {
      "mod_line": [
        6,
        32,
        34
      ],
      "mod_code": [
        "char r , r = v ;",
        "cout << ccw << endl ;",
        "cout << endl ;"
      ],
      "err_line": 6,
      "err_msg": "redeclaration of ‘char r’"
    },
    {
      "mod_line": [
        6,
        34
      ],
      "mod_code": [
        "char r , r = v ;",
        "cout << endl ;"
      ],
      "err_line": 6,
      "err_msg": "redeclaration of ‘char r’"
    },
    {
      "mod_line": [
        9,
        12
      ],
      "mod_code": [
        "char s = s ;",
        "char t = \" \" ;"
      ],
      "err_line": 12,
      "err_msg": "invalid conversion from ‘const char*’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        9,
        12,
        13
      ],
      "mod_code": [
        "char s = s ;",
        "char t = \" \" ;",
        "int x , x = t ;"
      ],
      "err_line": 12,
      "err_msg": "invalid conversion from ‘const char*’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        9,
        12,
        13,
        14
      ],
      "mod_code": [
        "char s = s ;",
        "char t = \" \" ;",
        "int x , x = t ;",
        "number [ x ] = 4 ;"
      ],
      "err_line": 12,
      "err_msg": "invalid conversion from ‘const char*’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        9,
        12,
        13,
        30
      ],
      "mod_code": [
        "char s = s ;",
        "char t = \" \" ;",
        "int x , x = t ;",
        "cout << cw << endl ;"
      ],
      "err_line": 12,
      "err_msg": "invalid conversion from ‘const char*’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        9,
        12,
        13,
        32
      ],
      "mod_code": [
        "char s = s ;",
        "char t = \" \" ;",
        "int x , x = t ;",
        "cout << ccw << endl ;"
      ],
      "err_line": 12,
      "err_msg": "invalid conversion from ‘const char*’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        9,
        12,
        13,
        34
      ],
      "mod_code": [
        "char s = s ;",
        "char t = \" \" ;",
        "int x , x = t ;",
        "cout << endl ;"
      ],
      "err_line": 12,
      "err_msg": "invalid conversion from ‘const char*’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        9,
        12,
        14
      ],
      "mod_code": [
        "char s = s ;",
        "char t = \" \" ;",
        "number [ x ] = 4 ;"
      ],
      "err_line": 12,
      "err_msg": "invalid conversion from ‘const char*’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        9,
        12,
        14,
        30
      ],
      "mod_code": [
        "char s = s ;",
        "char t = \" \" ;",
        "number [ x ] = 4 ;",
        "cout << cw << endl ;"
      ],
      "err_line": 12,
      "err_msg": "invalid conversion from ‘const char*’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        9,
        12,
        14,
        32
      ],
      "mod_code": [
        "char s = s ;",
        "char t = \" \" ;",
        "number [ x ] = 4 ;",
        "cout << ccw << endl ;"
      ],
      "err_line": 12,
      "err_msg": "invalid conversion from ‘const char*’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        9,
        12,
        14,
        34
      ],
      "mod_code": [
        "char s = s ;",
        "char t = \" \" ;",
        "number [ x ] = 4 ;",
        "cout << endl ;"
      ],
      "err_line": 12,
      "err_msg": "invalid conversion from ‘const char*’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        9,
        12,
        30
      ],
      "mod_code": [
        "char s = s ;",
        "char t = \" \" ;",
        "cout << cw << endl ;"
      ],
      "err_line": 12,
      "err_msg": "invalid conversion from ‘const char*’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        9,
        12,
        30,
        32
      ],
      "mod_code": [
        "char s = s ;",
        "char t = \" \" ;",
        "cout << cw << endl ;",
        "cout << ccw << endl ;"
      ],
      "err_line": 12,
      "err_msg": "invalid conversion from ‘const char*’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        9,
        12,
        30,
        34
      ],
      "mod_code": [
        "char s = s ;",
        "char t = \" \" ;",
        "cout << cw << endl ;",
        "cout << endl ;"
      ],
      "err_line": 12,
      "err_msg": "invalid conversion from ‘const char*’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        9,
        12,
        32
      ],
      "mod_code": [
        "char s = s ;",
        "char t = \" \" ;",
        "cout << ccw << endl ;"
      ],
      "err_line": 12,
      "err_msg": "invalid conversion from ‘const char*’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        9,
        12,
        32,
        34
      ],
      "mod_code": [
        "char s = s ;",
        "char t = \" \" ;",
        "cout << ccw << endl ;",
        "cout << endl ;"
      ],
      "err_line": 12,
      "err_msg": "invalid conversion from ‘const char*’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        9,
        12,
        34
      ],
      "mod_code": [
        "char s = s ;",
        "char t = \" \" ;",
        "cout << endl ;"
      ],
      "err_line": 12,
      "err_msg": "invalid conversion from ‘const char*’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        9,
        13
      ],
      "mod_code": [
        "char s = s ;",
        "int x , x = t ;"
      ],
      "err_line": 13,
      "err_msg": "redeclaration of ‘int x’"
    },
    {
      "mod_line": [
        9,
        13,
        14
      ],
      "mod_code": [
        "char s = s ;",
        "int x , x = t ;",
        "number [ x ] = 4 ;"
      ],
      "err_line": 13,
      "err_msg": "redeclaration of ‘int x’"
    },
    {
      "mod_line": [
        9,
        13,
        14,
        30
      ],
      "mod_code": [
        "char s = s ;",
        "int x , x = t ;",
        "number [ x ] = 4 ;",
        "cout << cw << endl ;"
      ],
      "err_line": 13,
      "err_msg": "redeclaration of ‘int x’"
    },
    {
      "mod_line": [
        9,
        13,
        14,
        32
      ],
      "mod_code": [
        "char s = s ;",
        "int x , x = t ;",
        "number [ x ] = 4 ;",
        "cout << ccw << endl ;"
      ],
      "err_line": 13,
      "err_msg": "redeclaration of ‘int x’"
    },
    {
      "mod_line": [
        9,
        13,
        14,
        34
      ],
      "mod_code": [
        "char s = s ;",
        "int x , x = t ;",
        "number [ x ] = 4 ;",
        "cout << endl ;"
      ],
      "err_line": 13,
      "err_msg": "redeclaration of ‘int x’"
    },
    {
      "mod_line": [
        9,
        13,
        30
      ],
      "mod_code": [
        "char s = s ;",
        "int x , x = t ;",
        "cout << cw << endl ;"
      ],
      "err_line": 13,
      "err_msg": "redeclaration of ‘int x’"
    },
    {
      "mod_line": [
        9,
        13,
        30,
        32
      ],
      "mod_code": [
        "char s = s ;",
        "int x , x = t ;",
        "cout << cw << endl ;",
        "cout << ccw << endl ;"
      ],
      "err_line": 13,
      "err_msg": "redeclaration of ‘int x’"
    },
    {
      "mod_line": [
        9,
        13,
        30,
        34
      ],
      "mod_code": [
        "char s = s ;",
        "int x , x = t ;",
        "cout << cw << endl ;",
        "cout << endl ;"
      ],
      "err_line": 13,
      "err_msg": "redeclaration of ‘int x’"
    },
    {
      "mod_line": [
        9,
        13,
        32
      ],
      "mod_code": [
        "char s = s ;",
        "int x , x = t ;",
        "cout << ccw << endl ;"
      ],
      "err_line": 13,
      "err_msg": "redeclaration of ‘int x’"
    },
    {
      "mod_line": [
        9,
        13,
        32,
        34
      ],
      "mod_code": [
        "char s = s ;",
        "int x , x = t ;",
        "cout << ccw << endl ;",
        "cout << endl ;"
      ],
      "err_line": 13,
      "err_msg": "redeclaration of ‘int x’"
    },
    {
      "mod_line": [
        9,
        13,
        34
      ],
      "mod_code": [
        "char s = s ;",
        "int x , x = t ;",
        "cout << endl ;"
      ],
      "err_line": 13,
      "err_msg": "redeclaration of ‘int x’"
    },
    {
      "mod_line": [
        12,
        13
      ],
      "mod_code": [
        "char t = \" \" ;",
        "int x , x = t ;"
      ],
      "err_line": 12,
      "err_msg": "invalid conversion from ‘const char*’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        12,
        13,
        14
      ],
      "mod_code": [
        "char t = \" \" ;",
        "int x , x = t ;",
        "number [ x ] = 4 ;"
      ],
      "err_line": 12,
      "err_msg": "invalid conversion from ‘const char*’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        12,
        13,
        14,
        30
      ],
      "mod_code": [
        "char t = \" \" ;",
        "int x , x = t ;",
        "number [ x ] = 4 ;",
        "cout << cw << endl ;"
      ],
      "err_line": 12,
      "err_msg": "invalid conversion from ‘const char*’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        12,
        13,
        14,
        32
      ],
      "mod_code": [
        "char t = \" \" ;",
        "int x , x = t ;",
        "number [ x ] = 4 ;",
        "cout << ccw << endl ;"
      ],
      "err_line": 12,
      "err_msg": "invalid conversion from ‘const char*’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        12,
        13,
        14,
        34
      ],
      "mod_code": [
        "char t = \" \" ;",
        "int x , x = t ;",
        "number [ x ] = 4 ;",
        "cout << endl ;"
      ],
      "err_line": 12,
      "err_msg": "invalid conversion from ‘const char*’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        12,
        13,
        30
      ],
      "mod_code": [
        "char t = \" \" ;",
        "int x , x = t ;",
        "cout << cw << endl ;"
      ],
      "err_line": 12,
      "err_msg": "invalid conversion from ‘const char*’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        12,
        13,
        30,
        32
      ],
      "mod_code": [
        "char t = \" \" ;",
        "int x , x = t ;",
        "cout << cw << endl ;",
        "cout << ccw << endl ;"
      ],
      "err_line": 12,
      "err_msg": "invalid conversion from ‘const char*’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        12,
        13,
        30,
        34
      ],
      "mod_code": [
        "char t = \" \" ;",
        "int x , x = t ;",
        "cout << cw << endl ;",
        "cout << endl ;"
      ],
      "err_line": 12,
      "err_msg": "invalid conversion from ‘const char*’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        12,
        13,
        32
      ],
      "mod_code": [
        "char t = \" \" ;",
        "int x , x = t ;",
        "cout << ccw << endl ;"
      ],
      "err_line": 12,
      "err_msg": "invalid conversion from ‘const char*’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        12,
        13,
        32,
        34
      ],
      "mod_code": [
        "char t = \" \" ;",
        "int x , x = t ;",
        "cout << ccw << endl ;",
        "cout << endl ;"
      ],
      "err_line": 12,
      "err_msg": "invalid conversion from ‘const char*’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        12,
        13,
        34
      ],
      "mod_code": [
        "char t = \" \" ;",
        "int x , x = t ;",
        "cout << endl ;"
      ],
      "err_line": 12,
      "err_msg": "invalid conversion from ‘const char*’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        12,
        14
      ],
      "mod_code": [
        "char t = \" \" ;",
        "number [ x ] = 4 ;"
      ],
      "err_line": 12,
      "err_msg": "invalid conversion from ‘const char*’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        12,
        14,
        30
      ],
      "mod_code": [
        "char t = \" \" ;",
        "number [ x ] = 4 ;",
        "cout << cw << endl ;"
      ],
      "err_line": 12,
      "err_msg": "invalid conversion from ‘const char*’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        12,
        14,
        30,
        32
      ],
      "mod_code": [
        "char t = \" \" ;",
        "number [ x ] = 4 ;",
        "cout << cw << endl ;",
        "cout << ccw << endl ;"
      ],
      "err_line": 12,
      "err_msg": "invalid conversion from ‘const char*’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        12,
        14,
        30,
        34
      ],
      "mod_code": [
        "char t = \" \" ;",
        "number [ x ] = 4 ;",
        "cout << cw << endl ;",
        "cout << endl ;"
      ],
      "err_line": 12,
      "err_msg": "invalid conversion from ‘const char*’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        12,
        14,
        32
      ],
      "mod_code": [
        "char t = \" \" ;",
        "number [ x ] = 4 ;",
        "cout << ccw << endl ;"
      ],
      "err_line": 12,
      "err_msg": "invalid conversion from ‘const char*’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        12,
        14,
        32,
        34
      ],
      "mod_code": [
        "char t = \" \" ;",
        "number [ x ] = 4 ;",
        "cout << ccw << endl ;",
        "cout << endl ;"
      ],
      "err_line": 12,
      "err_msg": "invalid conversion from ‘const char*’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        12,
        14,
        34
      ],
      "mod_code": [
        "char t = \" \" ;",
        "number [ x ] = 4 ;",
        "cout << endl ;"
      ],
      "err_line": 12,
      "err_msg": "invalid conversion from ‘const char*’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        12,
        30
      ],
      "mod_code": [
        "char t = \" \" ;",
        "cout << cw << endl ;"
      ],
      "err_line": 12,
      "err_msg": "invalid conversion from ‘const char*’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        12,
        30,
        32
      ],
      "mod_code": [
        "char t = \" \" ;",
        "cout << cw << endl ;",
        "cout << ccw << endl ;"
      ],
      "err_line": 12,
      "err_msg": "invalid conversion from ‘const char*’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        12,
        30,
        32,
        34
      ],
      "mod_code": [
        "char t = \" \" ;",
        "cout << cw << endl ;",
        "cout << ccw << endl ;",
        "cout << endl ;"
      ],
      "err_line": 12,
      "err_msg": "invalid conversion from ‘const char*’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        12,
        30,
        34
      ],
      "mod_code": [
        "char t = \" \" ;",
        "cout << cw << endl ;",
        "cout << endl ;"
      ],
      "err_line": 12,
      "err_msg": "invalid conversion from ‘const char*’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        12,
        32
      ],
      "mod_code": [
        "char t = \" \" ;",
        "cout << ccw << endl ;"
      ],
      "err_line": 12,
      "err_msg": "invalid conversion from ‘const char*’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        12,
        32,
        34
      ],
      "mod_code": [
        "char t = \" \" ;",
        "cout << ccw << endl ;",
        "cout << endl ;"
      ],
      "err_line": 12,
      "err_msg": "invalid conversion from ‘const char*’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        12,
        34
      ],
      "mod_code": [
        "char t = \" \" ;",
        "cout << endl ;"
      ],
      "err_line": 12,
      "err_msg": "invalid conversion from ‘const char*’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        13,
        14
      ],
      "mod_code": [
        "int x , x = t ;",
        "number [ x ] = 4 ;"
      ],
      "err_line": 13,
      "err_msg": "redeclaration of ‘int x’"
    },
    {
      "mod_line": [
        13,
        14,
        30
      ],
      "mod_code": [
        "int x , x = t ;",
        "number [ x ] = 4 ;",
        "cout << cw << endl ;"
      ],
      "err_line": 13,
      "err_msg": "redeclaration of ‘int x’"
    },
    {
      "mod_line": [
        13,
        14,
        30,
        32
      ],
      "mod_code": [
        "int x , x = t ;",
        "number [ x ] = 4 ;",
        "cout << cw << endl ;",
        "cout << ccw << endl ;"
      ],
      "err_line": 13,
      "err_msg": "redeclaration of ‘int x’"
    },
    {
      "mod_line": [
        13,
        14,
        30,
        34
      ],
      "mod_code": [
        "int x , x = t ;",
        "number [ x ] = 4 ;",
        "cout << cw << endl ;",
        "cout << endl ;"
      ],
      "err_line": 13,
      "err_msg": "redeclaration of ‘int x’"
    },
    {
      "mod_line": [
        13,
        14,
        32
      ],
      "mod_code": [
        "int x , x = t ;",
        "number [ x ] = 4 ;",
        "cout << ccw << endl ;"
      ],
      "err_line": 13,
      "err_msg": "redeclaration of ‘int x’"
    },
    {
      "mod_line": [
        13,
        14,
        32,
        34
      ],
      "mod_code": [
        "int x , x = t ;",
        "number [ x ] = 4 ;",
        "cout << ccw << endl ;",
        "cout << endl ;"
      ],
      "err_line": 13,
      "err_msg": "redeclaration of ‘int x’"
    },
    {
      "mod_line": [
        13,
        14,
        34
      ],
      "mod_code": [
        "int x , x = t ;",
        "number [ x ] = 4 ;",
        "cout << endl ;"
      ],
      "err_line": 13,
      "err_msg": "redeclaration of ‘int x’"
    },
    {
      "mod_line": [
        13,
        30
      ],
      "mod_code": [
        "int x , x = t ;",
        "cout << cw << endl ;"
      ],
      "err_line": 13,
      "err_msg": "redeclaration of ‘int x’"
    },
    {
      "mod_line": [
        13,
        30,
        32
      ],
      "mod_code": [
        "int x , x = t ;",
        "cout << cw << endl ;",
        "cout << ccw << endl ;"
      ],
      "err_line": 13,
      "err_msg": "redeclaration of ‘int x’"
    },
    {
      "mod_line": [
        13,
        30,
        32,
        34
      ],
      "mod_code": [
        "int x , x = t ;",
        "cout << cw << endl ;",
        "cout << ccw << endl ;",
        "cout << endl ;"
      ],
      "err_line": 13,
      "err_msg": "redeclaration of ‘int x’"
    },
    {
      "mod_line": [
        13,
        30,
        34
      ],
      "mod_code": [
        "int x , x = t ;",
        "cout << cw << endl ;",
        "cout << endl ;"
      ],
      "err_line": 13,
      "err_msg": "redeclaration of ‘int x’"
    },
    {
      "mod_line": [
        13,
        32
      ],
      "mod_code": [
        "int x , x = t ;",
        "cout << ccw << endl ;"
      ],
      "err_line": 13,
      "err_msg": "redeclaration of ‘int x’"
    },
    {
      "mod_line": [
        13,
        32,
        34
      ],
      "mod_code": [
        "int x , x = t ;",
        "cout << ccw << endl ;",
        "cout << endl ;"
      ],
      "err_line": 13,
      "err_msg": "redeclaration of ‘int x’"
    },
    {
      "mod_line": [
        13,
        34
      ],
      "mod_code": [
        "int x , x = t ;",
        "cout << endl ;"
      ],
      "err_line": 13,
      "err_msg": "redeclaration of ‘int x’"
    }
  ]
}