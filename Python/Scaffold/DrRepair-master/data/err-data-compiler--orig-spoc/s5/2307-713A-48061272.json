{
  "meta": {
    "index": 2307,
    "hitid": "3HXK2V1N4K99IJDDKT8TV83XPI1G2K",
    "workerid": "A277IUJ2DY3GZQ",
    "probid": "713A",
    "subid": "48061272"
  },
  "lines": [
    {
      "line": 0,
      "text": "let arr an int array of length 524289 set to { 0 }",
      "code": "int arr [ 524289 ] = { 0 } ;",
      "indent": 0
    },
    {
      "line": 1,
      "text": "in function conv that takes long long int num and returns an int",
      "code": "int conv ( long long int num )",
      "indent": 0
    },
    {
      "line": 2,
      "text": "let pos and ans ints with value 0",
      "code": "int pos = 0 , ans = 0 ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "while num positive",
      "code": "while ( num > 0 )",
      "indent": 1
    },
    {
      "line": 4,
      "text": "let s an int with value num mod 10",
      "code": "int s = num % 10 ;",
      "indent": 2
    },
    {
      "line": 5,
      "text": "divide num by 10",
      "code": "num /= 10 ;",
      "indent": 2
    },
    {
      "line": 6,
      "text": "if s is not even , add pow ( 2 , pos ) to ans",
      "code": "if ( s % 2 != 0 ) ans += pow ( 2 , pos ) ;",
      "indent": 2
    },
    {
      "line": 7,
      "text": "increment pos",
      "code": "pos ++ ;",
      "indent": 2
    },
    {
      "line": 8,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 9,
      "text": "return ans",
      "code": "return ans ;",
      "indent": 1
    },
    {
      "line": 10,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    },
    {
      "line": 11,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 12,
      "text": "let t an int",
      "code": "int t ;",
      "indent": 1
    },
    {
      "line": 13,
      "text": "read t",
      "code": "cin >> t ;",
      "indent": 1
    },
    {
      "line": 14,
      "text": "while decrement t",
      "code": "while ( t -- )",
      "indent": 1
    },
    {
      "line": 15,
      "text": "let c a char",
      "code": "char c ;",
      "indent": 2
    },
    {
      "line": 16,
      "text": "let num a long long int",
      "code": "long long int num ;",
      "indent": 2
    },
    {
      "line": 17,
      "text": "read c and num",
      "code": "cin >> c >> num ;",
      "indent": 2
    },
    {
      "line": 18,
      "text": "let position an int with value conv ( num )",
      "code": "int position = conv ( num ) ;",
      "indent": 2
    },
    {
      "line": 19,
      "text": "if c is +",
      "code": "if ( c == ' + ' )",
      "indent": 2
    },
    {
      "line": 20,
      "text": "increment arr [ position ]",
      "code": "arr [ position ] ++ ;",
      "indent": 3
    },
    {
      "line": 21,
      "text": "else if c is -",
      "code": "else if ( c == ' - ' )",
      "indent": 2
    },
    {
      "line": 22,
      "text": "decrement arr [ position ]",
      "code": "arr [ position ] -- ;",
      "indent": 3
    },
    {
      "line": 23,
      "text": "otherwise",
      "code": "else",
      "indent": 2
    },
    {
      "line": 24,
      "text": "print arr [ position ]",
      "code": "cout << arr [ position ] << \" \\n \" ;",
      "indent": 3
    },
    {
      "line": 25,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 26,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        1
      ],
      "mod_code": [
        "int conv ( long long int num ) ;"
      ],
      "err_line": 2,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        4
      ],
      "mod_code": [
        "int s [ 10 ] ;"
      ],
      "err_line": 6,
      "err_msg": "invalid operands of types ‘int [10]’ and ‘int’ to binary ‘operator%’"
    },
    {
      "mod_line": [
        13
      ],
      "mod_code": [
        "cin . get ( t ) ;"
      ],
      "err_line": 13,
      "err_msg": "invalid initialization of non-const reference of type ‘std::basic_istream<char>::char_type& {aka char&}’ from an rvalue of type ‘std::basic_istream<char>::char_type {aka char}’"
    },
    {
      "mod_line": [
        15
      ],
      "mod_code": [
        "char a ;"
      ],
      "err_line": 17,
      "err_msg": "‘c’ was not declared in this scope"
    },
    {
      "mod_line": [
        16
      ],
      "mod_code": [
        "long long int int num ;"
      ],
      "err_line": 16,
      "err_msg": "two or more data types in declaration of ‘num’"
    },
    {
      "mod_line": [
        18
      ],
      "mod_code": [
        "int * position = conv ( num ) ;"
      ],
      "err_line": 18,
      "err_msg": "invalid conversion from ‘int’ to ‘int*’ [-fpermissive]"
    },
    {
      "mod_line": [
        19
      ],
      "mod_code": [
        "if ( c == + k )"
      ],
      "err_line": 19,
      "err_msg": "‘k’ was not declared in this scope"
    },
    {
      "mod_line": [
        21
      ],
      "mod_code": [
        "else if ( c == \" - ' )"
      ],
      "err_line": 21,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        23
      ],
      "mod_code": [
        "otherwise"
      ],
      "err_line": 23,
      "err_msg": "‘otherwise’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        18
      ],
      "mod_code": [
        "if ( s != 0 ) ans += pow ( 2 , pos ) ;",
        "int * position = conv ( num ) ;"
      ],
      "err_line": 18,
      "err_msg": "invalid conversion from ‘int’ to ‘int*’ [-fpermissive]"
    },
    {
      "mod_line": [
        6,
        18,
        14
      ],
      "mod_code": [
        "if ( s != 0 ) ans += pow ( 2 , pos ) ;",
        "int * position = conv ( num ) ;",
        "while ( -- t )"
      ],
      "err_line": 18,
      "err_msg": "invalid conversion from ‘int’ to ‘int*’ [-fpermissive]"
    },
    {
      "mod_line": [
        6,
        18,
        14,
        1
      ],
      "mod_code": [
        "if ( s != 0 ) ans += pow ( 2 , pos ) ;",
        "int * position = conv ( num ) ;",
        "while ( -- t )",
        "int conv ( long long int num ) ;"
      ],
      "err_line": 2,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        6,
        18,
        14,
        19
      ],
      "mod_code": [
        "if ( s != 0 ) ans += pow ( 2 , pos ) ;",
        "int * position = conv ( num ) ;",
        "while ( -- t )",
        "if ( c == + k )"
      ],
      "err_line": 18,
      "err_msg": "invalid conversion from ‘int’ to ‘int*’ [-fpermissive]"
    },
    {
      "mod_line": [
        6,
        18,
        1
      ],
      "mod_code": [
        "if ( s != 0 ) ans += pow ( 2 , pos ) ;",
        "int * position = conv ( num ) ;",
        "int conv ( long long int num ) ;"
      ],
      "err_line": 2,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        6,
        18,
        1,
        19
      ],
      "mod_code": [
        "if ( s != 0 ) ans += pow ( 2 , pos ) ;",
        "int * position = conv ( num ) ;",
        "int conv ( long long int num ) ;",
        "if ( c == + k )"
      ],
      "err_line": 2,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        6,
        18,
        19
      ],
      "mod_code": [
        "if ( s != 0 ) ans += pow ( 2 , pos ) ;",
        "int * position = conv ( num ) ;",
        "if ( c == + k )"
      ],
      "err_line": 18,
      "err_msg": "invalid conversion from ‘int’ to ‘int*’ [-fpermissive]"
    },
    {
      "mod_line": [
        6,
        14,
        1
      ],
      "mod_code": [
        "if ( s != 0 ) ans += pow ( 2 , pos ) ;",
        "while ( -- t )",
        "int conv ( long long int num ) ;"
      ],
      "err_line": 2,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        6,
        14,
        1,
        19
      ],
      "mod_code": [
        "if ( s != 0 ) ans += pow ( 2 , pos ) ;",
        "while ( -- t )",
        "int conv ( long long int num ) ;",
        "if ( c == + k )"
      ],
      "err_line": 2,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        6,
        14,
        19
      ],
      "mod_code": [
        "if ( s != 0 ) ans += pow ( 2 , pos ) ;",
        "while ( -- t )",
        "if ( c == + k )"
      ],
      "err_line": 19,
      "err_msg": "‘k’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        1
      ],
      "mod_code": [
        "if ( s != 0 ) ans += pow ( 2 , pos ) ;",
        "int conv ( long long int num ) ;"
      ],
      "err_line": 2,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        6,
        1,
        19
      ],
      "mod_code": [
        "if ( s != 0 ) ans += pow ( 2 , pos ) ;",
        "int conv ( long long int num ) ;",
        "if ( c == + k )"
      ],
      "err_line": 2,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        6,
        19
      ],
      "mod_code": [
        "if ( s != 0 ) ans += pow ( 2 , pos ) ;",
        "if ( c == + k )"
      ],
      "err_line": 19,
      "err_msg": "‘k’ was not declared in this scope"
    },
    {
      "mod_line": [
        18,
        14
      ],
      "mod_code": [
        "int * position = conv ( num ) ;",
        "while ( -- t )"
      ],
      "err_line": 18,
      "err_msg": "invalid conversion from ‘int’ to ‘int*’ [-fpermissive]"
    },
    {
      "mod_line": [
        18,
        14,
        1
      ],
      "mod_code": [
        "int * position = conv ( num ) ;",
        "while ( -- t )",
        "int conv ( long long int num ) ;"
      ],
      "err_line": 2,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        18,
        14,
        1,
        19
      ],
      "mod_code": [
        "int * position = conv ( num ) ;",
        "while ( -- t )",
        "int conv ( long long int num ) ;",
        "if ( c == + k )"
      ],
      "err_line": 2,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        18,
        14,
        1,
        6
      ],
      "mod_code": [
        "int * position = conv ( num ) ;",
        "while ( -- t )",
        "int conv ( long long int num ) ;",
        "if ( s != 0 ) { ans += pow ( 2 , pos ) ; }"
      ],
      "err_line": 2,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        18,
        14,
        19
      ],
      "mod_code": [
        "int * position = conv ( num ) ;",
        "while ( -- t )",
        "if ( c == + k )"
      ],
      "err_line": 18,
      "err_msg": "invalid conversion from ‘int’ to ‘int*’ [-fpermissive]"
    },
    {
      "mod_line": [
        18,
        14,
        19,
        6
      ],
      "mod_code": [
        "int * position = conv ( num ) ;",
        "while ( -- t )",
        "if ( c == + k )",
        "if ( s != 0 ) { ans += pow ( 2 , pos ) ; }"
      ],
      "err_line": 18,
      "err_msg": "invalid conversion from ‘int’ to ‘int*’ [-fpermissive]"
    },
    {
      "mod_line": [
        18,
        14,
        6
      ],
      "mod_code": [
        "int * position = conv ( num ) ;",
        "while ( -- t )",
        "if ( s != 0 ) { ans += pow ( 2 , pos ) ; }"
      ],
      "err_line": 18,
      "err_msg": "invalid conversion from ‘int’ to ‘int*’ [-fpermissive]"
    },
    {
      "mod_line": [
        18,
        1
      ],
      "mod_code": [
        "int * position = conv ( num ) ;",
        "int conv ( long long int num ) ;"
      ],
      "err_line": 2,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        18,
        1,
        19
      ],
      "mod_code": [
        "int * position = conv ( num ) ;",
        "int conv ( long long int num ) ;",
        "if ( c == + k )"
      ],
      "err_line": 2,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        18,
        1,
        19,
        6
      ],
      "mod_code": [
        "int * position = conv ( num ) ;",
        "int conv ( long long int num ) ;",
        "if ( c == + k )",
        "if ( s != 0 ) { ans += pow ( 2 , pos ) ; }"
      ],
      "err_line": 2,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        18,
        1,
        6
      ],
      "mod_code": [
        "int * position = conv ( num ) ;",
        "int conv ( long long int num ) ;",
        "if ( s != 0 ) { ans += pow ( 2 , pos ) ; }"
      ],
      "err_line": 2,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        18,
        19
      ],
      "mod_code": [
        "int * position = conv ( num ) ;",
        "if ( c == + k )"
      ],
      "err_line": 18,
      "err_msg": "invalid conversion from ‘int’ to ‘int*’ [-fpermissive]"
    },
    {
      "mod_line": [
        18,
        19,
        6
      ],
      "mod_code": [
        "int * position = conv ( num ) ;",
        "if ( c == + k )",
        "if ( s != 0 ) { ans += pow ( 2 , pos ) ; }"
      ],
      "err_line": 18,
      "err_msg": "invalid conversion from ‘int’ to ‘int*’ [-fpermissive]"
    },
    {
      "mod_line": [
        18,
        6
      ],
      "mod_code": [
        "int * position = conv ( num ) ;",
        "if ( s != 0 ) { ans += pow ( 2 , pos ) ; }"
      ],
      "err_line": 18,
      "err_msg": "invalid conversion from ‘int’ to ‘int*’ [-fpermissive]"
    },
    {
      "mod_line": [
        14,
        1
      ],
      "mod_code": [
        "while ( -- t )",
        "int conv ( long long int num ) ;"
      ],
      "err_line": 2,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        14,
        1,
        19
      ],
      "mod_code": [
        "while ( -- t )",
        "int conv ( long long int num ) ;",
        "if ( c == + k )"
      ],
      "err_line": 2,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        14,
        1,
        19,
        6
      ],
      "mod_code": [
        "while ( -- t )",
        "int conv ( long long int num ) ;",
        "if ( c == + k )",
        "if ( s != 0 ) { ans += pow ( 2 , pos ) ; }"
      ],
      "err_line": 2,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        14,
        1,
        6
      ],
      "mod_code": [
        "while ( -- t )",
        "int conv ( long long int num ) ;",
        "if ( s != 0 ) { ans += pow ( 2 , pos ) ; }"
      ],
      "err_line": 2,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        14,
        19
      ],
      "mod_code": [
        "while ( -- t )",
        "if ( c == + k )"
      ],
      "err_line": 19,
      "err_msg": "‘k’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        19,
        6
      ],
      "mod_code": [
        "while ( -- t )",
        "if ( c == + k )",
        "if ( s != 0 ) { ans += pow ( 2 , pos ) ; }"
      ],
      "err_line": 19,
      "err_msg": "‘k’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        19
      ],
      "mod_code": [
        "int conv ( long long int num ) ;",
        "if ( c == + k )"
      ],
      "err_line": 2,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        1,
        19,
        6
      ],
      "mod_code": [
        "int conv ( long long int num ) ;",
        "if ( c == + k )",
        "if ( s != 0 ) { ans += pow ( 2 , pos ) ; }"
      ],
      "err_line": 2,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        1,
        6
      ],
      "mod_code": [
        "int conv ( long long int num ) ;",
        "if ( s != 0 ) { ans += pow ( 2 , pos ) ; }"
      ],
      "err_line": 2,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        19,
        6
      ],
      "mod_code": [
        "if ( c == + k )",
        "if ( s != 0 ) { ans += pow ( 2 , pos ) ; }"
      ],
      "err_line": 19,
      "err_msg": "‘k’ was not declared in this scope"
    }
  ]
}