{
  "meta": {
    "index": 81,
    "hitid": "3BFF0DJK8X66SNGHY8M6L9VQCJASTZ",
    "workerid": "AIWEXPJAU66D9",
    "probid": "748A",
    "subid": "47241998"
  },
  "lines": [
    {
      "line": 0,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 1,
      "text": "declare integers n , m and k",
      "code": "int n , m , k ;",
      "indent": 1
    },
    {
      "line": 2,
      "text": "while read n , m and k from the input",
      "code": "while ( cin >> n >> m >> k )",
      "indent": 1
    },
    {
      "line": 3,
      "text": "declare integer cur = 1",
      "code": "int cur = 1 ;",
      "indent": 2
    },
    {
      "line": 4,
      "text": "for integer i = 0 to n exclusive",
      "code": "for ( int i = 0 ; i < n ; ++ i )",
      "indent": 2
    },
    {
      "line": 5,
      "text": "for integer j = 0 to m exclusive",
      "code": "for ( int j = 0 ; j < m ; ++ j )",
      "indent": 3
    },
    {
      "line": 6,
      "text": "for l = 0 to 2 exclusive",
      "code": "for ( int l = 0 ; l < 2 ; ++ l )",
      "indent": 4
    },
    {
      "line": 7,
      "text": "if cur = k , print i + 1 , \" \" , j + 1 , \" \" and ' R ' if l > 0 , or ' L ' if l = 0 + ' \\ n '",
      "code": "if ( cur == k ) { cout << i + 1 << \" \" << j + 1 << \" \" << ( l ? ' R ' : ' L ' ) << ' \\n ' ; }",
      "indent": 5
    },
    {
      "line": 8,
      "text": "increment cur",
      "code": "cur ++ ;",
      "indent": 5
    },
    {
      "line": 9,
      "text": "DUMMY",
      "code": "}",
      "indent": 4
    },
    {
      "line": 10,
      "text": "DUMMY",
      "code": "}",
      "indent": 3
    },
    {
      "line": 11,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 12,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 13,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 14,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        7
      ],
      "mod_code": [
        "cout << ( cur > k ? i + 1 : \" \" , j + 1 ? \" \" : \" R ' ) ;"
      ],
      "err_line": 7,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        2
      ],
      "mod_code": [
        "while ( { cin >> n >> m >> k )"
      ],
      "err_line": 2,
      "err_msg": "expected primary-expression before ‘{’ token"
    },
    {
      "mod_line": [
        6
      ],
      "mod_code": [
        "for ( l = 0 ; l < 2 ; l ++ )"
      ],
      "err_line": 6,
      "err_msg": "‘l’ was not declared in this scope"
    },
    {
      "mod_line": [
        7
      ],
      "mod_code": [
        "cout << ( cur > k ? i + 1 : \" \" , j + 1 ? \" \" : ' R ' ) ;"
      ],
      "err_line": 7,
      "err_msg": "operands to ?: have different types ‘int’ and ‘const char*’"
    },
    {
      "mod_line": [
        7,
        2
      ],
      "mod_code": [
        "cout << ( cur > k ? i + 1 : \" \" , j + 1 ? \" \" : \" R ' ) ;",
        "while ( { cin >> n >> m >> k )"
      ],
      "err_line": 7,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        7,
        2,
        6
      ],
      "mod_code": [
        "cout << ( cur > k ? i + 1 : \" \" , j + 1 ? \" \" : \" R ' ) ;",
        "while ( { cin >> n >> m >> k )",
        "for ( l = 0 ; l < 2 ; l ++ )"
      ],
      "err_line": 7,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        7,
        6
      ],
      "mod_code": [
        "cout << ( cur > k ? i + 1 : \" \" , j + 1 ? \" \" : \" R ' ) ;",
        "for ( l = 0 ; l < 2 ; l ++ )"
      ],
      "err_line": 7,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        2,
        7
      ],
      "mod_code": [
        "while ( { cin >> n >> m >> k )",
        "cout << ( cur > k ? i + 1 : \" \" , j + 1 ? \" \" : ' R ' ) ;"
      ],
      "err_line": 2,
      "err_msg": "expected primary-expression before ‘{’ token"
    },
    {
      "mod_line": [
        2,
        7,
        6
      ],
      "mod_code": [
        "while ( { cin >> n >> m >> k )",
        "cout << ( cur > k ? i + 1 : \" \" , j + 1 ? \" \" : ' R ' ) ;",
        "for ( l = 0 ; l < 2 ; l ++ )"
      ],
      "err_line": 2,
      "err_msg": "expected primary-expression before ‘{’ token"
    },
    {
      "mod_line": [
        2,
        6
      ],
      "mod_code": [
        "while ( { cin >> n >> m >> k )",
        "for ( l = 0 ; l < 2 ; l ++ )"
      ],
      "err_line": 2,
      "err_msg": "expected primary-expression before ‘{’ token"
    },
    {
      "mod_line": [
        7,
        6
      ],
      "mod_code": [
        "cout << ( cur > k ? i + 1 : \" \" , j + 1 ? \" \" : ' R ' ) ;",
        "for ( l = 0 ; l < 2 ; l ++ )"
      ],
      "err_line": 6,
      "err_msg": "‘l’ was not declared in this scope"
    }
  ]
}