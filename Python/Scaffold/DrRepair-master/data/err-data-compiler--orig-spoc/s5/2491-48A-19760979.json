{
  "meta": {
    "index": 2491,
    "hitid": "3OKP4QVBP2RYNM8HX8181QMV04FGA8",
    "workerid": "AIWEXPJAU66D9",
    "probid": "48A",
    "subid": "19760979"
  },
  "lines": [
    {
      "line": 0,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 1,
      "text": "as , bs and cs = strings",
      "code": "string as , bs , cs ;",
      "indent": 1
    },
    {
      "line": 2,
      "text": "creat char W = ' '",
      "code": "char W = ' ' ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "read as , bs and cs",
      "code": "cin >> as >> bs >> cs ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "let a , b , c , d and e be integers",
      "code": "int a , b , c , d , e ;",
      "indent": 1
    },
    {
      "line": 5,
      "text": "if as is equal to \" rock \" set a to 0",
      "code": "if ( as == \" rock \" ) a = 0 ;",
      "indent": 1
    },
    {
      "line": 6,
      "text": "if as is equal to \" paper \" set a to 1",
      "code": "if ( as == \" paper \" ) a = 1 ;",
      "indent": 1
    },
    {
      "line": 7,
      "text": "if as is equal to \" scissors \" set a to 2",
      "code": "if ( as == \" scissors \" ) a = 2 ;",
      "indent": 1
    },
    {
      "line": 8,
      "text": "if bs is equal to \" rock \" set b to 0",
      "code": "if ( bs == \" rock \" ) b = 0 ;",
      "indent": 1
    },
    {
      "line": 9,
      "text": "if bs is equal to \" paper \" set b to 1",
      "code": "if ( bs == \" paper \" ) b = 1 ;",
      "indent": 1
    },
    {
      "line": 10,
      "text": "if bs is equal to \" scissors \" set b to 2",
      "code": "if ( bs == \" scissors \" ) b = 2 ;",
      "indent": 1
    },
    {
      "line": 11,
      "text": "if cs is equal to \" rock \" set c to 0",
      "code": "if ( cs == \" rock \" ) c = 0 ;",
      "indent": 1
    },
    {
      "line": 12,
      "text": "if cs is equal to \" paper \" set c to 1",
      "code": "if ( cs == \" paper \" ) c = 1 ;",
      "indent": 1
    },
    {
      "line": 13,
      "text": "if cs is equal to \" scissors \" set c to 2",
      "code": "if ( cs == \" scissors \" ) c = 2 ;",
      "indent": 1
    },
    {
      "line": 14,
      "text": "if ( a ! = b ) & ( b = c )",
      "code": "if ( ( a != b ) & ( b == c ) )",
      "indent": 1
    },
    {
      "line": 15,
      "text": "set d = a",
      "code": "d = a ;",
      "indent": 2
    },
    {
      "line": 16,
      "text": "set e = b",
      "code": "e = b ;",
      "indent": 2
    },
    {
      "line": 17,
      "text": "set W = ' F '",
      "code": "W = ' F ' ;",
      "indent": 2
    },
    {
      "line": 18,
      "text": "else if ( c ! = b ) & ( a = b )",
      "code": "else if ( ( c != b ) & ( a == b ) )",
      "indent": 1
    },
    {
      "line": 19,
      "text": "assign value of c to the d",
      "code": "d = c ;",
      "indent": 2
    },
    {
      "line": 20,
      "text": "assign value of a to the e",
      "code": "e = a ;",
      "indent": 2
    },
    {
      "line": 21,
      "text": "set W = ' S '",
      "code": "W = ' S ' ;",
      "indent": 2
    },
    {
      "line": 22,
      "text": "else if ( b ! = c ) & ( a = c )",
      "code": "else if ( ( b != c ) & ( a == c ) )",
      "indent": 1
    },
    {
      "line": 23,
      "text": "set b = d",
      "code": "d = b ;",
      "indent": 2
    },
    {
      "line": 24,
      "text": "set e = c",
      "code": "e = c ;",
      "indent": 2
    },
    {
      "line": 25,
      "text": "set W = ' M '",
      "code": "W = ' M ' ;",
      "indent": 2
    },
    {
      "line": 26,
      "text": "else",
      "code": "else",
      "indent": 1
    },
    {
      "line": 27,
      "text": "print \" ? \" and a new line",
      "code": "cout << \" ? \" << ' \\n ' ;",
      "indent": 2
    },
    {
      "line": 28,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 2
    },
    {
      "line": 29,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 30,
      "text": "if ( d = 1 ) & ( e = 0 ) | ( d = 2 ) & ( e = 1 ) | ( d = 0 ) & ( e = 2 )",
      "code": "if ( ( d == 1 ) & ( e == 0 ) | ( d == 2 ) & ( e == 1 ) | ( d == 0 ) & ( e == 2 ) )",
      "indent": 1
    },
    {
      "line": 31,
      "text": "print W and a new line",
      "code": "cout << W << ' \\n ' ;",
      "indent": 2
    },
    {
      "line": 32,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 2
    },
    {
      "line": 33,
      "text": "else",
      "code": "else",
      "indent": 1
    },
    {
      "line": 34,
      "text": "print \" ? \" and a new line",
      "code": "( cout << ' ? ' << ' \\n ' ) ;",
      "indent": 2
    },
    {
      "line": 35,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 36,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        14
      ],
      "mod_code": [
        "if ( a != b ) b = c ;"
      ],
      "err_line": 18,
      "err_msg": "‘else’ without a previous ‘if’"
    },
    {
      "mod_line": [
        18
      ],
      "mod_code": [
        "else if ( c != b ) a = b ;"
      ],
      "err_line": 22,
      "err_msg": "‘else’ without a previous ‘if’"
    },
    {
      "mod_line": [
        22
      ],
      "mod_code": [
        "else if ( b != c ) a = c ;"
      ],
      "err_line": 26,
      "err_msg": "‘else’ without a previous ‘if’"
    },
    {
      "mod_line": [
        1
      ],
      "mod_code": [
        "string as , bs , n ;"
      ],
      "err_line": 3,
      "err_msg": "‘cs’ was not declared in this scope"
    },
    {
      "mod_line": [
        2
      ],
      "mod_code": [
        "string W = ' ' ;"
      ],
      "err_line": 2,
      "err_msg": "conversion from ‘char’ to non-scalar type ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ requested"
    },
    {
      "mod_line": [
        3
      ],
      "mod_code": [
        "while ( cin >> as >> bs >> cs )"
      ],
      "err_line": 5,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        14
      ],
      "mod_code": [
        "if ( a != b ) { b = c ; }"
      ],
      "err_line": 18,
      "err_msg": "‘else’ without a previous ‘if’"
    },
    {
      "mod_line": [
        18
      ],
      "mod_code": [
        "else if ( c != b ) { a = b ; }"
      ],
      "err_line": 22,
      "err_msg": "‘else’ without a previous ‘if’"
    },
    {
      "mod_line": [
        22
      ],
      "mod_code": [
        "else if ( b != c ) { a = c ; }"
      ],
      "err_line": 26,
      "err_msg": "‘else’ without a previous ‘if’"
    },
    {
      "mod_line": [
        14,
        18
      ],
      "mod_code": [
        "if ( a != b ) b = c ;",
        "else if ( c != b ) a = b ;"
      ],
      "err_line": 18,
      "err_msg": "‘else’ without a previous ‘if’"
    },
    {
      "mod_line": [
        14,
        18,
        22
      ],
      "mod_code": [
        "if ( a != b ) b = c ;",
        "else if ( c != b ) a = b ;",
        "else if ( b != c ) a = c ;"
      ],
      "err_line": 18,
      "err_msg": "‘else’ without a previous ‘if’"
    },
    {
      "mod_line": [
        14,
        18,
        22,
        30
      ],
      "mod_code": [
        "if ( a != b ) b = c ;",
        "else if ( c != b ) a = b ;",
        "else if ( b != c ) a = c ;",
        "if ( ( d = 1 ) )"
      ],
      "err_line": 18,
      "err_msg": "‘else’ without a previous ‘if’"
    },
    {
      "mod_line": [
        14,
        18,
        22,
        17
      ],
      "mod_code": [
        "if ( a != b ) b = c ;",
        "else if ( c != b ) a = b ;",
        "else if ( b != c ) a = c ;",
        "char W = ' F ' ;"
      ],
      "err_line": 18,
      "err_msg": "‘else’ without a previous ‘if’"
    },
    {
      "mod_line": [
        14,
        18,
        30
      ],
      "mod_code": [
        "if ( a != b ) b = c ;",
        "else if ( c != b ) a = b ;",
        "if ( ( d = 1 ) )"
      ],
      "err_line": 18,
      "err_msg": "‘else’ without a previous ‘if’"
    },
    {
      "mod_line": [
        14,
        18,
        30,
        22
      ],
      "mod_code": [
        "if ( a != b ) b = c ;",
        "else if ( c != b ) a = b ;",
        "if ( ( d = 1 ) )",
        "else if ( b != c ) { a = c ; }"
      ],
      "err_line": 18,
      "err_msg": "‘else’ without a previous ‘if’"
    },
    {
      "mod_line": [
        14,
        18,
        30,
        17
      ],
      "mod_code": [
        "if ( a != b ) b = c ;",
        "else if ( c != b ) a = b ;",
        "if ( ( d = 1 ) )",
        "char W = ' F ' ;"
      ],
      "err_line": 18,
      "err_msg": "‘else’ without a previous ‘if’"
    },
    {
      "mod_line": [
        14,
        18,
        22
      ],
      "mod_code": [
        "if ( a != b ) b = c ;",
        "else if ( c != b ) a = b ;",
        "else if ( b != c ) { a = c ; }"
      ],
      "err_line": 18,
      "err_msg": "‘else’ without a previous ‘if’"
    },
    {
      "mod_line": [
        14,
        18,
        22,
        17
      ],
      "mod_code": [
        "if ( a != b ) b = c ;",
        "else if ( c != b ) a = b ;",
        "else if ( b != c ) { a = c ; }",
        "char W = ' F ' ;"
      ],
      "err_line": 18,
      "err_msg": "‘else’ without a previous ‘if’"
    },
    {
      "mod_line": [
        14,
        18,
        17
      ],
      "mod_code": [
        "if ( a != b ) b = c ;",
        "else if ( c != b ) a = b ;",
        "char W = ' F ' ;"
      ],
      "err_line": 18,
      "err_msg": "‘else’ without a previous ‘if’"
    },
    {
      "mod_line": [
        14,
        22
      ],
      "mod_code": [
        "if ( a != b ) b = c ;",
        "else if ( b != c ) a = c ;"
      ],
      "err_line": 18,
      "err_msg": "‘else’ without a previous ‘if’"
    },
    {
      "mod_line": [
        14,
        22,
        30
      ],
      "mod_code": [
        "if ( a != b ) b = c ;",
        "else if ( b != c ) a = c ;",
        "if ( ( d = 1 ) )"
      ],
      "err_line": 18,
      "err_msg": "‘else’ without a previous ‘if’"
    },
    {
      "mod_line": [
        14,
        22,
        30,
        17
      ],
      "mod_code": [
        "if ( a != b ) b = c ;",
        "else if ( b != c ) a = c ;",
        "if ( ( d = 1 ) )",
        "char W = ' F ' ;"
      ],
      "err_line": 18,
      "err_msg": "‘else’ without a previous ‘if’"
    },
    {
      "mod_line": [
        14,
        22,
        17
      ],
      "mod_code": [
        "if ( a != b ) b = c ;",
        "else if ( b != c ) a = c ;",
        "char W = ' F ' ;"
      ],
      "err_line": 18,
      "err_msg": "‘else’ without a previous ‘if’"
    },
    {
      "mod_line": [
        14,
        30
      ],
      "mod_code": [
        "if ( a != b ) b = c ;",
        "if ( ( d = 1 ) )"
      ],
      "err_line": 18,
      "err_msg": "‘else’ without a previous ‘if’"
    },
    {
      "mod_line": [
        14,
        30,
        22
      ],
      "mod_code": [
        "if ( a != b ) b = c ;",
        "if ( ( d = 1 ) )",
        "else if ( b != c ) { a = c ; }"
      ],
      "err_line": 18,
      "err_msg": "‘else’ without a previous ‘if’"
    },
    {
      "mod_line": [
        14,
        30,
        22,
        17
      ],
      "mod_code": [
        "if ( a != b ) b = c ;",
        "if ( ( d = 1 ) )",
        "else if ( b != c ) { a = c ; }",
        "char W = ' F ' ;"
      ],
      "err_line": 18,
      "err_msg": "‘else’ without a previous ‘if’"
    },
    {
      "mod_line": [
        14,
        30,
        17
      ],
      "mod_code": [
        "if ( a != b ) b = c ;",
        "if ( ( d = 1 ) )",
        "char W = ' F ' ;"
      ],
      "err_line": 18,
      "err_msg": "‘else’ without a previous ‘if’"
    },
    {
      "mod_line": [
        14,
        22
      ],
      "mod_code": [
        "if ( a != b ) b = c ;",
        "else if ( b != c ) { a = c ; }"
      ],
      "err_line": 18,
      "err_msg": "‘else’ without a previous ‘if’"
    },
    {
      "mod_line": [
        14,
        22,
        17
      ],
      "mod_code": [
        "if ( a != b ) b = c ;",
        "else if ( b != c ) { a = c ; }",
        "char W = ' F ' ;"
      ],
      "err_line": 18,
      "err_msg": "‘else’ without a previous ‘if’"
    },
    {
      "mod_line": [
        14,
        17
      ],
      "mod_code": [
        "if ( a != b ) b = c ;",
        "char W = ' F ' ;"
      ],
      "err_line": 18,
      "err_msg": "‘else’ without a previous ‘if’"
    },
    {
      "mod_line": [
        18,
        22
      ],
      "mod_code": [
        "else if ( c != b ) a = b ;",
        "else if ( b != c ) a = c ;"
      ],
      "err_line": 22,
      "err_msg": "‘else’ without a previous ‘if’"
    },
    {
      "mod_line": [
        18,
        22,
        30
      ],
      "mod_code": [
        "else if ( c != b ) a = b ;",
        "else if ( b != c ) a = c ;",
        "if ( ( d = 1 ) )"
      ],
      "err_line": 22,
      "err_msg": "‘else’ without a previous ‘if’"
    },
    {
      "mod_line": [
        18,
        22,
        30,
        17
      ],
      "mod_code": [
        "else if ( c != b ) a = b ;",
        "else if ( b != c ) a = c ;",
        "if ( ( d = 1 ) )",
        "char W = ' F ' ;"
      ],
      "err_line": 22,
      "err_msg": "‘else’ without a previous ‘if’"
    },
    {
      "mod_line": [
        18,
        22,
        17
      ],
      "mod_code": [
        "else if ( c != b ) a = b ;",
        "else if ( b != c ) a = c ;",
        "char W = ' F ' ;"
      ],
      "err_line": 22,
      "err_msg": "‘else’ without a previous ‘if’"
    },
    {
      "mod_line": [
        18,
        30
      ],
      "mod_code": [
        "else if ( c != b ) a = b ;",
        "if ( ( d = 1 ) )"
      ],
      "err_line": 22,
      "err_msg": "‘else’ without a previous ‘if’"
    },
    {
      "mod_line": [
        18,
        30,
        22
      ],
      "mod_code": [
        "else if ( c != b ) a = b ;",
        "if ( ( d = 1 ) )",
        "else if ( b != c ) { a = c ; }"
      ],
      "err_line": 22,
      "err_msg": "‘else’ without a previous ‘if’"
    },
    {
      "mod_line": [
        18,
        30,
        22,
        17
      ],
      "mod_code": [
        "else if ( c != b ) a = b ;",
        "if ( ( d = 1 ) )",
        "else if ( b != c ) { a = c ; }",
        "char W = ' F ' ;"
      ],
      "err_line": 22,
      "err_msg": "‘else’ without a previous ‘if’"
    },
    {
      "mod_line": [
        18,
        30,
        17
      ],
      "mod_code": [
        "else if ( c != b ) a = b ;",
        "if ( ( d = 1 ) )",
        "char W = ' F ' ;"
      ],
      "err_line": 22,
      "err_msg": "‘else’ without a previous ‘if’"
    },
    {
      "mod_line": [
        18,
        22
      ],
      "mod_code": [
        "else if ( c != b ) a = b ;",
        "else if ( b != c ) { a = c ; }"
      ],
      "err_line": 22,
      "err_msg": "‘else’ without a previous ‘if’"
    },
    {
      "mod_line": [
        18,
        22,
        17
      ],
      "mod_code": [
        "else if ( c != b ) a = b ;",
        "else if ( b != c ) { a = c ; }",
        "char W = ' F ' ;"
      ],
      "err_line": 22,
      "err_msg": "‘else’ without a previous ‘if’"
    },
    {
      "mod_line": [
        18,
        17
      ],
      "mod_code": [
        "else if ( c != b ) a = b ;",
        "char W = ' F ' ;"
      ],
      "err_line": 22,
      "err_msg": "‘else’ without a previous ‘if’"
    },
    {
      "mod_line": [
        22,
        30
      ],
      "mod_code": [
        "else if ( b != c ) a = c ;",
        "if ( ( d = 1 ) )"
      ],
      "err_line": 26,
      "err_msg": "‘else’ without a previous ‘if’"
    },
    {
      "mod_line": [
        22,
        30,
        17
      ],
      "mod_code": [
        "else if ( b != c ) a = c ;",
        "if ( ( d = 1 ) )",
        "char W = ' F ' ;"
      ],
      "err_line": 26,
      "err_msg": "‘else’ without a previous ‘if’"
    },
    {
      "mod_line": [
        22,
        17
      ],
      "mod_code": [
        "else if ( b != c ) a = c ;",
        "char W = ' F ' ;"
      ],
      "err_line": 26,
      "err_msg": "‘else’ without a previous ‘if’"
    },
    {
      "mod_line": [
        30,
        22
      ],
      "mod_code": [
        "if ( ( d = 1 ) )",
        "else if ( b != c ) { a = c ; }"
      ],
      "err_line": 26,
      "err_msg": "‘else’ without a previous ‘if’"
    },
    {
      "mod_line": [
        30,
        22,
        17
      ],
      "mod_code": [
        "if ( ( d = 1 ) )",
        "else if ( b != c ) { a = c ; }",
        "char W = ' F ' ;"
      ],
      "err_line": 26,
      "err_msg": "‘else’ without a previous ‘if’"
    },
    {
      "mod_line": [
        22,
        17
      ],
      "mod_code": [
        "else if ( b != c ) { a = c ; }",
        "char W = ' F ' ;"
      ],
      "err_line": 26,
      "err_msg": "‘else’ without a previous ‘if’"
    }
  ]
}