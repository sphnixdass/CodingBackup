{
  "meta": {
    "index": 1845,
    "hitid": "3WYZV0QBFJ7ESI8ZSW18KN6WLRAXBK",
    "workerid": "ACI8PUCF5OPDC",
    "probid": "513A",
    "subid": "36429620"
  },
  "lines": [
    {
      "line": 0,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 1,
      "text": "create integers n1 , n2 , k1 , k2",
      "code": "int n1 , n2 , k1 , k2 ;",
      "indent": 1
    },
    {
      "line": 2,
      "text": "read n1 , n2 , k1 , k2",
      "code": "cin >> n1 >> n2 >> k1 >> k2 ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "if n1 greater than or equal to n2 do the following",
      "code": "if ( n1 <= n2 )",
      "indent": 1
    },
    {
      "line": 4,
      "text": "print \" Second \" and a new line",
      "code": "cout << \" Second \" << endl ;",
      "indent": 2
    },
    {
      "line": 5,
      "text": "else do the following",
      "code": "else",
      "indent": 1
    },
    {
      "line": 6,
      "text": "print \" First \" and a new line",
      "code": "cout << \" First \" << endl ;",
      "indent": 2
    },
    {
      "line": 7,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 8,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        2
      ],
      "mod_code": [
        "int n1 >> n2 >> k1 >> k2 ;"
      ],
      "err_line": 2,
      "err_msg": "expected initializer before ‘>>’ token"
    },
    {
      "mod_line": [
        3
      ],
      "mod_code": [
        "while ( n1 >= n2 )"
      ],
      "err_line": 5,
      "err_msg": "‘else’ without a previous ‘if’"
    },
    {
      "mod_line": [
        3,
        2
      ],
      "mod_code": [
        "if ( n1 >= n2 )",
        "int n1 >> n2 >> k1 >> k2 ;"
      ],
      "err_line": 2,
      "err_msg": "expected initializer before ‘>>’ token"
    },
    {
      "mod_line": [
        3,
        2,
        4
      ],
      "mod_code": [
        "if ( n1 >= n2 )",
        "int n1 >> n2 >> k1 >> k2 ;",
        "cout << \" yes\\n \" << endl ;"
      ],
      "err_line": 2,
      "err_msg": "expected initializer before ‘>>’ token"
    },
    {
      "mod_line": [
        3,
        2,
        4,
        5
      ],
      "mod_code": [
        "if ( n1 >= n2 )",
        "int n1 >> n2 >> k1 >> k2 ;",
        "cout << \" yes\\n \" << endl ;",
        "while ( 1 )"
      ],
      "err_line": 2,
      "err_msg": "expected initializer before ‘>>’ token"
    },
    {
      "mod_line": [
        3,
        2,
        5
      ],
      "mod_code": [
        "if ( n1 >= n2 )",
        "int n1 >> n2 >> k1 >> k2 ;",
        "while ( 1 )"
      ],
      "err_line": 2,
      "err_msg": "expected initializer before ‘>>’ token"
    },
    {
      "mod_line": [
        2,
        3
      ],
      "mod_code": [
        "int n1 >> n2 >> k1 >> k2 ;",
        "while ( n1 >= n2 )"
      ],
      "err_line": 2,
      "err_msg": "expected initializer before ‘>>’ token"
    },
    {
      "mod_line": [
        2,
        3,
        4
      ],
      "mod_code": [
        "int n1 >> n2 >> k1 >> k2 ;",
        "while ( n1 >= n2 )",
        "cout << \" yes\\n \" << endl ;"
      ],
      "err_line": 2,
      "err_msg": "expected initializer before ‘>>’ token"
    },
    {
      "mod_line": [
        2,
        3,
        4,
        5
      ],
      "mod_code": [
        "int n1 >> n2 >> k1 >> k2 ;",
        "while ( n1 >= n2 )",
        "cout << \" yes\\n \" << endl ;",
        "while ( 1 )"
      ],
      "err_line": 2,
      "err_msg": "expected initializer before ‘>>’ token"
    },
    {
      "mod_line": [
        2,
        3,
        5
      ],
      "mod_code": [
        "int n1 >> n2 >> k1 >> k2 ;",
        "while ( n1 >= n2 )",
        "while ( 1 )"
      ],
      "err_line": 2,
      "err_msg": "expected initializer before ‘>>’ token"
    },
    {
      "mod_line": [
        2,
        4
      ],
      "mod_code": [
        "int n1 >> n2 >> k1 >> k2 ;",
        "cout << \" yes\\n \" << endl ;"
      ],
      "err_line": 2,
      "err_msg": "expected initializer before ‘>>’ token"
    },
    {
      "mod_line": [
        2,
        4,
        5
      ],
      "mod_code": [
        "int n1 >> n2 >> k1 >> k2 ;",
        "cout << \" yes\\n \" << endl ;",
        "while ( 1 )"
      ],
      "err_line": 2,
      "err_msg": "expected initializer before ‘>>’ token"
    },
    {
      "mod_line": [
        2,
        5
      ],
      "mod_code": [
        "int n1 >> n2 >> k1 >> k2 ;",
        "while ( 1 )"
      ],
      "err_line": 2,
      "err_msg": "expected initializer before ‘>>’ token"
    },
    {
      "mod_line": [
        3,
        4
      ],
      "mod_code": [
        "while ( n1 >= n2 )",
        "cout << \" yes\\n \" << endl ;"
      ],
      "err_line": 5,
      "err_msg": "‘else’ without a previous ‘if’"
    }
  ]
}