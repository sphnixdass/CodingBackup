{
  "meta": {
    "index": 539,
    "hitid": "36D1BWBEHNV9AT9ZVW6O8DNUKHHM2R",
    "workerid": "A1EKVUFWL7OJMO",
    "probid": "318A",
    "subid": "42430265"
  },
  "lines": [
    {
      "line": 0,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 1,
      "text": "n , k , half = long long int",
      "code": "long long int n , k , half ;",
      "indent": 1
    },
    {
      "line": 2,
      "text": "read n and k",
      "code": "cin >> n >> k ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "if n modulo 2 is 0",
      "code": "if ( n % 2 == 0 )",
      "indent": 1
    },
    {
      "line": 4,
      "text": "half = n / 2",
      "code": "half = n / 2 ;",
      "indent": 2
    },
    {
      "line": 5,
      "text": "else if n modulo 2 is 1",
      "code": "else if ( n % 2 == 1 )",
      "indent": 1
    },
    {
      "line": 6,
      "text": "half = ( n + 1 ) / 2",
      "code": "half = ( n + 1 ) / 2 ;",
      "indent": 2
    },
    {
      "line": 7,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 8,
      "text": "if k < = half",
      "code": "if ( k <= half )",
      "indent": 1
    },
    {
      "line": 9,
      "text": "print 2 * k - 1",
      "code": "cout << 2 * k - 1 << endl ;",
      "indent": 2
    },
    {
      "line": 10,
      "text": "else if k > half",
      "code": "else if ( k > half )",
      "indent": 1
    },
    {
      "line": 11,
      "text": "print ( k - half ) * 2",
      "code": "cout << ( k - half ) * 2 << endl ;",
      "indent": 2
    },
    {
      "line": 12,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 13,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 14,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        1
      ],
      "mod_code": [
        "long long int n , k , n ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘long long int n’"
    },
    {
      "mod_line": [
        8,
        2,
        6,
        1
      ],
      "mod_code": [
        "if ( k <= 0 )",
        "cin >> n and k ;",
        "int half = ( n + 1 ) / 2 ;",
        "long long int n , k , n ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘long long int n’"
    },
    {
      "mod_line": [
        8,
        2,
        1
      ],
      "mod_code": [
        "if ( k <= 0 )",
        "cin >> n and k ;",
        "long long int n , k , n ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘long long int n’"
    },
    {
      "mod_line": [
        8,
        2,
        1,
        4
      ],
      "mod_code": [
        "if ( k <= 0 )",
        "cin >> n and k ;",
        "long long int n , k , n ;",
        "half /= 2 ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘long long int n’"
    },
    {
      "mod_line": [
        8,
        6,
        1
      ],
      "mod_code": [
        "if ( k <= 0 )",
        "int half = ( n + 1 ) / 2 ;",
        "long long int n , k , n ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘long long int n’"
    },
    {
      "mod_line": [
        8,
        6,
        1,
        4
      ],
      "mod_code": [
        "if ( k <= 0 )",
        "int half = ( n + 1 ) / 2 ;",
        "long long int n , k , n ;",
        "half /= 2 ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘long long int n’"
    },
    {
      "mod_line": [
        8,
        1
      ],
      "mod_code": [
        "if ( k <= 0 )",
        "long long int n , k , n ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘long long int n’"
    },
    {
      "mod_line": [
        8,
        1,
        4
      ],
      "mod_code": [
        "if ( k <= 0 )",
        "long long int n , k , n ;",
        "half /= 2 ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘long long int n’"
    },
    {
      "mod_line": [
        2,
        6,
        1
      ],
      "mod_code": [
        "cin >> n and k ;",
        "int half = ( n + 1 ) / 2 ;",
        "long long int n , k , n ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘long long int n’"
    },
    {
      "mod_line": [
        2,
        6,
        1,
        4
      ],
      "mod_code": [
        "cin >> n and k ;",
        "int half = ( n + 1 ) / 2 ;",
        "long long int n , k , n ;",
        "half /= 2 ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘long long int n’"
    },
    {
      "mod_line": [
        2,
        1
      ],
      "mod_code": [
        "cin >> n and k ;",
        "long long int n , k , n ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘long long int n’"
    },
    {
      "mod_line": [
        2,
        1,
        4
      ],
      "mod_code": [
        "cin >> n and k ;",
        "long long int n , k , n ;",
        "half /= 2 ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘long long int n’"
    },
    {
      "mod_line": [
        6,
        1
      ],
      "mod_code": [
        "int half = ( n + 1 ) / 2 ;",
        "long long int n , k , n ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘long long int n’"
    },
    {
      "mod_line": [
        6,
        1,
        4
      ],
      "mod_code": [
        "int half = ( n + 1 ) / 2 ;",
        "long long int n , k , n ;",
        "half /= 2 ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘long long int n’"
    },
    {
      "mod_line": [
        1,
        4
      ],
      "mod_code": [
        "long long int n , k , n ;",
        "half /= 2 ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘long long int n’"
    }
  ]
}