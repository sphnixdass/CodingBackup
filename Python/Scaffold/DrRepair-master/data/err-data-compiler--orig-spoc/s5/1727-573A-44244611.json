{
  "meta": {
    "index": 1727,
    "hitid": "3E24UO25QZKLSXDCVEX4QUTBW9SO6U",
    "workerid": "A2J7P30MA3S6OV",
    "probid": "573A",
    "subid": "44244611"
  },
  "lines": [
    {
      "line": 0,
      "text": "create int a [ 100505 ]",
      "code": "int a [ 100505 ] ;",
      "indent": 0
    },
    {
      "line": 1,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 2,
      "text": "create int n",
      "code": "int n ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "while read n",
      "code": "while ( cin >> n )",
      "indent": 1
    },
    {
      "line": 4,
      "text": "for i = 1 to n inclusive , read a [ i ]",
      "code": "for ( int i = 1 ; i <= n ; i ++ ) { cin >> a [ i ] ; }",
      "indent": 2
    },
    {
      "line": 5,
      "text": "for i = 1 to n inclusive",
      "code": "for ( int i = 1 ; i <= n ; i ++ )",
      "indent": 2
    },
    {
      "line": 6,
      "text": "while a [ i ] is even , set a [ i ] to a [ i ] / 2",
      "code": "while ( a [ i ] % 2 == 0 ) a [ i ] /= 2 ;",
      "indent": 3
    },
    {
      "line": 7,
      "text": "while a [ i ] mod 3 = 0 , set a [ i ] to a [ i ] / 3",
      "code": "while ( a [ i ] % 3 == 0 ) a [ i ] /= 3 ;",
      "indent": 3
    },
    {
      "line": 8,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 9,
      "text": "flag = 0",
      "code": "int flag = 0 ;",
      "indent": 2
    },
    {
      "line": 10,
      "text": "sort elements between a + 1 to a + 1 + n",
      "code": "sort ( a + 1 , a + 1 + n ) ;",
      "indent": 2
    },
    {
      "line": 11,
      "text": "for i = 2 to n inclusive",
      "code": "for ( int i = 2 ; i <= n ; i ++ )",
      "indent": 2
    },
    {
      "line": 12,
      "text": "if a [ i ] different from a [ i - 1 ] , set flag = 1",
      "code": "if ( a [ i ] != a [ i - 1 ] ) flag = 1 ;",
      "indent": 3
    },
    {
      "line": 13,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 14,
      "text": "if flag = 0",
      "code": "if ( flag == 0 )",
      "indent": 2
    },
    {
      "line": 15,
      "text": "print Yes",
      "code": "cout << \" Yes \" << endl ;",
      "indent": 3
    },
    {
      "line": 16,
      "text": "else",
      "code": "else",
      "indent": 2
    },
    {
      "line": 17,
      "text": "print No",
      "code": "cout << \" No \" << endl ;",
      "indent": 3
    },
    {
      "line": 18,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 19,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 20,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        0
      ],
      "mod_code": [
        "int a [ n ] ;"
      ],
      "err_line": 0,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        3
      ],
      "mod_code": [
        "while ( { cin >> n )"
      ],
      "err_line": 3,
      "err_msg": "expected primary-expression before ‘{’ token"
    },
    {
      "mod_line": [
        5
      ],
      "mod_code": [
        "for ( i = 1 ; i <= n ; i ++ )"
      ],
      "err_line": 5,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        9
      ],
      "mod_code": [
        "flag = 0 ;"
      ],
      "err_line": 9,
      "err_msg": "‘flag’ was not declared in this scope"
    },
    {
      "mod_line": [
        10
      ],
      "mod_code": [
        "sort ( a + 1 , a + 1 ) + n ;"
      ],
      "err_line": 10,
      "err_msg": "invalid operands of types ‘void’ and ‘int’ to binary ‘operator+’"
    },
    {
      "mod_line": [
        11
      ],
      "mod_code": [
        "for ( i = 2 ; i <= n ; i ++ )"
      ],
      "err_line": 11,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        0,
        3
      ],
      "mod_code": [
        "int a [ n ] ;",
        "while ( { cin >> n )"
      ],
      "err_line": 0,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        0,
        3,
        2
      ],
      "mod_code": [
        "int a [ n ] ;",
        "while ( { cin >> n )",
        "char n ;"
      ],
      "err_line": 0,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        0,
        3,
        2,
        5
      ],
      "mod_code": [
        "int a [ n ] ;",
        "while ( { cin >> n )",
        "char n ;",
        "for ( i = 1 ; i <= n ; i ++ )"
      ],
      "err_line": 0,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        0,
        3,
        2,
        9
      ],
      "mod_code": [
        "int a [ n ] ;",
        "while ( { cin >> n )",
        "char n ;",
        "flag = 0 ;"
      ],
      "err_line": 0,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        0,
        3,
        2,
        11
      ],
      "mod_code": [
        "int a [ n ] ;",
        "while ( { cin >> n )",
        "char n ;",
        "for ( i = 2 ; i <= n ; i ++ )"
      ],
      "err_line": 0,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        0,
        3,
        5
      ],
      "mod_code": [
        "int a [ n ] ;",
        "while ( { cin >> n )",
        "for ( i = 1 ; i <= n ; i ++ )"
      ],
      "err_line": 0,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        0,
        3,
        5,
        9
      ],
      "mod_code": [
        "int a [ n ] ;",
        "while ( { cin >> n )",
        "for ( i = 1 ; i <= n ; i ++ )",
        "flag = 0 ;"
      ],
      "err_line": 0,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        0,
        3,
        5,
        11
      ],
      "mod_code": [
        "int a [ n ] ;",
        "while ( { cin >> n )",
        "for ( i = 1 ; i <= n ; i ++ )",
        "for ( i = 2 ; i <= n ; i ++ )"
      ],
      "err_line": 0,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        0,
        3,
        9
      ],
      "mod_code": [
        "int a [ n ] ;",
        "while ( { cin >> n )",
        "flag = 0 ;"
      ],
      "err_line": 0,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        0,
        3,
        9,
        11
      ],
      "mod_code": [
        "int a [ n ] ;",
        "while ( { cin >> n )",
        "flag = 0 ;",
        "for ( i = 2 ; i <= n ; i ++ )"
      ],
      "err_line": 0,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        0,
        3,
        11
      ],
      "mod_code": [
        "int a [ n ] ;",
        "while ( { cin >> n )",
        "for ( i = 2 ; i <= n ; i ++ )"
      ],
      "err_line": 0,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        0,
        2
      ],
      "mod_code": [
        "int a [ n ] ;",
        "char n ;"
      ],
      "err_line": 0,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        0,
        2,
        5
      ],
      "mod_code": [
        "int a [ n ] ;",
        "char n ;",
        "for ( i = 1 ; i <= n ; i ++ )"
      ],
      "err_line": 0,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        0,
        2,
        5,
        9
      ],
      "mod_code": [
        "int a [ n ] ;",
        "char n ;",
        "for ( i = 1 ; i <= n ; i ++ )",
        "flag = 0 ;"
      ],
      "err_line": 0,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        0,
        2,
        5,
        11
      ],
      "mod_code": [
        "int a [ n ] ;",
        "char n ;",
        "for ( i = 1 ; i <= n ; i ++ )",
        "for ( i = 2 ; i <= n ; i ++ )"
      ],
      "err_line": 0,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        0,
        2,
        9
      ],
      "mod_code": [
        "int a [ n ] ;",
        "char n ;",
        "flag = 0 ;"
      ],
      "err_line": 0,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        0,
        2,
        9,
        11
      ],
      "mod_code": [
        "int a [ n ] ;",
        "char n ;",
        "flag = 0 ;",
        "for ( i = 2 ; i <= n ; i ++ )"
      ],
      "err_line": 0,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        0,
        2,
        11
      ],
      "mod_code": [
        "int a [ n ] ;",
        "char n ;",
        "for ( i = 2 ; i <= n ; i ++ )"
      ],
      "err_line": 0,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        0,
        5
      ],
      "mod_code": [
        "int a [ n ] ;",
        "for ( i = 1 ; i <= n ; i ++ )"
      ],
      "err_line": 0,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        0,
        5,
        9
      ],
      "mod_code": [
        "int a [ n ] ;",
        "for ( i = 1 ; i <= n ; i ++ )",
        "flag = 0 ;"
      ],
      "err_line": 0,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        0,
        5,
        9,
        11
      ],
      "mod_code": [
        "int a [ n ] ;",
        "for ( i = 1 ; i <= n ; i ++ )",
        "flag = 0 ;",
        "for ( i = 2 ; i <= n ; i ++ )"
      ],
      "err_line": 0,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        0,
        5,
        11
      ],
      "mod_code": [
        "int a [ n ] ;",
        "for ( i = 1 ; i <= n ; i ++ )",
        "for ( i = 2 ; i <= n ; i ++ )"
      ],
      "err_line": 0,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        0,
        9
      ],
      "mod_code": [
        "int a [ n ] ;",
        "flag = 0 ;"
      ],
      "err_line": 0,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        0,
        9,
        11
      ],
      "mod_code": [
        "int a [ n ] ;",
        "flag = 0 ;",
        "for ( i = 2 ; i <= n ; i ++ )"
      ],
      "err_line": 0,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        0,
        11
      ],
      "mod_code": [
        "int a [ n ] ;",
        "for ( i = 2 ; i <= n ; i ++ )"
      ],
      "err_line": 0,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        2
      ],
      "mod_code": [
        "while ( { cin >> n )",
        "char n ;"
      ],
      "err_line": 3,
      "err_msg": "expected primary-expression before ‘{’ token"
    },
    {
      "mod_line": [
        3,
        2,
        5
      ],
      "mod_code": [
        "while ( { cin >> n )",
        "char n ;",
        "for ( i = 1 ; i <= n ; i ++ )"
      ],
      "err_line": 3,
      "err_msg": "expected primary-expression before ‘{’ token"
    },
    {
      "mod_line": [
        3,
        2,
        5,
        9
      ],
      "mod_code": [
        "while ( { cin >> n )",
        "char n ;",
        "for ( i = 1 ; i <= n ; i ++ )",
        "flag = 0 ;"
      ],
      "err_line": 3,
      "err_msg": "expected primary-expression before ‘{’ token"
    },
    {
      "mod_line": [
        3,
        2,
        5,
        11
      ],
      "mod_code": [
        "while ( { cin >> n )",
        "char n ;",
        "for ( i = 1 ; i <= n ; i ++ )",
        "for ( i = 2 ; i <= n ; i ++ )"
      ],
      "err_line": 3,
      "err_msg": "expected primary-expression before ‘{’ token"
    },
    {
      "mod_line": [
        3,
        2,
        9
      ],
      "mod_code": [
        "while ( { cin >> n )",
        "char n ;",
        "flag = 0 ;"
      ],
      "err_line": 3,
      "err_msg": "expected primary-expression before ‘{’ token"
    },
    {
      "mod_line": [
        3,
        2,
        9,
        11
      ],
      "mod_code": [
        "while ( { cin >> n )",
        "char n ;",
        "flag = 0 ;",
        "for ( i = 2 ; i <= n ; i ++ )"
      ],
      "err_line": 3,
      "err_msg": "expected primary-expression before ‘{’ token"
    },
    {
      "mod_line": [
        3,
        2,
        11
      ],
      "mod_code": [
        "while ( { cin >> n )",
        "char n ;",
        "for ( i = 2 ; i <= n ; i ++ )"
      ],
      "err_line": 3,
      "err_msg": "expected primary-expression before ‘{’ token"
    },
    {
      "mod_line": [
        3,
        5
      ],
      "mod_code": [
        "while ( { cin >> n )",
        "for ( i = 1 ; i <= n ; i ++ )"
      ],
      "err_line": 3,
      "err_msg": "expected primary-expression before ‘{’ token"
    },
    {
      "mod_line": [
        3,
        5,
        9
      ],
      "mod_code": [
        "while ( { cin >> n )",
        "for ( i = 1 ; i <= n ; i ++ )",
        "flag = 0 ;"
      ],
      "err_line": 3,
      "err_msg": "expected primary-expression before ‘{’ token"
    },
    {
      "mod_line": [
        3,
        5,
        9,
        11
      ],
      "mod_code": [
        "while ( { cin >> n )",
        "for ( i = 1 ; i <= n ; i ++ )",
        "flag = 0 ;",
        "for ( i = 2 ; i <= n ; i ++ )"
      ],
      "err_line": 3,
      "err_msg": "expected primary-expression before ‘{’ token"
    },
    {
      "mod_line": [
        3,
        5,
        11
      ],
      "mod_code": [
        "while ( { cin >> n )",
        "for ( i = 1 ; i <= n ; i ++ )",
        "for ( i = 2 ; i <= n ; i ++ )"
      ],
      "err_line": 3,
      "err_msg": "expected primary-expression before ‘{’ token"
    },
    {
      "mod_line": [
        3,
        9
      ],
      "mod_code": [
        "while ( { cin >> n )",
        "flag = 0 ;"
      ],
      "err_line": 3,
      "err_msg": "expected primary-expression before ‘{’ token"
    },
    {
      "mod_line": [
        3,
        9,
        11
      ],
      "mod_code": [
        "while ( { cin >> n )",
        "flag = 0 ;",
        "for ( i = 2 ; i <= n ; i ++ )"
      ],
      "err_line": 3,
      "err_msg": "expected primary-expression before ‘{’ token"
    },
    {
      "mod_line": [
        3,
        11
      ],
      "mod_code": [
        "while ( { cin >> n )",
        "for ( i = 2 ; i <= n ; i ++ )"
      ],
      "err_line": 3,
      "err_msg": "expected primary-expression before ‘{’ token"
    },
    {
      "mod_line": [
        2,
        5
      ],
      "mod_code": [
        "char n ;",
        "for ( i = 1 ; i <= n ; i ++ )"
      ],
      "err_line": 5,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        5,
        9
      ],
      "mod_code": [
        "char n ;",
        "for ( i = 1 ; i <= n ; i ++ )",
        "flag = 0 ;"
      ],
      "err_line": 5,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        5,
        9,
        11
      ],
      "mod_code": [
        "char n ;",
        "for ( i = 1 ; i <= n ; i ++ )",
        "flag = 0 ;",
        "for ( i = 2 ; i <= n ; i ++ )"
      ],
      "err_line": 5,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        5,
        11
      ],
      "mod_code": [
        "char n ;",
        "for ( i = 1 ; i <= n ; i ++ )",
        "for ( i = 2 ; i <= n ; i ++ )"
      ],
      "err_line": 5,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        9
      ],
      "mod_code": [
        "char n ;",
        "flag = 0 ;"
      ],
      "err_line": 9,
      "err_msg": "‘flag’ was not declared in this scope"
    },
    {
      "mod_line": [
        2,
        9,
        11
      ],
      "mod_code": [
        "char n ;",
        "flag = 0 ;",
        "for ( i = 2 ; i <= n ; i ++ )"
      ],
      "err_line": 9,
      "err_msg": "‘flag’ was not declared in this scope"
    },
    {
      "mod_line": [
        2,
        11
      ],
      "mod_code": [
        "char n ;",
        "for ( i = 2 ; i <= n ; i ++ )"
      ],
      "err_line": 11,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        5,
        9
      ],
      "mod_code": [
        "for ( i = 1 ; i <= n ; i ++ )",
        "flag = 0 ;"
      ],
      "err_line": 5,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        5,
        9,
        11
      ],
      "mod_code": [
        "for ( i = 1 ; i <= n ; i ++ )",
        "flag = 0 ;",
        "for ( i = 2 ; i <= n ; i ++ )"
      ],
      "err_line": 5,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        5,
        11
      ],
      "mod_code": [
        "for ( i = 1 ; i <= n ; i ++ )",
        "for ( i = 2 ; i <= n ; i ++ )"
      ],
      "err_line": 5,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        9,
        11
      ],
      "mod_code": [
        "flag = 0 ;",
        "for ( i = 2 ; i <= n ; i ++ )"
      ],
      "err_line": 9,
      "err_msg": "‘flag’ was not declared in this scope"
    }
  ]
}