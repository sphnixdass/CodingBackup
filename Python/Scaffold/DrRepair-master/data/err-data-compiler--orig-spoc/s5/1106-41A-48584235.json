{
  "meta": {
    "index": 1106,
    "hitid": "3K1H3NEY7LTWLTBTHISARRU1L7CGDA",
    "workerid": "AIWEXPJAU66D9",
    "probid": "41A",
    "subid": "48584235"
  },
  "lines": [
    {
      "line": 0,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 1,
      "text": "str1 = string",
      "code": "string str1 ;",
      "indent": 1
    },
    {
      "line": 2,
      "text": "let str2 be string",
      "code": "string str2 ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "read str1 and str2",
      "code": "cin >> str1 >> str2 ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "integer n = length of str2",
      "code": "int n = str2 . length ( ) ;",
      "indent": 1
    },
    {
      "line": 5,
      "text": "for integer i = 0 to n / 2 exclusive swap characters at str2 [ i ] and str2 [ n - i - 1 ]",
      "code": "for ( int i = 0 ; i < n / 2 ; i ++ ) swap ( str2 [ i ] , str2 [ n - i - 1 ] ) ;",
      "indent": 1
    },
    {
      "line": 6,
      "text": "for integer i = 0 to n exclusive",
      "code": "for ( int i = 0 ; i < n ; i ++ )",
      "indent": 1
    },
    {
      "line": 7,
      "text": "if str1 [ i ] ! = str2 [ i ]",
      "code": "if ( str1 [ i ] != str2 [ i ] )",
      "indent": 2
    },
    {
      "line": 8,
      "text": "print \" NO \" and a new line",
      "code": "cout << \" NO \" << endl ;",
      "indent": 3
    },
    {
      "line": 9,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 3
    },
    {
      "line": 10,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 11,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 12,
      "text": "print \" YES \" and a new line",
      "code": "cout << \" YES \" << endl ;",
      "indent": 1
    },
    {
      "line": 13,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        5
      ],
      "mod_code": [
        "for ( int i = 0 ; i < n / 2 ; i ++ ) swap ( str2 [ i ] - 1 ] , str2 [ n - i - 1 ] ) ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘)’ before ‘]’ token"
    },
    {
      "mod_line": [
        1
      ],
      "mod_code": [
        "char str1 ;"
      ],
      "err_line": 7,
      "err_msg": "invalid types ‘char[int]’ for array subscript"
    },
    {
      "mod_line": [
        2
      ],
      "mod_code": [
        "char str2 ;"
      ],
      "err_line": 4,
      "err_msg": "request for member ‘length’ in ‘str2’, which is of non-class type ‘char’"
    },
    {
      "mod_line": [
        3
      ],
      "mod_code": [
        "int str1 >> str2 ;"
      ],
      "err_line": 3,
      "err_msg": "expected initializer before ‘>>’ token"
    },
    {
      "mod_line": [
        7
      ],
      "mod_code": [
        "if ( str1 [ i ] ] != str2 [ i ] )"
      ],
      "err_line": 7,
      "err_msg": "expected ‘)’ before ‘]’ token"
    },
    {
      "mod_line": [
        5,
        12
      ],
      "mod_code": [
        "for ( int i = 0 ; i < n / 2 ; i ++ ) swap ( str2 [ i ] - 1 ] , str2 [ n - i - 1 ] ) ;",
        "cout << \" YES\\n \" << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘)’ before ‘]’ token"
    },
    {
      "mod_line": [
        5,
        12,
        7
      ],
      "mod_code": [
        "for ( int i = 0 ; i < n / 2 ; i ++ ) swap ( str2 [ i ] - 1 ] , str2 [ n - i - 1 ] ) ;",
        "cout << \" YES\\n \" << endl ;",
        "if ( str1 [ i ] ] != str2 [ i ] )"
      ],
      "err_line": 5,
      "err_msg": "expected ‘)’ before ‘]’ token"
    },
    {
      "mod_line": [
        5,
        12,
        7,
        1
      ],
      "mod_code": [
        "for ( int i = 0 ; i < n / 2 ; i ++ ) swap ( str2 [ i ] - 1 ] , str2 [ n - i - 1 ] ) ;",
        "cout << \" YES\\n \" << endl ;",
        "if ( str1 [ i ] ] != str2 [ i ] )",
        "char str1 ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘)’ before ‘]’ token"
    },
    {
      "mod_line": [
        5,
        12,
        7,
        3
      ],
      "mod_code": [
        "for ( int i = 0 ; i < n / 2 ; i ++ ) swap ( str2 [ i ] - 1 ] , str2 [ n - i - 1 ] ) ;",
        "cout << \" YES\\n \" << endl ;",
        "if ( str1 [ i ] ] != str2 [ i ] )",
        "int str1 >> str2 ;"
      ],
      "err_line": 3,
      "err_msg": "expected initializer before ‘>>’ token"
    },
    {
      "mod_line": [
        5,
        12,
        7,
        2
      ],
      "mod_code": [
        "for ( int i = 0 ; i < n / 2 ; i ++ ) swap ( str2 [ i ] - 1 ] , str2 [ n - i - 1 ] ) ;",
        "cout << \" YES\\n \" << endl ;",
        "if ( str1 [ i ] ] != str2 [ i ] )",
        "char str2 ;"
      ],
      "err_line": 4,
      "err_msg": "request for member ‘length’ in ‘str2’, which is of non-class type ‘char’"
    },
    {
      "mod_line": [
        5,
        12,
        1
      ],
      "mod_code": [
        "for ( int i = 0 ; i < n / 2 ; i ++ ) swap ( str2 [ i ] - 1 ] , str2 [ n - i - 1 ] ) ;",
        "cout << \" YES\\n \" << endl ;",
        "char str1 ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘)’ before ‘]’ token"
    },
    {
      "mod_line": [
        5,
        12,
        1,
        3
      ],
      "mod_code": [
        "for ( int i = 0 ; i < n / 2 ; i ++ ) swap ( str2 [ i ] - 1 ] , str2 [ n - i - 1 ] ) ;",
        "cout << \" YES\\n \" << endl ;",
        "char str1 ;",
        "int str1 >> str2 ;"
      ],
      "err_line": 3,
      "err_msg": "expected initializer before ‘>>’ token"
    },
    {
      "mod_line": [
        5,
        12,
        1,
        2
      ],
      "mod_code": [
        "for ( int i = 0 ; i < n / 2 ; i ++ ) swap ( str2 [ i ] - 1 ] , str2 [ n - i - 1 ] ) ;",
        "cout << \" YES\\n \" << endl ;",
        "char str1 ;",
        "char str2 ;"
      ],
      "err_line": 4,
      "err_msg": "request for member ‘length’ in ‘str2’, which is of non-class type ‘char’"
    },
    {
      "mod_line": [
        5,
        12,
        3
      ],
      "mod_code": [
        "for ( int i = 0 ; i < n / 2 ; i ++ ) swap ( str2 [ i ] - 1 ] , str2 [ n - i - 1 ] ) ;",
        "cout << \" YES\\n \" << endl ;",
        "int str1 >> str2 ;"
      ],
      "err_line": 3,
      "err_msg": "expected initializer before ‘>>’ token"
    },
    {
      "mod_line": [
        5,
        12,
        3,
        2
      ],
      "mod_code": [
        "for ( int i = 0 ; i < n / 2 ; i ++ ) swap ( str2 [ i ] - 1 ] , str2 [ n - i - 1 ] ) ;",
        "cout << \" YES\\n \" << endl ;",
        "int str1 >> str2 ;",
        "char str2 ;"
      ],
      "err_line": 3,
      "err_msg": "expected initializer before ‘>>’ token"
    },
    {
      "mod_line": [
        5,
        12,
        2
      ],
      "mod_code": [
        "for ( int i = 0 ; i < n / 2 ; i ++ ) swap ( str2 [ i ] - 1 ] , str2 [ n - i - 1 ] ) ;",
        "cout << \" YES\\n \" << endl ;",
        "char str2 ;"
      ],
      "err_line": 4,
      "err_msg": "request for member ‘length’ in ‘str2’, which is of non-class type ‘char’"
    },
    {
      "mod_line": [
        5,
        7
      ],
      "mod_code": [
        "for ( int i = 0 ; i < n / 2 ; i ++ ) swap ( str2 [ i ] - 1 ] , str2 [ n - i - 1 ] ) ;",
        "if ( str1 [ i ] ] != str2 [ i ] )"
      ],
      "err_line": 5,
      "err_msg": "expected ‘)’ before ‘]’ token"
    },
    {
      "mod_line": [
        5,
        7,
        1
      ],
      "mod_code": [
        "for ( int i = 0 ; i < n / 2 ; i ++ ) swap ( str2 [ i ] - 1 ] , str2 [ n - i - 1 ] ) ;",
        "if ( str1 [ i ] ] != str2 [ i ] )",
        "char str1 ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘)’ before ‘]’ token"
    },
    {
      "mod_line": [
        5,
        7,
        1,
        3
      ],
      "mod_code": [
        "for ( int i = 0 ; i < n / 2 ; i ++ ) swap ( str2 [ i ] - 1 ] , str2 [ n - i - 1 ] ) ;",
        "if ( str1 [ i ] ] != str2 [ i ] )",
        "char str1 ;",
        "int str1 >> str2 ;"
      ],
      "err_line": 3,
      "err_msg": "expected initializer before ‘>>’ token"
    },
    {
      "mod_line": [
        5,
        7,
        1,
        2
      ],
      "mod_code": [
        "for ( int i = 0 ; i < n / 2 ; i ++ ) swap ( str2 [ i ] - 1 ] , str2 [ n - i - 1 ] ) ;",
        "if ( str1 [ i ] ] != str2 [ i ] )",
        "char str1 ;",
        "char str2 ;"
      ],
      "err_line": 4,
      "err_msg": "request for member ‘length’ in ‘str2’, which is of non-class type ‘char’"
    },
    {
      "mod_line": [
        5,
        7,
        3
      ],
      "mod_code": [
        "for ( int i = 0 ; i < n / 2 ; i ++ ) swap ( str2 [ i ] - 1 ] , str2 [ n - i - 1 ] ) ;",
        "if ( str1 [ i ] ] != str2 [ i ] )",
        "int str1 >> str2 ;"
      ],
      "err_line": 3,
      "err_msg": "expected initializer before ‘>>’ token"
    },
    {
      "mod_line": [
        5,
        7,
        3,
        2
      ],
      "mod_code": [
        "for ( int i = 0 ; i < n / 2 ; i ++ ) swap ( str2 [ i ] - 1 ] , str2 [ n - i - 1 ] ) ;",
        "if ( str1 [ i ] ] != str2 [ i ] )",
        "int str1 >> str2 ;",
        "char str2 ;"
      ],
      "err_line": 3,
      "err_msg": "expected initializer before ‘>>’ token"
    },
    {
      "mod_line": [
        5,
        7,
        2
      ],
      "mod_code": [
        "for ( int i = 0 ; i < n / 2 ; i ++ ) swap ( str2 [ i ] - 1 ] , str2 [ n - i - 1 ] ) ;",
        "if ( str1 [ i ] ] != str2 [ i ] )",
        "char str2 ;"
      ],
      "err_line": 4,
      "err_msg": "request for member ‘length’ in ‘str2’, which is of non-class type ‘char’"
    },
    {
      "mod_line": [
        5,
        1
      ],
      "mod_code": [
        "for ( int i = 0 ; i < n / 2 ; i ++ ) swap ( str2 [ i ] - 1 ] , str2 [ n - i - 1 ] ) ;",
        "char str1 ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘)’ before ‘]’ token"
    },
    {
      "mod_line": [
        5,
        1,
        3
      ],
      "mod_code": [
        "for ( int i = 0 ; i < n / 2 ; i ++ ) swap ( str2 [ i ] - 1 ] , str2 [ n - i - 1 ] ) ;",
        "char str1 ;",
        "int str1 >> str2 ;"
      ],
      "err_line": 3,
      "err_msg": "expected initializer before ‘>>’ token"
    },
    {
      "mod_line": [
        5,
        1,
        3,
        2
      ],
      "mod_code": [
        "for ( int i = 0 ; i < n / 2 ; i ++ ) swap ( str2 [ i ] - 1 ] , str2 [ n - i - 1 ] ) ;",
        "char str1 ;",
        "int str1 >> str2 ;",
        "char str2 ;"
      ],
      "err_line": 3,
      "err_msg": "expected initializer before ‘>>’ token"
    },
    {
      "mod_line": [
        5,
        1,
        2
      ],
      "mod_code": [
        "for ( int i = 0 ; i < n / 2 ; i ++ ) swap ( str2 [ i ] - 1 ] , str2 [ n - i - 1 ] ) ;",
        "char str1 ;",
        "char str2 ;"
      ],
      "err_line": 4,
      "err_msg": "request for member ‘length’ in ‘str2’, which is of non-class type ‘char’"
    },
    {
      "mod_line": [
        5,
        3
      ],
      "mod_code": [
        "for ( int i = 0 ; i < n / 2 ; i ++ ) swap ( str2 [ i ] - 1 ] , str2 [ n - i - 1 ] ) ;",
        "int str1 >> str2 ;"
      ],
      "err_line": 3,
      "err_msg": "expected initializer before ‘>>’ token"
    },
    {
      "mod_line": [
        5,
        3,
        2
      ],
      "mod_code": [
        "for ( int i = 0 ; i < n / 2 ; i ++ ) swap ( str2 [ i ] - 1 ] , str2 [ n - i - 1 ] ) ;",
        "int str1 >> str2 ;",
        "char str2 ;"
      ],
      "err_line": 3,
      "err_msg": "expected initializer before ‘>>’ token"
    },
    {
      "mod_line": [
        5,
        2
      ],
      "mod_code": [
        "for ( int i = 0 ; i < n / 2 ; i ++ ) swap ( str2 [ i ] - 1 ] , str2 [ n - i - 1 ] ) ;",
        "char str2 ;"
      ],
      "err_line": 4,
      "err_msg": "request for member ‘length’ in ‘str2’, which is of non-class type ‘char’"
    },
    {
      "mod_line": [
        12,
        7
      ],
      "mod_code": [
        "cout << \" YES\\n \" << endl ;",
        "if ( str1 [ i ] ] != str2 [ i ] )"
      ],
      "err_line": 7,
      "err_msg": "expected ‘)’ before ‘]’ token"
    },
    {
      "mod_line": [
        12,
        7,
        1
      ],
      "mod_code": [
        "cout << \" YES\\n \" << endl ;",
        "if ( str1 [ i ] ] != str2 [ i ] )",
        "char str1 ;"
      ],
      "err_line": 7,
      "err_msg": "invalid types ‘char[int]’ for array subscript"
    },
    {
      "mod_line": [
        12,
        7,
        1,
        3
      ],
      "mod_code": [
        "cout << \" YES\\n \" << endl ;",
        "if ( str1 [ i ] ] != str2 [ i ] )",
        "char str1 ;",
        "int str1 >> str2 ;"
      ],
      "err_line": 3,
      "err_msg": "expected initializer before ‘>>’ token"
    },
    {
      "mod_line": [
        12,
        7,
        1,
        2
      ],
      "mod_code": [
        "cout << \" YES\\n \" << endl ;",
        "if ( str1 [ i ] ] != str2 [ i ] )",
        "char str1 ;",
        "char str2 ;"
      ],
      "err_line": 4,
      "err_msg": "request for member ‘length’ in ‘str2’, which is of non-class type ‘char’"
    },
    {
      "mod_line": [
        12,
        7,
        3
      ],
      "mod_code": [
        "cout << \" YES\\n \" << endl ;",
        "if ( str1 [ i ] ] != str2 [ i ] )",
        "int str1 >> str2 ;"
      ],
      "err_line": 3,
      "err_msg": "expected initializer before ‘>>’ token"
    },
    {
      "mod_line": [
        12,
        7,
        3,
        2
      ],
      "mod_code": [
        "cout << \" YES\\n \" << endl ;",
        "if ( str1 [ i ] ] != str2 [ i ] )",
        "int str1 >> str2 ;",
        "char str2 ;"
      ],
      "err_line": 3,
      "err_msg": "expected initializer before ‘>>’ token"
    },
    {
      "mod_line": [
        12,
        7,
        2
      ],
      "mod_code": [
        "cout << \" YES\\n \" << endl ;",
        "if ( str1 [ i ] ] != str2 [ i ] )",
        "char str2 ;"
      ],
      "err_line": 4,
      "err_msg": "request for member ‘length’ in ‘str2’, which is of non-class type ‘char’"
    },
    {
      "mod_line": [
        12,
        1
      ],
      "mod_code": [
        "cout << \" YES\\n \" << endl ;",
        "char str1 ;"
      ],
      "err_line": 7,
      "err_msg": "invalid types ‘char[int]’ for array subscript"
    },
    {
      "mod_line": [
        12,
        1,
        3
      ],
      "mod_code": [
        "cout << \" YES\\n \" << endl ;",
        "char str1 ;",
        "int str1 >> str2 ;"
      ],
      "err_line": 3,
      "err_msg": "expected initializer before ‘>>’ token"
    },
    {
      "mod_line": [
        12,
        1,
        3,
        2
      ],
      "mod_code": [
        "cout << \" YES\\n \" << endl ;",
        "char str1 ;",
        "int str1 >> str2 ;",
        "char str2 ;"
      ],
      "err_line": 3,
      "err_msg": "expected initializer before ‘>>’ token"
    },
    {
      "mod_line": [
        12,
        1,
        2
      ],
      "mod_code": [
        "cout << \" YES\\n \" << endl ;",
        "char str1 ;",
        "char str2 ;"
      ],
      "err_line": 4,
      "err_msg": "request for member ‘length’ in ‘str2’, which is of non-class type ‘char’"
    },
    {
      "mod_line": [
        12,
        3
      ],
      "mod_code": [
        "cout << \" YES\\n \" << endl ;",
        "int str1 >> str2 ;"
      ],
      "err_line": 3,
      "err_msg": "expected initializer before ‘>>’ token"
    },
    {
      "mod_line": [
        12,
        3,
        2
      ],
      "mod_code": [
        "cout << \" YES\\n \" << endl ;",
        "int str1 >> str2 ;",
        "char str2 ;"
      ],
      "err_line": 3,
      "err_msg": "expected initializer before ‘>>’ token"
    },
    {
      "mod_line": [
        12,
        2
      ],
      "mod_code": [
        "cout << \" YES\\n \" << endl ;",
        "char str2 ;"
      ],
      "err_line": 4,
      "err_msg": "request for member ‘length’ in ‘str2’, which is of non-class type ‘char’"
    },
    {
      "mod_line": [
        7,
        1
      ],
      "mod_code": [
        "if ( str1 [ i ] ] != str2 [ i ] )",
        "char str1 ;"
      ],
      "err_line": 7,
      "err_msg": "invalid types ‘char[int]’ for array subscript"
    },
    {
      "mod_line": [
        7,
        1,
        3
      ],
      "mod_code": [
        "if ( str1 [ i ] ] != str2 [ i ] )",
        "char str1 ;",
        "int str1 >> str2 ;"
      ],
      "err_line": 3,
      "err_msg": "expected initializer before ‘>>’ token"
    },
    {
      "mod_line": [
        7,
        1,
        3,
        2
      ],
      "mod_code": [
        "if ( str1 [ i ] ] != str2 [ i ] )",
        "char str1 ;",
        "int str1 >> str2 ;",
        "char str2 ;"
      ],
      "err_line": 3,
      "err_msg": "expected initializer before ‘>>’ token"
    },
    {
      "mod_line": [
        7,
        1,
        2
      ],
      "mod_code": [
        "if ( str1 [ i ] ] != str2 [ i ] )",
        "char str1 ;",
        "char str2 ;"
      ],
      "err_line": 4,
      "err_msg": "request for member ‘length’ in ‘str2’, which is of non-class type ‘char’"
    },
    {
      "mod_line": [
        7,
        3
      ],
      "mod_code": [
        "if ( str1 [ i ] ] != str2 [ i ] )",
        "int str1 >> str2 ;"
      ],
      "err_line": 3,
      "err_msg": "expected initializer before ‘>>’ token"
    },
    {
      "mod_line": [
        7,
        3,
        2
      ],
      "mod_code": [
        "if ( str1 [ i ] ] != str2 [ i ] )",
        "int str1 >> str2 ;",
        "char str2 ;"
      ],
      "err_line": 3,
      "err_msg": "expected initializer before ‘>>’ token"
    },
    {
      "mod_line": [
        7,
        2
      ],
      "mod_code": [
        "if ( str1 [ i ] ] != str2 [ i ] )",
        "char str2 ;"
      ],
      "err_line": 4,
      "err_msg": "request for member ‘length’ in ‘str2’, which is of non-class type ‘char’"
    },
    {
      "mod_line": [
        1,
        3
      ],
      "mod_code": [
        "char str1 ;",
        "int str1 >> str2 ;"
      ],
      "err_line": 3,
      "err_msg": "expected initializer before ‘>>’ token"
    },
    {
      "mod_line": [
        1,
        3,
        2
      ],
      "mod_code": [
        "char str1 ;",
        "int str1 >> str2 ;",
        "char str2 ;"
      ],
      "err_line": 3,
      "err_msg": "expected initializer before ‘>>’ token"
    },
    {
      "mod_line": [
        1,
        2
      ],
      "mod_code": [
        "char str1 ;",
        "char str2 ;"
      ],
      "err_line": 4,
      "err_msg": "request for member ‘length’ in ‘str2’, which is of non-class type ‘char’"
    },
    {
      "mod_line": [
        3,
        2
      ],
      "mod_code": [
        "int str1 >> str2 ;",
        "char str2 ;"
      ],
      "err_line": 3,
      "err_msg": "expected initializer before ‘>>’ token"
    }
  ]
}