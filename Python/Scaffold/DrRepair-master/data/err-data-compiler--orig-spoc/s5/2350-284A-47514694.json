{
  "meta": {
    "index": 2350,
    "hitid": "37OPIVELUUXCNI3SHEJQMQYWG63HAO",
    "workerid": "A35TKCKMT89M6E",
    "probid": "284A",
    "subid": "47514694"
  },
  "lines": [
    {
      "line": 0,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 1,
      "text": "create integer p",
      "code": "int p ;",
      "indent": 1
    },
    {
      "line": 2,
      "text": "read p",
      "code": "cin >> p ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "create integer n set n = p - 1",
      "code": "int n = p - 1 ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "create Integer count set count = n",
      "code": "int count = n ;",
      "indent": 1
    },
    {
      "line": 5,
      "text": "for i = 2 to the square root of n exicute",
      "code": "for ( int i = 2 ; i * i <= n ; ++ i )",
      "indent": 1
    },
    {
      "line": 6,
      "text": "if n / i has no remainder",
      "code": "if ( n % i == 0 )",
      "indent": 2
    },
    {
      "line": 7,
      "text": "do set n = n / i while n / i has no reminder",
      "code": "do { n /= i ; } while ( n % i == 0 ) ;",
      "indent": 3
    },
    {
      "line": 8,
      "text": "set count = count / i * ( i - 1 )",
      "code": "count = count / i * ( i - 1 ) ;",
      "indent": 3
    },
    {
      "line": 9,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 10,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 11,
      "text": "if n does not equal 1 set count = count / n * ( n - 1 )",
      "code": "if ( n != 1 ) { count = count / n * ( n - 1 ) ; }",
      "indent": 1
    },
    {
      "line": 12,
      "text": "print count",
      "code": "cout << count << ' \\n ' ;",
      "indent": 1
    },
    {
      "line": 13,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        4
      ],
      "mod_code": [
        "count = n ;"
      ],
      "err_line": 4,
      "err_msg": "overloaded function with no contextual type information"
    },
    {
      "mod_line": [
        3
      ],
      "mod_code": [
        "int n , n = p - 1 ;"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘int n’"
    },
    {
      "mod_line": [
        5
      ],
      "mod_code": [
        "for ( i = 2 ; i <= sqrt ( n ) ; i ++ )"
      ],
      "err_line": 5,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        7
      ],
      "mod_code": [
        "count = n ;",
        "n = n / i ;"
      ],
      "err_line": 4,
      "err_msg": "overloaded function with no contextual type information"
    },
    {
      "mod_line": [
        4,
        7,
        2
      ],
      "mod_code": [
        "count = n ;",
        "n = n / i ;",
        "cout << p << endl ;"
      ],
      "err_line": 4,
      "err_msg": "overloaded function with no contextual type information"
    },
    {
      "mod_line": [
        4,
        7,
        2,
        5
      ],
      "mod_code": [
        "count = n ;",
        "n = n / i ;",
        "cout << p << endl ;",
        "for ( i = 2 ; i <= sqrt ( n ) ; i ++ )"
      ],
      "err_line": 4,
      "err_msg": "overloaded function with no contextual type information"
    },
    {
      "mod_line": [
        4,
        7,
        2,
        3
      ],
      "mod_code": [
        "count = n ;",
        "n = n / i ;",
        "cout << p << endl ;",
        "int n , n = p - 1 ;"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘int n’"
    },
    {
      "mod_line": [
        4,
        7,
        5
      ],
      "mod_code": [
        "count = n ;",
        "n = n / i ;",
        "for ( i = 2 ; i <= sqrt ( n ) ; i ++ )"
      ],
      "err_line": 4,
      "err_msg": "overloaded function with no contextual type information"
    },
    {
      "mod_line": [
        4,
        7,
        5,
        3
      ],
      "mod_code": [
        "count = n ;",
        "n = n / i ;",
        "for ( i = 2 ; i <= sqrt ( n ) ; i ++ )",
        "int n , n = p - 1 ;"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘int n’"
    },
    {
      "mod_line": [
        4,
        7,
        3
      ],
      "mod_code": [
        "count = n ;",
        "n = n / i ;",
        "int n , n = p - 1 ;"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘int n’"
    },
    {
      "mod_line": [
        4,
        7
      ],
      "mod_code": [
        "count = n ;",
        "n *= i ;"
      ],
      "err_line": 4,
      "err_msg": "overloaded function with no contextual type information"
    },
    {
      "mod_line": [
        4,
        7,
        2
      ],
      "mod_code": [
        "count = n ;",
        "n *= i ;",
        "cout << p << endl ;"
      ],
      "err_line": 4,
      "err_msg": "overloaded function with no contextual type information"
    },
    {
      "mod_line": [
        4,
        7,
        2,
        5
      ],
      "mod_code": [
        "count = n ;",
        "n *= i ;",
        "cout << p << endl ;",
        "for ( i = 2 ; i <= sqrt ( n ) ; i ++ )"
      ],
      "err_line": 4,
      "err_msg": "overloaded function with no contextual type information"
    },
    {
      "mod_line": [
        4,
        7,
        2,
        3
      ],
      "mod_code": [
        "count = n ;",
        "n *= i ;",
        "cout << p << endl ;",
        "int n , n = p - 1 ;"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘int n’"
    },
    {
      "mod_line": [
        4,
        7,
        5
      ],
      "mod_code": [
        "count = n ;",
        "n *= i ;",
        "for ( i = 2 ; i <= sqrt ( n ) ; i ++ )"
      ],
      "err_line": 4,
      "err_msg": "overloaded function with no contextual type information"
    },
    {
      "mod_line": [
        4,
        7,
        5,
        3
      ],
      "mod_code": [
        "count = n ;",
        "n *= i ;",
        "for ( i = 2 ; i <= sqrt ( n ) ; i ++ )",
        "int n , n = p - 1 ;"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘int n’"
    },
    {
      "mod_line": [
        4,
        7,
        3
      ],
      "mod_code": [
        "count = n ;",
        "n *= i ;",
        "int n , n = p - 1 ;"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘int n’"
    },
    {
      "mod_line": [
        4,
        2
      ],
      "mod_code": [
        "count = n ;",
        "cout << p << endl ;"
      ],
      "err_line": 4,
      "err_msg": "overloaded function with no contextual type information"
    },
    {
      "mod_line": [
        4,
        2,
        5
      ],
      "mod_code": [
        "count = n ;",
        "cout << p << endl ;",
        "for ( i = 2 ; i <= sqrt ( n ) ; i ++ )"
      ],
      "err_line": 4,
      "err_msg": "overloaded function with no contextual type information"
    },
    {
      "mod_line": [
        4,
        2,
        5,
        3
      ],
      "mod_code": [
        "count = n ;",
        "cout << p << endl ;",
        "for ( i = 2 ; i <= sqrt ( n ) ; i ++ )",
        "int n , n = p - 1 ;"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘int n’"
    },
    {
      "mod_line": [
        4,
        2,
        3
      ],
      "mod_code": [
        "count = n ;",
        "cout << p << endl ;",
        "int n , n = p - 1 ;"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘int n’"
    },
    {
      "mod_line": [
        4,
        5
      ],
      "mod_code": [
        "count = n ;",
        "for ( i = 2 ; i <= sqrt ( n ) ; i ++ )"
      ],
      "err_line": 4,
      "err_msg": "overloaded function with no contextual type information"
    },
    {
      "mod_line": [
        4,
        5,
        3
      ],
      "mod_code": [
        "count = n ;",
        "for ( i = 2 ; i <= sqrt ( n ) ; i ++ )",
        "int n , n = p - 1 ;"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘int n’"
    },
    {
      "mod_line": [
        4,
        3
      ],
      "mod_code": [
        "count = n ;",
        "int n , n = p - 1 ;"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘int n’"
    },
    {
      "mod_line": [
        7,
        2,
        5
      ],
      "mod_code": [
        "n = n / i ;",
        "cout << p << endl ;",
        "for ( i = 2 ; i <= sqrt ( n ) ; i ++ )"
      ],
      "err_line": 5,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        7,
        2,
        5,
        3
      ],
      "mod_code": [
        "n = n / i ;",
        "cout << p << endl ;",
        "for ( i = 2 ; i <= sqrt ( n ) ; i ++ )",
        "int n , n = p - 1 ;"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘int n’"
    },
    {
      "mod_line": [
        7,
        2,
        3
      ],
      "mod_code": [
        "n = n / i ;",
        "cout << p << endl ;",
        "int n , n = p - 1 ;"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘int n’"
    },
    {
      "mod_line": [
        7,
        5
      ],
      "mod_code": [
        "n = n / i ;",
        "for ( i = 2 ; i <= sqrt ( n ) ; i ++ )"
      ],
      "err_line": 5,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        7,
        5,
        3
      ],
      "mod_code": [
        "n = n / i ;",
        "for ( i = 2 ; i <= sqrt ( n ) ; i ++ )",
        "int n , n = p - 1 ;"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘int n’"
    },
    {
      "mod_line": [
        7,
        3
      ],
      "mod_code": [
        "n = n / i ;",
        "int n , n = p - 1 ;"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘int n’"
    },
    {
      "mod_line": [
        7,
        2,
        5
      ],
      "mod_code": [
        "n *= i ;",
        "cout << p << endl ;",
        "for ( i = 2 ; i <= sqrt ( n ) ; i ++ )"
      ],
      "err_line": 5,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        7,
        2,
        5,
        3
      ],
      "mod_code": [
        "n *= i ;",
        "cout << p << endl ;",
        "for ( i = 2 ; i <= sqrt ( n ) ; i ++ )",
        "int n , n = p - 1 ;"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘int n’"
    },
    {
      "mod_line": [
        7,
        2,
        3
      ],
      "mod_code": [
        "n *= i ;",
        "cout << p << endl ;",
        "int n , n = p - 1 ;"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘int n’"
    },
    {
      "mod_line": [
        7,
        5
      ],
      "mod_code": [
        "n *= i ;",
        "for ( i = 2 ; i <= sqrt ( n ) ; i ++ )"
      ],
      "err_line": 5,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        7,
        5,
        3
      ],
      "mod_code": [
        "n *= i ;",
        "for ( i = 2 ; i <= sqrt ( n ) ; i ++ )",
        "int n , n = p - 1 ;"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘int n’"
    },
    {
      "mod_line": [
        7,
        3
      ],
      "mod_code": [
        "n *= i ;",
        "int n , n = p - 1 ;"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘int n’"
    },
    {
      "mod_line": [
        2,
        5
      ],
      "mod_code": [
        "cout << p << endl ;",
        "for ( i = 2 ; i <= sqrt ( n ) ; i ++ )"
      ],
      "err_line": 5,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        2,
        5,
        3
      ],
      "mod_code": [
        "cout << p << endl ;",
        "for ( i = 2 ; i <= sqrt ( n ) ; i ++ )",
        "int n , n = p - 1 ;"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘int n’"
    },
    {
      "mod_line": [
        2,
        3
      ],
      "mod_code": [
        "cout << p << endl ;",
        "int n , n = p - 1 ;"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘int n’"
    },
    {
      "mod_line": [
        5,
        3
      ],
      "mod_code": [
        "for ( i = 2 ; i <= sqrt ( n ) ; i ++ )",
        "int n , n = p - 1 ;"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘int n’"
    }
  ]
}