{
  "meta": {
    "index": 997,
    "hitid": "3P520RYKCH0KMYXVMHZ8XU70HD95U1",
    "workerid": "A1C5H6OY3HGO4U",
    "probid": "196A",
    "subid": "44458348"
  },
  "lines": [
    {
      "line": 0,
      "text": "in function find_subsequence the takes string variable s",
      "code": "void find_subsequence ( string s )",
      "indent": 0
    },
    {
      "line": 1,
      "text": "count , last_visited_index = integers with last_visited_index having value of - 1",
      "code": "int count , last_visited_index = - 1 ;",
      "indent": 1
    },
    {
      "line": 2,
      "text": "temp = character",
      "code": "char temp ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "result = string with value of \" \"",
      "code": "string result = \" \" ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "for i = 25 to 0 inclusive decreasing",
      "code": "for ( int i = 25 ; i >= 0 ; -- i )",
      "indent": 1
    },
    {
      "line": 5,
      "text": "set temp to i + 97",
      "code": "temp = i + 97 ;",
      "indent": 2
    },
    {
      "line": 6,
      "text": "set count to 0",
      "code": "count = 0 ;",
      "indent": 2
    },
    {
      "line": 7,
      "text": "for i = last_visited_index + 1 to size of s exclusive",
      "code": "for ( int j = last_visited_index + 1 ; j < s . size ( ) ; j ++ )",
      "indent": 2
    },
    {
      "line": 8,
      "text": "if s [ j ] equals temp add 1 to count",
      "code": "if ( s [ j ] == temp ) count ++ ;",
      "indent": 3
    },
    {
      "line": 9,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 10,
      "text": "if count is greater than or equal to 1",
      "code": "if ( count >= 1 )",
      "indent": 2
    },
    {
      "line": 11,
      "text": "for l = last_visited_index + 1 to size of s exclusive",
      "code": "for ( int l = last_visited_index + 1 ; l < s . size ( ) ; l ++ )",
      "indent": 3
    },
    {
      "line": 12,
      "text": "if s [ l ] equals temp",
      "code": "if ( s [ l ] == temp )",
      "indent": 4
    },
    {
      "line": 13,
      "text": "increase result by s [ l ]",
      "code": "result += s [ l ] ;",
      "indent": 5
    },
    {
      "line": 14,
      "text": "set last_visited_index to l",
      "code": "last_visited_index = l ;",
      "indent": 5
    },
    {
      "line": 15,
      "text": "DUMMY",
      "code": "}",
      "indent": 4
    },
    {
      "line": 16,
      "text": "DUMMY",
      "code": "}",
      "indent": 3
    },
    {
      "line": 17,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 18,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 19,
      "text": "print result",
      "code": "cout << result << endl ;",
      "indent": 1
    },
    {
      "line": 20,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    },
    {
      "line": 21,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 22,
      "text": "s = string",
      "code": "string s ;",
      "indent": 1
    },
    {
      "line": 23,
      "text": "read s",
      "code": "cin >> s ;",
      "indent": 1
    },
    {
      "line": 24,
      "text": "call find_subsequence with argument s",
      "code": "find_subsequence ( s ) ;",
      "indent": 1
    },
    {
      "line": 25,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 26,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        7
      ],
      "mod_code": [
        "for ( int i = last_visited_index + 1 ; i < s . size ( ) ; i ++ )"
      ],
      "err_line": 8,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        3
      ],
      "mod_code": [
        "string * result = \" \" ;"
      ],
      "err_line": 3,
      "err_msg": "cannot convert ‘const char*’ to ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ in initialization"
    },
    {
      "mod_line": [
        4
      ],
      "mod_code": [
        "for ( i = 25 ; i >= 0 ; i -- )"
      ],
      "err_line": 4,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        7
      ],
      "mod_code": [
        "for ( i = last_visited_index + 1 ; i < s . size ( ) ; i ++ )"
      ],
      "err_line": 8,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        11
      ],
      "mod_code": [
        "for ( l = last_visited_index + 1 ; l < s . size ( ) ; l ++ )"
      ],
      "err_line": 11,
      "err_msg": "‘l’ was not declared in this scope"
    },
    {
      "mod_line": [
        22
      ],
      "mod_code": [
        "char s ;"
      ],
      "err_line": 24,
      "err_msg": "could not convert ‘s’ from ‘char’ to ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’"
    },
    {
      "mod_line": [
        24
      ],
      "mod_code": [
        "void find_subsequence ( s ) ;"
      ],
      "err_line": 24,
      "err_msg": "variable or field ‘find_subsequence’ declared void"
    },
    {
      "mod_line": [
        3,
        7
      ],
      "mod_code": [
        "string result = \" \" ;",
        "for ( int i = last_visited_index + 1 ; i < s . size ( ) ; i ++ )"
      ],
      "err_line": 8,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        7,
        10
      ],
      "mod_code": [
        "string result = \" \" ;",
        "for ( int i = last_visited_index + 1 ; i < s . size ( ) ; i ++ )",
        "if ( count > 1 )"
      ],
      "err_line": 8,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        7,
        10,
        19
      ],
      "mod_code": [
        "string result = \" \" ;",
        "for ( int i = last_visited_index + 1 ; i < s . size ( ) ; i ++ )",
        "if ( count > 1 )",
        "cout << result ;"
      ],
      "err_line": 8,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        7,
        10,
        1
      ],
      "mod_code": [
        "string result = \" \" ;",
        "for ( int i = last_visited_index + 1 ; i < s . size ( ) ; i ++ )",
        "if ( count > 1 )",
        "int count = - 1 , last_visited_index = 1 ;"
      ],
      "err_line": 8,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        7,
        19
      ],
      "mod_code": [
        "string result = \" \" ;",
        "for ( int i = last_visited_index + 1 ; i < s . size ( ) ; i ++ )",
        "cout << result ;"
      ],
      "err_line": 8,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        7,
        19,
        1
      ],
      "mod_code": [
        "string result = \" \" ;",
        "for ( int i = last_visited_index + 1 ; i < s . size ( ) ; i ++ )",
        "cout << result ;",
        "int count = - 1 , last_visited_index = 1 ;"
      ],
      "err_line": 8,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        7,
        1
      ],
      "mod_code": [
        "string result = \" \" ;",
        "for ( int i = last_visited_index + 1 ; i < s . size ( ) ; i ++ )",
        "int count = - 1 , last_visited_index = 1 ;"
      ],
      "err_line": 8,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        10,
        19,
        7
      ],
      "mod_code": [
        "string result = \" \" ;",
        "if ( count > 1 )",
        "cout << result ;",
        "for ( i = last_visited_index + 1 ; i < s . size ( ) ; i ++ )"
      ],
      "err_line": 8,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        10,
        1,
        7
      ],
      "mod_code": [
        "string result = \" \" ;",
        "if ( count > 1 )",
        "int count = - 1 , last_visited_index = 1 ;",
        "for ( i = last_visited_index + 1 ; i < s . size ( ) ; i ++ )"
      ],
      "err_line": 8,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        10,
        7
      ],
      "mod_code": [
        "string result = \" \" ;",
        "if ( count > 1 )",
        "for ( i = last_visited_index + 1 ; i < s . size ( ) ; i ++ )"
      ],
      "err_line": 8,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        19,
        1,
        7
      ],
      "mod_code": [
        "string result = \" \" ;",
        "cout << result ;",
        "int count = - 1 , last_visited_index = 1 ;",
        "for ( i = last_visited_index + 1 ; i < s . size ( ) ; i ++ )"
      ],
      "err_line": 8,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        19,
        7
      ],
      "mod_code": [
        "string result = \" \" ;",
        "cout << result ;",
        "for ( i = last_visited_index + 1 ; i < s . size ( ) ; i ++ )"
      ],
      "err_line": 8,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        1,
        7
      ],
      "mod_code": [
        "string result = \" \" ;",
        "int count = - 1 , last_visited_index = 1 ;",
        "for ( i = last_visited_index + 1 ; i < s . size ( ) ; i ++ )"
      ],
      "err_line": 8,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        7
      ],
      "mod_code": [
        "string result = \" \" ;",
        "for ( i = last_visited_index + 1 ; i < s . size ( ) ; i ++ )"
      ],
      "err_line": 8,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        7,
        10
      ],
      "mod_code": [
        "for ( int i = last_visited_index + 1 ; i < s . size ( ) ; i ++ )",
        "if ( count > 1 )"
      ],
      "err_line": 8,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        7,
        10,
        19
      ],
      "mod_code": [
        "for ( int i = last_visited_index + 1 ; i < s . size ( ) ; i ++ )",
        "if ( count > 1 )",
        "cout << result ;"
      ],
      "err_line": 8,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        7,
        10,
        19,
        1
      ],
      "mod_code": [
        "for ( int i = last_visited_index + 1 ; i < s . size ( ) ; i ++ )",
        "if ( count > 1 )",
        "cout << result ;",
        "int count = - 1 , last_visited_index = 1 ;"
      ],
      "err_line": 8,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        7,
        10,
        1
      ],
      "mod_code": [
        "for ( int i = last_visited_index + 1 ; i < s . size ( ) ; i ++ )",
        "if ( count > 1 )",
        "int count = - 1 , last_visited_index = 1 ;"
      ],
      "err_line": 8,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        7,
        19
      ],
      "mod_code": [
        "for ( int i = last_visited_index + 1 ; i < s . size ( ) ; i ++ )",
        "cout << result ;"
      ],
      "err_line": 8,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        7,
        19,
        1
      ],
      "mod_code": [
        "for ( int i = last_visited_index + 1 ; i < s . size ( ) ; i ++ )",
        "cout << result ;",
        "int count = - 1 , last_visited_index = 1 ;"
      ],
      "err_line": 8,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        7,
        1
      ],
      "mod_code": [
        "for ( int i = last_visited_index + 1 ; i < s . size ( ) ; i ++ )",
        "int count = - 1 , last_visited_index = 1 ;"
      ],
      "err_line": 8,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        10,
        19,
        1,
        7
      ],
      "mod_code": [
        "if ( count > 1 )",
        "cout << result ;",
        "int count = - 1 , last_visited_index = 1 ;",
        "for ( i = last_visited_index + 1 ; i < s . size ( ) ; i ++ )"
      ],
      "err_line": 8,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        10,
        19,
        7
      ],
      "mod_code": [
        "if ( count > 1 )",
        "cout << result ;",
        "for ( i = last_visited_index + 1 ; i < s . size ( ) ; i ++ )"
      ],
      "err_line": 8,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        10,
        1,
        7
      ],
      "mod_code": [
        "if ( count > 1 )",
        "int count = - 1 , last_visited_index = 1 ;",
        "for ( i = last_visited_index + 1 ; i < s . size ( ) ; i ++ )"
      ],
      "err_line": 8,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        10,
        7
      ],
      "mod_code": [
        "if ( count > 1 )",
        "for ( i = last_visited_index + 1 ; i < s . size ( ) ; i ++ )"
      ],
      "err_line": 8,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        19,
        1,
        7
      ],
      "mod_code": [
        "cout << result ;",
        "int count = - 1 , last_visited_index = 1 ;",
        "for ( i = last_visited_index + 1 ; i < s . size ( ) ; i ++ )"
      ],
      "err_line": 8,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        19,
        7
      ],
      "mod_code": [
        "cout << result ;",
        "for ( i = last_visited_index + 1 ; i < s . size ( ) ; i ++ )"
      ],
      "err_line": 8,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        7
      ],
      "mod_code": [
        "int count = - 1 , last_visited_index = 1 ;",
        "for ( i = last_visited_index + 1 ; i < s . size ( ) ; i ++ )"
      ],
      "err_line": 8,
      "err_msg": "‘j’ was not declared in this scope"
    }
  ]
}