{
  "meta": {
    "index": 1124,
    "hitid": "362E9TQF2HKDT4RF9WTLIOAEDCKGIC",
    "workerid": "AIWEXPJAU66D9",
    "probid": "41A",
    "subid": "48894522"
  },
  "lines": [
    {
      "line": 0,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 1,
      "text": "create strings s1 and s2",
      "code": "string s1 , s2 ;",
      "indent": 1
    },
    {
      "line": 2,
      "text": "read s1 and s2",
      "code": "cin >> s1 >> s2 ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "assign value 0 to the integer i",
      "code": "int i = 0 ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "integer j = size of s1 - 1",
      "code": "int j = s1 . size ( ) - 1 ;",
      "indent": 1
    },
    {
      "line": 5,
      "text": "assign value 0 to the integer f",
      "code": "int f = 0 ;",
      "indent": 1
    },
    {
      "line": 6,
      "text": "for i = 0 , j = length of s1 - 1 to length of s1 and j > = 0 exclusive , increment i and decrement j",
      "code": "for ( i = 0 , j = s1 . size ( ) - 1 ; i < s1 . size ( ) && j >= 0 ; i ++ , j -- )",
      "indent": 1
    },
    {
      "line": 7,
      "text": "if s1 [ i ] is equal to s2 [ j ]",
      "code": "if ( s1 [ i ] == s2 [ j ] )",
      "indent": 2
    },
    {
      "line": 8,
      "text": "continue the loop",
      "code": "continue ;",
      "indent": 3
    },
    {
      "line": 9,
      "text": "else",
      "code": "else",
      "indent": 2
    },
    {
      "line": 10,
      "text": "set value of f to 1",
      "code": "f = 1 ;",
      "indent": 3
    },
    {
      "line": 11,
      "text": "stop the loop",
      "code": "break ;",
      "indent": 3
    },
    {
      "line": 12,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 13,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 14,
      "text": "if f is equal to 0",
      "code": "if ( f == 0 )",
      "indent": 1
    },
    {
      "line": 15,
      "text": "print \" YES \" and a new line",
      "code": "cout << \" YES \" << endl ;",
      "indent": 2
    },
    {
      "line": 16,
      "text": "else",
      "code": "else",
      "indent": 1
    },
    {
      "line": 17,
      "text": "print \" NO \" and a new line",
      "code": "cout << \" NO \" << endl ;",
      "indent": 2
    },
    {
      "line": 18,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        1
      ],
      "mod_code": [
        "strings , s2 ;"
      ],
      "err_line": 1,
      "err_msg": "‘strings’ was not declared in this scope"
    },
    {
      "mod_line": [
        2
      ],
      "mod_code": [
        "cout << s1 >> s2 ;"
      ],
      "err_line": 2,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::basic_ostream<char>’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        3
      ],
      "mod_code": [
        "i = 0 ;"
      ],
      "err_line": 3,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        4
      ],
      "mod_code": [
        "int j = s1 - s1 . size ( ) - 1 ;"
      ],
      "err_line": 4,
      "err_msg": "no match for ‘operator-’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::basic_string<char>::size_type {aka long unsigned int}’)"
    },
    {
      "mod_line": [
        5
      ],
      "mod_code": [
        "f = 0 ;"
      ],
      "err_line": 5,
      "err_msg": "‘f’ was not declared in this scope"
    },
    {
      "mod_line": [
        7
      ],
      "mod_code": [
        "if ( s1 [ i ] ] == s2 [ j ] )"
      ],
      "err_line": 7,
      "err_msg": "expected ‘)’ before ‘]’ token"
    },
    {
      "mod_line": [
        10
      ],
      "mod_code": [
        "* f = 1 ;"
      ],
      "err_line": 10,
      "err_msg": "invalid type argument of unary ‘*’ (have ‘int’)"
    },
    {
      "mod_line": [
        11
      ],
      "mod_code": [
        "stop ;"
      ],
      "err_line": 11,
      "err_msg": "‘stop’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        1
      ],
      "mod_code": [
        "for ( int i = 0 , j = s1 . length ( ) - 1 ; i >= 0 ; i -- , j -- )",
        "strings , s2 ;"
      ],
      "err_line": 1,
      "err_msg": "‘strings’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        1,
        4
      ],
      "mod_code": [
        "for ( int i = 0 , j = s1 . length ( ) - 1 ; i >= 0 ; i -- , j -- )",
        "strings , s2 ;",
        "int j = s1 - s1 . size ( ) - 1 ;"
      ],
      "err_line": 1,
      "err_msg": "‘strings’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        1,
        4,
        2
      ],
      "mod_code": [
        "for ( int i = 0 , j = s1 . length ( ) - 1 ; i >= 0 ; i -- , j -- )",
        "strings , s2 ;",
        "int j = s1 - s1 . size ( ) - 1 ;",
        "cout << s1 >> s2 ;"
      ],
      "err_line": 1,
      "err_msg": "‘strings’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        1,
        4,
        11
      ],
      "mod_code": [
        "for ( int i = 0 , j = s1 . length ( ) - 1 ; i >= 0 ; i -- , j -- )",
        "strings , s2 ;",
        "int j = s1 - s1 . size ( ) - 1 ;",
        "stop ;"
      ],
      "err_line": 1,
      "err_msg": "‘strings’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        1,
        4,
        8
      ],
      "mod_code": [
        "for ( int i = 0 , j = s1 . length ( ) - 1 ; i >= 0 ; i -- , j -- )",
        "strings , s2 ;",
        "int j = s1 - s1 . size ( ) - 1 ;",
        "break ;"
      ],
      "err_line": 1,
      "err_msg": "‘strings’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        1,
        2
      ],
      "mod_code": [
        "for ( int i = 0 , j = s1 . length ( ) - 1 ; i >= 0 ; i -- , j -- )",
        "strings , s2 ;",
        "cout << s1 >> s2 ;"
      ],
      "err_line": 1,
      "err_msg": "‘strings’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        1,
        2,
        11
      ],
      "mod_code": [
        "for ( int i = 0 , j = s1 . length ( ) - 1 ; i >= 0 ; i -- , j -- )",
        "strings , s2 ;",
        "cout << s1 >> s2 ;",
        "stop ;"
      ],
      "err_line": 1,
      "err_msg": "‘strings’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        1,
        2,
        8
      ],
      "mod_code": [
        "for ( int i = 0 , j = s1 . length ( ) - 1 ; i >= 0 ; i -- , j -- )",
        "strings , s2 ;",
        "cout << s1 >> s2 ;",
        "break ;"
      ],
      "err_line": 1,
      "err_msg": "‘strings’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        1,
        11
      ],
      "mod_code": [
        "for ( int i = 0 , j = s1 . length ( ) - 1 ; i >= 0 ; i -- , j -- )",
        "strings , s2 ;",
        "stop ;"
      ],
      "err_line": 1,
      "err_msg": "‘strings’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        1,
        11,
        8
      ],
      "mod_code": [
        "for ( int i = 0 , j = s1 . length ( ) - 1 ; i >= 0 ; i -- , j -- )",
        "strings , s2 ;",
        "stop ;",
        "break ;"
      ],
      "err_line": 1,
      "err_msg": "‘strings’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        1,
        8
      ],
      "mod_code": [
        "for ( int i = 0 , j = s1 . length ( ) - 1 ; i >= 0 ; i -- , j -- )",
        "strings , s2 ;",
        "break ;"
      ],
      "err_line": 1,
      "err_msg": "‘strings’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        4
      ],
      "mod_code": [
        "for ( int i = 0 , j = s1 . length ( ) - 1 ; i >= 0 ; i -- , j -- )",
        "int j = s1 - s1 . size ( ) - 1 ;"
      ],
      "err_line": 4,
      "err_msg": "no match for ‘operator-’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::basic_string<char>::size_type {aka long unsigned int}’)"
    },
    {
      "mod_line": [
        6,
        4,
        2
      ],
      "mod_code": [
        "for ( int i = 0 , j = s1 . length ( ) - 1 ; i >= 0 ; i -- , j -- )",
        "int j = s1 - s1 . size ( ) - 1 ;",
        "cout << s1 >> s2 ;"
      ],
      "err_line": 2,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::basic_ostream<char>’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        6,
        4,
        2,
        11
      ],
      "mod_code": [
        "for ( int i = 0 , j = s1 . length ( ) - 1 ; i >= 0 ; i -- , j -- )",
        "int j = s1 - s1 . size ( ) - 1 ;",
        "cout << s1 >> s2 ;",
        "stop ;"
      ],
      "err_line": 2,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::basic_ostream<char>’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        6,
        4,
        2,
        8
      ],
      "mod_code": [
        "for ( int i = 0 , j = s1 . length ( ) - 1 ; i >= 0 ; i -- , j -- )",
        "int j = s1 - s1 . size ( ) - 1 ;",
        "cout << s1 >> s2 ;",
        "break ;"
      ],
      "err_line": 2,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::basic_ostream<char>’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        6,
        4,
        11
      ],
      "mod_code": [
        "for ( int i = 0 , j = s1 . length ( ) - 1 ; i >= 0 ; i -- , j -- )",
        "int j = s1 - s1 . size ( ) - 1 ;",
        "stop ;"
      ],
      "err_line": 4,
      "err_msg": "no match for ‘operator-’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::basic_string<char>::size_type {aka long unsigned int}’)"
    },
    {
      "mod_line": [
        6,
        4,
        11,
        8
      ],
      "mod_code": [
        "for ( int i = 0 , j = s1 . length ( ) - 1 ; i >= 0 ; i -- , j -- )",
        "int j = s1 - s1 . size ( ) - 1 ;",
        "stop ;",
        "break ;"
      ],
      "err_line": 4,
      "err_msg": "no match for ‘operator-’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::basic_string<char>::size_type {aka long unsigned int}’)"
    },
    {
      "mod_line": [
        6,
        4,
        8
      ],
      "mod_code": [
        "for ( int i = 0 , j = s1 . length ( ) - 1 ; i >= 0 ; i -- , j -- )",
        "int j = s1 - s1 . size ( ) - 1 ;",
        "break ;"
      ],
      "err_line": 4,
      "err_msg": "no match for ‘operator-’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::basic_string<char>::size_type {aka long unsigned int}’)"
    },
    {
      "mod_line": [
        6,
        2
      ],
      "mod_code": [
        "for ( int i = 0 , j = s1 . length ( ) - 1 ; i >= 0 ; i -- , j -- )",
        "cout << s1 >> s2 ;"
      ],
      "err_line": 2,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::basic_ostream<char>’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        6,
        2,
        11
      ],
      "mod_code": [
        "for ( int i = 0 , j = s1 . length ( ) - 1 ; i >= 0 ; i -- , j -- )",
        "cout << s1 >> s2 ;",
        "stop ;"
      ],
      "err_line": 2,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::basic_ostream<char>’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        6,
        2,
        11,
        8
      ],
      "mod_code": [
        "for ( int i = 0 , j = s1 . length ( ) - 1 ; i >= 0 ; i -- , j -- )",
        "cout << s1 >> s2 ;",
        "stop ;",
        "break ;"
      ],
      "err_line": 2,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::basic_ostream<char>’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        6,
        2,
        8
      ],
      "mod_code": [
        "for ( int i = 0 , j = s1 . length ( ) - 1 ; i >= 0 ; i -- , j -- )",
        "cout << s1 >> s2 ;",
        "break ;"
      ],
      "err_line": 2,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::basic_ostream<char>’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        6,
        11
      ],
      "mod_code": [
        "for ( int i = 0 , j = s1 . length ( ) - 1 ; i >= 0 ; i -- , j -- )",
        "stop ;"
      ],
      "err_line": 11,
      "err_msg": "‘stop’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        11,
        8
      ],
      "mod_code": [
        "for ( int i = 0 , j = s1 . length ( ) - 1 ; i >= 0 ; i -- , j -- )",
        "stop ;",
        "break ;"
      ],
      "err_line": 11,
      "err_msg": "‘stop’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        4
      ],
      "mod_code": [
        "strings , s2 ;",
        "int j = s1 - s1 . size ( ) - 1 ;"
      ],
      "err_line": 1,
      "err_msg": "‘strings’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        4,
        2
      ],
      "mod_code": [
        "strings , s2 ;",
        "int j = s1 - s1 . size ( ) - 1 ;",
        "cout << s1 >> s2 ;"
      ],
      "err_line": 1,
      "err_msg": "‘strings’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        4,
        2,
        11
      ],
      "mod_code": [
        "strings , s2 ;",
        "int j = s1 - s1 . size ( ) - 1 ;",
        "cout << s1 >> s2 ;",
        "stop ;"
      ],
      "err_line": 1,
      "err_msg": "‘strings’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        4,
        2,
        8
      ],
      "mod_code": [
        "strings , s2 ;",
        "int j = s1 - s1 . size ( ) - 1 ;",
        "cout << s1 >> s2 ;",
        "break ;"
      ],
      "err_line": 1,
      "err_msg": "‘strings’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        4,
        11
      ],
      "mod_code": [
        "strings , s2 ;",
        "int j = s1 - s1 . size ( ) - 1 ;",
        "stop ;"
      ],
      "err_line": 1,
      "err_msg": "‘strings’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        4,
        11,
        8
      ],
      "mod_code": [
        "strings , s2 ;",
        "int j = s1 - s1 . size ( ) - 1 ;",
        "stop ;",
        "break ;"
      ],
      "err_line": 1,
      "err_msg": "‘strings’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        4,
        8
      ],
      "mod_code": [
        "strings , s2 ;",
        "int j = s1 - s1 . size ( ) - 1 ;",
        "break ;"
      ],
      "err_line": 1,
      "err_msg": "‘strings’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        2
      ],
      "mod_code": [
        "strings , s2 ;",
        "cout << s1 >> s2 ;"
      ],
      "err_line": 1,
      "err_msg": "‘strings’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        2,
        11
      ],
      "mod_code": [
        "strings , s2 ;",
        "cout << s1 >> s2 ;",
        "stop ;"
      ],
      "err_line": 1,
      "err_msg": "‘strings’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        2,
        11,
        8
      ],
      "mod_code": [
        "strings , s2 ;",
        "cout << s1 >> s2 ;",
        "stop ;",
        "break ;"
      ],
      "err_line": 1,
      "err_msg": "‘strings’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        2,
        8
      ],
      "mod_code": [
        "strings , s2 ;",
        "cout << s1 >> s2 ;",
        "break ;"
      ],
      "err_line": 1,
      "err_msg": "‘strings’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        11
      ],
      "mod_code": [
        "strings , s2 ;",
        "stop ;"
      ],
      "err_line": 1,
      "err_msg": "‘strings’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        11,
        8
      ],
      "mod_code": [
        "strings , s2 ;",
        "stop ;",
        "break ;"
      ],
      "err_line": 1,
      "err_msg": "‘strings’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        8
      ],
      "mod_code": [
        "strings , s2 ;",
        "break ;"
      ],
      "err_line": 1,
      "err_msg": "‘strings’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        2
      ],
      "mod_code": [
        "int j = s1 - s1 . size ( ) - 1 ;",
        "cout << s1 >> s2 ;"
      ],
      "err_line": 2,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::basic_ostream<char>’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        4,
        2,
        11
      ],
      "mod_code": [
        "int j = s1 - s1 . size ( ) - 1 ;",
        "cout << s1 >> s2 ;",
        "stop ;"
      ],
      "err_line": 2,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::basic_ostream<char>’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        4,
        2,
        11,
        8
      ],
      "mod_code": [
        "int j = s1 - s1 . size ( ) - 1 ;",
        "cout << s1 >> s2 ;",
        "stop ;",
        "break ;"
      ],
      "err_line": 2,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::basic_ostream<char>’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        4,
        2,
        8
      ],
      "mod_code": [
        "int j = s1 - s1 . size ( ) - 1 ;",
        "cout << s1 >> s2 ;",
        "break ;"
      ],
      "err_line": 2,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::basic_ostream<char>’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        4,
        11
      ],
      "mod_code": [
        "int j = s1 - s1 . size ( ) - 1 ;",
        "stop ;"
      ],
      "err_line": 4,
      "err_msg": "no match for ‘operator-’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::basic_string<char>::size_type {aka long unsigned int}’)"
    },
    {
      "mod_line": [
        4,
        11,
        8
      ],
      "mod_code": [
        "int j = s1 - s1 . size ( ) - 1 ;",
        "stop ;",
        "break ;"
      ],
      "err_line": 4,
      "err_msg": "no match for ‘operator-’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::basic_string<char>::size_type {aka long unsigned int}’)"
    },
    {
      "mod_line": [
        4,
        8
      ],
      "mod_code": [
        "int j = s1 - s1 . size ( ) - 1 ;",
        "break ;"
      ],
      "err_line": 4,
      "err_msg": "no match for ‘operator-’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::basic_string<char>::size_type {aka long unsigned int}’)"
    },
    {
      "mod_line": [
        2,
        11
      ],
      "mod_code": [
        "cout << s1 >> s2 ;",
        "stop ;"
      ],
      "err_line": 2,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::basic_ostream<char>’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        2,
        11,
        8
      ],
      "mod_code": [
        "cout << s1 >> s2 ;",
        "stop ;",
        "break ;"
      ],
      "err_line": 2,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::basic_ostream<char>’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        2,
        8
      ],
      "mod_code": [
        "cout << s1 >> s2 ;",
        "break ;"
      ],
      "err_line": 2,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::basic_ostream<char>’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        11,
        8
      ],
      "mod_code": [
        "stop ;",
        "break ;"
      ],
      "err_line": 11,
      "err_msg": "‘stop’ was not declared in this scope"
    }
  ]
}