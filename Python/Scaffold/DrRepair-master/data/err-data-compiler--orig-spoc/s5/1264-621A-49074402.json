{
  "meta": {
    "index": 1264,
    "hitid": "3MDWE879UHWORMQ1PGVU4KKEFBEB9L",
    "workerid": "A1AYVATMT88U1W",
    "probid": "621A",
    "subid": "49074402"
  },
  "lines": [
    {
      "line": 0,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 1,
      "text": "let n , jum , arr be long integers with jum = 0 , arr = array of long integers of length 100009",
      "code": "long long n , jum = 0 , arr [ 100009 ] ;",
      "indent": 1
    },
    {
      "line": 2,
      "text": "read n",
      "code": "cin >> n ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "for i = 1 to n inclusive",
      "code": "for ( int i = 1 ; i <= n ; i ++ )",
      "indent": 1
    },
    {
      "line": 4,
      "text": "read ith element of arr",
      "code": "cin >> arr [ i ] ;",
      "indent": 2
    },
    {
      "line": 5,
      "text": "increase jum by arr [ i ]",
      "code": "jum += arr [ i ] ;",
      "indent": 2
    },
    {
      "line": 6,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 7,
      "text": "if jum modulo 2 is equal to 0",
      "code": "if ( jum % 2 == 0 )",
      "indent": 1
    },
    {
      "line": 8,
      "text": "print jum and newline",
      "code": "cout << jum << endl ;",
      "indent": 2
    },
    {
      "line": 9,
      "text": "else do the following",
      "code": "else",
      "indent": 1
    },
    {
      "line": 10,
      "text": "sort the values arr + 1 and arr + n + 1",
      "code": "sort ( arr + 1 , arr + n + 1 ) ;",
      "indent": 2
    },
    {
      "line": 11,
      "text": "for i = 1 to n inclusive",
      "code": "for ( int i = 1 ; i <= n ; i ++ )",
      "indent": 2
    },
    {
      "line": 12,
      "text": "if arr [ i ] modulo 2 is equal to 1",
      "code": "if ( arr [ i ] % 2 == 1 )",
      "indent": 3
    },
    {
      "line": 13,
      "text": "print jum - arr [ i ] and newline",
      "code": "cout << jum - arr [ i ] << endl ;",
      "indent": 4
    },
    {
      "line": 14,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 4
    },
    {
      "line": 15,
      "text": "DUMMY",
      "code": "}",
      "indent": 3
    },
    {
      "line": 16,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 17,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 18,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        3
      ],
      "mod_code": [
        "for ( i = 1 ; i <= n ; i ++ )"
      ],
      "err_line": 3,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        10
      ],
      "mod_code": [
        "sort ( arr + 1 , arr + n + 1 1 ) ;"
      ],
      "err_line": 10,
      "err_msg": "expected ‘)’ before numeric constant"
    },
    {
      "mod_line": [
        11
      ],
      "mod_code": [
        "for ( i = 1 ; i <= n ; i ++ )"
      ],
      "err_line": 11,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        3,
        4
      ],
      "mod_code": [
        "for ( i = 1 ; i <= n ; i ++ )",
        "cin >> arr [ i ] >> arr [ i ] ;"
      ],
      "err_line": 3,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        4,
        11
      ],
      "mod_code": [
        "for ( i = 1 ; i <= n ; i ++ )",
        "cin >> arr [ i ] >> arr [ i ] ;",
        "for ( i = 1 ; i <= n ; i ++ )"
      ],
      "err_line": 3,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        4,
        11,
        9
      ],
      "mod_code": [
        "for ( i = 1 ; i <= n ; i ++ )",
        "cin >> arr [ i ] >> arr [ i ] ;",
        "for ( i = 1 ; i <= n ; i ++ )",
        "while ( 1 )"
      ],
      "err_line": 3,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        4,
        11,
        10
      ],
      "mod_code": [
        "for ( i = 1 ; i <= n ; i ++ )",
        "cin >> arr [ i ] >> arr [ i ] ;",
        "for ( i = 1 ; i <= n ; i ++ )",
        "sort ( arr + 1 , arr + n + 1 1 ) ;"
      ],
      "err_line": 3,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        4,
        9
      ],
      "mod_code": [
        "for ( i = 1 ; i <= n ; i ++ )",
        "cin >> arr [ i ] >> arr [ i ] ;",
        "while ( 1 )"
      ],
      "err_line": 3,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        4,
        9,
        10
      ],
      "mod_code": [
        "for ( i = 1 ; i <= n ; i ++ )",
        "cin >> arr [ i ] >> arr [ i ] ;",
        "while ( 1 )",
        "sort ( arr + 1 , arr + n + 1 1 ) ;"
      ],
      "err_line": 3,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        4,
        10
      ],
      "mod_code": [
        "for ( i = 1 ; i <= n ; i ++ )",
        "cin >> arr [ i ] >> arr [ i ] ;",
        "sort ( arr + 1 , arr + n + 1 1 ) ;"
      ],
      "err_line": 3,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        11
      ],
      "mod_code": [
        "for ( i = 1 ; i <= n ; i ++ )",
        "for ( i = 1 ; i <= n ; i ++ )"
      ],
      "err_line": 3,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        11,
        9
      ],
      "mod_code": [
        "for ( i = 1 ; i <= n ; i ++ )",
        "for ( i = 1 ; i <= n ; i ++ )",
        "while ( 1 )"
      ],
      "err_line": 3,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        11,
        9,
        10
      ],
      "mod_code": [
        "for ( i = 1 ; i <= n ; i ++ )",
        "for ( i = 1 ; i <= n ; i ++ )",
        "while ( 1 )",
        "sort ( arr + 1 , arr + n + 1 1 ) ;"
      ],
      "err_line": 3,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        11,
        10
      ],
      "mod_code": [
        "for ( i = 1 ; i <= n ; i ++ )",
        "for ( i = 1 ; i <= n ; i ++ )",
        "sort ( arr + 1 , arr + n + 1 1 ) ;"
      ],
      "err_line": 3,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        9
      ],
      "mod_code": [
        "for ( i = 1 ; i <= n ; i ++ )",
        "while ( 1 )"
      ],
      "err_line": 3,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        9,
        10
      ],
      "mod_code": [
        "for ( i = 1 ; i <= n ; i ++ )",
        "while ( 1 )",
        "sort ( arr + 1 , arr + n + 1 1 ) ;"
      ],
      "err_line": 3,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        10
      ],
      "mod_code": [
        "for ( i = 1 ; i <= n ; i ++ )",
        "sort ( arr + 1 , arr + n + 1 1 ) ;"
      ],
      "err_line": 3,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        11
      ],
      "mod_code": [
        "cin >> arr [ i ] >> arr [ i ] ;",
        "for ( i = 1 ; i <= n ; i ++ )"
      ],
      "err_line": 11,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        4,
        11,
        9
      ],
      "mod_code": [
        "cin >> arr [ i ] >> arr [ i ] ;",
        "for ( i = 1 ; i <= n ; i ++ )",
        "while ( 1 )"
      ],
      "err_line": 11,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        4,
        11,
        9,
        10
      ],
      "mod_code": [
        "cin >> arr [ i ] >> arr [ i ] ;",
        "for ( i = 1 ; i <= n ; i ++ )",
        "while ( 1 )",
        "sort ( arr + 1 , arr + n + 1 1 ) ;"
      ],
      "err_line": 10,
      "err_msg": "expected ‘)’ before numeric constant"
    },
    {
      "mod_line": [
        4,
        11,
        10
      ],
      "mod_code": [
        "cin >> arr [ i ] >> arr [ i ] ;",
        "for ( i = 1 ; i <= n ; i ++ )",
        "sort ( arr + 1 , arr + n + 1 1 ) ;"
      ],
      "err_line": 10,
      "err_msg": "expected ‘)’ before numeric constant"
    },
    {
      "mod_line": [
        4,
        9,
        10
      ],
      "mod_code": [
        "cin >> arr [ i ] >> arr [ i ] ;",
        "while ( 1 )",
        "sort ( arr + 1 , arr + n + 1 1 ) ;"
      ],
      "err_line": 10,
      "err_msg": "expected ‘)’ before numeric constant"
    },
    {
      "mod_line": [
        4,
        10
      ],
      "mod_code": [
        "cin >> arr [ i ] >> arr [ i ] ;",
        "sort ( arr + 1 , arr + n + 1 1 ) ;"
      ],
      "err_line": 10,
      "err_msg": "expected ‘)’ before numeric constant"
    },
    {
      "mod_line": [
        11,
        9
      ],
      "mod_code": [
        "for ( i = 1 ; i <= n ; i ++ )",
        "while ( 1 )"
      ],
      "err_line": 11,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        11,
        9,
        10
      ],
      "mod_code": [
        "for ( i = 1 ; i <= n ; i ++ )",
        "while ( 1 )",
        "sort ( arr + 1 , arr + n + 1 1 ) ;"
      ],
      "err_line": 10,
      "err_msg": "expected ‘)’ before numeric constant"
    },
    {
      "mod_line": [
        11,
        10
      ],
      "mod_code": [
        "for ( i = 1 ; i <= n ; i ++ )",
        "sort ( arr + 1 , arr + n + 1 1 ) ;"
      ],
      "err_line": 10,
      "err_msg": "expected ‘)’ before numeric constant"
    },
    {
      "mod_line": [
        9,
        10
      ],
      "mod_code": [
        "while ( 1 )",
        "sort ( arr + 1 , arr + n + 1 1 ) ;"
      ],
      "err_line": 10,
      "err_msg": "expected ‘)’ before numeric constant"
    }
  ]
}