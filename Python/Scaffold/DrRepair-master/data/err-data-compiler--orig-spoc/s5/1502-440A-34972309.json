{
  "meta": {
    "index": 1502,
    "hitid": "3PA41K45VNYMHX3ITOFBL8YX1P67PR",
    "workerid": "A1AYVATMT88U1W",
    "probid": "440A",
    "subid": "34972309"
  },
  "lines": [
    {
      "line": 0,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 1,
      "text": "let x , y be integers",
      "code": "int x , y ;",
      "indent": 1
    },
    {
      "line": 2,
      "text": "read x",
      "code": "cin >> x ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "let v be a boolean vector with values x + 1 , 0",
      "code": "vector < bool > v ( x + 1 , 0 ) ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "for j = 1 to x exclusive",
      "code": "for ( int j = 1 ; j < x ; j ++ )",
      "indent": 1
    },
    {
      "line": 5,
      "text": "read y",
      "code": "cin >> y ;",
      "indent": 2
    },
    {
      "line": 6,
      "text": "yth element of v is 1",
      "code": "v [ y ] = 1 ;",
      "indent": 2
    },
    {
      "line": 7,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 8,
      "text": "for k = 1 to x inclusive",
      "code": "for ( int k = 1 ; k <= x ; k ++ )",
      "indent": 1
    },
    {
      "line": 9,
      "text": "if not v [ k ]",
      "code": "if ( ! v [ k ] )",
      "indent": 2
    },
    {
      "line": 10,
      "text": "print k and newline",
      "code": "cout << k << endl ;",
      "indent": 3
    },
    {
      "line": 11,
      "text": "stop",
      "code": "break ;",
      "indent": 3
    },
    {
      "line": 12,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 13,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 14,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 15,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        3
      ],
      "mod_code": [
        "bool v [ x + 1 , 0 ] ;"
      ],
      "err_line": 3,
      "err_msg": "expected ‘]’ before ‘,’ token"
    },
    {
      "mod_line": [
        6
      ],
      "mod_code": [
        "v . yth ( ) ;"
      ],
      "err_line": 6,
      "err_msg": "‘class std::vector<bool>’ has no member named ‘yth’"
    },
    {
      "mod_line": [
        3
      ],
      "mod_code": [
        "bool v ( x + 1 , 0 ) ;"
      ],
      "err_line": 3,
      "err_msg": "expression list treated as compound expression in initializer [-fpermissive]"
    },
    {
      "mod_line": [
        4
      ],
      "mod_code": [
        "for ( j = 1 ; j < x ; j ++ )"
      ],
      "err_line": 4,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        8
      ],
      "mod_code": [
        "for ( k = 1 ; k <= x ; k ++ )"
      ],
      "err_line": 8,
      "err_msg": "‘k’ was not declared in this scope"
    },
    {
      "mod_line": [
        11
      ],
      "mod_code": [
        "stop ;"
      ],
      "err_line": 11,
      "err_msg": "‘stop’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        6
      ],
      "mod_code": [
        "bool v [ x + 1 , 0 ] ;",
        "v . yth ( ) ;"
      ],
      "err_line": 3,
      "err_msg": "expected ‘]’ before ‘,’ token"
    },
    {
      "mod_line": [
        3,
        6,
        4
      ],
      "mod_code": [
        "bool v [ x + 1 , 0 ] ;",
        "v . yth ( ) ;",
        "for ( j = 1 ; j < x ; j ++ )"
      ],
      "err_line": 3,
      "err_msg": "expected ‘]’ before ‘,’ token"
    },
    {
      "mod_line": [
        3,
        6,
        4,
        11
      ],
      "mod_code": [
        "bool v [ x + 1 , 0 ] ;",
        "v . yth ( ) ;",
        "for ( j = 1 ; j < x ; j ++ )",
        "stop ;"
      ],
      "err_line": 3,
      "err_msg": "expected ‘]’ before ‘,’ token"
    },
    {
      "mod_line": [
        3,
        6,
        4,
        9
      ],
      "mod_code": [
        "bool v [ x + 1 , 0 ] ;",
        "v . yth ( ) ;",
        "for ( j = 1 ; j < x ; j ++ )",
        "if ( v [ k ] != 0 )"
      ],
      "err_line": 3,
      "err_msg": "expected ‘]’ before ‘,’ token"
    },
    {
      "mod_line": [
        3,
        6,
        4,
        2
      ],
      "mod_code": [
        "bool v [ x + 1 , 0 ] ;",
        "v . yth ( ) ;",
        "for ( j = 1 ; j < x ; j ++ )",
        "cout << x << endl ;"
      ],
      "err_line": 3,
      "err_msg": "expected ‘]’ before ‘,’ token"
    },
    {
      "mod_line": [
        3,
        6,
        11
      ],
      "mod_code": [
        "bool v [ x + 1 , 0 ] ;",
        "v . yth ( ) ;",
        "stop ;"
      ],
      "err_line": 3,
      "err_msg": "expected ‘]’ before ‘,’ token"
    },
    {
      "mod_line": [
        3,
        6,
        11,
        9
      ],
      "mod_code": [
        "bool v [ x + 1 , 0 ] ;",
        "v . yth ( ) ;",
        "stop ;",
        "if ( v [ k ] != 0 )"
      ],
      "err_line": 3,
      "err_msg": "expected ‘]’ before ‘,’ token"
    },
    {
      "mod_line": [
        3,
        6,
        11,
        2
      ],
      "mod_code": [
        "bool v [ x + 1 , 0 ] ;",
        "v . yth ( ) ;",
        "stop ;",
        "cout << x << endl ;"
      ],
      "err_line": 3,
      "err_msg": "expected ‘]’ before ‘,’ token"
    },
    {
      "mod_line": [
        3,
        6,
        9
      ],
      "mod_code": [
        "bool v [ x + 1 , 0 ] ;",
        "v . yth ( ) ;",
        "if ( v [ k ] != 0 )"
      ],
      "err_line": 3,
      "err_msg": "expected ‘]’ before ‘,’ token"
    },
    {
      "mod_line": [
        3,
        6,
        9,
        2
      ],
      "mod_code": [
        "bool v [ x + 1 , 0 ] ;",
        "v . yth ( ) ;",
        "if ( v [ k ] != 0 )",
        "cout << x << endl ;"
      ],
      "err_line": 3,
      "err_msg": "expected ‘]’ before ‘,’ token"
    },
    {
      "mod_line": [
        3,
        6,
        2
      ],
      "mod_code": [
        "bool v [ x + 1 , 0 ] ;",
        "v . yth ( ) ;",
        "cout << x << endl ;"
      ],
      "err_line": 3,
      "err_msg": "expected ‘]’ before ‘,’ token"
    },
    {
      "mod_line": [
        3,
        4
      ],
      "mod_code": [
        "bool v [ x + 1 , 0 ] ;",
        "for ( j = 1 ; j < x ; j ++ )"
      ],
      "err_line": 3,
      "err_msg": "expected ‘]’ before ‘,’ token"
    },
    {
      "mod_line": [
        3,
        4,
        11
      ],
      "mod_code": [
        "bool v [ x + 1 , 0 ] ;",
        "for ( j = 1 ; j < x ; j ++ )",
        "stop ;"
      ],
      "err_line": 3,
      "err_msg": "expected ‘]’ before ‘,’ token"
    },
    {
      "mod_line": [
        3,
        4,
        11,
        9
      ],
      "mod_code": [
        "bool v [ x + 1 , 0 ] ;",
        "for ( j = 1 ; j < x ; j ++ )",
        "stop ;",
        "if ( v [ k ] != 0 )"
      ],
      "err_line": 3,
      "err_msg": "expected ‘]’ before ‘,’ token"
    },
    {
      "mod_line": [
        3,
        4,
        11,
        2
      ],
      "mod_code": [
        "bool v [ x + 1 , 0 ] ;",
        "for ( j = 1 ; j < x ; j ++ )",
        "stop ;",
        "cout << x << endl ;"
      ],
      "err_line": 3,
      "err_msg": "expected ‘]’ before ‘,’ token"
    },
    {
      "mod_line": [
        3,
        4,
        9
      ],
      "mod_code": [
        "bool v [ x + 1 , 0 ] ;",
        "for ( j = 1 ; j < x ; j ++ )",
        "if ( v [ k ] != 0 )"
      ],
      "err_line": 3,
      "err_msg": "expected ‘]’ before ‘,’ token"
    },
    {
      "mod_line": [
        3,
        4,
        9,
        2
      ],
      "mod_code": [
        "bool v [ x + 1 , 0 ] ;",
        "for ( j = 1 ; j < x ; j ++ )",
        "if ( v [ k ] != 0 )",
        "cout << x << endl ;"
      ],
      "err_line": 3,
      "err_msg": "expected ‘]’ before ‘,’ token"
    },
    {
      "mod_line": [
        3,
        4,
        2
      ],
      "mod_code": [
        "bool v [ x + 1 , 0 ] ;",
        "for ( j = 1 ; j < x ; j ++ )",
        "cout << x << endl ;"
      ],
      "err_line": 3,
      "err_msg": "expected ‘]’ before ‘,’ token"
    },
    {
      "mod_line": [
        3,
        11
      ],
      "mod_code": [
        "bool v [ x + 1 , 0 ] ;",
        "stop ;"
      ],
      "err_line": 3,
      "err_msg": "expected ‘]’ before ‘,’ token"
    },
    {
      "mod_line": [
        3,
        11,
        9
      ],
      "mod_code": [
        "bool v [ x + 1 , 0 ] ;",
        "stop ;",
        "if ( v [ k ] != 0 )"
      ],
      "err_line": 3,
      "err_msg": "expected ‘]’ before ‘,’ token"
    },
    {
      "mod_line": [
        3,
        11,
        9,
        2
      ],
      "mod_code": [
        "bool v [ x + 1 , 0 ] ;",
        "stop ;",
        "if ( v [ k ] != 0 )",
        "cout << x << endl ;"
      ],
      "err_line": 3,
      "err_msg": "expected ‘]’ before ‘,’ token"
    },
    {
      "mod_line": [
        3,
        11,
        2
      ],
      "mod_code": [
        "bool v [ x + 1 , 0 ] ;",
        "stop ;",
        "cout << x << endl ;"
      ],
      "err_line": 3,
      "err_msg": "expected ‘]’ before ‘,’ token"
    },
    {
      "mod_line": [
        3,
        9
      ],
      "mod_code": [
        "bool v [ x + 1 , 0 ] ;",
        "if ( v [ k ] != 0 )"
      ],
      "err_line": 3,
      "err_msg": "expected ‘]’ before ‘,’ token"
    },
    {
      "mod_line": [
        3,
        9,
        2
      ],
      "mod_code": [
        "bool v [ x + 1 , 0 ] ;",
        "if ( v [ k ] != 0 )",
        "cout << x << endl ;"
      ],
      "err_line": 3,
      "err_msg": "expected ‘]’ before ‘,’ token"
    },
    {
      "mod_line": [
        3,
        2
      ],
      "mod_code": [
        "bool v [ x + 1 , 0 ] ;",
        "cout << x << endl ;"
      ],
      "err_line": 3,
      "err_msg": "expected ‘]’ before ‘,’ token"
    },
    {
      "mod_line": [
        6,
        4
      ],
      "mod_code": [
        "v . yth ( ) ;",
        "for ( j = 1 ; j < x ; j ++ )"
      ],
      "err_line": 4,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        4,
        11
      ],
      "mod_code": [
        "v . yth ( ) ;",
        "for ( j = 1 ; j < x ; j ++ )",
        "stop ;"
      ],
      "err_line": 4,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        4,
        11,
        9
      ],
      "mod_code": [
        "v . yth ( ) ;",
        "for ( j = 1 ; j < x ; j ++ )",
        "stop ;",
        "if ( v [ k ] != 0 )"
      ],
      "err_line": 4,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        4,
        11,
        2
      ],
      "mod_code": [
        "v . yth ( ) ;",
        "for ( j = 1 ; j < x ; j ++ )",
        "stop ;",
        "cout << x << endl ;"
      ],
      "err_line": 4,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        4,
        9
      ],
      "mod_code": [
        "v . yth ( ) ;",
        "for ( j = 1 ; j < x ; j ++ )",
        "if ( v [ k ] != 0 )"
      ],
      "err_line": 4,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        4,
        9,
        2
      ],
      "mod_code": [
        "v . yth ( ) ;",
        "for ( j = 1 ; j < x ; j ++ )",
        "if ( v [ k ] != 0 )",
        "cout << x << endl ;"
      ],
      "err_line": 4,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        4,
        2
      ],
      "mod_code": [
        "v . yth ( ) ;",
        "for ( j = 1 ; j < x ; j ++ )",
        "cout << x << endl ;"
      ],
      "err_line": 4,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        11
      ],
      "mod_code": [
        "v . yth ( ) ;",
        "stop ;"
      ],
      "err_line": 6,
      "err_msg": "‘class std::vector<bool>’ has no member named ‘yth’"
    },
    {
      "mod_line": [
        6,
        11,
        9
      ],
      "mod_code": [
        "v . yth ( ) ;",
        "stop ;",
        "if ( v [ k ] != 0 )"
      ],
      "err_line": 6,
      "err_msg": "‘class std::vector<bool>’ has no member named ‘yth’"
    },
    {
      "mod_line": [
        6,
        11,
        9,
        2
      ],
      "mod_code": [
        "v . yth ( ) ;",
        "stop ;",
        "if ( v [ k ] != 0 )",
        "cout << x << endl ;"
      ],
      "err_line": 6,
      "err_msg": "‘class std::vector<bool>’ has no member named ‘yth’"
    },
    {
      "mod_line": [
        6,
        11,
        2
      ],
      "mod_code": [
        "v . yth ( ) ;",
        "stop ;",
        "cout << x << endl ;"
      ],
      "err_line": 6,
      "err_msg": "‘class std::vector<bool>’ has no member named ‘yth’"
    },
    {
      "mod_line": [
        6,
        9
      ],
      "mod_code": [
        "v . yth ( ) ;",
        "if ( v [ k ] != 0 )"
      ],
      "err_line": 6,
      "err_msg": "‘class std::vector<bool>’ has no member named ‘yth’"
    },
    {
      "mod_line": [
        6,
        9,
        2
      ],
      "mod_code": [
        "v . yth ( ) ;",
        "if ( v [ k ] != 0 )",
        "cout << x << endl ;"
      ],
      "err_line": 6,
      "err_msg": "‘class std::vector<bool>’ has no member named ‘yth’"
    },
    {
      "mod_line": [
        6,
        2
      ],
      "mod_code": [
        "v . yth ( ) ;",
        "cout << x << endl ;"
      ],
      "err_line": 6,
      "err_msg": "‘class std::vector<bool>’ has no member named ‘yth’"
    },
    {
      "mod_line": [
        4,
        11
      ],
      "mod_code": [
        "for ( j = 1 ; j < x ; j ++ )",
        "stop ;"
      ],
      "err_line": 4,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        11,
        9
      ],
      "mod_code": [
        "for ( j = 1 ; j < x ; j ++ )",
        "stop ;",
        "if ( v [ k ] != 0 )"
      ],
      "err_line": 4,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        11,
        9,
        2
      ],
      "mod_code": [
        "for ( j = 1 ; j < x ; j ++ )",
        "stop ;",
        "if ( v [ k ] != 0 )",
        "cout << x << endl ;"
      ],
      "err_line": 4,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        11,
        2
      ],
      "mod_code": [
        "for ( j = 1 ; j < x ; j ++ )",
        "stop ;",
        "cout << x << endl ;"
      ],
      "err_line": 4,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        9
      ],
      "mod_code": [
        "for ( j = 1 ; j < x ; j ++ )",
        "if ( v [ k ] != 0 )"
      ],
      "err_line": 4,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        9,
        2
      ],
      "mod_code": [
        "for ( j = 1 ; j < x ; j ++ )",
        "if ( v [ k ] != 0 )",
        "cout << x << endl ;"
      ],
      "err_line": 4,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        2
      ],
      "mod_code": [
        "for ( j = 1 ; j < x ; j ++ )",
        "cout << x << endl ;"
      ],
      "err_line": 4,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        11,
        9
      ],
      "mod_code": [
        "stop ;",
        "if ( v [ k ] != 0 )"
      ],
      "err_line": 11,
      "err_msg": "‘stop’ was not declared in this scope"
    },
    {
      "mod_line": [
        11,
        9,
        2
      ],
      "mod_code": [
        "stop ;",
        "if ( v [ k ] != 0 )",
        "cout << x << endl ;"
      ],
      "err_line": 11,
      "err_msg": "‘stop’ was not declared in this scope"
    },
    {
      "mod_line": [
        11,
        2
      ],
      "mod_code": [
        "stop ;",
        "cout << x << endl ;"
      ],
      "err_line": 11,
      "err_msg": "‘stop’ was not declared in this scope"
    }
  ]
}