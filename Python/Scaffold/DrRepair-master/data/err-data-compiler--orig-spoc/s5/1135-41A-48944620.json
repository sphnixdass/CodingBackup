{
  "meta": {
    "index": 1135,
    "hitid": "32K26U12DNIF3Q1O6DRWRSXB8M0DVW",
    "workerid": "AIWEXPJAU66D9",
    "probid": "41A",
    "subid": "48944620"
  },
  "lines": [
    {
      "line": 0,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 1,
      "text": "let str and str2 be strings",
      "code": "string str , str2 ;",
      "indent": 1
    },
    {
      "line": 2,
      "text": "read str",
      "code": "cin >> str ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "read str2",
      "code": "cin >> str2 ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "reverse str2",
      "code": "reverse ( str2 . begin ( ) , str2 . end ( ) ) ;",
      "indent": 1
    },
    {
      "line": 5,
      "text": "if str = str2",
      "code": "if ( str == str2 )",
      "indent": 1
    },
    {
      "line": 6,
      "text": "print \" YES \" and a new line",
      "code": "cout << \" YES \" << endl ;",
      "indent": 2
    },
    {
      "line": 7,
      "text": "else",
      "code": "else",
      "indent": 1
    },
    {
      "line": 8,
      "text": "print \" NO \" and a new line",
      "code": "cout << \" NO \" << endl ;",
      "indent": 2
    },
    {
      "line": 9,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 10,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        1
      ],
      "mod_code": [
        "string str and str2 ;"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘and’ token"
    },
    {
      "mod_line": [
        2
      ],
      "mod_code": [
        "gets ( str ) ;"
      ],
      "err_line": 2,
      "err_msg": "cannot convert ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ to ‘char*’ for argument ‘1’ to ‘char* gets(char*)’"
    },
    {
      "mod_line": [
        5
      ],
      "mod_code": [
        "if ( str == ' str2 ' )"
      ],
      "err_line": 5,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        2,
        1
      ],
      "mod_code": [
        "gets ( str ) ;",
        "string str and str2 ;"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘and’ token"
    },
    {
      "mod_line": [
        2,
        1,
        6
      ],
      "mod_code": [
        "gets ( str ) ;",
        "string str and str2 ;",
        "cout << \" YES\\n \" << endl ;"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘and’ token"
    },
    {
      "mod_line": [
        2,
        1,
        6,
        5
      ],
      "mod_code": [
        "gets ( str ) ;",
        "string str and str2 ;",
        "cout << \" YES\\n \" << endl ;",
        "if ( str == ' str2 ' )"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘and’ token"
    },
    {
      "mod_line": [
        2,
        1,
        5
      ],
      "mod_code": [
        "gets ( str ) ;",
        "string str and str2 ;",
        "if ( str == ' str2 ' )"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘and’ token"
    },
    {
      "mod_line": [
        2,
        6
      ],
      "mod_code": [
        "gets ( str ) ;",
        "cout << \" YES\\n \" << endl ;"
      ],
      "err_line": 2,
      "err_msg": "cannot convert ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ to ‘char*’ for argument ‘1’ to ‘char* gets(char*)’"
    },
    {
      "mod_line": [
        2,
        6,
        5
      ],
      "mod_code": [
        "gets ( str ) ;",
        "cout << \" YES\\n \" << endl ;",
        "if ( str == ' str2 ' )"
      ],
      "err_line": 2,
      "err_msg": "cannot convert ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ to ‘char*’ for argument ‘1’ to ‘char* gets(char*)’"
    },
    {
      "mod_line": [
        2,
        5
      ],
      "mod_code": [
        "gets ( str ) ;",
        "if ( str == ' str2 ' )"
      ],
      "err_line": 2,
      "err_msg": "cannot convert ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ to ‘char*’ for argument ‘1’ to ‘char* gets(char*)’"
    },
    {
      "mod_line": [
        1,
        6
      ],
      "mod_code": [
        "string str and str2 ;",
        "cout << \" YES\\n \" << endl ;"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘and’ token"
    },
    {
      "mod_line": [
        1,
        6,
        5
      ],
      "mod_code": [
        "string str and str2 ;",
        "cout << \" YES\\n \" << endl ;",
        "if ( str == ' str2 ' )"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘and’ token"
    },
    {
      "mod_line": [
        1,
        5
      ],
      "mod_code": [
        "string str and str2 ;",
        "if ( str == ' str2 ' )"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘and’ token"
    },
    {
      "mod_line": [
        6,
        5
      ],
      "mod_code": [
        "cout << \" YES\\n \" << endl ;",
        "if ( str == ' str2 ' )"
      ],
      "err_line": 5,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    }
  ]
}