{
  "meta": {
    "index": 1218,
    "hitid": "35ZRNT9RUISMVEQUCCZ6JRHRMIMO3K",
    "workerid": "A1C5H6OY3HGO4U",
    "probid": "870A",
    "subid": "49100228"
  },
  "lines": [
    {
      "line": 0,
      "text": "in function solve that takes no argument and returns nothing",
      "code": "void solve ( )",
      "indent": 0
    },
    {
      "line": 1,
      "text": "n , m = integers",
      "code": "int n , m ;",
      "indent": 1
    },
    {
      "line": 2,
      "text": "read n and m",
      "code": "cin >> n >> m ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "vn , vm , v = integer vectors with vn having length of n and vm having length of m",
      "code": "vector < int > vn ( n ) , vm ( m ) , v ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "for i = 0 to n exclusive read vn [ i ]",
      "code": "for ( int i = 0 ; i < n ; i ++ ) cin >> vn [ i ] ;",
      "indent": 1
    },
    {
      "line": 5,
      "text": "for i = 0 to m exclusive read vm [ i ]",
      "code": "for ( int i = 0 ; i < m ; i ++ ) cin >> vm [ i ] ;",
      "indent": 1
    },
    {
      "line": 6,
      "text": "sort vn",
      "code": "sort ( vn . begin ( ) , vn . end ( ) ) ;",
      "indent": 1
    },
    {
      "line": 7,
      "text": "sort vm",
      "code": "sort ( vm . begin ( ) , vm . end ( ) ) ;",
      "indent": 1
    },
    {
      "line": 8,
      "text": "a = integer with value of vn [ 0 ]",
      "code": "int a = vn [ 0 ] ;",
      "indent": 1
    },
    {
      "line": 9,
      "text": "b = integer with value of vm [ 0 ]",
      "code": "int b = vm [ 0 ] ;",
      "indent": 1
    },
    {
      "line": 10,
      "text": "cnt = integer with value of 0",
      "code": "int cnt = 0 ;",
      "indent": 1
    },
    {
      "line": 11,
      "text": "for i = 0 to n exclusive",
      "code": "for ( int i = 0 ; i < n ; i ++ )",
      "indent": 1
    },
    {
      "line": 12,
      "text": "for j = 0 to m exclusive",
      "code": "for ( int j = 0 ; j < m ; j ++ )",
      "indent": 2
    },
    {
      "line": 13,
      "text": "if vn [ i ] equals vm [ j ]",
      "code": "if ( vn [ i ] == vm [ j ] )",
      "indent": 3
    },
    {
      "line": 14,
      "text": "add 1 to cnt",
      "code": "cnt ++ ;",
      "indent": 4
    },
    {
      "line": 15,
      "text": "append vn [ i ] to the end of v",
      "code": "v . push_back ( vn [ i ] ) ;",
      "indent": 4
    },
    {
      "line": 16,
      "text": "DUMMY",
      "code": "}",
      "indent": 3
    },
    {
      "line": 17,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 18,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 19,
      "text": "if cnt equals 0",
      "code": "if ( cnt == 0 )",
      "indent": 1
    },
    {
      "line": 20,
      "text": "if a is greater than b",
      "code": "if ( a > b )",
      "indent": 2
    },
    {
      "line": 21,
      "text": "print b a",
      "code": "cout << b << a << endl ;",
      "indent": 3
    },
    {
      "line": 22,
      "text": "else if a is less than b",
      "code": "else if ( a < b )",
      "indent": 2
    },
    {
      "line": 23,
      "text": "print a b",
      "code": "cout << a << b << endl ;",
      "indent": 3
    },
    {
      "line": 24,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 25,
      "text": "else if cnt is greater than 0",
      "code": "else if ( cnt > 0 )",
      "indent": 1
    },
    {
      "line": 26,
      "text": "x = integer with value of the smallest element of v",
      "code": "int x = * min_element ( v . begin ( ) , v . end ( ) ) ;",
      "indent": 2
    },
    {
      "line": 27,
      "text": "print x",
      "code": "cout << x << endl ;",
      "indent": 2
    },
    {
      "line": 28,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 29,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    },
    {
      "line": 30,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 31,
      "text": "t = integer with value of 1",
      "code": "int t = 1 ;",
      "indent": 1
    },
    {
      "line": 32,
      "text": "while t is not 0 subtract 1 from t and call function solve ( )",
      "code": "while ( t -- ) { solve ( ) ; }",
      "indent": 1
    },
    {
      "line": 33,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 34,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        3
      ],
      "mod_code": [
        "vector < int > vn , vm , v = m . length ( ) ;"
      ],
      "err_line": 3,
      "err_msg": "request for member ‘length’ in ‘m’, which is of non-class type ‘int’"
    },
    {
      "mod_line": [
        0
      ],
      "mod_code": [
        "void solve ( ) ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        3
      ],
      "mod_code": [
        "vector < int > vn , vm , v [ m ] , v ;"
      ],
      "err_line": 3,
      "err_msg": "conflicting declaration ‘std::vector<int> v’"
    },
    {
      "mod_line": [
        6
      ],
      "mod_code": [
        "sort ( vn , vn + n ) ;"
      ],
      "err_line": 6,
      "err_msg": "no match for ‘operator+’ (operand types are ‘std::vector<int>’ and ‘int’)"
    },
    {
      "mod_line": [
        7
      ],
      "mod_code": [
        "sort ( vm , vm + n ) ;"
      ],
      "err_line": 7,
      "err_msg": "no match for ‘operator+’ (operand types are ‘std::vector<int>’ and ‘int’)"
    },
    {
      "mod_line": [
        11
      ],
      "mod_code": [
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 11,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        12
      ],
      "mod_code": [
        "for ( j = 0 ; j < m ; j ++ )"
      ],
      "err_line": 12,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        15
      ],
      "mod_code": [
        "v . push_back ( vn ) ;"
      ],
      "err_line": 15,
      "err_msg": "no matching function for call to ‘std::vector<int>::push_back(std::vector<int>&)’"
    },
    {
      "mod_line": [
        3,
        21
      ],
      "mod_code": [
        "vector < int > vn , vm , v = m . length ( ) ;",
        "cout << b << \" \" << a << endl ;"
      ],
      "err_line": 3,
      "err_msg": "request for member ‘length’ in ‘m’, which is of non-class type ‘int’"
    },
    {
      "mod_line": [
        3,
        21,
        23
      ],
      "mod_code": [
        "vector < int > vn , vm , v = m . length ( ) ;",
        "cout << b << \" \" << a << endl ;",
        "cout << a << \" \" << b << endl ;"
      ],
      "err_line": 3,
      "err_msg": "request for member ‘length’ in ‘m’, which is of non-class type ‘int’"
    },
    {
      "mod_line": [
        3,
        21,
        23,
        26
      ],
      "mod_code": [
        "vector < int > vn , vm , v = m . length ( ) ;",
        "cout << b << \" \" << a << endl ;",
        "cout << a << \" \" << b << endl ;",
        "int x = 0 ;"
      ],
      "err_line": 3,
      "err_msg": "request for member ‘length’ in ‘m’, which is of non-class type ‘int’"
    },
    {
      "mod_line": [
        3,
        21,
        23,
        13
      ],
      "mod_code": [
        "vector < int > vn , vm , v = m . length ( ) ;",
        "cout << b << \" \" << a << endl ;",
        "cout << a << \" \" << b << endl ;",
        "if ( vn [ i ] == vm [ j ] ) break ;"
      ],
      "err_line": 3,
      "err_msg": "request for member ‘length’ in ‘m’, which is of non-class type ‘int’"
    },
    {
      "mod_line": [
        3,
        21,
        23,
        0
      ],
      "mod_code": [
        "vector < int > vn , vm , v = m . length ( ) ;",
        "cout << b << \" \" << a << endl ;",
        "cout << a << \" \" << b << endl ;",
        "void solve ( ) ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        3,
        21,
        26
      ],
      "mod_code": [
        "vector < int > vn , vm , v = m . length ( ) ;",
        "cout << b << \" \" << a << endl ;",
        "int x = 0 ;"
      ],
      "err_line": 3,
      "err_msg": "request for member ‘length’ in ‘m’, which is of non-class type ‘int’"
    },
    {
      "mod_line": [
        3,
        21,
        26,
        13
      ],
      "mod_code": [
        "vector < int > vn , vm , v = m . length ( ) ;",
        "cout << b << \" \" << a << endl ;",
        "int x = 0 ;",
        "if ( vn [ i ] == vm [ j ] ) break ;"
      ],
      "err_line": 3,
      "err_msg": "request for member ‘length’ in ‘m’, which is of non-class type ‘int’"
    },
    {
      "mod_line": [
        3,
        21,
        26,
        0
      ],
      "mod_code": [
        "vector < int > vn , vm , v = m . length ( ) ;",
        "cout << b << \" \" << a << endl ;",
        "int x = 0 ;",
        "void solve ( ) ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        3,
        21,
        13
      ],
      "mod_code": [
        "vector < int > vn , vm , v = m . length ( ) ;",
        "cout << b << \" \" << a << endl ;",
        "if ( vn [ i ] == vm [ j ] ) break ;"
      ],
      "err_line": 3,
      "err_msg": "request for member ‘length’ in ‘m’, which is of non-class type ‘int’"
    },
    {
      "mod_line": [
        3,
        21,
        13,
        0
      ],
      "mod_code": [
        "vector < int > vn , vm , v = m . length ( ) ;",
        "cout << b << \" \" << a << endl ;",
        "if ( vn [ i ] == vm [ j ] ) break ;",
        "void solve ( ) ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        3,
        21,
        0
      ],
      "mod_code": [
        "vector < int > vn , vm , v = m . length ( ) ;",
        "cout << b << \" \" << a << endl ;",
        "void solve ( ) ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        3,
        23
      ],
      "mod_code": [
        "vector < int > vn , vm , v = m . length ( ) ;",
        "cout << a << \" \" << b << endl ;"
      ],
      "err_line": 3,
      "err_msg": "request for member ‘length’ in ‘m’, which is of non-class type ‘int’"
    },
    {
      "mod_line": [
        3,
        23,
        26
      ],
      "mod_code": [
        "vector < int > vn , vm , v = m . length ( ) ;",
        "cout << a << \" \" << b << endl ;",
        "int x = 0 ;"
      ],
      "err_line": 3,
      "err_msg": "request for member ‘length’ in ‘m’, which is of non-class type ‘int’"
    },
    {
      "mod_line": [
        3,
        23,
        26,
        13
      ],
      "mod_code": [
        "vector < int > vn , vm , v = m . length ( ) ;",
        "cout << a << \" \" << b << endl ;",
        "int x = 0 ;",
        "if ( vn [ i ] == vm [ j ] ) break ;"
      ],
      "err_line": 3,
      "err_msg": "request for member ‘length’ in ‘m’, which is of non-class type ‘int’"
    },
    {
      "mod_line": [
        3,
        23,
        26,
        0
      ],
      "mod_code": [
        "vector < int > vn , vm , v = m . length ( ) ;",
        "cout << a << \" \" << b << endl ;",
        "int x = 0 ;",
        "void solve ( ) ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        3,
        23,
        13
      ],
      "mod_code": [
        "vector < int > vn , vm , v = m . length ( ) ;",
        "cout << a << \" \" << b << endl ;",
        "if ( vn [ i ] == vm [ j ] ) break ;"
      ],
      "err_line": 3,
      "err_msg": "request for member ‘length’ in ‘m’, which is of non-class type ‘int’"
    },
    {
      "mod_line": [
        3,
        23,
        13,
        0
      ],
      "mod_code": [
        "vector < int > vn , vm , v = m . length ( ) ;",
        "cout << a << \" \" << b << endl ;",
        "if ( vn [ i ] == vm [ j ] ) break ;",
        "void solve ( ) ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        3,
        23,
        0
      ],
      "mod_code": [
        "vector < int > vn , vm , v = m . length ( ) ;",
        "cout << a << \" \" << b << endl ;",
        "void solve ( ) ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        3,
        26
      ],
      "mod_code": [
        "vector < int > vn , vm , v = m . length ( ) ;",
        "int x = 0 ;"
      ],
      "err_line": 3,
      "err_msg": "request for member ‘length’ in ‘m’, which is of non-class type ‘int’"
    },
    {
      "mod_line": [
        3,
        26,
        13
      ],
      "mod_code": [
        "vector < int > vn , vm , v = m . length ( ) ;",
        "int x = 0 ;",
        "if ( vn [ i ] == vm [ j ] ) break ;"
      ],
      "err_line": 3,
      "err_msg": "request for member ‘length’ in ‘m’, which is of non-class type ‘int’"
    },
    {
      "mod_line": [
        3,
        26,
        13,
        0
      ],
      "mod_code": [
        "vector < int > vn , vm , v = m . length ( ) ;",
        "int x = 0 ;",
        "if ( vn [ i ] == vm [ j ] ) break ;",
        "void solve ( ) ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        3,
        26,
        0
      ],
      "mod_code": [
        "vector < int > vn , vm , v = m . length ( ) ;",
        "int x = 0 ;",
        "void solve ( ) ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        3,
        13
      ],
      "mod_code": [
        "vector < int > vn , vm , v = m . length ( ) ;",
        "if ( vn [ i ] == vm [ j ] ) break ;"
      ],
      "err_line": 3,
      "err_msg": "request for member ‘length’ in ‘m’, which is of non-class type ‘int’"
    },
    {
      "mod_line": [
        3,
        13,
        0
      ],
      "mod_code": [
        "vector < int > vn , vm , v = m . length ( ) ;",
        "if ( vn [ i ] == vm [ j ] ) break ;",
        "void solve ( ) ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        3,
        0
      ],
      "mod_code": [
        "vector < int > vn , vm , v = m . length ( ) ;",
        "void solve ( ) ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        21,
        23,
        26,
        0
      ],
      "mod_code": [
        "cout << b << \" \" << a << endl ;",
        "cout << a << \" \" << b << endl ;",
        "int x = 0 ;",
        "void solve ( ) ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        21,
        23,
        13,
        0
      ],
      "mod_code": [
        "cout << b << \" \" << a << endl ;",
        "cout << a << \" \" << b << endl ;",
        "if ( vn [ i ] == vm [ j ] ) break ;",
        "void solve ( ) ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        21,
        23,
        0
      ],
      "mod_code": [
        "cout << b << \" \" << a << endl ;",
        "cout << a << \" \" << b << endl ;",
        "void solve ( ) ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        21,
        26,
        13,
        0
      ],
      "mod_code": [
        "cout << b << \" \" << a << endl ;",
        "int x = 0 ;",
        "if ( vn [ i ] == vm [ j ] ) break ;",
        "void solve ( ) ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        21,
        26,
        0
      ],
      "mod_code": [
        "cout << b << \" \" << a << endl ;",
        "int x = 0 ;",
        "void solve ( ) ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        21,
        13,
        0
      ],
      "mod_code": [
        "cout << b << \" \" << a << endl ;",
        "if ( vn [ i ] == vm [ j ] ) break ;",
        "void solve ( ) ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        21,
        0
      ],
      "mod_code": [
        "cout << b << \" \" << a << endl ;",
        "void solve ( ) ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        23,
        26,
        13,
        0
      ],
      "mod_code": [
        "cout << a << \" \" << b << endl ;",
        "int x = 0 ;",
        "if ( vn [ i ] == vm [ j ] ) break ;",
        "void solve ( ) ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        23,
        26,
        0
      ],
      "mod_code": [
        "cout << a << \" \" << b << endl ;",
        "int x = 0 ;",
        "void solve ( ) ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        23,
        13,
        0
      ],
      "mod_code": [
        "cout << a << \" \" << b << endl ;",
        "if ( vn [ i ] == vm [ j ] ) break ;",
        "void solve ( ) ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        23,
        0
      ],
      "mod_code": [
        "cout << a << \" \" << b << endl ;",
        "void solve ( ) ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        26,
        13,
        0
      ],
      "mod_code": [
        "int x = 0 ;",
        "if ( vn [ i ] == vm [ j ] ) break ;",
        "void solve ( ) ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        26,
        0
      ],
      "mod_code": [
        "int x = 0 ;",
        "void solve ( ) ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        13,
        0
      ],
      "mod_code": [
        "if ( vn [ i ] == vm [ j ] ) break ;",
        "void solve ( ) ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    }
  ]
}