{
  "meta": {
    "index": 2216,
    "hitid": "3SBX2M1TKDHAYMMER3WTI14XFJ74Q0",
    "workerid": "AIWEXPJAU66D9",
    "probid": "540A",
    "subid": "48429554"
  },
  "lines": [
    {
      "line": 0,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 1,
      "text": "declare ints n , p , ans , q and sum with sum = 0",
      "code": "int n , p , ans , q , sum = 0 ;",
      "indent": 1
    },
    {
      "line": 2,
      "text": "new string variables a and b",
      "code": "string a , b ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "read n , a and b from the user input",
      "code": "cin >> n >> a >> b ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "for i from 0 to n exclusive incrementing i",
      "code": "for ( int i = 0 ; i < n ; i ++ )",
      "indent": 1
    },
    {
      "line": 5,
      "text": "change the value of p to the absolute value of a [ i ] - b [ i ]",
      "code": "p = abs ( a [ i ] - b [ i ] ) ;",
      "indent": 2
    },
    {
      "line": 6,
      "text": "if a [ i ] is greater than b [ i ]",
      "code": "if ( a [ i ] > b [ i ] )",
      "indent": 2
    },
    {
      "line": 7,
      "text": "assign 10 - a [ i ] + b [ i ] to ans",
      "code": "ans = 10 - a [ i ] + b [ i ] ;",
      "indent": 3
    },
    {
      "line": 8,
      "text": "else",
      "code": "else",
      "indent": 2
    },
    {
      "line": 9,
      "text": "set ans to 10 - b [ i ] + a [ i ]",
      "code": "ans = 10 - b [ i ] + a [ i ] ;",
      "indent": 3
    },
    {
      "line": 10,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 11,
      "text": "assign min of ans and p to q",
      "code": "q = min ( ans , p ) ;",
      "indent": 2
    },
    {
      "line": 12,
      "text": "change sum to sum + q",
      "code": "sum = sum + q ;",
      "indent": 2
    },
    {
      "line": 13,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 14,
      "text": "print sum",
      "code": "cout << sum << endl ;",
      "indent": 1
    },
    {
      "line": 15,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        2
      ],
      "mod_code": [
        "string a and b ;"
      ],
      "err_line": 2,
      "err_msg": "expected initializer before ‘and’ token"
    },
    {
      "mod_line": [
        3
      ],
      "mod_code": [
        "int n , a , b ;"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘int n’"
    },
    {
      "mod_line": [
        4
      ],
      "mod_code": [
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 4,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        6
      ],
      "mod_code": [
        "if ( a [ i ] ] > b [ i ] )"
      ],
      "err_line": 6,
      "err_msg": "expected ‘)’ before ‘]’ token"
    },
    {
      "mod_line": [
        7
      ],
      "mod_code": [
        "ans = b - a [ i ] + b [ i ] ;"
      ],
      "err_line": 7,
      "err_msg": "no match for ‘operator-’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        4,
        6
      ],
      "mod_code": [
        "for ( i = 0 ; i < n ; i ++ )",
        "if ( a [ i ] ] > b [ i ] )"
      ],
      "err_line": 4,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        6,
        7
      ],
      "mod_code": [
        "for ( i = 0 ; i < n ; i ++ )",
        "if ( a [ i ] ] > b [ i ] )",
        "ans = b - a [ i ] + b [ i ] ;"
      ],
      "err_line": 4,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        6,
        7,
        3
      ],
      "mod_code": [
        "for ( i = 0 ; i < n ; i ++ )",
        "if ( a [ i ] ] > b [ i ] )",
        "ans = b - a [ i ] + b [ i ] ;",
        "int n , a , b ;"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘int n’"
    },
    {
      "mod_line": [
        4,
        6,
        7,
        2
      ],
      "mod_code": [
        "for ( i = 0 ; i < n ; i ++ )",
        "if ( a [ i ] ] > b [ i ] )",
        "ans = b - a [ i ] + b [ i ] ;",
        "string a and b ;"
      ],
      "err_line": 2,
      "err_msg": "expected initializer before ‘and’ token"
    },
    {
      "mod_line": [
        4,
        6,
        7,
        5
      ],
      "mod_code": [
        "for ( i = 0 ; i < n ; i ++ )",
        "if ( a [ i ] ] > b [ i ] )",
        "ans = b - a [ i ] + b [ i ] ;",
        "p *= abs ( a [ i ] - b [ i ] ) ;"
      ],
      "err_line": 4,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        6,
        3
      ],
      "mod_code": [
        "for ( i = 0 ; i < n ; i ++ )",
        "if ( a [ i ] ] > b [ i ] )",
        "int n , a , b ;"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘int n’"
    },
    {
      "mod_line": [
        4,
        6,
        3,
        2
      ],
      "mod_code": [
        "for ( i = 0 ; i < n ; i ++ )",
        "if ( a [ i ] ] > b [ i ] )",
        "int n , a , b ;",
        "string a and b ;"
      ],
      "err_line": 2,
      "err_msg": "expected initializer before ‘and’ token"
    },
    {
      "mod_line": [
        4,
        6,
        3,
        5
      ],
      "mod_code": [
        "for ( i = 0 ; i < n ; i ++ )",
        "if ( a [ i ] ] > b [ i ] )",
        "int n , a , b ;",
        "p *= abs ( a [ i ] - b [ i ] ) ;"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘int n’"
    },
    {
      "mod_line": [
        4,
        6,
        2
      ],
      "mod_code": [
        "for ( i = 0 ; i < n ; i ++ )",
        "if ( a [ i ] ] > b [ i ] )",
        "string a and b ;"
      ],
      "err_line": 2,
      "err_msg": "expected initializer before ‘and’ token"
    },
    {
      "mod_line": [
        4,
        6,
        2,
        5
      ],
      "mod_code": [
        "for ( i = 0 ; i < n ; i ++ )",
        "if ( a [ i ] ] > b [ i ] )",
        "string a and b ;",
        "p *= abs ( a [ i ] - b [ i ] ) ;"
      ],
      "err_line": 2,
      "err_msg": "expected initializer before ‘and’ token"
    },
    {
      "mod_line": [
        4,
        6,
        5
      ],
      "mod_code": [
        "for ( i = 0 ; i < n ; i ++ )",
        "if ( a [ i ] ] > b [ i ] )",
        "p *= abs ( a [ i ] - b [ i ] ) ;"
      ],
      "err_line": 4,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        7
      ],
      "mod_code": [
        "for ( i = 0 ; i < n ; i ++ )",
        "ans = b - a [ i ] + b [ i ] ;"
      ],
      "err_line": 4,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        7,
        3
      ],
      "mod_code": [
        "for ( i = 0 ; i < n ; i ++ )",
        "ans = b - a [ i ] + b [ i ] ;",
        "int n , a , b ;"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘int n’"
    },
    {
      "mod_line": [
        4,
        7,
        3,
        2
      ],
      "mod_code": [
        "for ( i = 0 ; i < n ; i ++ )",
        "ans = b - a [ i ] + b [ i ] ;",
        "int n , a , b ;",
        "string a and b ;"
      ],
      "err_line": 2,
      "err_msg": "expected initializer before ‘and’ token"
    },
    {
      "mod_line": [
        4,
        7,
        3,
        5
      ],
      "mod_code": [
        "for ( i = 0 ; i < n ; i ++ )",
        "ans = b - a [ i ] + b [ i ] ;",
        "int n , a , b ;",
        "p *= abs ( a [ i ] - b [ i ] ) ;"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘int n’"
    },
    {
      "mod_line": [
        4,
        7,
        2
      ],
      "mod_code": [
        "for ( i = 0 ; i < n ; i ++ )",
        "ans = b - a [ i ] + b [ i ] ;",
        "string a and b ;"
      ],
      "err_line": 2,
      "err_msg": "expected initializer before ‘and’ token"
    },
    {
      "mod_line": [
        4,
        7,
        2,
        5
      ],
      "mod_code": [
        "for ( i = 0 ; i < n ; i ++ )",
        "ans = b - a [ i ] + b [ i ] ;",
        "string a and b ;",
        "p *= abs ( a [ i ] - b [ i ] ) ;"
      ],
      "err_line": 2,
      "err_msg": "expected initializer before ‘and’ token"
    },
    {
      "mod_line": [
        4,
        7,
        5
      ],
      "mod_code": [
        "for ( i = 0 ; i < n ; i ++ )",
        "ans = b - a [ i ] + b [ i ] ;",
        "p *= abs ( a [ i ] - b [ i ] ) ;"
      ],
      "err_line": 4,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        3
      ],
      "mod_code": [
        "for ( i = 0 ; i < n ; i ++ )",
        "int n , a , b ;"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘int n’"
    },
    {
      "mod_line": [
        4,
        3,
        2
      ],
      "mod_code": [
        "for ( i = 0 ; i < n ; i ++ )",
        "int n , a , b ;",
        "string a and b ;"
      ],
      "err_line": 2,
      "err_msg": "expected initializer before ‘and’ token"
    },
    {
      "mod_line": [
        4,
        3,
        2,
        5
      ],
      "mod_code": [
        "for ( i = 0 ; i < n ; i ++ )",
        "int n , a , b ;",
        "string a and b ;",
        "p *= abs ( a [ i ] - b [ i ] ) ;"
      ],
      "err_line": 2,
      "err_msg": "expected initializer before ‘and’ token"
    },
    {
      "mod_line": [
        4,
        3,
        5
      ],
      "mod_code": [
        "for ( i = 0 ; i < n ; i ++ )",
        "int n , a , b ;",
        "p *= abs ( a [ i ] - b [ i ] ) ;"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘int n’"
    },
    {
      "mod_line": [
        4,
        2
      ],
      "mod_code": [
        "for ( i = 0 ; i < n ; i ++ )",
        "string a and b ;"
      ],
      "err_line": 2,
      "err_msg": "expected initializer before ‘and’ token"
    },
    {
      "mod_line": [
        4,
        2,
        5
      ],
      "mod_code": [
        "for ( i = 0 ; i < n ; i ++ )",
        "string a and b ;",
        "p *= abs ( a [ i ] - b [ i ] ) ;"
      ],
      "err_line": 2,
      "err_msg": "expected initializer before ‘and’ token"
    },
    {
      "mod_line": [
        4,
        5
      ],
      "mod_code": [
        "for ( i = 0 ; i < n ; i ++ )",
        "p *= abs ( a [ i ] - b [ i ] ) ;"
      ],
      "err_line": 4,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        7
      ],
      "mod_code": [
        "if ( a [ i ] ] > b [ i ] )",
        "ans = b - a [ i ] + b [ i ] ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘)’ before ‘]’ token"
    },
    {
      "mod_line": [
        6,
        7,
        3
      ],
      "mod_code": [
        "if ( a [ i ] ] > b [ i ] )",
        "ans = b - a [ i ] + b [ i ] ;",
        "int n , a , b ;"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘int n’"
    },
    {
      "mod_line": [
        6,
        7,
        3,
        2
      ],
      "mod_code": [
        "if ( a [ i ] ] > b [ i ] )",
        "ans = b - a [ i ] + b [ i ] ;",
        "int n , a , b ;",
        "string a and b ;"
      ],
      "err_line": 2,
      "err_msg": "expected initializer before ‘and’ token"
    },
    {
      "mod_line": [
        6,
        7,
        3,
        5
      ],
      "mod_code": [
        "if ( a [ i ] ] > b [ i ] )",
        "ans = b - a [ i ] + b [ i ] ;",
        "int n , a , b ;",
        "p *= abs ( a [ i ] - b [ i ] ) ;"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘int n’"
    },
    {
      "mod_line": [
        6,
        7,
        2
      ],
      "mod_code": [
        "if ( a [ i ] ] > b [ i ] )",
        "ans = b - a [ i ] + b [ i ] ;",
        "string a and b ;"
      ],
      "err_line": 2,
      "err_msg": "expected initializer before ‘and’ token"
    },
    {
      "mod_line": [
        6,
        7,
        2,
        5
      ],
      "mod_code": [
        "if ( a [ i ] ] > b [ i ] )",
        "ans = b - a [ i ] + b [ i ] ;",
        "string a and b ;",
        "p *= abs ( a [ i ] - b [ i ] ) ;"
      ],
      "err_line": 2,
      "err_msg": "expected initializer before ‘and’ token"
    },
    {
      "mod_line": [
        6,
        7,
        5
      ],
      "mod_code": [
        "if ( a [ i ] ] > b [ i ] )",
        "ans = b - a [ i ] + b [ i ] ;",
        "p *= abs ( a [ i ] - b [ i ] ) ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘)’ before ‘]’ token"
    },
    {
      "mod_line": [
        6,
        3
      ],
      "mod_code": [
        "if ( a [ i ] ] > b [ i ] )",
        "int n , a , b ;"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘int n’"
    },
    {
      "mod_line": [
        6,
        3,
        2
      ],
      "mod_code": [
        "if ( a [ i ] ] > b [ i ] )",
        "int n , a , b ;",
        "string a and b ;"
      ],
      "err_line": 2,
      "err_msg": "expected initializer before ‘and’ token"
    },
    {
      "mod_line": [
        6,
        3,
        2,
        5
      ],
      "mod_code": [
        "if ( a [ i ] ] > b [ i ] )",
        "int n , a , b ;",
        "string a and b ;",
        "p *= abs ( a [ i ] - b [ i ] ) ;"
      ],
      "err_line": 2,
      "err_msg": "expected initializer before ‘and’ token"
    },
    {
      "mod_line": [
        6,
        3,
        5
      ],
      "mod_code": [
        "if ( a [ i ] ] > b [ i ] )",
        "int n , a , b ;",
        "p *= abs ( a [ i ] - b [ i ] ) ;"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘int n’"
    },
    {
      "mod_line": [
        6,
        2
      ],
      "mod_code": [
        "if ( a [ i ] ] > b [ i ] )",
        "string a and b ;"
      ],
      "err_line": 2,
      "err_msg": "expected initializer before ‘and’ token"
    },
    {
      "mod_line": [
        6,
        2,
        5
      ],
      "mod_code": [
        "if ( a [ i ] ] > b [ i ] )",
        "string a and b ;",
        "p *= abs ( a [ i ] - b [ i ] ) ;"
      ],
      "err_line": 2,
      "err_msg": "expected initializer before ‘and’ token"
    },
    {
      "mod_line": [
        6,
        5
      ],
      "mod_code": [
        "if ( a [ i ] ] > b [ i ] )",
        "p *= abs ( a [ i ] - b [ i ] ) ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘)’ before ‘]’ token"
    },
    {
      "mod_line": [
        7,
        3
      ],
      "mod_code": [
        "ans = b - a [ i ] + b [ i ] ;",
        "int n , a , b ;"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘int n’"
    },
    {
      "mod_line": [
        7,
        3,
        2
      ],
      "mod_code": [
        "ans = b - a [ i ] + b [ i ] ;",
        "int n , a , b ;",
        "string a and b ;"
      ],
      "err_line": 2,
      "err_msg": "expected initializer before ‘and’ token"
    },
    {
      "mod_line": [
        7,
        3,
        2,
        5
      ],
      "mod_code": [
        "ans = b - a [ i ] + b [ i ] ;",
        "int n , a , b ;",
        "string a and b ;",
        "p *= abs ( a [ i ] - b [ i ] ) ;"
      ],
      "err_line": 2,
      "err_msg": "expected initializer before ‘and’ token"
    },
    {
      "mod_line": [
        7,
        3,
        5
      ],
      "mod_code": [
        "ans = b - a [ i ] + b [ i ] ;",
        "int n , a , b ;",
        "p *= abs ( a [ i ] - b [ i ] ) ;"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘int n’"
    },
    {
      "mod_line": [
        7,
        2
      ],
      "mod_code": [
        "ans = b - a [ i ] + b [ i ] ;",
        "string a and b ;"
      ],
      "err_line": 2,
      "err_msg": "expected initializer before ‘and’ token"
    },
    {
      "mod_line": [
        7,
        2,
        5
      ],
      "mod_code": [
        "ans = b - a [ i ] + b [ i ] ;",
        "string a and b ;",
        "p *= abs ( a [ i ] - b [ i ] ) ;"
      ],
      "err_line": 2,
      "err_msg": "expected initializer before ‘and’ token"
    },
    {
      "mod_line": [
        7,
        5
      ],
      "mod_code": [
        "ans = b - a [ i ] + b [ i ] ;",
        "p *= abs ( a [ i ] - b [ i ] ) ;"
      ],
      "err_line": 7,
      "err_msg": "no match for ‘operator-’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        3,
        2
      ],
      "mod_code": [
        "int n , a , b ;",
        "string a and b ;"
      ],
      "err_line": 2,
      "err_msg": "expected initializer before ‘and’ token"
    },
    {
      "mod_line": [
        3,
        2,
        5
      ],
      "mod_code": [
        "int n , a , b ;",
        "string a and b ;",
        "p *= abs ( a [ i ] - b [ i ] ) ;"
      ],
      "err_line": 2,
      "err_msg": "expected initializer before ‘and’ token"
    },
    {
      "mod_line": [
        3,
        5
      ],
      "mod_code": [
        "int n , a , b ;",
        "p *= abs ( a [ i ] - b [ i ] ) ;"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘int n’"
    },
    {
      "mod_line": [
        2,
        5
      ],
      "mod_code": [
        "string a and b ;",
        "p *= abs ( a [ i ] - b [ i ] ) ;"
      ],
      "err_line": 2,
      "err_msg": "expected initializer before ‘and’ token"
    }
  ]
}