{
  "meta": {
    "index": 2574,
    "hitid": "3WA2XVDZEMBZG60N10U8LIZXRKR6E2",
    "workerid": "A1EKVUFWL7OJMO",
    "probid": "154A",
    "subid": "48696248"
  },
  "lines": [
    {
      "line": 0,
      "text": "Mod = const long long with Mod = 7 + 1e9",
      "code": "const long long Mod = 7 + 1e9 ;",
      "indent": 0
    },
    {
      "line": 1,
      "text": "INF32 = const long long with INF32 = 5 + 2e9",
      "code": "const long long INF32 = 5 + 2e9 ;",
      "indent": 0
    },
    {
      "line": 2,
      "text": "INF64 = const long long with INF64 = 5 + 1e18",
      "code": "const long long INF64 = 5 + 1e18 ;",
      "indent": 0
    },
    {
      "line": 3,
      "text": "MAX = const long long with MAX = 5 + 1e5",
      "code": "const long long MAX = 5 + 1e5 ;",
      "indent": 0
    },
    {
      "line": 4,
      "text": "a = string",
      "code": "string a ;",
      "indent": 0
    },
    {
      "line": 5,
      "text": "n , k , s , dp = integer with s = array of size MAX , dp = 2d array of MAX rows and 30 columns",
      "code": "int n , k , s [ MAX ] , dp [ MAX ] [ 30 ] ;",
      "indent": 0
    },
    {
      "line": 6,
      "text": "f = map of char to char",
      "code": "map < char , char > f ;",
      "indent": 0
    },
    {
      "line": 7,
      "text": "in the function Try that takes integers i , pre and returns integer",
      "code": "int Try ( int i , int pre )",
      "indent": 0
    },
    {
      "line": 8,
      "text": "if i is n return 0",
      "code": "if ( i == n ) return 0 ;",
      "indent": 1
    },
    {
      "line": 9,
      "text": "r = integer reference with r = dp [ i ] [ pre ]",
      "code": "int & r = dp [ i ] [ pre ] ;",
      "indent": 1
    },
    {
      "line": 10,
      "text": "if r + 1 return r",
      "code": "if ( r + 1 ) return r ;",
      "indent": 1
    },
    {
      "line": 11,
      "text": "cc = char with cc = pre + ' a '",
      "code": "char cc = pre + ' a ' ;",
      "indent": 1
    },
    {
      "line": 12,
      "text": "r = Try of i + s [ i ] and pre + s [ i ]",
      "code": "r = Try ( i + s [ i ] , pre ) + s [ i ] ;",
      "indent": 1
    },
    {
      "line": 13,
      "text": "if not a [ i ] is f [ cc ] r = min of r and Try ( i + s [ i ] , a [ i ] - ' a ' )",
      "code": "if ( a [ i ] != f [ cc ] ) r = min ( r , Try ( i + s [ i ] , a [ i ] - ' a ' ) ) ;",
      "indent": 1
    },
    {
      "line": 14,
      "text": "return r",
      "code": "return r ;",
      "indent": 1
    },
    {
      "line": 15,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    },
    {
      "line": 16,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 17,
      "text": "set all elements of dp to - 1",
      "code": "memset ( dp , - 1 , sizeof ( dp ) ) ;",
      "indent": 1
    },
    {
      "line": 18,
      "text": "read a and k",
      "code": "cin >> a >> k ;",
      "indent": 1
    },
    {
      "line": 19,
      "text": "n = a . size ( )",
      "code": "n = a . size ( ) ;",
      "indent": 1
    },
    {
      "line": 20,
      "text": "while decrement k",
      "code": "while ( k -- )",
      "indent": 1
    },
    {
      "line": 21,
      "text": "t = string",
      "code": "string t ;",
      "indent": 2
    },
    {
      "line": 22,
      "text": "read t",
      "code": "cin >> t ;",
      "indent": 2
    },
    {
      "line": 23,
      "text": "f [ t [ 0 ] ] = t [ 1 ]",
      "code": "f [ t [ 0 ] ] = t [ 1 ] ;",
      "indent": 2
    },
    {
      "line": 24,
      "text": "f [ t [ 1 ] ] = t [ 0 ]",
      "code": "f [ t [ 1 ] ] = t [ 0 ] ;",
      "indent": 2
    },
    {
      "line": 25,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 26,
      "text": "s [ n - 1 ] = 1",
      "code": "s [ n - 1 ] = 1 ;",
      "indent": 1
    },
    {
      "line": 27,
      "text": "for i = n - 2 down to 0 inclusive s [ i ] = if a [ i ] is a [ i + 1 ] then s [ i + 1 ] + 1 else 1",
      "code": "for ( int i = n - 2 ; i >= 0 ; i -- ) s [ i ] = ( a [ i ] == a [ i + 1 ] ? s [ i + 1 ] + 1 : 1 ) ;",
      "indent": 1
    },
    {
      "line": 28,
      "text": "print Try ( 0 , 27 )",
      "code": "cout << Try ( 0 , 27 ) << endl ;",
      "indent": 1
    },
    {
      "line": 29,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 30,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        5
      ],
      "mod_code": [
        "int n , k , s [ MAX ] [ 30 ] , dp [ MAX ] [ 30 ] ;"
      ],
      "err_line": 12,
      "err_msg": "invalid conversion from ‘int*’ to ‘int’ [-fpermissive]"
    },
    {
      "mod_line": [
        27
      ],
      "mod_code": [
        "for ( int i = n - 2 ; i >= 0 ; i -- ) { s [ i ] = a [ i ] == a [ i + 1 ] + 1 ? s [ i + 1 ] + 1 ; }"
      ],
      "err_line": 27,
      "err_msg": "expected ‘:’ before ‘;’ token"
    },
    {
      "mod_line": [
        4
      ],
      "mod_code": [
        "char a ;"
      ],
      "err_line": 13,
      "err_msg": "invalid types ‘char[int]’ for array subscript"
    },
    {
      "mod_line": [
        5
      ],
      "mod_code": [
        "int n , k , dp [ MAX ] [ 30 ] , dp [ MAX ] [ 30 ] ;"
      ],
      "err_line": 5,
      "err_msg": "redefinition of ‘int dp [100005][30]’"
    },
    {
      "mod_line": [
        6
      ],
      "mod_code": [
        "map < char , char > :: f ;"
      ],
      "err_line": 6,
      "err_msg": "‘f’ in ‘class std::map<char, char>’ does not name a type"
    },
    {
      "mod_line": [
        7
      ],
      "mod_code": [
        "void Try ( int i , int pre )"
      ],
      "err_line": 8,
      "err_msg": "return-statement with a value, in function returning 'void' [-fpermissive]"
    },
    {
      "mod_line": [
        9
      ],
      "mod_code": [
        "int * r = dp [ i ] [ pre ] ;"
      ],
      "err_line": 9,
      "err_msg": "invalid conversion from ‘int’ to ‘int*’ [-fpermissive]"
    },
    {
      "mod_line": [
        12
      ],
      "mod_code": [
        "int r = Try ( i + s [ i ] , pre + s [ i ] ) ;"
      ],
      "err_line": 12,
      "err_msg": "conflicting declaration ‘int r’"
    },
    {
      "mod_line": [
        17
      ],
      "mod_code": [
        "for ( int i = - 1 ; i <= m ; i ++ ) { dp [ i ] = - 1 ; }"
      ],
      "err_line": 17,
      "err_msg": "‘m’ was not declared in this scope"
    },
    {
      "mod_line": [
        21
      ],
      "mod_code": [
        "char t ;"
      ],
      "err_line": 23,
      "err_msg": "invalid types ‘char[int]’ for array subscript"
    },
    {
      "mod_line": [
        22
      ],
      "mod_code": [
        "cin . get ( t ) ;"
      ],
      "err_line": 22,
      "err_msg": "no matching function for call to ‘std::basic_istream<char>::get(std::__cxx11::string&)’"
    },
    {
      "mod_line": [
        23
      ],
      "mod_code": [
        "int f [ t [ 0 ] ] = t [ 1 ] ;"
      ],
      "err_line": 23,
      "err_msg": "array must be initialized with a brace-enclosed initializer"
    },
    {
      "mod_line": [
        27
      ],
      "mod_code": [
        "for ( int i = n - 2 ; i >= 0 ; i -- ) s [ i ] = a [ i ] == a [ i + 1 ] + 1 ? s [ i + 1 ] + 1 ;"
      ],
      "err_line": 27,
      "err_msg": "expected ‘:’ before ‘;’ token"
    },
    {
      "mod_line": [
        5,
        12
      ],
      "mod_code": [
        "int n , k , s [ MAX ] [ 30 ] , dp [ MAX ] [ 30 ] ;",
        "r = Try ( i + s [ i ] , pre + s [ i ] ) ;"
      ],
      "err_line": 12,
      "err_msg": "invalid conversion from ‘int*’ to ‘int’ [-fpermissive]"
    },
    {
      "mod_line": [
        5,
        12,
        13
      ],
      "mod_code": [
        "int n , k , s [ MAX ] [ 30 ] , dp [ MAX ] [ 30 ] ;",
        "r = Try ( i + s [ i ] , pre + s [ i ] ) ;",
        "if ( a [ i ] != f [ cc ] ) r = min ( i + s [ i ] , a [ i ] - ' a ' ) ;"
      ],
      "err_line": 12,
      "err_msg": "invalid conversion from ‘int*’ to ‘int’ [-fpermissive]"
    },
    {
      "mod_line": [
        5,
        12,
        13,
        27
      ],
      "mod_code": [
        "int n , k , s [ MAX ] [ 30 ] , dp [ MAX ] [ 30 ] ;",
        "r = Try ( i + s [ i ] , pre + s [ i ] ) ;",
        "if ( a [ i ] != f [ cc ] ) r = min ( i + s [ i ] , a [ i ] - ' a ' ) ;",
        "for ( int i = n - 2 ; i >= 0 ; i -- ) { s [ i ] = a [ i ] == a [ i + 1 ] + 1 ? s [ i + 1 ] + 1 ; }"
      ],
      "err_line": 12,
      "err_msg": "invalid conversion from ‘int*’ to ‘int’ [-fpermissive]"
    },
    {
      "mod_line": [
        5,
        12,
        13,
        20
      ],
      "mod_code": [
        "int n , k , s [ MAX ] [ 30 ] , dp [ MAX ] [ 30 ] ;",
        "r = Try ( i + s [ i ] , pre + s [ i ] ) ;",
        "if ( a [ i ] != f [ cc ] ) r = min ( i + s [ i ] , a [ i ] - ' a ' ) ;",
        "while ( -- k )"
      ],
      "err_line": 12,
      "err_msg": "invalid conversion from ‘int*’ to ‘int’ [-fpermissive]"
    },
    {
      "mod_line": [
        5,
        12,
        27
      ],
      "mod_code": [
        "int n , k , s [ MAX ] [ 30 ] , dp [ MAX ] [ 30 ] ;",
        "r = Try ( i + s [ i ] , pre + s [ i ] ) ;",
        "for ( int i = n - 2 ; i >= 0 ; i -- ) { s [ i ] = a [ i ] == a [ i + 1 ] + 1 ? s [ i + 1 ] + 1 ; }"
      ],
      "err_line": 12,
      "err_msg": "invalid conversion from ‘int*’ to ‘int’ [-fpermissive]"
    },
    {
      "mod_line": [
        5,
        12,
        27,
        20
      ],
      "mod_code": [
        "int n , k , s [ MAX ] [ 30 ] , dp [ MAX ] [ 30 ] ;",
        "r = Try ( i + s [ i ] , pre + s [ i ] ) ;",
        "for ( int i = n - 2 ; i >= 0 ; i -- ) { s [ i ] = a [ i ] == a [ i + 1 ] + 1 ? s [ i + 1 ] + 1 ; }",
        "while ( -- k )"
      ],
      "err_line": 12,
      "err_msg": "invalid conversion from ‘int*’ to ‘int’ [-fpermissive]"
    },
    {
      "mod_line": [
        5,
        12,
        20
      ],
      "mod_code": [
        "int n , k , s [ MAX ] [ 30 ] , dp [ MAX ] [ 30 ] ;",
        "r = Try ( i + s [ i ] , pre + s [ i ] ) ;",
        "while ( -- k )"
      ],
      "err_line": 12,
      "err_msg": "invalid conversion from ‘int*’ to ‘int’ [-fpermissive]"
    },
    {
      "mod_line": [
        5,
        13
      ],
      "mod_code": [
        "int n , k , s [ MAX ] [ 30 ] , dp [ MAX ] [ 30 ] ;",
        "if ( a [ i ] != f [ cc ] ) r = min ( i + s [ i ] , a [ i ] - ' a ' ) ;"
      ],
      "err_line": 12,
      "err_msg": "invalid conversion from ‘int*’ to ‘int’ [-fpermissive]"
    },
    {
      "mod_line": [
        5,
        13,
        27
      ],
      "mod_code": [
        "int n , k , s [ MAX ] [ 30 ] , dp [ MAX ] [ 30 ] ;",
        "if ( a [ i ] != f [ cc ] ) r = min ( i + s [ i ] , a [ i ] - ' a ' ) ;",
        "for ( int i = n - 2 ; i >= 0 ; i -- ) { s [ i ] = a [ i ] == a [ i + 1 ] + 1 ? s [ i + 1 ] + 1 ; }"
      ],
      "err_line": 12,
      "err_msg": "invalid conversion from ‘int*’ to ‘int’ [-fpermissive]"
    },
    {
      "mod_line": [
        5,
        13,
        27,
        20
      ],
      "mod_code": [
        "int n , k , s [ MAX ] [ 30 ] , dp [ MAX ] [ 30 ] ;",
        "if ( a [ i ] != f [ cc ] ) r = min ( i + s [ i ] , a [ i ] - ' a ' ) ;",
        "for ( int i = n - 2 ; i >= 0 ; i -- ) { s [ i ] = a [ i ] == a [ i + 1 ] + 1 ? s [ i + 1 ] + 1 ; }",
        "while ( -- k )"
      ],
      "err_line": 12,
      "err_msg": "invalid conversion from ‘int*’ to ‘int’ [-fpermissive]"
    },
    {
      "mod_line": [
        5,
        13,
        27,
        12
      ],
      "mod_code": [
        "int n , k , s [ MAX ] [ 30 ] , dp [ MAX ] [ 30 ] ;",
        "if ( a [ i ] != f [ cc ] ) r = min ( i + s [ i ] , a [ i ] - ' a ' ) ;",
        "for ( int i = n - 2 ; i >= 0 ; i -- ) { s [ i ] = a [ i ] == a [ i + 1 ] + 1 ? s [ i + 1 ] + 1 ; }",
        "int r = Try ( i + s [ i ] , pre + s [ i ] ) ;"
      ],
      "err_line": 12,
      "err_msg": "conflicting declaration ‘int r’"
    },
    {
      "mod_line": [
        5,
        13,
        20
      ],
      "mod_code": [
        "int n , k , s [ MAX ] [ 30 ] , dp [ MAX ] [ 30 ] ;",
        "if ( a [ i ] != f [ cc ] ) r = min ( i + s [ i ] , a [ i ] - ' a ' ) ;",
        "while ( -- k )"
      ],
      "err_line": 12,
      "err_msg": "invalid conversion from ‘int*’ to ‘int’ [-fpermissive]"
    },
    {
      "mod_line": [
        5,
        13,
        20,
        12
      ],
      "mod_code": [
        "int n , k , s [ MAX ] [ 30 ] , dp [ MAX ] [ 30 ] ;",
        "if ( a [ i ] != f [ cc ] ) r = min ( i + s [ i ] , a [ i ] - ' a ' ) ;",
        "while ( -- k )",
        "int r = Try ( i + s [ i ] , pre + s [ i ] ) ;"
      ],
      "err_line": 12,
      "err_msg": "conflicting declaration ‘int r’"
    },
    {
      "mod_line": [
        5,
        13,
        12
      ],
      "mod_code": [
        "int n , k , s [ MAX ] [ 30 ] , dp [ MAX ] [ 30 ] ;",
        "if ( a [ i ] != f [ cc ] ) r = min ( i + s [ i ] , a [ i ] - ' a ' ) ;",
        "int r = Try ( i + s [ i ] , pre + s [ i ] ) ;"
      ],
      "err_line": 12,
      "err_msg": "conflicting declaration ‘int r’"
    },
    {
      "mod_line": [
        5,
        27
      ],
      "mod_code": [
        "int n , k , s [ MAX ] [ 30 ] , dp [ MAX ] [ 30 ] ;",
        "for ( int i = n - 2 ; i >= 0 ; i -- ) { s [ i ] = a [ i ] == a [ i + 1 ] + 1 ? s [ i + 1 ] + 1 ; }"
      ],
      "err_line": 12,
      "err_msg": "invalid conversion from ‘int*’ to ‘int’ [-fpermissive]"
    },
    {
      "mod_line": [
        5,
        27,
        20
      ],
      "mod_code": [
        "int n , k , s [ MAX ] [ 30 ] , dp [ MAX ] [ 30 ] ;",
        "for ( int i = n - 2 ; i >= 0 ; i -- ) { s [ i ] = a [ i ] == a [ i + 1 ] + 1 ? s [ i + 1 ] + 1 ; }",
        "while ( -- k )"
      ],
      "err_line": 12,
      "err_msg": "invalid conversion from ‘int*’ to ‘int’ [-fpermissive]"
    },
    {
      "mod_line": [
        5,
        27,
        20,
        12
      ],
      "mod_code": [
        "int n , k , s [ MAX ] [ 30 ] , dp [ MAX ] [ 30 ] ;",
        "for ( int i = n - 2 ; i >= 0 ; i -- ) { s [ i ] = a [ i ] == a [ i + 1 ] + 1 ? s [ i + 1 ] + 1 ; }",
        "while ( -- k )",
        "int r = Try ( i + s [ i ] , pre + s [ i ] ) ;"
      ],
      "err_line": 12,
      "err_msg": "conflicting declaration ‘int r’"
    },
    {
      "mod_line": [
        5,
        27,
        12
      ],
      "mod_code": [
        "int n , k , s [ MAX ] [ 30 ] , dp [ MAX ] [ 30 ] ;",
        "for ( int i = n - 2 ; i >= 0 ; i -- ) { s [ i ] = a [ i ] == a [ i + 1 ] + 1 ? s [ i + 1 ] + 1 ; }",
        "int r = Try ( i + s [ i ] , pre + s [ i ] ) ;"
      ],
      "err_line": 12,
      "err_msg": "conflicting declaration ‘int r’"
    },
    {
      "mod_line": [
        5,
        20
      ],
      "mod_code": [
        "int n , k , s [ MAX ] [ 30 ] , dp [ MAX ] [ 30 ] ;",
        "while ( -- k )"
      ],
      "err_line": 12,
      "err_msg": "invalid conversion from ‘int*’ to ‘int’ [-fpermissive]"
    },
    {
      "mod_line": [
        5,
        20,
        12
      ],
      "mod_code": [
        "int n , k , s [ MAX ] [ 30 ] , dp [ MAX ] [ 30 ] ;",
        "while ( -- k )",
        "int r = Try ( i + s [ i ] , pre + s [ i ] ) ;"
      ],
      "err_line": 12,
      "err_msg": "conflicting declaration ‘int r’"
    },
    {
      "mod_line": [
        5,
        12
      ],
      "mod_code": [
        "int n , k , s [ MAX ] [ 30 ] , dp [ MAX ] [ 30 ] ;",
        "int r = Try ( i + s [ i ] , pre + s [ i ] ) ;"
      ],
      "err_line": 12,
      "err_msg": "conflicting declaration ‘int r’"
    },
    {
      "mod_line": [
        12,
        13,
        27
      ],
      "mod_code": [
        "r = Try ( i + s [ i ] , pre + s [ i ] ) ;",
        "if ( a [ i ] != f [ cc ] ) r = min ( i + s [ i ] , a [ i ] - ' a ' ) ;",
        "for ( int i = n - 2 ; i >= 0 ; i -- ) { s [ i ] = a [ i ] == a [ i + 1 ] + 1 ? s [ i + 1 ] + 1 ; }"
      ],
      "err_line": 27,
      "err_msg": "expected ‘:’ before ‘;’ token"
    },
    {
      "mod_line": [
        12,
        13,
        27,
        20
      ],
      "mod_code": [
        "r = Try ( i + s [ i ] , pre + s [ i ] ) ;",
        "if ( a [ i ] != f [ cc ] ) r = min ( i + s [ i ] , a [ i ] - ' a ' ) ;",
        "for ( int i = n - 2 ; i >= 0 ; i -- ) { s [ i ] = a [ i ] == a [ i + 1 ] + 1 ? s [ i + 1 ] + 1 ; }",
        "while ( -- k )"
      ],
      "err_line": 27,
      "err_msg": "expected ‘:’ before ‘;’ token"
    },
    {
      "mod_line": [
        12,
        27
      ],
      "mod_code": [
        "r = Try ( i + s [ i ] , pre + s [ i ] ) ;",
        "for ( int i = n - 2 ; i >= 0 ; i -- ) { s [ i ] = a [ i ] == a [ i + 1 ] + 1 ? s [ i + 1 ] + 1 ; }"
      ],
      "err_line": 27,
      "err_msg": "expected ‘:’ before ‘;’ token"
    },
    {
      "mod_line": [
        12,
        27,
        20
      ],
      "mod_code": [
        "r = Try ( i + s [ i ] , pre + s [ i ] ) ;",
        "for ( int i = n - 2 ; i >= 0 ; i -- ) { s [ i ] = a [ i ] == a [ i + 1 ] + 1 ? s [ i + 1 ] + 1 ; }",
        "while ( -- k )"
      ],
      "err_line": 27,
      "err_msg": "expected ‘:’ before ‘;’ token"
    },
    {
      "mod_line": [
        13,
        27
      ],
      "mod_code": [
        "if ( a [ i ] != f [ cc ] ) r = min ( i + s [ i ] , a [ i ] - ' a ' ) ;",
        "for ( int i = n - 2 ; i >= 0 ; i -- ) { s [ i ] = a [ i ] == a [ i + 1 ] + 1 ? s [ i + 1 ] + 1 ; }"
      ],
      "err_line": 27,
      "err_msg": "expected ‘:’ before ‘;’ token"
    },
    {
      "mod_line": [
        13,
        27,
        20
      ],
      "mod_code": [
        "if ( a [ i ] != f [ cc ] ) r = min ( i + s [ i ] , a [ i ] - ' a ' ) ;",
        "for ( int i = n - 2 ; i >= 0 ; i -- ) { s [ i ] = a [ i ] == a [ i + 1 ] + 1 ? s [ i + 1 ] + 1 ; }",
        "while ( -- k )"
      ],
      "err_line": 27,
      "err_msg": "expected ‘:’ before ‘;’ token"
    },
    {
      "mod_line": [
        13,
        27,
        20,
        12
      ],
      "mod_code": [
        "if ( a [ i ] != f [ cc ] ) r = min ( i + s [ i ] , a [ i ] - ' a ' ) ;",
        "for ( int i = n - 2 ; i >= 0 ; i -- ) { s [ i ] = a [ i ] == a [ i + 1 ] + 1 ? s [ i + 1 ] + 1 ; }",
        "while ( -- k )",
        "int r = Try ( i + s [ i ] , pre + s [ i ] ) ;"
      ],
      "err_line": 12,
      "err_msg": "conflicting declaration ‘int r’"
    },
    {
      "mod_line": [
        13,
        27,
        12
      ],
      "mod_code": [
        "if ( a [ i ] != f [ cc ] ) r = min ( i + s [ i ] , a [ i ] - ' a ' ) ;",
        "for ( int i = n - 2 ; i >= 0 ; i -- ) { s [ i ] = a [ i ] == a [ i + 1 ] + 1 ? s [ i + 1 ] + 1 ; }",
        "int r = Try ( i + s [ i ] , pre + s [ i ] ) ;"
      ],
      "err_line": 12,
      "err_msg": "conflicting declaration ‘int r’"
    },
    {
      "mod_line": [
        13,
        20,
        12
      ],
      "mod_code": [
        "if ( a [ i ] != f [ cc ] ) r = min ( i + s [ i ] , a [ i ] - ' a ' ) ;",
        "while ( -- k )",
        "int r = Try ( i + s [ i ] , pre + s [ i ] ) ;"
      ],
      "err_line": 12,
      "err_msg": "conflicting declaration ‘int r’"
    },
    {
      "mod_line": [
        13,
        12
      ],
      "mod_code": [
        "if ( a [ i ] != f [ cc ] ) r = min ( i + s [ i ] , a [ i ] - ' a ' ) ;",
        "int r = Try ( i + s [ i ] , pre + s [ i ] ) ;"
      ],
      "err_line": 12,
      "err_msg": "conflicting declaration ‘int r’"
    },
    {
      "mod_line": [
        27,
        20
      ],
      "mod_code": [
        "for ( int i = n - 2 ; i >= 0 ; i -- ) { s [ i ] = a [ i ] == a [ i + 1 ] + 1 ? s [ i + 1 ] + 1 ; }",
        "while ( -- k )"
      ],
      "err_line": 27,
      "err_msg": "expected ‘:’ before ‘;’ token"
    },
    {
      "mod_line": [
        27,
        20,
        12
      ],
      "mod_code": [
        "for ( int i = n - 2 ; i >= 0 ; i -- ) { s [ i ] = a [ i ] == a [ i + 1 ] + 1 ? s [ i + 1 ] + 1 ; }",
        "while ( -- k )",
        "int r = Try ( i + s [ i ] , pre + s [ i ] ) ;"
      ],
      "err_line": 12,
      "err_msg": "conflicting declaration ‘int r’"
    },
    {
      "mod_line": [
        27,
        12
      ],
      "mod_code": [
        "for ( int i = n - 2 ; i >= 0 ; i -- ) { s [ i ] = a [ i ] == a [ i + 1 ] + 1 ? s [ i + 1 ] + 1 ; }",
        "int r = Try ( i + s [ i ] , pre + s [ i ] ) ;"
      ],
      "err_line": 12,
      "err_msg": "conflicting declaration ‘int r’"
    },
    {
      "mod_line": [
        20,
        12
      ],
      "mod_code": [
        "while ( -- k )",
        "int r = Try ( i + s [ i ] , pre + s [ i ] ) ;"
      ],
      "err_line": 12,
      "err_msg": "conflicting declaration ‘int r’"
    }
  ]
}