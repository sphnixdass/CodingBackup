{
  "meta": {
    "index": 1879,
    "hitid": "3S1WOPCJFGNB41FULJOXUM42EDCEJS",
    "workerid": "A1AYVATMT88U1W",
    "probid": "572A",
    "subid": "48675516"
  },
  "lines": [
    {
      "line": 0,
      "text": "let n1 , n2 be long integers",
      "code": "long long int n1 , n2 ;",
      "indent": 0
    },
    {
      "line": 1,
      "text": "a is a long integer array of size 100007",
      "code": "long long int a [ 100007 ] ;",
      "indent": 0
    },
    {
      "line": 2,
      "text": "b is a long integer array of size 100007",
      "code": "long long int b [ 100007 ] ;",
      "indent": 0
    },
    {
      "line": 3,
      "text": "let k , m be long integers",
      "code": "long long int k , m ;",
      "indent": 0
    },
    {
      "line": 4,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 5,
      "text": "read n1 , n2",
      "code": "cin >> n1 >> n2 ;",
      "indent": 1
    },
    {
      "line": 6,
      "text": "read k , m",
      "code": "cin >> k >> m ;",
      "indent": 1
    },
    {
      "line": 7,
      "text": "for long integer i = 0 to n1 - 1 , read a [ i ]",
      "code": "for ( long long int i = 0 ; i <= n1 - 1 ; i ++ ) { cin >> a [ i ] ; }",
      "indent": 1
    },
    {
      "line": 8,
      "text": "for long integer i = 0 to n2 - 1 , read b [ i ]",
      "code": "for ( long long int i = 0 ; i <= n2 - 1 ; i ++ ) { cin >> b [ i ] ; }",
      "indent": 1
    },
    {
      "line": 9,
      "text": "sort the values a , a + n1",
      "code": "sort ( a , a + n1 ) ;",
      "indent": 1
    },
    {
      "line": 10,
      "text": "sort the values b , b + n2 , greater < long long int > ( )",
      "code": "sort ( b , b + n2 , greater < long long int > ( ) ) ;",
      "indent": 1
    },
    {
      "line": 11,
      "text": "if a [ k - 1 ] is less than b [ m - 1 ]",
      "code": "if ( a [ k - 1 ] < b [ m - 1 ] )",
      "indent": 1
    },
    {
      "line": 12,
      "text": "print YES",
      "code": "cout << \" YES \"",
      "indent": 2
    },
    {
      "line": 13,
      "text": "newline",
      "code": "<< \" \\n \" ;",
      "indent": 3
    },
    {
      "line": 14,
      "text": "else",
      "code": "else",
      "indent": 1
    },
    {
      "line": 15,
      "text": "print NO",
      "code": "cout << \" NO \"",
      "indent": 2
    },
    {
      "line": 16,
      "text": "newline",
      "code": "<< \" \\n \" ;",
      "indent": 3
    },
    {
      "line": 17,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 18,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 19,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        10
      ],
      "mod_code": [
        "sort ( b , b + n2 , greater < long long ) ;"
      ],
      "err_line": 10,
      "err_msg": "template argument 1 is invalid"
    },
    {
      "mod_line": [
        12
      ],
      "mod_code": [
        "cout << \" YES \" << endl ;"
      ],
      "err_line": 13,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        15
      ],
      "mod_code": [
        "cout << \" NO \" << endl ;"
      ],
      "err_line": 16,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        9
      ],
      "mod_code": [
        "sort ( a , a + n ) ;"
      ],
      "err_line": 9,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        11
      ],
      "mod_code": [
        "if ( a [ k - 1 ] ] < b [ m - 1 ] )"
      ],
      "err_line": 11,
      "err_msg": "expected ‘)’ before ‘]’ token"
    },
    {
      "mod_line": [
        12
      ],
      "mod_code": [
        "cout << \" YES\\n \" ;"
      ],
      "err_line": 13,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        15
      ],
      "mod_code": [
        "cout << \" NO\\n \" ;"
      ],
      "err_line": 16,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        7,
        10
      ],
      "mod_code": [
        "for ( long long i = 0 ; i < n1 - 1 ; i ++ ) { cin >> a [ i ] ; }",
        "sort ( b , b + n2 , greater < long long ) ;"
      ],
      "err_line": 10,
      "err_msg": "template argument 1 is invalid"
    },
    {
      "mod_line": [
        7,
        10,
        12
      ],
      "mod_code": [
        "for ( long long i = 0 ; i < n1 - 1 ; i ++ ) { cin >> a [ i ] ; }",
        "sort ( b , b + n2 , greater < long long ) ;",
        "cout << \" YES \" << endl ;"
      ],
      "err_line": 10,
      "err_msg": "template argument 1 is invalid"
    },
    {
      "mod_line": [
        7,
        10,
        12,
        13
      ],
      "mod_code": [
        "for ( long long i = 0 ; i < n1 - 1 ; i ++ ) { cin >> a [ i ] ; }",
        "sort ( b , b + n2 , greater < long long ) ;",
        "cout << \" YES \" << endl ;",
        ";"
      ],
      "err_line": 10,
      "err_msg": "template argument 1 is invalid"
    },
    {
      "mod_line": [
        7,
        10,
        12,
        15
      ],
      "mod_code": [
        "for ( long long i = 0 ; i < n1 - 1 ; i ++ ) { cin >> a [ i ] ; }",
        "sort ( b , b + n2 , greater < long long ) ;",
        "cout << \" YES \" << endl ;",
        "cout << \" NO \" << endl ;"
      ],
      "err_line": 10,
      "err_msg": "template argument 1 is invalid"
    },
    {
      "mod_line": [
        7,
        10,
        12,
        16
      ],
      "mod_code": [
        "for ( long long i = 0 ; i < n1 - 1 ; i ++ ) { cin >> a [ i ] ; }",
        "sort ( b , b + n2 , greater < long long ) ;",
        "cout << \" YES \" << endl ;",
        ";"
      ],
      "err_line": 10,
      "err_msg": "template argument 1 is invalid"
    },
    {
      "mod_line": [
        7,
        10,
        13
      ],
      "mod_code": [
        "for ( long long i = 0 ; i < n1 - 1 ; i ++ ) { cin >> a [ i ] ; }",
        "sort ( b , b + n2 , greater < long long ) ;",
        ";"
      ],
      "err_line": 10,
      "err_msg": "template argument 1 is invalid"
    },
    {
      "mod_line": [
        7,
        10,
        13,
        15
      ],
      "mod_code": [
        "for ( long long i = 0 ; i < n1 - 1 ; i ++ ) { cin >> a [ i ] ; }",
        "sort ( b , b + n2 , greater < long long ) ;",
        ";",
        "cout << \" NO \" << endl ;"
      ],
      "err_line": 10,
      "err_msg": "template argument 1 is invalid"
    },
    {
      "mod_line": [
        7,
        10,
        13,
        16
      ],
      "mod_code": [
        "for ( long long i = 0 ; i < n1 - 1 ; i ++ ) { cin >> a [ i ] ; }",
        "sort ( b , b + n2 , greater < long long ) ;",
        ";",
        ";"
      ],
      "err_line": 10,
      "err_msg": "template argument 1 is invalid"
    },
    {
      "mod_line": [
        7,
        10,
        15
      ],
      "mod_code": [
        "for ( long long i = 0 ; i < n1 - 1 ; i ++ ) { cin >> a [ i ] ; }",
        "sort ( b , b + n2 , greater < long long ) ;",
        "cout << \" NO \" << endl ;"
      ],
      "err_line": 10,
      "err_msg": "template argument 1 is invalid"
    },
    {
      "mod_line": [
        7,
        10,
        15,
        16
      ],
      "mod_code": [
        "for ( long long i = 0 ; i < n1 - 1 ; i ++ ) { cin >> a [ i ] ; }",
        "sort ( b , b + n2 , greater < long long ) ;",
        "cout << \" NO \" << endl ;",
        ";"
      ],
      "err_line": 10,
      "err_msg": "template argument 1 is invalid"
    },
    {
      "mod_line": [
        7,
        10,
        16
      ],
      "mod_code": [
        "for ( long long i = 0 ; i < n1 - 1 ; i ++ ) { cin >> a [ i ] ; }",
        "sort ( b , b + n2 , greater < long long ) ;",
        ";"
      ],
      "err_line": 10,
      "err_msg": "template argument 1 is invalid"
    },
    {
      "mod_line": [
        7,
        12
      ],
      "mod_code": [
        "for ( long long i = 0 ; i < n1 - 1 ; i ++ ) { cin >> a [ i ] ; }",
        "cout << \" YES \" << endl ;"
      ],
      "err_line": 13,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        7,
        12,
        13,
        15
      ],
      "mod_code": [
        "for ( long long i = 0 ; i < n1 - 1 ; i ++ ) { cin >> a [ i ] ; }",
        "cout << \" YES \" << endl ;",
        ";",
        "cout << \" NO \" << endl ;"
      ],
      "err_line": 16,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        7,
        12,
        15
      ],
      "mod_code": [
        "for ( long long i = 0 ; i < n1 - 1 ; i ++ ) { cin >> a [ i ] ; }",
        "cout << \" YES \" << endl ;",
        "cout << \" NO \" << endl ;"
      ],
      "err_line": 13,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        7,
        12,
        15,
        16
      ],
      "mod_code": [
        "for ( long long i = 0 ; i < n1 - 1 ; i ++ ) { cin >> a [ i ] ; }",
        "cout << \" YES \" << endl ;",
        "cout << \" NO \" << endl ;",
        ";"
      ],
      "err_line": 13,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        7,
        12,
        16
      ],
      "mod_code": [
        "for ( long long i = 0 ; i < n1 - 1 ; i ++ ) { cin >> a [ i ] ; }",
        "cout << \" YES \" << endl ;",
        ";"
      ],
      "err_line": 13,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        7,
        13,
        15
      ],
      "mod_code": [
        "for ( long long i = 0 ; i < n1 - 1 ; i ++ ) { cin >> a [ i ] ; }",
        ";",
        "cout << \" NO \" << endl ;"
      ],
      "err_line": 16,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        7,
        15
      ],
      "mod_code": [
        "for ( long long i = 0 ; i < n1 - 1 ; i ++ ) { cin >> a [ i ] ; }",
        "cout << \" NO \" << endl ;"
      ],
      "err_line": 16,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        10,
        12
      ],
      "mod_code": [
        "sort ( b , b + n2 , greater < long long ) ;",
        "cout << \" YES \" << endl ;"
      ],
      "err_line": 10,
      "err_msg": "template argument 1 is invalid"
    },
    {
      "mod_line": [
        10,
        12,
        13
      ],
      "mod_code": [
        "sort ( b , b + n2 , greater < long long ) ;",
        "cout << \" YES \" << endl ;",
        ";"
      ],
      "err_line": 10,
      "err_msg": "template argument 1 is invalid"
    },
    {
      "mod_line": [
        10,
        12,
        13,
        15
      ],
      "mod_code": [
        "sort ( b , b + n2 , greater < long long ) ;",
        "cout << \" YES \" << endl ;",
        ";",
        "cout << \" NO \" << endl ;"
      ],
      "err_line": 10,
      "err_msg": "template argument 1 is invalid"
    },
    {
      "mod_line": [
        10,
        12,
        13,
        16
      ],
      "mod_code": [
        "sort ( b , b + n2 , greater < long long ) ;",
        "cout << \" YES \" << endl ;",
        ";",
        ";"
      ],
      "err_line": 10,
      "err_msg": "template argument 1 is invalid"
    },
    {
      "mod_line": [
        10,
        12,
        15
      ],
      "mod_code": [
        "sort ( b , b + n2 , greater < long long ) ;",
        "cout << \" YES \" << endl ;",
        "cout << \" NO \" << endl ;"
      ],
      "err_line": 10,
      "err_msg": "template argument 1 is invalid"
    },
    {
      "mod_line": [
        10,
        12,
        15,
        16
      ],
      "mod_code": [
        "sort ( b , b + n2 , greater < long long ) ;",
        "cout << \" YES \" << endl ;",
        "cout << \" NO \" << endl ;",
        ";"
      ],
      "err_line": 10,
      "err_msg": "template argument 1 is invalid"
    },
    {
      "mod_line": [
        10,
        12,
        16
      ],
      "mod_code": [
        "sort ( b , b + n2 , greater < long long ) ;",
        "cout << \" YES \" << endl ;",
        ";"
      ],
      "err_line": 10,
      "err_msg": "template argument 1 is invalid"
    },
    {
      "mod_line": [
        10,
        13
      ],
      "mod_code": [
        "sort ( b , b + n2 , greater < long long ) ;",
        ";"
      ],
      "err_line": 10,
      "err_msg": "template argument 1 is invalid"
    },
    {
      "mod_line": [
        10,
        13,
        15
      ],
      "mod_code": [
        "sort ( b , b + n2 , greater < long long ) ;",
        ";",
        "cout << \" NO \" << endl ;"
      ],
      "err_line": 10,
      "err_msg": "template argument 1 is invalid"
    },
    {
      "mod_line": [
        10,
        13,
        15,
        16
      ],
      "mod_code": [
        "sort ( b , b + n2 , greater < long long ) ;",
        ";",
        "cout << \" NO \" << endl ;",
        ";"
      ],
      "err_line": 10,
      "err_msg": "template argument 1 is invalid"
    },
    {
      "mod_line": [
        10,
        13,
        16
      ],
      "mod_code": [
        "sort ( b , b + n2 , greater < long long ) ;",
        ";",
        ";"
      ],
      "err_line": 10,
      "err_msg": "template argument 1 is invalid"
    },
    {
      "mod_line": [
        10,
        15
      ],
      "mod_code": [
        "sort ( b , b + n2 , greater < long long ) ;",
        "cout << \" NO \" << endl ;"
      ],
      "err_line": 10,
      "err_msg": "template argument 1 is invalid"
    },
    {
      "mod_line": [
        10,
        15,
        16
      ],
      "mod_code": [
        "sort ( b , b + n2 , greater < long long ) ;",
        "cout << \" NO \" << endl ;",
        ";"
      ],
      "err_line": 10,
      "err_msg": "template argument 1 is invalid"
    },
    {
      "mod_line": [
        10,
        16
      ],
      "mod_code": [
        "sort ( b , b + n2 , greater < long long ) ;",
        ";"
      ],
      "err_line": 10,
      "err_msg": "template argument 1 is invalid"
    },
    {
      "mod_line": [
        12,
        13,
        15
      ],
      "mod_code": [
        "cout << \" YES \" << endl ;",
        ";",
        "cout << \" NO \" << endl ;"
      ],
      "err_line": 16,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        12,
        15
      ],
      "mod_code": [
        "cout << \" YES \" << endl ;",
        "cout << \" NO \" << endl ;"
      ],
      "err_line": 13,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        12,
        15,
        16
      ],
      "mod_code": [
        "cout << \" YES \" << endl ;",
        "cout << \" NO \" << endl ;",
        ";"
      ],
      "err_line": 13,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        12,
        16
      ],
      "mod_code": [
        "cout << \" YES \" << endl ;",
        ";"
      ],
      "err_line": 13,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        13,
        15
      ],
      "mod_code": [
        ";",
        "cout << \" NO \" << endl ;"
      ],
      "err_line": 16,
      "err_msg": "expected primary-expression before ‘<<’ token"
    }
  ]
}