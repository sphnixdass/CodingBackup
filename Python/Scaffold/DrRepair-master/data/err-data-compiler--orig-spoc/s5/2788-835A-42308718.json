{
  "meta": {
    "index": 2788,
    "hitid": "3Z3R5YC0P3HXOIBVSOM7EACBOGDTFP",
    "workerid": "A1R0Q9CUUBSM5F",
    "probid": "835A",
    "subid": "42308718"
  },
  "lines": [
    {
      "line": 0,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 1,
      "text": "make long long ints t1 , t2 , v1 , v2 , and s",
      "code": "long long t1 , t2 , v1 , v2 , s ;",
      "indent": 1
    },
    {
      "line": 2,
      "text": "read s , v1 , v2 , t1 , and t2",
      "code": "cin >> s >> v1 >> v2 >> t1 >> t2 ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "if 2 * t1 + v1 * s is less than 2 * t2 + v2 * s",
      "code": "if ( ( 2 * t1 + v1 * s ) < ( 2 * t2 + v2 * s ) )",
      "indent": 1
    },
    {
      "line": 4,
      "text": "print \" First \\ n \"",
      "code": "cout << \" First\\n \" ;",
      "indent": 2
    },
    {
      "line": 5,
      "text": "else if 2 * t1 + v1 * s is greater than 2 * t2 + v2 * s",
      "code": "else if ( ( 2 * t1 + v1 * s ) > ( 2 * t2 + v2 * s ) )",
      "indent": 1
    },
    {
      "line": 6,
      "text": "print \" Second \\ n \"",
      "code": "cout << \" Second\\n \" ;",
      "indent": 2
    },
    {
      "line": 7,
      "text": "else",
      "code": "else",
      "indent": 1
    },
    {
      "line": 8,
      "text": "print \" Friendship \\ n \"",
      "code": "cout << \" Friendship\\n \" ;",
      "indent": 2
    },
    {
      "line": 9,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 10,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 11,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        4
      ],
      "mod_code": [
        "<< \" 1\\n \" ;"
      ],
      "err_line": 4,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        5
      ],
      "mod_code": [
        "else if ( 2 * t1 + v1 * s > 2 * t2 ) v2 * s ;"
      ],
      "err_line": 7,
      "err_msg": "‘else’ without a previous ‘if’"
    },
    {
      "mod_line": [
        6,
        8,
        4
      ],
      "mod_code": [
        "cout << \" A\\n \" ;",
        "cout << \" No\\n \" ;",
        "<< \" 1\\n \" ;"
      ],
      "err_line": 4,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        6,
        8,
        4,
        2
      ],
      "mod_code": [
        "cout << \" A\\n \" ;",
        "cout << \" No\\n \" ;",
        "<< \" 1\\n \" ;",
        "cin >> s >> v1 >> v2 >> t1 >> t1 ;"
      ],
      "err_line": 4,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        6,
        4
      ],
      "mod_code": [
        "cout << \" A\\n \" ;",
        "<< \" 1\\n \" ;"
      ],
      "err_line": 4,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        6,
        4,
        8
      ],
      "mod_code": [
        "cout << \" A\\n \" ;",
        "<< \" 1\\n \" ;",
        "cout << \" #\\n \" ;"
      ],
      "err_line": 4,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        6,
        4,
        8,
        2
      ],
      "mod_code": [
        "cout << \" A\\n \" ;",
        "<< \" 1\\n \" ;",
        "cout << \" #\\n \" ;",
        "cin >> s >> v1 >> v2 >> t1 >> t1 ;"
      ],
      "err_line": 4,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        6,
        4,
        2
      ],
      "mod_code": [
        "cout << \" A\\n \" ;",
        "<< \" 1\\n \" ;",
        "cin >> s >> v1 >> v2 >> t1 >> t1 ;"
      ],
      "err_line": 4,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        8,
        4
      ],
      "mod_code": [
        "cout << \" No\\n \" ;",
        "<< \" 1\\n \" ;"
      ],
      "err_line": 4,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        8,
        4,
        2
      ],
      "mod_code": [
        "cout << \" No\\n \" ;",
        "<< \" 1\\n \" ;",
        "cin >> s >> v1 >> v2 >> t1 >> t1 ;"
      ],
      "err_line": 4,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        8
      ],
      "mod_code": [
        "<< \" 1\\n \" ;",
        "cout << \" #\\n \" ;"
      ],
      "err_line": 4,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        8,
        2
      ],
      "mod_code": [
        "<< \" 1\\n \" ;",
        "cout << \" #\\n \" ;",
        "cin >> s >> v1 >> v2 >> t1 >> t1 ;"
      ],
      "err_line": 4,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        2
      ],
      "mod_code": [
        "<< \" 1\\n \" ;",
        "cin >> s >> v1 >> v2 >> t1 >> t1 ;"
      ],
      "err_line": 4,
      "err_msg": "expected primary-expression before ‘<<’ token"
    }
  ]
}