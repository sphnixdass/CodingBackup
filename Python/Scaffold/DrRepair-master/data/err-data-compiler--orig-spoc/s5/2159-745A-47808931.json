{
  "meta": {
    "index": 2159,
    "hitid": "3JTPR5MTZS66J2SJS3V6R7Y2G93K5M",
    "workerid": "A1APYLD4DUK33J",
    "probid": "745A",
    "subid": "47808931"
  },
  "lines": [
    {
      "line": 0,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 1,
      "text": "create string set st",
      "code": "set < string > st ;",
      "indent": 1
    },
    {
      "line": 2,
      "text": "create strings s , p",
      "code": "string s , p ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "read s",
      "code": "cin >> s ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "for i = 0 to length of s exclusive",
      "code": "for ( int i = 0 ; i < s . length ( ) ; i ++ )",
      "indent": 1
    },
    {
      "line": 5,
      "text": "set p to s [ length of s - 1 ]",
      "code": "p = s [ s . length ( ) - 1 ] ;",
      "indent": 2
    },
    {
      "line": 6,
      "text": "remove length of s - 1 from s",
      "code": "s . erase ( s . length ( ) - 1 ) ;",
      "indent": 2
    },
    {
      "line": 7,
      "text": "set s to p + s",
      "code": "s = p + s ;",
      "indent": 2
    },
    {
      "line": 8,
      "text": "if first index of s in st is end of st , insert s into st",
      "code": "if ( st . find ( s ) == st . end ( ) ) { st . insert ( s ) ; }",
      "indent": 2
    },
    {
      "line": 9,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 10,
      "text": "print size of st print newline",
      "code": "cout << st . size ( ) << endl ;",
      "indent": 1
    },
    {
      "line": 11,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 12,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        6
      ],
      "mod_code": [
        "s . pop ( ) - 1 ;"
      ],
      "err_line": 6,
      "err_msg": "‘std::__cxx11::string {aka class std::__cxx11::basic_string<char>}’ has no member named ‘pop’"
    },
    {
      "mod_line": [
        1
      ],
      "mod_code": [
        "set < string create ;"
      ],
      "err_line": 1,
      "err_msg": "template argument 1 is invalid"
    },
    {
      "mod_line": [
        2
      ],
      "mod_code": [
        "strings = s , p ;"
      ],
      "err_line": 2,
      "err_msg": "‘strings’ was not declared in this scope"
    },
    {
      "mod_line": [
        4
      ],
      "mod_code": [
        "for ( i = 0 ; i < s . length ( ) ; i ++ )"
      ],
      "err_line": 4,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        1
      ],
      "mod_code": [
        "s . pop ( ) - 1 ;",
        "set < string create ;"
      ],
      "err_line": 1,
      "err_msg": "template argument 1 is invalid"
    },
    {
      "mod_line": [
        6,
        1,
        4
      ],
      "mod_code": [
        "s . pop ( ) - 1 ;",
        "set < string create ;",
        "for ( i = 0 ; i < s . length ( ) ; i ++ )"
      ],
      "err_line": 1,
      "err_msg": "template argument 1 is invalid"
    },
    {
      "mod_line": [
        6,
        1,
        4,
        3
      ],
      "mod_code": [
        "s . pop ( ) - 1 ;",
        "set < string create ;",
        "for ( i = 0 ; i < s . length ( ) ; i ++ )",
        "cout << s << endl ;"
      ],
      "err_line": 1,
      "err_msg": "template argument 1 is invalid"
    },
    {
      "mod_line": [
        6,
        1,
        4,
        7
      ],
      "mod_code": [
        "s . pop ( ) - 1 ;",
        "set < string create ;",
        "for ( i = 0 ; i < s . length ( ) ; i ++ )",
        "s += s ;"
      ],
      "err_line": 1,
      "err_msg": "template argument 1 is invalid"
    },
    {
      "mod_line": [
        6,
        1,
        4,
        2
      ],
      "mod_code": [
        "s . pop ( ) - 1 ;",
        "set < string create ;",
        "for ( i = 0 ; i < s . length ( ) ; i ++ )",
        "strings = s , p ;"
      ],
      "err_line": 1,
      "err_msg": "template argument 1 is invalid"
    },
    {
      "mod_line": [
        6,
        1,
        3
      ],
      "mod_code": [
        "s . pop ( ) - 1 ;",
        "set < string create ;",
        "cout << s << endl ;"
      ],
      "err_line": 1,
      "err_msg": "template argument 1 is invalid"
    },
    {
      "mod_line": [
        6,
        1,
        3,
        7
      ],
      "mod_code": [
        "s . pop ( ) - 1 ;",
        "set < string create ;",
        "cout << s << endl ;",
        "s += s ;"
      ],
      "err_line": 1,
      "err_msg": "template argument 1 is invalid"
    },
    {
      "mod_line": [
        6,
        1,
        3,
        2
      ],
      "mod_code": [
        "s . pop ( ) - 1 ;",
        "set < string create ;",
        "cout << s << endl ;",
        "strings = s , p ;"
      ],
      "err_line": 1,
      "err_msg": "template argument 1 is invalid"
    },
    {
      "mod_line": [
        6,
        1,
        7
      ],
      "mod_code": [
        "s . pop ( ) - 1 ;",
        "set < string create ;",
        "s += s ;"
      ],
      "err_line": 1,
      "err_msg": "template argument 1 is invalid"
    },
    {
      "mod_line": [
        6,
        1,
        7,
        2
      ],
      "mod_code": [
        "s . pop ( ) - 1 ;",
        "set < string create ;",
        "s += s ;",
        "strings = s , p ;"
      ],
      "err_line": 1,
      "err_msg": "template argument 1 is invalid"
    },
    {
      "mod_line": [
        6,
        1,
        2
      ],
      "mod_code": [
        "s . pop ( ) - 1 ;",
        "set < string create ;",
        "strings = s , p ;"
      ],
      "err_line": 1,
      "err_msg": "template argument 1 is invalid"
    },
    {
      "mod_line": [
        6,
        4
      ],
      "mod_code": [
        "s . pop ( ) - 1 ;",
        "for ( i = 0 ; i < s . length ( ) ; i ++ )"
      ],
      "err_line": 4,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        4,
        3
      ],
      "mod_code": [
        "s . pop ( ) - 1 ;",
        "for ( i = 0 ; i < s . length ( ) ; i ++ )",
        "cout << s << endl ;"
      ],
      "err_line": 4,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        4,
        3,
        7
      ],
      "mod_code": [
        "s . pop ( ) - 1 ;",
        "for ( i = 0 ; i < s . length ( ) ; i ++ )",
        "cout << s << endl ;",
        "s += s ;"
      ],
      "err_line": 4,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        4,
        3,
        2
      ],
      "mod_code": [
        "s . pop ( ) - 1 ;",
        "for ( i = 0 ; i < s . length ( ) ; i ++ )",
        "cout << s << endl ;",
        "strings = s , p ;"
      ],
      "err_line": 2,
      "err_msg": "‘strings’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        4,
        7
      ],
      "mod_code": [
        "s . pop ( ) - 1 ;",
        "for ( i = 0 ; i < s . length ( ) ; i ++ )",
        "s += s ;"
      ],
      "err_line": 4,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        4,
        7,
        2
      ],
      "mod_code": [
        "s . pop ( ) - 1 ;",
        "for ( i = 0 ; i < s . length ( ) ; i ++ )",
        "s += s ;",
        "strings = s , p ;"
      ],
      "err_line": 2,
      "err_msg": "‘strings’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        4,
        2
      ],
      "mod_code": [
        "s . pop ( ) - 1 ;",
        "for ( i = 0 ; i < s . length ( ) ; i ++ )",
        "strings = s , p ;"
      ],
      "err_line": 2,
      "err_msg": "‘strings’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        3
      ],
      "mod_code": [
        "s . pop ( ) - 1 ;",
        "cout << s << endl ;"
      ],
      "err_line": 6,
      "err_msg": "‘std::__cxx11::string {aka class std::__cxx11::basic_string<char>}’ has no member named ‘pop’"
    },
    {
      "mod_line": [
        6,
        3,
        7
      ],
      "mod_code": [
        "s . pop ( ) - 1 ;",
        "cout << s << endl ;",
        "s += s ;"
      ],
      "err_line": 6,
      "err_msg": "‘std::__cxx11::string {aka class std::__cxx11::basic_string<char>}’ has no member named ‘pop’"
    },
    {
      "mod_line": [
        6,
        3,
        7,
        2
      ],
      "mod_code": [
        "s . pop ( ) - 1 ;",
        "cout << s << endl ;",
        "s += s ;",
        "strings = s , p ;"
      ],
      "err_line": 2,
      "err_msg": "‘strings’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        3,
        2
      ],
      "mod_code": [
        "s . pop ( ) - 1 ;",
        "cout << s << endl ;",
        "strings = s , p ;"
      ],
      "err_line": 2,
      "err_msg": "‘strings’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        7
      ],
      "mod_code": [
        "s . pop ( ) - 1 ;",
        "s += s ;"
      ],
      "err_line": 6,
      "err_msg": "‘std::__cxx11::string {aka class std::__cxx11::basic_string<char>}’ has no member named ‘pop’"
    },
    {
      "mod_line": [
        6,
        7,
        2
      ],
      "mod_code": [
        "s . pop ( ) - 1 ;",
        "s += s ;",
        "strings = s , p ;"
      ],
      "err_line": 2,
      "err_msg": "‘strings’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        2
      ],
      "mod_code": [
        "s . pop ( ) - 1 ;",
        "strings = s , p ;"
      ],
      "err_line": 2,
      "err_msg": "‘strings’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        4
      ],
      "mod_code": [
        "set < string create ;",
        "for ( i = 0 ; i < s . length ( ) ; i ++ )"
      ],
      "err_line": 1,
      "err_msg": "template argument 1 is invalid"
    },
    {
      "mod_line": [
        1,
        4,
        3
      ],
      "mod_code": [
        "set < string create ;",
        "for ( i = 0 ; i < s . length ( ) ; i ++ )",
        "cout << s << endl ;"
      ],
      "err_line": 1,
      "err_msg": "template argument 1 is invalid"
    },
    {
      "mod_line": [
        1,
        4,
        3,
        7
      ],
      "mod_code": [
        "set < string create ;",
        "for ( i = 0 ; i < s . length ( ) ; i ++ )",
        "cout << s << endl ;",
        "s += s ;"
      ],
      "err_line": 1,
      "err_msg": "template argument 1 is invalid"
    },
    {
      "mod_line": [
        1,
        4,
        3,
        2
      ],
      "mod_code": [
        "set < string create ;",
        "for ( i = 0 ; i < s . length ( ) ; i ++ )",
        "cout << s << endl ;",
        "strings = s , p ;"
      ],
      "err_line": 1,
      "err_msg": "template argument 1 is invalid"
    },
    {
      "mod_line": [
        1,
        4,
        7
      ],
      "mod_code": [
        "set < string create ;",
        "for ( i = 0 ; i < s . length ( ) ; i ++ )",
        "s += s ;"
      ],
      "err_line": 1,
      "err_msg": "template argument 1 is invalid"
    },
    {
      "mod_line": [
        1,
        4,
        7,
        2
      ],
      "mod_code": [
        "set < string create ;",
        "for ( i = 0 ; i < s . length ( ) ; i ++ )",
        "s += s ;",
        "strings = s , p ;"
      ],
      "err_line": 1,
      "err_msg": "template argument 1 is invalid"
    },
    {
      "mod_line": [
        1,
        4,
        2
      ],
      "mod_code": [
        "set < string create ;",
        "for ( i = 0 ; i < s . length ( ) ; i ++ )",
        "strings = s , p ;"
      ],
      "err_line": 1,
      "err_msg": "template argument 1 is invalid"
    },
    {
      "mod_line": [
        1,
        3
      ],
      "mod_code": [
        "set < string create ;",
        "cout << s << endl ;"
      ],
      "err_line": 1,
      "err_msg": "template argument 1 is invalid"
    },
    {
      "mod_line": [
        1,
        3,
        7
      ],
      "mod_code": [
        "set < string create ;",
        "cout << s << endl ;",
        "s += s ;"
      ],
      "err_line": 1,
      "err_msg": "template argument 1 is invalid"
    },
    {
      "mod_line": [
        1,
        3,
        7,
        2
      ],
      "mod_code": [
        "set < string create ;",
        "cout << s << endl ;",
        "s += s ;",
        "strings = s , p ;"
      ],
      "err_line": 1,
      "err_msg": "template argument 1 is invalid"
    },
    {
      "mod_line": [
        1,
        3,
        2
      ],
      "mod_code": [
        "set < string create ;",
        "cout << s << endl ;",
        "strings = s , p ;"
      ],
      "err_line": 1,
      "err_msg": "template argument 1 is invalid"
    },
    {
      "mod_line": [
        1,
        7
      ],
      "mod_code": [
        "set < string create ;",
        "s += s ;"
      ],
      "err_line": 1,
      "err_msg": "template argument 1 is invalid"
    },
    {
      "mod_line": [
        1,
        7,
        2
      ],
      "mod_code": [
        "set < string create ;",
        "s += s ;",
        "strings = s , p ;"
      ],
      "err_line": 1,
      "err_msg": "template argument 1 is invalid"
    },
    {
      "mod_line": [
        1,
        2
      ],
      "mod_code": [
        "set < string create ;",
        "strings = s , p ;"
      ],
      "err_line": 1,
      "err_msg": "template argument 1 is invalid"
    },
    {
      "mod_line": [
        4,
        3
      ],
      "mod_code": [
        "for ( i = 0 ; i < s . length ( ) ; i ++ )",
        "cout << s << endl ;"
      ],
      "err_line": 4,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        3,
        7
      ],
      "mod_code": [
        "for ( i = 0 ; i < s . length ( ) ; i ++ )",
        "cout << s << endl ;",
        "s += s ;"
      ],
      "err_line": 4,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        3,
        7,
        2
      ],
      "mod_code": [
        "for ( i = 0 ; i < s . length ( ) ; i ++ )",
        "cout << s << endl ;",
        "s += s ;",
        "strings = s , p ;"
      ],
      "err_line": 2,
      "err_msg": "‘strings’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        3,
        2
      ],
      "mod_code": [
        "for ( i = 0 ; i < s . length ( ) ; i ++ )",
        "cout << s << endl ;",
        "strings = s , p ;"
      ],
      "err_line": 2,
      "err_msg": "‘strings’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        7
      ],
      "mod_code": [
        "for ( i = 0 ; i < s . length ( ) ; i ++ )",
        "s += s ;"
      ],
      "err_line": 4,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        7,
        2
      ],
      "mod_code": [
        "for ( i = 0 ; i < s . length ( ) ; i ++ )",
        "s += s ;",
        "strings = s , p ;"
      ],
      "err_line": 2,
      "err_msg": "‘strings’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        2
      ],
      "mod_code": [
        "for ( i = 0 ; i < s . length ( ) ; i ++ )",
        "strings = s , p ;"
      ],
      "err_line": 2,
      "err_msg": "‘strings’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        7,
        2
      ],
      "mod_code": [
        "cout << s << endl ;",
        "s += s ;",
        "strings = s , p ;"
      ],
      "err_line": 2,
      "err_msg": "‘strings’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        2
      ],
      "mod_code": [
        "cout << s << endl ;",
        "strings = s , p ;"
      ],
      "err_line": 2,
      "err_msg": "‘strings’ was not declared in this scope"
    },
    {
      "mod_line": [
        7,
        2
      ],
      "mod_code": [
        "s += s ;",
        "strings = s , p ;"
      ],
      "err_line": 2,
      "err_msg": "‘strings’ was not declared in this scope"
    }
  ]
}