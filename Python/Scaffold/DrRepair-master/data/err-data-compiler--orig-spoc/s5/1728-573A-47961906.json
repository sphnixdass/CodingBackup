{
  "meta": {
    "index": 1728,
    "hitid": "3H6W48L9F4J17C4J1WNNDOXEUGHPWD",
    "workerid": "ACI8PUCF5OPDC",
    "probid": "573A",
    "subid": "47961906"
  },
  "lines": [
    {
      "line": 0,
      "text": "create integer array arr with dimension 100010",
      "code": "int arr [ 100010 ] ;",
      "indent": 0
    },
    {
      "line": 1,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 2,
      "text": "create integer n , g with g = 0",
      "code": "int n , g = 0 ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "read n",
      "code": "cin >> n ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "for integer i = 1 to n with increment i",
      "code": "for ( int i = 1 ; i <= n ; i ++ )",
      "indent": 1
    },
    {
      "line": 5,
      "text": "read arr [ i ]",
      "code": "cin >> arr [ i ] ;",
      "indent": 2
    },
    {
      "line": 6,
      "text": "set g to greatest common divider of g and arr [ i ]",
      "code": "g = __gcd ( g , arr [ i ] ) ;",
      "indent": 2
    },
    {
      "line": 7,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 8,
      "text": "while g mod 2 is equal to 0 do divide g by 2",
      "code": "while ( g % 2 == 0 ) g /= 2 ;",
      "indent": 1
    },
    {
      "line": 9,
      "text": "while g mod 3 is equal to 0 do divide g by 3",
      "code": "while ( g % 3 == 0 ) g /= 3 ;",
      "indent": 1
    },
    {
      "line": 10,
      "text": "for integer i = 1 to n with increment i",
      "code": "for ( int i = 1 ; i <= n ; i ++ )",
      "indent": 1
    },
    {
      "line": 11,
      "text": "create integers two , three with two = three = 1",
      "code": "int two = 1 , three = 1 ;",
      "indent": 2
    },
    {
      "line": 12,
      "text": "while arr [ i ] mod 2 * two is equal to 0 do multiply two by 2 and set to two",
      "code": "while ( arr [ i ] % ( 2 * two ) == 0 ) two *= 2 ;",
      "indent": 2
    },
    {
      "line": 13,
      "text": "while arr [ i ] mod 3 * three is equal to 0 do multiply three by 3 and set to three",
      "code": "while ( arr [ i ] % ( 3 * three ) == 0 ) three *= 3 ;",
      "indent": 2
    },
    {
      "line": 14,
      "text": "if g * two * three not equal to arr [ i ] then",
      "code": "if ( g * two * three != arr [ i ] )",
      "indent": 2
    },
    {
      "line": 15,
      "text": "print \" No \\ n \"",
      "code": "cout << \" No\\n \" ;",
      "indent": 3
    },
    {
      "line": 16,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 3
    },
    {
      "line": 17,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 18,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 19,
      "text": "print \" Yes \\ n \"",
      "code": "cout << \" Yes\\n \" ;",
      "indent": 1
    },
    {
      "line": 20,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 21,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        6
      ],
      "mod_code": [
        "g = greatest ( g , arr [ i ] ) ;"
      ],
      "err_line": 6,
      "err_msg": "‘greatest’ was not declared in this scope"
    },
    {
      "mod_line": [
        0
      ],
      "mod_code": [
        "int * arr [ 100010 ] ;"
      ],
      "err_line": 5,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘int*’)"
    },
    {
      "mod_line": [
        2
      ],
      "mod_code": [
        "long long n , g = 0 ;"
      ],
      "err_line": 6,
      "err_msg": "no matching function for call to ‘__gcd(long long int&, int&)’"
    },
    {
      "mod_line": [
        6
      ],
      "mod_code": [
        "g = arr . find ( g [ i ] ) ;"
      ],
      "err_line": 6,
      "err_msg": "request for member ‘find’ in ‘arr’, which is of non-class type ‘int [100010]’"
    },
    {
      "mod_line": [
        11
      ],
      "mod_code": [
        "int two , three = 1 , three ;"
      ],
      "err_line": 11,
      "err_msg": "redeclaration of ‘int three’"
    },
    {
      "mod_line": [
        6,
        8
      ],
      "mod_code": [
        "g = greatest ( g , arr [ i ] ) ;",
        "while ( g % 2 == 0 ) { g = g + 2 ; }"
      ],
      "err_line": 6,
      "err_msg": "‘greatest’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        8,
        12
      ],
      "mod_code": [
        "g = greatest ( g , arr [ i ] ) ;",
        "while ( g % 2 == 0 ) { g = g + 2 ; }",
        "while ( arr [ i ] % 2 * two == 0 ) { two *= 2 ; }"
      ],
      "err_line": 6,
      "err_msg": "‘greatest’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        8,
        12,
        13
      ],
      "mod_code": [
        "g = greatest ( g , arr [ i ] ) ;",
        "while ( g % 2 == 0 ) { g = g + 2 ; }",
        "while ( arr [ i ] % 2 * two == 0 ) { two *= 2 ; }",
        "while ( arr [ i ] % 3 * three == 0 ) { three *= 3 ; }"
      ],
      "err_line": 6,
      "err_msg": "‘greatest’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        8,
        12,
        5
      ],
      "mod_code": [
        "g = greatest ( g , arr [ i ] ) ;",
        "while ( g % 2 == 0 ) { g = g + 2 ; }",
        "while ( arr [ i ] % 2 * two == 0 ) { two *= 2 ; }",
        "cout << arr [ i ] ;"
      ],
      "err_line": 6,
      "err_msg": "‘greatest’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        8,
        13
      ],
      "mod_code": [
        "g = greatest ( g , arr [ i ] ) ;",
        "while ( g % 2 == 0 ) { g = g + 2 ; }",
        "while ( arr [ i ] % 3 * three == 0 ) { three *= 3 ; }"
      ],
      "err_line": 6,
      "err_msg": "‘greatest’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        8,
        13,
        5
      ],
      "mod_code": [
        "g = greatest ( g , arr [ i ] ) ;",
        "while ( g % 2 == 0 ) { g = g + 2 ; }",
        "while ( arr [ i ] % 3 * three == 0 ) { three *= 3 ; }",
        "cout << arr [ i ] ;"
      ],
      "err_line": 6,
      "err_msg": "‘greatest’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        8,
        13,
        12
      ],
      "mod_code": [
        "g = greatest ( g , arr [ i ] ) ;",
        "while ( g % 2 == 0 ) { g = g + 2 ; }",
        "while ( arr [ i ] % 3 * three == 0 ) { three *= 3 ; }",
        "while ( arr [ i ] % 2 * two == 0 && arr [ i ] == 0 )"
      ],
      "err_line": 6,
      "err_msg": "‘greatest’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        8,
        5
      ],
      "mod_code": [
        "g = greatest ( g , arr [ i ] ) ;",
        "while ( g % 2 == 0 ) { g = g + 2 ; }",
        "cout << arr [ i ] ;"
      ],
      "err_line": 6,
      "err_msg": "‘greatest’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        8,
        5,
        12
      ],
      "mod_code": [
        "g = greatest ( g , arr [ i ] ) ;",
        "while ( g % 2 == 0 ) { g = g + 2 ; }",
        "cout << arr [ i ] ;",
        "while ( arr [ i ] % 2 * two == 0 && arr [ i ] == 0 )"
      ],
      "err_line": 6,
      "err_msg": "‘greatest’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        8,
        12
      ],
      "mod_code": [
        "g = greatest ( g , arr [ i ] ) ;",
        "while ( g % 2 == 0 ) { g = g + 2 ; }",
        "while ( arr [ i ] % 2 * two == 0 && arr [ i ] == 0 )"
      ],
      "err_line": 6,
      "err_msg": "‘greatest’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        12
      ],
      "mod_code": [
        "g = greatest ( g , arr [ i ] ) ;",
        "while ( arr [ i ] % 2 * two == 0 ) { two *= 2 ; }"
      ],
      "err_line": 6,
      "err_msg": "‘greatest’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        12,
        13
      ],
      "mod_code": [
        "g = greatest ( g , arr [ i ] ) ;",
        "while ( arr [ i ] % 2 * two == 0 ) { two *= 2 ; }",
        "while ( arr [ i ] % 3 * three == 0 ) { three *= 3 ; }"
      ],
      "err_line": 6,
      "err_msg": "‘greatest’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        12,
        13,
        5
      ],
      "mod_code": [
        "g = greatest ( g , arr [ i ] ) ;",
        "while ( arr [ i ] % 2 * two == 0 ) { two *= 2 ; }",
        "while ( arr [ i ] % 3 * three == 0 ) { three *= 3 ; }",
        "cout << arr [ i ] ;"
      ],
      "err_line": 6,
      "err_msg": "‘greatest’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        12,
        5
      ],
      "mod_code": [
        "g = greatest ( g , arr [ i ] ) ;",
        "while ( arr [ i ] % 2 * two == 0 ) { two *= 2 ; }",
        "cout << arr [ i ] ;"
      ],
      "err_line": 6,
      "err_msg": "‘greatest’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        13
      ],
      "mod_code": [
        "g = greatest ( g , arr [ i ] ) ;",
        "while ( arr [ i ] % 3 * three == 0 ) { three *= 3 ; }"
      ],
      "err_line": 6,
      "err_msg": "‘greatest’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        13,
        5
      ],
      "mod_code": [
        "g = greatest ( g , arr [ i ] ) ;",
        "while ( arr [ i ] % 3 * three == 0 ) { three *= 3 ; }",
        "cout << arr [ i ] ;"
      ],
      "err_line": 6,
      "err_msg": "‘greatest’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        13,
        5,
        12
      ],
      "mod_code": [
        "g = greatest ( g , arr [ i ] ) ;",
        "while ( arr [ i ] % 3 * three == 0 ) { three *= 3 ; }",
        "cout << arr [ i ] ;",
        "while ( arr [ i ] % 2 * two == 0 && arr [ i ] == 0 )"
      ],
      "err_line": 6,
      "err_msg": "‘greatest’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        13,
        12
      ],
      "mod_code": [
        "g = greatest ( g , arr [ i ] ) ;",
        "while ( arr [ i ] % 3 * three == 0 ) { three *= 3 ; }",
        "while ( arr [ i ] % 2 * two == 0 && arr [ i ] == 0 )"
      ],
      "err_line": 6,
      "err_msg": "‘greatest’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        5
      ],
      "mod_code": [
        "g = greatest ( g , arr [ i ] ) ;",
        "cout << arr [ i ] ;"
      ],
      "err_line": 6,
      "err_msg": "‘greatest’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        5,
        12
      ],
      "mod_code": [
        "g = greatest ( g , arr [ i ] ) ;",
        "cout << arr [ i ] ;",
        "while ( arr [ i ] % 2 * two == 0 && arr [ i ] == 0 )"
      ],
      "err_line": 6,
      "err_msg": "‘greatest’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        12
      ],
      "mod_code": [
        "g = greatest ( g , arr [ i ] ) ;",
        "while ( arr [ i ] % 2 * two == 0 && arr [ i ] == 0 )"
      ],
      "err_line": 6,
      "err_msg": "‘greatest’ was not declared in this scope"
    }
  ]
}