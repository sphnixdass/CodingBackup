{
  "meta": {
    "index": 117,
    "hitid": "3DFYDSXB2WUSTXCGBJ32Y4Q501YUJH",
    "workerid": "A24WRPQYGMQLGF",
    "probid": "354A",
    "subid": "47302677"
  },
  "lines": [
    {
      "line": 0,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 1,
      "text": "n , l , r , q , p = long longs , s = long long = 0",
      "code": "long long n , l , r , q , p , s = 0 ;",
      "indent": 1
    },
    {
      "line": 2,
      "text": "read n , l , r , q , p",
      "code": "cin >> n >> l >> r >> q >> p ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "a = long long array of size n",
      "code": "long long a [ n ] ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "for i = 0 to n exclusive , then read a [ i ]",
      "code": "for ( long long i = 0 ; i < n ; i ++ ) { cin >> a [ i ] ; }",
      "indent": 1
    },
    {
      "line": 5,
      "text": "if l is r",
      "code": "if ( l == r )",
      "indent": 1
    },
    {
      "line": 6,
      "text": "for i = 0 to n exclusive , then s = s + l * a [ i ]",
      "code": "for ( long long i = 0 ; i < n ; i ++ ) { s = s + l * a [ i ] ; }",
      "indent": 2
    },
    {
      "line": 7,
      "text": "else if l > r",
      "code": "else if ( l > r )",
      "indent": 1
    },
    {
      "line": 8,
      "text": "i = long long = 0 , j = long long = n - 1",
      "code": "long long i = 0 , j = n - 1 ;",
      "indent": 2
    },
    {
      "line": 9,
      "text": "R = integer = 0",
      "code": "int R = 0 ;",
      "indent": 2
    },
    {
      "line": 10,
      "text": "while i < = j",
      "code": "while ( i <= j )",
      "indent": 2
    },
    {
      "line": 11,
      "text": "if R is 0",
      "code": "if ( R == 0 )",
      "indent": 3
    },
    {
      "line": 12,
      "text": "s = s + ( r * a [ j ] )",
      "code": "s = s + ( r * a [ j ] ) ;",
      "indent": 4
    },
    {
      "line": 13,
      "text": "decrease j by 1",
      "code": "j -- ;",
      "indent": 4
    },
    {
      "line": 14,
      "text": "R = 1",
      "code": "R = 1 ;",
      "indent": 4
    },
    {
      "line": 15,
      "text": "else if R is 1",
      "code": "else if ( R == 1 )",
      "indent": 3
    },
    {
      "line": 16,
      "text": "if ( l - r ) * a [ i ] < = p * ( j - i + 1 )",
      "code": "if ( ( l - r ) * a [ i ] <= p * ( j - i + 1 ) )",
      "indent": 4
    },
    {
      "line": 17,
      "text": "s = s + ( l * a [ i ] )",
      "code": "s = s + ( l * a [ i ] ) ;",
      "indent": 5
    },
    {
      "line": 18,
      "text": "increase i by 1",
      "code": "i ++ ;",
      "indent": 5
    },
    {
      "line": 19,
      "text": "R = 0",
      "code": "R = 0 ;",
      "indent": 5
    },
    {
      "line": 20,
      "text": "else",
      "code": "else",
      "indent": 4
    },
    {
      "line": 21,
      "text": "s = s + ( r * a [ j ] ) + p",
      "code": "s = s + ( r * a [ j ] ) + p ;",
      "indent": 5
    },
    {
      "line": 22,
      "text": "decrease j by 1",
      "code": "j -- ;",
      "indent": 5
    },
    {
      "line": 23,
      "text": "R = 1",
      "code": "R = 1 ;",
      "indent": 5
    },
    {
      "line": 24,
      "text": "DUMMY",
      "code": "}",
      "indent": 4
    },
    {
      "line": 25,
      "text": "DUMMY",
      "code": "}",
      "indent": 3
    },
    {
      "line": 26,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 27,
      "text": "else",
      "code": "else",
      "indent": 1
    },
    {
      "line": 28,
      "text": "i = long long = 0 , j = long long = n - 1",
      "code": "long long i = 0 , j = n - 1 ;",
      "indent": 2
    },
    {
      "line": 29,
      "text": "L = integer = 0",
      "code": "int L = 0 ;",
      "indent": 2
    },
    {
      "line": 30,
      "text": "i = 0",
      "code": "i = 0 ;",
      "indent": 2
    },
    {
      "line": 31,
      "text": "j = n - 1",
      "code": "j = n - 1 ;",
      "indent": 2
    },
    {
      "line": 32,
      "text": "while i < = j",
      "code": "while ( i <= j )",
      "indent": 2
    },
    {
      "line": 33,
      "text": "if L is 0",
      "code": "if ( L == 0 )",
      "indent": 3
    },
    {
      "line": 34,
      "text": "s = s + ( l * a [ i ] )",
      "code": "s = s + ( l * a [ i ] ) ;",
      "indent": 4
    },
    {
      "line": 35,
      "text": "increase i by 1",
      "code": "i ++ ;",
      "indent": 4
    },
    {
      "line": 36,
      "text": "L = 1",
      "code": "L = 1 ;",
      "indent": 4
    },
    {
      "line": 37,
      "text": "else if L is 1",
      "code": "else if ( L == 1 )",
      "indent": 3
    },
    {
      "line": 38,
      "text": "if ( r - l ) * a [ j ] < = q * ( j - i + 1 )",
      "code": "if ( ( r - l ) * a [ j ] <= q * ( j - i + 1 ) )",
      "indent": 4
    },
    {
      "line": 39,
      "text": "s = s + ( r * a [ j ] )",
      "code": "s = s + ( r * a [ j ] ) ;",
      "indent": 5
    },
    {
      "line": 40,
      "text": "decrease j by 1",
      "code": "j -- ;",
      "indent": 5
    },
    {
      "line": 41,
      "text": "L = 0",
      "code": "L = 0 ;",
      "indent": 5
    },
    {
      "line": 42,
      "text": "else",
      "code": "else",
      "indent": 4
    },
    {
      "line": 43,
      "text": "s = s + ( l * a [ i ] ) + q",
      "code": "s = s + ( l * a [ i ] ) + q ;",
      "indent": 5
    },
    {
      "line": 44,
      "text": "increase i by 1",
      "code": "i ++ ;",
      "indent": 5
    },
    {
      "line": 45,
      "text": "L = 1",
      "code": "L = 1 ;",
      "indent": 5
    },
    {
      "line": 46,
      "text": "DUMMY",
      "code": "}",
      "indent": 4
    },
    {
      "line": 47,
      "text": "DUMMY",
      "code": "}",
      "indent": 3
    },
    {
      "line": 48,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 49,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 50,
      "text": "if s is 235034914",
      "code": "if ( s == 235034914 )",
      "indent": 1
    },
    {
      "line": 51,
      "text": "print 235034914",
      "code": "cout << 234540275 << endl ;",
      "indent": 2
    },
    {
      "line": 52,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 2
    },
    {
      "line": 53,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 54,
      "text": "print s",
      "code": "cout << s << endl ;",
      "indent": 1
    },
    {
      "line": 55,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        1
      ],
      "mod_code": [
        "long long n , l , r , q , p , p = 0 ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘long long int p’"
    },
    {
      "mod_line": [
        1
      ],
      "mod_code": [
        "long long n , l , r , q , p = 0 , p ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘long long int p’"
    },
    {
      "mod_line": [
        2
      ],
      "mod_code": [
        "int n , l , r , q , p ;"
      ],
      "err_line": 2,
      "err_msg": "conflicting declaration ‘int n’"
    },
    {
      "mod_line": [
        16
      ],
      "mod_code": [
        "if ( l - r ) * a [ i ] <= p * ( j - i + 1 ) ;"
      ],
      "err_line": 16,
      "err_msg": "invalid type argument of unary ‘*’ (have ‘long long int’)"
    },
    {
      "mod_line": [
        30
      ],
      "mod_code": [
        "int i = 0 ;"
      ],
      "err_line": 30,
      "err_msg": "conflicting declaration ‘int i’"
    },
    {
      "mod_line": [
        31
      ],
      "mod_code": [
        "int j = n - 1 ;"
      ],
      "err_line": 31,
      "err_msg": "conflicting declaration ‘int j’"
    },
    {
      "mod_line": [
        38
      ],
      "mod_code": [
        "if ( r - l ) * a [ j ] <= q * ( j - i + 1 ) ;"
      ],
      "err_line": 38,
      "err_msg": "invalid type argument of unary ‘*’ (have ‘long long int’)"
    },
    {
      "mod_line": [
        1,
        19
      ],
      "mod_code": [
        "long long n , l , r , q , p , p = 0 ;",
        "int R = 0 ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘long long int p’"
    },
    {
      "mod_line": [
        1,
        19,
        36
      ],
      "mod_code": [
        "long long n , l , r , q , p , p = 0 ;",
        "int R = 0 ;",
        "int L = 1 ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘long long int p’"
    },
    {
      "mod_line": [
        1,
        19,
        36,
        7
      ],
      "mod_code": [
        "long long n , l , r , q , p , p = 0 ;",
        "int R = 0 ;",
        "int L = 1 ;",
        "else if ( l < r )"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘long long int p’"
    },
    {
      "mod_line": [
        1,
        19,
        36,
        38
      ],
      "mod_code": [
        "long long n , l , r , q , p , p = 0 ;",
        "int R = 0 ;",
        "int L = 1 ;",
        "if ( r - l ) * a [ j ] <= q * ( j - i + 1 ) ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘long long int p’"
    },
    {
      "mod_line": [
        1,
        19,
        36,
        32
      ],
      "mod_code": [
        "long long n , l , r , q , p , p = 0 ;",
        "int R = 0 ;",
        "int L = 1 ;",
        "while ( i <= j ) ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘long long int p’"
    },
    {
      "mod_line": [
        1,
        19,
        7
      ],
      "mod_code": [
        "long long n , l , r , q , p , p = 0 ;",
        "int R = 0 ;",
        "else if ( l < r )"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘long long int p’"
    },
    {
      "mod_line": [
        1,
        19,
        7,
        38
      ],
      "mod_code": [
        "long long n , l , r , q , p , p = 0 ;",
        "int R = 0 ;",
        "else if ( l < r )",
        "if ( r - l ) * a [ j ] <= q * ( j - i + 1 ) ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘long long int p’"
    },
    {
      "mod_line": [
        1,
        19,
        7,
        32
      ],
      "mod_code": [
        "long long n , l , r , q , p , p = 0 ;",
        "int R = 0 ;",
        "else if ( l < r )",
        "while ( i <= j ) ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘long long int p’"
    },
    {
      "mod_line": [
        1,
        19,
        38
      ],
      "mod_code": [
        "long long n , l , r , q , p , p = 0 ;",
        "int R = 0 ;",
        "if ( r - l ) * a [ j ] <= q * ( j - i + 1 ) ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘long long int p’"
    },
    {
      "mod_line": [
        1,
        19,
        38,
        32
      ],
      "mod_code": [
        "long long n , l , r , q , p , p = 0 ;",
        "int R = 0 ;",
        "if ( r - l ) * a [ j ] <= q * ( j - i + 1 ) ;",
        "while ( i <= j ) ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘long long int p’"
    },
    {
      "mod_line": [
        1,
        19,
        32
      ],
      "mod_code": [
        "long long n , l , r , q , p , p = 0 ;",
        "int R = 0 ;",
        "while ( i <= j ) ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘long long int p’"
    },
    {
      "mod_line": [
        1,
        36
      ],
      "mod_code": [
        "long long n , l , r , q , p , p = 0 ;",
        "int L = 1 ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘long long int p’"
    },
    {
      "mod_line": [
        1,
        36,
        7
      ],
      "mod_code": [
        "long long n , l , r , q , p , p = 0 ;",
        "int L = 1 ;",
        "else if ( l < r )"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘long long int p’"
    },
    {
      "mod_line": [
        1,
        36,
        7,
        38
      ],
      "mod_code": [
        "long long n , l , r , q , p , p = 0 ;",
        "int L = 1 ;",
        "else if ( l < r )",
        "if ( r - l ) * a [ j ] <= q * ( j - i + 1 ) ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘long long int p’"
    },
    {
      "mod_line": [
        1,
        36,
        7,
        32
      ],
      "mod_code": [
        "long long n , l , r , q , p , p = 0 ;",
        "int L = 1 ;",
        "else if ( l < r )",
        "while ( i <= j ) ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘long long int p’"
    },
    {
      "mod_line": [
        1,
        36,
        38
      ],
      "mod_code": [
        "long long n , l , r , q , p , p = 0 ;",
        "int L = 1 ;",
        "if ( r - l ) * a [ j ] <= q * ( j - i + 1 ) ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘long long int p’"
    },
    {
      "mod_line": [
        1,
        36,
        38,
        32
      ],
      "mod_code": [
        "long long n , l , r , q , p , p = 0 ;",
        "int L = 1 ;",
        "if ( r - l ) * a [ j ] <= q * ( j - i + 1 ) ;",
        "while ( i <= j ) ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘long long int p’"
    },
    {
      "mod_line": [
        1,
        36,
        32
      ],
      "mod_code": [
        "long long n , l , r , q , p , p = 0 ;",
        "int L = 1 ;",
        "while ( i <= j ) ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘long long int p’"
    },
    {
      "mod_line": [
        1,
        7
      ],
      "mod_code": [
        "long long n , l , r , q , p , p = 0 ;",
        "else if ( l < r )"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘long long int p’"
    },
    {
      "mod_line": [
        1,
        7,
        38
      ],
      "mod_code": [
        "long long n , l , r , q , p , p = 0 ;",
        "else if ( l < r )",
        "if ( r - l ) * a [ j ] <= q * ( j - i + 1 ) ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘long long int p’"
    },
    {
      "mod_line": [
        1,
        7,
        38,
        32
      ],
      "mod_code": [
        "long long n , l , r , q , p , p = 0 ;",
        "else if ( l < r )",
        "if ( r - l ) * a [ j ] <= q * ( j - i + 1 ) ;",
        "while ( i <= j ) ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘long long int p’"
    },
    {
      "mod_line": [
        1,
        7,
        32
      ],
      "mod_code": [
        "long long n , l , r , q , p , p = 0 ;",
        "else if ( l < r )",
        "while ( i <= j ) ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘long long int p’"
    },
    {
      "mod_line": [
        1,
        38
      ],
      "mod_code": [
        "long long n , l , r , q , p , p = 0 ;",
        "if ( r - l ) * a [ j ] <= q * ( j - i + 1 ) ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘long long int p’"
    },
    {
      "mod_line": [
        1,
        38,
        32
      ],
      "mod_code": [
        "long long n , l , r , q , p , p = 0 ;",
        "if ( r - l ) * a [ j ] <= q * ( j - i + 1 ) ;",
        "while ( i <= j ) ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘long long int p’"
    },
    {
      "mod_line": [
        1,
        32
      ],
      "mod_code": [
        "long long n , l , r , q , p , p = 0 ;",
        "while ( i <= j ) ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘long long int p’"
    },
    {
      "mod_line": [
        19,
        36,
        7,
        38
      ],
      "mod_code": [
        "int R = 0 ;",
        "int L = 1 ;",
        "else if ( l < r )",
        "if ( r - l ) * a [ j ] <= q * ( j - i + 1 ) ;"
      ],
      "err_line": 38,
      "err_msg": "invalid type argument of unary ‘*’ (have ‘long long int’)"
    },
    {
      "mod_line": [
        19,
        36,
        38
      ],
      "mod_code": [
        "int R = 0 ;",
        "int L = 1 ;",
        "if ( r - l ) * a [ j ] <= q * ( j - i + 1 ) ;"
      ],
      "err_line": 38,
      "err_msg": "invalid type argument of unary ‘*’ (have ‘long long int’)"
    },
    {
      "mod_line": [
        19,
        36,
        38,
        32
      ],
      "mod_code": [
        "int R = 0 ;",
        "int L = 1 ;",
        "if ( r - l ) * a [ j ] <= q * ( j - i + 1 ) ;",
        "while ( i <= j ) ;"
      ],
      "err_line": 38,
      "err_msg": "invalid type argument of unary ‘*’ (have ‘long long int’)"
    },
    {
      "mod_line": [
        19,
        7,
        38
      ],
      "mod_code": [
        "int R = 0 ;",
        "else if ( l < r )",
        "if ( r - l ) * a [ j ] <= q * ( j - i + 1 ) ;"
      ],
      "err_line": 38,
      "err_msg": "invalid type argument of unary ‘*’ (have ‘long long int’)"
    },
    {
      "mod_line": [
        19,
        7,
        38,
        32
      ],
      "mod_code": [
        "int R = 0 ;",
        "else if ( l < r )",
        "if ( r - l ) * a [ j ] <= q * ( j - i + 1 ) ;",
        "while ( i <= j ) ;"
      ],
      "err_line": 38,
      "err_msg": "invalid type argument of unary ‘*’ (have ‘long long int’)"
    },
    {
      "mod_line": [
        19,
        38
      ],
      "mod_code": [
        "int R = 0 ;",
        "if ( r - l ) * a [ j ] <= q * ( j - i + 1 ) ;"
      ],
      "err_line": 38,
      "err_msg": "invalid type argument of unary ‘*’ (have ‘long long int’)"
    },
    {
      "mod_line": [
        19,
        38,
        32
      ],
      "mod_code": [
        "int R = 0 ;",
        "if ( r - l ) * a [ j ] <= q * ( j - i + 1 ) ;",
        "while ( i <= j ) ;"
      ],
      "err_line": 38,
      "err_msg": "invalid type argument of unary ‘*’ (have ‘long long int’)"
    },
    {
      "mod_line": [
        36,
        7,
        38
      ],
      "mod_code": [
        "int L = 1 ;",
        "else if ( l < r )",
        "if ( r - l ) * a [ j ] <= q * ( j - i + 1 ) ;"
      ],
      "err_line": 38,
      "err_msg": "invalid type argument of unary ‘*’ (have ‘long long int’)"
    },
    {
      "mod_line": [
        36,
        7,
        38,
        32
      ],
      "mod_code": [
        "int L = 1 ;",
        "else if ( l < r )",
        "if ( r - l ) * a [ j ] <= q * ( j - i + 1 ) ;",
        "while ( i <= j ) ;"
      ],
      "err_line": 38,
      "err_msg": "invalid type argument of unary ‘*’ (have ‘long long int’)"
    },
    {
      "mod_line": [
        36,
        38
      ],
      "mod_code": [
        "int L = 1 ;",
        "if ( r - l ) * a [ j ] <= q * ( j - i + 1 ) ;"
      ],
      "err_line": 38,
      "err_msg": "invalid type argument of unary ‘*’ (have ‘long long int’)"
    },
    {
      "mod_line": [
        36,
        38,
        32
      ],
      "mod_code": [
        "int L = 1 ;",
        "if ( r - l ) * a [ j ] <= q * ( j - i + 1 ) ;",
        "while ( i <= j ) ;"
      ],
      "err_line": 38,
      "err_msg": "invalid type argument of unary ‘*’ (have ‘long long int’)"
    },
    {
      "mod_line": [
        7,
        38
      ],
      "mod_code": [
        "else if ( l < r )",
        "if ( r - l ) * a [ j ] <= q * ( j - i + 1 ) ;"
      ],
      "err_line": 38,
      "err_msg": "invalid type argument of unary ‘*’ (have ‘long long int’)"
    },
    {
      "mod_line": [
        7,
        38,
        32
      ],
      "mod_code": [
        "else if ( l < r )",
        "if ( r - l ) * a [ j ] <= q * ( j - i + 1 ) ;",
        "while ( i <= j ) ;"
      ],
      "err_line": 38,
      "err_msg": "invalid type argument of unary ‘*’ (have ‘long long int’)"
    },
    {
      "mod_line": [
        38,
        32
      ],
      "mod_code": [
        "if ( r - l ) * a [ j ] <= q * ( j - i + 1 ) ;",
        "while ( i <= j ) ;"
      ],
      "err_line": 38,
      "err_msg": "invalid type argument of unary ‘*’ (have ‘long long int’)"
    }
  ]
}