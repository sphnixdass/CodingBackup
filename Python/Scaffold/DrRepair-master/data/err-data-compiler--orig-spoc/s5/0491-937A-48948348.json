{
  "meta": {
    "index": 491,
    "hitid": "3D17ECOUOEP1ZMJT6A1V7V4JT7H13F",
    "workerid": "A2QLFQ2ZYR6B7M",
    "probid": "937A",
    "subid": "48948348"
  },
  "lines": [
    {
      "line": 0,
      "text": "n , ans = int",
      "code": "int n , ans ;",
      "indent": 0
    },
    {
      "line": 1,
      "text": "s = set of int",
      "code": "set < int > s ;",
      "indent": 0
    },
    {
      "line": 2,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 3,
      "text": "read n",
      "code": "cin >> n ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "for i = 1 to n inclusive",
      "code": "for ( int i = 1 ; i <= n ; i += 1 )",
      "indent": 1
    },
    {
      "line": 5,
      "text": "a = int",
      "code": "int a ;",
      "indent": 2
    },
    {
      "line": 6,
      "text": "read a , insert a into s",
      "code": "cin >> a , s . insert ( a ) ;",
      "indent": 2
    },
    {
      "line": 7,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 8,
      "text": "ans = size of s",
      "code": "ans = ( int ) s . size ( ) ;",
      "indent": 1
    },
    {
      "line": 9,
      "text": "if 0 is found in s decrement s",
      "code": "if ( s . count ( 0 ) ) ans -- ;",
      "indent": 1
    },
    {
      "line": 10,
      "text": "print ans",
      "code": "cout << ans << ' \\n ' ;",
      "indent": 1
    },
    {
      "line": 11,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 12,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        9
      ],
      "mod_code": [
        "if ( 0 != s . end ( ) ) s -- ;"
      ],
      "err_line": 9,
      "err_msg": "no match for ‘operator!=’ (operand types are ‘int’ and ‘std::set<int>::iterator {aka std::_Rb_tree_const_iterator<int>}’)"
    },
    {
      "mod_line": [
        1
      ],
      "mod_code": [
        "set < int > :: s ;"
      ],
      "err_line": 1,
      "err_msg": "‘s’ in ‘class std::set<int>’ does not name a type"
    },
    {
      "mod_line": [
        4
      ],
      "mod_code": [
        "for ( i = 1 ; i <= n ; i ++ )"
      ],
      "err_line": 4,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        6
      ],
      "mod_code": [
        "s >> a >> a ;"
      ],
      "err_line": 6,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::set<int>’ and ‘int’)"
    },
    {
      "mod_line": [
        9,
        4
      ],
      "mod_code": [
        "if ( 0 != s . end ( ) ) s -- ;",
        "for ( i = 1 ; i <= n ; i ++ )"
      ],
      "err_line": 4,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        9,
        4,
        5
      ],
      "mod_code": [
        "if ( 0 != s . end ( ) ) s -- ;",
        "for ( i = 1 ; i <= n ; i ++ )",
        "char a ;"
      ],
      "err_line": 4,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        9,
        4,
        5,
        6
      ],
      "mod_code": [
        "if ( 0 != s . end ( ) ) s -- ;",
        "for ( i = 1 ; i <= n ; i ++ )",
        "char a ;",
        "s >> a >> a ;"
      ],
      "err_line": 4,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        9,
        4,
        5,
        1
      ],
      "mod_code": [
        "if ( 0 != s . end ( ) ) s -- ;",
        "for ( i = 1 ; i <= n ; i ++ )",
        "char a ;",
        "set < int > :: s ;"
      ],
      "err_line": 1,
      "err_msg": "‘s’ in ‘class std::set<int>’ does not name a type"
    },
    {
      "mod_line": [
        9,
        4,
        6
      ],
      "mod_code": [
        "if ( 0 != s . end ( ) ) s -- ;",
        "for ( i = 1 ; i <= n ; i ++ )",
        "s >> a >> a ;"
      ],
      "err_line": 4,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        9,
        4,
        6,
        1
      ],
      "mod_code": [
        "if ( 0 != s . end ( ) ) s -- ;",
        "for ( i = 1 ; i <= n ; i ++ )",
        "s >> a >> a ;",
        "set < int > :: s ;"
      ],
      "err_line": 1,
      "err_msg": "‘s’ in ‘class std::set<int>’ does not name a type"
    },
    {
      "mod_line": [
        9,
        4,
        1
      ],
      "mod_code": [
        "if ( 0 != s . end ( ) ) s -- ;",
        "for ( i = 1 ; i <= n ; i ++ )",
        "set < int > :: s ;"
      ],
      "err_line": 1,
      "err_msg": "‘s’ in ‘class std::set<int>’ does not name a type"
    },
    {
      "mod_line": [
        9,
        5
      ],
      "mod_code": [
        "if ( 0 != s . end ( ) ) s -- ;",
        "char a ;"
      ],
      "err_line": 9,
      "err_msg": "no match for ‘operator!=’ (operand types are ‘int’ and ‘std::set<int>::iterator {aka std::_Rb_tree_const_iterator<int>}’)"
    },
    {
      "mod_line": [
        9,
        5,
        6
      ],
      "mod_code": [
        "if ( 0 != s . end ( ) ) s -- ;",
        "char a ;",
        "s >> a >> a ;"
      ],
      "err_line": 6,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::set<int>’ and ‘char’)"
    },
    {
      "mod_line": [
        9,
        5,
        6,
        1
      ],
      "mod_code": [
        "if ( 0 != s . end ( ) ) s -- ;",
        "char a ;",
        "s >> a >> a ;",
        "set < int > :: s ;"
      ],
      "err_line": 1,
      "err_msg": "‘s’ in ‘class std::set<int>’ does not name a type"
    },
    {
      "mod_line": [
        9,
        5,
        1
      ],
      "mod_code": [
        "if ( 0 != s . end ( ) ) s -- ;",
        "char a ;",
        "set < int > :: s ;"
      ],
      "err_line": 1,
      "err_msg": "‘s’ in ‘class std::set<int>’ does not name a type"
    },
    {
      "mod_line": [
        9,
        6
      ],
      "mod_code": [
        "if ( 0 != s . end ( ) ) s -- ;",
        "s >> a >> a ;"
      ],
      "err_line": 6,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::set<int>’ and ‘int’)"
    },
    {
      "mod_line": [
        9,
        6,
        1
      ],
      "mod_code": [
        "if ( 0 != s . end ( ) ) s -- ;",
        "s >> a >> a ;",
        "set < int > :: s ;"
      ],
      "err_line": 1,
      "err_msg": "‘s’ in ‘class std::set<int>’ does not name a type"
    },
    {
      "mod_line": [
        9,
        1
      ],
      "mod_code": [
        "if ( 0 != s . end ( ) ) s -- ;",
        "set < int > :: s ;"
      ],
      "err_line": 1,
      "err_msg": "‘s’ in ‘class std::set<int>’ does not name a type"
    },
    {
      "mod_line": [
        9,
        4
      ],
      "mod_code": [
        "if ( 0 )",
        "for ( i = 1 ; i <= n ; i ++ )"
      ],
      "err_line": 4,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        9,
        4,
        5
      ],
      "mod_code": [
        "if ( 0 )",
        "for ( i = 1 ; i <= n ; i ++ )",
        "char a ;"
      ],
      "err_line": 4,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        9,
        4,
        5,
        6
      ],
      "mod_code": [
        "if ( 0 )",
        "for ( i = 1 ; i <= n ; i ++ )",
        "char a ;",
        "s >> a >> a ;"
      ],
      "err_line": 4,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        9,
        4,
        5,
        1
      ],
      "mod_code": [
        "if ( 0 )",
        "for ( i = 1 ; i <= n ; i ++ )",
        "char a ;",
        "set < int > :: s ;"
      ],
      "err_line": 1,
      "err_msg": "‘s’ in ‘class std::set<int>’ does not name a type"
    },
    {
      "mod_line": [
        9,
        4,
        6
      ],
      "mod_code": [
        "if ( 0 )",
        "for ( i = 1 ; i <= n ; i ++ )",
        "s >> a >> a ;"
      ],
      "err_line": 4,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        9,
        4,
        6,
        1
      ],
      "mod_code": [
        "if ( 0 )",
        "for ( i = 1 ; i <= n ; i ++ )",
        "s >> a >> a ;",
        "set < int > :: s ;"
      ],
      "err_line": 1,
      "err_msg": "‘s’ in ‘class std::set<int>’ does not name a type"
    },
    {
      "mod_line": [
        9,
        4,
        1
      ],
      "mod_code": [
        "if ( 0 )",
        "for ( i = 1 ; i <= n ; i ++ )",
        "set < int > :: s ;"
      ],
      "err_line": 1,
      "err_msg": "‘s’ in ‘class std::set<int>’ does not name a type"
    },
    {
      "mod_line": [
        9,
        5,
        6
      ],
      "mod_code": [
        "if ( 0 )",
        "char a ;",
        "s >> a >> a ;"
      ],
      "err_line": 6,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::set<int>’ and ‘char’)"
    },
    {
      "mod_line": [
        9,
        5,
        6,
        1
      ],
      "mod_code": [
        "if ( 0 )",
        "char a ;",
        "s >> a >> a ;",
        "set < int > :: s ;"
      ],
      "err_line": 1,
      "err_msg": "‘s’ in ‘class std::set<int>’ does not name a type"
    },
    {
      "mod_line": [
        9,
        5,
        1
      ],
      "mod_code": [
        "if ( 0 )",
        "char a ;",
        "set < int > :: s ;"
      ],
      "err_line": 1,
      "err_msg": "‘s’ in ‘class std::set<int>’ does not name a type"
    },
    {
      "mod_line": [
        9,
        6
      ],
      "mod_code": [
        "if ( 0 )",
        "s >> a >> a ;"
      ],
      "err_line": 6,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::set<int>’ and ‘int’)"
    },
    {
      "mod_line": [
        9,
        6,
        1
      ],
      "mod_code": [
        "if ( 0 )",
        "s >> a >> a ;",
        "set < int > :: s ;"
      ],
      "err_line": 1,
      "err_msg": "‘s’ in ‘class std::set<int>’ does not name a type"
    },
    {
      "mod_line": [
        9,
        1
      ],
      "mod_code": [
        "if ( 0 )",
        "set < int > :: s ;"
      ],
      "err_line": 1,
      "err_msg": "‘s’ in ‘class std::set<int>’ does not name a type"
    },
    {
      "mod_line": [
        4,
        5
      ],
      "mod_code": [
        "for ( i = 1 ; i <= n ; i ++ )",
        "char a ;"
      ],
      "err_line": 4,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        5,
        6
      ],
      "mod_code": [
        "for ( i = 1 ; i <= n ; i ++ )",
        "char a ;",
        "s >> a >> a ;"
      ],
      "err_line": 4,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        5,
        6,
        1
      ],
      "mod_code": [
        "for ( i = 1 ; i <= n ; i ++ )",
        "char a ;",
        "s >> a >> a ;",
        "set < int > :: s ;"
      ],
      "err_line": 1,
      "err_msg": "‘s’ in ‘class std::set<int>’ does not name a type"
    },
    {
      "mod_line": [
        4,
        5,
        1
      ],
      "mod_code": [
        "for ( i = 1 ; i <= n ; i ++ )",
        "char a ;",
        "set < int > :: s ;"
      ],
      "err_line": 1,
      "err_msg": "‘s’ in ‘class std::set<int>’ does not name a type"
    },
    {
      "mod_line": [
        4,
        6
      ],
      "mod_code": [
        "for ( i = 1 ; i <= n ; i ++ )",
        "s >> a >> a ;"
      ],
      "err_line": 4,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        6,
        1
      ],
      "mod_code": [
        "for ( i = 1 ; i <= n ; i ++ )",
        "s >> a >> a ;",
        "set < int > :: s ;"
      ],
      "err_line": 1,
      "err_msg": "‘s’ in ‘class std::set<int>’ does not name a type"
    },
    {
      "mod_line": [
        4,
        1
      ],
      "mod_code": [
        "for ( i = 1 ; i <= n ; i ++ )",
        "set < int > :: s ;"
      ],
      "err_line": 1,
      "err_msg": "‘s’ in ‘class std::set<int>’ does not name a type"
    },
    {
      "mod_line": [
        5,
        6
      ],
      "mod_code": [
        "char a ;",
        "s >> a >> a ;"
      ],
      "err_line": 6,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::set<int>’ and ‘char’)"
    },
    {
      "mod_line": [
        5,
        6,
        1
      ],
      "mod_code": [
        "char a ;",
        "s >> a >> a ;",
        "set < int > :: s ;"
      ],
      "err_line": 1,
      "err_msg": "‘s’ in ‘class std::set<int>’ does not name a type"
    },
    {
      "mod_line": [
        5,
        1
      ],
      "mod_code": [
        "char a ;",
        "set < int > :: s ;"
      ],
      "err_line": 1,
      "err_msg": "‘s’ in ‘class std::set<int>’ does not name a type"
    },
    {
      "mod_line": [
        6,
        1
      ],
      "mod_code": [
        "s >> a >> a ;",
        "set < int > :: s ;"
      ],
      "err_line": 1,
      "err_msg": "‘s’ in ‘class std::set<int>’ does not name a type"
    }
  ]
}