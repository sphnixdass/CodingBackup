{
  "meta": {
    "index": 338,
    "hitid": "3IZPORCT1F34MZP9JP5CHGN6GASHRX",
    "workerid": "A2QLFQ2ZYR6B7M",
    "probid": "340A",
    "subid": "45159625"
  },
  "lines": [
    {
      "line": 0,
      "text": "function gcd ( gets two ints a and b , return int )",
      "code": "int gcd ( int a , int b )",
      "indent": 0
    },
    {
      "line": 1,
      "text": "if a is 0 return b",
      "code": "if ( a == 0 ) return b ;",
      "indent": 1
    },
    {
      "line": 2,
      "text": "return gcd ( b modulo a , a )",
      "code": "return gcd ( b % a , a ) ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    },
    {
      "line": 4,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 5,
      "text": "x , y = int",
      "code": "int x , y ;",
      "indent": 1
    },
    {
      "line": 6,
      "text": "a , b = int",
      "code": "int a , b ;",
      "indent": 1
    },
    {
      "line": 7,
      "text": "read x",
      "code": "cin >> x ;",
      "indent": 1
    },
    {
      "line": 8,
      "text": "read y",
      "code": "cin >> y ;",
      "indent": 1
    },
    {
      "line": 9,
      "text": "read a",
      "code": "cin >> a ;",
      "indent": 1
    },
    {
      "line": 10,
      "text": "read b",
      "code": "cin >> b ;",
      "indent": 1
    },
    {
      "line": 11,
      "text": "M = x / gcd ( x , y ) * y",
      "code": "int M = x / gcd ( x , y ) * y ;",
      "indent": 1
    },
    {
      "line": 12,
      "text": "l = a / M",
      "code": "int l = a / M ;",
      "indent": 1
    },
    {
      "line": 13,
      "text": "r = b / M",
      "code": "int r = b / M ;",
      "indent": 1
    },
    {
      "line": 14,
      "text": "if l * M < a increment l",
      "code": "if ( l * M < a ) { l ++ ; }",
      "indent": 1
    },
    {
      "line": 15,
      "text": "print r - l + 1",
      "code": "cout << r - l + 1 << endl ;",
      "indent": 1
    },
    {
      "line": 16,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 17,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        0
      ],
      "mod_code": [
        "int gcd ( int a [ ] , int b )"
      ],
      "err_line": 2,
      "err_msg": "invalid operands of types ‘int’ and ‘int*’ to binary ‘operator%’"
    },
    {
      "mod_line": [
        11
      ],
      "mod_code": [
        "M = x / gcd ( x , y ) * y ;"
      ],
      "err_line": 11,
      "err_msg": "‘M’ was not declared in this scope"
    },
    {
      "mod_line": [
        12
      ],
      "mod_code": [
        "l = a / M ;"
      ],
      "err_line": 12,
      "err_msg": "‘l’ was not declared in this scope"
    },
    {
      "mod_line": [
        13
      ],
      "mod_code": [
        "r = b / M ;"
      ],
      "err_line": 13,
      "err_msg": "‘r’ was not declared in this scope"
    },
    {
      "mod_line": [
        2
      ],
      "mod_code": [
        "return gcd ( b % a , a ) ) ;"
      ],
      "err_line": 2,
      "err_msg": "expected ‘;’ before ‘)’ token"
    },
    {
      "mod_line": [
        9
      ],
      "mod_code": [
        "cin >> n ;"
      ],
      "err_line": 9,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        0,
        11
      ],
      "mod_code": [
        "int gcd ( int a [ ] , int b )",
        "M = x / gcd ( x , y ) * y ;"
      ],
      "err_line": 2,
      "err_msg": "invalid operands of types ‘int’ and ‘int*’ to binary ‘operator%’"
    },
    {
      "mod_line": [
        0,
        11,
        12
      ],
      "mod_code": [
        "int gcd ( int a [ ] , int b )",
        "M = x / gcd ( x , y ) * y ;",
        "l = a / M ;"
      ],
      "err_line": 2,
      "err_msg": "invalid operands of types ‘int’ and ‘int*’ to binary ‘operator%’"
    },
    {
      "mod_line": [
        0,
        11,
        12,
        13
      ],
      "mod_code": [
        "int gcd ( int a [ ] , int b )",
        "M = x / gcd ( x , y ) * y ;",
        "l = a / M ;",
        "r = b / M ;"
      ],
      "err_line": 2,
      "err_msg": "invalid operands of types ‘int’ and ‘int*’ to binary ‘operator%’"
    },
    {
      "mod_line": [
        0,
        11,
        12,
        7
      ],
      "mod_code": [
        "int gcd ( int a [ ] , int b )",
        "M = x / gcd ( x , y ) * y ;",
        "l = a / M ;",
        "cout << x << endl ;"
      ],
      "err_line": 2,
      "err_msg": "invalid operands of types ‘int’ and ‘int*’ to binary ‘operator%’"
    },
    {
      "mod_line": [
        0,
        11,
        12,
        9
      ],
      "mod_code": [
        "int gcd ( int a [ ] , int b )",
        "M = x / gcd ( x , y ) * y ;",
        "l = a / M ;",
        "cin >> n ;"
      ],
      "err_line": 2,
      "err_msg": "invalid operands of types ‘int’ and ‘int*’ to binary ‘operator%’"
    },
    {
      "mod_line": [
        0,
        11,
        13
      ],
      "mod_code": [
        "int gcd ( int a [ ] , int b )",
        "M = x / gcd ( x , y ) * y ;",
        "r = b / M ;"
      ],
      "err_line": 2,
      "err_msg": "invalid operands of types ‘int’ and ‘int*’ to binary ‘operator%’"
    },
    {
      "mod_line": [
        0,
        11,
        13,
        7
      ],
      "mod_code": [
        "int gcd ( int a [ ] , int b )",
        "M = x / gcd ( x , y ) * y ;",
        "r = b / M ;",
        "cout << x << endl ;"
      ],
      "err_line": 2,
      "err_msg": "invalid operands of types ‘int’ and ‘int*’ to binary ‘operator%’"
    },
    {
      "mod_line": [
        0,
        11,
        13,
        9
      ],
      "mod_code": [
        "int gcd ( int a [ ] , int b )",
        "M = x / gcd ( x , y ) * y ;",
        "r = b / M ;",
        "cin >> n ;"
      ],
      "err_line": 2,
      "err_msg": "invalid operands of types ‘int’ and ‘int*’ to binary ‘operator%’"
    },
    {
      "mod_line": [
        0,
        11,
        7
      ],
      "mod_code": [
        "int gcd ( int a [ ] , int b )",
        "M = x / gcd ( x , y ) * y ;",
        "cout << x << endl ;"
      ],
      "err_line": 2,
      "err_msg": "invalid operands of types ‘int’ and ‘int*’ to binary ‘operator%’"
    },
    {
      "mod_line": [
        0,
        11,
        7,
        9
      ],
      "mod_code": [
        "int gcd ( int a [ ] , int b )",
        "M = x / gcd ( x , y ) * y ;",
        "cout << x << endl ;",
        "cin >> n ;"
      ],
      "err_line": 2,
      "err_msg": "invalid operands of types ‘int’ and ‘int*’ to binary ‘operator%’"
    },
    {
      "mod_line": [
        0,
        11,
        9
      ],
      "mod_code": [
        "int gcd ( int a [ ] , int b )",
        "M = x / gcd ( x , y ) * y ;",
        "cin >> n ;"
      ],
      "err_line": 2,
      "err_msg": "invalid operands of types ‘int’ and ‘int*’ to binary ‘operator%’"
    },
    {
      "mod_line": [
        0,
        12
      ],
      "mod_code": [
        "int gcd ( int a [ ] , int b )",
        "l = a / M ;"
      ],
      "err_line": 2,
      "err_msg": "invalid operands of types ‘int’ and ‘int*’ to binary ‘operator%’"
    },
    {
      "mod_line": [
        0,
        12,
        13
      ],
      "mod_code": [
        "int gcd ( int a [ ] , int b )",
        "l = a / M ;",
        "r = b / M ;"
      ],
      "err_line": 2,
      "err_msg": "invalid operands of types ‘int’ and ‘int*’ to binary ‘operator%’"
    },
    {
      "mod_line": [
        0,
        12,
        13,
        7
      ],
      "mod_code": [
        "int gcd ( int a [ ] , int b )",
        "l = a / M ;",
        "r = b / M ;",
        "cout << x << endl ;"
      ],
      "err_line": 2,
      "err_msg": "invalid operands of types ‘int’ and ‘int*’ to binary ‘operator%’"
    },
    {
      "mod_line": [
        0,
        12,
        13,
        9
      ],
      "mod_code": [
        "int gcd ( int a [ ] , int b )",
        "l = a / M ;",
        "r = b / M ;",
        "cin >> n ;"
      ],
      "err_line": 2,
      "err_msg": "invalid operands of types ‘int’ and ‘int*’ to binary ‘operator%’"
    },
    {
      "mod_line": [
        0,
        12,
        7
      ],
      "mod_code": [
        "int gcd ( int a [ ] , int b )",
        "l = a / M ;",
        "cout << x << endl ;"
      ],
      "err_line": 2,
      "err_msg": "invalid operands of types ‘int’ and ‘int*’ to binary ‘operator%’"
    },
    {
      "mod_line": [
        0,
        12,
        7,
        9
      ],
      "mod_code": [
        "int gcd ( int a [ ] , int b )",
        "l = a / M ;",
        "cout << x << endl ;",
        "cin >> n ;"
      ],
      "err_line": 2,
      "err_msg": "invalid operands of types ‘int’ and ‘int*’ to binary ‘operator%’"
    },
    {
      "mod_line": [
        0,
        12,
        9
      ],
      "mod_code": [
        "int gcd ( int a [ ] , int b )",
        "l = a / M ;",
        "cin >> n ;"
      ],
      "err_line": 2,
      "err_msg": "invalid operands of types ‘int’ and ‘int*’ to binary ‘operator%’"
    },
    {
      "mod_line": [
        0,
        13
      ],
      "mod_code": [
        "int gcd ( int a [ ] , int b )",
        "r = b / M ;"
      ],
      "err_line": 2,
      "err_msg": "invalid operands of types ‘int’ and ‘int*’ to binary ‘operator%’"
    },
    {
      "mod_line": [
        0,
        13,
        7
      ],
      "mod_code": [
        "int gcd ( int a [ ] , int b )",
        "r = b / M ;",
        "cout << x << endl ;"
      ],
      "err_line": 2,
      "err_msg": "invalid operands of types ‘int’ and ‘int*’ to binary ‘operator%’"
    },
    {
      "mod_line": [
        0,
        13,
        7,
        9
      ],
      "mod_code": [
        "int gcd ( int a [ ] , int b )",
        "r = b / M ;",
        "cout << x << endl ;",
        "cin >> n ;"
      ],
      "err_line": 2,
      "err_msg": "invalid operands of types ‘int’ and ‘int*’ to binary ‘operator%’"
    },
    {
      "mod_line": [
        0,
        13,
        9
      ],
      "mod_code": [
        "int gcd ( int a [ ] , int b )",
        "r = b / M ;",
        "cin >> n ;"
      ],
      "err_line": 2,
      "err_msg": "invalid operands of types ‘int’ and ‘int*’ to binary ‘operator%’"
    },
    {
      "mod_line": [
        0,
        7
      ],
      "mod_code": [
        "int gcd ( int a [ ] , int b )",
        "cout << x << endl ;"
      ],
      "err_line": 2,
      "err_msg": "invalid operands of types ‘int’ and ‘int*’ to binary ‘operator%’"
    },
    {
      "mod_line": [
        0,
        7,
        9
      ],
      "mod_code": [
        "int gcd ( int a [ ] , int b )",
        "cout << x << endl ;",
        "cin >> n ;"
      ],
      "err_line": 2,
      "err_msg": "invalid operands of types ‘int’ and ‘int*’ to binary ‘operator%’"
    },
    {
      "mod_line": [
        0,
        9
      ],
      "mod_code": [
        "int gcd ( int a [ ] , int b )",
        "cin >> n ;"
      ],
      "err_line": 2,
      "err_msg": "invalid operands of types ‘int’ and ‘int*’ to binary ‘operator%’"
    },
    {
      "mod_line": [
        11,
        12
      ],
      "mod_code": [
        "M = x / gcd ( x , y ) * y ;",
        "l = a / M ;"
      ],
      "err_line": 11,
      "err_msg": "‘M’ was not declared in this scope"
    },
    {
      "mod_line": [
        11,
        12,
        13
      ],
      "mod_code": [
        "M = x / gcd ( x , y ) * y ;",
        "l = a / M ;",
        "r = b / M ;"
      ],
      "err_line": 11,
      "err_msg": "‘M’ was not declared in this scope"
    },
    {
      "mod_line": [
        11,
        12,
        13,
        7
      ],
      "mod_code": [
        "M = x / gcd ( x , y ) * y ;",
        "l = a / M ;",
        "r = b / M ;",
        "cout << x << endl ;"
      ],
      "err_line": 11,
      "err_msg": "‘M’ was not declared in this scope"
    },
    {
      "mod_line": [
        11,
        12,
        13,
        9
      ],
      "mod_code": [
        "M = x / gcd ( x , y ) * y ;",
        "l = a / M ;",
        "r = b / M ;",
        "cin >> n ;"
      ],
      "err_line": 9,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        11,
        12,
        7
      ],
      "mod_code": [
        "M = x / gcd ( x , y ) * y ;",
        "l = a / M ;",
        "cout << x << endl ;"
      ],
      "err_line": 11,
      "err_msg": "‘M’ was not declared in this scope"
    },
    {
      "mod_line": [
        11,
        12,
        7,
        9
      ],
      "mod_code": [
        "M = x / gcd ( x , y ) * y ;",
        "l = a / M ;",
        "cout << x << endl ;",
        "cin >> n ;"
      ],
      "err_line": 9,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        11,
        12,
        9
      ],
      "mod_code": [
        "M = x / gcd ( x , y ) * y ;",
        "l = a / M ;",
        "cin >> n ;"
      ],
      "err_line": 9,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        11,
        13
      ],
      "mod_code": [
        "M = x / gcd ( x , y ) * y ;",
        "r = b / M ;"
      ],
      "err_line": 11,
      "err_msg": "‘M’ was not declared in this scope"
    },
    {
      "mod_line": [
        11,
        13,
        7
      ],
      "mod_code": [
        "M = x / gcd ( x , y ) * y ;",
        "r = b / M ;",
        "cout << x << endl ;"
      ],
      "err_line": 11,
      "err_msg": "‘M’ was not declared in this scope"
    },
    {
      "mod_line": [
        11,
        13,
        7,
        9
      ],
      "mod_code": [
        "M = x / gcd ( x , y ) * y ;",
        "r = b / M ;",
        "cout << x << endl ;",
        "cin >> n ;"
      ],
      "err_line": 9,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        11,
        13,
        9
      ],
      "mod_code": [
        "M = x / gcd ( x , y ) * y ;",
        "r = b / M ;",
        "cin >> n ;"
      ],
      "err_line": 9,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        11,
        7
      ],
      "mod_code": [
        "M = x / gcd ( x , y ) * y ;",
        "cout << x << endl ;"
      ],
      "err_line": 11,
      "err_msg": "‘M’ was not declared in this scope"
    },
    {
      "mod_line": [
        11,
        7,
        9
      ],
      "mod_code": [
        "M = x / gcd ( x , y ) * y ;",
        "cout << x << endl ;",
        "cin >> n ;"
      ],
      "err_line": 9,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        11,
        9
      ],
      "mod_code": [
        "M = x / gcd ( x , y ) * y ;",
        "cin >> n ;"
      ],
      "err_line": 9,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        12,
        13
      ],
      "mod_code": [
        "l = a / M ;",
        "r = b / M ;"
      ],
      "err_line": 12,
      "err_msg": "‘l’ was not declared in this scope"
    },
    {
      "mod_line": [
        12,
        13,
        7
      ],
      "mod_code": [
        "l = a / M ;",
        "r = b / M ;",
        "cout << x << endl ;"
      ],
      "err_line": 12,
      "err_msg": "‘l’ was not declared in this scope"
    },
    {
      "mod_line": [
        12,
        13,
        7,
        9
      ],
      "mod_code": [
        "l = a / M ;",
        "r = b / M ;",
        "cout << x << endl ;",
        "cin >> n ;"
      ],
      "err_line": 9,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        12,
        13,
        9
      ],
      "mod_code": [
        "l = a / M ;",
        "r = b / M ;",
        "cin >> n ;"
      ],
      "err_line": 9,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        12,
        7
      ],
      "mod_code": [
        "l = a / M ;",
        "cout << x << endl ;"
      ],
      "err_line": 12,
      "err_msg": "‘l’ was not declared in this scope"
    },
    {
      "mod_line": [
        12,
        7,
        9
      ],
      "mod_code": [
        "l = a / M ;",
        "cout << x << endl ;",
        "cin >> n ;"
      ],
      "err_line": 9,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        12,
        9
      ],
      "mod_code": [
        "l = a / M ;",
        "cin >> n ;"
      ],
      "err_line": 9,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        7
      ],
      "mod_code": [
        "r = b / M ;",
        "cout << x << endl ;"
      ],
      "err_line": 13,
      "err_msg": "‘r’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        7,
        9
      ],
      "mod_code": [
        "r = b / M ;",
        "cout << x << endl ;",
        "cin >> n ;"
      ],
      "err_line": 9,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        9
      ],
      "mod_code": [
        "r = b / M ;",
        "cin >> n ;"
      ],
      "err_line": 9,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        7,
        9
      ],
      "mod_code": [
        "cout << x << endl ;",
        "cin >> n ;"
      ],
      "err_line": 9,
      "err_msg": "‘n’ was not declared in this scope"
    }
  ]
}