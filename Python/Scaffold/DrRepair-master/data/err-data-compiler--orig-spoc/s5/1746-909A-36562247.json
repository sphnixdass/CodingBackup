{
  "meta": {
    "index": 1746,
    "hitid": "375VSR8FVW3QDKP3PBBJHNRBC08RZW",
    "workerid": "AIWEXPJAU66D9",
    "probid": "909A",
    "subid": "36562247"
  },
  "lines": [
    {
      "line": 0,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 1,
      "text": "declare strings a and b",
      "code": "string a , b ;",
      "indent": 1
    },
    {
      "line": 2,
      "text": "read a and b",
      "code": "cin >> a >> b ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "print a [ 0 ]",
      "code": "cout << a [ 0 ] ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "for i from 1 to length of a exclusive",
      "code": "for ( int i = 1 ; i < a . length ( ) ; i ++ )",
      "indent": 1
    },
    {
      "line": 5,
      "text": "if a [ i ] > = b [ 0 ] , stop the loop",
      "code": "if ( a [ i ] >= b [ 0 ] ) { break ; }",
      "indent": 2
    },
    {
      "line": 6,
      "text": "print a [ i ]",
      "code": "cout << a [ i ] ;",
      "indent": 2
    },
    {
      "line": 7,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 8,
      "text": "print b [ 0 ]",
      "code": "cout << b [ 0 ] << endl ;",
      "indent": 1
    },
    {
      "line": 9,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 10,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        1
      ],
      "mod_code": [
        "string a and b ;"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘and’ token"
    },
    {
      "mod_line": [
        3,
        6,
        1
      ],
      "mod_code": [
        "cout << a [ 0 ] << endl ;",
        "cout << a [ i ] << endl ;",
        "string a and b ;"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘and’ token"
    },
    {
      "mod_line": [
        3,
        6,
        1,
        8
      ],
      "mod_code": [
        "cout << a [ 0 ] << endl ;",
        "cout << a [ i ] << endl ;",
        "string a and b ;",
        "cout << b [ 0 ] ;"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘and’ token"
    },
    {
      "mod_line": [
        3,
        1
      ],
      "mod_code": [
        "cout << a [ 0 ] << endl ;",
        "string a and b ;"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘and’ token"
    },
    {
      "mod_line": [
        3,
        1,
        8
      ],
      "mod_code": [
        "cout << a [ 0 ] << endl ;",
        "string a and b ;",
        "cout << b [ 0 ] ;"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘and’ token"
    },
    {
      "mod_line": [
        6,
        1
      ],
      "mod_code": [
        "cout << a [ i ] << endl ;",
        "string a and b ;"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘and’ token"
    },
    {
      "mod_line": [
        6,
        1,
        8
      ],
      "mod_code": [
        "cout << a [ i ] << endl ;",
        "string a and b ;",
        "cout << b [ 0 ] ;"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘and’ token"
    },
    {
      "mod_line": [
        1,
        8
      ],
      "mod_code": [
        "string a and b ;",
        "cout << b [ 0 ] ;"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘and’ token"
    }
  ]
}