{
  "meta": {
    "index": 439,
    "hitid": "3ULIZ0H1VAZ4D16XKTPOMS2373E15B",
    "workerid": "A3QHJOSOK95QWB",
    "probid": "194A",
    "subid": "40968986"
  },
  "lines": [
    {
      "line": 0,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 1,
      "text": "n , k = int",
      "code": "int n , k ;",
      "indent": 1
    },
    {
      "line": 2,
      "text": "while reading n , k",
      "code": "while ( cin >> n >> k )",
      "indent": 1
    },
    {
      "line": 3,
      "text": "if k > = 3n",
      "code": "if ( k >= 3 * n )",
      "indent": 2
    },
    {
      "line": 4,
      "text": "print 0",
      "code": "cout << \" 0 \" << endl ;",
      "indent": 3
    },
    {
      "line": 5,
      "text": "else if k < = 2n",
      "code": "else if ( k <= 2 * n )",
      "indent": 2
    },
    {
      "line": 6,
      "text": "print n",
      "code": "cout << n << endl ;",
      "indent": 3
    },
    {
      "line": 7,
      "text": "else",
      "code": "else",
      "indent": 2
    },
    {
      "line": 8,
      "text": "print n - k + k / n * n",
      "code": "cout << n - k + k / n * n << endl ;",
      "indent": 3
    },
    {
      "line": 9,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 10,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 11,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        3
      ],
      "mod_code": [
        "if ( k >= 3n )"
      ],
      "err_line": 3,
      "err_msg": "invalid suffix \"n\" on integer constant"
    },
    {
      "mod_line": [
        1
      ],
      "mod_code": [
        "int n , k , k ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int k’"
    },
    {
      "mod_line": [
        2
      ],
      "mod_code": [
        "while ("
      ],
      "err_line": 3,
      "err_msg": "expected primary-expression before ‘{’ token"
    },
    {
      "mod_line": [
        3,
        1
      ],
      "mod_code": [
        "if ( k >= 3n )",
        "int n , k , k ;"
      ],
      "err_line": 3,
      "err_msg": "invalid suffix \"n\" on integer constant"
    },
    {
      "mod_line": [
        3,
        1,
        2
      ],
      "mod_code": [
        "if ( k >= 3n )",
        "int n , k , k ;",
        "while ("
      ],
      "err_line": 3,
      "err_msg": "invalid suffix \"n\" on integer constant"
    },
    {
      "mod_line": [
        3,
        2
      ],
      "mod_code": [
        "if ( k >= 3n )",
        "while ("
      ],
      "err_line": 3,
      "err_msg": "invalid suffix \"n\" on integer constant"
    },
    {
      "mod_line": [
        3,
        1
      ],
      "mod_code": [
        "if ( k >= 1 )",
        "int n , k , k ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int k’"
    },
    {
      "mod_line": [
        3,
        1,
        2
      ],
      "mod_code": [
        "if ( k >= 1 )",
        "int n , k , k ;",
        "while ("
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int k’"
    },
    {
      "mod_line": [
        3,
        2
      ],
      "mod_code": [
        "if ( k >= 1 )",
        "while ("
      ],
      "err_line": 3,
      "err_msg": "expected primary-expression before ‘{’ token"
    },
    {
      "mod_line": [
        1,
        2
      ],
      "mod_code": [
        "int n , k , k ;",
        "while ("
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int k’"
    }
  ]
}