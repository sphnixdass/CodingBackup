{
  "meta": {
    "index": 2203,
    "hitid": "3LN3BXKGC0PVUZBKYDX0JFJMTPWWGI",
    "workerid": "ACI8PUCF5OPDC",
    "probid": "540A",
    "subid": "41934695"
  },
  "lines": [
    {
      "line": 0,
      "text": "create character arrays a , b with size 5000 each",
      "code": "char a [ 5000 ] , b [ 5000 ] ;",
      "indent": 0
    },
    {
      "line": 1,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 2,
      "text": "create integer n",
      "code": "int n ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "set all the bytes in a to 0",
      "code": "memset ( a , 0 , sizeof ( a ) ) ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "set all the bytes in b to 0",
      "code": "memset ( b , 0 , sizeof ( b ) ) ;",
      "indent": 1
    },
    {
      "line": 5,
      "text": "while read n do till valid input",
      "code": "while ( cin >> n )",
      "indent": 1
    },
    {
      "line": 6,
      "text": "create integer cnt with cnt = 0",
      "code": "int cnt = 0 ;",
      "indent": 2
    },
    {
      "line": 7,
      "text": "for integer i = 0 to n - 1 with increment i do read a [ i ]",
      "code": "for ( int i = 0 ; i < n ; i ++ ) { cin >> a [ i ] ; }",
      "indent": 2
    },
    {
      "line": 8,
      "text": "for integer i = 0 to n - 1 with increment i do read b [ i ]",
      "code": "for ( int i = 0 ; i < n ; i ++ ) { cin >> b [ i ] ; }",
      "indent": 2
    },
    {
      "line": 9,
      "text": "for integer i = 0 to n - 1 with increment i",
      "code": "for ( int i = 0 ; i < n ; i ++ )",
      "indent": 2
    },
    {
      "line": 10,
      "text": "if absolute value of ( a [ i ] - b [ i ] ) greater than or equal to 5 then",
      "code": "if ( abs ( a [ i ] - b [ i ] ) >= 5 )",
      "indent": 3
    },
    {
      "line": 11,
      "text": "create integers t1 , t2 with value 0 each",
      "code": "int t1 = 0 , t2 = 0 ;",
      "indent": 4
    },
    {
      "line": 12,
      "text": "set t1 to maximum of a [ i ] - ' 0 ' and b [ i ] - ' 0 '",
      "code": "t1 = max ( a [ i ] - ' 0 ' , b [ i ] - ' 0 ' ) ;",
      "indent": 4
    },
    {
      "line": 13,
      "text": "set t2 to minimum of a [ i ] - ' 0 ' and b [ i ] - ' 0 '",
      "code": "t2 = min ( a [ i ] - ' 0 ' , b [ i ] - ' 0 ' ) ;",
      "indent": 4
    },
    {
      "line": 14,
      "text": "add 10 - t1 + t2 to cnt",
      "code": "cnt += ( 10 - t1 + t2 ) ;",
      "indent": 4
    },
    {
      "line": 15,
      "text": "else do the following",
      "code": "else",
      "indent": 3
    },
    {
      "line": 16,
      "text": "add absolute value of ( a [ i ] - b [ i ] ) to cnt",
      "code": "cnt += abs ( a [ i ] - b [ i ] ) ;",
      "indent": 4
    },
    {
      "line": 17,
      "text": "DUMMY",
      "code": "}",
      "indent": 3
    },
    {
      "line": 18,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 19,
      "text": "print cnt",
      "code": "cout << cnt << endl ;",
      "indent": 2
    },
    {
      "line": 20,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 21,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 22,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        0
      ],
      "mod_code": [
        "char a [ 5000 ] , b [ 5000 ] [ 5000 ] ;"
      ],
      "err_line": 10,
      "err_msg": "invalid operands of types ‘char’ and ‘char [5000]’ to binary ‘operator-’"
    },
    {
      "mod_line": [
        12
      ],
      "mod_code": [
        "t1 = max ( a [ i ] - ' 0 ' and b [ i ] - ' 0 ' ) ;"
      ],
      "err_line": 12,
      "err_msg": "no matching function for call to ‘max(bool)’"
    },
    {
      "mod_line": [
        13
      ],
      "mod_code": [
        "t2 = min ( a [ i ] - ' 0 ' and b [ i ] - ' 0 ' ) ;"
      ],
      "err_line": 13,
      "err_msg": "no matching function for call to ‘min(bool)’"
    },
    {
      "mod_line": [
        10,
        19,
        5,
        13
      ],
      "mod_code": [
        "if ( abs ( a [ i ] - b [ i ] ) >= ' 5 ' )",
        "cout << cnt ;",
        "while ( cin >> n >> n )",
        "t2 = min ( a [ i ] - ' 0 ' and b [ i ] - ' 0 ' ) ;"
      ],
      "err_line": 13,
      "err_msg": "no matching function for call to ‘min(bool)’"
    },
    {
      "mod_line": [
        10,
        19,
        5,
        0
      ],
      "mod_code": [
        "if ( abs ( a [ i ] - b [ i ] ) >= ' 5 ' )",
        "cout << cnt ;",
        "while ( cin >> n >> n )",
        "char a [ 5000 ] , b [ 5000 ] [ 5000 ] ;"
      ],
      "err_line": 10,
      "err_msg": "invalid operands of types ‘char’ and ‘char [5000]’ to binary ‘operator-’"
    },
    {
      "mod_line": [
        10,
        19,
        13
      ],
      "mod_code": [
        "if ( abs ( a [ i ] - b [ i ] ) >= ' 5 ' )",
        "cout << cnt ;",
        "t2 = min ( a [ i ] - ' 0 ' and b [ i ] - ' 0 ' ) ;"
      ],
      "err_line": 13,
      "err_msg": "no matching function for call to ‘min(bool)’"
    },
    {
      "mod_line": [
        10,
        19,
        13,
        15
      ],
      "mod_code": [
        "if ( abs ( a [ i ] - b [ i ] ) >= ' 5 ' )",
        "cout << cnt ;",
        "t2 = min ( a [ i ] - ' 0 ' and b [ i ] - ' 0 ' ) ;",
        "while ( 1 )"
      ],
      "err_line": 13,
      "err_msg": "no matching function for call to ‘min(bool)’"
    },
    {
      "mod_line": [
        10,
        19,
        13,
        0
      ],
      "mod_code": [
        "if ( abs ( a [ i ] - b [ i ] ) >= ' 5 ' )",
        "cout << cnt ;",
        "t2 = min ( a [ i ] - ' 0 ' and b [ i ] - ' 0 ' ) ;",
        "char a [ 5000 ] , b [ 5000 ] [ 5000 ] ;"
      ],
      "err_line": 10,
      "err_msg": "invalid operands of types ‘char’ and ‘char [5000]’ to binary ‘operator-’"
    },
    {
      "mod_line": [
        10,
        19,
        15,
        0
      ],
      "mod_code": [
        "if ( abs ( a [ i ] - b [ i ] ) >= ' 5 ' )",
        "cout << cnt ;",
        "while ( 1 )",
        "char a [ 5000 ] , b [ 5000 ] [ 5000 ] ;"
      ],
      "err_line": 10,
      "err_msg": "invalid operands of types ‘char’ and ‘char [5000]’ to binary ‘operator-’"
    },
    {
      "mod_line": [
        10,
        19,
        0
      ],
      "mod_code": [
        "if ( abs ( a [ i ] - b [ i ] ) >= ' 5 ' )",
        "cout << cnt ;",
        "char a [ 5000 ] , b [ 5000 ] [ 5000 ] ;"
      ],
      "err_line": 10,
      "err_msg": "invalid operands of types ‘char’ and ‘char [5000]’ to binary ‘operator-’"
    },
    {
      "mod_line": [
        10,
        5,
        13
      ],
      "mod_code": [
        "if ( abs ( a [ i ] - b [ i ] ) >= ' 5 ' )",
        "while ( cin >> n >> n )",
        "t2 = min ( a [ i ] - ' 0 ' and b [ i ] - ' 0 ' ) ;"
      ],
      "err_line": 13,
      "err_msg": "no matching function for call to ‘min(bool)’"
    },
    {
      "mod_line": [
        10,
        5,
        13,
        15
      ],
      "mod_code": [
        "if ( abs ( a [ i ] - b [ i ] ) >= ' 5 ' )",
        "while ( cin >> n >> n )",
        "t2 = min ( a [ i ] - ' 0 ' and b [ i ] - ' 0 ' ) ;",
        "while ( 1 )"
      ],
      "err_line": 13,
      "err_msg": "no matching function for call to ‘min(bool)’"
    },
    {
      "mod_line": [
        10,
        5,
        13,
        0
      ],
      "mod_code": [
        "if ( abs ( a [ i ] - b [ i ] ) >= ' 5 ' )",
        "while ( cin >> n >> n )",
        "t2 = min ( a [ i ] - ' 0 ' and b [ i ] - ' 0 ' ) ;",
        "char a [ 5000 ] , b [ 5000 ] [ 5000 ] ;"
      ],
      "err_line": 10,
      "err_msg": "invalid operands of types ‘char’ and ‘char [5000]’ to binary ‘operator-’"
    },
    {
      "mod_line": [
        10,
        5,
        15,
        0
      ],
      "mod_code": [
        "if ( abs ( a [ i ] - b [ i ] ) >= ' 5 ' )",
        "while ( cin >> n >> n )",
        "while ( 1 )",
        "char a [ 5000 ] , b [ 5000 ] [ 5000 ] ;"
      ],
      "err_line": 10,
      "err_msg": "invalid operands of types ‘char’ and ‘char [5000]’ to binary ‘operator-’"
    },
    {
      "mod_line": [
        10,
        5,
        0
      ],
      "mod_code": [
        "if ( abs ( a [ i ] - b [ i ] ) >= ' 5 ' )",
        "while ( cin >> n >> n )",
        "char a [ 5000 ] , b [ 5000 ] [ 5000 ] ;"
      ],
      "err_line": 10,
      "err_msg": "invalid operands of types ‘char’ and ‘char [5000]’ to binary ‘operator-’"
    },
    {
      "mod_line": [
        10,
        13
      ],
      "mod_code": [
        "if ( abs ( a [ i ] - b [ i ] ) >= ' 5 ' )",
        "t2 = min ( a [ i ] - ' 0 ' and b [ i ] - ' 0 ' ) ;"
      ],
      "err_line": 13,
      "err_msg": "no matching function for call to ‘min(bool)’"
    },
    {
      "mod_line": [
        10,
        13,
        15
      ],
      "mod_code": [
        "if ( abs ( a [ i ] - b [ i ] ) >= ' 5 ' )",
        "t2 = min ( a [ i ] - ' 0 ' and b [ i ] - ' 0 ' ) ;",
        "while ( 1 )"
      ],
      "err_line": 13,
      "err_msg": "no matching function for call to ‘min(bool)’"
    },
    {
      "mod_line": [
        10,
        13,
        15,
        0
      ],
      "mod_code": [
        "if ( abs ( a [ i ] - b [ i ] ) >= ' 5 ' )",
        "t2 = min ( a [ i ] - ' 0 ' and b [ i ] - ' 0 ' ) ;",
        "while ( 1 )",
        "char a [ 5000 ] , b [ 5000 ] [ 5000 ] ;"
      ],
      "err_line": 10,
      "err_msg": "invalid operands of types ‘char’ and ‘char [5000]’ to binary ‘operator-’"
    },
    {
      "mod_line": [
        10,
        13,
        0
      ],
      "mod_code": [
        "if ( abs ( a [ i ] - b [ i ] ) >= ' 5 ' )",
        "t2 = min ( a [ i ] - ' 0 ' and b [ i ] - ' 0 ' ) ;",
        "char a [ 5000 ] , b [ 5000 ] [ 5000 ] ;"
      ],
      "err_line": 10,
      "err_msg": "invalid operands of types ‘char’ and ‘char [5000]’ to binary ‘operator-’"
    },
    {
      "mod_line": [
        10,
        15,
        0
      ],
      "mod_code": [
        "if ( abs ( a [ i ] - b [ i ] ) >= ' 5 ' )",
        "while ( 1 )",
        "char a [ 5000 ] , b [ 5000 ] [ 5000 ] ;"
      ],
      "err_line": 10,
      "err_msg": "invalid operands of types ‘char’ and ‘char [5000]’ to binary ‘operator-’"
    },
    {
      "mod_line": [
        10,
        0
      ],
      "mod_code": [
        "if ( abs ( a [ i ] - b [ i ] ) >= ' 5 ' )",
        "char a [ 5000 ] , b [ 5000 ] [ 5000 ] ;"
      ],
      "err_line": 10,
      "err_msg": "invalid operands of types ‘char’ and ‘char [5000]’ to binary ‘operator-’"
    },
    {
      "mod_line": [
        19,
        5,
        13
      ],
      "mod_code": [
        "cout << cnt ;",
        "while ( cin >> n >> n )",
        "t2 = min ( a [ i ] - ' 0 ' and b [ i ] - ' 0 ' ) ;"
      ],
      "err_line": 13,
      "err_msg": "no matching function for call to ‘min(bool)’"
    },
    {
      "mod_line": [
        19,
        5,
        13,
        15
      ],
      "mod_code": [
        "cout << cnt ;",
        "while ( cin >> n >> n )",
        "t2 = min ( a [ i ] - ' 0 ' and b [ i ] - ' 0 ' ) ;",
        "while ( 1 )"
      ],
      "err_line": 13,
      "err_msg": "no matching function for call to ‘min(bool)’"
    },
    {
      "mod_line": [
        19,
        5,
        13,
        0
      ],
      "mod_code": [
        "cout << cnt ;",
        "while ( cin >> n >> n )",
        "t2 = min ( a [ i ] - ' 0 ' and b [ i ] - ' 0 ' ) ;",
        "char a [ 5000 ] , b [ 5000 ] [ 5000 ] ;"
      ],
      "err_line": 10,
      "err_msg": "invalid operands of types ‘char’ and ‘char [5000]’ to binary ‘operator-’"
    },
    {
      "mod_line": [
        19,
        5,
        15,
        0
      ],
      "mod_code": [
        "cout << cnt ;",
        "while ( cin >> n >> n )",
        "while ( 1 )",
        "char a [ 5000 ] , b [ 5000 ] [ 5000 ] ;"
      ],
      "err_line": 10,
      "err_msg": "invalid operands of types ‘char’ and ‘char [5000]’ to binary ‘operator-’"
    },
    {
      "mod_line": [
        19,
        5,
        0
      ],
      "mod_code": [
        "cout << cnt ;",
        "while ( cin >> n >> n )",
        "char a [ 5000 ] , b [ 5000 ] [ 5000 ] ;"
      ],
      "err_line": 10,
      "err_msg": "invalid operands of types ‘char’ and ‘char [5000]’ to binary ‘operator-’"
    },
    {
      "mod_line": [
        19,
        13
      ],
      "mod_code": [
        "cout << cnt ;",
        "t2 = min ( a [ i ] - ' 0 ' and b [ i ] - ' 0 ' ) ;"
      ],
      "err_line": 13,
      "err_msg": "no matching function for call to ‘min(bool)’"
    },
    {
      "mod_line": [
        19,
        13,
        15
      ],
      "mod_code": [
        "cout << cnt ;",
        "t2 = min ( a [ i ] - ' 0 ' and b [ i ] - ' 0 ' ) ;",
        "while ( 1 )"
      ],
      "err_line": 13,
      "err_msg": "no matching function for call to ‘min(bool)’"
    },
    {
      "mod_line": [
        19,
        13,
        15,
        0
      ],
      "mod_code": [
        "cout << cnt ;",
        "t2 = min ( a [ i ] - ' 0 ' and b [ i ] - ' 0 ' ) ;",
        "while ( 1 )",
        "char a [ 5000 ] , b [ 5000 ] [ 5000 ] ;"
      ],
      "err_line": 10,
      "err_msg": "invalid operands of types ‘char’ and ‘char [5000]’ to binary ‘operator-’"
    },
    {
      "mod_line": [
        19,
        13,
        0
      ],
      "mod_code": [
        "cout << cnt ;",
        "t2 = min ( a [ i ] - ' 0 ' and b [ i ] - ' 0 ' ) ;",
        "char a [ 5000 ] , b [ 5000 ] [ 5000 ] ;"
      ],
      "err_line": 10,
      "err_msg": "invalid operands of types ‘char’ and ‘char [5000]’ to binary ‘operator-’"
    },
    {
      "mod_line": [
        19,
        15,
        0
      ],
      "mod_code": [
        "cout << cnt ;",
        "while ( 1 )",
        "char a [ 5000 ] , b [ 5000 ] [ 5000 ] ;"
      ],
      "err_line": 10,
      "err_msg": "invalid operands of types ‘char’ and ‘char [5000]’ to binary ‘operator-’"
    },
    {
      "mod_line": [
        19,
        0
      ],
      "mod_code": [
        "cout << cnt ;",
        "char a [ 5000 ] , b [ 5000 ] [ 5000 ] ;"
      ],
      "err_line": 10,
      "err_msg": "invalid operands of types ‘char’ and ‘char [5000]’ to binary ‘operator-’"
    },
    {
      "mod_line": [
        5,
        13
      ],
      "mod_code": [
        "while ( cin >> n >> n )",
        "t2 = min ( a [ i ] - ' 0 ' and b [ i ] - ' 0 ' ) ;"
      ],
      "err_line": 13,
      "err_msg": "no matching function for call to ‘min(bool)’"
    },
    {
      "mod_line": [
        5,
        13,
        15
      ],
      "mod_code": [
        "while ( cin >> n >> n )",
        "t2 = min ( a [ i ] - ' 0 ' and b [ i ] - ' 0 ' ) ;",
        "while ( 1 )"
      ],
      "err_line": 13,
      "err_msg": "no matching function for call to ‘min(bool)’"
    },
    {
      "mod_line": [
        5,
        13,
        15,
        0
      ],
      "mod_code": [
        "while ( cin >> n >> n )",
        "t2 = min ( a [ i ] - ' 0 ' and b [ i ] - ' 0 ' ) ;",
        "while ( 1 )",
        "char a [ 5000 ] , b [ 5000 ] [ 5000 ] ;"
      ],
      "err_line": 10,
      "err_msg": "invalid operands of types ‘char’ and ‘char [5000]’ to binary ‘operator-’"
    },
    {
      "mod_line": [
        5,
        13,
        0
      ],
      "mod_code": [
        "while ( cin >> n >> n )",
        "t2 = min ( a [ i ] - ' 0 ' and b [ i ] - ' 0 ' ) ;",
        "char a [ 5000 ] , b [ 5000 ] [ 5000 ] ;"
      ],
      "err_line": 10,
      "err_msg": "invalid operands of types ‘char’ and ‘char [5000]’ to binary ‘operator-’"
    },
    {
      "mod_line": [
        5,
        15,
        0
      ],
      "mod_code": [
        "while ( cin >> n >> n )",
        "while ( 1 )",
        "char a [ 5000 ] , b [ 5000 ] [ 5000 ] ;"
      ],
      "err_line": 10,
      "err_msg": "invalid operands of types ‘char’ and ‘char [5000]’ to binary ‘operator-’"
    },
    {
      "mod_line": [
        5,
        0
      ],
      "mod_code": [
        "while ( cin >> n >> n )",
        "char a [ 5000 ] , b [ 5000 ] [ 5000 ] ;"
      ],
      "err_line": 10,
      "err_msg": "invalid operands of types ‘char’ and ‘char [5000]’ to binary ‘operator-’"
    },
    {
      "mod_line": [
        13,
        15
      ],
      "mod_code": [
        "t2 = min ( a [ i ] - ' 0 ' and b [ i ] - ' 0 ' ) ;",
        "while ( 1 )"
      ],
      "err_line": 13,
      "err_msg": "no matching function for call to ‘min(bool)’"
    },
    {
      "mod_line": [
        13,
        15,
        0
      ],
      "mod_code": [
        "t2 = min ( a [ i ] - ' 0 ' and b [ i ] - ' 0 ' ) ;",
        "while ( 1 )",
        "char a [ 5000 ] , b [ 5000 ] [ 5000 ] ;"
      ],
      "err_line": 10,
      "err_msg": "invalid operands of types ‘char’ and ‘char [5000]’ to binary ‘operator-’"
    },
    {
      "mod_line": [
        13,
        0
      ],
      "mod_code": [
        "t2 = min ( a [ i ] - ' 0 ' and b [ i ] - ' 0 ' ) ;",
        "char a [ 5000 ] , b [ 5000 ] [ 5000 ] ;"
      ],
      "err_line": 10,
      "err_msg": "invalid operands of types ‘char’ and ‘char [5000]’ to binary ‘operator-’"
    },
    {
      "mod_line": [
        15,
        0
      ],
      "mod_code": [
        "while ( 1 )",
        "char a [ 5000 ] , b [ 5000 ] [ 5000 ] ;"
      ],
      "err_line": 10,
      "err_msg": "invalid operands of types ‘char’ and ‘char [5000]’ to binary ‘operator-’"
    }
  ]
}