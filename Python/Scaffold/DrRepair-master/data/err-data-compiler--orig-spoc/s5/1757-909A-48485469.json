{
  "meta": {
    "index": 1757,
    "hitid": "3LOJFQ4BOX91NF7C79DPPJMUTQ4KDX",
    "workerid": "AIWEXPJAU66D9",
    "probid": "909A",
    "subid": "48485469"
  },
  "lines": [
    {
      "line": 0,
      "text": "N is a new constant integer with value 100100",
      "code": "const int N = 100100 ;",
      "indent": 0
    },
    {
      "line": 1,
      "text": "create new constant long long mod = 1e9 + 7",
      "code": "const long long mod = 1e9 + 7 ;",
      "indent": 0
    },
    {
      "line": 2,
      "text": "function gcd with long long arguments a and b that returns long long",
      "code": "long long gcd ( long long a , long long b )",
      "indent": 0
    },
    {
      "line": 3,
      "text": "return a if b = 0 ? or gcd ( b , a % b ) if b ! = 0",
      "code": "return b == 0 ? a : gcd ( b , a % b ) ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    },
    {
      "line": 5,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 6,
      "text": "declare strings a and b",
      "code": "string a , b ;",
      "indent": 1
    },
    {
      "line": 7,
      "text": "create new string called ans",
      "code": "string ans ;",
      "indent": 1
    },
    {
      "line": 8,
      "text": "read standard input to a and b",
      "code": "cin >> a >> b ;",
      "indent": 1
    },
    {
      "line": 9,
      "text": "append a [ 0 ] to the string ans",
      "code": "ans += a [ 0 ] ;",
      "indent": 1
    },
    {
      "line": 10,
      "text": "for i from 1 to length of a exclusive",
      "code": "for ( long long i = 1 ; i < a . length ( ) ; i ++ )",
      "indent": 1
    },
    {
      "line": 11,
      "text": "if a [ i ] is less than b [ 0 ]",
      "code": "if ( a [ i ] < b [ 0 ] )",
      "indent": 2
    },
    {
      "line": 12,
      "text": "append a [ i ] to ans",
      "code": "ans += a [ i ] ;",
      "indent": 3
    },
    {
      "line": 13,
      "text": "else",
      "code": "else",
      "indent": 2
    },
    {
      "line": 14,
      "text": "stop the loop",
      "code": "break ;",
      "indent": 3
    },
    {
      "line": 15,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 16,
      "text": "append b [ 0 ] to ans",
      "code": "ans += b [ 0 ] ;",
      "indent": 1
    },
    {
      "line": 17,
      "text": "print ans and \" \\ n \"",
      "code": "cout << ans << \" \\n \" ;",
      "indent": 1
    },
    {
      "line": 18,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        2
      ],
      "mod_code": [
        "long long gcd ( long long a , long long b ) ;"
      ],
      "err_line": 3,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        6
      ],
      "mod_code": [
        "string a and b ;"
      ],
      "err_line": 6,
      "err_msg": "expected initializer before ‘and’ token"
    },
    {
      "mod_line": [
        7
      ],
      "mod_code": [
        "string n ;"
      ],
      "err_line": 9,
      "err_msg": "‘ans’ was not declared in this scope"
    },
    {
      "mod_line": [
        8
      ],
      "mod_code": [
        "cin >> n >> b ;"
      ],
      "err_line": 8,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        11
      ],
      "mod_code": [
        "if ( a [ i ] ] < b [ 0 ] )"
      ],
      "err_line": 11,
      "err_msg": "expected ‘)’ before ‘]’ token"
    },
    {
      "mod_line": [
        14
      ],
      "mod_code": [
        "stop ;"
      ],
      "err_line": 14,
      "err_msg": "‘stop’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        2
      ],
      "mod_code": [
        "stop ;",
        "long long gcd ( long long a , long long b ) ;"
      ],
      "err_line": 3,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        14,
        2,
        11
      ],
      "mod_code": [
        "stop ;",
        "long long gcd ( long long a , long long b ) ;",
        "if ( a [ i ] ] < b [ 0 ] )"
      ],
      "err_line": 3,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        14,
        2,
        11,
        7
      ],
      "mod_code": [
        "stop ;",
        "long long gcd ( long long a , long long b ) ;",
        "if ( a [ i ] ] < b [ 0 ] )",
        "string n ;"
      ],
      "err_line": 3,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        14,
        2,
        11,
        6
      ],
      "mod_code": [
        "stop ;",
        "long long gcd ( long long a , long long b ) ;",
        "if ( a [ i ] ] < b [ 0 ] )",
        "string a and b ;"
      ],
      "err_line": 3,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        14,
        2,
        11,
        17
      ],
      "mod_code": [
        "stop ;",
        "long long gcd ( long long a , long long b ) ;",
        "if ( a [ i ] ] < b [ 0 ] )",
        "cout << ans << \" \\0 \" ;"
      ],
      "err_line": 3,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        14,
        2,
        7
      ],
      "mod_code": [
        "stop ;",
        "long long gcd ( long long a , long long b ) ;",
        "string n ;"
      ],
      "err_line": 3,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        14,
        2,
        7,
        6
      ],
      "mod_code": [
        "stop ;",
        "long long gcd ( long long a , long long b ) ;",
        "string n ;",
        "string a and b ;"
      ],
      "err_line": 3,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        14,
        2,
        7,
        17
      ],
      "mod_code": [
        "stop ;",
        "long long gcd ( long long a , long long b ) ;",
        "string n ;",
        "cout << ans << \" \\0 \" ;"
      ],
      "err_line": 3,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        14,
        2,
        6
      ],
      "mod_code": [
        "stop ;",
        "long long gcd ( long long a , long long b ) ;",
        "string a and b ;"
      ],
      "err_line": 3,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        14,
        2,
        6,
        17
      ],
      "mod_code": [
        "stop ;",
        "long long gcd ( long long a , long long b ) ;",
        "string a and b ;",
        "cout << ans << \" \\0 \" ;"
      ],
      "err_line": 3,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        14,
        2,
        17
      ],
      "mod_code": [
        "stop ;",
        "long long gcd ( long long a , long long b ) ;",
        "cout << ans << \" \\0 \" ;"
      ],
      "err_line": 3,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        14,
        11
      ],
      "mod_code": [
        "stop ;",
        "if ( a [ i ] ] < b [ 0 ] )"
      ],
      "err_line": 11,
      "err_msg": "expected ‘)’ before ‘]’ token"
    },
    {
      "mod_line": [
        14,
        11,
        7
      ],
      "mod_code": [
        "stop ;",
        "if ( a [ i ] ] < b [ 0 ] )",
        "string n ;"
      ],
      "err_line": 9,
      "err_msg": "‘ans’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        11,
        7,
        6
      ],
      "mod_code": [
        "stop ;",
        "if ( a [ i ] ] < b [ 0 ] )",
        "string n ;",
        "string a and b ;"
      ],
      "err_line": 6,
      "err_msg": "expected initializer before ‘and’ token"
    },
    {
      "mod_line": [
        14,
        11,
        7,
        17
      ],
      "mod_code": [
        "stop ;",
        "if ( a [ i ] ] < b [ 0 ] )",
        "string n ;",
        "cout << ans << \" \\0 \" ;"
      ],
      "err_line": 9,
      "err_msg": "‘ans’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        11,
        6
      ],
      "mod_code": [
        "stop ;",
        "if ( a [ i ] ] < b [ 0 ] )",
        "string a and b ;"
      ],
      "err_line": 6,
      "err_msg": "expected initializer before ‘and’ token"
    },
    {
      "mod_line": [
        14,
        11,
        6,
        17
      ],
      "mod_code": [
        "stop ;",
        "if ( a [ i ] ] < b [ 0 ] )",
        "string a and b ;",
        "cout << ans << \" \\0 \" ;"
      ],
      "err_line": 6,
      "err_msg": "expected initializer before ‘and’ token"
    },
    {
      "mod_line": [
        14,
        11,
        17
      ],
      "mod_code": [
        "stop ;",
        "if ( a [ i ] ] < b [ 0 ] )",
        "cout << ans << \" \\0 \" ;"
      ],
      "err_line": 11,
      "err_msg": "expected ‘)’ before ‘]’ token"
    },
    {
      "mod_line": [
        14,
        7
      ],
      "mod_code": [
        "stop ;",
        "string n ;"
      ],
      "err_line": 9,
      "err_msg": "‘ans’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        7,
        6
      ],
      "mod_code": [
        "stop ;",
        "string n ;",
        "string a and b ;"
      ],
      "err_line": 6,
      "err_msg": "expected initializer before ‘and’ token"
    },
    {
      "mod_line": [
        14,
        7,
        6,
        17
      ],
      "mod_code": [
        "stop ;",
        "string n ;",
        "string a and b ;",
        "cout << ans << \" \\0 \" ;"
      ],
      "err_line": 6,
      "err_msg": "expected initializer before ‘and’ token"
    },
    {
      "mod_line": [
        14,
        7,
        17
      ],
      "mod_code": [
        "stop ;",
        "string n ;",
        "cout << ans << \" \\0 \" ;"
      ],
      "err_line": 9,
      "err_msg": "‘ans’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        6
      ],
      "mod_code": [
        "stop ;",
        "string a and b ;"
      ],
      "err_line": 6,
      "err_msg": "expected initializer before ‘and’ token"
    },
    {
      "mod_line": [
        14,
        6,
        17
      ],
      "mod_code": [
        "stop ;",
        "string a and b ;",
        "cout << ans << \" \\0 \" ;"
      ],
      "err_line": 6,
      "err_msg": "expected initializer before ‘and’ token"
    },
    {
      "mod_line": [
        14,
        17
      ],
      "mod_code": [
        "stop ;",
        "cout << ans << \" \\0 \" ;"
      ],
      "err_line": 14,
      "err_msg": "‘stop’ was not declared in this scope"
    },
    {
      "mod_line": [
        2,
        11
      ],
      "mod_code": [
        "long long gcd ( long long a , long long b ) ;",
        "if ( a [ i ] ] < b [ 0 ] )"
      ],
      "err_line": 3,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        2,
        11,
        7
      ],
      "mod_code": [
        "long long gcd ( long long a , long long b ) ;",
        "if ( a [ i ] ] < b [ 0 ] )",
        "string n ;"
      ],
      "err_line": 3,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        2,
        11,
        7,
        6
      ],
      "mod_code": [
        "long long gcd ( long long a , long long b ) ;",
        "if ( a [ i ] ] < b [ 0 ] )",
        "string n ;",
        "string a and b ;"
      ],
      "err_line": 3,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        2,
        11,
        7,
        17
      ],
      "mod_code": [
        "long long gcd ( long long a , long long b ) ;",
        "if ( a [ i ] ] < b [ 0 ] )",
        "string n ;",
        "cout << ans << \" \\0 \" ;"
      ],
      "err_line": 3,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        2,
        11,
        6
      ],
      "mod_code": [
        "long long gcd ( long long a , long long b ) ;",
        "if ( a [ i ] ] < b [ 0 ] )",
        "string a and b ;"
      ],
      "err_line": 3,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        2,
        11,
        6,
        17
      ],
      "mod_code": [
        "long long gcd ( long long a , long long b ) ;",
        "if ( a [ i ] ] < b [ 0 ] )",
        "string a and b ;",
        "cout << ans << \" \\0 \" ;"
      ],
      "err_line": 3,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        2,
        11,
        17
      ],
      "mod_code": [
        "long long gcd ( long long a , long long b ) ;",
        "if ( a [ i ] ] < b [ 0 ] )",
        "cout << ans << \" \\0 \" ;"
      ],
      "err_line": 3,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        2,
        7
      ],
      "mod_code": [
        "long long gcd ( long long a , long long b ) ;",
        "string n ;"
      ],
      "err_line": 3,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        2,
        7,
        6
      ],
      "mod_code": [
        "long long gcd ( long long a , long long b ) ;",
        "string n ;",
        "string a and b ;"
      ],
      "err_line": 3,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        2,
        7,
        6,
        17
      ],
      "mod_code": [
        "long long gcd ( long long a , long long b ) ;",
        "string n ;",
        "string a and b ;",
        "cout << ans << \" \\0 \" ;"
      ],
      "err_line": 3,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        2,
        7,
        17
      ],
      "mod_code": [
        "long long gcd ( long long a , long long b ) ;",
        "string n ;",
        "cout << ans << \" \\0 \" ;"
      ],
      "err_line": 3,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        2,
        6
      ],
      "mod_code": [
        "long long gcd ( long long a , long long b ) ;",
        "string a and b ;"
      ],
      "err_line": 3,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        2,
        6,
        17
      ],
      "mod_code": [
        "long long gcd ( long long a , long long b ) ;",
        "string a and b ;",
        "cout << ans << \" \\0 \" ;"
      ],
      "err_line": 3,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        2,
        17
      ],
      "mod_code": [
        "long long gcd ( long long a , long long b ) ;",
        "cout << ans << \" \\0 \" ;"
      ],
      "err_line": 3,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        11,
        7
      ],
      "mod_code": [
        "if ( a [ i ] ] < b [ 0 ] )",
        "string n ;"
      ],
      "err_line": 9,
      "err_msg": "‘ans’ was not declared in this scope"
    },
    {
      "mod_line": [
        11,
        7,
        6
      ],
      "mod_code": [
        "if ( a [ i ] ] < b [ 0 ] )",
        "string n ;",
        "string a and b ;"
      ],
      "err_line": 6,
      "err_msg": "expected initializer before ‘and’ token"
    },
    {
      "mod_line": [
        11,
        7,
        6,
        17
      ],
      "mod_code": [
        "if ( a [ i ] ] < b [ 0 ] )",
        "string n ;",
        "string a and b ;",
        "cout << ans << \" \\0 \" ;"
      ],
      "err_line": 6,
      "err_msg": "expected initializer before ‘and’ token"
    },
    {
      "mod_line": [
        11,
        7,
        17
      ],
      "mod_code": [
        "if ( a [ i ] ] < b [ 0 ] )",
        "string n ;",
        "cout << ans << \" \\0 \" ;"
      ],
      "err_line": 9,
      "err_msg": "‘ans’ was not declared in this scope"
    },
    {
      "mod_line": [
        11,
        6
      ],
      "mod_code": [
        "if ( a [ i ] ] < b [ 0 ] )",
        "string a and b ;"
      ],
      "err_line": 6,
      "err_msg": "expected initializer before ‘and’ token"
    },
    {
      "mod_line": [
        11,
        6,
        17
      ],
      "mod_code": [
        "if ( a [ i ] ] < b [ 0 ] )",
        "string a and b ;",
        "cout << ans << \" \\0 \" ;"
      ],
      "err_line": 6,
      "err_msg": "expected initializer before ‘and’ token"
    },
    {
      "mod_line": [
        11,
        17
      ],
      "mod_code": [
        "if ( a [ i ] ] < b [ 0 ] )",
        "cout << ans << \" \\0 \" ;"
      ],
      "err_line": 11,
      "err_msg": "expected ‘)’ before ‘]’ token"
    },
    {
      "mod_line": [
        7,
        6
      ],
      "mod_code": [
        "string n ;",
        "string a and b ;"
      ],
      "err_line": 6,
      "err_msg": "expected initializer before ‘and’ token"
    },
    {
      "mod_line": [
        7,
        6,
        17
      ],
      "mod_code": [
        "string n ;",
        "string a and b ;",
        "cout << ans << \" \\0 \" ;"
      ],
      "err_line": 6,
      "err_msg": "expected initializer before ‘and’ token"
    },
    {
      "mod_line": [
        7,
        17
      ],
      "mod_code": [
        "string n ;",
        "cout << ans << \" \\0 \" ;"
      ],
      "err_line": 9,
      "err_msg": "‘ans’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        17
      ],
      "mod_code": [
        "string a and b ;",
        "cout << ans << \" \\0 \" ;"
      ],
      "err_line": 6,
      "err_msg": "expected initializer before ‘and’ token"
    }
  ]
}