{
  "meta": {
    "index": 2247,
    "hitid": "38VTL6WC4A7137H0WIWX0FDDDM45YP",
    "workerid": "A1APYLD4DUK33J",
    "probid": "6A",
    "subid": "48199132"
  },
  "lines": [
    {
      "line": 0,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 1,
      "text": "create integer array arr with size 4",
      "code": "int arr [ 4 ] ;",
      "indent": 1
    },
    {
      "line": 2,
      "text": "read arr [ 0 ] read arr [ 1 ] read arr [ 2 ] read arr [ 3 ]",
      "code": "cin >> arr [ 0 ] >> arr [ 1 ] >> arr [ 2 ] >> arr [ 3 ] ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "sort elements from arr to arr + 4",
      "code": "sort ( arr , arr + 4 ) ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "if arr [ 3 ] is less than arr [ 2 ] + arr [ 1 ] or arr [ 2 ] is less than arr [ 1 ] + arr [ 0 ]",
      "code": "if ( arr [ 3 ] < arr [ 2 ] + arr [ 1 ] || arr [ 2 ] < arr [ 1 ] + arr [ 0 ] )",
      "indent": 1
    },
    {
      "line": 5,
      "text": "print \" TRIANGLE \\ n \"",
      "code": "cout << \" TRIANGLE\\n \" ;",
      "indent": 2
    },
    {
      "line": 6,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 2
    },
    {
      "line": 7,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 8,
      "text": "if arr [ 3 ] is less than or equal to arr [ 2 ] + arr [ 1 ] or arr [ 2 ] is less than or equal to arr [ 1 ] + arr [ 0 ]",
      "code": "if ( arr [ 3 ] <= arr [ 2 ] + arr [ 1 ] || arr [ 2 ] <= arr [ 1 ] + arr [ 0 ] )",
      "indent": 1
    },
    {
      "line": 9,
      "text": "print \" SEGMENT \\ n \"",
      "code": "cout << \" SEGMENT\\n \" ;",
      "indent": 2
    },
    {
      "line": 10,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 2
    },
    {
      "line": 11,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 12,
      "text": "print \" IMPOSSIBLE \\ n \"",
      "code": "cout << \" IMPOSSIBLE\\n \" ;",
      "indent": 1
    },
    {
      "line": 13,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 14,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        1
      ],
      "mod_code": [
        "int * arr [ 4 ] ;"
      ],
      "err_line": 2,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘int*’)"
    },
    {
      "mod_line": [
        2
      ],
      "mod_code": [
        "cin >> arr [ 0 ] >> arr [ 1 ] read arr [ 2 ] >> arr [ 3 ] ;"
      ],
      "err_line": 2,
      "err_msg": "expected ‘;’ before ‘read’"
    },
    {
      "mod_line": [
        5,
        9,
        12,
        1
      ],
      "mod_code": [
        "cout << \" A\\n \" ;",
        "cout << \" A\\n \" ;",
        "cout << \" A\\n \" ;",
        "int * arr [ 4 ] ;"
      ],
      "err_line": 2,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘int*’)"
    },
    {
      "mod_line": [
        5,
        9,
        3,
        1
      ],
      "mod_code": [
        "cout << \" A\\n \" ;",
        "cout << \" A\\n \" ;",
        "sort ( arr + 4 , arr + 4 ) ;",
        "int * arr [ 4 ] ;"
      ],
      "err_line": 2,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘int*’)"
    },
    {
      "mod_line": [
        5,
        9,
        1
      ],
      "mod_code": [
        "cout << \" A\\n \" ;",
        "cout << \" A\\n \" ;",
        "int * arr [ 4 ] ;"
      ],
      "err_line": 2,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘int*’)"
    },
    {
      "mod_line": [
        5,
        12,
        3,
        1
      ],
      "mod_code": [
        "cout << \" A\\n \" ;",
        "cout << \" A\\n \" ;",
        "sort ( arr + 4 , arr + 4 ) ;",
        "int * arr [ 4 ] ;"
      ],
      "err_line": 2,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘int*’)"
    },
    {
      "mod_line": [
        5,
        12,
        9,
        1
      ],
      "mod_code": [
        "cout << \" A\\n \" ;",
        "cout << \" A\\n \" ;",
        "cout << \" 1\\n \" ;",
        "int * arr [ 4 ] ;"
      ],
      "err_line": 2,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘int*’)"
    },
    {
      "mod_line": [
        5,
        12,
        1
      ],
      "mod_code": [
        "cout << \" A\\n \" ;",
        "cout << \" A\\n \" ;",
        "int * arr [ 4 ] ;"
      ],
      "err_line": 2,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘int*’)"
    },
    {
      "mod_line": [
        5,
        3,
        9,
        1
      ],
      "mod_code": [
        "cout << \" A\\n \" ;",
        "sort ( arr + 4 , arr + 4 ) ;",
        "cout << \" 1\\n \" ;",
        "int * arr [ 4 ] ;"
      ],
      "err_line": 2,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘int*’)"
    },
    {
      "mod_line": [
        5,
        3,
        1
      ],
      "mod_code": [
        "cout << \" A\\n \" ;",
        "sort ( arr + 4 , arr + 4 ) ;",
        "int * arr [ 4 ] ;"
      ],
      "err_line": 2,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘int*’)"
    },
    {
      "mod_line": [
        5,
        9,
        1
      ],
      "mod_code": [
        "cout << \" A\\n \" ;",
        "cout << \" 1\\n \" ;",
        "int * arr [ 4 ] ;"
      ],
      "err_line": 2,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘int*’)"
    },
    {
      "mod_line": [
        5,
        1
      ],
      "mod_code": [
        "cout << \" A\\n \" ;",
        "int * arr [ 4 ] ;"
      ],
      "err_line": 2,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘int*’)"
    },
    {
      "mod_line": [
        9,
        12,
        3,
        1
      ],
      "mod_code": [
        "cout << \" A\\n \" ;",
        "cout << \" A\\n \" ;",
        "sort ( arr + 4 , arr + 4 ) ;",
        "int * arr [ 4 ] ;"
      ],
      "err_line": 2,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘int*’)"
    },
    {
      "mod_line": [
        9,
        12,
        1
      ],
      "mod_code": [
        "cout << \" A\\n \" ;",
        "cout << \" A\\n \" ;",
        "int * arr [ 4 ] ;"
      ],
      "err_line": 2,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘int*’)"
    },
    {
      "mod_line": [
        9,
        3,
        1
      ],
      "mod_code": [
        "cout << \" A\\n \" ;",
        "sort ( arr + 4 , arr + 4 ) ;",
        "int * arr [ 4 ] ;"
      ],
      "err_line": 2,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘int*’)"
    },
    {
      "mod_line": [
        9,
        1
      ],
      "mod_code": [
        "cout << \" A\\n \" ;",
        "int * arr [ 4 ] ;"
      ],
      "err_line": 2,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘int*’)"
    },
    {
      "mod_line": [
        12,
        3,
        9,
        1
      ],
      "mod_code": [
        "cout << \" A\\n \" ;",
        "sort ( arr + 4 , arr + 4 ) ;",
        "cout << \" 1\\n \" ;",
        "int * arr [ 4 ] ;"
      ],
      "err_line": 2,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘int*’)"
    },
    {
      "mod_line": [
        12,
        3,
        1
      ],
      "mod_code": [
        "cout << \" A\\n \" ;",
        "sort ( arr + 4 , arr + 4 ) ;",
        "int * arr [ 4 ] ;"
      ],
      "err_line": 2,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘int*’)"
    },
    {
      "mod_line": [
        12,
        9,
        1
      ],
      "mod_code": [
        "cout << \" A\\n \" ;",
        "cout << \" 1\\n \" ;",
        "int * arr [ 4 ] ;"
      ],
      "err_line": 2,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘int*’)"
    },
    {
      "mod_line": [
        12,
        1
      ],
      "mod_code": [
        "cout << \" A\\n \" ;",
        "int * arr [ 4 ] ;"
      ],
      "err_line": 2,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘int*’)"
    },
    {
      "mod_line": [
        3,
        9,
        1
      ],
      "mod_code": [
        "sort ( arr + 4 , arr + 4 ) ;",
        "cout << \" 1\\n \" ;",
        "int * arr [ 4 ] ;"
      ],
      "err_line": 2,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘int*’)"
    },
    {
      "mod_line": [
        3,
        1
      ],
      "mod_code": [
        "sort ( arr + 4 , arr + 4 ) ;",
        "int * arr [ 4 ] ;"
      ],
      "err_line": 2,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘int*’)"
    },
    {
      "mod_line": [
        9,
        1
      ],
      "mod_code": [
        "cout << \" 1\\n \" ;",
        "int * arr [ 4 ] ;"
      ],
      "err_line": 2,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘int*’)"
    }
  ]
}