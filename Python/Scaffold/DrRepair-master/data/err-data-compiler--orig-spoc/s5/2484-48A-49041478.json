{
  "meta": {
    "index": 2484,
    "hitid": "385MDVINFC95L11L6JI3GSB2KFYWJ2",
    "workerid": "A1APYLD4DUK33J",
    "probid": "48A",
    "subid": "49041478"
  },
  "lines": [
    {
      "line": 0,
      "text": "declare check with integers i , j as arguments , returning integer",
      "code": "int check ( int i , int j )",
      "indent": 0
    },
    {
      "line": 1,
      "text": "if i is 1",
      "code": "if ( i == 1 )",
      "indent": 1
    },
    {
      "line": 2,
      "text": "if j is 2 , return 1 from function",
      "code": "if ( j == 2 ) return 1 ;",
      "indent": 2
    },
    {
      "line": 3,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 2
    },
    {
      "line": 4,
      "text": "else if i is 2",
      "code": "else if ( i == 2 )",
      "indent": 1
    },
    {
      "line": 5,
      "text": "if j is 3 , return 1 from function",
      "code": "if ( j == 3 ) return 1 ;",
      "indent": 2
    },
    {
      "line": 6,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 2
    },
    {
      "line": 7,
      "text": "else",
      "code": "else",
      "indent": 1
    },
    {
      "line": 8,
      "text": "if j is 1 , return 1 from function",
      "code": "if ( j == 1 ) return 1 ;",
      "indent": 2
    },
    {
      "line": 9,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 2
    },
    {
      "line": 10,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 11,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    },
    {
      "line": 12,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 13,
      "text": "create string s",
      "code": "string s ;",
      "indent": 1
    },
    {
      "line": 14,
      "text": "create integer array s with size 3",
      "code": "int a [ 3 ] ;",
      "indent": 1
    },
    {
      "line": 15,
      "text": "for i = 0 to 3 exclusive",
      "code": "for ( int i = 0 ; i < 3 ; i ++ )",
      "indent": 1
    },
    {
      "line": 16,
      "text": "read s",
      "code": "cin >> s ;",
      "indent": 2
    },
    {
      "line": 17,
      "text": "if s is \" rock \" set a [ i ] to 1",
      "code": "if ( s == \" rock \" ) a [ i ] = 1 ;",
      "indent": 2
    },
    {
      "line": 18,
      "text": "if s is \" scissors \" set a [ i ] to 2",
      "code": "if ( s == \" scissors \" ) a [ i ] = 2 ;",
      "indent": 2
    },
    {
      "line": 19,
      "text": "if s is \" paper \" set a [ i ] to 3",
      "code": "if ( s == \" paper \" ) a [ i ] = 3 ;",
      "indent": 2
    },
    {
      "line": 20,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 21,
      "text": "if result of run check with arguments ( a [ 0 ] , a [ 1 ] ) and result of run check with arguments ( a [ 0 ] , a [ 2 ] )",
      "code": "if ( check ( a [ 0 ] , a [ 1 ] ) && check ( a [ 0 ] , a [ 2 ] ) )",
      "indent": 1
    },
    {
      "line": 22,
      "text": "print \" F \" print newline",
      "code": "cout << \" F \" << endl ;",
      "indent": 2
    },
    {
      "line": 23,
      "text": "else if result of run check with arguments ( a [ 1 ] , a [ 0 ] ) and result of run check with arguments ( a [ 1 ] , a [ 2 ] )",
      "code": "else if ( check ( a [ 1 ] , a [ 0 ] ) && check ( a [ 1 ] , a [ 2 ] ) )",
      "indent": 1
    },
    {
      "line": 24,
      "text": "print \" M \" print newline",
      "code": "cout << \" M \" << endl ;",
      "indent": 2
    },
    {
      "line": 25,
      "text": "else if result of run check with arguments ( a [ 2 ] , a [ 0 ] ) and result of run check with arguments ( a [ 2 ] , a [ 1 ] )",
      "code": "else if ( check ( a [ 2 ] , a [ 0 ] ) && check ( a [ 2 ] , a [ 1 ] ) )",
      "indent": 1
    },
    {
      "line": 26,
      "text": "print \" S \" print newline",
      "code": "cout << \" S \" << endl ;",
      "indent": 2
    },
    {
      "line": 27,
      "text": "else",
      "code": "else",
      "indent": 1
    },
    {
      "line": 28,
      "text": "print \" ? \" print newline",
      "code": "cout << \" ? \" << endl ;",
      "indent": 2
    },
    {
      "line": 29,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        14
      ],
      "mod_code": [
        "int s [ 3 ] ;"
      ],
      "err_line": 14,
      "err_msg": "conflicting declaration ‘int s [3]’"
    },
    {
      "mod_line": [
        21
      ],
      "mod_code": [
        "if ( check ( a [ 0 ] , a [ 1 ] ) && check ( a [ 2 ] ) )"
      ],
      "err_line": 21,
      "err_msg": "too few arguments to function ‘int check(int, int)’"
    },
    {
      "mod_line": [
        23
      ],
      "mod_code": [
        "else if ( check ( a [ 1 ] , a [ 0 ] ) && check ( a [ 2 ] ) )"
      ],
      "err_line": 23,
      "err_msg": "too few arguments to function ‘int check(int, int)’"
    },
    {
      "mod_line": [
        25
      ],
      "mod_code": [
        "else if ( check ( a [ 2 ] , a [ 0 ] ) && check ( a [ 2 ] ) )"
      ],
      "err_line": 25,
      "err_msg": "too few arguments to function ‘int check(int, int)’"
    },
    {
      "mod_line": [
        0
      ],
      "mod_code": [
        "int check ( int i , int j ) ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        1
      ],
      "mod_code": [
        "if ( i == l )"
      ],
      "err_line": 1,
      "err_msg": "‘l’ was not declared in this scope"
    },
    {
      "mod_line": [
        13
      ],
      "mod_code": [
        "string n ;"
      ],
      "err_line": 16,
      "err_msg": "‘s’ was not declared in this scope"
    },
    {
      "mod_line": [
        14
      ],
      "mod_code": [
        "int * s [ 3 ] ;"
      ],
      "err_line": 14,
      "err_msg": "conflicting declaration ‘int* s [3]’"
    },
    {
      "mod_line": [
        15
      ],
      "mod_code": [
        "for ( i = 0 ; i < 3 ; i ++ )"
      ],
      "err_line": 15,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        21
      ],
      "mod_code": [
        "if ( check ( a [ 0 ] , a [ 1 ] ) && check ( a [ 0 ] ) )"
      ],
      "err_line": 21,
      "err_msg": "too few arguments to function ‘int check(int, int)’"
    },
    {
      "mod_line": [
        23
      ],
      "mod_code": [
        "else if ( check ( a [ 1 ] , a [ 0 ] ) && check ( a [ 1 ] ) )"
      ],
      "err_line": 23,
      "err_msg": "too few arguments to function ‘int check(int, int)’"
    },
    {
      "mod_line": [
        25
      ],
      "mod_code": [
        "else if ( check ( a [ 2 ] , a [ 0 ] ) , check ( a [ 2 ] ) )"
      ],
      "err_line": 25,
      "err_msg": "too few arguments to function ‘int check(int, int)’"
    },
    {
      "mod_line": [
        14,
        21
      ],
      "mod_code": [
        "int s [ 3 ] ;",
        "if ( check ( a [ 0 ] , a [ 1 ] ) && check ( a [ 2 ] ) )"
      ],
      "err_line": 14,
      "err_msg": "conflicting declaration ‘int s [3]’"
    },
    {
      "mod_line": [
        14,
        21,
        23
      ],
      "mod_code": [
        "int s [ 3 ] ;",
        "if ( check ( a [ 0 ] , a [ 1 ] ) && check ( a [ 2 ] ) )",
        "else if ( check ( a [ 1 ] , a [ 0 ] ) && check ( a [ 2 ] ) )"
      ],
      "err_line": 14,
      "err_msg": "conflicting declaration ‘int s [3]’"
    },
    {
      "mod_line": [
        14,
        21,
        23,
        25
      ],
      "mod_code": [
        "int s [ 3 ] ;",
        "if ( check ( a [ 0 ] , a [ 1 ] ) && check ( a [ 2 ] ) )",
        "else if ( check ( a [ 1 ] , a [ 0 ] ) && check ( a [ 2 ] ) )",
        "else if ( check ( a [ 2 ] , a [ 0 ] ) && check ( a [ 2 ] ) )"
      ],
      "err_line": 14,
      "err_msg": "conflicting declaration ‘int s [3]’"
    },
    {
      "mod_line": [
        14,
        21,
        23,
        1
      ],
      "mod_code": [
        "int s [ 3 ] ;",
        "if ( check ( a [ 0 ] , a [ 1 ] ) && check ( a [ 2 ] ) )",
        "else if ( check ( a [ 1 ] , a [ 0 ] ) && check ( a [ 2 ] ) )",
        "if ( i == l )"
      ],
      "err_line": 1,
      "err_msg": "‘l’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        21,
        23,
        0
      ],
      "mod_code": [
        "int s [ 3 ] ;",
        "if ( check ( a [ 0 ] , a [ 1 ] ) && check ( a [ 2 ] ) )",
        "else if ( check ( a [ 1 ] , a [ 0 ] ) && check ( a [ 2 ] ) )",
        "int check ( int i , int j ) ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        14,
        21,
        25
      ],
      "mod_code": [
        "int s [ 3 ] ;",
        "if ( check ( a [ 0 ] , a [ 1 ] ) && check ( a [ 2 ] ) )",
        "else if ( check ( a [ 2 ] , a [ 0 ] ) && check ( a [ 2 ] ) )"
      ],
      "err_line": 14,
      "err_msg": "conflicting declaration ‘int s [3]’"
    },
    {
      "mod_line": [
        14,
        21,
        25,
        1
      ],
      "mod_code": [
        "int s [ 3 ] ;",
        "if ( check ( a [ 0 ] , a [ 1 ] ) && check ( a [ 2 ] ) )",
        "else if ( check ( a [ 2 ] , a [ 0 ] ) && check ( a [ 2 ] ) )",
        "if ( i == l )"
      ],
      "err_line": 1,
      "err_msg": "‘l’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        21,
        25,
        0
      ],
      "mod_code": [
        "int s [ 3 ] ;",
        "if ( check ( a [ 0 ] , a [ 1 ] ) && check ( a [ 2 ] ) )",
        "else if ( check ( a [ 2 ] , a [ 0 ] ) && check ( a [ 2 ] ) )",
        "int check ( int i , int j ) ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        14,
        21,
        1
      ],
      "mod_code": [
        "int s [ 3 ] ;",
        "if ( check ( a [ 0 ] , a [ 1 ] ) && check ( a [ 2 ] ) )",
        "if ( i == l )"
      ],
      "err_line": 1,
      "err_msg": "‘l’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        21,
        1,
        0
      ],
      "mod_code": [
        "int s [ 3 ] ;",
        "if ( check ( a [ 0 ] , a [ 1 ] ) && check ( a [ 2 ] ) )",
        "if ( i == l )",
        "int check ( int i , int j ) ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        14,
        21,
        0
      ],
      "mod_code": [
        "int s [ 3 ] ;",
        "if ( check ( a [ 0 ] , a [ 1 ] ) && check ( a [ 2 ] ) )",
        "int check ( int i , int j ) ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        14,
        23
      ],
      "mod_code": [
        "int s [ 3 ] ;",
        "else if ( check ( a [ 1 ] , a [ 0 ] ) && check ( a [ 2 ] ) )"
      ],
      "err_line": 14,
      "err_msg": "conflicting declaration ‘int s [3]’"
    },
    {
      "mod_line": [
        14,
        23,
        25
      ],
      "mod_code": [
        "int s [ 3 ] ;",
        "else if ( check ( a [ 1 ] , a [ 0 ] ) && check ( a [ 2 ] ) )",
        "else if ( check ( a [ 2 ] , a [ 0 ] ) && check ( a [ 2 ] ) )"
      ],
      "err_line": 14,
      "err_msg": "conflicting declaration ‘int s [3]’"
    },
    {
      "mod_line": [
        14,
        23,
        25,
        1
      ],
      "mod_code": [
        "int s [ 3 ] ;",
        "else if ( check ( a [ 1 ] , a [ 0 ] ) && check ( a [ 2 ] ) )",
        "else if ( check ( a [ 2 ] , a [ 0 ] ) && check ( a [ 2 ] ) )",
        "if ( i == l )"
      ],
      "err_line": 1,
      "err_msg": "‘l’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        23,
        25,
        0
      ],
      "mod_code": [
        "int s [ 3 ] ;",
        "else if ( check ( a [ 1 ] , a [ 0 ] ) && check ( a [ 2 ] ) )",
        "else if ( check ( a [ 2 ] , a [ 0 ] ) && check ( a [ 2 ] ) )",
        "int check ( int i , int j ) ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        14,
        23,
        1
      ],
      "mod_code": [
        "int s [ 3 ] ;",
        "else if ( check ( a [ 1 ] , a [ 0 ] ) && check ( a [ 2 ] ) )",
        "if ( i == l )"
      ],
      "err_line": 1,
      "err_msg": "‘l’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        23,
        1,
        0
      ],
      "mod_code": [
        "int s [ 3 ] ;",
        "else if ( check ( a [ 1 ] , a [ 0 ] ) && check ( a [ 2 ] ) )",
        "if ( i == l )",
        "int check ( int i , int j ) ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        14,
        23,
        0
      ],
      "mod_code": [
        "int s [ 3 ] ;",
        "else if ( check ( a [ 1 ] , a [ 0 ] ) && check ( a [ 2 ] ) )",
        "int check ( int i , int j ) ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        14,
        25
      ],
      "mod_code": [
        "int s [ 3 ] ;",
        "else if ( check ( a [ 2 ] , a [ 0 ] ) && check ( a [ 2 ] ) )"
      ],
      "err_line": 14,
      "err_msg": "conflicting declaration ‘int s [3]’"
    },
    {
      "mod_line": [
        14,
        25,
        1
      ],
      "mod_code": [
        "int s [ 3 ] ;",
        "else if ( check ( a [ 2 ] , a [ 0 ] ) && check ( a [ 2 ] ) )",
        "if ( i == l )"
      ],
      "err_line": 1,
      "err_msg": "‘l’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        25,
        1,
        0
      ],
      "mod_code": [
        "int s [ 3 ] ;",
        "else if ( check ( a [ 2 ] , a [ 0 ] ) && check ( a [ 2 ] ) )",
        "if ( i == l )",
        "int check ( int i , int j ) ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        14,
        25,
        0
      ],
      "mod_code": [
        "int s [ 3 ] ;",
        "else if ( check ( a [ 2 ] , a [ 0 ] ) && check ( a [ 2 ] ) )",
        "int check ( int i , int j ) ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        14,
        1
      ],
      "mod_code": [
        "int s [ 3 ] ;",
        "if ( i == l )"
      ],
      "err_line": 1,
      "err_msg": "‘l’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        1,
        0
      ],
      "mod_code": [
        "int s [ 3 ] ;",
        "if ( i == l )",
        "int check ( int i , int j ) ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        14,
        0
      ],
      "mod_code": [
        "int s [ 3 ] ;",
        "int check ( int i , int j ) ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        21,
        23
      ],
      "mod_code": [
        "if ( check ( a [ 0 ] , a [ 1 ] ) && check ( a [ 2 ] ) )",
        "else if ( check ( a [ 1 ] , a [ 0 ] ) && check ( a [ 2 ] ) )"
      ],
      "err_line": 21,
      "err_msg": "too few arguments to function ‘int check(int, int)’"
    },
    {
      "mod_line": [
        21,
        23,
        25
      ],
      "mod_code": [
        "if ( check ( a [ 0 ] , a [ 1 ] ) && check ( a [ 2 ] ) )",
        "else if ( check ( a [ 1 ] , a [ 0 ] ) && check ( a [ 2 ] ) )",
        "else if ( check ( a [ 2 ] , a [ 0 ] ) && check ( a [ 2 ] ) )"
      ],
      "err_line": 21,
      "err_msg": "too few arguments to function ‘int check(int, int)’"
    },
    {
      "mod_line": [
        21,
        23,
        25,
        1
      ],
      "mod_code": [
        "if ( check ( a [ 0 ] , a [ 1 ] ) && check ( a [ 2 ] ) )",
        "else if ( check ( a [ 1 ] , a [ 0 ] ) && check ( a [ 2 ] ) )",
        "else if ( check ( a [ 2 ] , a [ 0 ] ) && check ( a [ 2 ] ) )",
        "if ( i == l )"
      ],
      "err_line": 1,
      "err_msg": "‘l’ was not declared in this scope"
    },
    {
      "mod_line": [
        21,
        23,
        25,
        0
      ],
      "mod_code": [
        "if ( check ( a [ 0 ] , a [ 1 ] ) && check ( a [ 2 ] ) )",
        "else if ( check ( a [ 1 ] , a [ 0 ] ) && check ( a [ 2 ] ) )",
        "else if ( check ( a [ 2 ] , a [ 0 ] ) && check ( a [ 2 ] ) )",
        "int check ( int i , int j ) ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        21,
        23,
        1
      ],
      "mod_code": [
        "if ( check ( a [ 0 ] , a [ 1 ] ) && check ( a [ 2 ] ) )",
        "else if ( check ( a [ 1 ] , a [ 0 ] ) && check ( a [ 2 ] ) )",
        "if ( i == l )"
      ],
      "err_line": 1,
      "err_msg": "‘l’ was not declared in this scope"
    },
    {
      "mod_line": [
        21,
        23,
        1,
        0
      ],
      "mod_code": [
        "if ( check ( a [ 0 ] , a [ 1 ] ) && check ( a [ 2 ] ) )",
        "else if ( check ( a [ 1 ] , a [ 0 ] ) && check ( a [ 2 ] ) )",
        "if ( i == l )",
        "int check ( int i , int j ) ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        21,
        23,
        0
      ],
      "mod_code": [
        "if ( check ( a [ 0 ] , a [ 1 ] ) && check ( a [ 2 ] ) )",
        "else if ( check ( a [ 1 ] , a [ 0 ] ) && check ( a [ 2 ] ) )",
        "int check ( int i , int j ) ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        21,
        25
      ],
      "mod_code": [
        "if ( check ( a [ 0 ] , a [ 1 ] ) && check ( a [ 2 ] ) )",
        "else if ( check ( a [ 2 ] , a [ 0 ] ) && check ( a [ 2 ] ) )"
      ],
      "err_line": 21,
      "err_msg": "too few arguments to function ‘int check(int, int)’"
    },
    {
      "mod_line": [
        21,
        25,
        1
      ],
      "mod_code": [
        "if ( check ( a [ 0 ] , a [ 1 ] ) && check ( a [ 2 ] ) )",
        "else if ( check ( a [ 2 ] , a [ 0 ] ) && check ( a [ 2 ] ) )",
        "if ( i == l )"
      ],
      "err_line": 1,
      "err_msg": "‘l’ was not declared in this scope"
    },
    {
      "mod_line": [
        21,
        25,
        1,
        0
      ],
      "mod_code": [
        "if ( check ( a [ 0 ] , a [ 1 ] ) && check ( a [ 2 ] ) )",
        "else if ( check ( a [ 2 ] , a [ 0 ] ) && check ( a [ 2 ] ) )",
        "if ( i == l )",
        "int check ( int i , int j ) ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        21,
        25,
        0
      ],
      "mod_code": [
        "if ( check ( a [ 0 ] , a [ 1 ] ) && check ( a [ 2 ] ) )",
        "else if ( check ( a [ 2 ] , a [ 0 ] ) && check ( a [ 2 ] ) )",
        "int check ( int i , int j ) ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        21,
        1
      ],
      "mod_code": [
        "if ( check ( a [ 0 ] , a [ 1 ] ) && check ( a [ 2 ] ) )",
        "if ( i == l )"
      ],
      "err_line": 1,
      "err_msg": "‘l’ was not declared in this scope"
    },
    {
      "mod_line": [
        21,
        1,
        0
      ],
      "mod_code": [
        "if ( check ( a [ 0 ] , a [ 1 ] ) && check ( a [ 2 ] ) )",
        "if ( i == l )",
        "int check ( int i , int j ) ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        21,
        0
      ],
      "mod_code": [
        "if ( check ( a [ 0 ] , a [ 1 ] ) && check ( a [ 2 ] ) )",
        "int check ( int i , int j ) ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        23,
        25
      ],
      "mod_code": [
        "else if ( check ( a [ 1 ] , a [ 0 ] ) && check ( a [ 2 ] ) )",
        "else if ( check ( a [ 2 ] , a [ 0 ] ) && check ( a [ 2 ] ) )"
      ],
      "err_line": 23,
      "err_msg": "too few arguments to function ‘int check(int, int)’"
    },
    {
      "mod_line": [
        23,
        25,
        1
      ],
      "mod_code": [
        "else if ( check ( a [ 1 ] , a [ 0 ] ) && check ( a [ 2 ] ) )",
        "else if ( check ( a [ 2 ] , a [ 0 ] ) && check ( a [ 2 ] ) )",
        "if ( i == l )"
      ],
      "err_line": 1,
      "err_msg": "‘l’ was not declared in this scope"
    },
    {
      "mod_line": [
        23,
        25,
        1,
        0
      ],
      "mod_code": [
        "else if ( check ( a [ 1 ] , a [ 0 ] ) && check ( a [ 2 ] ) )",
        "else if ( check ( a [ 2 ] , a [ 0 ] ) && check ( a [ 2 ] ) )",
        "if ( i == l )",
        "int check ( int i , int j ) ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        23,
        25,
        0
      ],
      "mod_code": [
        "else if ( check ( a [ 1 ] , a [ 0 ] ) && check ( a [ 2 ] ) )",
        "else if ( check ( a [ 2 ] , a [ 0 ] ) && check ( a [ 2 ] ) )",
        "int check ( int i , int j ) ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        23,
        1
      ],
      "mod_code": [
        "else if ( check ( a [ 1 ] , a [ 0 ] ) && check ( a [ 2 ] ) )",
        "if ( i == l )"
      ],
      "err_line": 1,
      "err_msg": "‘l’ was not declared in this scope"
    },
    {
      "mod_line": [
        23,
        1,
        0
      ],
      "mod_code": [
        "else if ( check ( a [ 1 ] , a [ 0 ] ) && check ( a [ 2 ] ) )",
        "if ( i == l )",
        "int check ( int i , int j ) ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        23,
        0
      ],
      "mod_code": [
        "else if ( check ( a [ 1 ] , a [ 0 ] ) && check ( a [ 2 ] ) )",
        "int check ( int i , int j ) ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        25,
        1
      ],
      "mod_code": [
        "else if ( check ( a [ 2 ] , a [ 0 ] ) && check ( a [ 2 ] ) )",
        "if ( i == l )"
      ],
      "err_line": 1,
      "err_msg": "‘l’ was not declared in this scope"
    },
    {
      "mod_line": [
        25,
        1,
        0
      ],
      "mod_code": [
        "else if ( check ( a [ 2 ] , a [ 0 ] ) && check ( a [ 2 ] ) )",
        "if ( i == l )",
        "int check ( int i , int j ) ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        25,
        0
      ],
      "mod_code": [
        "else if ( check ( a [ 2 ] , a [ 0 ] ) && check ( a [ 2 ] ) )",
        "int check ( int i , int j ) ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        1,
        0
      ],
      "mod_code": [
        "if ( i == l )",
        "int check ( int i , int j ) ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    }
  ]
}