{
  "meta": {
    "index": 252,
    "hitid": "3W5PY7V3UP19A6WLLK0R1PWIV2GJY0",
    "workerid": "A2J7P30MA3S6OV",
    "probid": "879A",
    "subid": "45554804"
  },
  "lines": [
    {
      "line": 0,
      "text": "create int array s of length 1001",
      "code": "int s [ 1001 ] ;",
      "indent": 0
    },
    {
      "line": 1,
      "text": "d = int array of length 1001",
      "code": "int d [ 1001 ] ;",
      "indent": 0
    },
    {
      "line": 2,
      "text": "n = integer",
      "code": "int n ;",
      "indent": 0
    },
    {
      "line": 3,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 4,
      "text": "while read n",
      "code": "while ( cin >> n )",
      "indent": 1
    },
    {
      "line": 5,
      "text": "for i = 1 to n inclusive , read s [ i ] , d [ i ]",
      "code": "for ( int i = 1 ; i <= n ; i ++ ) { cin >> s [ i ] >> d [ i ] ; }",
      "indent": 2
    },
    {
      "line": 6,
      "text": "set min = s [ 1 ]",
      "code": "int min = s [ 1 ] ;",
      "indent": 2
    },
    {
      "line": 7,
      "text": "for i = 2 to n inclusive , increment i",
      "code": "for ( int i = 2 ; i <= n ; i ++ )",
      "indent": 2
    },
    {
      "line": 8,
      "text": "assign s [ i ] to Next",
      "code": "int Next = s [ i ] ;",
      "indent": 3
    },
    {
      "line": 9,
      "text": "while min > = Next , set Next to Next + d [ i ]",
      "code": "while ( min >= Next ) Next += d [ i ] ;",
      "indent": 3
    },
    {
      "line": 10,
      "text": "min = Next",
      "code": "min = Next ;",
      "indent": 3
    },
    {
      "line": 11,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 12,
      "text": "print min and a newline",
      "code": "cout << min << endl ;",
      "indent": 2
    },
    {
      "line": 13,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 14,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 15,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        6
      ],
      "mod_code": [
        "min = s [ 1 ] ;"
      ],
      "err_line": 6,
      "err_msg": "overloaded function with no contextual type information"
    },
    {
      "mod_line": [
        8
      ],
      "mod_code": [
        "Next = s [ i ] ;"
      ],
      "err_line": 8,
      "err_msg": "‘Next’ was not declared in this scope"
    },
    {
      "mod_line": [
        4
      ],
      "mod_code": [
        "while ( { cin >> n )"
      ],
      "err_line": 4,
      "err_msg": "expected primary-expression before ‘{’ token"
    },
    {
      "mod_line": [
        7
      ],
      "mod_code": [
        "for ( i = 2 ; i <= n ; i ++ )"
      ],
      "err_line": 7,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        8
      ],
      "mod_code": [
        "Next ^= s [ i ] ;"
      ],
      "err_line": 8,
      "err_msg": "‘Next’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        8
      ],
      "mod_code": [
        "min = s [ 1 ] ;",
        "Next = s [ i ] ;"
      ],
      "err_line": 6,
      "err_msg": "overloaded function with no contextual type information"
    },
    {
      "mod_line": [
        6,
        8,
        1
      ],
      "mod_code": [
        "min = s [ 1 ] ;",
        "Next = s [ i ] ;",
        "char d [ 1001 ] ;"
      ],
      "err_line": 6,
      "err_msg": "overloaded function with no contextual type information"
    },
    {
      "mod_line": [
        6,
        8,
        1,
        0
      ],
      "mod_code": [
        "min = s [ 1 ] ;",
        "Next = s [ i ] ;",
        "char d [ 1001 ] ;",
        "char s [ 1001 ] ;"
      ],
      "err_line": 6,
      "err_msg": "overloaded function with no contextual type information"
    },
    {
      "mod_line": [
        6,
        8,
        1,
        4
      ],
      "mod_code": [
        "min = s [ 1 ] ;",
        "Next = s [ i ] ;",
        "char d [ 1001 ] ;",
        "while ( { cin >> n )"
      ],
      "err_line": 4,
      "err_msg": "expected primary-expression before ‘{’ token"
    },
    {
      "mod_line": [
        6,
        8,
        1,
        10
      ],
      "mod_code": [
        "min = s [ 1 ] ;",
        "Next = s [ i ] ;",
        "char d [ 1001 ] ;",
        "int min = Next ;"
      ],
      "err_line": 6,
      "err_msg": "overloaded function with no contextual type information"
    },
    {
      "mod_line": [
        6,
        8,
        0
      ],
      "mod_code": [
        "min = s [ 1 ] ;",
        "Next = s [ i ] ;",
        "char s [ 1001 ] ;"
      ],
      "err_line": 6,
      "err_msg": "overloaded function with no contextual type information"
    },
    {
      "mod_line": [
        6,
        8,
        0,
        4
      ],
      "mod_code": [
        "min = s [ 1 ] ;",
        "Next = s [ i ] ;",
        "char s [ 1001 ] ;",
        "while ( { cin >> n )"
      ],
      "err_line": 4,
      "err_msg": "expected primary-expression before ‘{’ token"
    },
    {
      "mod_line": [
        6,
        8,
        0,
        10
      ],
      "mod_code": [
        "min = s [ 1 ] ;",
        "Next = s [ i ] ;",
        "char s [ 1001 ] ;",
        "int min = Next ;"
      ],
      "err_line": 6,
      "err_msg": "overloaded function with no contextual type information"
    },
    {
      "mod_line": [
        6,
        8,
        4
      ],
      "mod_code": [
        "min = s [ 1 ] ;",
        "Next = s [ i ] ;",
        "while ( { cin >> n )"
      ],
      "err_line": 4,
      "err_msg": "expected primary-expression before ‘{’ token"
    },
    {
      "mod_line": [
        6,
        8,
        4,
        10
      ],
      "mod_code": [
        "min = s [ 1 ] ;",
        "Next = s [ i ] ;",
        "while ( { cin >> n )",
        "int min = Next ;"
      ],
      "err_line": 4,
      "err_msg": "expected primary-expression before ‘{’ token"
    },
    {
      "mod_line": [
        6,
        8,
        10
      ],
      "mod_code": [
        "min = s [ 1 ] ;",
        "Next = s [ i ] ;",
        "int min = Next ;"
      ],
      "err_line": 6,
      "err_msg": "overloaded function with no contextual type information"
    },
    {
      "mod_line": [
        6,
        1
      ],
      "mod_code": [
        "min = s [ 1 ] ;",
        "char d [ 1001 ] ;"
      ],
      "err_line": 6,
      "err_msg": "overloaded function with no contextual type information"
    },
    {
      "mod_line": [
        6,
        1,
        0
      ],
      "mod_code": [
        "min = s [ 1 ] ;",
        "char d [ 1001 ] ;",
        "char s [ 1001 ] ;"
      ],
      "err_line": 6,
      "err_msg": "overloaded function with no contextual type information"
    },
    {
      "mod_line": [
        6,
        1,
        0,
        4
      ],
      "mod_code": [
        "min = s [ 1 ] ;",
        "char d [ 1001 ] ;",
        "char s [ 1001 ] ;",
        "while ( { cin >> n )"
      ],
      "err_line": 4,
      "err_msg": "expected primary-expression before ‘{’ token"
    },
    {
      "mod_line": [
        6,
        1,
        0,
        10
      ],
      "mod_code": [
        "min = s [ 1 ] ;",
        "char d [ 1001 ] ;",
        "char s [ 1001 ] ;",
        "int min = Next ;"
      ],
      "err_line": 6,
      "err_msg": "overloaded function with no contextual type information"
    },
    {
      "mod_line": [
        6,
        1,
        4
      ],
      "mod_code": [
        "min = s [ 1 ] ;",
        "char d [ 1001 ] ;",
        "while ( { cin >> n )"
      ],
      "err_line": 4,
      "err_msg": "expected primary-expression before ‘{’ token"
    },
    {
      "mod_line": [
        6,
        1,
        4,
        10
      ],
      "mod_code": [
        "min = s [ 1 ] ;",
        "char d [ 1001 ] ;",
        "while ( { cin >> n )",
        "int min = Next ;"
      ],
      "err_line": 4,
      "err_msg": "expected primary-expression before ‘{’ token"
    },
    {
      "mod_line": [
        6,
        1,
        10
      ],
      "mod_code": [
        "min = s [ 1 ] ;",
        "char d [ 1001 ] ;",
        "int min = Next ;"
      ],
      "err_line": 6,
      "err_msg": "overloaded function with no contextual type information"
    },
    {
      "mod_line": [
        6,
        0
      ],
      "mod_code": [
        "min = s [ 1 ] ;",
        "char s [ 1001 ] ;"
      ],
      "err_line": 6,
      "err_msg": "overloaded function with no contextual type information"
    },
    {
      "mod_line": [
        6,
        0,
        4
      ],
      "mod_code": [
        "min = s [ 1 ] ;",
        "char s [ 1001 ] ;",
        "while ( { cin >> n )"
      ],
      "err_line": 4,
      "err_msg": "expected primary-expression before ‘{’ token"
    },
    {
      "mod_line": [
        6,
        0,
        4,
        10
      ],
      "mod_code": [
        "min = s [ 1 ] ;",
        "char s [ 1001 ] ;",
        "while ( { cin >> n )",
        "int min = Next ;"
      ],
      "err_line": 4,
      "err_msg": "expected primary-expression before ‘{’ token"
    },
    {
      "mod_line": [
        6,
        0,
        10
      ],
      "mod_code": [
        "min = s [ 1 ] ;",
        "char s [ 1001 ] ;",
        "int min = Next ;"
      ],
      "err_line": 6,
      "err_msg": "overloaded function with no contextual type information"
    },
    {
      "mod_line": [
        6,
        4
      ],
      "mod_code": [
        "min = s [ 1 ] ;",
        "while ( { cin >> n )"
      ],
      "err_line": 4,
      "err_msg": "expected primary-expression before ‘{’ token"
    },
    {
      "mod_line": [
        6,
        4,
        10
      ],
      "mod_code": [
        "min = s [ 1 ] ;",
        "while ( { cin >> n )",
        "int min = Next ;"
      ],
      "err_line": 4,
      "err_msg": "expected primary-expression before ‘{’ token"
    },
    {
      "mod_line": [
        6,
        10
      ],
      "mod_code": [
        "min = s [ 1 ] ;",
        "int min = Next ;"
      ],
      "err_line": 6,
      "err_msg": "overloaded function with no contextual type information"
    },
    {
      "mod_line": [
        8,
        1
      ],
      "mod_code": [
        "Next = s [ i ] ;",
        "char d [ 1001 ] ;"
      ],
      "err_line": 8,
      "err_msg": "‘Next’ was not declared in this scope"
    },
    {
      "mod_line": [
        8,
        1,
        0
      ],
      "mod_code": [
        "Next = s [ i ] ;",
        "char d [ 1001 ] ;",
        "char s [ 1001 ] ;"
      ],
      "err_line": 8,
      "err_msg": "‘Next’ was not declared in this scope"
    },
    {
      "mod_line": [
        8,
        1,
        0,
        4
      ],
      "mod_code": [
        "Next = s [ i ] ;",
        "char d [ 1001 ] ;",
        "char s [ 1001 ] ;",
        "while ( { cin >> n )"
      ],
      "err_line": 4,
      "err_msg": "expected primary-expression before ‘{’ token"
    },
    {
      "mod_line": [
        8,
        1,
        0,
        10
      ],
      "mod_code": [
        "Next = s [ i ] ;",
        "char d [ 1001 ] ;",
        "char s [ 1001 ] ;",
        "int min = Next ;"
      ],
      "err_line": 8,
      "err_msg": "‘Next’ was not declared in this scope"
    },
    {
      "mod_line": [
        8,
        1,
        4
      ],
      "mod_code": [
        "Next = s [ i ] ;",
        "char d [ 1001 ] ;",
        "while ( { cin >> n )"
      ],
      "err_line": 4,
      "err_msg": "expected primary-expression before ‘{’ token"
    },
    {
      "mod_line": [
        8,
        1,
        4,
        10
      ],
      "mod_code": [
        "Next = s [ i ] ;",
        "char d [ 1001 ] ;",
        "while ( { cin >> n )",
        "int min = Next ;"
      ],
      "err_line": 4,
      "err_msg": "expected primary-expression before ‘{’ token"
    },
    {
      "mod_line": [
        8,
        1,
        10
      ],
      "mod_code": [
        "Next = s [ i ] ;",
        "char d [ 1001 ] ;",
        "int min = Next ;"
      ],
      "err_line": 8,
      "err_msg": "‘Next’ was not declared in this scope"
    },
    {
      "mod_line": [
        8,
        0
      ],
      "mod_code": [
        "Next = s [ i ] ;",
        "char s [ 1001 ] ;"
      ],
      "err_line": 8,
      "err_msg": "‘Next’ was not declared in this scope"
    },
    {
      "mod_line": [
        8,
        0,
        4
      ],
      "mod_code": [
        "Next = s [ i ] ;",
        "char s [ 1001 ] ;",
        "while ( { cin >> n )"
      ],
      "err_line": 4,
      "err_msg": "expected primary-expression before ‘{’ token"
    },
    {
      "mod_line": [
        8,
        0,
        4,
        10
      ],
      "mod_code": [
        "Next = s [ i ] ;",
        "char s [ 1001 ] ;",
        "while ( { cin >> n )",
        "int min = Next ;"
      ],
      "err_line": 4,
      "err_msg": "expected primary-expression before ‘{’ token"
    },
    {
      "mod_line": [
        8,
        0,
        10
      ],
      "mod_code": [
        "Next = s [ i ] ;",
        "char s [ 1001 ] ;",
        "int min = Next ;"
      ],
      "err_line": 8,
      "err_msg": "‘Next’ was not declared in this scope"
    },
    {
      "mod_line": [
        8,
        4
      ],
      "mod_code": [
        "Next = s [ i ] ;",
        "while ( { cin >> n )"
      ],
      "err_line": 4,
      "err_msg": "expected primary-expression before ‘{’ token"
    },
    {
      "mod_line": [
        8,
        4,
        10
      ],
      "mod_code": [
        "Next = s [ i ] ;",
        "while ( { cin >> n )",
        "int min = Next ;"
      ],
      "err_line": 4,
      "err_msg": "expected primary-expression before ‘{’ token"
    },
    {
      "mod_line": [
        8,
        10
      ],
      "mod_code": [
        "Next = s [ i ] ;",
        "int min = Next ;"
      ],
      "err_line": 8,
      "err_msg": "‘Next’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        0,
        4
      ],
      "mod_code": [
        "char d [ 1001 ] ;",
        "char s [ 1001 ] ;",
        "while ( { cin >> n )"
      ],
      "err_line": 4,
      "err_msg": "expected primary-expression before ‘{’ token"
    },
    {
      "mod_line": [
        1,
        0,
        4,
        10
      ],
      "mod_code": [
        "char d [ 1001 ] ;",
        "char s [ 1001 ] ;",
        "while ( { cin >> n )",
        "int min = Next ;"
      ],
      "err_line": 4,
      "err_msg": "expected primary-expression before ‘{’ token"
    },
    {
      "mod_line": [
        1,
        4
      ],
      "mod_code": [
        "char d [ 1001 ] ;",
        "while ( { cin >> n )"
      ],
      "err_line": 4,
      "err_msg": "expected primary-expression before ‘{’ token"
    },
    {
      "mod_line": [
        1,
        4,
        10
      ],
      "mod_code": [
        "char d [ 1001 ] ;",
        "while ( { cin >> n )",
        "int min = Next ;"
      ],
      "err_line": 4,
      "err_msg": "expected primary-expression before ‘{’ token"
    },
    {
      "mod_line": [
        0,
        4
      ],
      "mod_code": [
        "char s [ 1001 ] ;",
        "while ( { cin >> n )"
      ],
      "err_line": 4,
      "err_msg": "expected primary-expression before ‘{’ token"
    },
    {
      "mod_line": [
        0,
        4,
        10
      ],
      "mod_code": [
        "char s [ 1001 ] ;",
        "while ( { cin >> n )",
        "int min = Next ;"
      ],
      "err_line": 4,
      "err_msg": "expected primary-expression before ‘{’ token"
    },
    {
      "mod_line": [
        4,
        10
      ],
      "mod_code": [
        "while ( { cin >> n )",
        "int min = Next ;"
      ],
      "err_line": 4,
      "err_msg": "expected primary-expression before ‘{’ token"
    }
  ]
}