{
  "meta": {
    "index": 844,
    "hitid": "3G5RUKN2ECXQSVFYS603VFK8VDY9N3",
    "workerid": "A1APYLD4DUK33J",
    "probid": "322A",
    "subid": "42426406"
  },
  "lines": [
    {
      "line": 0,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 1,
      "text": "create integers n , m",
      "code": "int n , m ;",
      "indent": 1
    },
    {
      "line": 2,
      "text": "read n read m",
      "code": "cin >> n >> m ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "create integer k with k = n + m - 1",
      "code": "int k = n + m - 1 ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "print k print newline",
      "code": "cout << k << endl ;",
      "indent": 1
    },
    {
      "line": 5,
      "text": "create integer array b with size n",
      "code": "int b [ n ] ;",
      "indent": 1
    },
    {
      "line": 6,
      "text": "create integer array g with size m",
      "code": "int g [ m ] ;",
      "indent": 1
    },
    {
      "line": 7,
      "text": "for i = 0 to n exclusive , set b [ i ] to i + 1",
      "code": "for ( int i = 0 ; i < n ; i ++ ) { b [ i ] = i + 1 ; }",
      "indent": 1
    },
    {
      "line": 8,
      "text": "for i = 0 to m exclusive , set g [ i ] to i + 1",
      "code": "for ( int i = 0 ; i < m ; i ++ ) { g [ i ] = i + 1 ; }",
      "indent": 1
    },
    {
      "line": 9,
      "text": "for i = 0 to m exclusive , print b [ 0 ] print \" \" print g [ i ] print newline",
      "code": "for ( int i = 0 ; i < m ; i ++ ) { cout << b [ 0 ] << \" \" << g [ i ] << endl ; }",
      "indent": 1
    },
    {
      "line": 10,
      "text": "for i = 1 to n exclusive , print b [ i ] print \" \" print g [ 0 ] print newline",
      "code": "for ( int i = 1 ; i < n ; i ++ ) { cout << b [ i ] << \" \" << g [ 0 ] << endl ; }",
      "indent": 1
    },
    {
      "line": 11,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 12,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        2
      ],
      "mod_code": [
        "cin >> n read m ;"
      ],
      "err_line": 2,
      "err_msg": "expected ‘;’ before ‘read’"
    },
    {
      "mod_line": [
        5
      ],
      "mod_code": [
        "int * b [ n ] ;"
      ],
      "err_line": 7,
      "err_msg": "invalid conversion from ‘int’ to ‘int*’ [-fpermissive]"
    },
    {
      "mod_line": [
        6
      ],
      "mod_code": [
        "int * g [ m ] ;"
      ],
      "err_line": 8,
      "err_msg": "invalid conversion from ‘int’ to ‘int*’ [-fpermissive]"
    },
    {
      "mod_line": [
        5,
        6
      ],
      "mod_code": [
        "int * b [ n ] ;",
        "int * g [ m ] ;"
      ],
      "err_line": 7,
      "err_msg": "invalid conversion from ‘int’ to ‘int*’ [-fpermissive]"
    },
    {
      "mod_line": [
        5,
        6,
        2
      ],
      "mod_code": [
        "int * b [ n ] ;",
        "int * g [ m ] ;",
        "cin >> n read m ;"
      ],
      "err_line": 2,
      "err_msg": "expected ‘;’ before ‘read’"
    },
    {
      "mod_line": [
        5,
        2
      ],
      "mod_code": [
        "int * b [ n ] ;",
        "cin >> n read m ;"
      ],
      "err_line": 2,
      "err_msg": "expected ‘;’ before ‘read’"
    },
    {
      "mod_line": [
        6,
        2
      ],
      "mod_code": [
        "int * g [ m ] ;",
        "cin >> n read m ;"
      ],
      "err_line": 2,
      "err_msg": "expected ‘;’ before ‘read’"
    }
  ]
}