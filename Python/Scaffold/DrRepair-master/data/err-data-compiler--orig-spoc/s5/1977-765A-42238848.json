{
  "meta": {
    "index": 1977,
    "hitid": "3UUSLRKAULXDS00SOFOGLEH8N677DH",
    "workerid": "A1APYLD4DUK33J",
    "probid": "765A",
    "subid": "42238848"
  },
  "lines": [
    {
      "line": 0,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 1,
      "text": "declare integer ans = 0",
      "code": "int ans = 0 ;",
      "indent": 1
    },
    {
      "line": 2,
      "text": "declare integer n",
      "code": "int n ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "read n",
      "code": "cin >> n ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "declare string s",
      "code": "string s ;",
      "indent": 1
    },
    {
      "line": 5,
      "text": "read s",
      "code": "cin >> s ;",
      "indent": 1
    },
    {
      "line": 6,
      "text": "while decrement n is true",
      "code": "while ( n -- )",
      "indent": 1
    },
    {
      "line": 7,
      "text": "declare strings ss , str",
      "code": "string ss , str ;",
      "indent": 2
    },
    {
      "line": 8,
      "text": "read ss",
      "code": "cin >> ss ;",
      "indent": 2
    },
    {
      "line": 9,
      "text": "declare integer i",
      "code": "int i ;",
      "indent": 2
    },
    {
      "line": 10,
      "text": "for i = 0 to ss [ i ] is not ' - ' , increment str by ss [ i ]",
      "code": "for ( i = 0 ; ss [ i ] != ' - ' ; i ++ ) str += ss [ i ] ;",
      "indent": 2
    },
    {
      "line": 11,
      "text": "if str is s",
      "code": "if ( str == s )",
      "indent": 2
    },
    {
      "line": 12,
      "text": "increment ans",
      "code": "ans ++ ;",
      "indent": 3
    },
    {
      "line": 13,
      "text": "else",
      "code": "else",
      "indent": 2
    },
    {
      "line": 14,
      "text": "remove all elements from str",
      "code": "str . clear ( ) ;",
      "indent": 3
    },
    {
      "line": 15,
      "text": "increment i by 2",
      "code": "i += 2 ;",
      "indent": 3
    },
    {
      "line": 16,
      "text": "for ss [ i ] is not ' \\ 0 ' , incrementing i , increment str by ss [ i ]",
      "code": "for ( ; ss [ i ] != ' \\0 ' ; i ++ ) str += ss [ i ] ;",
      "indent": 3
    },
    {
      "line": 17,
      "text": "if str is s , increment ans",
      "code": "if ( str == s ) ans ++ ;",
      "indent": 3
    },
    {
      "line": 18,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 19,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 20,
      "text": "if ans % 2",
      "code": "if ( ans % 2 )",
      "indent": 1
    },
    {
      "line": 21,
      "text": "print \" contest \" and newline",
      "code": "cout << \" contest \" << endl ;",
      "indent": 2
    },
    {
      "line": 22,
      "text": "else",
      "code": "else",
      "indent": 1
    },
    {
      "line": 23,
      "text": "print \" home \" and newline",
      "code": "cout << \" home \" << endl ;",
      "indent": 2
    },
    {
      "line": 24,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 25,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        3
      ],
      "mod_code": [
        "while ( cin >> n )"
      ],
      "err_line": 5,
      "err_msg": "‘s’ was not declared in this scope"
    },
    {
      "mod_line": [
        4
      ],
      "mod_code": [
        "string n ;"
      ],
      "err_line": 4,
      "err_msg": "conflicting declaration ‘std::__cxx11::string n’"
    },
    {
      "mod_line": [
        7
      ],
      "mod_code": [
        "strings , str ;"
      ],
      "err_line": 7,
      "err_msg": "‘strings’ was not declared in this scope"
    },
    {
      "mod_line": [
        8
      ],
      "mod_code": [
        "ss >> ss ;"
      ],
      "err_line": 8,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        11
      ],
      "mod_code": [
        "if ( str == ' s ' )"
      ],
      "err_line": 11,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        14
      ],
      "mod_code": [
        "str . remove ( str . begin ( ) , str . end ( ) ) ;"
      ],
      "err_line": 14,
      "err_msg": "‘std::__cxx11::string {aka class std::__cxx11::basic_string<char>}’ has no member named ‘remove’"
    },
    {
      "mod_line": [
        16
      ],
      "mod_code": [
        "for ( ss [ i ] != ' \\0 ' ; i ++ ) { str += ss [ i ] ; }"
      ],
      "err_line": 16,
      "err_msg": "expected ‘;’ before ‘)’ token"
    },
    {
      "mod_line": [
        10,
        4
      ],
      "mod_code": [
        "for ( int i = 0 ; ss [ i ] != ' - ' ; i ++ ) { str += ss [ i ] ; }",
        "string n ;"
      ],
      "err_line": 4,
      "err_msg": "conflicting declaration ‘std::__cxx11::string n’"
    },
    {
      "mod_line": [
        10,
        4,
        20
      ],
      "mod_code": [
        "for ( int i = 0 ; ss [ i ] != ' - ' ; i ++ ) { str += ss [ i ] ; }",
        "string n ;",
        "if ( ans % 2 == 0 )"
      ],
      "err_line": 4,
      "err_msg": "conflicting declaration ‘std::__cxx11::string n’"
    },
    {
      "mod_line": [
        10,
        4,
        20,
        16
      ],
      "mod_code": [
        "for ( int i = 0 ; ss [ i ] != ' - ' ; i ++ ) { str += ss [ i ] ; }",
        "string n ;",
        "if ( ans % 2 == 0 )",
        "for ( ss [ i ] != ' \\0 ' ; i ++ ) { str += ss [ i ] ; }"
      ],
      "err_line": 4,
      "err_msg": "conflicting declaration ‘std::__cxx11::string n’"
    },
    {
      "mod_line": [
        10,
        4,
        20,
        8
      ],
      "mod_code": [
        "for ( int i = 0 ; ss [ i ] != ' - ' ; i ++ ) { str += ss [ i ] ; }",
        "string n ;",
        "if ( ans % 2 == 0 )",
        "ss >> ss ;"
      ],
      "err_line": 4,
      "err_msg": "conflicting declaration ‘std::__cxx11::string n’"
    },
    {
      "mod_line": [
        10,
        4,
        16
      ],
      "mod_code": [
        "for ( int i = 0 ; ss [ i ] != ' - ' ; i ++ ) { str += ss [ i ] ; }",
        "string n ;",
        "for ( ss [ i ] != ' \\0 ' ; i ++ ) { str += ss [ i ] ; }"
      ],
      "err_line": 4,
      "err_msg": "conflicting declaration ‘std::__cxx11::string n’"
    },
    {
      "mod_line": [
        10,
        4,
        16,
        8
      ],
      "mod_code": [
        "for ( int i = 0 ; ss [ i ] != ' - ' ; i ++ ) { str += ss [ i ] ; }",
        "string n ;",
        "for ( ss [ i ] != ' \\0 ' ; i ++ ) { str += ss [ i ] ; }",
        "ss >> ss ;"
      ],
      "err_line": 4,
      "err_msg": "conflicting declaration ‘std::__cxx11::string n’"
    },
    {
      "mod_line": [
        10,
        4,
        8
      ],
      "mod_code": [
        "for ( int i = 0 ; ss [ i ] != ' - ' ; i ++ ) { str += ss [ i ] ; }",
        "string n ;",
        "ss >> ss ;"
      ],
      "err_line": 4,
      "err_msg": "conflicting declaration ‘std::__cxx11::string n’"
    },
    {
      "mod_line": [
        10,
        20,
        16
      ],
      "mod_code": [
        "for ( int i = 0 ; ss [ i ] != ' - ' ; i ++ ) { str += ss [ i ] ; }",
        "if ( ans % 2 == 0 )",
        "for ( ss [ i ] != ' \\0 ' ; i ++ ) { str += ss [ i ] ; }"
      ],
      "err_line": 16,
      "err_msg": "expected ‘;’ before ‘)’ token"
    },
    {
      "mod_line": [
        10,
        20,
        16,
        8
      ],
      "mod_code": [
        "for ( int i = 0 ; ss [ i ] != ' - ' ; i ++ ) { str += ss [ i ] ; }",
        "if ( ans % 2 == 0 )",
        "for ( ss [ i ] != ' \\0 ' ; i ++ ) { str += ss [ i ] ; }",
        "ss >> ss ;"
      ],
      "err_line": 8,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        10,
        20,
        8
      ],
      "mod_code": [
        "for ( int i = 0 ; ss [ i ] != ' - ' ; i ++ ) { str += ss [ i ] ; }",
        "if ( ans % 2 == 0 )",
        "ss >> ss ;"
      ],
      "err_line": 8,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        10,
        16
      ],
      "mod_code": [
        "for ( int i = 0 ; ss [ i ] != ' - ' ; i ++ ) { str += ss [ i ] ; }",
        "for ( ss [ i ] != ' \\0 ' ; i ++ ) { str += ss [ i ] ; }"
      ],
      "err_line": 16,
      "err_msg": "expected ‘;’ before ‘)’ token"
    },
    {
      "mod_line": [
        10,
        16,
        8
      ],
      "mod_code": [
        "for ( int i = 0 ; ss [ i ] != ' - ' ; i ++ ) { str += ss [ i ] ; }",
        "for ( ss [ i ] != ' \\0 ' ; i ++ ) { str += ss [ i ] ; }",
        "ss >> ss ;"
      ],
      "err_line": 8,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        10,
        8
      ],
      "mod_code": [
        "for ( int i = 0 ; ss [ i ] != ' - ' ; i ++ ) { str += ss [ i ] ; }",
        "ss >> ss ;"
      ],
      "err_line": 8,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        4,
        10
      ],
      "mod_code": [
        "string n ;",
        "for ( int i = 0 ; ss [ i ] != ' - ' ; i ++ ) str += ss [ i ] ;"
      ],
      "err_line": 4,
      "err_msg": "conflicting declaration ‘std::__cxx11::string n’"
    },
    {
      "mod_line": [
        4,
        10,
        20
      ],
      "mod_code": [
        "string n ;",
        "for ( int i = 0 ; ss [ i ] != ' - ' ; i ++ ) str += ss [ i ] ;",
        "if ( ans % 2 == 0 )"
      ],
      "err_line": 4,
      "err_msg": "conflicting declaration ‘std::__cxx11::string n’"
    },
    {
      "mod_line": [
        4,
        10,
        20,
        16
      ],
      "mod_code": [
        "string n ;",
        "for ( int i = 0 ; ss [ i ] != ' - ' ; i ++ ) str += ss [ i ] ;",
        "if ( ans % 2 == 0 )",
        "for ( ss [ i ] != ' \\0 ' ; i ++ ) { str += ss [ i ] ; }"
      ],
      "err_line": 4,
      "err_msg": "conflicting declaration ‘std::__cxx11::string n’"
    },
    {
      "mod_line": [
        4,
        10,
        20,
        8
      ],
      "mod_code": [
        "string n ;",
        "for ( int i = 0 ; ss [ i ] != ' - ' ; i ++ ) str += ss [ i ] ;",
        "if ( ans % 2 == 0 )",
        "ss >> ss ;"
      ],
      "err_line": 4,
      "err_msg": "conflicting declaration ‘std::__cxx11::string n’"
    },
    {
      "mod_line": [
        4,
        10,
        16
      ],
      "mod_code": [
        "string n ;",
        "for ( int i = 0 ; ss [ i ] != ' - ' ; i ++ ) str += ss [ i ] ;",
        "for ( ss [ i ] != ' \\0 ' ; i ++ ) { str += ss [ i ] ; }"
      ],
      "err_line": 4,
      "err_msg": "conflicting declaration ‘std::__cxx11::string n’"
    },
    {
      "mod_line": [
        4,
        10,
        16,
        8
      ],
      "mod_code": [
        "string n ;",
        "for ( int i = 0 ; ss [ i ] != ' - ' ; i ++ ) str += ss [ i ] ;",
        "for ( ss [ i ] != ' \\0 ' ; i ++ ) { str += ss [ i ] ; }",
        "ss >> ss ;"
      ],
      "err_line": 4,
      "err_msg": "conflicting declaration ‘std::__cxx11::string n’"
    },
    {
      "mod_line": [
        4,
        10,
        8
      ],
      "mod_code": [
        "string n ;",
        "for ( int i = 0 ; ss [ i ] != ' - ' ; i ++ ) str += ss [ i ] ;",
        "ss >> ss ;"
      ],
      "err_line": 4,
      "err_msg": "conflicting declaration ‘std::__cxx11::string n’"
    },
    {
      "mod_line": [
        4,
        20
      ],
      "mod_code": [
        "string n ;",
        "if ( ans % 2 == 0 )"
      ],
      "err_line": 4,
      "err_msg": "conflicting declaration ‘std::__cxx11::string n’"
    },
    {
      "mod_line": [
        4,
        20,
        16
      ],
      "mod_code": [
        "string n ;",
        "if ( ans % 2 == 0 )",
        "for ( ss [ i ] != ' \\0 ' ; i ++ ) { str += ss [ i ] ; }"
      ],
      "err_line": 4,
      "err_msg": "conflicting declaration ‘std::__cxx11::string n’"
    },
    {
      "mod_line": [
        4,
        20,
        16,
        8
      ],
      "mod_code": [
        "string n ;",
        "if ( ans % 2 == 0 )",
        "for ( ss [ i ] != ' \\0 ' ; i ++ ) { str += ss [ i ] ; }",
        "ss >> ss ;"
      ],
      "err_line": 4,
      "err_msg": "conflicting declaration ‘std::__cxx11::string n’"
    },
    {
      "mod_line": [
        4,
        20,
        8
      ],
      "mod_code": [
        "string n ;",
        "if ( ans % 2 == 0 )",
        "ss >> ss ;"
      ],
      "err_line": 4,
      "err_msg": "conflicting declaration ‘std::__cxx11::string n’"
    },
    {
      "mod_line": [
        4,
        16
      ],
      "mod_code": [
        "string n ;",
        "for ( ss [ i ] != ' \\0 ' ; i ++ ) { str += ss [ i ] ; }"
      ],
      "err_line": 4,
      "err_msg": "conflicting declaration ‘std::__cxx11::string n’"
    },
    {
      "mod_line": [
        4,
        16,
        8
      ],
      "mod_code": [
        "string n ;",
        "for ( ss [ i ] != ' \\0 ' ; i ++ ) { str += ss [ i ] ; }",
        "ss >> ss ;"
      ],
      "err_line": 4,
      "err_msg": "conflicting declaration ‘std::__cxx11::string n’"
    },
    {
      "mod_line": [
        4,
        8
      ],
      "mod_code": [
        "string n ;",
        "ss >> ss ;"
      ],
      "err_line": 4,
      "err_msg": "conflicting declaration ‘std::__cxx11::string n’"
    },
    {
      "mod_line": [
        10,
        20,
        16
      ],
      "mod_code": [
        "for ( int i = 0 ; ss [ i ] != ' - ' ; i ++ ) str += ss [ i ] ;",
        "if ( ans % 2 == 0 )",
        "for ( ss [ i ] != ' \\0 ' ; i ++ ) { str += ss [ i ] ; }"
      ],
      "err_line": 16,
      "err_msg": "expected ‘;’ before ‘)’ token"
    },
    {
      "mod_line": [
        10,
        20,
        16,
        8
      ],
      "mod_code": [
        "for ( int i = 0 ; ss [ i ] != ' - ' ; i ++ ) str += ss [ i ] ;",
        "if ( ans % 2 == 0 )",
        "for ( ss [ i ] != ' \\0 ' ; i ++ ) { str += ss [ i ] ; }",
        "ss >> ss ;"
      ],
      "err_line": 8,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        10,
        20,
        8
      ],
      "mod_code": [
        "for ( int i = 0 ; ss [ i ] != ' - ' ; i ++ ) str += ss [ i ] ;",
        "if ( ans % 2 == 0 )",
        "ss >> ss ;"
      ],
      "err_line": 8,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        10,
        16
      ],
      "mod_code": [
        "for ( int i = 0 ; ss [ i ] != ' - ' ; i ++ ) str += ss [ i ] ;",
        "for ( ss [ i ] != ' \\0 ' ; i ++ ) { str += ss [ i ] ; }"
      ],
      "err_line": 16,
      "err_msg": "expected ‘;’ before ‘)’ token"
    },
    {
      "mod_line": [
        10,
        16,
        8
      ],
      "mod_code": [
        "for ( int i = 0 ; ss [ i ] != ' - ' ; i ++ ) str += ss [ i ] ;",
        "for ( ss [ i ] != ' \\0 ' ; i ++ ) { str += ss [ i ] ; }",
        "ss >> ss ;"
      ],
      "err_line": 8,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        10,
        8
      ],
      "mod_code": [
        "for ( int i = 0 ; ss [ i ] != ' - ' ; i ++ ) str += ss [ i ] ;",
        "ss >> ss ;"
      ],
      "err_line": 8,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        20,
        16
      ],
      "mod_code": [
        "if ( ans % 2 == 0 )",
        "for ( ss [ i ] != ' \\0 ' ; i ++ ) { str += ss [ i ] ; }"
      ],
      "err_line": 16,
      "err_msg": "expected ‘;’ before ‘)’ token"
    },
    {
      "mod_line": [
        20,
        16,
        8
      ],
      "mod_code": [
        "if ( ans % 2 == 0 )",
        "for ( ss [ i ] != ' \\0 ' ; i ++ ) { str += ss [ i ] ; }",
        "ss >> ss ;"
      ],
      "err_line": 8,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        20,
        8
      ],
      "mod_code": [
        "if ( ans % 2 == 0 )",
        "ss >> ss ;"
      ],
      "err_line": 8,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        16,
        8
      ],
      "mod_code": [
        "for ( ss [ i ] != ' \\0 ' ; i ++ ) { str += ss [ i ] ; }",
        "ss >> ss ;"
      ],
      "err_line": 8,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    }
  ]
}