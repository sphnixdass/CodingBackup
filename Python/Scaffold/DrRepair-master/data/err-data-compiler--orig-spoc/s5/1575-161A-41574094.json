{
  "meta": {
    "index": 1575,
    "hitid": "3CVDZS288HUTBNLBJRLVSWHJU8DFM6",
    "workerid": "A1NBHCFZKJGHKW",
    "probid": "161A",
    "subid": "41574094"
  },
  "lines": [
    {
      "line": 0,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 1,
      "text": "n , m , dem = int with dem = 0",
      "code": "int n , m , dem = 0 ;",
      "indent": 1
    },
    {
      "line": 2,
      "text": "x , y , in = long long int",
      "code": "long long int x , y , in ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "a , b = int vector",
      "code": "vector < int > a , b ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "c = long long int vector",
      "code": "vector < long long int > c ;",
      "indent": 1
    },
    {
      "line": 5,
      "text": "read n then m then x then y",
      "code": "cin >> n >> m >> x >> y ;",
      "indent": 1
    },
    {
      "line": 6,
      "text": "resize a to n",
      "code": "a . resize ( n ) ;",
      "indent": 1
    },
    {
      "line": 7,
      "text": "resize b to m",
      "code": "b . resize ( m ) ;",
      "indent": 1
    },
    {
      "line": 8,
      "text": "ia , ib = int with ia = 0 and ib = 0",
      "code": "int ia = 0 , ib = 0 ;",
      "indent": 1
    },
    {
      "line": 9,
      "text": "loop n times",
      "code": "while ( n -- )",
      "indent": 1
    },
    {
      "line": 10,
      "text": "read in",
      "code": "cin >> in ;",
      "indent": 2
    },
    {
      "line": 11,
      "text": "set a [ ia ] to in then increment ia",
      "code": "a [ ia ++ ] = in ;",
      "indent": 2
    },
    {
      "line": 12,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 13,
      "text": "loop m times",
      "code": "while ( m -- )",
      "indent": 1
    },
    {
      "line": 14,
      "text": "read in",
      "code": "cin >> in ;",
      "indent": 2
    },
    {
      "line": 15,
      "text": "set b [ ib ] to in then increment ib",
      "code": "b [ ib ++ ] = in ;",
      "indent": 2
    },
    {
      "line": 16,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 17,
      "text": "cnta , cntb , ic = int with cnta = size of a and cntb = size of b and ic = 0",
      "code": "int cnta = a . size ( ) , cntb = b . size ( ) , ic = 0 ;",
      "indent": 1
    },
    {
      "line": 18,
      "text": "increment n",
      "code": "n ++ ;",
      "indent": 1
    },
    {
      "line": 19,
      "text": "increment m",
      "code": "m ++ ;",
      "indent": 1
    },
    {
      "line": 20,
      "text": "resize c to 2000000",
      "code": "c . resize ( 2000000 ) ;",
      "indent": 1
    },
    {
      "line": 21,
      "text": "loop while n is less than cnta and m is less than cntb",
      "code": "while ( n < cnta && m < cntb )",
      "indent": 1
    },
    {
      "line": 22,
      "text": "if a [ n ] is less or equal to ( b [ m ] + x ) and a [ n ] is greater or equal to ( b [ m ] - y )",
      "code": "if ( a [ n ] <= ( b [ m ] + x ) && a [ n ] >= ( b [ m ] - y ) )",
      "indent": 2
    },
    {
      "line": 23,
      "text": "increment dem",
      "code": "dem ++ ;",
      "indent": 3
    },
    {
      "line": 24,
      "text": "increment n then set c [ ic ] to n then increment ic",
      "code": "c [ ic ++ ] = ++ n ;",
      "indent": 3
    },
    {
      "line": 25,
      "text": "increment m then set c [ ic ] to m then increment ic",
      "code": "c [ ic ++ ] = ++ m ;",
      "indent": 3
    },
    {
      "line": 26,
      "text": "else",
      "code": "else",
      "indent": 2
    },
    {
      "line": 27,
      "text": "if a [ n ] is greater than b [ m ] + x then increment m",
      "code": "if ( a [ n ] > b [ m ] + x ) { m ++ ; }",
      "indent": 3
    },
    {
      "line": 28,
      "text": "if a [ n ] is less than b [ m ] - y then increment n",
      "code": "if ( a [ n ] < b [ m ] - y ) { n ++ ; }",
      "indent": 3
    },
    {
      "line": 29,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 30,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 31,
      "text": "print dem",
      "code": "cout << dem << \" \\n \" ;",
      "indent": 1
    },
    {
      "line": 32,
      "text": "set dem to 0",
      "code": "dem = 0 ;",
      "indent": 1
    },
    {
      "line": 33,
      "text": "for i = 0 to ic",
      "code": "for ( int i = 0 ; i < ic ; i ++ )",
      "indent": 1
    },
    {
      "line": 34,
      "text": "if dem is even",
      "code": "if ( dem % 2 == 0 )",
      "indent": 2
    },
    {
      "line": 35,
      "text": "print c [ i ] then \" \"",
      "code": "cout << c [ i ] << \" \" ;",
      "indent": 3
    },
    {
      "line": 36,
      "text": "else",
      "code": "else",
      "indent": 2
    },
    {
      "line": 37,
      "text": "print c [ i ]",
      "code": "cout << c [ i ] << \" \\n \" ;",
      "indent": 3
    },
    {
      "line": 38,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 39,
      "text": "increment dem",
      "code": "dem ++ ;",
      "indent": 2
    },
    {
      "line": 40,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 41,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 42,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        32
      ],
      "mod_code": [
        "int dem = 0 ;"
      ],
      "err_line": 32,
      "err_msg": "redeclaration of ‘int dem’"
    },
    {
      "mod_line": [
        2
      ],
      "mod_code": [
        "long long int x , y , n ;"
      ],
      "err_line": 2,
      "err_msg": "conflicting declaration ‘long long int n’"
    },
    {
      "mod_line": [
        3
      ],
      "mod_code": [
        "vector < int > a ;"
      ],
      "err_line": 7,
      "err_msg": "‘b’ was not declared in this scope"
    },
    {
      "mod_line": [
        6
      ],
      "mod_code": [
        "n . resize ( n ) ;"
      ],
      "err_line": 6,
      "err_msg": "request for member ‘resize’ in ‘n’, which is of non-class type ‘int’"
    },
    {
      "mod_line": [
        7
      ],
      "mod_code": [
        "m . resize ( m ) ;"
      ],
      "err_line": 7,
      "err_msg": "request for member ‘resize’ in ‘m’, which is of non-class type ‘int’"
    },
    {
      "mod_line": [
        10
      ],
      "mod_code": [
        "cin >> read ;"
      ],
      "err_line": 10,
      "err_msg": "‘read’ was not declared in this scope"
    },
    {
      "mod_line": [
        14
      ],
      "mod_code": [
        "cin >> read ;"
      ],
      "err_line": 14,
      "err_msg": "‘read’ was not declared in this scope"
    },
    {
      "mod_line": [
        17
      ],
      "mod_code": [
        "int cnta = a . size ( ) , cntb = 0 ;"
      ],
      "err_line": 24,
      "err_msg": "‘ic’ was not declared in this scope"
    },
    {
      "mod_line": [
        20
      ],
      "mod_code": [
        "c . resize ( c ) ;"
      ],
      "err_line": 20,
      "err_msg": "no matching function for call to ‘std::vector<long long int>::resize(std::vector<long long int>&)’"
    },
    {
      "mod_line": [
        24
      ],
      "mod_code": [
        "c [ ++ ++ ] = n , ic ++ ;"
      ],
      "err_line": 24,
      "err_msg": "expected primary-expression before ‘]’ token"
    },
    {
      "mod_line": [
        25
      ],
      "mod_code": [
        "c [ ++ ++ ] = m , ic ++ ;"
      ],
      "err_line": 25,
      "err_msg": "expected primary-expression before ‘]’ token"
    },
    {
      "mod_line": [
        32
      ],
      "mod_code": [
        "long long dem = 0 ;"
      ],
      "err_line": 32,
      "err_msg": "conflicting declaration ‘long long int dem’"
    },
    {
      "mod_line": [
        33
      ],
      "mod_code": [
        "for ( i = 0 ; i < ic ; i ++ )"
      ],
      "err_line": 33,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        17,
        24,
        25,
        32
      ],
      "mod_code": [
        "int cnta = a . size ( ) , cntb = 0 , ic = 0 ;",
        "c [ ++ ic ] = n , ic ++ ;",
        "c [ ++ ic ] = m , ic ++ ;",
        "int dem = 0 ;"
      ],
      "err_line": 32,
      "err_msg": "redeclaration of ‘int dem’"
    },
    {
      "mod_line": [
        17,
        24,
        32
      ],
      "mod_code": [
        "int cnta = a . size ( ) , cntb = 0 , ic = 0 ;",
        "c [ ++ ic ] = n , ic ++ ;",
        "int dem = 0 ;"
      ],
      "err_line": 32,
      "err_msg": "redeclaration of ‘int dem’"
    },
    {
      "mod_line": [
        17,
        24,
        32,
        13
      ],
      "mod_code": [
        "int cnta = a . size ( ) , cntb = 0 , ic = 0 ;",
        "c [ ++ ic ] = n , ic ++ ;",
        "int dem = 0 ;",
        "while ( m ++ )"
      ],
      "err_line": 32,
      "err_msg": "redeclaration of ‘int dem’"
    },
    {
      "mod_line": [
        17,
        24,
        32,
        1
      ],
      "mod_code": [
        "int cnta = a . size ( ) , cntb = 0 , ic = 0 ;",
        "c [ ++ ic ] = n , ic ++ ;",
        "int dem = 0 ;",
        "int n , m = 0 , dem ;"
      ],
      "err_line": 32,
      "err_msg": "redeclaration of ‘int dem’"
    },
    {
      "mod_line": [
        17,
        25,
        32
      ],
      "mod_code": [
        "int cnta = a . size ( ) , cntb = 0 , ic = 0 ;",
        "c [ ++ ic ] = m , ic ++ ;",
        "int dem = 0 ;"
      ],
      "err_line": 32,
      "err_msg": "redeclaration of ‘int dem’"
    },
    {
      "mod_line": [
        17,
        25,
        32,
        13
      ],
      "mod_code": [
        "int cnta = a . size ( ) , cntb = 0 , ic = 0 ;",
        "c [ ++ ic ] = m , ic ++ ;",
        "int dem = 0 ;",
        "while ( m ++ )"
      ],
      "err_line": 32,
      "err_msg": "redeclaration of ‘int dem’"
    },
    {
      "mod_line": [
        17,
        25,
        32,
        1
      ],
      "mod_code": [
        "int cnta = a . size ( ) , cntb = 0 , ic = 0 ;",
        "c [ ++ ic ] = m , ic ++ ;",
        "int dem = 0 ;",
        "int n , m = 0 , dem ;"
      ],
      "err_line": 32,
      "err_msg": "redeclaration of ‘int dem’"
    },
    {
      "mod_line": [
        17,
        32
      ],
      "mod_code": [
        "int cnta = a . size ( ) , cntb = 0 , ic = 0 ;",
        "int dem = 0 ;"
      ],
      "err_line": 32,
      "err_msg": "redeclaration of ‘int dem’"
    },
    {
      "mod_line": [
        17,
        32,
        13
      ],
      "mod_code": [
        "int cnta = a . size ( ) , cntb = 0 , ic = 0 ;",
        "int dem = 0 ;",
        "while ( m ++ )"
      ],
      "err_line": 32,
      "err_msg": "redeclaration of ‘int dem’"
    },
    {
      "mod_line": [
        17,
        32,
        13,
        1
      ],
      "mod_code": [
        "int cnta = a . size ( ) , cntb = 0 , ic = 0 ;",
        "int dem = 0 ;",
        "while ( m ++ )",
        "int n , m = 0 , dem ;"
      ],
      "err_line": 32,
      "err_msg": "redeclaration of ‘int dem’"
    },
    {
      "mod_line": [
        17,
        32,
        1
      ],
      "mod_code": [
        "int cnta = a . size ( ) , cntb = 0 , ic = 0 ;",
        "int dem = 0 ;",
        "int n , m = 0 , dem ;"
      ],
      "err_line": 32,
      "err_msg": "redeclaration of ‘int dem’"
    },
    {
      "mod_line": [
        24,
        25,
        32
      ],
      "mod_code": [
        "c [ ++ ic ] = n , ic ++ ;",
        "c [ ++ ic ] = m , ic ++ ;",
        "int dem = 0 ;"
      ],
      "err_line": 32,
      "err_msg": "redeclaration of ‘int dem’"
    },
    {
      "mod_line": [
        24,
        25,
        32,
        13
      ],
      "mod_code": [
        "c [ ++ ic ] = n , ic ++ ;",
        "c [ ++ ic ] = m , ic ++ ;",
        "int dem = 0 ;",
        "while ( m ++ )"
      ],
      "err_line": 32,
      "err_msg": "redeclaration of ‘int dem’"
    },
    {
      "mod_line": [
        24,
        25,
        32,
        1
      ],
      "mod_code": [
        "c [ ++ ic ] = n , ic ++ ;",
        "c [ ++ ic ] = m , ic ++ ;",
        "int dem = 0 ;",
        "int n , m = 0 , dem ;"
      ],
      "err_line": 32,
      "err_msg": "redeclaration of ‘int dem’"
    },
    {
      "mod_line": [
        24,
        32
      ],
      "mod_code": [
        "c [ ++ ic ] = n , ic ++ ;",
        "int dem = 0 ;"
      ],
      "err_line": 32,
      "err_msg": "redeclaration of ‘int dem’"
    },
    {
      "mod_line": [
        24,
        32,
        13
      ],
      "mod_code": [
        "c [ ++ ic ] = n , ic ++ ;",
        "int dem = 0 ;",
        "while ( m ++ )"
      ],
      "err_line": 32,
      "err_msg": "redeclaration of ‘int dem’"
    },
    {
      "mod_line": [
        24,
        32,
        13,
        1
      ],
      "mod_code": [
        "c [ ++ ic ] = n , ic ++ ;",
        "int dem = 0 ;",
        "while ( m ++ )",
        "int n , m = 0 , dem ;"
      ],
      "err_line": 32,
      "err_msg": "redeclaration of ‘int dem’"
    },
    {
      "mod_line": [
        24,
        32,
        1
      ],
      "mod_code": [
        "c [ ++ ic ] = n , ic ++ ;",
        "int dem = 0 ;",
        "int n , m = 0 , dem ;"
      ],
      "err_line": 32,
      "err_msg": "redeclaration of ‘int dem’"
    },
    {
      "mod_line": [
        25,
        32
      ],
      "mod_code": [
        "c [ ++ ic ] = m , ic ++ ;",
        "int dem = 0 ;"
      ],
      "err_line": 32,
      "err_msg": "redeclaration of ‘int dem’"
    },
    {
      "mod_line": [
        25,
        32,
        13
      ],
      "mod_code": [
        "c [ ++ ic ] = m , ic ++ ;",
        "int dem = 0 ;",
        "while ( m ++ )"
      ],
      "err_line": 32,
      "err_msg": "redeclaration of ‘int dem’"
    },
    {
      "mod_line": [
        25,
        32,
        13,
        1
      ],
      "mod_code": [
        "c [ ++ ic ] = m , ic ++ ;",
        "int dem = 0 ;",
        "while ( m ++ )",
        "int n , m = 0 , dem ;"
      ],
      "err_line": 32,
      "err_msg": "redeclaration of ‘int dem’"
    },
    {
      "mod_line": [
        25,
        32,
        1
      ],
      "mod_code": [
        "c [ ++ ic ] = m , ic ++ ;",
        "int dem = 0 ;",
        "int n , m = 0 , dem ;"
      ],
      "err_line": 32,
      "err_msg": "redeclaration of ‘int dem’"
    },
    {
      "mod_line": [
        32,
        13
      ],
      "mod_code": [
        "int dem = 0 ;",
        "while ( m ++ )"
      ],
      "err_line": 32,
      "err_msg": "redeclaration of ‘int dem’"
    },
    {
      "mod_line": [
        32,
        13,
        1
      ],
      "mod_code": [
        "int dem = 0 ;",
        "while ( m ++ )",
        "int n , m = 0 , dem ;"
      ],
      "err_line": 32,
      "err_msg": "redeclaration of ‘int dem’"
    },
    {
      "mod_line": [
        32,
        1
      ],
      "mod_code": [
        "int dem = 0 ;",
        "int n , m = 0 , dem ;"
      ],
      "err_line": 32,
      "err_msg": "redeclaration of ‘int dem’"
    }
  ]
}