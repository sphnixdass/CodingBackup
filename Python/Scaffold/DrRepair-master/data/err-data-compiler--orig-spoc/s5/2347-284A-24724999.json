{
  "meta": {
    "index": 2347,
    "hitid": "341YLJU21ITNEAJ8AH8WGKGD4VQ2IV",
    "workerid": "A1EKVUFWL7OJMO",
    "probid": "284A",
    "subid": "24724999"
  },
  "lines": [
    {
      "line": 0,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 1,
      "text": "p = long long",
      "code": "long long p ;",
      "indent": 1
    },
    {
      "line": 2,
      "text": "read p",
      "code": "cin >> p ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "c , ct = long long with ct = 1",
      "code": "long long c , ct = 1 ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "i = long long",
      "code": "long long i ;",
      "indent": 1
    },
    {
      "line": 5,
      "text": "for i = 2 to p exclusive",
      "code": "for ( i = 2 ; i < p ; i ++ )",
      "indent": 1
    },
    {
      "line": 6,
      "text": "k = long long",
      "code": "long long k ;",
      "indent": 2
    },
    {
      "line": 7,
      "text": "f = bool with f = 0",
      "code": "bool f = 0 ;",
      "indent": 2
    },
    {
      "line": 8,
      "text": "gg = integer with gg = 1",
      "code": "int gg = 1 ;",
      "indent": 2
    },
    {
      "line": 9,
      "text": "for k = 1 increment k",
      "code": "for ( k = 1 ; ; k ++ )",
      "indent": 2
    },
    {
      "line": 10,
      "text": "if i modulo k is 0 and ( p - 1 ) modulo k is 0",
      "code": "if ( i % k == 0 && ( p - 1 ) % k == 0 )",
      "indent": 3
    },
    {
      "line": 11,
      "text": "gg = k ;",
      "code": "gg = k ;",
      "indent": 4
    },
    {
      "line": 12,
      "text": "else",
      "code": "else",
      "indent": 3
    },
    {
      "line": 13,
      "text": "DUMMY",
      "code": "}",
      "indent": 3
    },
    {
      "line": 14,
      "text": "if ( k is i ) or ( k is ( p - 1 ) ) , break loop",
      "code": "if ( ( k == i ) || ( k == ( p - 1 ) ) ) { break ; }",
      "indent": 3
    },
    {
      "line": 15,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 16,
      "text": "if gg is 1 , increment ct",
      "code": "if ( gg == 1 ) { ct ++ ; }",
      "indent": 2
    },
    {
      "line": 17,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 18,
      "text": "print ct",
      "code": "cout << ct << endl ;",
      "indent": 1
    },
    {
      "line": 19,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 20,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        14
      ],
      "mod_code": [
        "if ( k == i ) || ( k == ( p - 1 ) ) ;"
      ],
      "err_line": 15,
      "err_msg": "expected primary-expression before ‘||’ token"
    },
    {
      "mod_line": [
        2,
        3,
        18,
        14
      ],
      "mod_code": [
        "cout << p << endl ;",
        "long long c = 1 , ct ;",
        "cout << ct ;",
        "if ( k == i ) || ( k == ( p - 1 ) ) ;"
      ],
      "err_line": 15,
      "err_msg": "expected primary-expression before ‘||’ token"
    },
    {
      "mod_line": [
        2,
        3,
        11,
        14
      ],
      "mod_code": [
        "cout << p << endl ;",
        "long long c = 1 , ct ;",
        "int gg = k ;",
        "if ( k == i ) || ( k == ( p - 1 ) ) ;"
      ],
      "err_line": 15,
      "err_msg": "expected primary-expression before ‘||’ token"
    },
    {
      "mod_line": [
        2,
        3,
        14
      ],
      "mod_code": [
        "cout << p << endl ;",
        "long long c = 1 , ct ;",
        "if ( k == i ) || ( k == ( p - 1 ) ) ;"
      ],
      "err_line": 15,
      "err_msg": "expected primary-expression before ‘||’ token"
    },
    {
      "mod_line": [
        2,
        18,
        11,
        14
      ],
      "mod_code": [
        "cout << p << endl ;",
        "cout << ct ;",
        "int gg = k ;",
        "if ( k == i ) || ( k == ( p - 1 ) ) ;"
      ],
      "err_line": 15,
      "err_msg": "expected primary-expression before ‘||’ token"
    },
    {
      "mod_line": [
        2,
        18,
        14
      ],
      "mod_code": [
        "cout << p << endl ;",
        "cout << ct ;",
        "if ( k == i ) || ( k == ( p - 1 ) ) ;"
      ],
      "err_line": 15,
      "err_msg": "expected primary-expression before ‘||’ token"
    },
    {
      "mod_line": [
        2,
        11,
        14
      ],
      "mod_code": [
        "cout << p << endl ;",
        "int gg = k ;",
        "if ( k == i ) || ( k == ( p - 1 ) ) ;"
      ],
      "err_line": 15,
      "err_msg": "expected primary-expression before ‘||’ token"
    },
    {
      "mod_line": [
        2,
        14
      ],
      "mod_code": [
        "cout << p << endl ;",
        "if ( k == i ) || ( k == ( p - 1 ) ) ;"
      ],
      "err_line": 15,
      "err_msg": "expected primary-expression before ‘||’ token"
    },
    {
      "mod_line": [
        3,
        18,
        11,
        14
      ],
      "mod_code": [
        "long long c = 1 , ct ;",
        "cout << ct ;",
        "int gg = k ;",
        "if ( k == i ) || ( k == ( p - 1 ) ) ;"
      ],
      "err_line": 15,
      "err_msg": "expected primary-expression before ‘||’ token"
    },
    {
      "mod_line": [
        3,
        18,
        14
      ],
      "mod_code": [
        "long long c = 1 , ct ;",
        "cout << ct ;",
        "if ( k == i ) || ( k == ( p - 1 ) ) ;"
      ],
      "err_line": 15,
      "err_msg": "expected primary-expression before ‘||’ token"
    },
    {
      "mod_line": [
        3,
        11,
        14
      ],
      "mod_code": [
        "long long c = 1 , ct ;",
        "int gg = k ;",
        "if ( k == i ) || ( k == ( p - 1 ) ) ;"
      ],
      "err_line": 15,
      "err_msg": "expected primary-expression before ‘||’ token"
    },
    {
      "mod_line": [
        3,
        14
      ],
      "mod_code": [
        "long long c = 1 , ct ;",
        "if ( k == i ) || ( k == ( p - 1 ) ) ;"
      ],
      "err_line": 15,
      "err_msg": "expected primary-expression before ‘||’ token"
    },
    {
      "mod_line": [
        18,
        11,
        14
      ],
      "mod_code": [
        "cout << ct ;",
        "int gg = k ;",
        "if ( k == i ) || ( k == ( p - 1 ) ) ;"
      ],
      "err_line": 15,
      "err_msg": "expected primary-expression before ‘||’ token"
    },
    {
      "mod_line": [
        18,
        14
      ],
      "mod_code": [
        "cout << ct ;",
        "if ( k == i ) || ( k == ( p - 1 ) ) ;"
      ],
      "err_line": 15,
      "err_msg": "expected primary-expression before ‘||’ token"
    },
    {
      "mod_line": [
        11,
        14
      ],
      "mod_code": [
        "int gg = k ;",
        "if ( k == i ) || ( k == ( p - 1 ) ) ;"
      ],
      "err_line": 15,
      "err_msg": "expected primary-expression before ‘||’ token"
    }
  ]
}