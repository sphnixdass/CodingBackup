{
  "meta": {
    "index": 1690,
    "hitid": "388FBO7JZRN5TWN60ISJUWDZ59MYNV",
    "workerid": "A1NBHCFZKJGHKW",
    "probid": "975A",
    "subid": "41007069"
  },
  "lines": [
    {
      "line": 0,
      "text": "n = int",
      "code": "int n ;",
      "indent": 0
    },
    {
      "line": 1,
      "text": "ss = string array of size 1001",
      "code": "string ss [ 1001 ] ;",
      "indent": 0
    },
    {
      "line": 2,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 3,
      "text": "read n",
      "code": "cin >> n ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "for i = 1 to n inclusive",
      "code": "for ( int i = 1 ; i <= n ; i ++ )",
      "indent": 1
    },
    {
      "line": 5,
      "text": "s = char array of size 1001",
      "code": "char s [ 1001 ] ;",
      "indent": 2
    },
    {
      "line": 6,
      "text": "read s",
      "code": "cin >> s ;",
      "indent": 2
    },
    {
      "line": 7,
      "text": "sort s from index 0 to strlen of s",
      "code": "sort ( s , s + strlen ( s ) ) ;",
      "indent": 2
    },
    {
      "line": 8,
      "text": "pos = int with pos = unique of ( s , s + strlen of s ) - s",
      "code": "int pos = unique ( s , s + strlen ( s ) ) - s ;",
      "indent": 2
    },
    {
      "line": 9,
      "text": "set s [ pos ] to ' \\ 0 '",
      "code": "s [ pos ] = ' \\0 ' ;",
      "indent": 2
    },
    {
      "line": 10,
      "text": "set ss [ i ] to s",
      "code": "ss [ i ] = s ;",
      "indent": 2
    },
    {
      "line": 11,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 12,
      "text": "sort ss from index 1 to n + 1",
      "code": "sort ( ss + 1 , ss + n + 1 ) ;",
      "indent": 1
    },
    {
      "line": 13,
      "text": "print unique of ( ss + 1 , ss + n + 1 ) - ss - 1",
      "code": "cout << unique ( ss + 1 , ss + n + 1 ) - ss - 1 << endl ;",
      "indent": 1
    },
    {
      "line": 14,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        7
      ],
      "mod_code": [
        "sort ( s . begin ( ) , s . end ( ) ) ;"
      ],
      "err_line": 7,
      "err_msg": "request for member ‘begin’ in ‘s’, which is of non-class type ‘char [1001]’"
    },
    {
      "mod_line": [
        13
      ],
      "mod_code": [
        "cout << ( ss + 1 ) << ss + n + 1 ) - ss - 1 << endl ;"
      ],
      "err_line": 13,
      "err_msg": "expected ‘;’ before ‘)’ token"
    },
    {
      "mod_line": [
        1
      ],
      "mod_code": [
        "string * ss [ 1001 ] ;"
      ],
      "err_line": 10,
      "err_msg": "cannot convert ‘char [1001]’ to ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ in assignment"
    },
    {
      "mod_line": [
        4
      ],
      "mod_code": [
        "for ( i = 1 ; i <= n ; i ++ )"
      ],
      "err_line": 4,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        5
      ],
      "mod_code": [
        "char * s [ 1001 ] ;"
      ],
      "err_line": 6,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘char* [1001]’)"
    },
    {
      "mod_line": [
        7
      ],
      "mod_code": [
        "sort ( s . begin ( ) , s . strlen ( ) ) ;"
      ],
      "err_line": 7,
      "err_msg": "request for member ‘begin’ in ‘s’, which is of non-class type ‘char [1001]’"
    },
    {
      "mod_line": [
        8
      ],
      "mod_code": [
        "int pos = unique ( s , s + strlen ( s ) ) ;"
      ],
      "err_line": 8,
      "err_msg": "invalid conversion from ‘char*’ to ‘int’ [-fpermissive]"
    },
    {
      "mod_line": [
        9
      ],
      "mod_code": [
        "s [ pos ] = ' \\ ' ;"
      ],
      "err_line": 9,
      "err_msg": "missing terminating ' character"
    },
    {
      "mod_line": [
        7,
        13
      ],
      "mod_code": [
        "sort ( s . begin ( ) , s . end ( ) ) ;",
        "cout << ( ss + 1 ) << ss + n + 1 ) - ss - 1 << endl ;"
      ],
      "err_line": 7,
      "err_msg": "request for member ‘begin’ in ‘s’, which is of non-class type ‘char [1001]’"
    },
    {
      "mod_line": [
        7,
        13,
        0
      ],
      "mod_code": [
        "sort ( s . begin ( ) , s . end ( ) ) ;",
        "cout << ( ss + 1 ) << ss + n + 1 ) - ss - 1 << endl ;",
        "char n ;"
      ],
      "err_line": 7,
      "err_msg": "request for member ‘begin’ in ‘s’, which is of non-class type ‘char [1001]’"
    },
    {
      "mod_line": [
        7,
        13,
        0,
        6
      ],
      "mod_code": [
        "sort ( s . begin ( ) , s . end ( ) ) ;",
        "cout << ( ss + 1 ) << ss + n + 1 ) - ss - 1 << endl ;",
        "char n ;",
        "cout << s << endl ;"
      ],
      "err_line": 7,
      "err_msg": "request for member ‘begin’ in ‘s’, which is of non-class type ‘char [1001]’"
    },
    {
      "mod_line": [
        7,
        13,
        0,
        10
      ],
      "mod_code": [
        "sort ( s . begin ( ) , s . end ( ) ) ;",
        "cout << ( ss + 1 ) << ss + n + 1 ) - ss - 1 << endl ;",
        "char n ;",
        "ss [ i ] = ' s ' ;"
      ],
      "err_line": 7,
      "err_msg": "request for member ‘begin’ in ‘s’, which is of non-class type ‘char [1001]’"
    },
    {
      "mod_line": [
        7,
        13,
        6
      ],
      "mod_code": [
        "sort ( s . begin ( ) , s . end ( ) ) ;",
        "cout << ( ss + 1 ) << ss + n + 1 ) - ss - 1 << endl ;",
        "cout << s << endl ;"
      ],
      "err_line": 7,
      "err_msg": "request for member ‘begin’ in ‘s’, which is of non-class type ‘char [1001]’"
    },
    {
      "mod_line": [
        7,
        13,
        6,
        10
      ],
      "mod_code": [
        "sort ( s . begin ( ) , s . end ( ) ) ;",
        "cout << ( ss + 1 ) << ss + n + 1 ) - ss - 1 << endl ;",
        "cout << s << endl ;",
        "ss [ i ] = ' s ' ;"
      ],
      "err_line": 7,
      "err_msg": "request for member ‘begin’ in ‘s’, which is of non-class type ‘char [1001]’"
    },
    {
      "mod_line": [
        7,
        13,
        10
      ],
      "mod_code": [
        "sort ( s . begin ( ) , s . end ( ) ) ;",
        "cout << ( ss + 1 ) << ss + n + 1 ) - ss - 1 << endl ;",
        "ss [ i ] = ' s ' ;"
      ],
      "err_line": 7,
      "err_msg": "request for member ‘begin’ in ‘s’, which is of non-class type ‘char [1001]’"
    },
    {
      "mod_line": [
        7,
        0
      ],
      "mod_code": [
        "sort ( s . begin ( ) , s . end ( ) ) ;",
        "char n ;"
      ],
      "err_line": 7,
      "err_msg": "request for member ‘begin’ in ‘s’, which is of non-class type ‘char [1001]’"
    },
    {
      "mod_line": [
        7,
        0,
        13
      ],
      "mod_code": [
        "sort ( s . begin ( ) , s . end ( ) ) ;",
        "char n ;",
        "cout << ( ( ss + 1 ) , ss + n + 1 ) - ss - 1 ;"
      ],
      "err_line": 7,
      "err_msg": "request for member ‘begin’ in ‘s’, which is of non-class type ‘char [1001]’"
    },
    {
      "mod_line": [
        7,
        0,
        13,
        6
      ],
      "mod_code": [
        "sort ( s . begin ( ) , s . end ( ) ) ;",
        "char n ;",
        "cout << ( ( ss + 1 ) , ss + n + 1 ) - ss - 1 ;",
        "cout << s << endl ;"
      ],
      "err_line": 7,
      "err_msg": "request for member ‘begin’ in ‘s’, which is of non-class type ‘char [1001]’"
    },
    {
      "mod_line": [
        7,
        0,
        13,
        10
      ],
      "mod_code": [
        "sort ( s . begin ( ) , s . end ( ) ) ;",
        "char n ;",
        "cout << ( ( ss + 1 ) , ss + n + 1 ) - ss - 1 ;",
        "ss [ i ] = ' s ' ;"
      ],
      "err_line": 7,
      "err_msg": "request for member ‘begin’ in ‘s’, which is of non-class type ‘char [1001]’"
    },
    {
      "mod_line": [
        7,
        0,
        6
      ],
      "mod_code": [
        "sort ( s . begin ( ) , s . end ( ) ) ;",
        "char n ;",
        "cout << s << endl ;"
      ],
      "err_line": 7,
      "err_msg": "request for member ‘begin’ in ‘s’, which is of non-class type ‘char [1001]’"
    },
    {
      "mod_line": [
        7,
        0,
        6,
        10
      ],
      "mod_code": [
        "sort ( s . begin ( ) , s . end ( ) ) ;",
        "char n ;",
        "cout << s << endl ;",
        "ss [ i ] = ' s ' ;"
      ],
      "err_line": 7,
      "err_msg": "request for member ‘begin’ in ‘s’, which is of non-class type ‘char [1001]’"
    },
    {
      "mod_line": [
        7,
        0,
        10
      ],
      "mod_code": [
        "sort ( s . begin ( ) , s . end ( ) ) ;",
        "char n ;",
        "ss [ i ] = ' s ' ;"
      ],
      "err_line": 7,
      "err_msg": "request for member ‘begin’ in ‘s’, which is of non-class type ‘char [1001]’"
    },
    {
      "mod_line": [
        7,
        13
      ],
      "mod_code": [
        "sort ( s . begin ( ) , s . end ( ) ) ;",
        "cout << ( ( ss + 1 ) , ss + n + 1 ) - ss - 1 ;"
      ],
      "err_line": 7,
      "err_msg": "request for member ‘begin’ in ‘s’, which is of non-class type ‘char [1001]’"
    },
    {
      "mod_line": [
        7,
        13,
        6
      ],
      "mod_code": [
        "sort ( s . begin ( ) , s . end ( ) ) ;",
        "cout << ( ( ss + 1 ) , ss + n + 1 ) - ss - 1 ;",
        "cout << s << endl ;"
      ],
      "err_line": 7,
      "err_msg": "request for member ‘begin’ in ‘s’, which is of non-class type ‘char [1001]’"
    },
    {
      "mod_line": [
        7,
        13,
        6,
        10
      ],
      "mod_code": [
        "sort ( s . begin ( ) , s . end ( ) ) ;",
        "cout << ( ( ss + 1 ) , ss + n + 1 ) - ss - 1 ;",
        "cout << s << endl ;",
        "ss [ i ] = ' s ' ;"
      ],
      "err_line": 7,
      "err_msg": "request for member ‘begin’ in ‘s’, which is of non-class type ‘char [1001]’"
    },
    {
      "mod_line": [
        7,
        13,
        10
      ],
      "mod_code": [
        "sort ( s . begin ( ) , s . end ( ) ) ;",
        "cout << ( ( ss + 1 ) , ss + n + 1 ) - ss - 1 ;",
        "ss [ i ] = ' s ' ;"
      ],
      "err_line": 7,
      "err_msg": "request for member ‘begin’ in ‘s’, which is of non-class type ‘char [1001]’"
    },
    {
      "mod_line": [
        7,
        6
      ],
      "mod_code": [
        "sort ( s . begin ( ) , s . end ( ) ) ;",
        "cout << s << endl ;"
      ],
      "err_line": 7,
      "err_msg": "request for member ‘begin’ in ‘s’, which is of non-class type ‘char [1001]’"
    },
    {
      "mod_line": [
        7,
        6,
        10
      ],
      "mod_code": [
        "sort ( s . begin ( ) , s . end ( ) ) ;",
        "cout << s << endl ;",
        "ss [ i ] = ' s ' ;"
      ],
      "err_line": 7,
      "err_msg": "request for member ‘begin’ in ‘s’, which is of non-class type ‘char [1001]’"
    },
    {
      "mod_line": [
        7,
        10
      ],
      "mod_code": [
        "sort ( s . begin ( ) , s . end ( ) ) ;",
        "ss [ i ] = ' s ' ;"
      ],
      "err_line": 7,
      "err_msg": "request for member ‘begin’ in ‘s’, which is of non-class type ‘char [1001]’"
    },
    {
      "mod_line": [
        13,
        0
      ],
      "mod_code": [
        "cout << ( ss + 1 ) << ss + n + 1 ) - ss - 1 << endl ;",
        "char n ;"
      ],
      "err_line": 13,
      "err_msg": "expected ‘;’ before ‘)’ token"
    },
    {
      "mod_line": [
        13,
        0,
        6
      ],
      "mod_code": [
        "cout << ( ss + 1 ) << ss + n + 1 ) - ss - 1 << endl ;",
        "char n ;",
        "cout << s << endl ;"
      ],
      "err_line": 13,
      "err_msg": "expected ‘;’ before ‘)’ token"
    },
    {
      "mod_line": [
        13,
        0,
        6,
        10
      ],
      "mod_code": [
        "cout << ( ss + 1 ) << ss + n + 1 ) - ss - 1 << endl ;",
        "char n ;",
        "cout << s << endl ;",
        "ss [ i ] = ' s ' ;"
      ],
      "err_line": 13,
      "err_msg": "expected ‘;’ before ‘)’ token"
    },
    {
      "mod_line": [
        13,
        0,
        10
      ],
      "mod_code": [
        "cout << ( ss + 1 ) << ss + n + 1 ) - ss - 1 << endl ;",
        "char n ;",
        "ss [ i ] = ' s ' ;"
      ],
      "err_line": 13,
      "err_msg": "expected ‘;’ before ‘)’ token"
    },
    {
      "mod_line": [
        13,
        6
      ],
      "mod_code": [
        "cout << ( ss + 1 ) << ss + n + 1 ) - ss - 1 << endl ;",
        "cout << s << endl ;"
      ],
      "err_line": 13,
      "err_msg": "expected ‘;’ before ‘)’ token"
    },
    {
      "mod_line": [
        13,
        6,
        10
      ],
      "mod_code": [
        "cout << ( ss + 1 ) << ss + n + 1 ) - ss - 1 << endl ;",
        "cout << s << endl ;",
        "ss [ i ] = ' s ' ;"
      ],
      "err_line": 13,
      "err_msg": "expected ‘;’ before ‘)’ token"
    },
    {
      "mod_line": [
        13,
        10
      ],
      "mod_code": [
        "cout << ( ss + 1 ) << ss + n + 1 ) - ss - 1 << endl ;",
        "ss [ i ] = ' s ' ;"
      ],
      "err_line": 13,
      "err_msg": "expected ‘;’ before ‘)’ token"
    }
  ]
}