{
  "meta": {
    "index": 2651,
    "hitid": "3WJGKMRWVI3J4HVOFWWR109MNU2CD8",
    "workerid": "AIWEXPJAU66D9",
    "probid": "768A",
    "subid": "48882783"
  },
  "lines": [
    {
      "line": 0,
      "text": "let a be integer array with size 100005",
      "code": "int a [ 100005 ] ;",
      "indent": 0
    },
    {
      "line": 1,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 2,
      "text": "declare integer variables n , c1 , c2 , maxx and minn with c1 , c2 and maxx = 0 and minn = 1000000007",
      "code": "int n , c1 = 0 , c2 = 0 , maxx = 0 , minn = 1000000007 ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "read n",
      "code": "cin >> n ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "for i = 0 to n exclusive",
      "code": "for ( int i = 0 ; i < n ; i ++ )",
      "indent": 1
    },
    {
      "line": 5,
      "text": "read a [ i ]",
      "code": "cin >> a [ i ] ;",
      "indent": 2
    },
    {
      "line": 6,
      "text": "maxx = max of maxx and a [ i ] , minn = min of minn and a [ i ]",
      "code": "maxx = max ( maxx , a [ i ] ) , minn = min ( minn , a [ i ] ) ;",
      "indent": 2
    },
    {
      "line": 7,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 8,
      "text": "for integer i = 0 to n exclusive",
      "code": "for ( int i = 0 ; i < n ; i ++ )",
      "indent": 1
    },
    {
      "line": 9,
      "text": "increment c1 if a [ i ] = maxx",
      "code": "if ( a [ i ] == maxx ) c1 ++ ;",
      "indent": 2
    },
    {
      "line": 10,
      "text": "increment c2 if a [ i ] = minn",
      "code": "if ( a [ i ] == minn ) c2 ++ ;",
      "indent": 2
    },
    {
      "line": 11,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 12,
      "text": "if maxx = minn",
      "code": "if ( maxx == minn )",
      "indent": 1
    },
    {
      "line": 13,
      "text": "print 0",
      "code": "cout << 0 << endl ;",
      "indent": 2
    },
    {
      "line": 14,
      "text": "else",
      "code": "else",
      "indent": 1
    },
    {
      "line": 15,
      "text": "print n - c1 - c2",
      "code": "cout << n - c1 - c2 << endl ;",
      "indent": 2
    },
    {
      "line": 16,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 17,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        2
      ],
      "mod_code": [
        "int n , c1 = 0 , c2 = 0 , maxx = 0 , maxx = 0 ;"
      ],
      "err_line": 2,
      "err_msg": "redeclaration of ‘int maxx’"
    },
    {
      "mod_line": [
        0
      ],
      "mod_code": [
        "long long a [ 100005 ] ;"
      ],
      "err_line": 6,
      "err_msg": "no matching function for call to ‘max(int&, long long int&)’"
    },
    {
      "mod_line": [
        2
      ],
      "mod_code": [
        "int n , c1 , c2 = 0 , maxx = 0 , maxx = 0 , minn = 1000000007 ;"
      ],
      "err_line": 2,
      "err_msg": "redeclaration of ‘int maxx’"
    },
    {
      "mod_line": [
        4
      ],
      "mod_code": [
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 4,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        12
      ],
      "mod_code": [
        "if ( maxx == minn ) break ;"
      ],
      "err_line": 12,
      "err_msg": "break statement not within loop or switch"
    },
    {
      "mod_line": [
        2,
        6
      ],
      "mod_code": [
        "int n , c1 = 0 , c2 = 0 , maxx = 0 , maxx = 0 ;",
        "maxx = max ( maxx , a [ i ] , minn = min ( minn , a [ i ] ) ) ;"
      ],
      "err_line": 2,
      "err_msg": "redeclaration of ‘int maxx’"
    },
    {
      "mod_line": [
        2,
        6,
        12
      ],
      "mod_code": [
        "int n , c1 = 0 , c2 = 0 , maxx = 0 , maxx = 0 ;",
        "maxx = max ( maxx , a [ i ] , minn = min ( minn , a [ i ] ) ) ;",
        "if ( maxx == minn ) break ;"
      ],
      "err_line": 2,
      "err_msg": "redeclaration of ‘int maxx’"
    },
    {
      "mod_line": [
        2,
        6,
        12,
        5
      ],
      "mod_code": [
        "int n , c1 = 0 , c2 = 0 , maxx = 0 , maxx = 0 ;",
        "maxx = max ( maxx , a [ i ] , minn = min ( minn , a [ i ] ) ) ;",
        "if ( maxx == minn ) break ;",
        "cout << a [ i ] ;"
      ],
      "err_line": 2,
      "err_msg": "redeclaration of ‘int maxx’"
    },
    {
      "mod_line": [
        2,
        6,
        5
      ],
      "mod_code": [
        "int n , c1 = 0 , c2 = 0 , maxx = 0 , maxx = 0 ;",
        "maxx = max ( maxx , a [ i ] , minn = min ( minn , a [ i ] ) ) ;",
        "cout << a [ i ] ;"
      ],
      "err_line": 2,
      "err_msg": "redeclaration of ‘int maxx’"
    },
    {
      "mod_line": [
        2,
        6
      ],
      "mod_code": [
        "int n , c1 = 0 , c2 = 0 , maxx = 0 , maxx = 0 ;",
        "int maxx = max ( maxx , a [ i ] , minn = min ( minn , a [ i ] ) ) ;"
      ],
      "err_line": 2,
      "err_msg": "redeclaration of ‘int maxx’"
    },
    {
      "mod_line": [
        2,
        6,
        12
      ],
      "mod_code": [
        "int n , c1 = 0 , c2 = 0 , maxx = 0 , maxx = 0 ;",
        "int maxx = max ( maxx , a [ i ] , minn = min ( minn , a [ i ] ) ) ;",
        "if ( maxx == minn ) break ;"
      ],
      "err_line": 2,
      "err_msg": "redeclaration of ‘int maxx’"
    },
    {
      "mod_line": [
        2,
        6,
        12,
        5
      ],
      "mod_code": [
        "int n , c1 = 0 , c2 = 0 , maxx = 0 , maxx = 0 ;",
        "int maxx = max ( maxx , a [ i ] , minn = min ( minn , a [ i ] ) ) ;",
        "if ( maxx == minn ) break ;",
        "cout << a [ i ] ;"
      ],
      "err_line": 2,
      "err_msg": "redeclaration of ‘int maxx’"
    },
    {
      "mod_line": [
        2,
        6,
        5
      ],
      "mod_code": [
        "int n , c1 = 0 , c2 = 0 , maxx = 0 , maxx = 0 ;",
        "int maxx = max ( maxx , a [ i ] , minn = min ( minn , a [ i ] ) ) ;",
        "cout << a [ i ] ;"
      ],
      "err_line": 2,
      "err_msg": "redeclaration of ‘int maxx’"
    },
    {
      "mod_line": [
        2,
        12
      ],
      "mod_code": [
        "int n , c1 = 0 , c2 = 0 , maxx = 0 , maxx = 0 ;",
        "if ( maxx == minn ) break ;"
      ],
      "err_line": 2,
      "err_msg": "redeclaration of ‘int maxx’"
    },
    {
      "mod_line": [
        2,
        12,
        5
      ],
      "mod_code": [
        "int n , c1 = 0 , c2 = 0 , maxx = 0 , maxx = 0 ;",
        "if ( maxx == minn ) break ;",
        "cout << a [ i ] ;"
      ],
      "err_line": 2,
      "err_msg": "redeclaration of ‘int maxx’"
    },
    {
      "mod_line": [
        2,
        5
      ],
      "mod_code": [
        "int n , c1 = 0 , c2 = 0 , maxx = 0 , maxx = 0 ;",
        "cout << a [ i ] ;"
      ],
      "err_line": 2,
      "err_msg": "redeclaration of ‘int maxx’"
    },
    {
      "mod_line": [
        6,
        2
      ],
      "mod_code": [
        "maxx = max ( maxx , a [ i ] , minn = min ( minn , a [ i ] ) ) ;",
        "int n , c1 , c2 = 0 , maxx = 0 , maxx = 0 , minn = 1000000007 ;"
      ],
      "err_line": 2,
      "err_msg": "redeclaration of ‘int maxx’"
    },
    {
      "mod_line": [
        6,
        2,
        12
      ],
      "mod_code": [
        "maxx = max ( maxx , a [ i ] , minn = min ( minn , a [ i ] ) ) ;",
        "int n , c1 , c2 = 0 , maxx = 0 , maxx = 0 , minn = 1000000007 ;",
        "if ( maxx == minn ) break ;"
      ],
      "err_line": 2,
      "err_msg": "redeclaration of ‘int maxx’"
    },
    {
      "mod_line": [
        6,
        2,
        12,
        5
      ],
      "mod_code": [
        "maxx = max ( maxx , a [ i ] , minn = min ( minn , a [ i ] ) ) ;",
        "int n , c1 , c2 = 0 , maxx = 0 , maxx = 0 , minn = 1000000007 ;",
        "if ( maxx == minn ) break ;",
        "cout << a [ i ] ;"
      ],
      "err_line": 2,
      "err_msg": "redeclaration of ‘int maxx’"
    },
    {
      "mod_line": [
        6,
        2,
        5
      ],
      "mod_code": [
        "maxx = max ( maxx , a [ i ] , minn = min ( minn , a [ i ] ) ) ;",
        "int n , c1 , c2 = 0 , maxx = 0 , maxx = 0 , minn = 1000000007 ;",
        "cout << a [ i ] ;"
      ],
      "err_line": 2,
      "err_msg": "redeclaration of ‘int maxx’"
    },
    {
      "mod_line": [
        6,
        12
      ],
      "mod_code": [
        "maxx = max ( maxx , a [ i ] , minn = min ( minn , a [ i ] ) ) ;",
        "if ( maxx == minn ) break ;"
      ],
      "err_line": 12,
      "err_msg": "break statement not within loop or switch"
    },
    {
      "mod_line": [
        6,
        12,
        5
      ],
      "mod_code": [
        "maxx = max ( maxx , a [ i ] , minn = min ( minn , a [ i ] ) ) ;",
        "if ( maxx == minn ) break ;",
        "cout << a [ i ] ;"
      ],
      "err_line": 12,
      "err_msg": "break statement not within loop or switch"
    },
    {
      "mod_line": [
        2,
        6
      ],
      "mod_code": [
        "int n , c1 , c2 = 0 , maxx = 0 , maxx = 0 , minn = 1000000007 ;",
        "int maxx = max ( maxx , a [ i ] , minn = min ( minn , a [ i ] ) ) ;"
      ],
      "err_line": 2,
      "err_msg": "redeclaration of ‘int maxx’"
    },
    {
      "mod_line": [
        2,
        6,
        12
      ],
      "mod_code": [
        "int n , c1 , c2 = 0 , maxx = 0 , maxx = 0 , minn = 1000000007 ;",
        "int maxx = max ( maxx , a [ i ] , minn = min ( minn , a [ i ] ) ) ;",
        "if ( maxx == minn ) break ;"
      ],
      "err_line": 2,
      "err_msg": "redeclaration of ‘int maxx’"
    },
    {
      "mod_line": [
        2,
        6,
        12,
        5
      ],
      "mod_code": [
        "int n , c1 , c2 = 0 , maxx = 0 , maxx = 0 , minn = 1000000007 ;",
        "int maxx = max ( maxx , a [ i ] , minn = min ( minn , a [ i ] ) ) ;",
        "if ( maxx == minn ) break ;",
        "cout << a [ i ] ;"
      ],
      "err_line": 2,
      "err_msg": "redeclaration of ‘int maxx’"
    },
    {
      "mod_line": [
        2,
        6,
        5
      ],
      "mod_code": [
        "int n , c1 , c2 = 0 , maxx = 0 , maxx = 0 , minn = 1000000007 ;",
        "int maxx = max ( maxx , a [ i ] , minn = min ( minn , a [ i ] ) ) ;",
        "cout << a [ i ] ;"
      ],
      "err_line": 2,
      "err_msg": "redeclaration of ‘int maxx’"
    },
    {
      "mod_line": [
        2,
        12
      ],
      "mod_code": [
        "int n , c1 , c2 = 0 , maxx = 0 , maxx = 0 , minn = 1000000007 ;",
        "if ( maxx == minn ) break ;"
      ],
      "err_line": 2,
      "err_msg": "redeclaration of ‘int maxx’"
    },
    {
      "mod_line": [
        2,
        12,
        5
      ],
      "mod_code": [
        "int n , c1 , c2 = 0 , maxx = 0 , maxx = 0 , minn = 1000000007 ;",
        "if ( maxx == minn ) break ;",
        "cout << a [ i ] ;"
      ],
      "err_line": 2,
      "err_msg": "redeclaration of ‘int maxx’"
    },
    {
      "mod_line": [
        2,
        5
      ],
      "mod_code": [
        "int n , c1 , c2 = 0 , maxx = 0 , maxx = 0 , minn = 1000000007 ;",
        "cout << a [ i ] ;"
      ],
      "err_line": 2,
      "err_msg": "redeclaration of ‘int maxx’"
    },
    {
      "mod_line": [
        6,
        12
      ],
      "mod_code": [
        "int maxx = max ( maxx , a [ i ] , minn = min ( minn , a [ i ] ) ) ;",
        "if ( maxx == minn ) break ;"
      ],
      "err_line": 12,
      "err_msg": "break statement not within loop or switch"
    },
    {
      "mod_line": [
        6,
        12,
        5
      ],
      "mod_code": [
        "int maxx = max ( maxx , a [ i ] , minn = min ( minn , a [ i ] ) ) ;",
        "if ( maxx == minn ) break ;",
        "cout << a [ i ] ;"
      ],
      "err_line": 12,
      "err_msg": "break statement not within loop or switch"
    },
    {
      "mod_line": [
        12,
        5
      ],
      "mod_code": [
        "if ( maxx == minn ) break ;",
        "cout << a [ i ] ;"
      ],
      "err_line": 12,
      "err_msg": "break statement not within loop or switch"
    }
  ]
}