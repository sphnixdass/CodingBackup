{
  "meta": {
    "index": 528,
    "hitid": "3L55D8AUFARM2SQFBSJ5ELJN656YCB",
    "workerid": "A2J7P30MA3S6OV",
    "probid": "821A",
    "subid": "39061626"
  },
  "lines": [
    {
      "line": 0,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 1,
      "text": "create long long n",
      "code": "long long n ;",
      "indent": 1
    },
    {
      "line": 2,
      "text": "read n",
      "code": "cin >> n ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "create long long arr [ n + 1 ] [ n + 1 ]",
      "code": "long long arr [ n + 1 ] [ n + 1 ] ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "for i = 0 to n exclusive",
      "code": "for ( long long i = 0 ; i < n ; i ++ )",
      "indent": 1
    },
    {
      "line": 5,
      "text": "for j = 0 to n exclusive , read arr [ i ] [ j ]",
      "code": "for ( long long j = 0 ; j < n ; j ++ ) { cin >> arr [ i ] [ j ] ; }",
      "indent": 2
    },
    {
      "line": 6,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 7,
      "text": "flag = 0",
      "code": "long long flag = 0 ;",
      "indent": 1
    },
    {
      "line": 8,
      "text": "for i = 0 to n exclusive",
      "code": "for ( long long i = 0 ; i < n ; i ++ )",
      "indent": 1
    },
    {
      "line": 9,
      "text": "for j = 0 to n exclusive",
      "code": "for ( long long j = 0 ; j < n ; j ++ )",
      "indent": 2
    },
    {
      "line": 10,
      "text": "if arr [ i ] [ j ] different from 1",
      "code": "if ( arr [ i ] [ j ] != 1 )",
      "indent": 3
    },
    {
      "line": 11,
      "text": "flag = 0",
      "code": "flag = 0 ;",
      "indent": 4
    },
    {
      "line": 12,
      "text": "for k = 0 to n exclusive",
      "code": "for ( long long k = 0 ; k < n ; k ++ )",
      "indent": 4
    },
    {
      "line": 13,
      "text": "for l = 0 to n exclusive",
      "code": "for ( long long l = 0 ; l < n ; l ++ )",
      "indent": 5
    },
    {
      "line": 14,
      "text": "if arr [ k ] [ j ] + arr [ i ] [ l ] = arr [ i ] [ j ]",
      "code": "if ( arr [ k ] [ j ] + arr [ i ] [ l ] == arr [ i ] [ j ] )",
      "indent": 6
    },
    {
      "line": 15,
      "text": "flag = 1",
      "code": "flag = 1 ;",
      "indent": 7
    },
    {
      "line": 16,
      "text": "break",
      "code": "break ;",
      "indent": 7
    },
    {
      "line": 17,
      "text": "DUMMY",
      "code": "}",
      "indent": 6
    },
    {
      "line": 18,
      "text": "DUMMY",
      "code": "}",
      "indent": 5
    },
    {
      "line": 19,
      "text": "DUMMY",
      "code": "}",
      "indent": 4
    },
    {
      "line": 20,
      "text": "if flag = 0",
      "code": "if ( ! flag )",
      "indent": 4
    },
    {
      "line": 21,
      "text": "print No",
      "code": "cout << \" No \" << endl ;",
      "indent": 5
    },
    {
      "line": 22,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 5
    },
    {
      "line": 23,
      "text": "DUMMY",
      "code": "}",
      "indent": 4
    },
    {
      "line": 24,
      "text": "DUMMY",
      "code": "}",
      "indent": 3
    },
    {
      "line": 25,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 26,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 27,
      "text": "print Yes",
      "code": "cout << \" Yes \" << endl ;",
      "indent": 1
    },
    {
      "line": 28,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        2
      ],
      "mod_code": [
        "while ( cin >> n )"
      ],
      "err_line": 5,
      "err_msg": "‘arr’ was not declared in this scope"
    },
    {
      "mod_line": [
        4
      ],
      "mod_code": [
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 4,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        5
      ],
      "mod_code": [
        "for ( j = 0 ; j < n ; j ++ ) { cin >> arr [ i ] [ j ] ; }"
      ],
      "err_line": 5,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        7
      ],
      "mod_code": [
        "flag = 0 ;"
      ],
      "err_line": 7,
      "err_msg": "‘flag’ was not declared in this scope"
    },
    {
      "mod_line": [
        8
      ],
      "mod_code": [
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 8,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        9
      ],
      "mod_code": [
        "for ( j = 0 ; j < n ; j ++ )"
      ],
      "err_line": 9,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        12
      ],
      "mod_code": [
        "for ( k = 0 ; k < n ; k ++ )"
      ],
      "err_line": 12,
      "err_msg": "‘k’ was not declared in this scope"
    },
    {
      "mod_line": [
        13
      ],
      "mod_code": [
        "for ( l = 0 ; l < n ; l ++ )"
      ],
      "err_line": 13,
      "err_msg": "‘l’ was not declared in this scope"
    },
    {
      "mod_line": [
        14
      ],
      "mod_code": [
        "if ( arr [ k ] [ j ] + arr [ i ] [ l ] = arr [ i ] [ j ] )"
      ],
      "err_line": 14,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        16
      ],
      "mod_code": [
        "break break ;"
      ],
      "err_line": 16,
      "err_msg": "expected ‘;’ before ‘break’"
    },
    {
      "mod_line": [
        8,
        16
      ],
      "mod_code": [
        "for ( i = 0 ; i < n ; i ++ )",
        "break break ;"
      ],
      "err_line": 8,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        8,
        16,
        14
      ],
      "mod_code": [
        "for ( i = 0 ; i < n ; i ++ )",
        "break break ;",
        "if ( arr [ k ] [ j ] + arr [ i ] [ l ] = arr [ i ] [ j ] )"
      ],
      "err_line": 8,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        8,
        16,
        14,
        4
      ],
      "mod_code": [
        "for ( i = 0 ; i < n ; i ++ )",
        "break break ;",
        "if ( arr [ k ] [ j ] + arr [ i ] [ l ] = arr [ i ] [ j ] )",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 4,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        8,
        16,
        14,
        2
      ],
      "mod_code": [
        "for ( i = 0 ; i < n ; i ++ )",
        "break break ;",
        "if ( arr [ k ] [ j ] + arr [ i ] [ l ] = arr [ i ] [ j ] )",
        "while ( cin >> n )"
      ],
      "err_line": 5,
      "err_msg": "‘arr’ was not declared in this scope"
    },
    {
      "mod_line": [
        8,
        16,
        14,
        7
      ],
      "mod_code": [
        "for ( i = 0 ; i < n ; i ++ )",
        "break break ;",
        "if ( arr [ k ] [ j ] + arr [ i ] [ l ] = arr [ i ] [ j ] )",
        "flag = 0 ;"
      ],
      "err_line": 7,
      "err_msg": "‘flag’ was not declared in this scope"
    },
    {
      "mod_line": [
        8,
        16,
        4
      ],
      "mod_code": [
        "for ( i = 0 ; i < n ; i ++ )",
        "break break ;",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 4,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        8,
        16,
        4,
        2
      ],
      "mod_code": [
        "for ( i = 0 ; i < n ; i ++ )",
        "break break ;",
        "for ( i = 0 ; i < n ; i ++ )",
        "while ( cin >> n )"
      ],
      "err_line": 4,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        8,
        16,
        4,
        7
      ],
      "mod_code": [
        "for ( i = 0 ; i < n ; i ++ )",
        "break break ;",
        "for ( i = 0 ; i < n ; i ++ )",
        "flag = 0 ;"
      ],
      "err_line": 4,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        8,
        16,
        2
      ],
      "mod_code": [
        "for ( i = 0 ; i < n ; i ++ )",
        "break break ;",
        "while ( cin >> n )"
      ],
      "err_line": 5,
      "err_msg": "‘arr’ was not declared in this scope"
    },
    {
      "mod_line": [
        8,
        16,
        2,
        7
      ],
      "mod_code": [
        "for ( i = 0 ; i < n ; i ++ )",
        "break break ;",
        "while ( cin >> n )",
        "flag = 0 ;"
      ],
      "err_line": 5,
      "err_msg": "‘arr’ was not declared in this scope"
    },
    {
      "mod_line": [
        8,
        16,
        7
      ],
      "mod_code": [
        "for ( i = 0 ; i < n ; i ++ )",
        "break break ;",
        "flag = 0 ;"
      ],
      "err_line": 7,
      "err_msg": "‘flag’ was not declared in this scope"
    },
    {
      "mod_line": [
        8,
        14
      ],
      "mod_code": [
        "for ( i = 0 ; i < n ; i ++ )",
        "if ( arr [ k ] [ j ] + arr [ i ] [ l ] = arr [ i ] [ j ] )"
      ],
      "err_line": 8,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        8,
        14,
        4
      ],
      "mod_code": [
        "for ( i = 0 ; i < n ; i ++ )",
        "if ( arr [ k ] [ j ] + arr [ i ] [ l ] = arr [ i ] [ j ] )",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 4,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        8,
        14,
        4,
        2
      ],
      "mod_code": [
        "for ( i = 0 ; i < n ; i ++ )",
        "if ( arr [ k ] [ j ] + arr [ i ] [ l ] = arr [ i ] [ j ] )",
        "for ( i = 0 ; i < n ; i ++ )",
        "while ( cin >> n )"
      ],
      "err_line": 4,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        8,
        14,
        4,
        7
      ],
      "mod_code": [
        "for ( i = 0 ; i < n ; i ++ )",
        "if ( arr [ k ] [ j ] + arr [ i ] [ l ] = arr [ i ] [ j ] )",
        "for ( i = 0 ; i < n ; i ++ )",
        "flag = 0 ;"
      ],
      "err_line": 4,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        8,
        14,
        2
      ],
      "mod_code": [
        "for ( i = 0 ; i < n ; i ++ )",
        "if ( arr [ k ] [ j ] + arr [ i ] [ l ] = arr [ i ] [ j ] )",
        "while ( cin >> n )"
      ],
      "err_line": 5,
      "err_msg": "‘arr’ was not declared in this scope"
    },
    {
      "mod_line": [
        8,
        14,
        2,
        7
      ],
      "mod_code": [
        "for ( i = 0 ; i < n ; i ++ )",
        "if ( arr [ k ] [ j ] + arr [ i ] [ l ] = arr [ i ] [ j ] )",
        "while ( cin >> n )",
        "flag = 0 ;"
      ],
      "err_line": 5,
      "err_msg": "‘arr’ was not declared in this scope"
    },
    {
      "mod_line": [
        8,
        14,
        7
      ],
      "mod_code": [
        "for ( i = 0 ; i < n ; i ++ )",
        "if ( arr [ k ] [ j ] + arr [ i ] [ l ] = arr [ i ] [ j ] )",
        "flag = 0 ;"
      ],
      "err_line": 7,
      "err_msg": "‘flag’ was not declared in this scope"
    },
    {
      "mod_line": [
        8,
        4
      ],
      "mod_code": [
        "for ( i = 0 ; i < n ; i ++ )",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 4,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        8,
        4,
        2
      ],
      "mod_code": [
        "for ( i = 0 ; i < n ; i ++ )",
        "for ( i = 0 ; i < n ; i ++ )",
        "while ( cin >> n )"
      ],
      "err_line": 4,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        8,
        4,
        2,
        7
      ],
      "mod_code": [
        "for ( i = 0 ; i < n ; i ++ )",
        "for ( i = 0 ; i < n ; i ++ )",
        "while ( cin >> n )",
        "flag = 0 ;"
      ],
      "err_line": 4,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        8,
        4,
        7
      ],
      "mod_code": [
        "for ( i = 0 ; i < n ; i ++ )",
        "for ( i = 0 ; i < n ; i ++ )",
        "flag = 0 ;"
      ],
      "err_line": 4,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        8,
        2
      ],
      "mod_code": [
        "for ( i = 0 ; i < n ; i ++ )",
        "while ( cin >> n )"
      ],
      "err_line": 5,
      "err_msg": "‘arr’ was not declared in this scope"
    },
    {
      "mod_line": [
        8,
        2,
        7
      ],
      "mod_code": [
        "for ( i = 0 ; i < n ; i ++ )",
        "while ( cin >> n )",
        "flag = 0 ;"
      ],
      "err_line": 5,
      "err_msg": "‘arr’ was not declared in this scope"
    },
    {
      "mod_line": [
        8,
        7
      ],
      "mod_code": [
        "for ( i = 0 ; i < n ; i ++ )",
        "flag = 0 ;"
      ],
      "err_line": 7,
      "err_msg": "‘flag’ was not declared in this scope"
    },
    {
      "mod_line": [
        16,
        14
      ],
      "mod_code": [
        "break break ;",
        "if ( arr [ k ] [ j ] + arr [ i ] [ l ] = arr [ i ] [ j ] )"
      ],
      "err_line": 14,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        16,
        14,
        4
      ],
      "mod_code": [
        "break break ;",
        "if ( arr [ k ] [ j ] + arr [ i ] [ l ] = arr [ i ] [ j ] )",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 4,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        16,
        14,
        4,
        2
      ],
      "mod_code": [
        "break break ;",
        "if ( arr [ k ] [ j ] + arr [ i ] [ l ] = arr [ i ] [ j ] )",
        "for ( i = 0 ; i < n ; i ++ )",
        "while ( cin >> n )"
      ],
      "err_line": 4,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        16,
        14,
        4,
        7
      ],
      "mod_code": [
        "break break ;",
        "if ( arr [ k ] [ j ] + arr [ i ] [ l ] = arr [ i ] [ j ] )",
        "for ( i = 0 ; i < n ; i ++ )",
        "flag = 0 ;"
      ],
      "err_line": 4,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        16,
        14,
        2
      ],
      "mod_code": [
        "break break ;",
        "if ( arr [ k ] [ j ] + arr [ i ] [ l ] = arr [ i ] [ j ] )",
        "while ( cin >> n )"
      ],
      "err_line": 5,
      "err_msg": "‘arr’ was not declared in this scope"
    },
    {
      "mod_line": [
        16,
        14,
        2,
        7
      ],
      "mod_code": [
        "break break ;",
        "if ( arr [ k ] [ j ] + arr [ i ] [ l ] = arr [ i ] [ j ] )",
        "while ( cin >> n )",
        "flag = 0 ;"
      ],
      "err_line": 5,
      "err_msg": "‘arr’ was not declared in this scope"
    },
    {
      "mod_line": [
        16,
        14,
        7
      ],
      "mod_code": [
        "break break ;",
        "if ( arr [ k ] [ j ] + arr [ i ] [ l ] = arr [ i ] [ j ] )",
        "flag = 0 ;"
      ],
      "err_line": 7,
      "err_msg": "‘flag’ was not declared in this scope"
    },
    {
      "mod_line": [
        16,
        4
      ],
      "mod_code": [
        "break break ;",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 4,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        16,
        4,
        2
      ],
      "mod_code": [
        "break break ;",
        "for ( i = 0 ; i < n ; i ++ )",
        "while ( cin >> n )"
      ],
      "err_line": 4,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        16,
        4,
        2,
        7
      ],
      "mod_code": [
        "break break ;",
        "for ( i = 0 ; i < n ; i ++ )",
        "while ( cin >> n )",
        "flag = 0 ;"
      ],
      "err_line": 4,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        16,
        4,
        7
      ],
      "mod_code": [
        "break break ;",
        "for ( i = 0 ; i < n ; i ++ )",
        "flag = 0 ;"
      ],
      "err_line": 4,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        16,
        2
      ],
      "mod_code": [
        "break break ;",
        "while ( cin >> n )"
      ],
      "err_line": 5,
      "err_msg": "‘arr’ was not declared in this scope"
    },
    {
      "mod_line": [
        16,
        2,
        7
      ],
      "mod_code": [
        "break break ;",
        "while ( cin >> n )",
        "flag = 0 ;"
      ],
      "err_line": 5,
      "err_msg": "‘arr’ was not declared in this scope"
    },
    {
      "mod_line": [
        16,
        7
      ],
      "mod_code": [
        "break break ;",
        "flag = 0 ;"
      ],
      "err_line": 7,
      "err_msg": "‘flag’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        4
      ],
      "mod_code": [
        "if ( arr [ k ] [ j ] + arr [ i ] [ l ] = arr [ i ] [ j ] )",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 4,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        4,
        2
      ],
      "mod_code": [
        "if ( arr [ k ] [ j ] + arr [ i ] [ l ] = arr [ i ] [ j ] )",
        "for ( i = 0 ; i < n ; i ++ )",
        "while ( cin >> n )"
      ],
      "err_line": 4,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        4,
        2,
        7
      ],
      "mod_code": [
        "if ( arr [ k ] [ j ] + arr [ i ] [ l ] = arr [ i ] [ j ] )",
        "for ( i = 0 ; i < n ; i ++ )",
        "while ( cin >> n )",
        "flag = 0 ;"
      ],
      "err_line": 4,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        4,
        7
      ],
      "mod_code": [
        "if ( arr [ k ] [ j ] + arr [ i ] [ l ] = arr [ i ] [ j ] )",
        "for ( i = 0 ; i < n ; i ++ )",
        "flag = 0 ;"
      ],
      "err_line": 4,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        2
      ],
      "mod_code": [
        "if ( arr [ k ] [ j ] + arr [ i ] [ l ] = arr [ i ] [ j ] )",
        "while ( cin >> n )"
      ],
      "err_line": 5,
      "err_msg": "‘arr’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        2,
        7
      ],
      "mod_code": [
        "if ( arr [ k ] [ j ] + arr [ i ] [ l ] = arr [ i ] [ j ] )",
        "while ( cin >> n )",
        "flag = 0 ;"
      ],
      "err_line": 5,
      "err_msg": "‘arr’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        7
      ],
      "mod_code": [
        "if ( arr [ k ] [ j ] + arr [ i ] [ l ] = arr [ i ] [ j ] )",
        "flag = 0 ;"
      ],
      "err_line": 7,
      "err_msg": "‘flag’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        2
      ],
      "mod_code": [
        "for ( i = 0 ; i < n ; i ++ )",
        "while ( cin >> n )"
      ],
      "err_line": 4,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        2,
        7
      ],
      "mod_code": [
        "for ( i = 0 ; i < n ; i ++ )",
        "while ( cin >> n )",
        "flag = 0 ;"
      ],
      "err_line": 4,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        7
      ],
      "mod_code": [
        "for ( i = 0 ; i < n ; i ++ )",
        "flag = 0 ;"
      ],
      "err_line": 4,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        2,
        7
      ],
      "mod_code": [
        "while ( cin >> n )",
        "flag = 0 ;"
      ],
      "err_line": 5,
      "err_msg": "‘arr’ was not declared in this scope"
    }
  ]
}