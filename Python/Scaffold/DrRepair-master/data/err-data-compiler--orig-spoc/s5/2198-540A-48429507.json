{
  "meta": {
    "index": 2198,
    "hitid": "3FULMHZ7OURJD7OMZAPC1SKS5IA4MD",
    "workerid": "A1R0Q9CUUBSM5F",
    "probid": "540A",
    "subid": "48429507"
  },
  "lines": [
    {
      "line": 0,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 1,
      "text": "create ints n , p , ans , q , and sum = 0",
      "code": "int n , p , ans , q , sum = 0 ;",
      "indent": 1
    },
    {
      "line": 2,
      "text": "make strings a and b",
      "code": "string a , b ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "read n , a , and b",
      "code": "cin >> n >> a >> b ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "for i = 0 to n exclusive",
      "code": "for ( int i = 0 ; i < n ; i ++ )",
      "indent": 1
    },
    {
      "line": 5,
      "text": "set p to abs ( a [ i ] - b [ i ] )",
      "code": "p = abs ( a [ i ] - b [ i ] ) ;",
      "indent": 2
    },
    {
      "line": 6,
      "text": "if a [ i ] is greater than b [ i ]",
      "code": "if ( a [ i ] > b [ i ] )",
      "indent": 2
    },
    {
      "line": 7,
      "text": "set ans to 10 - a [ i ] to b [ i ]",
      "code": "ans = 10 - a [ i ] + b [ i ] ;",
      "indent": 3
    },
    {
      "line": 8,
      "text": "else do",
      "code": "else",
      "indent": 2
    },
    {
      "line": 9,
      "text": "set ans to 10 - b [ i ] + a [ i ]",
      "code": "ans = 10 - b [ i ] + a [ i ] ;",
      "indent": 3
    },
    {
      "line": 10,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 11,
      "text": "set q to min ( ans , p )",
      "code": "q = min ( ans , p ) ;",
      "indent": 2
    },
    {
      "line": 12,
      "text": "set sum to sum + q",
      "code": "sum = sum + q ;",
      "indent": 2
    },
    {
      "line": 13,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 14,
      "text": "show sum",
      "code": "cout << sum << endl ;",
      "indent": 1
    },
    {
      "line": 15,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        7
      ],
      "mod_code": [
        "ans [ i ] = b - a [ i ] ;"
      ],
      "err_line": 7,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        2
      ],
      "mod_code": [
        "string a and b ;"
      ],
      "err_line": 2,
      "err_msg": "expected initializer before ‘and’ token"
    },
    {
      "mod_line": [
        4
      ],
      "mod_code": [
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 4,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        6
      ],
      "mod_code": [
        "if ( a [ i ] ] > b [ i ] )"
      ],
      "err_line": 6,
      "err_msg": "expected ‘)’ before ‘]’ token"
    },
    {
      "mod_line": [
        7
      ],
      "mod_code": [
        "ans [ i ] = 10 - a [ i ] ;"
      ],
      "err_line": 7,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        8
      ],
      "mod_code": [
        "else do"
      ],
      "err_line": 11,
      "err_msg": "expected ‘while’ before ‘q’"
    },
    {
      "mod_line": [
        7,
        8
      ],
      "mod_code": [
        "ans [ i ] = b - a [ i ] ;",
        "else do"
      ],
      "err_line": 7,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        7,
        8,
        6
      ],
      "mod_code": [
        "ans [ i ] = b - a [ i ] ;",
        "else do",
        "if ( a [ i ] ] > b [ i ] )"
      ],
      "err_line": 6,
      "err_msg": "expected ‘)’ before ‘]’ token"
    },
    {
      "mod_line": [
        7,
        8,
        6,
        4
      ],
      "mod_code": [
        "ans [ i ] = b - a [ i ] ;",
        "else do",
        "if ( a [ i ] ] > b [ i ] )",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 4,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        7,
        8,
        6,
        2
      ],
      "mod_code": [
        "ans [ i ] = b - a [ i ] ;",
        "else do",
        "if ( a [ i ] ] > b [ i ] )",
        "string a and b ;"
      ],
      "err_line": 2,
      "err_msg": "expected initializer before ‘and’ token"
    },
    {
      "mod_line": [
        7,
        8,
        4
      ],
      "mod_code": [
        "ans [ i ] = b - a [ i ] ;",
        "else do",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 4,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        7,
        8,
        4,
        2
      ],
      "mod_code": [
        "ans [ i ] = b - a [ i ] ;",
        "else do",
        "for ( i = 0 ; i < n ; i ++ )",
        "string a and b ;"
      ],
      "err_line": 2,
      "err_msg": "expected initializer before ‘and’ token"
    },
    {
      "mod_line": [
        7,
        8,
        2
      ],
      "mod_code": [
        "ans [ i ] = b - a [ i ] ;",
        "else do",
        "string a and b ;"
      ],
      "err_line": 2,
      "err_msg": "expected initializer before ‘and’ token"
    },
    {
      "mod_line": [
        7,
        6
      ],
      "mod_code": [
        "ans [ i ] = b - a [ i ] ;",
        "if ( a [ i ] ] > b [ i ] )"
      ],
      "err_line": 6,
      "err_msg": "expected ‘)’ before ‘]’ token"
    },
    {
      "mod_line": [
        7,
        6,
        4
      ],
      "mod_code": [
        "ans [ i ] = b - a [ i ] ;",
        "if ( a [ i ] ] > b [ i ] )",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 4,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        7,
        6,
        4,
        2
      ],
      "mod_code": [
        "ans [ i ] = b - a [ i ] ;",
        "if ( a [ i ] ] > b [ i ] )",
        "for ( i = 0 ; i < n ; i ++ )",
        "string a and b ;"
      ],
      "err_line": 2,
      "err_msg": "expected initializer before ‘and’ token"
    },
    {
      "mod_line": [
        7,
        6,
        2
      ],
      "mod_code": [
        "ans [ i ] = b - a [ i ] ;",
        "if ( a [ i ] ] > b [ i ] )",
        "string a and b ;"
      ],
      "err_line": 2,
      "err_msg": "expected initializer before ‘and’ token"
    },
    {
      "mod_line": [
        7,
        4
      ],
      "mod_code": [
        "ans [ i ] = b - a [ i ] ;",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 4,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        7,
        4,
        2
      ],
      "mod_code": [
        "ans [ i ] = b - a [ i ] ;",
        "for ( i = 0 ; i < n ; i ++ )",
        "string a and b ;"
      ],
      "err_line": 2,
      "err_msg": "expected initializer before ‘and’ token"
    },
    {
      "mod_line": [
        7,
        2
      ],
      "mod_code": [
        "ans [ i ] = b - a [ i ] ;",
        "string a and b ;"
      ],
      "err_line": 2,
      "err_msg": "expected initializer before ‘and’ token"
    },
    {
      "mod_line": [
        8,
        6
      ],
      "mod_code": [
        "else do",
        "if ( a [ i ] ] > b [ i ] )"
      ],
      "err_line": 6,
      "err_msg": "expected ‘)’ before ‘]’ token"
    },
    {
      "mod_line": [
        8,
        6,
        7
      ],
      "mod_code": [
        "else do",
        "if ( a [ i ] ] > b [ i ] )",
        "ans [ i ] = 10 - a [ i ] ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘)’ before ‘]’ token"
    },
    {
      "mod_line": [
        8,
        6,
        7,
        4
      ],
      "mod_code": [
        "else do",
        "if ( a [ i ] ] > b [ i ] )",
        "ans [ i ] = 10 - a [ i ] ;",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 4,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        8,
        6,
        7,
        2
      ],
      "mod_code": [
        "else do",
        "if ( a [ i ] ] > b [ i ] )",
        "ans [ i ] = 10 - a [ i ] ;",
        "string a and b ;"
      ],
      "err_line": 2,
      "err_msg": "expected initializer before ‘and’ token"
    },
    {
      "mod_line": [
        8,
        6,
        4
      ],
      "mod_code": [
        "else do",
        "if ( a [ i ] ] > b [ i ] )",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 4,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        8,
        6,
        4,
        2
      ],
      "mod_code": [
        "else do",
        "if ( a [ i ] ] > b [ i ] )",
        "for ( i = 0 ; i < n ; i ++ )",
        "string a and b ;"
      ],
      "err_line": 2,
      "err_msg": "expected initializer before ‘and’ token"
    },
    {
      "mod_line": [
        8,
        6,
        2
      ],
      "mod_code": [
        "else do",
        "if ( a [ i ] ] > b [ i ] )",
        "string a and b ;"
      ],
      "err_line": 2,
      "err_msg": "expected initializer before ‘and’ token"
    },
    {
      "mod_line": [
        8,
        7
      ],
      "mod_code": [
        "else do",
        "ans [ i ] = 10 - a [ i ] ;"
      ],
      "err_line": 7,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        8,
        7,
        4
      ],
      "mod_code": [
        "else do",
        "ans [ i ] = 10 - a [ i ] ;",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 4,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        8,
        7,
        4,
        2
      ],
      "mod_code": [
        "else do",
        "ans [ i ] = 10 - a [ i ] ;",
        "for ( i = 0 ; i < n ; i ++ )",
        "string a and b ;"
      ],
      "err_line": 2,
      "err_msg": "expected initializer before ‘and’ token"
    },
    {
      "mod_line": [
        8,
        7,
        2
      ],
      "mod_code": [
        "else do",
        "ans [ i ] = 10 - a [ i ] ;",
        "string a and b ;"
      ],
      "err_line": 2,
      "err_msg": "expected initializer before ‘and’ token"
    },
    {
      "mod_line": [
        8,
        4
      ],
      "mod_code": [
        "else do",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 4,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        8,
        4,
        2
      ],
      "mod_code": [
        "else do",
        "for ( i = 0 ; i < n ; i ++ )",
        "string a and b ;"
      ],
      "err_line": 2,
      "err_msg": "expected initializer before ‘and’ token"
    },
    {
      "mod_line": [
        8,
        2
      ],
      "mod_code": [
        "else do",
        "string a and b ;"
      ],
      "err_line": 2,
      "err_msg": "expected initializer before ‘and’ token"
    },
    {
      "mod_line": [
        6,
        7
      ],
      "mod_code": [
        "if ( a [ i ] ] > b [ i ] )",
        "ans [ i ] = 10 - a [ i ] ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘)’ before ‘]’ token"
    },
    {
      "mod_line": [
        6,
        7,
        4
      ],
      "mod_code": [
        "if ( a [ i ] ] > b [ i ] )",
        "ans [ i ] = 10 - a [ i ] ;",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 4,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        7,
        4,
        2
      ],
      "mod_code": [
        "if ( a [ i ] ] > b [ i ] )",
        "ans [ i ] = 10 - a [ i ] ;",
        "for ( i = 0 ; i < n ; i ++ )",
        "string a and b ;"
      ],
      "err_line": 2,
      "err_msg": "expected initializer before ‘and’ token"
    },
    {
      "mod_line": [
        6,
        7,
        2
      ],
      "mod_code": [
        "if ( a [ i ] ] > b [ i ] )",
        "ans [ i ] = 10 - a [ i ] ;",
        "string a and b ;"
      ],
      "err_line": 2,
      "err_msg": "expected initializer before ‘and’ token"
    },
    {
      "mod_line": [
        6,
        4
      ],
      "mod_code": [
        "if ( a [ i ] ] > b [ i ] )",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 4,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        4,
        2
      ],
      "mod_code": [
        "if ( a [ i ] ] > b [ i ] )",
        "for ( i = 0 ; i < n ; i ++ )",
        "string a and b ;"
      ],
      "err_line": 2,
      "err_msg": "expected initializer before ‘and’ token"
    },
    {
      "mod_line": [
        6,
        2
      ],
      "mod_code": [
        "if ( a [ i ] ] > b [ i ] )",
        "string a and b ;"
      ],
      "err_line": 2,
      "err_msg": "expected initializer before ‘and’ token"
    },
    {
      "mod_line": [
        7,
        4
      ],
      "mod_code": [
        "ans [ i ] = 10 - a [ i ] ;",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 4,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        7,
        4,
        2
      ],
      "mod_code": [
        "ans [ i ] = 10 - a [ i ] ;",
        "for ( i = 0 ; i < n ; i ++ )",
        "string a and b ;"
      ],
      "err_line": 2,
      "err_msg": "expected initializer before ‘and’ token"
    },
    {
      "mod_line": [
        7,
        2
      ],
      "mod_code": [
        "ans [ i ] = 10 - a [ i ] ;",
        "string a and b ;"
      ],
      "err_line": 2,
      "err_msg": "expected initializer before ‘and’ token"
    },
    {
      "mod_line": [
        4,
        2
      ],
      "mod_code": [
        "for ( i = 0 ; i < n ; i ++ )",
        "string a and b ;"
      ],
      "err_line": 2,
      "err_msg": "expected initializer before ‘and’ token"
    }
  ]
}