{
  "meta": {
    "index": 1341,
    "hitid": "3M7OI89LVYIKJ8G959ODVUZU7V76CD",
    "workerid": "AIWEXPJAU66D9",
    "probid": "1100A",
    "subid": "48963082"
  },
  "lines": [
    {
      "line": 0,
      "text": "create integers n , k , t , f and ans where t , f and ans = 0",
      "code": "int n , k , t = 0 , f = 0 , ans = 0 ;",
      "indent": 0
    },
    {
      "line": 1,
      "text": "declare integer array a with size 110",
      "code": "int a [ 110 ] ;",
      "indent": 0
    },
    {
      "line": 2,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 3,
      "text": "read input to n and k",
      "code": "cin >> n >> k ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "loop i from 1 to n inclusive",
      "code": "for ( int i = 1 ; i <= n ; i ++ )",
      "indent": 1
    },
    {
      "line": 5,
      "text": "read input to a [ i ]",
      "code": "cin >> a [ i ] ;",
      "indent": 2
    },
    {
      "line": 6,
      "text": "if a [ i ] = 1",
      "code": "if ( a [ i ] == 1 )",
      "indent": 2
    },
    {
      "line": 7,
      "text": "increment t",
      "code": "t ++ ;",
      "indent": 3
    },
    {
      "line": 8,
      "text": "else",
      "code": "else",
      "indent": 2
    },
    {
      "line": 9,
      "text": "increment f",
      "code": "f ++ ;",
      "indent": 3
    },
    {
      "line": 10,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 11,
      "text": "for i from 1 to n inclusive",
      "code": "for ( int i = 1 ; i <= n ; i ++ )",
      "indent": 1
    },
    {
      "line": 12,
      "text": "create int x = t and y = f",
      "code": "int x = t , y = f ;",
      "indent": 2
    },
    {
      "line": 13,
      "text": "declare integer j = i",
      "code": "int j = i ;",
      "indent": 2
    },
    {
      "line": 14,
      "text": "while j < = n",
      "code": "while ( j <= n )",
      "indent": 2
    },
    {
      "line": 15,
      "text": "if a [ j ] is equal to 1",
      "code": "if ( a [ j ] == 1 )",
      "indent": 3
    },
    {
      "line": 16,
      "text": "decrement x",
      "code": "x -- ;",
      "indent": 4
    },
    {
      "line": 17,
      "text": "else",
      "code": "else",
      "indent": 3
    },
    {
      "line": 18,
      "text": "decrement y",
      "code": "y -- ;",
      "indent": 4
    },
    {
      "line": 19,
      "text": "add k to j",
      "code": "j += k ;",
      "indent": 3
    },
    {
      "line": 20,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 21,
      "text": "change j to i - k",
      "code": "j = i - k ;",
      "indent": 2
    },
    {
      "line": 22,
      "text": "while j > = 1",
      "code": "while ( j >= 1 )",
      "indent": 2
    },
    {
      "line": 23,
      "text": "if a [ j ] is equal to 1",
      "code": "if ( a [ j ] == 1 )",
      "indent": 3
    },
    {
      "line": 24,
      "text": "decrement x by one",
      "code": "x -- ;",
      "indent": 4
    },
    {
      "line": 25,
      "text": "else",
      "code": "else",
      "indent": 3
    },
    {
      "line": 26,
      "text": "decrement y by one",
      "code": "y -- ;",
      "indent": 4
    },
    {
      "line": 27,
      "text": "subtract k from j",
      "code": "j -= k ;",
      "indent": 3
    },
    {
      "line": 28,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 29,
      "text": "assign max of ans and fabs ( x - y ) to ans",
      "code": "ans = max ( ans , ( int ) fabs ( x - y ) ) ;",
      "indent": 2
    },
    {
      "line": 30,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 31,
      "text": "print ans",
      "code": "cout << ans << endl ;",
      "indent": 1
    },
    {
      "line": 32,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        29
      ],
      "mod_code": [
        "ans = max ( ans , fabs ( x - y ) ) ;"
      ],
      "err_line": 29,
      "err_msg": "no matching function for call to ‘max(int&, __gnu_cxx::__enable_if<true, double>::__type)’"
    },
    {
      "mod_line": [
        1
      ],
      "mod_code": [
        "int * a [ 110 ] ;"
      ],
      "err_line": 5,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘int*’)"
    },
    {
      "mod_line": [
        4
      ],
      "mod_code": [
        "for ( i = 1 ; i <= n ; i ++ )"
      ],
      "err_line": 4,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        5
      ],
      "mod_code": [
        "a >> a [ i ] ;"
      ],
      "err_line": 5,
      "err_msg": "invalid operands of types ‘int [110]’ and ‘int’ to binary ‘operator>>’"
    },
    {
      "mod_line": [
        11
      ],
      "mod_code": [
        "for ( i = 1 ; i <= n ; i ++ )"
      ],
      "err_line": 11,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        24
      ],
      "mod_code": [
        "x -= one ;"
      ],
      "err_line": 24,
      "err_msg": "‘one’ was not declared in this scope"
    },
    {
      "mod_line": [
        26
      ],
      "mod_code": [
        "y -= one ;"
      ],
      "err_line": 26,
      "err_msg": "‘one’ was not declared in this scope"
    },
    {
      "mod_line": [
        29
      ],
      "mod_code": [
        "ans = max ( ans - y ) ;"
      ],
      "err_line": 29,
      "err_msg": "no matching function for call to ‘max(int)’"
    },
    {
      "mod_line": [
        29,
        6
      ],
      "mod_code": [
        "ans = max ( ans , fabs ( x - y ) ) ;",
        "if ( a [ i ] == ' 1 ' )"
      ],
      "err_line": 29,
      "err_msg": "no matching function for call to ‘max(int&, __gnu_cxx::__enable_if<true, double>::__type)’"
    },
    {
      "mod_line": [
        29,
        6,
        1
      ],
      "mod_code": [
        "ans = max ( ans , fabs ( x - y ) ) ;",
        "if ( a [ i ] == ' 1 ' )",
        "int * a [ 110 ] ;"
      ],
      "err_line": 5,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘int*’)"
    },
    {
      "mod_line": [
        29,
        6,
        1,
        21
      ],
      "mod_code": [
        "ans = max ( ans , fabs ( x - y ) ) ;",
        "if ( a [ i ] == ' 1 ' )",
        "int * a [ 110 ] ;",
        "j -= k ;"
      ],
      "err_line": 5,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘int*’)"
    },
    {
      "mod_line": [
        29,
        6,
        1,
        3
      ],
      "mod_code": [
        "ans = max ( ans , fabs ( x - y ) ) ;",
        "if ( a [ i ] == ' 1 ' )",
        "int * a [ 110 ] ;",
        "cin >> k >> k ;"
      ],
      "err_line": 5,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘int*’)"
    },
    {
      "mod_line": [
        29,
        6,
        1,
        24
      ],
      "mod_code": [
        "ans = max ( ans , fabs ( x - y ) ) ;",
        "if ( a [ i ] == ' 1 ' )",
        "int * a [ 110 ] ;",
        "x -= one ;"
      ],
      "err_line": 5,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘int*’)"
    },
    {
      "mod_line": [
        29,
        6,
        21
      ],
      "mod_code": [
        "ans = max ( ans , fabs ( x - y ) ) ;",
        "if ( a [ i ] == ' 1 ' )",
        "j -= k ;"
      ],
      "err_line": 29,
      "err_msg": "no matching function for call to ‘max(int&, __gnu_cxx::__enable_if<true, double>::__type)’"
    },
    {
      "mod_line": [
        29,
        6,
        21,
        3
      ],
      "mod_code": [
        "ans = max ( ans , fabs ( x - y ) ) ;",
        "if ( a [ i ] == ' 1 ' )",
        "j -= k ;",
        "cin >> k >> k ;"
      ],
      "err_line": 29,
      "err_msg": "no matching function for call to ‘max(int&, __gnu_cxx::__enable_if<true, double>::__type)’"
    },
    {
      "mod_line": [
        29,
        6,
        21,
        24
      ],
      "mod_code": [
        "ans = max ( ans , fabs ( x - y ) ) ;",
        "if ( a [ i ] == ' 1 ' )",
        "j -= k ;",
        "x -= one ;"
      ],
      "err_line": 24,
      "err_msg": "‘one’ was not declared in this scope"
    },
    {
      "mod_line": [
        29,
        6,
        3
      ],
      "mod_code": [
        "ans = max ( ans , fabs ( x - y ) ) ;",
        "if ( a [ i ] == ' 1 ' )",
        "cin >> k >> k ;"
      ],
      "err_line": 29,
      "err_msg": "no matching function for call to ‘max(int&, __gnu_cxx::__enable_if<true, double>::__type)’"
    },
    {
      "mod_line": [
        29,
        6,
        3,
        24
      ],
      "mod_code": [
        "ans = max ( ans , fabs ( x - y ) ) ;",
        "if ( a [ i ] == ' 1 ' )",
        "cin >> k >> k ;",
        "x -= one ;"
      ],
      "err_line": 24,
      "err_msg": "‘one’ was not declared in this scope"
    },
    {
      "mod_line": [
        29,
        6,
        24
      ],
      "mod_code": [
        "ans = max ( ans , fabs ( x - y ) ) ;",
        "if ( a [ i ] == ' 1 ' )",
        "x -= one ;"
      ],
      "err_line": 24,
      "err_msg": "‘one’ was not declared in this scope"
    },
    {
      "mod_line": [
        29,
        1
      ],
      "mod_code": [
        "ans = max ( ans , fabs ( x - y ) ) ;",
        "int * a [ 110 ] ;"
      ],
      "err_line": 5,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘int*’)"
    },
    {
      "mod_line": [
        29,
        1,
        21
      ],
      "mod_code": [
        "ans = max ( ans , fabs ( x - y ) ) ;",
        "int * a [ 110 ] ;",
        "j -= k ;"
      ],
      "err_line": 5,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘int*’)"
    },
    {
      "mod_line": [
        29,
        1,
        21,
        3
      ],
      "mod_code": [
        "ans = max ( ans , fabs ( x - y ) ) ;",
        "int * a [ 110 ] ;",
        "j -= k ;",
        "cin >> k >> k ;"
      ],
      "err_line": 5,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘int*’)"
    },
    {
      "mod_line": [
        29,
        1,
        21,
        24
      ],
      "mod_code": [
        "ans = max ( ans , fabs ( x - y ) ) ;",
        "int * a [ 110 ] ;",
        "j -= k ;",
        "x -= one ;"
      ],
      "err_line": 5,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘int*’)"
    },
    {
      "mod_line": [
        29,
        1,
        3
      ],
      "mod_code": [
        "ans = max ( ans , fabs ( x - y ) ) ;",
        "int * a [ 110 ] ;",
        "cin >> k >> k ;"
      ],
      "err_line": 5,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘int*’)"
    },
    {
      "mod_line": [
        29,
        1,
        3,
        24
      ],
      "mod_code": [
        "ans = max ( ans , fabs ( x - y ) ) ;",
        "int * a [ 110 ] ;",
        "cin >> k >> k ;",
        "x -= one ;"
      ],
      "err_line": 5,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘int*’)"
    },
    {
      "mod_line": [
        29,
        1,
        24
      ],
      "mod_code": [
        "ans = max ( ans , fabs ( x - y ) ) ;",
        "int * a [ 110 ] ;",
        "x -= one ;"
      ],
      "err_line": 5,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘int*’)"
    },
    {
      "mod_line": [
        29,
        21
      ],
      "mod_code": [
        "ans = max ( ans , fabs ( x - y ) ) ;",
        "j -= k ;"
      ],
      "err_line": 29,
      "err_msg": "no matching function for call to ‘max(int&, __gnu_cxx::__enable_if<true, double>::__type)’"
    },
    {
      "mod_line": [
        29,
        21,
        3
      ],
      "mod_code": [
        "ans = max ( ans , fabs ( x - y ) ) ;",
        "j -= k ;",
        "cin >> k >> k ;"
      ],
      "err_line": 29,
      "err_msg": "no matching function for call to ‘max(int&, __gnu_cxx::__enable_if<true, double>::__type)’"
    },
    {
      "mod_line": [
        29,
        21,
        3,
        24
      ],
      "mod_code": [
        "ans = max ( ans , fabs ( x - y ) ) ;",
        "j -= k ;",
        "cin >> k >> k ;",
        "x -= one ;"
      ],
      "err_line": 24,
      "err_msg": "‘one’ was not declared in this scope"
    },
    {
      "mod_line": [
        29,
        21,
        24
      ],
      "mod_code": [
        "ans = max ( ans , fabs ( x - y ) ) ;",
        "j -= k ;",
        "x -= one ;"
      ],
      "err_line": 24,
      "err_msg": "‘one’ was not declared in this scope"
    },
    {
      "mod_line": [
        29,
        3
      ],
      "mod_code": [
        "ans = max ( ans , fabs ( x - y ) ) ;",
        "cin >> k >> k ;"
      ],
      "err_line": 29,
      "err_msg": "no matching function for call to ‘max(int&, __gnu_cxx::__enable_if<true, double>::__type)’"
    },
    {
      "mod_line": [
        29,
        3,
        24
      ],
      "mod_code": [
        "ans = max ( ans , fabs ( x - y ) ) ;",
        "cin >> k >> k ;",
        "x -= one ;"
      ],
      "err_line": 24,
      "err_msg": "‘one’ was not declared in this scope"
    },
    {
      "mod_line": [
        29,
        24
      ],
      "mod_code": [
        "ans = max ( ans , fabs ( x - y ) ) ;",
        "x -= one ;"
      ],
      "err_line": 24,
      "err_msg": "‘one’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        1
      ],
      "mod_code": [
        "if ( a [ i ] == ' 1 ' )",
        "int * a [ 110 ] ;"
      ],
      "err_line": 5,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘int*’)"
    },
    {
      "mod_line": [
        6,
        1,
        21
      ],
      "mod_code": [
        "if ( a [ i ] == ' 1 ' )",
        "int * a [ 110 ] ;",
        "j -= k ;"
      ],
      "err_line": 5,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘int*’)"
    },
    {
      "mod_line": [
        6,
        1,
        21,
        3
      ],
      "mod_code": [
        "if ( a [ i ] == ' 1 ' )",
        "int * a [ 110 ] ;",
        "j -= k ;",
        "cin >> k >> k ;"
      ],
      "err_line": 5,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘int*’)"
    },
    {
      "mod_line": [
        6,
        1,
        21,
        24
      ],
      "mod_code": [
        "if ( a [ i ] == ' 1 ' )",
        "int * a [ 110 ] ;",
        "j -= k ;",
        "x -= one ;"
      ],
      "err_line": 5,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘int*’)"
    },
    {
      "mod_line": [
        6,
        1,
        3
      ],
      "mod_code": [
        "if ( a [ i ] == ' 1 ' )",
        "int * a [ 110 ] ;",
        "cin >> k >> k ;"
      ],
      "err_line": 5,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘int*’)"
    },
    {
      "mod_line": [
        6,
        1,
        3,
        24
      ],
      "mod_code": [
        "if ( a [ i ] == ' 1 ' )",
        "int * a [ 110 ] ;",
        "cin >> k >> k ;",
        "x -= one ;"
      ],
      "err_line": 5,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘int*’)"
    },
    {
      "mod_line": [
        6,
        1,
        24
      ],
      "mod_code": [
        "if ( a [ i ] == ' 1 ' )",
        "int * a [ 110 ] ;",
        "x -= one ;"
      ],
      "err_line": 5,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘int*’)"
    },
    {
      "mod_line": [
        6,
        21,
        3,
        24
      ],
      "mod_code": [
        "if ( a [ i ] == ' 1 ' )",
        "j -= k ;",
        "cin >> k >> k ;",
        "x -= one ;"
      ],
      "err_line": 24,
      "err_msg": "‘one’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        21,
        24
      ],
      "mod_code": [
        "if ( a [ i ] == ' 1 ' )",
        "j -= k ;",
        "x -= one ;"
      ],
      "err_line": 24,
      "err_msg": "‘one’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        3,
        24
      ],
      "mod_code": [
        "if ( a [ i ] == ' 1 ' )",
        "cin >> k >> k ;",
        "x -= one ;"
      ],
      "err_line": 24,
      "err_msg": "‘one’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        24
      ],
      "mod_code": [
        "if ( a [ i ] == ' 1 ' )",
        "x -= one ;"
      ],
      "err_line": 24,
      "err_msg": "‘one’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        21
      ],
      "mod_code": [
        "int * a [ 110 ] ;",
        "j -= k ;"
      ],
      "err_line": 5,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘int*’)"
    },
    {
      "mod_line": [
        1,
        21,
        3
      ],
      "mod_code": [
        "int * a [ 110 ] ;",
        "j -= k ;",
        "cin >> k >> k ;"
      ],
      "err_line": 5,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘int*’)"
    },
    {
      "mod_line": [
        1,
        21,
        3,
        24
      ],
      "mod_code": [
        "int * a [ 110 ] ;",
        "j -= k ;",
        "cin >> k >> k ;",
        "x -= one ;"
      ],
      "err_line": 5,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘int*’)"
    },
    {
      "mod_line": [
        1,
        21,
        24
      ],
      "mod_code": [
        "int * a [ 110 ] ;",
        "j -= k ;",
        "x -= one ;"
      ],
      "err_line": 5,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘int*’)"
    },
    {
      "mod_line": [
        1,
        3
      ],
      "mod_code": [
        "int * a [ 110 ] ;",
        "cin >> k >> k ;"
      ],
      "err_line": 5,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘int*’)"
    },
    {
      "mod_line": [
        1,
        3,
        24
      ],
      "mod_code": [
        "int * a [ 110 ] ;",
        "cin >> k >> k ;",
        "x -= one ;"
      ],
      "err_line": 5,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘int*’)"
    },
    {
      "mod_line": [
        1,
        24
      ],
      "mod_code": [
        "int * a [ 110 ] ;",
        "x -= one ;"
      ],
      "err_line": 5,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘int*’)"
    },
    {
      "mod_line": [
        21,
        3,
        24
      ],
      "mod_code": [
        "j -= k ;",
        "cin >> k >> k ;",
        "x -= one ;"
      ],
      "err_line": 24,
      "err_msg": "‘one’ was not declared in this scope"
    },
    {
      "mod_line": [
        21,
        24
      ],
      "mod_code": [
        "j -= k ;",
        "x -= one ;"
      ],
      "err_line": 24,
      "err_msg": "‘one’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        24
      ],
      "mod_code": [
        "cin >> k >> k ;",
        "x -= one ;"
      ],
      "err_line": 24,
      "err_msg": "‘one’ was not declared in this scope"
    }
  ]
}