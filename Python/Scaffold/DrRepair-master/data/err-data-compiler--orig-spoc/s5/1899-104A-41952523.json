{
  "meta": {
    "index": 1899,
    "hitid": "3JHB4BPSFK3BVSSQ8YSKZ9FD1BOQ9L",
    "workerid": "AIWEXPJAU66D9",
    "probid": "104A",
    "subid": "41952523"
  },
  "lines": [
    {
      "line": 0,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 1,
      "text": "declare new integer variables n and m",
      "code": "int n , m ;",
      "indent": 1
    },
    {
      "line": 2,
      "text": "loop , reading n from the input",
      "code": "while ( cin >> n )",
      "indent": 1
    },
    {
      "line": 3,
      "text": "change m to n - 10",
      "code": "m = n - 10 ;",
      "indent": 2
    },
    {
      "line": 4,
      "text": "if m > 0 and m < 10",
      "code": "if ( m > 0 && m < 10 )",
      "indent": 2
    },
    {
      "line": 5,
      "text": "print ' 4 '",
      "code": "cout << ' 4 ' << endl ;",
      "indent": 3
    },
    {
      "line": 6,
      "text": "else if m = 0",
      "code": "else if ( m == 0 )",
      "indent": 2
    },
    {
      "line": 7,
      "text": "print ' 0 '",
      "code": "cout << ' 0 ' << endl ;",
      "indent": 3
    },
    {
      "line": 8,
      "text": "else if m is equal to 10",
      "code": "else if ( m == 10 )",
      "indent": 2
    },
    {
      "line": 9,
      "text": "print \" 15 \"",
      "code": "cout << \" 15 \" << endl ;",
      "indent": 3
    },
    {
      "line": 10,
      "text": "else if m = 11",
      "code": "else if ( m == 11 )",
      "indent": 2
    },
    {
      "line": 11,
      "text": "print ' 4 '",
      "code": "cout << ' 4 ' << endl ;",
      "indent": 3
    },
    {
      "line": 12,
      "text": "else",
      "code": "else",
      "indent": 2
    },
    {
      "line": 13,
      "text": "print ' 0 '",
      "code": "cout << ' 0 ' << endl ;",
      "indent": 3
    },
    {
      "line": 14,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 15,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 16,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        1
      ],
      "mod_code": [
        "int n variables m ;"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘variables’"
    },
    {
      "mod_line": [
        10
      ],
      "mod_code": [
        "else if ( m == 11 ) m ++ ;"
      ],
      "err_line": 12,
      "err_msg": "‘else’ without a previous ‘if’"
    },
    {
      "mod_line": [
        9,
        10
      ],
      "mod_code": [
        "cout << \" 15 \" ;",
        "else if ( m == 11 ) m ++ ;"
      ],
      "err_line": 12,
      "err_msg": "‘else’ without a previous ‘if’"
    },
    {
      "mod_line": [
        9,
        10,
        2
      ],
      "mod_code": [
        "cout << \" 15 \" ;",
        "else if ( m == 11 ) m ++ ;",
        "while ( n )"
      ],
      "err_line": 12,
      "err_msg": "‘else’ without a previous ‘if’"
    },
    {
      "mod_line": [
        9,
        10,
        2,
        7
      ],
      "mod_code": [
        "cout << \" 15 \" ;",
        "else if ( m == 11 ) m ++ ;",
        "while ( n )",
        "cout << ' 0 ' ;"
      ],
      "err_line": 12,
      "err_msg": "‘else’ without a previous ‘if’"
    },
    {
      "mod_line": [
        9,
        10,
        2,
        5
      ],
      "mod_code": [
        "cout << \" 15 \" ;",
        "else if ( m == 11 ) m ++ ;",
        "while ( n )",
        "cout << ' 4 ' ;"
      ],
      "err_line": 12,
      "err_msg": "‘else’ without a previous ‘if’"
    },
    {
      "mod_line": [
        9,
        10,
        2,
        3
      ],
      "mod_code": [
        "cout << \" 15 \" ;",
        "else if ( m == 11 ) m ++ ;",
        "while ( n )",
        "m -= 10 ;"
      ],
      "err_line": 12,
      "err_msg": "‘else’ without a previous ‘if’"
    },
    {
      "mod_line": [
        9,
        10,
        7
      ],
      "mod_code": [
        "cout << \" 15 \" ;",
        "else if ( m == 11 ) m ++ ;",
        "cout << ' 0 ' ;"
      ],
      "err_line": 12,
      "err_msg": "‘else’ without a previous ‘if’"
    },
    {
      "mod_line": [
        9,
        10,
        7,
        5
      ],
      "mod_code": [
        "cout << \" 15 \" ;",
        "else if ( m == 11 ) m ++ ;",
        "cout << ' 0 ' ;",
        "cout << ' 4 ' ;"
      ],
      "err_line": 12,
      "err_msg": "‘else’ without a previous ‘if’"
    },
    {
      "mod_line": [
        9,
        10,
        7,
        3
      ],
      "mod_code": [
        "cout << \" 15 \" ;",
        "else if ( m == 11 ) m ++ ;",
        "cout << ' 0 ' ;",
        "m -= 10 ;"
      ],
      "err_line": 12,
      "err_msg": "‘else’ without a previous ‘if’"
    },
    {
      "mod_line": [
        9,
        10,
        5
      ],
      "mod_code": [
        "cout << \" 15 \" ;",
        "else if ( m == 11 ) m ++ ;",
        "cout << ' 4 ' ;"
      ],
      "err_line": 12,
      "err_msg": "‘else’ without a previous ‘if’"
    },
    {
      "mod_line": [
        9,
        10,
        5,
        3
      ],
      "mod_code": [
        "cout << \" 15 \" ;",
        "else if ( m == 11 ) m ++ ;",
        "cout << ' 4 ' ;",
        "m -= 10 ;"
      ],
      "err_line": 12,
      "err_msg": "‘else’ without a previous ‘if’"
    },
    {
      "mod_line": [
        9,
        10,
        3
      ],
      "mod_code": [
        "cout << \" 15 \" ;",
        "else if ( m == 11 ) m ++ ;",
        "m -= 10 ;"
      ],
      "err_line": 12,
      "err_msg": "‘else’ without a previous ‘if’"
    },
    {
      "mod_line": [
        10,
        2
      ],
      "mod_code": [
        "else if ( m == 11 ) m ++ ;",
        "while ( n )"
      ],
      "err_line": 12,
      "err_msg": "‘else’ without a previous ‘if’"
    },
    {
      "mod_line": [
        10,
        2,
        7
      ],
      "mod_code": [
        "else if ( m == 11 ) m ++ ;",
        "while ( n )",
        "cout << ' 0 ' ;"
      ],
      "err_line": 12,
      "err_msg": "‘else’ without a previous ‘if’"
    },
    {
      "mod_line": [
        10,
        2,
        7,
        5
      ],
      "mod_code": [
        "else if ( m == 11 ) m ++ ;",
        "while ( n )",
        "cout << ' 0 ' ;",
        "cout << ' 4 ' ;"
      ],
      "err_line": 12,
      "err_msg": "‘else’ without a previous ‘if’"
    },
    {
      "mod_line": [
        10,
        2,
        7,
        3
      ],
      "mod_code": [
        "else if ( m == 11 ) m ++ ;",
        "while ( n )",
        "cout << ' 0 ' ;",
        "m -= 10 ;"
      ],
      "err_line": 12,
      "err_msg": "‘else’ without a previous ‘if’"
    },
    {
      "mod_line": [
        10,
        2,
        5
      ],
      "mod_code": [
        "else if ( m == 11 ) m ++ ;",
        "while ( n )",
        "cout << ' 4 ' ;"
      ],
      "err_line": 12,
      "err_msg": "‘else’ without a previous ‘if’"
    },
    {
      "mod_line": [
        10,
        2,
        5,
        3
      ],
      "mod_code": [
        "else if ( m == 11 ) m ++ ;",
        "while ( n )",
        "cout << ' 4 ' ;",
        "m -= 10 ;"
      ],
      "err_line": 12,
      "err_msg": "‘else’ without a previous ‘if’"
    },
    {
      "mod_line": [
        10,
        2,
        3
      ],
      "mod_code": [
        "else if ( m == 11 ) m ++ ;",
        "while ( n )",
        "m -= 10 ;"
      ],
      "err_line": 12,
      "err_msg": "‘else’ without a previous ‘if’"
    },
    {
      "mod_line": [
        10,
        7
      ],
      "mod_code": [
        "else if ( m == 11 ) m ++ ;",
        "cout << ' 0 ' ;"
      ],
      "err_line": 12,
      "err_msg": "‘else’ without a previous ‘if’"
    },
    {
      "mod_line": [
        10,
        7,
        5
      ],
      "mod_code": [
        "else if ( m == 11 ) m ++ ;",
        "cout << ' 0 ' ;",
        "cout << ' 4 ' ;"
      ],
      "err_line": 12,
      "err_msg": "‘else’ without a previous ‘if’"
    },
    {
      "mod_line": [
        10,
        7,
        5,
        3
      ],
      "mod_code": [
        "else if ( m == 11 ) m ++ ;",
        "cout << ' 0 ' ;",
        "cout << ' 4 ' ;",
        "m -= 10 ;"
      ],
      "err_line": 12,
      "err_msg": "‘else’ without a previous ‘if’"
    },
    {
      "mod_line": [
        10,
        7,
        3
      ],
      "mod_code": [
        "else if ( m == 11 ) m ++ ;",
        "cout << ' 0 ' ;",
        "m -= 10 ;"
      ],
      "err_line": 12,
      "err_msg": "‘else’ without a previous ‘if’"
    },
    {
      "mod_line": [
        10,
        5
      ],
      "mod_code": [
        "else if ( m == 11 ) m ++ ;",
        "cout << ' 4 ' ;"
      ],
      "err_line": 12,
      "err_msg": "‘else’ without a previous ‘if’"
    },
    {
      "mod_line": [
        10,
        5,
        3
      ],
      "mod_code": [
        "else if ( m == 11 ) m ++ ;",
        "cout << ' 4 ' ;",
        "m -= 10 ;"
      ],
      "err_line": 12,
      "err_msg": "‘else’ without a previous ‘if’"
    },
    {
      "mod_line": [
        10,
        3
      ],
      "mod_code": [
        "else if ( m == 11 ) m ++ ;",
        "m -= 10 ;"
      ],
      "err_line": 12,
      "err_msg": "‘else’ without a previous ‘if’"
    }
  ]
}