{
  "meta": {
    "index": 1347,
    "hitid": "3TZDZ3Y0JS0NEO89NJ25Y875TZO911",
    "workerid": "A24WRPQYGMQLGF",
    "probid": "1100A",
    "subid": "48896115"
  },
  "lines": [
    {
      "line": 0,
      "text": "arr = integer array of size 107 , brr = integer array of size 107",
      "code": "int arr [ 107 ] , brr [ 107 ] ;",
      "indent": 0
    },
    {
      "line": 1,
      "text": "in function abso that takes a long long integer and returns a long long integer",
      "code": "long long int abso ( long long int a )",
      "indent": 0
    },
    {
      "line": 2,
      "text": "if a < 0 , then return - a",
      "code": "if ( a < 0 ) return - a ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "return a",
      "code": "return a ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    },
    {
      "line": 5,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 6,
      "text": "n , k , i , j = integer , b = integer = 0 , mm = integer = 0",
      "code": "long long int n , k , i , j , b = 0 , mm = 0 ;",
      "indent": 1
    },
    {
      "line": 7,
      "text": "read n , k",
      "code": "cin >> n >> k ;",
      "indent": 1
    },
    {
      "line": 8,
      "text": "for i = 1 to n inclusive",
      "code": "for ( i = 1 ; i <= n ; i ++ )",
      "indent": 1
    },
    {
      "line": 9,
      "text": "read arr [ i ]",
      "code": "cin >> arr [ i ] ;",
      "indent": 2
    },
    {
      "line": 10,
      "text": "brr [ i ] = arr [ i ]",
      "code": "brr [ i ] = arr [ i ] ;",
      "indent": 2
    },
    {
      "line": 11,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 12,
      "text": "for i = 1 to n inclusive",
      "code": "for ( i = 1 ; i <= n ; i ++ )",
      "indent": 1
    },
    {
      "line": 13,
      "text": "for j = 1 to n inclusive , then arr [ j ] = brr [ j ]",
      "code": "for ( j = 1 ; j <= n ; j ++ ) arr [ j ] = brr [ j ] ;",
      "indent": 2
    },
    {
      "line": 14,
      "text": "cnta = long long integer = 0 , cntb = long long integer = 0",
      "code": "long long int cnta = 0 , cntb = 0 ;",
      "indent": 2
    },
    {
      "line": 15,
      "text": "for b = i to n inclusive , and b = b + k , then arr [ b ] = 0",
      "code": "for ( b = i ; b <= n ; b += k ) arr [ b ] = 0 ;",
      "indent": 2
    },
    {
      "line": 16,
      "text": "for b = i to 1 inclusive , and b = b - k , then arr [ b ] = 0",
      "code": "for ( b = i ; b >= 1 ; b -= k ) arr [ b ] = 0 ;",
      "indent": 2
    },
    {
      "line": 17,
      "text": "for j = 1 to n inclusive",
      "code": "for ( j = 1 ; j <= n ; j ++ )",
      "indent": 2
    },
    {
      "line": 18,
      "text": "if arr [ j ] is 1 , then increase cnta by 1",
      "code": "if ( arr [ j ] == 1 ) cnta ++ ;",
      "indent": 3
    },
    {
      "line": 19,
      "text": "if arr [ j ] is - 1 , then increase cntb by 1",
      "code": "if ( arr [ j ] == - 1 ) cntb ++ ;",
      "indent": 3
    },
    {
      "line": 20,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 21,
      "text": "mm = the maximum value between mm and the result of the absolute value of the result of cnta - cntb",
      "code": "mm = max ( mm , abso ( cnta - cntb ) ) ;",
      "indent": 2
    },
    {
      "line": 22,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 23,
      "text": "print mm",
      "code": "cout << mm << endl ;",
      "indent": 1
    },
    {
      "line": 24,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        6
      ],
      "mod_code": [
        "int n , k , i , j , b = 0 , mm = 0 ;"
      ],
      "err_line": 21,
      "err_msg": "no matching function for call to ‘max(int&, long long int)’"
    },
    {
      "mod_line": [
        0
      ],
      "mod_code": [
        "int arr [ 107 ] , brr [ size ] ;"
      ],
      "err_line": 0,
      "err_msg": "‘size’ was not declared in this scope"
    },
    {
      "mod_line": [
        1
      ],
      "mod_code": [
        "long long int abso ( long long int x )"
      ],
      "err_line": 2,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        6
      ],
      "mod_code": [
        "int n , k , i , j , b = 0 , j = 0 ;"
      ],
      "err_line": 6,
      "err_msg": "redeclaration of ‘int j’"
    },
    {
      "mod_line": [
        10
      ],
      "mod_code": [
        "char brr [ i ] = arr [ i ] ;"
      ],
      "err_line": 10,
      "err_msg": "array must be initialized with a brace-enclosed initializer"
    },
    {
      "mod_line": [
        15
      ],
      "mod_code": [
        "for ( int b = i ; b <= n ; b ++ ) { arr [ b ] = arr + k , arr [ b ] = 0 ; }"
      ],
      "err_line": 15,
      "err_msg": "invalid conversion from ‘int*’ to ‘int’ [-fpermissive]"
    },
    {
      "mod_line": [
        6,
        14
      ],
      "mod_code": [
        "int n , k , i , j , b = 0 , mm = 0 ;",
        "long long int cnta , cntb = 0 ;"
      ],
      "err_line": 21,
      "err_msg": "no matching function for call to ‘max(int&, long long int)’"
    },
    {
      "mod_line": [
        6,
        14,
        15
      ],
      "mod_code": [
        "int n , k , i , j , b = 0 , mm = 0 ;",
        "long long int cnta , cntb = 0 ;",
        "for ( int b = i ; b <= n ; b ++ ) { arr [ b ] = b + k , arr [ b ] = 0 ; }"
      ],
      "err_line": 21,
      "err_msg": "no matching function for call to ‘max(int&, long long int)’"
    },
    {
      "mod_line": [
        6,
        14,
        15,
        16
      ],
      "mod_code": [
        "int n , k , i , j , b = 0 , mm = 0 ;",
        "long long int cnta , cntb = 0 ;",
        "for ( int b = i ; b <= n ; b ++ ) { arr [ b ] = b + k , arr [ b ] = 0 ; }",
        "for ( int b = i ; b <= 1 && b == b - k ; b ++ ) { arr [ b ] = 0 ; }"
      ],
      "err_line": 21,
      "err_msg": "no matching function for call to ‘max(int&, long long int)’"
    },
    {
      "mod_line": [
        6,
        14,
        16
      ],
      "mod_code": [
        "int n , k , i , j , b = 0 , mm = 0 ;",
        "long long int cnta , cntb = 0 ;",
        "for ( int b = i ; b <= 1 && b == b - k ; b ++ ) { arr [ b ] = 0 ; }"
      ],
      "err_line": 21,
      "err_msg": "no matching function for call to ‘max(int&, long long int)’"
    },
    {
      "mod_line": [
        6,
        14,
        16,
        15
      ],
      "mod_code": [
        "int n , k , i , j , b = 0 , mm = 0 ;",
        "long long int cnta , cntb = 0 ;",
        "for ( int b = i ; b <= 1 && b == b - k ; b ++ ) { arr [ b ] = 0 ; }",
        "for ( int b = i ; b <= n ; b ++ ) { arr [ b ] = arr + k , arr [ b ] = 0 ; }"
      ],
      "err_line": 15,
      "err_msg": "invalid conversion from ‘int*’ to ‘int’ [-fpermissive]"
    },
    {
      "mod_line": [
        6,
        14,
        21,
        15
      ],
      "mod_code": [
        "int n , k , i , j , b = 0 , mm = 0 ;",
        "long long int cnta , cntb = 0 ;",
        "mm = max ( cnta , abs ( cnta - cntb ) ) ;",
        "for ( int b = i ; b <= n ; b ++ ) { arr [ b ] = arr + k , arr [ b ] = 0 ; }"
      ],
      "err_line": 15,
      "err_msg": "invalid conversion from ‘int*’ to ‘int’ [-fpermissive]"
    },
    {
      "mod_line": [
        6,
        14,
        15
      ],
      "mod_code": [
        "int n , k , i , j , b = 0 , mm = 0 ;",
        "long long int cnta , cntb = 0 ;",
        "for ( int b = i ; b <= n ; b ++ ) { arr [ b ] = arr + k , arr [ b ] = 0 ; }"
      ],
      "err_line": 15,
      "err_msg": "invalid conversion from ‘int*’ to ‘int’ [-fpermissive]"
    },
    {
      "mod_line": [
        6,
        15
      ],
      "mod_code": [
        "int n , k , i , j , b = 0 , mm = 0 ;",
        "for ( int b = i ; b <= n ; b ++ ) { arr [ b ] = b + k , arr [ b ] = 0 ; }"
      ],
      "err_line": 21,
      "err_msg": "no matching function for call to ‘max(int&, long long int)’"
    },
    {
      "mod_line": [
        6,
        15,
        16
      ],
      "mod_code": [
        "int n , k , i , j , b = 0 , mm = 0 ;",
        "for ( int b = i ; b <= n ; b ++ ) { arr [ b ] = b + k , arr [ b ] = 0 ; }",
        "for ( int b = i ; b <= 1 && b == b - k ; b ++ ) { arr [ b ] = 0 ; }"
      ],
      "err_line": 21,
      "err_msg": "no matching function for call to ‘max(int&, long long int)’"
    },
    {
      "mod_line": [
        6,
        16
      ],
      "mod_code": [
        "int n , k , i , j , b = 0 , mm = 0 ;",
        "for ( int b = i ; b <= 1 && b == b - k ; b ++ ) { arr [ b ] = 0 ; }"
      ],
      "err_line": 21,
      "err_msg": "no matching function for call to ‘max(int&, long long int)’"
    },
    {
      "mod_line": [
        6,
        16,
        21,
        15
      ],
      "mod_code": [
        "int n , k , i , j , b = 0 , mm = 0 ;",
        "for ( int b = i ; b <= 1 && b == b - k ; b ++ ) { arr [ b ] = 0 ; }",
        "mm = max ( cnta , abs ( cnta - cntb ) ) ;",
        "for ( int b = i ; b <= n ; b ++ ) { arr [ b ] = arr + k , arr [ b ] = 0 ; }"
      ],
      "err_line": 15,
      "err_msg": "invalid conversion from ‘int*’ to ‘int’ [-fpermissive]"
    },
    {
      "mod_line": [
        6,
        16,
        15
      ],
      "mod_code": [
        "int n , k , i , j , b = 0 , mm = 0 ;",
        "for ( int b = i ; b <= 1 && b == b - k ; b ++ ) { arr [ b ] = 0 ; }",
        "for ( int b = i ; b <= n ; b ++ ) { arr [ b ] = arr + k , arr [ b ] = 0 ; }"
      ],
      "err_line": 15,
      "err_msg": "invalid conversion from ‘int*’ to ‘int’ [-fpermissive]"
    },
    {
      "mod_line": [
        6,
        21,
        15
      ],
      "mod_code": [
        "int n , k , i , j , b = 0 , mm = 0 ;",
        "mm = max ( cnta , abs ( cnta - cntb ) ) ;",
        "for ( int b = i ; b <= n ; b ++ ) { arr [ b ] = arr + k , arr [ b ] = 0 ; }"
      ],
      "err_line": 15,
      "err_msg": "invalid conversion from ‘int*’ to ‘int’ [-fpermissive]"
    },
    {
      "mod_line": [
        6,
        15
      ],
      "mod_code": [
        "int n , k , i , j , b = 0 , mm = 0 ;",
        "for ( int b = i ; b <= n ; b ++ ) { arr [ b ] = arr + k , arr [ b ] = 0 ; }"
      ],
      "err_line": 15,
      "err_msg": "invalid conversion from ‘int*’ to ‘int’ [-fpermissive]"
    },
    {
      "mod_line": [
        14,
        16,
        21,
        15
      ],
      "mod_code": [
        "long long int cnta , cntb = 0 ;",
        "for ( int b = i ; b <= 1 && b == b - k ; b ++ ) { arr [ b ] = 0 ; }",
        "mm = max ( cnta , abs ( cnta - cntb ) ) ;",
        "for ( int b = i ; b <= n ; b ++ ) { arr [ b ] = arr + k , arr [ b ] = 0 ; }"
      ],
      "err_line": 15,
      "err_msg": "invalid conversion from ‘int*’ to ‘int’ [-fpermissive]"
    },
    {
      "mod_line": [
        14,
        16,
        15
      ],
      "mod_code": [
        "long long int cnta , cntb = 0 ;",
        "for ( int b = i ; b <= 1 && b == b - k ; b ++ ) { arr [ b ] = 0 ; }",
        "for ( int b = i ; b <= n ; b ++ ) { arr [ b ] = arr + k , arr [ b ] = 0 ; }"
      ],
      "err_line": 15,
      "err_msg": "invalid conversion from ‘int*’ to ‘int’ [-fpermissive]"
    },
    {
      "mod_line": [
        14,
        21,
        15
      ],
      "mod_code": [
        "long long int cnta , cntb = 0 ;",
        "mm = max ( cnta , abs ( cnta - cntb ) ) ;",
        "for ( int b = i ; b <= n ; b ++ ) { arr [ b ] = arr + k , arr [ b ] = 0 ; }"
      ],
      "err_line": 15,
      "err_msg": "invalid conversion from ‘int*’ to ‘int’ [-fpermissive]"
    },
    {
      "mod_line": [
        14,
        15
      ],
      "mod_code": [
        "long long int cnta , cntb = 0 ;",
        "for ( int b = i ; b <= n ; b ++ ) { arr [ b ] = arr + k , arr [ b ] = 0 ; }"
      ],
      "err_line": 15,
      "err_msg": "invalid conversion from ‘int*’ to ‘int’ [-fpermissive]"
    },
    {
      "mod_line": [
        16,
        21,
        15
      ],
      "mod_code": [
        "for ( int b = i ; b <= 1 && b == b - k ; b ++ ) { arr [ b ] = 0 ; }",
        "mm = max ( cnta , abs ( cnta - cntb ) ) ;",
        "for ( int b = i ; b <= n ; b ++ ) { arr [ b ] = arr + k , arr [ b ] = 0 ; }"
      ],
      "err_line": 15,
      "err_msg": "invalid conversion from ‘int*’ to ‘int’ [-fpermissive]"
    },
    {
      "mod_line": [
        16,
        15
      ],
      "mod_code": [
        "for ( int b = i ; b <= 1 && b == b - k ; b ++ ) { arr [ b ] = 0 ; }",
        "for ( int b = i ; b <= n ; b ++ ) { arr [ b ] = arr + k , arr [ b ] = 0 ; }"
      ],
      "err_line": 15,
      "err_msg": "invalid conversion from ‘int*’ to ‘int’ [-fpermissive]"
    },
    {
      "mod_line": [
        21,
        15
      ],
      "mod_code": [
        "mm = max ( cnta , abs ( cnta - cntb ) ) ;",
        "for ( int b = i ; b <= n ; b ++ ) { arr [ b ] = arr + k , arr [ b ] = 0 ; }"
      ],
      "err_line": 15,
      "err_msg": "invalid conversion from ‘int*’ to ‘int’ [-fpermissive]"
    }
  ]
}