{
  "meta": {
    "index": 1041,
    "hitid": "34F34TZU7WTJ9L3ESZTWSLVDG84J28",
    "workerid": "AIWEXPJAU66D9",
    "probid": "23A",
    "subid": "14763032"
  },
  "lines": [
    {
      "line": 0,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 1,
      "text": "assign value 0 to the integer count",
      "code": "int count = 0 ;",
      "indent": 1
    },
    {
      "line": 2,
      "text": "create integer max with value 0 , i , j",
      "code": "int max = 0 , i , j ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "s and key = strings",
      "code": "string s , key ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "read s",
      "code": "cin >> s ;",
      "indent": 1
    },
    {
      "line": 5,
      "text": "for i = 1 to length of s exclusive",
      "code": "for ( i = 1 ; i < s . size ( ) ; i ++ )",
      "indent": 1
    },
    {
      "line": 6,
      "text": "for j = 0 to length of s exclusive",
      "code": "for ( j = 0 ; j < s . size ( ) ; j ++ )",
      "indent": 2
    },
    {
      "line": 7,
      "text": "key = substring of s starting from index j with length i",
      "code": "key = s . substr ( j , i ) ;",
      "indent": 3
    },
    {
      "line": 8,
      "text": "if key can be found in the s , starting from index j + 1",
      "code": "if ( s . find ( key , j + 1 ) != - 1 )",
      "indent": 3
    },
    {
      "line": 9,
      "text": "set value of count to i",
      "code": "count = i ;",
      "indent": 4
    },
    {
      "line": 10,
      "text": "break the loop",
      "code": "break ;",
      "indent": 4
    },
    {
      "line": 11,
      "text": "DUMMY",
      "code": "}",
      "indent": 3
    },
    {
      "line": 12,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 13,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 14,
      "text": "print count and a new line",
      "code": "cout << count << endl ;",
      "indent": 1
    },
    {
      "line": 15,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 16,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        8
      ],
      "mod_code": [
        "if ( key ( j + 1 ) == s . end ( ) )"
      ],
      "err_line": 8,
      "err_msg": "no match for call to ‘(std::__cxx11::string {aka std::__cxx11::basic_string<char>}) (int)’"
    },
    {
      "mod_line": [
        1
      ],
      "mod_code": [
        "count = 0 ;"
      ],
      "err_line": 1,
      "err_msg": "overloaded function with no contextual type information"
    },
    {
      "mod_line": [
        2
      ],
      "mod_code": [
        "int max , i , j , j ;"
      ],
      "err_line": 2,
      "err_msg": "redeclaration of ‘int j’"
    },
    {
      "mod_line": [
        3
      ],
      "mod_code": [
        "string s , s ;"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘std::__cxx11::string s’"
    },
    {
      "mod_line": [
        8
      ],
      "mod_code": [
        "if ( key ( j + 1 ) != s . end ( ) )"
      ],
      "err_line": 8,
      "err_msg": "no match for call to ‘(std::__cxx11::string {aka std::__cxx11::basic_string<char>}) (int)’"
    },
    {
      "mod_line": [
        9
      ],
      "mod_code": [
        "* count = i ;"
      ],
      "err_line": 9,
      "err_msg": "invalid type argument of unary ‘*’ (have ‘int’)"
    },
    {
      "mod_line": [
        10
      ],
      "mod_code": [
        "break the ;"
      ],
      "err_line": 10,
      "err_msg": "expected ‘;’ before ‘the’"
    },
    {
      "mod_line": [
        8,
        10
      ],
      "mod_code": [
        "if ( key ( j + 1 ) == s . end ( ) )",
        "break the ;"
      ],
      "err_line": 8,
      "err_msg": "no match for call to ‘(std::__cxx11::string {aka std::__cxx11::basic_string<char>}) (int)’"
    },
    {
      "mod_line": [
        8,
        10,
        1
      ],
      "mod_code": [
        "if ( key ( j + 1 ) == s . end ( ) )",
        "break the ;",
        "count = 0 ;"
      ],
      "err_line": 1,
      "err_msg": "overloaded function with no contextual type information"
    },
    {
      "mod_line": [
        8,
        10,
        1,
        2
      ],
      "mod_code": [
        "if ( key ( j + 1 ) == s . end ( ) )",
        "break the ;",
        "count = 0 ;",
        "int max , i , j , j ;"
      ],
      "err_line": 1,
      "err_msg": "overloaded function with no contextual type information"
    },
    {
      "mod_line": [
        8,
        10,
        1,
        9
      ],
      "mod_code": [
        "if ( key ( j + 1 ) == s . end ( ) )",
        "break the ;",
        "count = 0 ;",
        "* count = i ;"
      ],
      "err_line": 1,
      "err_msg": "overloaded function with no contextual type information"
    },
    {
      "mod_line": [
        8,
        10,
        2
      ],
      "mod_code": [
        "if ( key ( j + 1 ) == s . end ( ) )",
        "break the ;",
        "int max , i , j , j ;"
      ],
      "err_line": 2,
      "err_msg": "redeclaration of ‘int j’"
    },
    {
      "mod_line": [
        8,
        10,
        2,
        9
      ],
      "mod_code": [
        "if ( key ( j + 1 ) == s . end ( ) )",
        "break the ;",
        "int max , i , j , j ;",
        "* count = i ;"
      ],
      "err_line": 2,
      "err_msg": "redeclaration of ‘int j’"
    },
    {
      "mod_line": [
        8,
        10,
        9
      ],
      "mod_code": [
        "if ( key ( j + 1 ) == s . end ( ) )",
        "break the ;",
        "* count = i ;"
      ],
      "err_line": 8,
      "err_msg": "no match for call to ‘(std::__cxx11::string {aka std::__cxx11::basic_string<char>}) (int)’"
    },
    {
      "mod_line": [
        8,
        1
      ],
      "mod_code": [
        "if ( key ( j + 1 ) == s . end ( ) )",
        "count = 0 ;"
      ],
      "err_line": 1,
      "err_msg": "overloaded function with no contextual type information"
    },
    {
      "mod_line": [
        8,
        1,
        2
      ],
      "mod_code": [
        "if ( key ( j + 1 ) == s . end ( ) )",
        "count = 0 ;",
        "int max , i , j , j ;"
      ],
      "err_line": 1,
      "err_msg": "overloaded function with no contextual type information"
    },
    {
      "mod_line": [
        8,
        1,
        2,
        9
      ],
      "mod_code": [
        "if ( key ( j + 1 ) == s . end ( ) )",
        "count = 0 ;",
        "int max , i , j , j ;",
        "* count = i ;"
      ],
      "err_line": 1,
      "err_msg": "overloaded function with no contextual type information"
    },
    {
      "mod_line": [
        8,
        1,
        9
      ],
      "mod_code": [
        "if ( key ( j + 1 ) == s . end ( ) )",
        "count = 0 ;",
        "* count = i ;"
      ],
      "err_line": 1,
      "err_msg": "overloaded function with no contextual type information"
    },
    {
      "mod_line": [
        8,
        2
      ],
      "mod_code": [
        "if ( key ( j + 1 ) == s . end ( ) )",
        "int max , i , j , j ;"
      ],
      "err_line": 2,
      "err_msg": "redeclaration of ‘int j’"
    },
    {
      "mod_line": [
        8,
        2,
        9
      ],
      "mod_code": [
        "if ( key ( j + 1 ) == s . end ( ) )",
        "int max , i , j , j ;",
        "* count = i ;"
      ],
      "err_line": 2,
      "err_msg": "redeclaration of ‘int j’"
    },
    {
      "mod_line": [
        8,
        9
      ],
      "mod_code": [
        "if ( key ( j + 1 ) == s . end ( ) )",
        "* count = i ;"
      ],
      "err_line": 8,
      "err_msg": "no match for call to ‘(std::__cxx11::string {aka std::__cxx11::basic_string<char>}) (int)’"
    },
    {
      "mod_line": [
        10,
        1
      ],
      "mod_code": [
        "break the ;",
        "count = 0 ;"
      ],
      "err_line": 1,
      "err_msg": "overloaded function with no contextual type information"
    },
    {
      "mod_line": [
        10,
        1,
        2
      ],
      "mod_code": [
        "break the ;",
        "count = 0 ;",
        "int max , i , j , j ;"
      ],
      "err_line": 1,
      "err_msg": "overloaded function with no contextual type information"
    },
    {
      "mod_line": [
        10,
        1,
        2,
        9
      ],
      "mod_code": [
        "break the ;",
        "count = 0 ;",
        "int max , i , j , j ;",
        "* count = i ;"
      ],
      "err_line": 1,
      "err_msg": "overloaded function with no contextual type information"
    },
    {
      "mod_line": [
        10,
        1,
        2,
        8
      ],
      "mod_code": [
        "break the ;",
        "count = 0 ;",
        "int max , i , j , j ;",
        "if ( key ( j + 1 ) != s . end ( ) )"
      ],
      "err_line": 1,
      "err_msg": "overloaded function with no contextual type information"
    },
    {
      "mod_line": [
        10,
        1,
        9
      ],
      "mod_code": [
        "break the ;",
        "count = 0 ;",
        "* count = i ;"
      ],
      "err_line": 1,
      "err_msg": "overloaded function with no contextual type information"
    },
    {
      "mod_line": [
        10,
        1,
        9,
        8
      ],
      "mod_code": [
        "break the ;",
        "count = 0 ;",
        "* count = i ;",
        "if ( key ( j + 1 ) != s . end ( ) )"
      ],
      "err_line": 1,
      "err_msg": "overloaded function with no contextual type information"
    },
    {
      "mod_line": [
        10,
        1,
        8
      ],
      "mod_code": [
        "break the ;",
        "count = 0 ;",
        "if ( key ( j + 1 ) != s . end ( ) )"
      ],
      "err_line": 1,
      "err_msg": "overloaded function with no contextual type information"
    },
    {
      "mod_line": [
        10,
        2
      ],
      "mod_code": [
        "break the ;",
        "int max , i , j , j ;"
      ],
      "err_line": 2,
      "err_msg": "redeclaration of ‘int j’"
    },
    {
      "mod_line": [
        10,
        2,
        9
      ],
      "mod_code": [
        "break the ;",
        "int max , i , j , j ;",
        "* count = i ;"
      ],
      "err_line": 2,
      "err_msg": "redeclaration of ‘int j’"
    },
    {
      "mod_line": [
        10,
        2,
        9,
        8
      ],
      "mod_code": [
        "break the ;",
        "int max , i , j , j ;",
        "* count = i ;",
        "if ( key ( j + 1 ) != s . end ( ) )"
      ],
      "err_line": 2,
      "err_msg": "redeclaration of ‘int j’"
    },
    {
      "mod_line": [
        10,
        2,
        8
      ],
      "mod_code": [
        "break the ;",
        "int max , i , j , j ;",
        "if ( key ( j + 1 ) != s . end ( ) )"
      ],
      "err_line": 2,
      "err_msg": "redeclaration of ‘int j’"
    },
    {
      "mod_line": [
        10,
        9
      ],
      "mod_code": [
        "break the ;",
        "* count = i ;"
      ],
      "err_line": 9,
      "err_msg": "invalid type argument of unary ‘*’ (have ‘int’)"
    },
    {
      "mod_line": [
        10,
        9,
        8
      ],
      "mod_code": [
        "break the ;",
        "* count = i ;",
        "if ( key ( j + 1 ) != s . end ( ) )"
      ],
      "err_line": 8,
      "err_msg": "no match for call to ‘(std::__cxx11::string {aka std::__cxx11::basic_string<char>}) (int)’"
    },
    {
      "mod_line": [
        10,
        8
      ],
      "mod_code": [
        "break the ;",
        "if ( key ( j + 1 ) != s . end ( ) )"
      ],
      "err_line": 8,
      "err_msg": "no match for call to ‘(std::__cxx11::string {aka std::__cxx11::basic_string<char>}) (int)’"
    },
    {
      "mod_line": [
        1,
        2
      ],
      "mod_code": [
        "count = 0 ;",
        "int max , i , j , j ;"
      ],
      "err_line": 1,
      "err_msg": "overloaded function with no contextual type information"
    },
    {
      "mod_line": [
        1,
        2,
        9
      ],
      "mod_code": [
        "count = 0 ;",
        "int max , i , j , j ;",
        "* count = i ;"
      ],
      "err_line": 1,
      "err_msg": "overloaded function with no contextual type information"
    },
    {
      "mod_line": [
        1,
        2,
        9,
        8
      ],
      "mod_code": [
        "count = 0 ;",
        "int max , i , j , j ;",
        "* count = i ;",
        "if ( key ( j + 1 ) != s . end ( ) )"
      ],
      "err_line": 1,
      "err_msg": "overloaded function with no contextual type information"
    },
    {
      "mod_line": [
        1,
        2,
        8
      ],
      "mod_code": [
        "count = 0 ;",
        "int max , i , j , j ;",
        "if ( key ( j + 1 ) != s . end ( ) )"
      ],
      "err_line": 1,
      "err_msg": "overloaded function with no contextual type information"
    },
    {
      "mod_line": [
        1,
        9
      ],
      "mod_code": [
        "count = 0 ;",
        "* count = i ;"
      ],
      "err_line": 1,
      "err_msg": "overloaded function with no contextual type information"
    },
    {
      "mod_line": [
        1,
        9,
        8
      ],
      "mod_code": [
        "count = 0 ;",
        "* count = i ;",
        "if ( key ( j + 1 ) != s . end ( ) )"
      ],
      "err_line": 1,
      "err_msg": "overloaded function with no contextual type information"
    },
    {
      "mod_line": [
        1,
        8
      ],
      "mod_code": [
        "count = 0 ;",
        "if ( key ( j + 1 ) != s . end ( ) )"
      ],
      "err_line": 1,
      "err_msg": "overloaded function with no contextual type information"
    },
    {
      "mod_line": [
        2,
        9
      ],
      "mod_code": [
        "int max , i , j , j ;",
        "* count = i ;"
      ],
      "err_line": 2,
      "err_msg": "redeclaration of ‘int j’"
    },
    {
      "mod_line": [
        2,
        9,
        8
      ],
      "mod_code": [
        "int max , i , j , j ;",
        "* count = i ;",
        "if ( key ( j + 1 ) != s . end ( ) )"
      ],
      "err_line": 2,
      "err_msg": "redeclaration of ‘int j’"
    },
    {
      "mod_line": [
        2,
        8
      ],
      "mod_code": [
        "int max , i , j , j ;",
        "if ( key ( j + 1 ) != s . end ( ) )"
      ],
      "err_line": 2,
      "err_msg": "redeclaration of ‘int j’"
    },
    {
      "mod_line": [
        9,
        8
      ],
      "mod_code": [
        "* count = i ;",
        "if ( key ( j + 1 ) != s . end ( ) )"
      ],
      "err_line": 8,
      "err_msg": "no match for call to ‘(std::__cxx11::string {aka std::__cxx11::basic_string<char>}) (int)’"
    }
  ]
}