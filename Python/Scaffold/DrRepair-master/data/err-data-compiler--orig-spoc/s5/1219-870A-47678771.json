{
  "meta": {
    "index": 1219,
    "hitid": "3BFF0DJK8X66SNGHY8M6L9VQD62TS3",
    "workerid": "AIWEXPJAU66D9",
    "probid": "870A",
    "subid": "47678771"
  },
  "lines": [
    {
      "line": 0,
      "text": "declare ints n , m , ai , bi , mna and mnb where mna and mnb = 10",
      "code": "int n , m , ai , bi , mna = 10 , mnb = 10 ;",
      "indent": 0
    },
    {
      "line": 1,
      "text": "create bool array ada_dia with 10 elements",
      "code": "bool ada_dia [ 10 ] ;",
      "indent": 0
    },
    {
      "line": 2,
      "text": "create bool array ada_dib with 10 elements",
      "code": "bool ada_dib [ 10 ] ;",
      "indent": 0
    },
    {
      "line": 3,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 4,
      "text": "read n and m",
      "code": "cin >> n >> m ;",
      "indent": 1
    },
    {
      "line": 5,
      "text": "decrement n and loop further , while n is not 0",
      "code": "while ( n -- )",
      "indent": 1
    },
    {
      "line": 6,
      "text": "read input to ai",
      "code": "cin >> ai ;",
      "indent": 2
    },
    {
      "line": 7,
      "text": "set ada_dia [ ai ] to 1",
      "code": "ada_dia [ ai ] = 1 ;",
      "indent": 2
    },
    {
      "line": 8,
      "text": "assign min of mna and ai to mna",
      "code": "mna = min ( mna , ai ) ;",
      "indent": 2
    },
    {
      "line": 9,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 10,
      "text": "decrement m and loop further , while m is not 0",
      "code": "while ( m -- )",
      "indent": 1
    },
    {
      "line": 11,
      "text": "read bi",
      "code": "cin >> bi ;",
      "indent": 2
    },
    {
      "line": 12,
      "text": "assign 1 to ada_dib [ bi ]",
      "code": "ada_dib [ bi ] = 1 ;",
      "indent": 2
    },
    {
      "line": 13,
      "text": "set mnb to min of mnb and bi",
      "code": "mnb = min ( mnb , bi ) ;",
      "indent": 2
    },
    {
      "line": 14,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 15,
      "text": "loop i from 1 to 10 exclusive",
      "code": "for ( int i = 1 ; i < 10 ; i ++ )",
      "indent": 1
    },
    {
      "line": 16,
      "text": "if ada_dia [ i ] is true and ada_dib [ i ] is true",
      "code": "if ( ada_dia [ i ] && ada_dib [ i ] )",
      "indent": 2
    },
    {
      "line": 17,
      "text": "print i and ' \\ n '",
      "code": "cout << i << ' \\n ' ;",
      "indent": 3
    },
    {
      "line": 18,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 3
    },
    {
      "line": 19,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 20,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 21,
      "text": "print min of mna and mnb , max of mna and mnb and ' \\ n '",
      "code": "cout << min ( mna , mnb ) << max ( mna , mnb ) << ' \\n ' ;",
      "indent": 1
    },
    {
      "line": 22,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        12
      ],
      "mod_code": [
        "char ada_dib [ bi ] = 1 ;"
      ],
      "err_line": 12,
      "err_msg": "array must be initialized with a brace-enclosed initializer"
    },
    {
      "mod_line": [
        15
      ],
      "mod_code": [
        "for ( i = 1 ; i < 10 ; i ++ )"
      ],
      "err_line": 15,
      "err_msg": "‘i’ was not declared in this scope"
    }
  ]
}