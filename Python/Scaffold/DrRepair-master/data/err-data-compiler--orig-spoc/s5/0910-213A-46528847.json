{
  "meta": {
    "index": 910,
    "hitid": "3EPG8DX9LKK7UTPZ5V0ENOK1AJC5PB",
    "workerid": "AIWEXPJAU66D9",
    "probid": "213A",
    "subid": "46528847"
  },
  "lines": [
    {
      "line": 0,
      "text": "declare int N and an arrays of ints a and c with 200 elements",
      "code": "int N , a [ 200 ] , c [ 200 ] ;",
      "indent": 0
    },
    {
      "line": 1,
      "text": "declare an array of int vectors called edges with 200 elements",
      "code": "vector < int > edges [ 200 ] ;",
      "indent": 0
    },
    {
      "line": 2,
      "text": "int function simulate with int argument s",
      "code": "int simulate ( int s )",
      "indent": 0
    },
    {
      "line": 3,
      "text": "set first sizeof ( c ) bytes at the pointer c to 0",
      "code": "memset ( c , 0 , sizeof ( c ) ) ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "for i = 0 to N exclusive",
      "code": "for ( int i = int ( 0 ) ; i < int ( N ) ; i ++ )",
      "indent": 1
    },
    {
      "line": 5,
      "text": "for j = 0 to length of edges [ i ] exclusive , increment c [ edges [ i ] [ j ] ]",
      "code": "for ( int j = int ( 0 ) ; j < int ( edges [ i ] . size ( ) ) ; j ++ ) c [ edges [ i ] [ j ] ] ++ ;",
      "indent": 2
    },
    {
      "line": 6,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 7,
      "text": "q is a new array of int queues with 3 elements",
      "code": "queue < int > q [ 3 ] ;",
      "indent": 1
    },
    {
      "line": 8,
      "text": "for integer i = 0 to N exclusive",
      "code": "for ( int i = int ( 0 ) ; i < int ( N ) ; i ++ )",
      "indent": 1
    },
    {
      "line": 9,
      "text": "if c [ i ] is false , push i into q [ a [ i ] ]",
      "code": "if ( ! c [ i ] ) q [ a [ i ] ] . push ( i ) ;",
      "indent": 2
    },
    {
      "line": 10,
      "text": "create integer poped = 0",
      "code": "int poped = 0 ;",
      "indent": 1
    },
    {
      "line": 11,
      "text": "declare int variable ret = - 1",
      "code": "int ret = - 1 ;",
      "indent": 1
    },
    {
      "line": 12,
      "text": "while poped < N",
      "code": "while ( poped < N )",
      "indent": 1
    },
    {
      "line": 13,
      "text": "while q [ s ] is not empty",
      "code": "while ( ! q [ s ] . empty ( ) )",
      "indent": 2
    },
    {
      "line": 14,
      "text": "declare int variable f = front element of q [ s ]",
      "code": "int f = q [ s ] . front ( ) ;",
      "indent": 3
    },
    {
      "line": 15,
      "text": "remove front element from q [ s ]",
      "code": "q [ s ] . pop ( ) ;",
      "indent": 3
    },
    {
      "line": 16,
      "text": "increment poped by one",
      "code": "poped ++ ;",
      "indent": 3
    },
    {
      "line": 17,
      "text": "for i = 0 to length of edges [ f ] exclusive",
      "code": "for ( int i = int ( 0 ) ; i < int ( edges [ f ] . size ( ) ) ; i ++ )",
      "indent": 3
    },
    {
      "line": 18,
      "text": "create int next = edges [ f ] [ i ]",
      "code": "int next = edges [ f ] [ i ] ;",
      "indent": 4
    },
    {
      "line": 19,
      "text": "decrement c [ next ] , if c [ next ] ! = 0 , push next into q [ a [ next ] ]",
      "code": "if ( ! -- c [ next ] ) { q [ a [ next ] ] . push ( next ) ; }",
      "indent": 4
    },
    {
      "line": 20,
      "text": "DUMMY",
      "code": "}",
      "indent": 3
    },
    {
      "line": 21,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 22,
      "text": "assign ( s + 1 ) % 3 to s",
      "code": "s = ( s + 1 ) % 3 ;",
      "indent": 2
    },
    {
      "line": 23,
      "text": "increment ret by one",
      "code": "ret ++ ;",
      "indent": 2
    },
    {
      "line": 24,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 25,
      "text": "return ret",
      "code": "return ret ;",
      "indent": 1
    },
    {
      "line": 26,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    },
    {
      "line": 27,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 28,
      "text": "read N and loop further",
      "code": "while ( cin >> N )",
      "indent": 1
    },
    {
      "line": 29,
      "text": "for i = 0 to N exclusive",
      "code": "for ( int i = int ( 0 ) ; i < int ( N ) ; i ++ ) edges [ i ] . clear ( ) ;",
      "indent": 2
    },
    {
      "line": 30,
      "text": "for integer i = int to N exclusive",
      "code": "for ( int i = int ( 0 ) ; i < int ( N ) ; i ++ )",
      "indent": 2
    },
    {
      "line": 31,
      "text": "read input to a [ i ]",
      "code": "cin >> a [ i ] ;",
      "indent": 3
    },
    {
      "line": 32,
      "text": "a [ i ] = a [ i ] modulo 3",
      "code": "a [ i ] %= 3 ;",
      "indent": 3
    },
    {
      "line": 33,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 34,
      "text": "for integer i = 0 to N exclusive",
      "code": "for ( int i = int ( 0 ) ; i < int ( N ) ; i ++ )",
      "indent": 2
    },
    {
      "line": 35,
      "text": "declare ints k and t",
      "code": "int k , t ;",
      "indent": 3
    },
    {
      "line": 36,
      "text": "read k",
      "code": "cin >> k ;",
      "indent": 3
    },
    {
      "line": 37,
      "text": "for j = 0 to k exclusive",
      "code": "for ( int j = int ( 0 ) ; j < int ( k ) ; j ++ )",
      "indent": 3
    },
    {
      "line": 38,
      "text": "read input to t",
      "code": "cin >> t ;",
      "indent": 4
    },
    {
      "line": 39,
      "text": "push i into edges [ t - 1 ]",
      "code": "edges [ t - 1 ] . push_back ( i ) ;",
      "indent": 4
    },
    {
      "line": 40,
      "text": "DUMMY",
      "code": "}",
      "indent": 3
    },
    {
      "line": 41,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 42,
      "text": "create integer ans = 1000000000",
      "code": "int ans = 1000000000 ;",
      "indent": 2
    },
    {
      "line": 43,
      "text": "for integer i = 0 to 3 exclusive , set ans to min ( ans , simulate ( i ) )",
      "code": "for ( int i = int ( 0 ) ; i < int ( 3 ) ; i ++ ) ans = min ( ans , simulate ( i ) ) ;",
      "indent": 2
    },
    {
      "line": 44,
      "text": "print ans + N",
      "code": "cout << ans + N << endl ;",
      "indent": 2
    },
    {
      "line": 45,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 46,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 47,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        0
      ],
      "mod_code": [
        "int N [ 200 ] , c [ 200 ] ;"
      ],
      "err_line": 4,
      "err_msg": "cast from ‘int*’ to ‘int’ loses precision [-fpermissive]"
    },
    {
      "mod_line": [
        5
      ],
      "mod_code": [
        "for ( int j = 0 ; j < edges [ i ] . length ( ) ; j ++ ) { c [ edges [ i ] [ j ] ] ++ ; }"
      ],
      "err_line": 5,
      "err_msg": "‘class std::vector<int>’ has no member named ‘length’"
    },
    {
      "mod_line": [
        7
      ],
      "mod_code": [
        "int q [ 3 ] ;"
      ],
      "err_line": 9,
      "err_msg": "request for member ‘push’ in ‘q[a[i]]’, which is of non-class type ‘int’"
    },
    {
      "mod_line": [
        9
      ],
      "mod_code": [
        "if ( c [ i ] == false ) q [ a [ i ] ] . push_back ( i ) ;"
      ],
      "err_line": 9,
      "err_msg": "‘class std::queue<int>’ has no member named ‘push_back’"
    },
    {
      "mod_line": [
        17
      ],
      "mod_code": [
        "for ( int i = 0 ; i < edges [ f ] . length ( ) ; i ++ )"
      ],
      "err_line": 17,
      "err_msg": "‘class std::vector<int>’ has no member named ‘length’"
    },
    {
      "mod_line": [
        19
      ],
      "mod_code": [
        "if ( c [ next ] != 0 ) q [ a [ next ] ] . push_back ( next ) ;"
      ],
      "err_line": 19,
      "err_msg": "‘class std::queue<int>’ has no member named ‘push_back’"
    },
    {
      "mod_line": [
        0
      ],
      "mod_code": [
        "int a [ 200 ] , c [ 200 ] ;"
      ],
      "err_line": 4,
      "err_msg": "‘N’ was not declared in this scope"
    },
    {
      "mod_line": [
        1
      ],
      "mod_code": [
        "vector < int , int > edges [ 200 ] ;"
      ],
      "err_line": 5,
      "err_msg": "no match for ‘operator[]’ (operand types are ‘std::vector<int, int>’ and ‘int’)"
    },
    {
      "mod_line": [
        2
      ],
      "mod_code": [
        "int simulate ( int s ) ;"
      ],
      "err_line": 3,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        3
      ],
      "mod_code": [
        "memset ( c , 0 ) , sizeof ( c ) ;"
      ],
      "err_line": 3,
      "err_msg": "too few arguments to function ‘void* memset(void*, int, size_t)’"
    },
    {
      "mod_line": [
        4
      ],
      "mod_code": [
        "for ( i = 0 ; i < N ; i ++ )"
      ],
      "err_line": 4,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        5
      ],
      "mod_code": [
        "for ( int j = 0 ; j < edges [ i ] . length ( ) ; j ++ ) c [ edges [ i ] [ j ] ] ++ ;"
      ],
      "err_line": 5,
      "err_msg": "‘class std::vector<int>’ has no member named ‘length’"
    },
    {
      "mod_line": [
        7
      ],
      "mod_code": [
        "int queues [ 3 ] ;"
      ],
      "err_line": 9,
      "err_msg": "‘q’ was not declared in this scope"
    },
    {
      "mod_line": [
        9
      ],
      "mod_code": [
        "if ( c [ i ] == false ) { q [ a [ i ] ] . push_back ( i ) ; }"
      ],
      "err_line": 9,
      "err_msg": "‘class std::queue<int>’ has no member named ‘push_back’"
    },
    {
      "mod_line": [
        11
      ],
      "mod_code": [
        "int ret = - l ;"
      ],
      "err_line": 11,
      "err_msg": "‘l’ was not declared in this scope"
    },
    {
      "mod_line": [
        13
      ],
      "mod_code": [
        "while ( ! q [ s ] )"
      ],
      "err_line": 13,
      "err_msg": "no match for ‘operator!’ (operand type is ‘std::queue<int>’)"
    },
    {
      "mod_line": [
        14
      ],
      "mod_code": [
        "int f = q [ s ] . element ( ) ;"
      ],
      "err_line": 14,
      "err_msg": "‘class std::queue<int>’ has no member named ‘element’"
    },
    {
      "mod_line": [
        15
      ],
      "mod_code": [
        "q [ s ] . erase ( remove . front ( ) ) ;"
      ],
      "err_line": 15,
      "err_msg": "‘class std::queue<int>’ has no member named ‘erase’"
    },
    {
      "mod_line": [
        18
      ],
      "mod_code": [
        "int edges = edges [ f ] [ i ] ;"
      ],
      "err_line": 18,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        19
      ],
      "mod_code": [
        "if ( c [ a [ next ] != 0 ) q [ a [ next ] ] . push_back ( next ) ;"
      ],
      "err_line": 19,
      "err_msg": "expected ‘]’ before ‘)’ token"
    },
    {
      "mod_line": [
        25
      ],
      "mod_code": [
        "while ( ret )"
      ],
      "err_line": 26,
      "err_msg": "expected primary-expression before ‘}’ token"
    },
    {
      "mod_line": [
        28
      ],
      "mod_code": [
        "while ( { cin >> N )"
      ],
      "err_line": 28,
      "err_msg": "expected primary-expression before ‘{’ token"
    },
    {
      "mod_line": [
        29
      ],
      "mod_code": [
        "for ( i = 0 ; i < N ; i ++ )"
      ],
      "err_line": 29,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        31
      ],
      "mod_code": [
        "a >> a [ i ] ;"
      ],
      "err_line": 31,
      "err_msg": "invalid operands of types ‘int [200]’ and ‘int’ to binary ‘operator>>’"
    },
    {
      "mod_line": [
        36
      ],
      "mod_code": [
        "cin >> n ;"
      ],
      "err_line": 36,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        37
      ],
      "mod_code": [
        "for ( j = 0 ; j < k ; j ++ )"
      ],
      "err_line": 37,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        38
      ],
      "mod_code": [
        "cin >> n ;"
      ],
      "err_line": 38,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        39
      ],
      "mod_code": [
        "edges [ t - 1 ] . push ( i ) ;"
      ],
      "err_line": 39,
      "err_msg": "‘class std::vector<int>’ has no member named ‘push’"
    },
    {
      "mod_line": [
        42
      ],
      "mod_code": [
        "long long ans = 1000000000 ;"
      ],
      "err_line": 43,
      "err_msg": "no matching function for call to ‘min(long long int&, int)’"
    },
    {
      "mod_line": [
        0,
        5
      ],
      "mod_code": [
        "int N [ 200 ] , c [ 200 ] ;",
        "for ( int j = 0 ; j < edges [ i ] . length ( ) ; j ++ ) { c [ edges [ i ] [ j ] ] ++ ; }"
      ],
      "err_line": 4,
      "err_msg": "cast from ‘int*’ to ‘int’ loses precision [-fpermissive]"
    },
    {
      "mod_line": [
        0,
        5,
        7
      ],
      "mod_code": [
        "int N [ 200 ] , c [ 200 ] ;",
        "for ( int j = 0 ; j < edges [ i ] . length ( ) ; j ++ ) { c [ edges [ i ] [ j ] ] ++ ; }",
        "int q [ 3 ] ;"
      ],
      "err_line": 4,
      "err_msg": "cast from ‘int*’ to ‘int’ loses precision [-fpermissive]"
    },
    {
      "mod_line": [
        0,
        5,
        7,
        9
      ],
      "mod_code": [
        "int N [ 200 ] , c [ 200 ] ;",
        "for ( int j = 0 ; j < edges [ i ] . length ( ) ; j ++ ) { c [ edges [ i ] [ j ] ] ++ ; }",
        "int q [ 3 ] ;",
        "if ( c [ i ] == false ) q [ a [ i ] ] . push_back ( i ) ;"
      ],
      "err_line": 4,
      "err_msg": "cast from ‘int*’ to ‘int’ loses precision [-fpermissive]"
    },
    {
      "mod_line": [
        0,
        5,
        7,
        17
      ],
      "mod_code": [
        "int N [ 200 ] , c [ 200 ] ;",
        "for ( int j = 0 ; j < edges [ i ] . length ( ) ; j ++ ) { c [ edges [ i ] [ j ] ] ++ ; }",
        "int q [ 3 ] ;",
        "for ( int i = 0 ; i < edges [ f ] . length ( ) ; i ++ )"
      ],
      "err_line": 4,
      "err_msg": "cast from ‘int*’ to ‘int’ loses precision [-fpermissive]"
    },
    {
      "mod_line": [
        0,
        5,
        7,
        19
      ],
      "mod_code": [
        "int N [ 200 ] , c [ 200 ] ;",
        "for ( int j = 0 ; j < edges [ i ] . length ( ) ; j ++ ) { c [ edges [ i ] [ j ] ] ++ ; }",
        "int q [ 3 ] ;",
        "if ( c [ next ] != 0 ) q [ a [ next ] ] . push_back ( next ) ;"
      ],
      "err_line": 4,
      "err_msg": "cast from ‘int*’ to ‘int’ loses precision [-fpermissive]"
    },
    {
      "mod_line": [
        0,
        5,
        7,
        29
      ],
      "mod_code": [
        "int N [ 200 ] , c [ 200 ] ;",
        "for ( int j = 0 ; j < edges [ i ] . length ( ) ; j ++ ) { c [ edges [ i ] [ j ] ] ++ ; }",
        "int q [ 3 ] ;",
        "for ( int i = 0 ; i < N ; i ++ )"
      ],
      "err_line": 4,
      "err_msg": "cast from ‘int*’ to ‘int’ loses precision [-fpermissive]"
    },
    {
      "mod_line": [
        0,
        5,
        7,
        30
      ],
      "mod_code": [
        "int N [ 200 ] , c [ 200 ] ;",
        "for ( int j = 0 ; j < edges [ i ] . length ( ) ; j ++ ) { c [ edges [ i ] [ j ] ] ++ ; }",
        "int q [ 3 ] ;",
        "for ( int i = int ( N ) ; i < ( N ) ; i ++ )"
      ],
      "err_line": 4,
      "err_msg": "cast from ‘int*’ to ‘int’ loses precision [-fpermissive]"
    },
    {
      "mod_line": [
        0,
        5,
        9
      ],
      "mod_code": [
        "int N [ 200 ] , c [ 200 ] ;",
        "for ( int j = 0 ; j < edges [ i ] . length ( ) ; j ++ ) { c [ edges [ i ] [ j ] ] ++ ; }",
        "if ( c [ i ] == false ) q [ a [ i ] ] . push_back ( i ) ;"
      ],
      "err_line": 4,
      "err_msg": "cast from ‘int*’ to ‘int’ loses precision [-fpermissive]"
    },
    {
      "mod_line": [
        0,
        5,
        9,
        17
      ],
      "mod_code": [
        "int N [ 200 ] , c [ 200 ] ;",
        "for ( int j = 0 ; j < edges [ i ] . length ( ) ; j ++ ) { c [ edges [ i ] [ j ] ] ++ ; }",
        "if ( c [ i ] == false ) q [ a [ i ] ] . push_back ( i ) ;",
        "for ( int i = 0 ; i < edges [ f ] . length ( ) ; i ++ )"
      ],
      "err_line": 4,
      "err_msg": "cast from ‘int*’ to ‘int’ loses precision [-fpermissive]"
    },
    {
      "mod_line": [
        0,
        5,
        9,
        19
      ],
      "mod_code": [
        "int N [ 200 ] , c [ 200 ] ;",
        "for ( int j = 0 ; j < edges [ i ] . length ( ) ; j ++ ) { c [ edges [ i ] [ j ] ] ++ ; }",
        "if ( c [ i ] == false ) q [ a [ i ] ] . push_back ( i ) ;",
        "if ( c [ next ] != 0 ) q [ a [ next ] ] . push_back ( next ) ;"
      ],
      "err_line": 4,
      "err_msg": "cast from ‘int*’ to ‘int’ loses precision [-fpermissive]"
    },
    {
      "mod_line": [
        0,
        5,
        9,
        29
      ],
      "mod_code": [
        "int N [ 200 ] , c [ 200 ] ;",
        "for ( int j = 0 ; j < edges [ i ] . length ( ) ; j ++ ) { c [ edges [ i ] [ j ] ] ++ ; }",
        "if ( c [ i ] == false ) q [ a [ i ] ] . push_back ( i ) ;",
        "for ( int i = 0 ; i < N ; i ++ )"
      ],
      "err_line": 4,
      "err_msg": "cast from ‘int*’ to ‘int’ loses precision [-fpermissive]"
    },
    {
      "mod_line": [
        0,
        5,
        9,
        30
      ],
      "mod_code": [
        "int N [ 200 ] , c [ 200 ] ;",
        "for ( int j = 0 ; j < edges [ i ] . length ( ) ; j ++ ) { c [ edges [ i ] [ j ] ] ++ ; }",
        "if ( c [ i ] == false ) q [ a [ i ] ] . push_back ( i ) ;",
        "for ( int i = int ( N ) ; i < ( N ) ; i ++ )"
      ],
      "err_line": 4,
      "err_msg": "cast from ‘int*’ to ‘int’ loses precision [-fpermissive]"
    },
    {
      "mod_line": [
        0,
        5,
        17
      ],
      "mod_code": [
        "int N [ 200 ] , c [ 200 ] ;",
        "for ( int j = 0 ; j < edges [ i ] . length ( ) ; j ++ ) { c [ edges [ i ] [ j ] ] ++ ; }",
        "for ( int i = 0 ; i < edges [ f ] . length ( ) ; i ++ )"
      ],
      "err_line": 4,
      "err_msg": "cast from ‘int*’ to ‘int’ loses precision [-fpermissive]"
    },
    {
      "mod_line": [
        0,
        5,
        17,
        19
      ],
      "mod_code": [
        "int N [ 200 ] , c [ 200 ] ;",
        "for ( int j = 0 ; j < edges [ i ] . length ( ) ; j ++ ) { c [ edges [ i ] [ j ] ] ++ ; }",
        "for ( int i = 0 ; i < edges [ f ] . length ( ) ; i ++ )",
        "if ( c [ next ] != 0 ) q [ a [ next ] ] . push_back ( next ) ;"
      ],
      "err_line": 4,
      "err_msg": "cast from ‘int*’ to ‘int’ loses precision [-fpermissive]"
    },
    {
      "mod_line": [
        0,
        5,
        17,
        29
      ],
      "mod_code": [
        "int N [ 200 ] , c [ 200 ] ;",
        "for ( int j = 0 ; j < edges [ i ] . length ( ) ; j ++ ) { c [ edges [ i ] [ j ] ] ++ ; }",
        "for ( int i = 0 ; i < edges [ f ] . length ( ) ; i ++ )",
        "for ( int i = 0 ; i < N ; i ++ )"
      ],
      "err_line": 4,
      "err_msg": "cast from ‘int*’ to ‘int’ loses precision [-fpermissive]"
    },
    {
      "mod_line": [
        0,
        5,
        17,
        30
      ],
      "mod_code": [
        "int N [ 200 ] , c [ 200 ] ;",
        "for ( int j = 0 ; j < edges [ i ] . length ( ) ; j ++ ) { c [ edges [ i ] [ j ] ] ++ ; }",
        "for ( int i = 0 ; i < edges [ f ] . length ( ) ; i ++ )",
        "for ( int i = int ( N ) ; i < ( N ) ; i ++ )"
      ],
      "err_line": 4,
      "err_msg": "cast from ‘int*’ to ‘int’ loses precision [-fpermissive]"
    },
    {
      "mod_line": [
        0,
        5,
        19
      ],
      "mod_code": [
        "int N [ 200 ] , c [ 200 ] ;",
        "for ( int j = 0 ; j < edges [ i ] . length ( ) ; j ++ ) { c [ edges [ i ] [ j ] ] ++ ; }",
        "if ( c [ next ] != 0 ) q [ a [ next ] ] . push_back ( next ) ;"
      ],
      "err_line": 4,
      "err_msg": "cast from ‘int*’ to ‘int’ loses precision [-fpermissive]"
    },
    {
      "mod_line": [
        0,
        5,
        19,
        29
      ],
      "mod_code": [
        "int N [ 200 ] , c [ 200 ] ;",
        "for ( int j = 0 ; j < edges [ i ] . length ( ) ; j ++ ) { c [ edges [ i ] [ j ] ] ++ ; }",
        "if ( c [ next ] != 0 ) q [ a [ next ] ] . push_back ( next ) ;",
        "for ( int i = 0 ; i < N ; i ++ )"
      ],
      "err_line": 4,
      "err_msg": "cast from ‘int*’ to ‘int’ loses precision [-fpermissive]"
    },
    {
      "mod_line": [
        0,
        5,
        19,
        30
      ],
      "mod_code": [
        "int N [ 200 ] , c [ 200 ] ;",
        "for ( int j = 0 ; j < edges [ i ] . length ( ) ; j ++ ) { c [ edges [ i ] [ j ] ] ++ ; }",
        "if ( c [ next ] != 0 ) q [ a [ next ] ] . push_back ( next ) ;",
        "for ( int i = int ( N ) ; i < ( N ) ; i ++ )"
      ],
      "err_line": 4,
      "err_msg": "cast from ‘int*’ to ‘int’ loses precision [-fpermissive]"
    },
    {
      "mod_line": [
        0,
        5,
        29
      ],
      "mod_code": [
        "int N [ 200 ] , c [ 200 ] ;",
        "for ( int j = 0 ; j < edges [ i ] . length ( ) ; j ++ ) { c [ edges [ i ] [ j ] ] ++ ; }",
        "for ( int i = 0 ; i < N ; i ++ )"
      ],
      "err_line": 4,
      "err_msg": "cast from ‘int*’ to ‘int’ loses precision [-fpermissive]"
    },
    {
      "mod_line": [
        0,
        5,
        29,
        30
      ],
      "mod_code": [
        "int N [ 200 ] , c [ 200 ] ;",
        "for ( int j = 0 ; j < edges [ i ] . length ( ) ; j ++ ) { c [ edges [ i ] [ j ] ] ++ ; }",
        "for ( int i = 0 ; i < N ; i ++ )",
        "for ( int i = int ( N ) ; i < ( N ) ; i ++ )"
      ],
      "err_line": 4,
      "err_msg": "cast from ‘int*’ to ‘int’ loses precision [-fpermissive]"
    },
    {
      "mod_line": [
        0,
        5,
        30
      ],
      "mod_code": [
        "int N [ 200 ] , c [ 200 ] ;",
        "for ( int j = 0 ; j < edges [ i ] . length ( ) ; j ++ ) { c [ edges [ i ] [ j ] ] ++ ; }",
        "for ( int i = int ( N ) ; i < ( N ) ; i ++ )"
      ],
      "err_line": 4,
      "err_msg": "cast from ‘int*’ to ‘int’ loses precision [-fpermissive]"
    },
    {
      "mod_line": [
        0,
        7
      ],
      "mod_code": [
        "int N [ 200 ] , c [ 200 ] ;",
        "int q [ 3 ] ;"
      ],
      "err_line": 4,
      "err_msg": "cast from ‘int*’ to ‘int’ loses precision [-fpermissive]"
    },
    {
      "mod_line": [
        0,
        7,
        9
      ],
      "mod_code": [
        "int N [ 200 ] , c [ 200 ] ;",
        "int q [ 3 ] ;",
        "if ( c [ i ] == false ) q [ a [ i ] ] . push_back ( i ) ;"
      ],
      "err_line": 4,
      "err_msg": "cast from ‘int*’ to ‘int’ loses precision [-fpermissive]"
    },
    {
      "mod_line": [
        0,
        7,
        9,
        17
      ],
      "mod_code": [
        "int N [ 200 ] , c [ 200 ] ;",
        "int q [ 3 ] ;",
        "if ( c [ i ] == false ) q [ a [ i ] ] . push_back ( i ) ;",
        "for ( int i = 0 ; i < edges [ f ] . length ( ) ; i ++ )"
      ],
      "err_line": 4,
      "err_msg": "cast from ‘int*’ to ‘int’ loses precision [-fpermissive]"
    },
    {
      "mod_line": [
        0,
        7,
        9,
        19
      ],
      "mod_code": [
        "int N [ 200 ] , c [ 200 ] ;",
        "int q [ 3 ] ;",
        "if ( c [ i ] == false ) q [ a [ i ] ] . push_back ( i ) ;",
        "if ( c [ next ] != 0 ) q [ a [ next ] ] . push_back ( next ) ;"
      ],
      "err_line": 4,
      "err_msg": "cast from ‘int*’ to ‘int’ loses precision [-fpermissive]"
    },
    {
      "mod_line": [
        0,
        7,
        9,
        29
      ],
      "mod_code": [
        "int N [ 200 ] , c [ 200 ] ;",
        "int q [ 3 ] ;",
        "if ( c [ i ] == false ) q [ a [ i ] ] . push_back ( i ) ;",
        "for ( int i = 0 ; i < N ; i ++ )"
      ],
      "err_line": 4,
      "err_msg": "cast from ‘int*’ to ‘int’ loses precision [-fpermissive]"
    },
    {
      "mod_line": [
        0,
        7,
        9,
        30
      ],
      "mod_code": [
        "int N [ 200 ] , c [ 200 ] ;",
        "int q [ 3 ] ;",
        "if ( c [ i ] == false ) q [ a [ i ] ] . push_back ( i ) ;",
        "for ( int i = int ( N ) ; i < ( N ) ; i ++ )"
      ],
      "err_line": 4,
      "err_msg": "cast from ‘int*’ to ‘int’ loses precision [-fpermissive]"
    },
    {
      "mod_line": [
        0,
        7,
        17
      ],
      "mod_code": [
        "int N [ 200 ] , c [ 200 ] ;",
        "int q [ 3 ] ;",
        "for ( int i = 0 ; i < edges [ f ] . length ( ) ; i ++ )"
      ],
      "err_line": 4,
      "err_msg": "cast from ‘int*’ to ‘int’ loses precision [-fpermissive]"
    },
    {
      "mod_line": [
        0,
        7,
        17,
        19
      ],
      "mod_code": [
        "int N [ 200 ] , c [ 200 ] ;",
        "int q [ 3 ] ;",
        "for ( int i = 0 ; i < edges [ f ] . length ( ) ; i ++ )",
        "if ( c [ next ] != 0 ) q [ a [ next ] ] . push_back ( next ) ;"
      ],
      "err_line": 4,
      "err_msg": "cast from ‘int*’ to ‘int’ loses precision [-fpermissive]"
    },
    {
      "mod_line": [
        0,
        7,
        17,
        29
      ],
      "mod_code": [
        "int N [ 200 ] , c [ 200 ] ;",
        "int q [ 3 ] ;",
        "for ( int i = 0 ; i < edges [ f ] . length ( ) ; i ++ )",
        "for ( int i = 0 ; i < N ; i ++ )"
      ],
      "err_line": 4,
      "err_msg": "cast from ‘int*’ to ‘int’ loses precision [-fpermissive]"
    },
    {
      "mod_line": [
        0,
        7,
        17,
        30
      ],
      "mod_code": [
        "int N [ 200 ] , c [ 200 ] ;",
        "int q [ 3 ] ;",
        "for ( int i = 0 ; i < edges [ f ] . length ( ) ; i ++ )",
        "for ( int i = int ( N ) ; i < ( N ) ; i ++ )"
      ],
      "err_line": 4,
      "err_msg": "cast from ‘int*’ to ‘int’ loses precision [-fpermissive]"
    },
    {
      "mod_line": [
        0,
        7,
        19
      ],
      "mod_code": [
        "int N [ 200 ] , c [ 200 ] ;",
        "int q [ 3 ] ;",
        "if ( c [ next ] != 0 ) q [ a [ next ] ] . push_back ( next ) ;"
      ],
      "err_line": 4,
      "err_msg": "cast from ‘int*’ to ‘int’ loses precision [-fpermissive]"
    },
    {
      "mod_line": [
        0,
        7,
        19,
        29
      ],
      "mod_code": [
        "int N [ 200 ] , c [ 200 ] ;",
        "int q [ 3 ] ;",
        "if ( c [ next ] != 0 ) q [ a [ next ] ] . push_back ( next ) ;",
        "for ( int i = 0 ; i < N ; i ++ )"
      ],
      "err_line": 4,
      "err_msg": "cast from ‘int*’ to ‘int’ loses precision [-fpermissive]"
    },
    {
      "mod_line": [
        0,
        7,
        19,
        30
      ],
      "mod_code": [
        "int N [ 200 ] , c [ 200 ] ;",
        "int q [ 3 ] ;",
        "if ( c [ next ] != 0 ) q [ a [ next ] ] . push_back ( next ) ;",
        "for ( int i = int ( N ) ; i < ( N ) ; i ++ )"
      ],
      "err_line": 4,
      "err_msg": "cast from ‘int*’ to ‘int’ loses precision [-fpermissive]"
    },
    {
      "mod_line": [
        0,
        7,
        29
      ],
      "mod_code": [
        "int N [ 200 ] , c [ 200 ] ;",
        "int q [ 3 ] ;",
        "for ( int i = 0 ; i < N ; i ++ )"
      ],
      "err_line": 4,
      "err_msg": "cast from ‘int*’ to ‘int’ loses precision [-fpermissive]"
    },
    {
      "mod_line": [
        0,
        7,
        29,
        30
      ],
      "mod_code": [
        "int N [ 200 ] , c [ 200 ] ;",
        "int q [ 3 ] ;",
        "for ( int i = 0 ; i < N ; i ++ )",
        "for ( int i = int ( N ) ; i < ( N ) ; i ++ )"
      ],
      "err_line": 4,
      "err_msg": "cast from ‘int*’ to ‘int’ loses precision [-fpermissive]"
    },
    {
      "mod_line": [
        0,
        7,
        30
      ],
      "mod_code": [
        "int N [ 200 ] , c [ 200 ] ;",
        "int q [ 3 ] ;",
        "for ( int i = int ( N ) ; i < ( N ) ; i ++ )"
      ],
      "err_line": 4,
      "err_msg": "cast from ‘int*’ to ‘int’ loses precision [-fpermissive]"
    },
    {
      "mod_line": [
        0,
        9
      ],
      "mod_code": [
        "int N [ 200 ] , c [ 200 ] ;",
        "if ( c [ i ] == false ) q [ a [ i ] ] . push_back ( i ) ;"
      ],
      "err_line": 4,
      "err_msg": "cast from ‘int*’ to ‘int’ loses precision [-fpermissive]"
    },
    {
      "mod_line": [
        0,
        9,
        17
      ],
      "mod_code": [
        "int N [ 200 ] , c [ 200 ] ;",
        "if ( c [ i ] == false ) q [ a [ i ] ] . push_back ( i ) ;",
        "for ( int i = 0 ; i < edges [ f ] . length ( ) ; i ++ )"
      ],
      "err_line": 4,
      "err_msg": "cast from ‘int*’ to ‘int’ loses precision [-fpermissive]"
    },
    {
      "mod_line": [
        0,
        9,
        17,
        19
      ],
      "mod_code": [
        "int N [ 200 ] , c [ 200 ] ;",
        "if ( c [ i ] == false ) q [ a [ i ] ] . push_back ( i ) ;",
        "for ( int i = 0 ; i < edges [ f ] . length ( ) ; i ++ )",
        "if ( c [ next ] != 0 ) q [ a [ next ] ] . push_back ( next ) ;"
      ],
      "err_line": 4,
      "err_msg": "cast from ‘int*’ to ‘int’ loses precision [-fpermissive]"
    },
    {
      "mod_line": [
        0,
        9,
        17,
        29
      ],
      "mod_code": [
        "int N [ 200 ] , c [ 200 ] ;",
        "if ( c [ i ] == false ) q [ a [ i ] ] . push_back ( i ) ;",
        "for ( int i = 0 ; i < edges [ f ] . length ( ) ; i ++ )",
        "for ( int i = 0 ; i < N ; i ++ )"
      ],
      "err_line": 4,
      "err_msg": "cast from ‘int*’ to ‘int’ loses precision [-fpermissive]"
    },
    {
      "mod_line": [
        0,
        9,
        17,
        30
      ],
      "mod_code": [
        "int N [ 200 ] , c [ 200 ] ;",
        "if ( c [ i ] == false ) q [ a [ i ] ] . push_back ( i ) ;",
        "for ( int i = 0 ; i < edges [ f ] . length ( ) ; i ++ )",
        "for ( int i = int ( N ) ; i < ( N ) ; i ++ )"
      ],
      "err_line": 4,
      "err_msg": "cast from ‘int*’ to ‘int’ loses precision [-fpermissive]"
    },
    {
      "mod_line": [
        0,
        9,
        19
      ],
      "mod_code": [
        "int N [ 200 ] , c [ 200 ] ;",
        "if ( c [ i ] == false ) q [ a [ i ] ] . push_back ( i ) ;",
        "if ( c [ next ] != 0 ) q [ a [ next ] ] . push_back ( next ) ;"
      ],
      "err_line": 4,
      "err_msg": "cast from ‘int*’ to ‘int’ loses precision [-fpermissive]"
    },
    {
      "mod_line": [
        0,
        9,
        19,
        29
      ],
      "mod_code": [
        "int N [ 200 ] , c [ 200 ] ;",
        "if ( c [ i ] == false ) q [ a [ i ] ] . push_back ( i ) ;",
        "if ( c [ next ] != 0 ) q [ a [ next ] ] . push_back ( next ) ;",
        "for ( int i = 0 ; i < N ; i ++ )"
      ],
      "err_line": 4,
      "err_msg": "cast from ‘int*’ to ‘int’ loses precision [-fpermissive]"
    },
    {
      "mod_line": [
        0,
        9,
        19,
        30
      ],
      "mod_code": [
        "int N [ 200 ] , c [ 200 ] ;",
        "if ( c [ i ] == false ) q [ a [ i ] ] . push_back ( i ) ;",
        "if ( c [ next ] != 0 ) q [ a [ next ] ] . push_back ( next ) ;",
        "for ( int i = int ( N ) ; i < ( N ) ; i ++ )"
      ],
      "err_line": 4,
      "err_msg": "cast from ‘int*’ to ‘int’ loses precision [-fpermissive]"
    },
    {
      "mod_line": [
        0,
        9,
        29
      ],
      "mod_code": [
        "int N [ 200 ] , c [ 200 ] ;",
        "if ( c [ i ] == false ) q [ a [ i ] ] . push_back ( i ) ;",
        "for ( int i = 0 ; i < N ; i ++ )"
      ],
      "err_line": 4,
      "err_msg": "cast from ‘int*’ to ‘int’ loses precision [-fpermissive]"
    },
    {
      "mod_line": [
        0,
        9,
        29,
        30
      ],
      "mod_code": [
        "int N [ 200 ] , c [ 200 ] ;",
        "if ( c [ i ] == false ) q [ a [ i ] ] . push_back ( i ) ;",
        "for ( int i = 0 ; i < N ; i ++ )",
        "for ( int i = int ( N ) ; i < ( N ) ; i ++ )"
      ],
      "err_line": 4,
      "err_msg": "cast from ‘int*’ to ‘int’ loses precision [-fpermissive]"
    },
    {
      "mod_line": [
        0,
        9,
        30
      ],
      "mod_code": [
        "int N [ 200 ] , c [ 200 ] ;",
        "if ( c [ i ] == false ) q [ a [ i ] ] . push_back ( i ) ;",
        "for ( int i = int ( N ) ; i < ( N ) ; i ++ )"
      ],
      "err_line": 4,
      "err_msg": "cast from ‘int*’ to ‘int’ loses precision [-fpermissive]"
    },
    {
      "mod_line": [
        0,
        17
      ],
      "mod_code": [
        "int N [ 200 ] , c [ 200 ] ;",
        "for ( int i = 0 ; i < edges [ f ] . length ( ) ; i ++ )"
      ],
      "err_line": 4,
      "err_msg": "cast from ‘int*’ to ‘int’ loses precision [-fpermissive]"
    },
    {
      "mod_line": [
        0,
        17,
        19
      ],
      "mod_code": [
        "int N [ 200 ] , c [ 200 ] ;",
        "for ( int i = 0 ; i < edges [ f ] . length ( ) ; i ++ )",
        "if ( c [ next ] != 0 ) q [ a [ next ] ] . push_back ( next ) ;"
      ],
      "err_line": 4,
      "err_msg": "cast from ‘int*’ to ‘int’ loses precision [-fpermissive]"
    },
    {
      "mod_line": [
        0,
        17,
        19,
        29
      ],
      "mod_code": [
        "int N [ 200 ] , c [ 200 ] ;",
        "for ( int i = 0 ; i < edges [ f ] . length ( ) ; i ++ )",
        "if ( c [ next ] != 0 ) q [ a [ next ] ] . push_back ( next ) ;",
        "for ( int i = 0 ; i < N ; i ++ )"
      ],
      "err_line": 4,
      "err_msg": "cast from ‘int*’ to ‘int’ loses precision [-fpermissive]"
    },
    {
      "mod_line": [
        0,
        17,
        19,
        30
      ],
      "mod_code": [
        "int N [ 200 ] , c [ 200 ] ;",
        "for ( int i = 0 ; i < edges [ f ] . length ( ) ; i ++ )",
        "if ( c [ next ] != 0 ) q [ a [ next ] ] . push_back ( next ) ;",
        "for ( int i = int ( N ) ; i < ( N ) ; i ++ )"
      ],
      "err_line": 4,
      "err_msg": "cast from ‘int*’ to ‘int’ loses precision [-fpermissive]"
    },
    {
      "mod_line": [
        0,
        17,
        29
      ],
      "mod_code": [
        "int N [ 200 ] , c [ 200 ] ;",
        "for ( int i = 0 ; i < edges [ f ] . length ( ) ; i ++ )",
        "for ( int i = 0 ; i < N ; i ++ )"
      ],
      "err_line": 4,
      "err_msg": "cast from ‘int*’ to ‘int’ loses precision [-fpermissive]"
    },
    {
      "mod_line": [
        0,
        17,
        29,
        30
      ],
      "mod_code": [
        "int N [ 200 ] , c [ 200 ] ;",
        "for ( int i = 0 ; i < edges [ f ] . length ( ) ; i ++ )",
        "for ( int i = 0 ; i < N ; i ++ )",
        "for ( int i = int ( N ) ; i < ( N ) ; i ++ )"
      ],
      "err_line": 4,
      "err_msg": "cast from ‘int*’ to ‘int’ loses precision [-fpermissive]"
    },
    {
      "mod_line": [
        0,
        17,
        30
      ],
      "mod_code": [
        "int N [ 200 ] , c [ 200 ] ;",
        "for ( int i = 0 ; i < edges [ f ] . length ( ) ; i ++ )",
        "for ( int i = int ( N ) ; i < ( N ) ; i ++ )"
      ],
      "err_line": 4,
      "err_msg": "cast from ‘int*’ to ‘int’ loses precision [-fpermissive]"
    },
    {
      "mod_line": [
        0,
        19
      ],
      "mod_code": [
        "int N [ 200 ] , c [ 200 ] ;",
        "if ( c [ next ] != 0 ) q [ a [ next ] ] . push_back ( next ) ;"
      ],
      "err_line": 4,
      "err_msg": "cast from ‘int*’ to ‘int’ loses precision [-fpermissive]"
    },
    {
      "mod_line": [
        0,
        19,
        29
      ],
      "mod_code": [
        "int N [ 200 ] , c [ 200 ] ;",
        "if ( c [ next ] != 0 ) q [ a [ next ] ] . push_back ( next ) ;",
        "for ( int i = 0 ; i < N ; i ++ )"
      ],
      "err_line": 4,
      "err_msg": "cast from ‘int*’ to ‘int’ loses precision [-fpermissive]"
    },
    {
      "mod_line": [
        0,
        19,
        29,
        30
      ],
      "mod_code": [
        "int N [ 200 ] , c [ 200 ] ;",
        "if ( c [ next ] != 0 ) q [ a [ next ] ] . push_back ( next ) ;",
        "for ( int i = 0 ; i < N ; i ++ )",
        "for ( int i = int ( N ) ; i < ( N ) ; i ++ )"
      ],
      "err_line": 4,
      "err_msg": "cast from ‘int*’ to ‘int’ loses precision [-fpermissive]"
    },
    {
      "mod_line": [
        0,
        19,
        30
      ],
      "mod_code": [
        "int N [ 200 ] , c [ 200 ] ;",
        "if ( c [ next ] != 0 ) q [ a [ next ] ] . push_back ( next ) ;",
        "for ( int i = int ( N ) ; i < ( N ) ; i ++ )"
      ],
      "err_line": 4,
      "err_msg": "cast from ‘int*’ to ‘int’ loses precision [-fpermissive]"
    },
    {
      "mod_line": [
        0,
        29
      ],
      "mod_code": [
        "int N [ 200 ] , c [ 200 ] ;",
        "for ( int i = 0 ; i < N ; i ++ )"
      ],
      "err_line": 4,
      "err_msg": "cast from ‘int*’ to ‘int’ loses precision [-fpermissive]"
    },
    {
      "mod_line": [
        0,
        29,
        30
      ],
      "mod_code": [
        "int N [ 200 ] , c [ 200 ] ;",
        "for ( int i = 0 ; i < N ; i ++ )",
        "for ( int i = int ( N ) ; i < ( N ) ; i ++ )"
      ],
      "err_line": 4,
      "err_msg": "cast from ‘int*’ to ‘int’ loses precision [-fpermissive]"
    },
    {
      "mod_line": [
        0,
        30
      ],
      "mod_code": [
        "int N [ 200 ] , c [ 200 ] ;",
        "for ( int i = int ( N ) ; i < ( N ) ; i ++ )"
      ],
      "err_line": 4,
      "err_msg": "cast from ‘int*’ to ‘int’ loses precision [-fpermissive]"
    },
    {
      "mod_line": [
        5,
        7
      ],
      "mod_code": [
        "for ( int j = 0 ; j < edges [ i ] . length ( ) ; j ++ ) { c [ edges [ i ] [ j ] ] ++ ; }",
        "int q [ 3 ] ;"
      ],
      "err_line": 5,
      "err_msg": "‘class std::vector<int>’ has no member named ‘length’"
    },
    {
      "mod_line": [
        5,
        7,
        9
      ],
      "mod_code": [
        "for ( int j = 0 ; j < edges [ i ] . length ( ) ; j ++ ) { c [ edges [ i ] [ j ] ] ++ ; }",
        "int q [ 3 ] ;",
        "if ( c [ i ] == false ) q [ a [ i ] ] . push_back ( i ) ;"
      ],
      "err_line": 5,
      "err_msg": "‘class std::vector<int>’ has no member named ‘length’"
    },
    {
      "mod_line": [
        5,
        7,
        9,
        17
      ],
      "mod_code": [
        "for ( int j = 0 ; j < edges [ i ] . length ( ) ; j ++ ) { c [ edges [ i ] [ j ] ] ++ ; }",
        "int q [ 3 ] ;",
        "if ( c [ i ] == false ) q [ a [ i ] ] . push_back ( i ) ;",
        "for ( int i = 0 ; i < edges [ f ] . length ( ) ; i ++ )"
      ],
      "err_line": 5,
      "err_msg": "‘class std::vector<int>’ has no member named ‘length’"
    },
    {
      "mod_line": [
        5,
        7,
        9,
        19
      ],
      "mod_code": [
        "for ( int j = 0 ; j < edges [ i ] . length ( ) ; j ++ ) { c [ edges [ i ] [ j ] ] ++ ; }",
        "int q [ 3 ] ;",
        "if ( c [ i ] == false ) q [ a [ i ] ] . push_back ( i ) ;",
        "if ( c [ next ] != 0 ) q [ a [ next ] ] . push_back ( next ) ;"
      ],
      "err_line": 5,
      "err_msg": "‘class std::vector<int>’ has no member named ‘length’"
    },
    {
      "mod_line": [
        5,
        7,
        9,
        29
      ],
      "mod_code": [
        "for ( int j = 0 ; j < edges [ i ] . length ( ) ; j ++ ) { c [ edges [ i ] [ j ] ] ++ ; }",
        "int q [ 3 ] ;",
        "if ( c [ i ] == false ) q [ a [ i ] ] . push_back ( i ) ;",
        "for ( int i = 0 ; i < N ; i ++ )"
      ],
      "err_line": 5,
      "err_msg": "‘class std::vector<int>’ has no member named ‘length’"
    },
    {
      "mod_line": [
        5,
        7,
        9,
        30
      ],
      "mod_code": [
        "for ( int j = 0 ; j < edges [ i ] . length ( ) ; j ++ ) { c [ edges [ i ] [ j ] ] ++ ; }",
        "int q [ 3 ] ;",
        "if ( c [ i ] == false ) q [ a [ i ] ] . push_back ( i ) ;",
        "for ( int i = int ( N ) ; i < ( N ) ; i ++ )"
      ],
      "err_line": 5,
      "err_msg": "‘class std::vector<int>’ has no member named ‘length’"
    },
    {
      "mod_line": [
        5,
        7,
        17
      ],
      "mod_code": [
        "for ( int j = 0 ; j < edges [ i ] . length ( ) ; j ++ ) { c [ edges [ i ] [ j ] ] ++ ; }",
        "int q [ 3 ] ;",
        "for ( int i = 0 ; i < edges [ f ] . length ( ) ; i ++ )"
      ],
      "err_line": 5,
      "err_msg": "‘class std::vector<int>’ has no member named ‘length’"
    },
    {
      "mod_line": [
        5,
        7,
        17,
        19
      ],
      "mod_code": [
        "for ( int j = 0 ; j < edges [ i ] . length ( ) ; j ++ ) { c [ edges [ i ] [ j ] ] ++ ; }",
        "int q [ 3 ] ;",
        "for ( int i = 0 ; i < edges [ f ] . length ( ) ; i ++ )",
        "if ( c [ next ] != 0 ) q [ a [ next ] ] . push_back ( next ) ;"
      ],
      "err_line": 5,
      "err_msg": "‘class std::vector<int>’ has no member named ‘length’"
    },
    {
      "mod_line": [
        5,
        7,
        17,
        29
      ],
      "mod_code": [
        "for ( int j = 0 ; j < edges [ i ] . length ( ) ; j ++ ) { c [ edges [ i ] [ j ] ] ++ ; }",
        "int q [ 3 ] ;",
        "for ( int i = 0 ; i < edges [ f ] . length ( ) ; i ++ )",
        "for ( int i = 0 ; i < N ; i ++ )"
      ],
      "err_line": 5,
      "err_msg": "‘class std::vector<int>’ has no member named ‘length’"
    },
    {
      "mod_line": [
        5,
        7,
        17,
        30
      ],
      "mod_code": [
        "for ( int j = 0 ; j < edges [ i ] . length ( ) ; j ++ ) { c [ edges [ i ] [ j ] ] ++ ; }",
        "int q [ 3 ] ;",
        "for ( int i = 0 ; i < edges [ f ] . length ( ) ; i ++ )",
        "for ( int i = int ( N ) ; i < ( N ) ; i ++ )"
      ],
      "err_line": 5,
      "err_msg": "‘class std::vector<int>’ has no member named ‘length’"
    },
    {
      "mod_line": [
        5,
        7,
        19
      ],
      "mod_code": [
        "for ( int j = 0 ; j < edges [ i ] . length ( ) ; j ++ ) { c [ edges [ i ] [ j ] ] ++ ; }",
        "int q [ 3 ] ;",
        "if ( c [ next ] != 0 ) q [ a [ next ] ] . push_back ( next ) ;"
      ],
      "err_line": 5,
      "err_msg": "‘class std::vector<int>’ has no member named ‘length’"
    },
    {
      "mod_line": [
        5,
        7,
        19,
        29
      ],
      "mod_code": [
        "for ( int j = 0 ; j < edges [ i ] . length ( ) ; j ++ ) { c [ edges [ i ] [ j ] ] ++ ; }",
        "int q [ 3 ] ;",
        "if ( c [ next ] != 0 ) q [ a [ next ] ] . push_back ( next ) ;",
        "for ( int i = 0 ; i < N ; i ++ )"
      ],
      "err_line": 5,
      "err_msg": "‘class std::vector<int>’ has no member named ‘length’"
    },
    {
      "mod_line": [
        5,
        7,
        19,
        30
      ],
      "mod_code": [
        "for ( int j = 0 ; j < edges [ i ] . length ( ) ; j ++ ) { c [ edges [ i ] [ j ] ] ++ ; }",
        "int q [ 3 ] ;",
        "if ( c [ next ] != 0 ) q [ a [ next ] ] . push_back ( next ) ;",
        "for ( int i = int ( N ) ; i < ( N ) ; i ++ )"
      ],
      "err_line": 5,
      "err_msg": "‘class std::vector<int>’ has no member named ‘length’"
    },
    {
      "mod_line": [
        5,
        7,
        29
      ],
      "mod_code": [
        "for ( int j = 0 ; j < edges [ i ] . length ( ) ; j ++ ) { c [ edges [ i ] [ j ] ] ++ ; }",
        "int q [ 3 ] ;",
        "for ( int i = 0 ; i < N ; i ++ )"
      ],
      "err_line": 5,
      "err_msg": "‘class std::vector<int>’ has no member named ‘length’"
    },
    {
      "mod_line": [
        5,
        7,
        29,
        30
      ],
      "mod_code": [
        "for ( int j = 0 ; j < edges [ i ] . length ( ) ; j ++ ) { c [ edges [ i ] [ j ] ] ++ ; }",
        "int q [ 3 ] ;",
        "for ( int i = 0 ; i < N ; i ++ )",
        "for ( int i = int ( N ) ; i < ( N ) ; i ++ )"
      ],
      "err_line": 5,
      "err_msg": "‘class std::vector<int>’ has no member named ‘length’"
    },
    {
      "mod_line": [
        5,
        7,
        30
      ],
      "mod_code": [
        "for ( int j = 0 ; j < edges [ i ] . length ( ) ; j ++ ) { c [ edges [ i ] [ j ] ] ++ ; }",
        "int q [ 3 ] ;",
        "for ( int i = int ( N ) ; i < ( N ) ; i ++ )"
      ],
      "err_line": 5,
      "err_msg": "‘class std::vector<int>’ has no member named ‘length’"
    },
    {
      "mod_line": [
        5,
        9
      ],
      "mod_code": [
        "for ( int j = 0 ; j < edges [ i ] . length ( ) ; j ++ ) { c [ edges [ i ] [ j ] ] ++ ; }",
        "if ( c [ i ] == false ) q [ a [ i ] ] . push_back ( i ) ;"
      ],
      "err_line": 5,
      "err_msg": "‘class std::vector<int>’ has no member named ‘length’"
    },
    {
      "mod_line": [
        5,
        9,
        17
      ],
      "mod_code": [
        "for ( int j = 0 ; j < edges [ i ] . length ( ) ; j ++ ) { c [ edges [ i ] [ j ] ] ++ ; }",
        "if ( c [ i ] == false ) q [ a [ i ] ] . push_back ( i ) ;",
        "for ( int i = 0 ; i < edges [ f ] . length ( ) ; i ++ )"
      ],
      "err_line": 5,
      "err_msg": "‘class std::vector<int>’ has no member named ‘length’"
    },
    {
      "mod_line": [
        5,
        9,
        17,
        19
      ],
      "mod_code": [
        "for ( int j = 0 ; j < edges [ i ] . length ( ) ; j ++ ) { c [ edges [ i ] [ j ] ] ++ ; }",
        "if ( c [ i ] == false ) q [ a [ i ] ] . push_back ( i ) ;",
        "for ( int i = 0 ; i < edges [ f ] . length ( ) ; i ++ )",
        "if ( c [ next ] != 0 ) q [ a [ next ] ] . push_back ( next ) ;"
      ],
      "err_line": 5,
      "err_msg": "‘class std::vector<int>’ has no member named ‘length’"
    },
    {
      "mod_line": [
        5,
        9,
        17,
        29
      ],
      "mod_code": [
        "for ( int j = 0 ; j < edges [ i ] . length ( ) ; j ++ ) { c [ edges [ i ] [ j ] ] ++ ; }",
        "if ( c [ i ] == false ) q [ a [ i ] ] . push_back ( i ) ;",
        "for ( int i = 0 ; i < edges [ f ] . length ( ) ; i ++ )",
        "for ( int i = 0 ; i < N ; i ++ )"
      ],
      "err_line": 5,
      "err_msg": "‘class std::vector<int>’ has no member named ‘length’"
    },
    {
      "mod_line": [
        5,
        9,
        17,
        30
      ],
      "mod_code": [
        "for ( int j = 0 ; j < edges [ i ] . length ( ) ; j ++ ) { c [ edges [ i ] [ j ] ] ++ ; }",
        "if ( c [ i ] == false ) q [ a [ i ] ] . push_back ( i ) ;",
        "for ( int i = 0 ; i < edges [ f ] . length ( ) ; i ++ )",
        "for ( int i = int ( N ) ; i < ( N ) ; i ++ )"
      ],
      "err_line": 5,
      "err_msg": "‘class std::vector<int>’ has no member named ‘length’"
    },
    {
      "mod_line": [
        5,
        9,
        19
      ],
      "mod_code": [
        "for ( int j = 0 ; j < edges [ i ] . length ( ) ; j ++ ) { c [ edges [ i ] [ j ] ] ++ ; }",
        "if ( c [ i ] == false ) q [ a [ i ] ] . push_back ( i ) ;",
        "if ( c [ next ] != 0 ) q [ a [ next ] ] . push_back ( next ) ;"
      ],
      "err_line": 5,
      "err_msg": "‘class std::vector<int>’ has no member named ‘length’"
    },
    {
      "mod_line": [
        5,
        9,
        19,
        29
      ],
      "mod_code": [
        "for ( int j = 0 ; j < edges [ i ] . length ( ) ; j ++ ) { c [ edges [ i ] [ j ] ] ++ ; }",
        "if ( c [ i ] == false ) q [ a [ i ] ] . push_back ( i ) ;",
        "if ( c [ next ] != 0 ) q [ a [ next ] ] . push_back ( next ) ;",
        "for ( int i = 0 ; i < N ; i ++ )"
      ],
      "err_line": 5,
      "err_msg": "‘class std::vector<int>’ has no member named ‘length’"
    },
    {
      "mod_line": [
        5,
        9,
        19,
        30
      ],
      "mod_code": [
        "for ( int j = 0 ; j < edges [ i ] . length ( ) ; j ++ ) { c [ edges [ i ] [ j ] ] ++ ; }",
        "if ( c [ i ] == false ) q [ a [ i ] ] . push_back ( i ) ;",
        "if ( c [ next ] != 0 ) q [ a [ next ] ] . push_back ( next ) ;",
        "for ( int i = int ( N ) ; i < ( N ) ; i ++ )"
      ],
      "err_line": 5,
      "err_msg": "‘class std::vector<int>’ has no member named ‘length’"
    },
    {
      "mod_line": [
        5,
        9,
        29
      ],
      "mod_code": [
        "for ( int j = 0 ; j < edges [ i ] . length ( ) ; j ++ ) { c [ edges [ i ] [ j ] ] ++ ; }",
        "if ( c [ i ] == false ) q [ a [ i ] ] . push_back ( i ) ;",
        "for ( int i = 0 ; i < N ; i ++ )"
      ],
      "err_line": 5,
      "err_msg": "‘class std::vector<int>’ has no member named ‘length’"
    },
    {
      "mod_line": [
        5,
        9,
        29,
        30
      ],
      "mod_code": [
        "for ( int j = 0 ; j < edges [ i ] . length ( ) ; j ++ ) { c [ edges [ i ] [ j ] ] ++ ; }",
        "if ( c [ i ] == false ) q [ a [ i ] ] . push_back ( i ) ;",
        "for ( int i = 0 ; i < N ; i ++ )",
        "for ( int i = int ( N ) ; i < ( N ) ; i ++ )"
      ],
      "err_line": 5,
      "err_msg": "‘class std::vector<int>’ has no member named ‘length’"
    },
    {
      "mod_line": [
        5,
        9,
        30
      ],
      "mod_code": [
        "for ( int j = 0 ; j < edges [ i ] . length ( ) ; j ++ ) { c [ edges [ i ] [ j ] ] ++ ; }",
        "if ( c [ i ] == false ) q [ a [ i ] ] . push_back ( i ) ;",
        "for ( int i = int ( N ) ; i < ( N ) ; i ++ )"
      ],
      "err_line": 5,
      "err_msg": "‘class std::vector<int>’ has no member named ‘length’"
    },
    {
      "mod_line": [
        5,
        17
      ],
      "mod_code": [
        "for ( int j = 0 ; j < edges [ i ] . length ( ) ; j ++ ) { c [ edges [ i ] [ j ] ] ++ ; }",
        "for ( int i = 0 ; i < edges [ f ] . length ( ) ; i ++ )"
      ],
      "err_line": 5,
      "err_msg": "‘class std::vector<int>’ has no member named ‘length’"
    },
    {
      "mod_line": [
        5,
        17,
        19
      ],
      "mod_code": [
        "for ( int j = 0 ; j < edges [ i ] . length ( ) ; j ++ ) { c [ edges [ i ] [ j ] ] ++ ; }",
        "for ( int i = 0 ; i < edges [ f ] . length ( ) ; i ++ )",
        "if ( c [ next ] != 0 ) q [ a [ next ] ] . push_back ( next ) ;"
      ],
      "err_line": 5,
      "err_msg": "‘class std::vector<int>’ has no member named ‘length’"
    },
    {
      "mod_line": [
        5,
        17,
        19,
        29
      ],
      "mod_code": [
        "for ( int j = 0 ; j < edges [ i ] . length ( ) ; j ++ ) { c [ edges [ i ] [ j ] ] ++ ; }",
        "for ( int i = 0 ; i < edges [ f ] . length ( ) ; i ++ )",
        "if ( c [ next ] != 0 ) q [ a [ next ] ] . push_back ( next ) ;",
        "for ( int i = 0 ; i < N ; i ++ )"
      ],
      "err_line": 5,
      "err_msg": "‘class std::vector<int>’ has no member named ‘length’"
    },
    {
      "mod_line": [
        5,
        17,
        19,
        30
      ],
      "mod_code": [
        "for ( int j = 0 ; j < edges [ i ] . length ( ) ; j ++ ) { c [ edges [ i ] [ j ] ] ++ ; }",
        "for ( int i = 0 ; i < edges [ f ] . length ( ) ; i ++ )",
        "if ( c [ next ] != 0 ) q [ a [ next ] ] . push_back ( next ) ;",
        "for ( int i = int ( N ) ; i < ( N ) ; i ++ )"
      ],
      "err_line": 5,
      "err_msg": "‘class std::vector<int>’ has no member named ‘length’"
    },
    {
      "mod_line": [
        5,
        17,
        29
      ],
      "mod_code": [
        "for ( int j = 0 ; j < edges [ i ] . length ( ) ; j ++ ) { c [ edges [ i ] [ j ] ] ++ ; }",
        "for ( int i = 0 ; i < edges [ f ] . length ( ) ; i ++ )",
        "for ( int i = 0 ; i < N ; i ++ )"
      ],
      "err_line": 5,
      "err_msg": "‘class std::vector<int>’ has no member named ‘length’"
    },
    {
      "mod_line": [
        5,
        17,
        29,
        30
      ],
      "mod_code": [
        "for ( int j = 0 ; j < edges [ i ] . length ( ) ; j ++ ) { c [ edges [ i ] [ j ] ] ++ ; }",
        "for ( int i = 0 ; i < edges [ f ] . length ( ) ; i ++ )",
        "for ( int i = 0 ; i < N ; i ++ )",
        "for ( int i = int ( N ) ; i < ( N ) ; i ++ )"
      ],
      "err_line": 5,
      "err_msg": "‘class std::vector<int>’ has no member named ‘length’"
    },
    {
      "mod_line": [
        5,
        17,
        30
      ],
      "mod_code": [
        "for ( int j = 0 ; j < edges [ i ] . length ( ) ; j ++ ) { c [ edges [ i ] [ j ] ] ++ ; }",
        "for ( int i = 0 ; i < edges [ f ] . length ( ) ; i ++ )",
        "for ( int i = int ( N ) ; i < ( N ) ; i ++ )"
      ],
      "err_line": 5,
      "err_msg": "‘class std::vector<int>’ has no member named ‘length’"
    },
    {
      "mod_line": [
        5,
        19
      ],
      "mod_code": [
        "for ( int j = 0 ; j < edges [ i ] . length ( ) ; j ++ ) { c [ edges [ i ] [ j ] ] ++ ; }",
        "if ( c [ next ] != 0 ) q [ a [ next ] ] . push_back ( next ) ;"
      ],
      "err_line": 5,
      "err_msg": "‘class std::vector<int>’ has no member named ‘length’"
    },
    {
      "mod_line": [
        5,
        19,
        29
      ],
      "mod_code": [
        "for ( int j = 0 ; j < edges [ i ] . length ( ) ; j ++ ) { c [ edges [ i ] [ j ] ] ++ ; }",
        "if ( c [ next ] != 0 ) q [ a [ next ] ] . push_back ( next ) ;",
        "for ( int i = 0 ; i < N ; i ++ )"
      ],
      "err_line": 5,
      "err_msg": "‘class std::vector<int>’ has no member named ‘length’"
    },
    {
      "mod_line": [
        5,
        19,
        29,
        30
      ],
      "mod_code": [
        "for ( int j = 0 ; j < edges [ i ] . length ( ) ; j ++ ) { c [ edges [ i ] [ j ] ] ++ ; }",
        "if ( c [ next ] != 0 ) q [ a [ next ] ] . push_back ( next ) ;",
        "for ( int i = 0 ; i < N ; i ++ )",
        "for ( int i = int ( N ) ; i < ( N ) ; i ++ )"
      ],
      "err_line": 5,
      "err_msg": "‘class std::vector<int>’ has no member named ‘length’"
    },
    {
      "mod_line": [
        5,
        19,
        30
      ],
      "mod_code": [
        "for ( int j = 0 ; j < edges [ i ] . length ( ) ; j ++ ) { c [ edges [ i ] [ j ] ] ++ ; }",
        "if ( c [ next ] != 0 ) q [ a [ next ] ] . push_back ( next ) ;",
        "for ( int i = int ( N ) ; i < ( N ) ; i ++ )"
      ],
      "err_line": 5,
      "err_msg": "‘class std::vector<int>’ has no member named ‘length’"
    },
    {
      "mod_line": [
        5,
        29
      ],
      "mod_code": [
        "for ( int j = 0 ; j < edges [ i ] . length ( ) ; j ++ ) { c [ edges [ i ] [ j ] ] ++ ; }",
        "for ( int i = 0 ; i < N ; i ++ )"
      ],
      "err_line": 5,
      "err_msg": "‘class std::vector<int>’ has no member named ‘length’"
    },
    {
      "mod_line": [
        5,
        29,
        30
      ],
      "mod_code": [
        "for ( int j = 0 ; j < edges [ i ] . length ( ) ; j ++ ) { c [ edges [ i ] [ j ] ] ++ ; }",
        "for ( int i = 0 ; i < N ; i ++ )",
        "for ( int i = int ( N ) ; i < ( N ) ; i ++ )"
      ],
      "err_line": 5,
      "err_msg": "‘class std::vector<int>’ has no member named ‘length’"
    },
    {
      "mod_line": [
        5,
        30
      ],
      "mod_code": [
        "for ( int j = 0 ; j < edges [ i ] . length ( ) ; j ++ ) { c [ edges [ i ] [ j ] ] ++ ; }",
        "for ( int i = int ( N ) ; i < ( N ) ; i ++ )"
      ],
      "err_line": 5,
      "err_msg": "‘class std::vector<int>’ has no member named ‘length’"
    },
    {
      "mod_line": [
        7,
        9
      ],
      "mod_code": [
        "int q [ 3 ] ;",
        "if ( c [ i ] == false ) q [ a [ i ] ] . push_back ( i ) ;"
      ],
      "err_line": 9,
      "err_msg": "request for member ‘push_back’ in ‘q[a[i]]’, which is of non-class type ‘int’"
    },
    {
      "mod_line": [
        7,
        9,
        17
      ],
      "mod_code": [
        "int q [ 3 ] ;",
        "if ( c [ i ] == false ) q [ a [ i ] ] . push_back ( i ) ;",
        "for ( int i = 0 ; i < edges [ f ] . length ( ) ; i ++ )"
      ],
      "err_line": 9,
      "err_msg": "request for member ‘push_back’ in ‘q[a[i]]’, which is of non-class type ‘int’"
    },
    {
      "mod_line": [
        7,
        9,
        17,
        19
      ],
      "mod_code": [
        "int q [ 3 ] ;",
        "if ( c [ i ] == false ) q [ a [ i ] ] . push_back ( i ) ;",
        "for ( int i = 0 ; i < edges [ f ] . length ( ) ; i ++ )",
        "if ( c [ next ] != 0 ) q [ a [ next ] ] . push_back ( next ) ;"
      ],
      "err_line": 9,
      "err_msg": "request for member ‘push_back’ in ‘q[a[i]]’, which is of non-class type ‘int’"
    },
    {
      "mod_line": [
        7,
        9,
        17,
        29
      ],
      "mod_code": [
        "int q [ 3 ] ;",
        "if ( c [ i ] == false ) q [ a [ i ] ] . push_back ( i ) ;",
        "for ( int i = 0 ; i < edges [ f ] . length ( ) ; i ++ )",
        "for ( int i = 0 ; i < N ; i ++ )"
      ],
      "err_line": 9,
      "err_msg": "request for member ‘push_back’ in ‘q[a[i]]’, which is of non-class type ‘int’"
    },
    {
      "mod_line": [
        7,
        9,
        17,
        30
      ],
      "mod_code": [
        "int q [ 3 ] ;",
        "if ( c [ i ] == false ) q [ a [ i ] ] . push_back ( i ) ;",
        "for ( int i = 0 ; i < edges [ f ] . length ( ) ; i ++ )",
        "for ( int i = int ( N ) ; i < ( N ) ; i ++ )"
      ],
      "err_line": 9,
      "err_msg": "request for member ‘push_back’ in ‘q[a[i]]’, which is of non-class type ‘int’"
    },
    {
      "mod_line": [
        7,
        9,
        19
      ],
      "mod_code": [
        "int q [ 3 ] ;",
        "if ( c [ i ] == false ) q [ a [ i ] ] . push_back ( i ) ;",
        "if ( c [ next ] != 0 ) q [ a [ next ] ] . push_back ( next ) ;"
      ],
      "err_line": 9,
      "err_msg": "request for member ‘push_back’ in ‘q[a[i]]’, which is of non-class type ‘int’"
    },
    {
      "mod_line": [
        7,
        9,
        19,
        29
      ],
      "mod_code": [
        "int q [ 3 ] ;",
        "if ( c [ i ] == false ) q [ a [ i ] ] . push_back ( i ) ;",
        "if ( c [ next ] != 0 ) q [ a [ next ] ] . push_back ( next ) ;",
        "for ( int i = 0 ; i < N ; i ++ )"
      ],
      "err_line": 9,
      "err_msg": "request for member ‘push_back’ in ‘q[a[i]]’, which is of non-class type ‘int’"
    },
    {
      "mod_line": [
        7,
        9,
        19,
        30
      ],
      "mod_code": [
        "int q [ 3 ] ;",
        "if ( c [ i ] == false ) q [ a [ i ] ] . push_back ( i ) ;",
        "if ( c [ next ] != 0 ) q [ a [ next ] ] . push_back ( next ) ;",
        "for ( int i = int ( N ) ; i < ( N ) ; i ++ )"
      ],
      "err_line": 9,
      "err_msg": "request for member ‘push_back’ in ‘q[a[i]]’, which is of non-class type ‘int’"
    },
    {
      "mod_line": [
        7,
        9,
        29
      ],
      "mod_code": [
        "int q [ 3 ] ;",
        "if ( c [ i ] == false ) q [ a [ i ] ] . push_back ( i ) ;",
        "for ( int i = 0 ; i < N ; i ++ )"
      ],
      "err_line": 9,
      "err_msg": "request for member ‘push_back’ in ‘q[a[i]]’, which is of non-class type ‘int’"
    },
    {
      "mod_line": [
        7,
        9,
        29,
        30
      ],
      "mod_code": [
        "int q [ 3 ] ;",
        "if ( c [ i ] == false ) q [ a [ i ] ] . push_back ( i ) ;",
        "for ( int i = 0 ; i < N ; i ++ )",
        "for ( int i = int ( N ) ; i < ( N ) ; i ++ )"
      ],
      "err_line": 9,
      "err_msg": "request for member ‘push_back’ in ‘q[a[i]]’, which is of non-class type ‘int’"
    },
    {
      "mod_line": [
        7,
        9,
        30
      ],
      "mod_code": [
        "int q [ 3 ] ;",
        "if ( c [ i ] == false ) q [ a [ i ] ] . push_back ( i ) ;",
        "for ( int i = int ( N ) ; i < ( N ) ; i ++ )"
      ],
      "err_line": 9,
      "err_msg": "request for member ‘push_back’ in ‘q[a[i]]’, which is of non-class type ‘int’"
    },
    {
      "mod_line": [
        7,
        17
      ],
      "mod_code": [
        "int q [ 3 ] ;",
        "for ( int i = 0 ; i < edges [ f ] . length ( ) ; i ++ )"
      ],
      "err_line": 9,
      "err_msg": "request for member ‘push’ in ‘q[a[i]]’, which is of non-class type ‘int’"
    },
    {
      "mod_line": [
        7,
        17,
        19
      ],
      "mod_code": [
        "int q [ 3 ] ;",
        "for ( int i = 0 ; i < edges [ f ] . length ( ) ; i ++ )",
        "if ( c [ next ] != 0 ) q [ a [ next ] ] . push_back ( next ) ;"
      ],
      "err_line": 9,
      "err_msg": "request for member ‘push’ in ‘q[a[i]]’, which is of non-class type ‘int’"
    },
    {
      "mod_line": [
        7,
        17,
        19,
        29
      ],
      "mod_code": [
        "int q [ 3 ] ;",
        "for ( int i = 0 ; i < edges [ f ] . length ( ) ; i ++ )",
        "if ( c [ next ] != 0 ) q [ a [ next ] ] . push_back ( next ) ;",
        "for ( int i = 0 ; i < N ; i ++ )"
      ],
      "err_line": 9,
      "err_msg": "request for member ‘push’ in ‘q[a[i]]’, which is of non-class type ‘int’"
    },
    {
      "mod_line": [
        7,
        17,
        19,
        30
      ],
      "mod_code": [
        "int q [ 3 ] ;",
        "for ( int i = 0 ; i < edges [ f ] . length ( ) ; i ++ )",
        "if ( c [ next ] != 0 ) q [ a [ next ] ] . push_back ( next ) ;",
        "for ( int i = int ( N ) ; i < ( N ) ; i ++ )"
      ],
      "err_line": 9,
      "err_msg": "request for member ‘push’ in ‘q[a[i]]’, which is of non-class type ‘int’"
    },
    {
      "mod_line": [
        7,
        17,
        29
      ],
      "mod_code": [
        "int q [ 3 ] ;",
        "for ( int i = 0 ; i < edges [ f ] . length ( ) ; i ++ )",
        "for ( int i = 0 ; i < N ; i ++ )"
      ],
      "err_line": 9,
      "err_msg": "request for member ‘push’ in ‘q[a[i]]’, which is of non-class type ‘int’"
    },
    {
      "mod_line": [
        7,
        17,
        29,
        30
      ],
      "mod_code": [
        "int q [ 3 ] ;",
        "for ( int i = 0 ; i < edges [ f ] . length ( ) ; i ++ )",
        "for ( int i = 0 ; i < N ; i ++ )",
        "for ( int i = int ( N ) ; i < ( N ) ; i ++ )"
      ],
      "err_line": 9,
      "err_msg": "request for member ‘push’ in ‘q[a[i]]’, which is of non-class type ‘int’"
    },
    {
      "mod_line": [
        7,
        17,
        30
      ],
      "mod_code": [
        "int q [ 3 ] ;",
        "for ( int i = 0 ; i < edges [ f ] . length ( ) ; i ++ )",
        "for ( int i = int ( N ) ; i < ( N ) ; i ++ )"
      ],
      "err_line": 9,
      "err_msg": "request for member ‘push’ in ‘q[a[i]]’, which is of non-class type ‘int’"
    },
    {
      "mod_line": [
        7,
        19
      ],
      "mod_code": [
        "int q [ 3 ] ;",
        "if ( c [ next ] != 0 ) q [ a [ next ] ] . push_back ( next ) ;"
      ],
      "err_line": 9,
      "err_msg": "request for member ‘push’ in ‘q[a[i]]’, which is of non-class type ‘int’"
    },
    {
      "mod_line": [
        7,
        19,
        29
      ],
      "mod_code": [
        "int q [ 3 ] ;",
        "if ( c [ next ] != 0 ) q [ a [ next ] ] . push_back ( next ) ;",
        "for ( int i = 0 ; i < N ; i ++ )"
      ],
      "err_line": 9,
      "err_msg": "request for member ‘push’ in ‘q[a[i]]’, which is of non-class type ‘int’"
    },
    {
      "mod_line": [
        7,
        19,
        29,
        30
      ],
      "mod_code": [
        "int q [ 3 ] ;",
        "if ( c [ next ] != 0 ) q [ a [ next ] ] . push_back ( next ) ;",
        "for ( int i = 0 ; i < N ; i ++ )",
        "for ( int i = int ( N ) ; i < ( N ) ; i ++ )"
      ],
      "err_line": 9,
      "err_msg": "request for member ‘push’ in ‘q[a[i]]’, which is of non-class type ‘int’"
    },
    {
      "mod_line": [
        7,
        19,
        30
      ],
      "mod_code": [
        "int q [ 3 ] ;",
        "if ( c [ next ] != 0 ) q [ a [ next ] ] . push_back ( next ) ;",
        "for ( int i = int ( N ) ; i < ( N ) ; i ++ )"
      ],
      "err_line": 9,
      "err_msg": "request for member ‘push’ in ‘q[a[i]]’, which is of non-class type ‘int’"
    },
    {
      "mod_line": [
        7,
        29
      ],
      "mod_code": [
        "int q [ 3 ] ;",
        "for ( int i = 0 ; i < N ; i ++ )"
      ],
      "err_line": 9,
      "err_msg": "request for member ‘push’ in ‘q[a[i]]’, which is of non-class type ‘int’"
    },
    {
      "mod_line": [
        7,
        29,
        30
      ],
      "mod_code": [
        "int q [ 3 ] ;",
        "for ( int i = 0 ; i < N ; i ++ )",
        "for ( int i = int ( N ) ; i < ( N ) ; i ++ )"
      ],
      "err_line": 9,
      "err_msg": "request for member ‘push’ in ‘q[a[i]]’, which is of non-class type ‘int’"
    },
    {
      "mod_line": [
        7,
        30
      ],
      "mod_code": [
        "int q [ 3 ] ;",
        "for ( int i = int ( N ) ; i < ( N ) ; i ++ )"
      ],
      "err_line": 9,
      "err_msg": "request for member ‘push’ in ‘q[a[i]]’, which is of non-class type ‘int’"
    },
    {
      "mod_line": [
        9,
        17
      ],
      "mod_code": [
        "if ( c [ i ] == false ) q [ a [ i ] ] . push_back ( i ) ;",
        "for ( int i = 0 ; i < edges [ f ] . length ( ) ; i ++ )"
      ],
      "err_line": 9,
      "err_msg": "‘class std::queue<int>’ has no member named ‘push_back’"
    },
    {
      "mod_line": [
        9,
        17,
        19
      ],
      "mod_code": [
        "if ( c [ i ] == false ) q [ a [ i ] ] . push_back ( i ) ;",
        "for ( int i = 0 ; i < edges [ f ] . length ( ) ; i ++ )",
        "if ( c [ next ] != 0 ) q [ a [ next ] ] . push_back ( next ) ;"
      ],
      "err_line": 9,
      "err_msg": "‘class std::queue<int>’ has no member named ‘push_back’"
    },
    {
      "mod_line": [
        9,
        17,
        19,
        29
      ],
      "mod_code": [
        "if ( c [ i ] == false ) q [ a [ i ] ] . push_back ( i ) ;",
        "for ( int i = 0 ; i < edges [ f ] . length ( ) ; i ++ )",
        "if ( c [ next ] != 0 ) q [ a [ next ] ] . push_back ( next ) ;",
        "for ( int i = 0 ; i < N ; i ++ )"
      ],
      "err_line": 9,
      "err_msg": "‘class std::queue<int>’ has no member named ‘push_back’"
    },
    {
      "mod_line": [
        9,
        17,
        19,
        30
      ],
      "mod_code": [
        "if ( c [ i ] == false ) q [ a [ i ] ] . push_back ( i ) ;",
        "for ( int i = 0 ; i < edges [ f ] . length ( ) ; i ++ )",
        "if ( c [ next ] != 0 ) q [ a [ next ] ] . push_back ( next ) ;",
        "for ( int i = int ( N ) ; i < ( N ) ; i ++ )"
      ],
      "err_line": 9,
      "err_msg": "‘class std::queue<int>’ has no member named ‘push_back’"
    },
    {
      "mod_line": [
        9,
        17,
        29
      ],
      "mod_code": [
        "if ( c [ i ] == false ) q [ a [ i ] ] . push_back ( i ) ;",
        "for ( int i = 0 ; i < edges [ f ] . length ( ) ; i ++ )",
        "for ( int i = 0 ; i < N ; i ++ )"
      ],
      "err_line": 9,
      "err_msg": "‘class std::queue<int>’ has no member named ‘push_back’"
    },
    {
      "mod_line": [
        9,
        17,
        29,
        30
      ],
      "mod_code": [
        "if ( c [ i ] == false ) q [ a [ i ] ] . push_back ( i ) ;",
        "for ( int i = 0 ; i < edges [ f ] . length ( ) ; i ++ )",
        "for ( int i = 0 ; i < N ; i ++ )",
        "for ( int i = int ( N ) ; i < ( N ) ; i ++ )"
      ],
      "err_line": 9,
      "err_msg": "‘class std::queue<int>’ has no member named ‘push_back’"
    },
    {
      "mod_line": [
        9,
        17,
        30
      ],
      "mod_code": [
        "if ( c [ i ] == false ) q [ a [ i ] ] . push_back ( i ) ;",
        "for ( int i = 0 ; i < edges [ f ] . length ( ) ; i ++ )",
        "for ( int i = int ( N ) ; i < ( N ) ; i ++ )"
      ],
      "err_line": 9,
      "err_msg": "‘class std::queue<int>’ has no member named ‘push_back’"
    },
    {
      "mod_line": [
        9,
        19
      ],
      "mod_code": [
        "if ( c [ i ] == false ) q [ a [ i ] ] . push_back ( i ) ;",
        "if ( c [ next ] != 0 ) q [ a [ next ] ] . push_back ( next ) ;"
      ],
      "err_line": 9,
      "err_msg": "‘class std::queue<int>’ has no member named ‘push_back’"
    },
    {
      "mod_line": [
        9,
        19,
        29
      ],
      "mod_code": [
        "if ( c [ i ] == false ) q [ a [ i ] ] . push_back ( i ) ;",
        "if ( c [ next ] != 0 ) q [ a [ next ] ] . push_back ( next ) ;",
        "for ( int i = 0 ; i < N ; i ++ )"
      ],
      "err_line": 9,
      "err_msg": "‘class std::queue<int>’ has no member named ‘push_back’"
    },
    {
      "mod_line": [
        9,
        19,
        29,
        30
      ],
      "mod_code": [
        "if ( c [ i ] == false ) q [ a [ i ] ] . push_back ( i ) ;",
        "if ( c [ next ] != 0 ) q [ a [ next ] ] . push_back ( next ) ;",
        "for ( int i = 0 ; i < N ; i ++ )",
        "for ( int i = int ( N ) ; i < ( N ) ; i ++ )"
      ],
      "err_line": 9,
      "err_msg": "‘class std::queue<int>’ has no member named ‘push_back’"
    },
    {
      "mod_line": [
        9,
        19,
        30
      ],
      "mod_code": [
        "if ( c [ i ] == false ) q [ a [ i ] ] . push_back ( i ) ;",
        "if ( c [ next ] != 0 ) q [ a [ next ] ] . push_back ( next ) ;",
        "for ( int i = int ( N ) ; i < ( N ) ; i ++ )"
      ],
      "err_line": 9,
      "err_msg": "‘class std::queue<int>’ has no member named ‘push_back’"
    },
    {
      "mod_line": [
        9,
        29
      ],
      "mod_code": [
        "if ( c [ i ] == false ) q [ a [ i ] ] . push_back ( i ) ;",
        "for ( int i = 0 ; i < N ; i ++ )"
      ],
      "err_line": 9,
      "err_msg": "‘class std::queue<int>’ has no member named ‘push_back’"
    },
    {
      "mod_line": [
        9,
        29,
        30
      ],
      "mod_code": [
        "if ( c [ i ] == false ) q [ a [ i ] ] . push_back ( i ) ;",
        "for ( int i = 0 ; i < N ; i ++ )",
        "for ( int i = int ( N ) ; i < ( N ) ; i ++ )"
      ],
      "err_line": 9,
      "err_msg": "‘class std::queue<int>’ has no member named ‘push_back’"
    },
    {
      "mod_line": [
        9,
        30
      ],
      "mod_code": [
        "if ( c [ i ] == false ) q [ a [ i ] ] . push_back ( i ) ;",
        "for ( int i = int ( N ) ; i < ( N ) ; i ++ )"
      ],
      "err_line": 9,
      "err_msg": "‘class std::queue<int>’ has no member named ‘push_back’"
    },
    {
      "mod_line": [
        17,
        19
      ],
      "mod_code": [
        "for ( int i = 0 ; i < edges [ f ] . length ( ) ; i ++ )",
        "if ( c [ next ] != 0 ) q [ a [ next ] ] . push_back ( next ) ;"
      ],
      "err_line": 17,
      "err_msg": "‘class std::vector<int>’ has no member named ‘length’"
    },
    {
      "mod_line": [
        17,
        19,
        29
      ],
      "mod_code": [
        "for ( int i = 0 ; i < edges [ f ] . length ( ) ; i ++ )",
        "if ( c [ next ] != 0 ) q [ a [ next ] ] . push_back ( next ) ;",
        "for ( int i = 0 ; i < N ; i ++ )"
      ],
      "err_line": 17,
      "err_msg": "‘class std::vector<int>’ has no member named ‘length’"
    },
    {
      "mod_line": [
        17,
        19,
        29,
        30
      ],
      "mod_code": [
        "for ( int i = 0 ; i < edges [ f ] . length ( ) ; i ++ )",
        "if ( c [ next ] != 0 ) q [ a [ next ] ] . push_back ( next ) ;",
        "for ( int i = 0 ; i < N ; i ++ )",
        "for ( int i = int ( N ) ; i < ( N ) ; i ++ )"
      ],
      "err_line": 17,
      "err_msg": "‘class std::vector<int>’ has no member named ‘length’"
    },
    {
      "mod_line": [
        17,
        19,
        30
      ],
      "mod_code": [
        "for ( int i = 0 ; i < edges [ f ] . length ( ) ; i ++ )",
        "if ( c [ next ] != 0 ) q [ a [ next ] ] . push_back ( next ) ;",
        "for ( int i = int ( N ) ; i < ( N ) ; i ++ )"
      ],
      "err_line": 17,
      "err_msg": "‘class std::vector<int>’ has no member named ‘length’"
    },
    {
      "mod_line": [
        17,
        29
      ],
      "mod_code": [
        "for ( int i = 0 ; i < edges [ f ] . length ( ) ; i ++ )",
        "for ( int i = 0 ; i < N ; i ++ )"
      ],
      "err_line": 17,
      "err_msg": "‘class std::vector<int>’ has no member named ‘length’"
    },
    {
      "mod_line": [
        17,
        29,
        30
      ],
      "mod_code": [
        "for ( int i = 0 ; i < edges [ f ] . length ( ) ; i ++ )",
        "for ( int i = 0 ; i < N ; i ++ )",
        "for ( int i = int ( N ) ; i < ( N ) ; i ++ )"
      ],
      "err_line": 17,
      "err_msg": "‘class std::vector<int>’ has no member named ‘length’"
    },
    {
      "mod_line": [
        17,
        30
      ],
      "mod_code": [
        "for ( int i = 0 ; i < edges [ f ] . length ( ) ; i ++ )",
        "for ( int i = int ( N ) ; i < ( N ) ; i ++ )"
      ],
      "err_line": 17,
      "err_msg": "‘class std::vector<int>’ has no member named ‘length’"
    },
    {
      "mod_line": [
        19,
        29
      ],
      "mod_code": [
        "if ( c [ next ] != 0 ) q [ a [ next ] ] . push_back ( next ) ;",
        "for ( int i = 0 ; i < N ; i ++ )"
      ],
      "err_line": 19,
      "err_msg": "‘class std::queue<int>’ has no member named ‘push_back’"
    },
    {
      "mod_line": [
        19,
        29,
        30
      ],
      "mod_code": [
        "if ( c [ next ] != 0 ) q [ a [ next ] ] . push_back ( next ) ;",
        "for ( int i = 0 ; i < N ; i ++ )",
        "for ( int i = int ( N ) ; i < ( N ) ; i ++ )"
      ],
      "err_line": 19,
      "err_msg": "‘class std::queue<int>’ has no member named ‘push_back’"
    },
    {
      "mod_line": [
        19,
        30
      ],
      "mod_code": [
        "if ( c [ next ] != 0 ) q [ a [ next ] ] . push_back ( next ) ;",
        "for ( int i = int ( N ) ; i < ( N ) ; i ++ )"
      ],
      "err_line": 19,
      "err_msg": "‘class std::queue<int>’ has no member named ‘push_back’"
    }
  ]
}