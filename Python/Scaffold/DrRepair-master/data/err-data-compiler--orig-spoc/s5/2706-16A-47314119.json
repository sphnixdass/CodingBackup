{
  "meta": {
    "index": 2706,
    "hitid": "3O0M2G5VC6W46N5SA1L7W6E84HO94Z",
    "workerid": "AIWEXPJAU66D9",
    "probid": "16A",
    "subid": "47314119"
  },
  "lines": [
    {
      "line": 0,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 1,
      "text": "declare integers called n , m , i and j",
      "code": "int n , m , i , j ;",
      "indent": 1
    },
    {
      "line": 2,
      "text": "read n and m",
      "code": "cin >> n >> m ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "a = array of strings of size n",
      "code": "string a [ n ] ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "read n elements into a",
      "code": "for ( i = 0 ; i < n ; i ++ ) { cin >> a [ i ] ; }",
      "indent": 1
    },
    {
      "line": 5,
      "text": "for i = 0 to n exclusive",
      "code": "for ( i = 0 ; i < n ; i ++ )",
      "indent": 1
    },
    {
      "line": 6,
      "text": "for j = 0 to m - 1 exclusive",
      "code": "for ( j = 0 ; j < m - 1 ; j ++ )",
      "indent": 2
    },
    {
      "line": 7,
      "text": "if a [ i ] [ j ] ! = a [ i ] [ j + 1 ]",
      "code": "if ( a [ i ] [ j ] != a [ i ] [ j + 1 ] )",
      "indent": 3
    },
    {
      "line": 8,
      "text": "print \" NO \" and a new line",
      "code": "cout << \" NO \" << endl ;",
      "indent": 4
    },
    {
      "line": 9,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 4
    },
    {
      "line": 10,
      "text": "DUMMY",
      "code": "}",
      "indent": 3
    },
    {
      "line": 11,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 12,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 13,
      "text": "for i = 0 to n - 1 exclusive",
      "code": "for ( i = 0 ; i < n - 1 ; i ++ )",
      "indent": 1
    },
    {
      "line": 14,
      "text": "if a [ i ] [ 0 ] is equal to a [ i + 1 ] [ 0 ]",
      "code": "if ( a [ i ] [ 0 ] == a [ i + 1 ] [ 0 ] )",
      "indent": 2
    },
    {
      "line": 15,
      "text": "print \" NO \" and a new line",
      "code": "cout << \" NO \" << endl ;",
      "indent": 3
    },
    {
      "line": 16,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 3
    },
    {
      "line": 17,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 18,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 19,
      "text": "print \" YES \" and a new line",
      "code": "cout << \" YES \" << endl ;",
      "indent": 1
    },
    {
      "line": 20,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 21,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        3
      ],
      "mod_code": [
        "a [ n ] ;"
      ],
      "err_line": 3,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        7
      ],
      "mod_code": [
        "if ( a [ i ] [ j ] [ j + 1 ] != a [ i ] )"
      ],
      "err_line": 7,
      "err_msg": "invalid types ‘char[int]’ for array subscript"
    },
    {
      "mod_line": [
        14
      ],
      "mod_code": [
        "if ( a [ i ] [ 0 ] == a [ i + 1 ] [ ' 0 ' )"
      ],
      "err_line": 14,
      "err_msg": "expected ‘]’ before ‘)’ token"
    },
    {
      "mod_line": [
        14,
        2
      ],
      "mod_code": [
        "if ( a [ i ] [ 0 ] == a [ i + 1 ] [ ' 0 ' )",
        "cin >> m >> m ;"
      ],
      "err_line": 14,
      "err_msg": "expected ‘]’ before ‘)’ token"
    },
    {
      "mod_line": [
        14,
        2,
        3
      ],
      "mod_code": [
        "if ( a [ i ] [ 0 ] == a [ i + 1 ] [ ' 0 ' )",
        "cin >> m >> m ;",
        "a [ n ] ;"
      ],
      "err_line": 3,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        2,
        3,
        19
      ],
      "mod_code": [
        "if ( a [ i ] [ 0 ] == a [ i + 1 ] [ ' 0 ' )",
        "cin >> m >> m ;",
        "a [ n ] ;",
        "cout << \" YES\\n \" << endl ;"
      ],
      "err_line": 3,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        2,
        3,
        7
      ],
      "mod_code": [
        "if ( a [ i ] [ 0 ] == a [ i + 1 ] [ ' 0 ' )",
        "cin >> m >> m ;",
        "a [ n ] ;",
        "if ( a [ i ] [ j ] [ j + 1 ] != a [ i ] )"
      ],
      "err_line": 3,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        2,
        19
      ],
      "mod_code": [
        "if ( a [ i ] [ 0 ] == a [ i + 1 ] [ ' 0 ' )",
        "cin >> m >> m ;",
        "cout << \" YES\\n \" << endl ;"
      ],
      "err_line": 14,
      "err_msg": "expected ‘]’ before ‘)’ token"
    },
    {
      "mod_line": [
        14,
        2,
        19,
        7
      ],
      "mod_code": [
        "if ( a [ i ] [ 0 ] == a [ i + 1 ] [ ' 0 ' )",
        "cin >> m >> m ;",
        "cout << \" YES\\n \" << endl ;",
        "if ( a [ i ] [ j ] [ j + 1 ] != a [ i ] )"
      ],
      "err_line": 7,
      "err_msg": "invalid types ‘char[int]’ for array subscript"
    },
    {
      "mod_line": [
        14,
        2,
        7
      ],
      "mod_code": [
        "if ( a [ i ] [ 0 ] == a [ i + 1 ] [ ' 0 ' )",
        "cin >> m >> m ;",
        "if ( a [ i ] [ j ] [ j + 1 ] != a [ i ] )"
      ],
      "err_line": 7,
      "err_msg": "invalid types ‘char[int]’ for array subscript"
    },
    {
      "mod_line": [
        14,
        3
      ],
      "mod_code": [
        "if ( a [ i ] [ 0 ] == a [ i + 1 ] [ ' 0 ' )",
        "a [ n ] ;"
      ],
      "err_line": 3,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        3,
        19
      ],
      "mod_code": [
        "if ( a [ i ] [ 0 ] == a [ i + 1 ] [ ' 0 ' )",
        "a [ n ] ;",
        "cout << \" YES\\n \" << endl ;"
      ],
      "err_line": 3,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        3,
        19,
        7
      ],
      "mod_code": [
        "if ( a [ i ] [ 0 ] == a [ i + 1 ] [ ' 0 ' )",
        "a [ n ] ;",
        "cout << \" YES\\n \" << endl ;",
        "if ( a [ i ] [ j ] [ j + 1 ] != a [ i ] )"
      ],
      "err_line": 3,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        3,
        7
      ],
      "mod_code": [
        "if ( a [ i ] [ 0 ] == a [ i + 1 ] [ ' 0 ' )",
        "a [ n ] ;",
        "if ( a [ i ] [ j ] [ j + 1 ] != a [ i ] )"
      ],
      "err_line": 3,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        19
      ],
      "mod_code": [
        "if ( a [ i ] [ 0 ] == a [ i + 1 ] [ ' 0 ' )",
        "cout << \" YES\\n \" << endl ;"
      ],
      "err_line": 14,
      "err_msg": "expected ‘]’ before ‘)’ token"
    },
    {
      "mod_line": [
        14,
        19,
        7
      ],
      "mod_code": [
        "if ( a [ i ] [ 0 ] == a [ i + 1 ] [ ' 0 ' )",
        "cout << \" YES\\n \" << endl ;",
        "if ( a [ i ] [ j ] [ j + 1 ] != a [ i ] )"
      ],
      "err_line": 7,
      "err_msg": "invalid types ‘char[int]’ for array subscript"
    },
    {
      "mod_line": [
        14,
        7
      ],
      "mod_code": [
        "if ( a [ i ] [ 0 ] == a [ i + 1 ] [ ' 0 ' )",
        "if ( a [ i ] [ j ] [ j + 1 ] != a [ i ] )"
      ],
      "err_line": 7,
      "err_msg": "invalid types ‘char[int]’ for array subscript"
    },
    {
      "mod_line": [
        2,
        3
      ],
      "mod_code": [
        "cin >> m >> m ;",
        "a [ n ] ;"
      ],
      "err_line": 3,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        2,
        3,
        19
      ],
      "mod_code": [
        "cin >> m >> m ;",
        "a [ n ] ;",
        "cout << \" YES\\n \" << endl ;"
      ],
      "err_line": 3,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        2,
        3,
        19,
        7
      ],
      "mod_code": [
        "cin >> m >> m ;",
        "a [ n ] ;",
        "cout << \" YES\\n \" << endl ;",
        "if ( a [ i ] [ j ] [ j + 1 ] != a [ i ] )"
      ],
      "err_line": 3,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        2,
        3,
        7
      ],
      "mod_code": [
        "cin >> m >> m ;",
        "a [ n ] ;",
        "if ( a [ i ] [ j ] [ j + 1 ] != a [ i ] )"
      ],
      "err_line": 3,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        2,
        19,
        7
      ],
      "mod_code": [
        "cin >> m >> m ;",
        "cout << \" YES\\n \" << endl ;",
        "if ( a [ i ] [ j ] [ j + 1 ] != a [ i ] )"
      ],
      "err_line": 7,
      "err_msg": "invalid types ‘char[int]’ for array subscript"
    },
    {
      "mod_line": [
        2,
        7
      ],
      "mod_code": [
        "cin >> m >> m ;",
        "if ( a [ i ] [ j ] [ j + 1 ] != a [ i ] )"
      ],
      "err_line": 7,
      "err_msg": "invalid types ‘char[int]’ for array subscript"
    },
    {
      "mod_line": [
        3,
        19
      ],
      "mod_code": [
        "a [ n ] ;",
        "cout << \" YES\\n \" << endl ;"
      ],
      "err_line": 3,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        19,
        7
      ],
      "mod_code": [
        "a [ n ] ;",
        "cout << \" YES\\n \" << endl ;",
        "if ( a [ i ] [ j ] [ j + 1 ] != a [ i ] )"
      ],
      "err_line": 3,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        7
      ],
      "mod_code": [
        "a [ n ] ;",
        "if ( a [ i ] [ j ] [ j + 1 ] != a [ i ] )"
      ],
      "err_line": 3,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        19,
        7
      ],
      "mod_code": [
        "cout << \" YES\\n \" << endl ;",
        "if ( a [ i ] [ j ] [ j + 1 ] != a [ i ] )"
      ],
      "err_line": 7,
      "err_msg": "invalid types ‘char[int]’ for array subscript"
    }
  ]
}