{
  "meta": {
    "index": 611,
    "hitid": "3R16PJFTS3LONJOJEYCWMFSOGDA4K3",
    "workerid": "A1APYLD4DUK33J",
    "probid": "999A",
    "subid": "48899613"
  },
  "lines": [
    {
      "line": 0,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 1,
      "text": "create integers n , k",
      "code": "int n , k ;",
      "indent": 1
    },
    {
      "line": 2,
      "text": "while read n read k is true",
      "code": "while ( cin >> n >> k )",
      "indent": 1
    },
    {
      "line": 3,
      "text": "create integer vector A initialized with n",
      "code": "vector < int > A ( n ) ;",
      "indent": 2
    },
    {
      "line": 4,
      "text": "for i = 0 to n exclusive , read A [ i ]",
      "code": "for ( __typeof ( 0 ) i = ( 0 ) ; i < ( n ) ; i ++ ) cin >> A [ i ] ;",
      "indent": 2
    },
    {
      "line": 5,
      "text": "create integer ans with ans = 0",
      "code": "int ans = 0 ;",
      "indent": 2
    },
    {
      "line": 6,
      "text": "create integer i with i = 0",
      "code": "int i = 0 ;",
      "indent": 2
    },
    {
      "line": 7,
      "text": "for i is less than n , incrementing i",
      "code": "for ( ; i < n ; i ++ )",
      "indent": 2
    },
    {
      "line": 8,
      "text": "if A [ i ] is less than or equal to k",
      "code": "if ( A [ i ] <= k )",
      "indent": 3
    },
    {
      "line": 9,
      "text": "increment ans",
      "code": "ans ++ ;",
      "indent": 4
    },
    {
      "line": 10,
      "text": "else",
      "code": "else",
      "indent": 3
    },
    {
      "line": 11,
      "text": "break loop",
      "code": "break ;",
      "indent": 4
    },
    {
      "line": 12,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 13,
      "text": "for j = n - 1 to j is greater than i , decrementing j",
      "code": "for ( int j = n - 1 ; j > i ; j -- )",
      "indent": 2
    },
    {
      "line": 14,
      "text": "if A [ j ] is less than or equal to k",
      "code": "if ( A [ j ] <= k )",
      "indent": 3
    },
    {
      "line": 15,
      "text": "increment ans",
      "code": "ans ++ ;",
      "indent": 4
    },
    {
      "line": 16,
      "text": "else",
      "code": "else",
      "indent": 3
    },
    {
      "line": 17,
      "text": "break loop",
      "code": "break ;",
      "indent": 4
    },
    {
      "line": 18,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 19,
      "text": "print ans print ' \\ n '",
      "code": "cout << ans << ' \\n ' ;",
      "indent": 2
    },
    {
      "line": 20,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 21,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 22,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        13
      ],
      "mod_code": [
        "for ( j = n - 1 ; j > i ; j -- )"
      ],
      "err_line": 13,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        2
      ],
      "mod_code": [
        "while ( { cin >> n >> k )"
      ],
      "err_line": 2,
      "err_msg": "expected primary-expression before ‘{’ token"
    },
    {
      "mod_line": [
        3
      ],
      "mod_code": [
        "vector < int > :: A ( n ) ;"
      ],
      "err_line": 3,
      "err_msg": "‘A’ is not a member of ‘std::vector<int>’"
    },
    {
      "mod_line": [
        11
      ],
      "mod_code": [
        "break break ;"
      ],
      "err_line": 11,
      "err_msg": "expected ‘;’ before ‘break’"
    },
    {
      "mod_line": [
        17
      ],
      "mod_code": [
        "break break ;"
      ],
      "err_line": 17,
      "err_msg": "expected ‘;’ before ‘break’"
    },
    {
      "mod_line": [
        13,
        19
      ],
      "mod_code": [
        "for ( j = n - 1 ; j > i ; j -- )",
        "cout << ans << ' ' ;"
      ],
      "err_line": 13,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        19,
        2
      ],
      "mod_code": [
        "for ( j = n - 1 ; j > i ; j -- )",
        "cout << ans << ' ' ;",
        "while ( { cin >> n >> k )"
      ],
      "err_line": 2,
      "err_msg": "expected primary-expression before ‘{’ token"
    },
    {
      "mod_line": [
        13,
        19,
        2,
        14
      ],
      "mod_code": [
        "for ( j = n - 1 ; j > i ; j -- )",
        "cout << ans << ' ' ;",
        "while ( { cin >> n >> k )",
        "if ( A [ j ] >= k )"
      ],
      "err_line": 2,
      "err_msg": "expected primary-expression before ‘{’ token"
    },
    {
      "mod_line": [
        13,
        19,
        2,
        8
      ],
      "mod_code": [
        "for ( j = n - 1 ; j > i ; j -- )",
        "cout << ans << ' ' ;",
        "while ( { cin >> n >> k )",
        "if ( A [ i ] >= k )"
      ],
      "err_line": 2,
      "err_msg": "expected primary-expression before ‘{’ token"
    },
    {
      "mod_line": [
        13,
        19,
        2,
        11
      ],
      "mod_code": [
        "for ( j = n - 1 ; j > i ; j -- )",
        "cout << ans << ' ' ;",
        "while ( { cin >> n >> k )",
        "break break ;"
      ],
      "err_line": 2,
      "err_msg": "expected primary-expression before ‘{’ token"
    },
    {
      "mod_line": [
        13,
        19,
        14
      ],
      "mod_code": [
        "for ( j = n - 1 ; j > i ; j -- )",
        "cout << ans << ' ' ;",
        "if ( A [ j ] >= k )"
      ],
      "err_line": 13,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        19,
        14,
        8
      ],
      "mod_code": [
        "for ( j = n - 1 ; j > i ; j -- )",
        "cout << ans << ' ' ;",
        "if ( A [ j ] >= k )",
        "if ( A [ i ] >= k )"
      ],
      "err_line": 13,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        19,
        14,
        11
      ],
      "mod_code": [
        "for ( j = n - 1 ; j > i ; j -- )",
        "cout << ans << ' ' ;",
        "if ( A [ j ] >= k )",
        "break break ;"
      ],
      "err_line": 11,
      "err_msg": "expected ‘;’ before ‘break’"
    },
    {
      "mod_line": [
        13,
        19,
        8
      ],
      "mod_code": [
        "for ( j = n - 1 ; j > i ; j -- )",
        "cout << ans << ' ' ;",
        "if ( A [ i ] >= k )"
      ],
      "err_line": 13,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        19,
        8,
        11
      ],
      "mod_code": [
        "for ( j = n - 1 ; j > i ; j -- )",
        "cout << ans << ' ' ;",
        "if ( A [ i ] >= k )",
        "break break ;"
      ],
      "err_line": 11,
      "err_msg": "expected ‘;’ before ‘break’"
    },
    {
      "mod_line": [
        13,
        19,
        11
      ],
      "mod_code": [
        "for ( j = n - 1 ; j > i ; j -- )",
        "cout << ans << ' ' ;",
        "break break ;"
      ],
      "err_line": 11,
      "err_msg": "expected ‘;’ before ‘break’"
    },
    {
      "mod_line": [
        13,
        2
      ],
      "mod_code": [
        "for ( j = n - 1 ; j > i ; j -- )",
        "while ( { cin >> n >> k )"
      ],
      "err_line": 2,
      "err_msg": "expected primary-expression before ‘{’ token"
    },
    {
      "mod_line": [
        13,
        2,
        14
      ],
      "mod_code": [
        "for ( j = n - 1 ; j > i ; j -- )",
        "while ( { cin >> n >> k )",
        "if ( A [ j ] >= k )"
      ],
      "err_line": 2,
      "err_msg": "expected primary-expression before ‘{’ token"
    },
    {
      "mod_line": [
        13,
        2,
        14,
        8
      ],
      "mod_code": [
        "for ( j = n - 1 ; j > i ; j -- )",
        "while ( { cin >> n >> k )",
        "if ( A [ j ] >= k )",
        "if ( A [ i ] >= k )"
      ],
      "err_line": 2,
      "err_msg": "expected primary-expression before ‘{’ token"
    },
    {
      "mod_line": [
        13,
        2,
        14,
        11
      ],
      "mod_code": [
        "for ( j = n - 1 ; j > i ; j -- )",
        "while ( { cin >> n >> k )",
        "if ( A [ j ] >= k )",
        "break break ;"
      ],
      "err_line": 2,
      "err_msg": "expected primary-expression before ‘{’ token"
    },
    {
      "mod_line": [
        13,
        2,
        8
      ],
      "mod_code": [
        "for ( j = n - 1 ; j > i ; j -- )",
        "while ( { cin >> n >> k )",
        "if ( A [ i ] >= k )"
      ],
      "err_line": 2,
      "err_msg": "expected primary-expression before ‘{’ token"
    },
    {
      "mod_line": [
        13,
        2,
        8,
        11
      ],
      "mod_code": [
        "for ( j = n - 1 ; j > i ; j -- )",
        "while ( { cin >> n >> k )",
        "if ( A [ i ] >= k )",
        "break break ;"
      ],
      "err_line": 2,
      "err_msg": "expected primary-expression before ‘{’ token"
    },
    {
      "mod_line": [
        13,
        2,
        11
      ],
      "mod_code": [
        "for ( j = n - 1 ; j > i ; j -- )",
        "while ( { cin >> n >> k )",
        "break break ;"
      ],
      "err_line": 2,
      "err_msg": "expected primary-expression before ‘{’ token"
    },
    {
      "mod_line": [
        13,
        14
      ],
      "mod_code": [
        "for ( j = n - 1 ; j > i ; j -- )",
        "if ( A [ j ] >= k )"
      ],
      "err_line": 13,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        14,
        8
      ],
      "mod_code": [
        "for ( j = n - 1 ; j > i ; j -- )",
        "if ( A [ j ] >= k )",
        "if ( A [ i ] >= k )"
      ],
      "err_line": 13,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        14,
        8,
        11
      ],
      "mod_code": [
        "for ( j = n - 1 ; j > i ; j -- )",
        "if ( A [ j ] >= k )",
        "if ( A [ i ] >= k )",
        "break break ;"
      ],
      "err_line": 11,
      "err_msg": "expected ‘;’ before ‘break’"
    },
    {
      "mod_line": [
        13,
        14,
        11
      ],
      "mod_code": [
        "for ( j = n - 1 ; j > i ; j -- )",
        "if ( A [ j ] >= k )",
        "break break ;"
      ],
      "err_line": 11,
      "err_msg": "expected ‘;’ before ‘break’"
    },
    {
      "mod_line": [
        13,
        8
      ],
      "mod_code": [
        "for ( j = n - 1 ; j > i ; j -- )",
        "if ( A [ i ] >= k )"
      ],
      "err_line": 13,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        8,
        11
      ],
      "mod_code": [
        "for ( j = n - 1 ; j > i ; j -- )",
        "if ( A [ i ] >= k )",
        "break break ;"
      ],
      "err_line": 11,
      "err_msg": "expected ‘;’ before ‘break’"
    },
    {
      "mod_line": [
        13,
        11
      ],
      "mod_code": [
        "for ( j = n - 1 ; j > i ; j -- )",
        "break break ;"
      ],
      "err_line": 11,
      "err_msg": "expected ‘;’ before ‘break’"
    },
    {
      "mod_line": [
        19,
        2
      ],
      "mod_code": [
        "cout << ans << ' ' ;",
        "while ( { cin >> n >> k )"
      ],
      "err_line": 2,
      "err_msg": "expected primary-expression before ‘{’ token"
    },
    {
      "mod_line": [
        19,
        2,
        14
      ],
      "mod_code": [
        "cout << ans << ' ' ;",
        "while ( { cin >> n >> k )",
        "if ( A [ j ] >= k )"
      ],
      "err_line": 2,
      "err_msg": "expected primary-expression before ‘{’ token"
    },
    {
      "mod_line": [
        19,
        2,
        14,
        8
      ],
      "mod_code": [
        "cout << ans << ' ' ;",
        "while ( { cin >> n >> k )",
        "if ( A [ j ] >= k )",
        "if ( A [ i ] >= k )"
      ],
      "err_line": 2,
      "err_msg": "expected primary-expression before ‘{’ token"
    },
    {
      "mod_line": [
        19,
        2,
        14,
        11
      ],
      "mod_code": [
        "cout << ans << ' ' ;",
        "while ( { cin >> n >> k )",
        "if ( A [ j ] >= k )",
        "break break ;"
      ],
      "err_line": 2,
      "err_msg": "expected primary-expression before ‘{’ token"
    },
    {
      "mod_line": [
        19,
        2,
        8
      ],
      "mod_code": [
        "cout << ans << ' ' ;",
        "while ( { cin >> n >> k )",
        "if ( A [ i ] >= k )"
      ],
      "err_line": 2,
      "err_msg": "expected primary-expression before ‘{’ token"
    },
    {
      "mod_line": [
        19,
        2,
        8,
        11
      ],
      "mod_code": [
        "cout << ans << ' ' ;",
        "while ( { cin >> n >> k )",
        "if ( A [ i ] >= k )",
        "break break ;"
      ],
      "err_line": 2,
      "err_msg": "expected primary-expression before ‘{’ token"
    },
    {
      "mod_line": [
        19,
        2,
        11
      ],
      "mod_code": [
        "cout << ans << ' ' ;",
        "while ( { cin >> n >> k )",
        "break break ;"
      ],
      "err_line": 2,
      "err_msg": "expected primary-expression before ‘{’ token"
    },
    {
      "mod_line": [
        19,
        14,
        8,
        11
      ],
      "mod_code": [
        "cout << ans << ' ' ;",
        "if ( A [ j ] >= k )",
        "if ( A [ i ] >= k )",
        "break break ;"
      ],
      "err_line": 11,
      "err_msg": "expected ‘;’ before ‘break’"
    },
    {
      "mod_line": [
        19,
        14,
        11
      ],
      "mod_code": [
        "cout << ans << ' ' ;",
        "if ( A [ j ] >= k )",
        "break break ;"
      ],
      "err_line": 11,
      "err_msg": "expected ‘;’ before ‘break’"
    },
    {
      "mod_line": [
        19,
        8,
        11
      ],
      "mod_code": [
        "cout << ans << ' ' ;",
        "if ( A [ i ] >= k )",
        "break break ;"
      ],
      "err_line": 11,
      "err_msg": "expected ‘;’ before ‘break’"
    },
    {
      "mod_line": [
        19,
        11
      ],
      "mod_code": [
        "cout << ans << ' ' ;",
        "break break ;"
      ],
      "err_line": 11,
      "err_msg": "expected ‘;’ before ‘break’"
    },
    {
      "mod_line": [
        2,
        14
      ],
      "mod_code": [
        "while ( { cin >> n >> k )",
        "if ( A [ j ] >= k )"
      ],
      "err_line": 2,
      "err_msg": "expected primary-expression before ‘{’ token"
    },
    {
      "mod_line": [
        2,
        14,
        8
      ],
      "mod_code": [
        "while ( { cin >> n >> k )",
        "if ( A [ j ] >= k )",
        "if ( A [ i ] >= k )"
      ],
      "err_line": 2,
      "err_msg": "expected primary-expression before ‘{’ token"
    },
    {
      "mod_line": [
        2,
        14,
        8,
        11
      ],
      "mod_code": [
        "while ( { cin >> n >> k )",
        "if ( A [ j ] >= k )",
        "if ( A [ i ] >= k )",
        "break break ;"
      ],
      "err_line": 2,
      "err_msg": "expected primary-expression before ‘{’ token"
    },
    {
      "mod_line": [
        2,
        14,
        11
      ],
      "mod_code": [
        "while ( { cin >> n >> k )",
        "if ( A [ j ] >= k )",
        "break break ;"
      ],
      "err_line": 2,
      "err_msg": "expected primary-expression before ‘{’ token"
    },
    {
      "mod_line": [
        2,
        8
      ],
      "mod_code": [
        "while ( { cin >> n >> k )",
        "if ( A [ i ] >= k )"
      ],
      "err_line": 2,
      "err_msg": "expected primary-expression before ‘{’ token"
    },
    {
      "mod_line": [
        2,
        8,
        11
      ],
      "mod_code": [
        "while ( { cin >> n >> k )",
        "if ( A [ i ] >= k )",
        "break break ;"
      ],
      "err_line": 2,
      "err_msg": "expected primary-expression before ‘{’ token"
    },
    {
      "mod_line": [
        2,
        11
      ],
      "mod_code": [
        "while ( { cin >> n >> k )",
        "break break ;"
      ],
      "err_line": 2,
      "err_msg": "expected primary-expression before ‘{’ token"
    },
    {
      "mod_line": [
        14,
        8,
        11
      ],
      "mod_code": [
        "if ( A [ j ] >= k )",
        "if ( A [ i ] >= k )",
        "break break ;"
      ],
      "err_line": 11,
      "err_msg": "expected ‘;’ before ‘break’"
    },
    {
      "mod_line": [
        14,
        11
      ],
      "mod_code": [
        "if ( A [ j ] >= k )",
        "break break ;"
      ],
      "err_line": 11,
      "err_msg": "expected ‘;’ before ‘break’"
    },
    {
      "mod_line": [
        8,
        11
      ],
      "mod_code": [
        "if ( A [ i ] >= k )",
        "break break ;"
      ],
      "err_line": 11,
      "err_msg": "expected ‘;’ before ‘break’"
    }
  ]
}