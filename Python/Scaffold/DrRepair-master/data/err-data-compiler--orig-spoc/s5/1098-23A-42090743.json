{
  "meta": {
    "index": 1098,
    "hitid": "3IJ95K7NDX6575266C6DNW6V0DVNGL",
    "workerid": "A1AYVATMT88U1W",
    "probid": "23A",
    "subid": "42090743"
  },
  "lines": [
    {
      "line": 0,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 1,
      "text": "c = array of character elements of size 105",
      "code": "char c [ 105 ] ;",
      "indent": 1
    },
    {
      "line": 2,
      "text": "let ans be a integer with ans = 0",
      "code": "int ans = 0 ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "let i , j be integers",
      "code": "int i , j ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "read c",
      "code": "cin >> c ;",
      "indent": 1
    },
    {
      "line": 5,
      "text": "for i is equal to 0 , c [ i ] , increment i by 1",
      "code": "for ( i = 0 ; c [ i ] ; i ++ )",
      "indent": 1
    },
    {
      "line": 6,
      "text": "for j is equal to i + 1 , c [ j ] , increment j by 1",
      "code": "for ( j = i + 1 ; c [ j ] ; j ++ )",
      "indent": 2
    },
    {
      "line": 7,
      "text": "the integer value of total = 0",
      "code": "int total = 0 ;",
      "indent": 3
    },
    {
      "line": 8,
      "text": "while c [ i + total ] and c [ j + total ] and c [ i + total ] is equal to c [ j + total ] , increment total by 1",
      "code": "while ( c [ i + total ] && c [ j + total ] && c [ i + total ] == c [ j + total ] ) total ++ ;",
      "indent": 3
    },
    {
      "line": 9,
      "text": "if ans is less than total , ans is equal to total",
      "code": "if ( ans < total ) ans = total ;",
      "indent": 3
    },
    {
      "line": 10,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 11,
      "text": "print ans and new line",
      "code": "cout << ans << endl ;",
      "indent": 1
    },
    {
      "line": 12,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 13,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        4
      ],
      "mod_code": [
        "cin . get ( c ) ;"
      ],
      "err_line": 4,
      "err_msg": "invalid conversion from ‘char*’ to ‘std::basic_istream<char>::char_type {aka char}’ [-fpermissive]"
    },
    {
      "mod_line": [
        6
      ],
      "mod_code": [
        "for ( j = i + 1 ; j [ j ] ; j ++ )"
      ],
      "err_line": 6,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        4,
        6
      ],
      "mod_code": [
        "cin . get ( c ) ;",
        "for ( j = i + 1 ; j [ j ] ; j ++ )"
      ],
      "err_line": 4,
      "err_msg": "invalid conversion from ‘char*’ to ‘std::basic_istream<char>::char_type {aka char}’ [-fpermissive]"
    }
  ]
}