{
  "meta": {
    "index": 2156,
    "hitid": "3GVPRXWRPHOU0BGEGTPRCBXLFB97ID",
    "workerid": "AIWEXPJAU66D9",
    "probid": "745A",
    "subid": "33795288"
  },
  "lines": [
    {
      "line": 0,
      "text": "void function cycle with string argument s and int argument len",
      "code": "void cycle ( string s , int len ) ;",
      "indent": 0
    },
    {
      "line": 1,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 2,
      "text": "declare string variables s , b and l and an array of strings a with size 51",
      "code": "string s , a [ 51 ] , b , l ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "declare boolean flag = false",
      "code": "bool flag = false ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "read input to s",
      "code": "cin >> s ;",
      "indent": 1
    },
    {
      "line": 5,
      "text": "let len , j and count be integers with j and count = 0",
      "code": "int len , j = 0 , count = 0 ;",
      "indent": 1
    },
    {
      "line": 6,
      "text": "change len to length of s",
      "code": "len = s . size ( ) ;",
      "indent": 1
    },
    {
      "line": 7,
      "text": "for i from 0 to len exclusive",
      "code": "for ( int i = 0 ; i < len ; i ++ )",
      "indent": 1
    },
    {
      "line": 8,
      "text": "set b to s [ len - 1 ]",
      "code": "b = s [ len - 1 ] ;",
      "indent": 2
    },
    {
      "line": 9,
      "text": "remove element at len - 1 from s",
      "code": "s . erase ( ( len - 1 ) ) ;",
      "indent": 2
    },
    {
      "line": 10,
      "text": "insert b to position 0 of l",
      "code": "l . insert ( 0 , b ) ;",
      "indent": 2
    },
    {
      "line": 11,
      "text": "insert s to position 1 of l",
      "code": "l . insert ( 1 , s ) ;",
      "indent": 2
    },
    {
      "line": 12,
      "text": "set a [ i ] to l",
      "code": "a [ i ] = l ;",
      "indent": 2
    },
    {
      "line": 13,
      "text": "for j = 0 to i exclusive incrementing j",
      "code": "for ( j = 0 ; j < i ; j ++ )",
      "indent": 2
    },
    {
      "line": 14,
      "text": "if a [ j ] is 0 , change flag to true",
      "code": "if ( l . compare ( a [ j ] ) == 0 ) { flag = true ; }",
      "indent": 3
    },
    {
      "line": 15,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 16,
      "text": "increment count if flag is false",
      "code": "if ( flag == false ) { count ++ ; }",
      "indent": 2
    },
    {
      "line": 17,
      "text": "set s to l",
      "code": "s = l ;",
      "indent": 2
    },
    {
      "line": 18,
      "text": "clear l",
      "code": "l . clear ( ) ;",
      "indent": 2
    },
    {
      "line": 19,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 20,
      "text": "print count",
      "code": "cout << count << endl ;",
      "indent": 1
    },
    {
      "line": 21,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 22,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        0
      ],
      "mod_code": [
        "void cycle ( string s , int len )"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘int’"
    },
    {
      "mod_line": [
        11
      ],
      "mod_code": [
        "l . insert ( 1 , 1 ) ;"
      ],
      "err_line": 11,
      "err_msg": "no matching function for call to ‘std::__cxx11::basic_string<char>::insert(int, int)’"
    },
    {
      "mod_line": [
        14
      ],
      "mod_code": [
        "if ( a [ j ] == 0 ) flag = true ;"
      ],
      "err_line": 14,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        0
      ],
      "mod_code": [
        "void cycle ( string s [ ] , int len )"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘int’"
    },
    {
      "mod_line": [
        2
      ],
      "mod_code": [
        "string s , a , a [ 51 ] , l ;"
      ],
      "err_line": 2,
      "err_msg": "conflicting declaration ‘std::__cxx11::string a [51]’"
    },
    {
      "mod_line": [
        4
      ],
      "mod_code": [
        "cin >> n ;"
      ],
      "err_line": 4,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        5
      ],
      "mod_code": [
        "int len , j , count = 0 , count ;"
      ],
      "err_line": 5,
      "err_msg": "redeclaration of ‘int count’"
    },
    {
      "mod_line": [
        6
      ],
      "mod_code": [
        "int len = s . length ( ) ;"
      ],
      "err_line": 6,
      "err_msg": "redeclaration of ‘int len’"
    },
    {
      "mod_line": [
        7
      ],
      "mod_code": [
        "for ( i = 0 ; i < len ; i ++ )"
      ],
      "err_line": 7,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        8
      ],
      "mod_code": [
        "int b = s [ len - 1 ] ;"
      ],
      "err_line": 10,
      "err_msg": "no matching function for call to ‘std::__cxx11::basic_string<char>::insert(int, int&)’"
    },
    {
      "mod_line": [
        9
      ],
      "mod_code": [
        "s . pop ( ) - 1 ;"
      ],
      "err_line": 9,
      "err_msg": "‘std::__cxx11::string {aka class std::__cxx11::basic_string<char>}’ has no member named ‘pop’"
    },
    {
      "mod_line": [
        10
      ],
      "mod_code": [
        "l . insert ( b ) ;"
      ],
      "err_line": 10,
      "err_msg": "no matching function for call to ‘std::__cxx11::basic_string<char>::insert(std::__cxx11::string&)’"
    },
    {
      "mod_line": [
        11
      ],
      "mod_code": [
        "l . insert ( s . insert ( 1 ) ) ;"
      ],
      "err_line": 11,
      "err_msg": "no matching function for call to ‘std::__cxx11::basic_string<char>::insert(int)’"
    },
    {
      "mod_line": [
        14
      ],
      "mod_code": [
        "if ( a [ j ] == 0 ) { flag = true ; }"
      ],
      "err_line": 14,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        17
      ],
      "mod_code": [
        "int s = l ;"
      ],
      "err_line": 17,
      "err_msg": "cannot convert ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ to ‘int’ in initialization"
    },
    {
      "mod_line": [
        18
      ],
      "mod_code": [
        "l . front ( ) ;"
      ],
      "err_line": 18,
      "err_msg": "‘std::__cxx11::string {aka class std::__cxx11::basic_string<char>}’ has no member named ‘front’"
    },
    {
      "mod_line": [
        0,
        10
      ],
      "mod_code": [
        "void cycle ( string s , int len )",
        "l . insert ( 0 , 0 ) ;"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘int’"
    },
    {
      "mod_line": [
        0,
        10,
        11
      ],
      "mod_code": [
        "void cycle ( string s , int len )",
        "l . insert ( 0 , 0 ) ;",
        "l . insert ( 1 , 1 ) ;"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘int’"
    },
    {
      "mod_line": [
        0,
        10,
        11,
        14
      ],
      "mod_code": [
        "void cycle ( string s , int len )",
        "l . insert ( 0 , 0 ) ;",
        "l . insert ( 1 , 1 ) ;",
        "if ( a [ j ] == 0 ) flag = true ;"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘int’"
    },
    {
      "mod_line": [
        0,
        10,
        11,
        6
      ],
      "mod_code": [
        "void cycle ( string s , int len )",
        "l . insert ( 0 , 0 ) ;",
        "l . insert ( 1 , 1 ) ;",
        "int len = s . length ( ) ;"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘int’"
    },
    {
      "mod_line": [
        0,
        10,
        14
      ],
      "mod_code": [
        "void cycle ( string s , int len )",
        "l . insert ( 0 , 0 ) ;",
        "if ( a [ j ] == 0 ) flag = true ;"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘int’"
    },
    {
      "mod_line": [
        0,
        10,
        14,
        6
      ],
      "mod_code": [
        "void cycle ( string s , int len )",
        "l . insert ( 0 , 0 ) ;",
        "if ( a [ j ] == 0 ) flag = true ;",
        "int len = s . length ( ) ;"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘int’"
    },
    {
      "mod_line": [
        0,
        10,
        6
      ],
      "mod_code": [
        "void cycle ( string s , int len )",
        "l . insert ( 0 , 0 ) ;",
        "int len = s . length ( ) ;"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘int’"
    },
    {
      "mod_line": [
        0,
        11
      ],
      "mod_code": [
        "void cycle ( string s , int len )",
        "l . insert ( 1 , 1 ) ;"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘int’"
    },
    {
      "mod_line": [
        0,
        11,
        14
      ],
      "mod_code": [
        "void cycle ( string s , int len )",
        "l . insert ( 1 , 1 ) ;",
        "if ( a [ j ] == 0 ) flag = true ;"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘int’"
    },
    {
      "mod_line": [
        0,
        11,
        14,
        6
      ],
      "mod_code": [
        "void cycle ( string s , int len )",
        "l . insert ( 1 , 1 ) ;",
        "if ( a [ j ] == 0 ) flag = true ;",
        "int len = s . length ( ) ;"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘int’"
    },
    {
      "mod_line": [
        0,
        11,
        6
      ],
      "mod_code": [
        "void cycle ( string s , int len )",
        "l . insert ( 1 , 1 ) ;",
        "int len = s . length ( ) ;"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘int’"
    },
    {
      "mod_line": [
        0,
        14
      ],
      "mod_code": [
        "void cycle ( string s , int len )",
        "if ( a [ j ] == 0 ) flag = true ;"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘int’"
    },
    {
      "mod_line": [
        0,
        14,
        6
      ],
      "mod_code": [
        "void cycle ( string s , int len )",
        "if ( a [ j ] == 0 ) flag = true ;",
        "int len = s . length ( ) ;"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘int’"
    },
    {
      "mod_line": [
        0,
        6
      ],
      "mod_code": [
        "void cycle ( string s , int len )",
        "int len = s . length ( ) ;"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘int’"
    },
    {
      "mod_line": [
        10,
        11
      ],
      "mod_code": [
        "l . insert ( 0 , 0 ) ;",
        "l . insert ( 1 , 1 ) ;"
      ],
      "err_line": 11,
      "err_msg": "no matching function for call to ‘std::__cxx11::basic_string<char>::insert(int, int)’"
    },
    {
      "mod_line": [
        10,
        11,
        14
      ],
      "mod_code": [
        "l . insert ( 0 , 0 ) ;",
        "l . insert ( 1 , 1 ) ;",
        "if ( a [ j ] == 0 ) flag = true ;"
      ],
      "err_line": 11,
      "err_msg": "no matching function for call to ‘std::__cxx11::basic_string<char>::insert(int, int)’"
    },
    {
      "mod_line": [
        10,
        11,
        14,
        0
      ],
      "mod_code": [
        "l . insert ( 0 , 0 ) ;",
        "l . insert ( 1 , 1 ) ;",
        "if ( a [ j ] == 0 ) flag = true ;",
        "void cycle ( string s [ ] , int len )"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘int’"
    },
    {
      "mod_line": [
        10,
        11,
        14,
        6
      ],
      "mod_code": [
        "l . insert ( 0 , 0 ) ;",
        "l . insert ( 1 , 1 ) ;",
        "if ( a [ j ] == 0 ) flag = true ;",
        "int len = s . length ( ) ;"
      ],
      "err_line": 6,
      "err_msg": "redeclaration of ‘int len’"
    },
    {
      "mod_line": [
        10,
        11,
        0
      ],
      "mod_code": [
        "l . insert ( 0 , 0 ) ;",
        "l . insert ( 1 , 1 ) ;",
        "void cycle ( string s [ ] , int len )"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘int’"
    },
    {
      "mod_line": [
        10,
        11,
        0,
        6
      ],
      "mod_code": [
        "l . insert ( 0 , 0 ) ;",
        "l . insert ( 1 , 1 ) ;",
        "void cycle ( string s [ ] , int len )",
        "int len = s . length ( ) ;"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘int’"
    },
    {
      "mod_line": [
        10,
        11,
        6
      ],
      "mod_code": [
        "l . insert ( 0 , 0 ) ;",
        "l . insert ( 1 , 1 ) ;",
        "int len = s . length ( ) ;"
      ],
      "err_line": 6,
      "err_msg": "redeclaration of ‘int len’"
    },
    {
      "mod_line": [
        10,
        14
      ],
      "mod_code": [
        "l . insert ( 0 , 0 ) ;",
        "if ( a [ j ] == 0 ) flag = true ;"
      ],
      "err_line": 14,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        10,
        14,
        0
      ],
      "mod_code": [
        "l . insert ( 0 , 0 ) ;",
        "if ( a [ j ] == 0 ) flag = true ;",
        "void cycle ( string s [ ] , int len )"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘int’"
    },
    {
      "mod_line": [
        10,
        14,
        0,
        6
      ],
      "mod_code": [
        "l . insert ( 0 , 0 ) ;",
        "if ( a [ j ] == 0 ) flag = true ;",
        "void cycle ( string s [ ] , int len )",
        "int len = s . length ( ) ;"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘int’"
    },
    {
      "mod_line": [
        10,
        14,
        6
      ],
      "mod_code": [
        "l . insert ( 0 , 0 ) ;",
        "if ( a [ j ] == 0 ) flag = true ;",
        "int len = s . length ( ) ;"
      ],
      "err_line": 6,
      "err_msg": "redeclaration of ‘int len’"
    },
    {
      "mod_line": [
        10,
        0
      ],
      "mod_code": [
        "l . insert ( 0 , 0 ) ;",
        "void cycle ( string s [ ] , int len )"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘int’"
    },
    {
      "mod_line": [
        10,
        0,
        6
      ],
      "mod_code": [
        "l . insert ( 0 , 0 ) ;",
        "void cycle ( string s [ ] , int len )",
        "int len = s . length ( ) ;"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘int’"
    },
    {
      "mod_line": [
        10,
        6
      ],
      "mod_code": [
        "l . insert ( 0 , 0 ) ;",
        "int len = s . length ( ) ;"
      ],
      "err_line": 6,
      "err_msg": "redeclaration of ‘int len’"
    },
    {
      "mod_line": [
        11,
        14
      ],
      "mod_code": [
        "l . insert ( 1 , 1 ) ;",
        "if ( a [ j ] == 0 ) flag = true ;"
      ],
      "err_line": 11,
      "err_msg": "no matching function for call to ‘std::__cxx11::basic_string<char>::insert(int, int)’"
    },
    {
      "mod_line": [
        11,
        14,
        0
      ],
      "mod_code": [
        "l . insert ( 1 , 1 ) ;",
        "if ( a [ j ] == 0 ) flag = true ;",
        "void cycle ( string s [ ] , int len )"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘int’"
    },
    {
      "mod_line": [
        11,
        14,
        0,
        6
      ],
      "mod_code": [
        "l . insert ( 1 , 1 ) ;",
        "if ( a [ j ] == 0 ) flag = true ;",
        "void cycle ( string s [ ] , int len )",
        "int len = s . length ( ) ;"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘int’"
    },
    {
      "mod_line": [
        11,
        14,
        6
      ],
      "mod_code": [
        "l . insert ( 1 , 1 ) ;",
        "if ( a [ j ] == 0 ) flag = true ;",
        "int len = s . length ( ) ;"
      ],
      "err_line": 6,
      "err_msg": "redeclaration of ‘int len’"
    },
    {
      "mod_line": [
        11,
        0
      ],
      "mod_code": [
        "l . insert ( 1 , 1 ) ;",
        "void cycle ( string s [ ] , int len )"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘int’"
    },
    {
      "mod_line": [
        11,
        0,
        6
      ],
      "mod_code": [
        "l . insert ( 1 , 1 ) ;",
        "void cycle ( string s [ ] , int len )",
        "int len = s . length ( ) ;"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘int’"
    },
    {
      "mod_line": [
        11,
        6
      ],
      "mod_code": [
        "l . insert ( 1 , 1 ) ;",
        "int len = s . length ( ) ;"
      ],
      "err_line": 6,
      "err_msg": "redeclaration of ‘int len’"
    },
    {
      "mod_line": [
        14,
        0
      ],
      "mod_code": [
        "if ( a [ j ] == 0 ) flag = true ;",
        "void cycle ( string s [ ] , int len )"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘int’"
    },
    {
      "mod_line": [
        14,
        0,
        6
      ],
      "mod_code": [
        "if ( a [ j ] == 0 ) flag = true ;",
        "void cycle ( string s [ ] , int len )",
        "int len = s . length ( ) ;"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘int’"
    },
    {
      "mod_line": [
        14,
        6
      ],
      "mod_code": [
        "if ( a [ j ] == 0 ) flag = true ;",
        "int len = s . length ( ) ;"
      ],
      "err_line": 6,
      "err_msg": "redeclaration of ‘int len’"
    },
    {
      "mod_line": [
        0,
        6
      ],
      "mod_code": [
        "void cycle ( string s [ ] , int len )",
        "int len = s . length ( ) ;"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘int’"
    }
  ]
}