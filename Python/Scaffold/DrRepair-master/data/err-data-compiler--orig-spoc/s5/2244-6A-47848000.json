{
  "meta": {
    "index": 2244,
    "hitid": "3EFNPKWBMSI1SXYBARXVTQL9NDY30W",
    "workerid": "A1APYLD4DUK33J",
    "probid": "6A",
    "subid": "47848000"
  },
  "lines": [
    {
      "line": 0,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 1,
      "text": "create integer array with size 4",
      "code": "int a [ 4 ] ;",
      "indent": 1
    },
    {
      "line": 2,
      "text": "for i = 0 to 4 exclusive , read a [ i ]",
      "code": "for ( int i = 0 ; i < 4 ; i ++ ) cin >> a [ i ] ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "sort elements from a to a + 4",
      "code": "sort ( a , a + 4 ) ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "create integer flag with flag = 0",
      "code": "int flag = 0 ;",
      "indent": 1
    },
    {
      "line": 5,
      "text": "for i = 0 to 1 inclusive",
      "code": "for ( int i = 0 ; i <= 1 ; i ++ )",
      "indent": 1
    },
    {
      "line": 6,
      "text": "if a [ i ] + a [ i + 1 ] is greater than a [ i + 2 ]",
      "code": "if ( ( a [ i ] + a [ i + 1 ] ) > a [ i + 2 ] )",
      "indent": 2
    },
    {
      "line": 7,
      "text": "set flag to 1",
      "code": "flag = 1 ;",
      "indent": 3
    },
    {
      "line": 8,
      "text": "break loop",
      "code": "break ;",
      "indent": 3
    },
    {
      "line": 9,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 10,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 11,
      "text": "if flag is 1",
      "code": "if ( flag == 1 )",
      "indent": 1
    },
    {
      "line": 12,
      "text": "print \" TRIANGLE \" print newline",
      "code": "cout << \" TRIANGLE \" << endl ;",
      "indent": 2
    },
    {
      "line": 13,
      "text": "else",
      "code": "else",
      "indent": 1
    },
    {
      "line": 14,
      "text": "set flag to 0",
      "code": "flag = 0 ;",
      "indent": 2
    },
    {
      "line": 15,
      "text": "for i = 0 to 1 inclusive",
      "code": "for ( int i = 0 ; i <= 1 ; i ++ )",
      "indent": 2
    },
    {
      "line": 16,
      "text": "if a [ i ] + a [ i + 1 ] is a [ i + 2 ]",
      "code": "if ( ( a [ i ] + a [ i + 1 ] ) == a [ i + 2 ] )",
      "indent": 3
    },
    {
      "line": 17,
      "text": "set flag to 1",
      "code": "flag = 1 ;",
      "indent": 4
    },
    {
      "line": 18,
      "text": "break loop",
      "code": "break ;",
      "indent": 4
    },
    {
      "line": 19,
      "text": "DUMMY",
      "code": "}",
      "indent": 3
    },
    {
      "line": 20,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 21,
      "text": "if flag is 1",
      "code": "if ( flag == 1 )",
      "indent": 2
    },
    {
      "line": 22,
      "text": "print \" SEGMENT \" print newline",
      "code": "cout << \" SEGMENT \" << endl ;",
      "indent": 3
    },
    {
      "line": 23,
      "text": "else",
      "code": "else",
      "indent": 2
    },
    {
      "line": 24,
      "text": "print \" IMPOSSIBLE \" print newline",
      "code": "cout << \" IMPOSSIBLE \" << endl ;",
      "indent": 3
    },
    {
      "line": 25,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 26,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 27,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        1
      ],
      "mod_code": [
        "int [ 4 ] ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘[’ token"
    },
    {
      "mod_line": [
        5
      ],
      "mod_code": [
        "for ( i = 0 ; i <= 1 ; i ++ )"
      ],
      "err_line": 5,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        6
      ],
      "mod_code": [
        "if ( a [ i ] + a [ i + 1 ] ] > a [ i + 2 ] )"
      ],
      "err_line": 6,
      "err_msg": "expected ‘)’ before ‘]’ token"
    },
    {
      "mod_line": [
        8
      ],
      "mod_code": [
        "break break ;"
      ],
      "err_line": 8,
      "err_msg": "expected ‘;’ before ‘break’"
    },
    {
      "mod_line": [
        15
      ],
      "mod_code": [
        "for ( i = 0 ; i <= 1 ; i ++ )"
      ],
      "err_line": 15,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        18
      ],
      "mod_code": [
        "break break ;"
      ],
      "err_line": 18,
      "err_msg": "expected ‘;’ before ‘break’"
    },
    {
      "mod_line": [
        8,
        17
      ],
      "mod_code": [
        "break break ;",
        "int flag = 1 ;"
      ],
      "err_line": 8,
      "err_msg": "expected ‘;’ before ‘break’"
    },
    {
      "mod_line": [
        8,
        17,
        3
      ],
      "mod_code": [
        "break break ;",
        "int flag = 1 ;",
        "sort ( a + 4 , a + 4 ) ;"
      ],
      "err_line": 8,
      "err_msg": "expected ‘;’ before ‘break’"
    },
    {
      "mod_line": [
        8,
        17,
        3,
        6
      ],
      "mod_code": [
        "break break ;",
        "int flag = 1 ;",
        "sort ( a + 4 , a + 4 ) ;",
        "if ( a [ i ] + a [ i + 1 ] ] > a [ i + 2 ] )"
      ],
      "err_line": 6,
      "err_msg": "expected ‘)’ before ‘]’ token"
    },
    {
      "mod_line": [
        8,
        17,
        3,
        7
      ],
      "mod_code": [
        "break break ;",
        "int flag = 1 ;",
        "sort ( a + 4 , a + 4 ) ;",
        "int flag = 1 ;"
      ],
      "err_line": 8,
      "err_msg": "expected ‘;’ before ‘break’"
    },
    {
      "mod_line": [
        8,
        17,
        3,
        5
      ],
      "mod_code": [
        "break break ;",
        "int flag = 1 ;",
        "sort ( a + 4 , a + 4 ) ;",
        "for ( i = 0 ; i <= 1 ; i ++ )"
      ],
      "err_line": 5,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        8,
        17,
        6
      ],
      "mod_code": [
        "break break ;",
        "int flag = 1 ;",
        "if ( a [ i ] + a [ i + 1 ] ] > a [ i + 2 ] )"
      ],
      "err_line": 6,
      "err_msg": "expected ‘)’ before ‘]’ token"
    },
    {
      "mod_line": [
        8,
        17,
        6,
        7
      ],
      "mod_code": [
        "break break ;",
        "int flag = 1 ;",
        "if ( a [ i ] + a [ i + 1 ] ] > a [ i + 2 ] )",
        "int flag = 1 ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘)’ before ‘]’ token"
    },
    {
      "mod_line": [
        8,
        17,
        6,
        5
      ],
      "mod_code": [
        "break break ;",
        "int flag = 1 ;",
        "if ( a [ i ] + a [ i + 1 ] ] > a [ i + 2 ] )",
        "for ( i = 0 ; i <= 1 ; i ++ )"
      ],
      "err_line": 5,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        8,
        17,
        7
      ],
      "mod_code": [
        "break break ;",
        "int flag = 1 ;",
        "int flag = 1 ;"
      ],
      "err_line": 8,
      "err_msg": "expected ‘;’ before ‘break’"
    },
    {
      "mod_line": [
        8,
        17,
        7,
        5
      ],
      "mod_code": [
        "break break ;",
        "int flag = 1 ;",
        "int flag = 1 ;",
        "for ( i = 0 ; i <= 1 ; i ++ )"
      ],
      "err_line": 5,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        8,
        17,
        5
      ],
      "mod_code": [
        "break break ;",
        "int flag = 1 ;",
        "for ( i = 0 ; i <= 1 ; i ++ )"
      ],
      "err_line": 5,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        8,
        3
      ],
      "mod_code": [
        "break break ;",
        "sort ( a + 4 , a + 4 ) ;"
      ],
      "err_line": 8,
      "err_msg": "expected ‘;’ before ‘break’"
    },
    {
      "mod_line": [
        8,
        3,
        6
      ],
      "mod_code": [
        "break break ;",
        "sort ( a + 4 , a + 4 ) ;",
        "if ( a [ i ] + a [ i + 1 ] ] > a [ i + 2 ] )"
      ],
      "err_line": 6,
      "err_msg": "expected ‘)’ before ‘]’ token"
    },
    {
      "mod_line": [
        8,
        3,
        6,
        7
      ],
      "mod_code": [
        "break break ;",
        "sort ( a + 4 , a + 4 ) ;",
        "if ( a [ i ] + a [ i + 1 ] ] > a [ i + 2 ] )",
        "int flag = 1 ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘)’ before ‘]’ token"
    },
    {
      "mod_line": [
        8,
        3,
        6,
        5
      ],
      "mod_code": [
        "break break ;",
        "sort ( a + 4 , a + 4 ) ;",
        "if ( a [ i ] + a [ i + 1 ] ] > a [ i + 2 ] )",
        "for ( i = 0 ; i <= 1 ; i ++ )"
      ],
      "err_line": 5,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        8,
        3,
        7
      ],
      "mod_code": [
        "break break ;",
        "sort ( a + 4 , a + 4 ) ;",
        "int flag = 1 ;"
      ],
      "err_line": 8,
      "err_msg": "expected ‘;’ before ‘break’"
    },
    {
      "mod_line": [
        8,
        3,
        7,
        5
      ],
      "mod_code": [
        "break break ;",
        "sort ( a + 4 , a + 4 ) ;",
        "int flag = 1 ;",
        "for ( i = 0 ; i <= 1 ; i ++ )"
      ],
      "err_line": 5,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        8,
        3,
        5
      ],
      "mod_code": [
        "break break ;",
        "sort ( a + 4 , a + 4 ) ;",
        "for ( i = 0 ; i <= 1 ; i ++ )"
      ],
      "err_line": 5,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        8,
        6
      ],
      "mod_code": [
        "break break ;",
        "if ( a [ i ] + a [ i + 1 ] ] > a [ i + 2 ] )"
      ],
      "err_line": 6,
      "err_msg": "expected ‘)’ before ‘]’ token"
    },
    {
      "mod_line": [
        8,
        6,
        7
      ],
      "mod_code": [
        "break break ;",
        "if ( a [ i ] + a [ i + 1 ] ] > a [ i + 2 ] )",
        "int flag = 1 ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘)’ before ‘]’ token"
    },
    {
      "mod_line": [
        8,
        6,
        7,
        5
      ],
      "mod_code": [
        "break break ;",
        "if ( a [ i ] + a [ i + 1 ] ] > a [ i + 2 ] )",
        "int flag = 1 ;",
        "for ( i = 0 ; i <= 1 ; i ++ )"
      ],
      "err_line": 5,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        8,
        6,
        5
      ],
      "mod_code": [
        "break break ;",
        "if ( a [ i ] + a [ i + 1 ] ] > a [ i + 2 ] )",
        "for ( i = 0 ; i <= 1 ; i ++ )"
      ],
      "err_line": 5,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        8,
        7
      ],
      "mod_code": [
        "break break ;",
        "int flag = 1 ;"
      ],
      "err_line": 8,
      "err_msg": "expected ‘;’ before ‘break’"
    },
    {
      "mod_line": [
        8,
        7,
        5
      ],
      "mod_code": [
        "break break ;",
        "int flag = 1 ;",
        "for ( i = 0 ; i <= 1 ; i ++ )"
      ],
      "err_line": 5,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        8,
        5
      ],
      "mod_code": [
        "break break ;",
        "for ( i = 0 ; i <= 1 ; i ++ )"
      ],
      "err_line": 5,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        17,
        3,
        6
      ],
      "mod_code": [
        "int flag = 1 ;",
        "sort ( a + 4 , a + 4 ) ;",
        "if ( a [ i ] + a [ i + 1 ] ] > a [ i + 2 ] )"
      ],
      "err_line": 6,
      "err_msg": "expected ‘)’ before ‘]’ token"
    },
    {
      "mod_line": [
        17,
        3,
        6,
        7
      ],
      "mod_code": [
        "int flag = 1 ;",
        "sort ( a + 4 , a + 4 ) ;",
        "if ( a [ i ] + a [ i + 1 ] ] > a [ i + 2 ] )",
        "int flag = 1 ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘)’ before ‘]’ token"
    },
    {
      "mod_line": [
        17,
        3,
        6,
        5
      ],
      "mod_code": [
        "int flag = 1 ;",
        "sort ( a + 4 , a + 4 ) ;",
        "if ( a [ i ] + a [ i + 1 ] ] > a [ i + 2 ] )",
        "for ( i = 0 ; i <= 1 ; i ++ )"
      ],
      "err_line": 5,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        17,
        3,
        7,
        5
      ],
      "mod_code": [
        "int flag = 1 ;",
        "sort ( a + 4 , a + 4 ) ;",
        "int flag = 1 ;",
        "for ( i = 0 ; i <= 1 ; i ++ )"
      ],
      "err_line": 5,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        17,
        3,
        5
      ],
      "mod_code": [
        "int flag = 1 ;",
        "sort ( a + 4 , a + 4 ) ;",
        "for ( i = 0 ; i <= 1 ; i ++ )"
      ],
      "err_line": 5,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        17,
        6
      ],
      "mod_code": [
        "int flag = 1 ;",
        "if ( a [ i ] + a [ i + 1 ] ] > a [ i + 2 ] )"
      ],
      "err_line": 6,
      "err_msg": "expected ‘)’ before ‘]’ token"
    },
    {
      "mod_line": [
        17,
        6,
        7
      ],
      "mod_code": [
        "int flag = 1 ;",
        "if ( a [ i ] + a [ i + 1 ] ] > a [ i + 2 ] )",
        "int flag = 1 ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘)’ before ‘]’ token"
    },
    {
      "mod_line": [
        17,
        6,
        7,
        5
      ],
      "mod_code": [
        "int flag = 1 ;",
        "if ( a [ i ] + a [ i + 1 ] ] > a [ i + 2 ] )",
        "int flag = 1 ;",
        "for ( i = 0 ; i <= 1 ; i ++ )"
      ],
      "err_line": 5,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        17,
        6,
        5
      ],
      "mod_code": [
        "int flag = 1 ;",
        "if ( a [ i ] + a [ i + 1 ] ] > a [ i + 2 ] )",
        "for ( i = 0 ; i <= 1 ; i ++ )"
      ],
      "err_line": 5,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        17,
        7,
        5
      ],
      "mod_code": [
        "int flag = 1 ;",
        "int flag = 1 ;",
        "for ( i = 0 ; i <= 1 ; i ++ )"
      ],
      "err_line": 5,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        17,
        5
      ],
      "mod_code": [
        "int flag = 1 ;",
        "for ( i = 0 ; i <= 1 ; i ++ )"
      ],
      "err_line": 5,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        3,
        6
      ],
      "mod_code": [
        "sort ( a + 4 , a + 4 ) ;",
        "if ( a [ i ] + a [ i + 1 ] ] > a [ i + 2 ] )"
      ],
      "err_line": 6,
      "err_msg": "expected ‘)’ before ‘]’ token"
    },
    {
      "mod_line": [
        3,
        6,
        7
      ],
      "mod_code": [
        "sort ( a + 4 , a + 4 ) ;",
        "if ( a [ i ] + a [ i + 1 ] ] > a [ i + 2 ] )",
        "int flag = 1 ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘)’ before ‘]’ token"
    },
    {
      "mod_line": [
        3,
        6,
        7,
        5
      ],
      "mod_code": [
        "sort ( a + 4 , a + 4 ) ;",
        "if ( a [ i ] + a [ i + 1 ] ] > a [ i + 2 ] )",
        "int flag = 1 ;",
        "for ( i = 0 ; i <= 1 ; i ++ )"
      ],
      "err_line": 5,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        3,
        6,
        5
      ],
      "mod_code": [
        "sort ( a + 4 , a + 4 ) ;",
        "if ( a [ i ] + a [ i + 1 ] ] > a [ i + 2 ] )",
        "for ( i = 0 ; i <= 1 ; i ++ )"
      ],
      "err_line": 5,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        3,
        7,
        5
      ],
      "mod_code": [
        "sort ( a + 4 , a + 4 ) ;",
        "int flag = 1 ;",
        "for ( i = 0 ; i <= 1 ; i ++ )"
      ],
      "err_line": 5,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        3,
        5
      ],
      "mod_code": [
        "sort ( a + 4 , a + 4 ) ;",
        "for ( i = 0 ; i <= 1 ; i ++ )"
      ],
      "err_line": 5,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        6,
        7
      ],
      "mod_code": [
        "if ( a [ i ] + a [ i + 1 ] ] > a [ i + 2 ] )",
        "int flag = 1 ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘)’ before ‘]’ token"
    },
    {
      "mod_line": [
        6,
        7,
        5
      ],
      "mod_code": [
        "if ( a [ i ] + a [ i + 1 ] ] > a [ i + 2 ] )",
        "int flag = 1 ;",
        "for ( i = 0 ; i <= 1 ; i ++ )"
      ],
      "err_line": 5,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        6,
        5
      ],
      "mod_code": [
        "if ( a [ i ] + a [ i + 1 ] ] > a [ i + 2 ] )",
        "for ( i = 0 ; i <= 1 ; i ++ )"
      ],
      "err_line": 5,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        7,
        5
      ],
      "mod_code": [
        "int flag = 1 ;",
        "for ( i = 0 ; i <= 1 ; i ++ )"
      ],
      "err_line": 5,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    }
  ]
}