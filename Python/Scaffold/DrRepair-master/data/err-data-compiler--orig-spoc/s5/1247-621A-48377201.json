{
  "meta": {
    "index": 1247,
    "hitid": "3TKSOBLOHLA7FF5YN09QVQF42OQBBT",
    "workerid": "A2J7P30MA3S6OV",
    "probid": "621A",
    "subid": "48377201"
  },
  "lines": [
    {
      "line": 0,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 1,
      "text": "create int n , a and minn",
      "code": "int n , a , minn ;",
      "indent": 1
    },
    {
      "line": 2,
      "text": "create long long sum",
      "code": "long long sum ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "while read n",
      "code": "while ( cin >> n )",
      "indent": 1
    },
    {
      "line": 4,
      "text": "sum = 0",
      "code": "sum = 0 ;",
      "indent": 2
    },
    {
      "line": 5,
      "text": "minn = 1e9 - 1",
      "code": "minn = 1e9 - 1 ;",
      "indent": 2
    },
    {
      "line": 6,
      "text": "for i = 0 to n exclusive",
      "code": "for ( int i = 0 ; i < n ; i ++ )",
      "indent": 2
    },
    {
      "line": 7,
      "text": "read a",
      "code": "cin >> a ;",
      "indent": 3
    },
    {
      "line": 8,
      "text": "sum = sum + a",
      "code": "sum += a ;",
      "indent": 3
    },
    {
      "line": 9,
      "text": "if a is not even and a is less than minn , minn = a",
      "code": "if ( a % 2 != 0 && a < minn ) minn = a ;",
      "indent": 3
    },
    {
      "line": 10,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 11,
      "text": "if sum is odd",
      "code": "if ( sum % 2 != 0 )",
      "indent": 2
    },
    {
      "line": 12,
      "text": "print sum - minn",
      "code": "cout << sum - minn << endl ;",
      "indent": 3
    },
    {
      "line": 13,
      "text": "else",
      "code": "else",
      "indent": 2
    },
    {
      "line": 14,
      "text": "print sum and a newline",
      "code": "cout << sum << endl ;",
      "indent": 3
    },
    {
      "line": 15,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 16,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        3
      ],
      "mod_code": [
        "while ( { cin >> n )"
      ],
      "err_line": 3,
      "err_msg": "expected primary-expression before ‘{’ token"
    },
    {
      "mod_line": [
        6
      ],
      "mod_code": [
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 6,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        6
      ],
      "mod_code": [
        "int sum = 0 ;",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 6,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        6,
        3
      ],
      "mod_code": [
        "int sum = 0 ;",
        "for ( i = 0 ; i < n ; i ++ )",
        "while ( { cin >> n )"
      ],
      "err_line": 3,
      "err_msg": "expected primary-expression before ‘{’ token"
    },
    {
      "mod_line": [
        4,
        6,
        3,
        7
      ],
      "mod_code": [
        "int sum = 0 ;",
        "for ( i = 0 ; i < n ; i ++ )",
        "while ( { cin >> n )",
        "cin >> n ;"
      ],
      "err_line": 3,
      "err_msg": "expected primary-expression before ‘{’ token"
    },
    {
      "mod_line": [
        4,
        6,
        7
      ],
      "mod_code": [
        "int sum = 0 ;",
        "for ( i = 0 ; i < n ; i ++ )",
        "cin >> n ;"
      ],
      "err_line": 6,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        3
      ],
      "mod_code": [
        "int sum = 0 ;",
        "while ( { cin >> n )"
      ],
      "err_line": 3,
      "err_msg": "expected primary-expression before ‘{’ token"
    },
    {
      "mod_line": [
        4,
        3,
        7
      ],
      "mod_code": [
        "int sum = 0 ;",
        "while ( { cin >> n )",
        "cin >> n ;"
      ],
      "err_line": 3,
      "err_msg": "expected primary-expression before ‘{’ token"
    },
    {
      "mod_line": [
        6,
        3
      ],
      "mod_code": [
        "for ( i = 0 ; i < n ; i ++ )",
        "while ( { cin >> n )"
      ],
      "err_line": 3,
      "err_msg": "expected primary-expression before ‘{’ token"
    },
    {
      "mod_line": [
        6,
        3,
        7
      ],
      "mod_code": [
        "for ( i = 0 ; i < n ; i ++ )",
        "while ( { cin >> n )",
        "cin >> n ;"
      ],
      "err_line": 3,
      "err_msg": "expected primary-expression before ‘{’ token"
    },
    {
      "mod_line": [
        6,
        7
      ],
      "mod_code": [
        "for ( i = 0 ; i < n ; i ++ )",
        "cin >> n ;"
      ],
      "err_line": 6,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        7
      ],
      "mod_code": [
        "while ( { cin >> n )",
        "cin >> n ;"
      ],
      "err_line": 3,
      "err_msg": "expected primary-expression before ‘{’ token"
    }
  ]
}