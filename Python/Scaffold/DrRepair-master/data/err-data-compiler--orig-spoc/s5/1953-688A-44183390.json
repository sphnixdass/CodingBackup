{
  "meta": {
    "index": 1953,
    "hitid": "3SBX2M1TKDHAYMMER3WTI14XFJ14QU",
    "workerid": "A1MJVTR0PCKBWW",
    "probid": "688A",
    "subid": "44183390"
  },
  "lines": [
    {
      "line": 0,
      "text": "integers = n , d",
      "code": "int n , d ;",
      "indent": 0
    },
    {
      "line": 1,
      "text": "create character variable s",
      "code": "char s [ 1000000 ] ;",
      "indent": 0
    },
    {
      "line": 2,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 3,
      "text": "read n , d",
      "code": "cin >> n >> d ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "get value of s",
      "code": "gets ( s ) ;",
      "indent": 1
    },
    {
      "line": 5,
      "text": "set integer f , maxd to - 1 , t",
      "code": "int f , maxd = - 1 , t = 0 ;",
      "indent": 1
    },
    {
      "line": 6,
      "text": "for i = 0 to less than d do the following",
      "code": "for ( int i = 0 ; i < d ; i ++ )",
      "indent": 1
    },
    {
      "line": 7,
      "text": "get value of s",
      "code": "gets ( s ) ;",
      "indent": 2
    },
    {
      "line": 8,
      "text": "set f to 0",
      "code": "f = 0 ;",
      "indent": 2
    },
    {
      "line": 9,
      "text": "for j = 0 to less than n do the following",
      "code": "for ( int j = 0 ; j < n ; j ++ )",
      "indent": 2
    },
    {
      "line": 10,
      "text": "set if ( s [ j ] = 0 ) f to 1",
      "code": "if ( s [ j ] == ' 0 ' ) f = 1 ;",
      "indent": 3
    },
    {
      "line": 11,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 12,
      "text": "if f is 1 then do the following",
      "code": "if ( f == 1 )",
      "indent": 2
    },
    {
      "line": 13,
      "text": "add one to t",
      "code": "t ++ ;",
      "indent": 3
    },
    {
      "line": 14,
      "text": "continue",
      "code": "continue ;",
      "indent": 3
    },
    {
      "line": 15,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 16,
      "text": "if f is 0 then do the following",
      "code": "if ( f == 0 )",
      "indent": 2
    },
    {
      "line": 17,
      "text": "set maxd to maximum bewteen maxd and t",
      "code": "maxd = max ( maxd , t ) ;",
      "indent": 3
    },
    {
      "line": 18,
      "text": "set t to 0",
      "code": "t = 0 ;",
      "indent": 3
    },
    {
      "line": 19,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 20,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 21,
      "text": "set if ( maxd = - 1 ) maxd to d",
      "code": "if ( maxd == - 1 ) maxd = d ;",
      "indent": 1
    },
    {
      "line": 22,
      "text": "if f is 1 then do the following",
      "code": "if ( f == 1 )",
      "indent": 1
    },
    {
      "line": 23,
      "text": "set maxd to max ( maxd , t )",
      "code": "maxd = max ( maxd , t ) ;",
      "indent": 2
    },
    {
      "line": 24,
      "text": "set t to 0",
      "code": "t = 0 ;",
      "indent": 2
    },
    {
      "line": 25,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 26,
      "text": "output maxd ,",
      "code": "cout << maxd << \" \\n \" ;",
      "indent": 1
    },
    {
      "line": 27,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 28,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        1
      ],
      "mod_code": [
        "char s ;"
      ],
      "err_line": 4,
      "err_msg": "invalid conversion from ‘char’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        5
      ],
      "mod_code": [
        "int f = - 1 , maxd = - 1 ;"
      ],
      "err_line": 13,
      "err_msg": "‘t’ was not declared in this scope"
    },
    {
      "mod_line": [
        1
      ],
      "mod_code": [
        "char s [ 8 ] [ 8 ] ;"
      ],
      "err_line": 4,
      "err_msg": "cannot convert ‘char (*)[8]’ to ‘char*’ for argument ‘1’ to ‘char* gets(char*)’"
    },
    {
      "mod_line": [
        6
      ],
      "mod_code": [
        "for ( i = 0 ; i < d ; i ++ )"
      ],
      "err_line": 6,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        9
      ],
      "mod_code": [
        "for ( j = 0 ; j < n ; j ++ )"
      ],
      "err_line": 9,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        14
      ],
      "mod_code": [
        "continue continue ;"
      ],
      "err_line": 14,
      "err_msg": "expected ‘;’ before ‘continue’"
    },
    {
      "mod_line": [
        17
      ],
      "mod_code": [
        "maxd = maximum ( maxd , t ) ;"
      ],
      "err_line": 17,
      "err_msg": "‘maximum’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        5
      ],
      "mod_code": [
        "char s ;",
        "int f = - 1 , maxd = - 1 ;"
      ],
      "err_line": 4,
      "err_msg": "invalid conversion from ‘char’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        1,
        5,
        10
      ],
      "mod_code": [
        "char s ;",
        "int f = - 1 , maxd = - 1 ;",
        "if ( s [ j ] == 0 ) f = 1 ;"
      ],
      "err_line": 4,
      "err_msg": "invalid conversion from ‘char’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        1,
        5,
        10,
        18
      ],
      "mod_code": [
        "char s ;",
        "int f = - 1 , maxd = - 1 ;",
        "if ( s [ j ] == 0 ) f = 1 ;",
        "int t = 0 ;"
      ],
      "err_line": 4,
      "err_msg": "invalid conversion from ‘char’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        1,
        5,
        10,
        14
      ],
      "mod_code": [
        "char s ;",
        "int f = - 1 , maxd = - 1 ;",
        "if ( s [ j ] == 0 ) f = 1 ;",
        "continue continue ;"
      ],
      "err_line": 4,
      "err_msg": "invalid conversion from ‘char’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        1,
        5,
        10,
        22
      ],
      "mod_code": [
        "char s ;",
        "int f = - 1 , maxd = - 1 ;",
        "if ( s [ j ] == 0 ) f = 1 ;",
        "while ( f == 1 )"
      ],
      "err_line": 4,
      "err_msg": "invalid conversion from ‘char’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        1,
        5,
        18
      ],
      "mod_code": [
        "char s ;",
        "int f = - 1 , maxd = - 1 ;",
        "int t = 0 ;"
      ],
      "err_line": 4,
      "err_msg": "invalid conversion from ‘char’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        1,
        5,
        18,
        14
      ],
      "mod_code": [
        "char s ;",
        "int f = - 1 , maxd = - 1 ;",
        "int t = 0 ;",
        "continue continue ;"
      ],
      "err_line": 4,
      "err_msg": "invalid conversion from ‘char’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        1,
        5,
        18,
        22
      ],
      "mod_code": [
        "char s ;",
        "int f = - 1 , maxd = - 1 ;",
        "int t = 0 ;",
        "while ( f == 1 )"
      ],
      "err_line": 4,
      "err_msg": "invalid conversion from ‘char’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        1,
        5,
        14
      ],
      "mod_code": [
        "char s ;",
        "int f = - 1 , maxd = - 1 ;",
        "continue continue ;"
      ],
      "err_line": 4,
      "err_msg": "invalid conversion from ‘char’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        1,
        5,
        14,
        22
      ],
      "mod_code": [
        "char s ;",
        "int f = - 1 , maxd = - 1 ;",
        "continue continue ;",
        "while ( f == 1 )"
      ],
      "err_line": 4,
      "err_msg": "invalid conversion from ‘char’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        1,
        5,
        22
      ],
      "mod_code": [
        "char s ;",
        "int f = - 1 , maxd = - 1 ;",
        "while ( f == 1 )"
      ],
      "err_line": 4,
      "err_msg": "invalid conversion from ‘char’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        1,
        10
      ],
      "mod_code": [
        "char s ;",
        "if ( s [ j ] == 0 ) f = 1 ;"
      ],
      "err_line": 4,
      "err_msg": "invalid conversion from ‘char’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        1,
        10,
        18
      ],
      "mod_code": [
        "char s ;",
        "if ( s [ j ] == 0 ) f = 1 ;",
        "int t = 0 ;"
      ],
      "err_line": 4,
      "err_msg": "invalid conversion from ‘char’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        1,
        10,
        18,
        14
      ],
      "mod_code": [
        "char s ;",
        "if ( s [ j ] == 0 ) f = 1 ;",
        "int t = 0 ;",
        "continue continue ;"
      ],
      "err_line": 4,
      "err_msg": "invalid conversion from ‘char’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        1,
        10,
        18,
        22
      ],
      "mod_code": [
        "char s ;",
        "if ( s [ j ] == 0 ) f = 1 ;",
        "int t = 0 ;",
        "while ( f == 1 )"
      ],
      "err_line": 4,
      "err_msg": "invalid conversion from ‘char’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        1,
        10,
        14
      ],
      "mod_code": [
        "char s ;",
        "if ( s [ j ] == 0 ) f = 1 ;",
        "continue continue ;"
      ],
      "err_line": 4,
      "err_msg": "invalid conversion from ‘char’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        1,
        10,
        14,
        22
      ],
      "mod_code": [
        "char s ;",
        "if ( s [ j ] == 0 ) f = 1 ;",
        "continue continue ;",
        "while ( f == 1 )"
      ],
      "err_line": 4,
      "err_msg": "invalid conversion from ‘char’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        1,
        10,
        22
      ],
      "mod_code": [
        "char s ;",
        "if ( s [ j ] == 0 ) f = 1 ;",
        "while ( f == 1 )"
      ],
      "err_line": 4,
      "err_msg": "invalid conversion from ‘char’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        1,
        18
      ],
      "mod_code": [
        "char s ;",
        "int t = 0 ;"
      ],
      "err_line": 4,
      "err_msg": "invalid conversion from ‘char’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        1,
        18,
        14
      ],
      "mod_code": [
        "char s ;",
        "int t = 0 ;",
        "continue continue ;"
      ],
      "err_line": 4,
      "err_msg": "invalid conversion from ‘char’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        1,
        18,
        14,
        22
      ],
      "mod_code": [
        "char s ;",
        "int t = 0 ;",
        "continue continue ;",
        "while ( f == 1 )"
      ],
      "err_line": 4,
      "err_msg": "invalid conversion from ‘char’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        1,
        18,
        22
      ],
      "mod_code": [
        "char s ;",
        "int t = 0 ;",
        "while ( f == 1 )"
      ],
      "err_line": 4,
      "err_msg": "invalid conversion from ‘char’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        1,
        14
      ],
      "mod_code": [
        "char s ;",
        "continue continue ;"
      ],
      "err_line": 4,
      "err_msg": "invalid conversion from ‘char’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        1,
        14,
        22
      ],
      "mod_code": [
        "char s ;",
        "continue continue ;",
        "while ( f == 1 )"
      ],
      "err_line": 4,
      "err_msg": "invalid conversion from ‘char’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        1,
        22
      ],
      "mod_code": [
        "char s ;",
        "while ( f == 1 )"
      ],
      "err_line": 4,
      "err_msg": "invalid conversion from ‘char’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        5,
        10
      ],
      "mod_code": [
        "int f = - 1 , maxd = - 1 ;",
        "if ( s [ j ] == 0 ) f = 1 ;"
      ],
      "err_line": 13,
      "err_msg": "‘t’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        10,
        18
      ],
      "mod_code": [
        "int f = - 1 , maxd = - 1 ;",
        "if ( s [ j ] == 0 ) f = 1 ;",
        "int t = 0 ;"
      ],
      "err_line": 13,
      "err_msg": "‘t’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        10,
        18,
        14
      ],
      "mod_code": [
        "int f = - 1 , maxd = - 1 ;",
        "if ( s [ j ] == 0 ) f = 1 ;",
        "int t = 0 ;",
        "continue continue ;"
      ],
      "err_line": 13,
      "err_msg": "‘t’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        10,
        18,
        22
      ],
      "mod_code": [
        "int f = - 1 , maxd = - 1 ;",
        "if ( s [ j ] == 0 ) f = 1 ;",
        "int t = 0 ;",
        "while ( f == 1 )"
      ],
      "err_line": 13,
      "err_msg": "‘t’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        10,
        14
      ],
      "mod_code": [
        "int f = - 1 , maxd = - 1 ;",
        "if ( s [ j ] == 0 ) f = 1 ;",
        "continue continue ;"
      ],
      "err_line": 13,
      "err_msg": "‘t’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        10,
        14,
        22
      ],
      "mod_code": [
        "int f = - 1 , maxd = - 1 ;",
        "if ( s [ j ] == 0 ) f = 1 ;",
        "continue continue ;",
        "while ( f == 1 )"
      ],
      "err_line": 13,
      "err_msg": "‘t’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        10,
        22
      ],
      "mod_code": [
        "int f = - 1 , maxd = - 1 ;",
        "if ( s [ j ] == 0 ) f = 1 ;",
        "while ( f == 1 )"
      ],
      "err_line": 13,
      "err_msg": "‘t’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        18
      ],
      "mod_code": [
        "int f = - 1 , maxd = - 1 ;",
        "int t = 0 ;"
      ],
      "err_line": 13,
      "err_msg": "‘t’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        18,
        14
      ],
      "mod_code": [
        "int f = - 1 , maxd = - 1 ;",
        "int t = 0 ;",
        "continue continue ;"
      ],
      "err_line": 13,
      "err_msg": "‘t’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        18,
        14,
        22
      ],
      "mod_code": [
        "int f = - 1 , maxd = - 1 ;",
        "int t = 0 ;",
        "continue continue ;",
        "while ( f == 1 )"
      ],
      "err_line": 13,
      "err_msg": "‘t’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        18,
        22
      ],
      "mod_code": [
        "int f = - 1 , maxd = - 1 ;",
        "int t = 0 ;",
        "while ( f == 1 )"
      ],
      "err_line": 13,
      "err_msg": "‘t’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        14
      ],
      "mod_code": [
        "int f = - 1 , maxd = - 1 ;",
        "continue continue ;"
      ],
      "err_line": 13,
      "err_msg": "‘t’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        14,
        22
      ],
      "mod_code": [
        "int f = - 1 , maxd = - 1 ;",
        "continue continue ;",
        "while ( f == 1 )"
      ],
      "err_line": 13,
      "err_msg": "‘t’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        22
      ],
      "mod_code": [
        "int f = - 1 , maxd = - 1 ;",
        "while ( f == 1 )"
      ],
      "err_line": 13,
      "err_msg": "‘t’ was not declared in this scope"
    },
    {
      "mod_line": [
        10,
        18,
        14
      ],
      "mod_code": [
        "if ( s [ j ] == 0 ) f = 1 ;",
        "int t = 0 ;",
        "continue continue ;"
      ],
      "err_line": 14,
      "err_msg": "expected ‘;’ before ‘continue’"
    },
    {
      "mod_line": [
        10,
        18,
        14,
        22
      ],
      "mod_code": [
        "if ( s [ j ] == 0 ) f = 1 ;",
        "int t = 0 ;",
        "continue continue ;",
        "while ( f == 1 )"
      ],
      "err_line": 14,
      "err_msg": "expected ‘;’ before ‘continue’"
    },
    {
      "mod_line": [
        10,
        14
      ],
      "mod_code": [
        "if ( s [ j ] == 0 ) f = 1 ;",
        "continue continue ;"
      ],
      "err_line": 14,
      "err_msg": "expected ‘;’ before ‘continue’"
    },
    {
      "mod_line": [
        10,
        14,
        22
      ],
      "mod_code": [
        "if ( s [ j ] == 0 ) f = 1 ;",
        "continue continue ;",
        "while ( f == 1 )"
      ],
      "err_line": 14,
      "err_msg": "expected ‘;’ before ‘continue’"
    },
    {
      "mod_line": [
        18,
        14
      ],
      "mod_code": [
        "int t = 0 ;",
        "continue continue ;"
      ],
      "err_line": 14,
      "err_msg": "expected ‘;’ before ‘continue’"
    },
    {
      "mod_line": [
        18,
        14,
        22
      ],
      "mod_code": [
        "int t = 0 ;",
        "continue continue ;",
        "while ( f == 1 )"
      ],
      "err_line": 14,
      "err_msg": "expected ‘;’ before ‘continue’"
    },
    {
      "mod_line": [
        14,
        22
      ],
      "mod_code": [
        "continue continue ;",
        "while ( f == 1 )"
      ],
      "err_line": 14,
      "err_msg": "expected ‘;’ before ‘continue’"
    }
  ]
}