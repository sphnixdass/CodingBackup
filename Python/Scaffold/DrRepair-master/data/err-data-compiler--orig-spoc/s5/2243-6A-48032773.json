{
  "meta": {
    "index": 2243,
    "hitid": "3ZUE82NE0AVEQYJ7PQBCNEGO91F8FX",
    "workerid": "AIWEXPJAU66D9",
    "probid": "6A",
    "subid": "48032773"
  },
  "lines": [
    {
      "line": 0,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 1,
      "text": "integer array arr with size 4 , integer flag = 0",
      "code": "int arr [ 4 ] , flag = 0 ;",
      "indent": 1
    },
    {
      "line": 2,
      "text": "read arr [ 0 ] , arr [ 1 ] , arr [ 2 ] and arr [ 3 ]",
      "code": "cin >> arr [ 0 ] >> arr [ 1 ] >> arr [ 2 ] >> arr [ 3 ] ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "sort arr",
      "code": "sort ( arr , arr + 4 ) ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "set flag to max of arr [ 0 ] + arr [ 1 ] - arr [ 2 ] and arr [ 1 ] + arr [ 2 ] - arr [ 3 ]",
      "code": "flag = max ( arr [ 0 ] + arr [ 1 ] - arr [ 2 ] , arr [ 1 ] + arr [ 2 ] - arr [ 3 ] ) ;",
      "indent": 1
    },
    {
      "line": 5,
      "text": "print \" TRIANGLE \" if flag is > 0 , \" IMPOSSIBLE \" if it is 1 and \" SEGMENT \" otherwise",
      "code": "puts ( flag > 0 ? \" TRIANGLE \" : flag ? \" IMPOSSIBLE \" : \" SEGMENT \" ) ;",
      "indent": 1
    },
    {
      "line": 6,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 7,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        3
      ],
      "mod_code": [
        "sort ( arr , arr + n ) ;"
      ],
      "err_line": 3,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        4
      ],
      "mod_code": [
        "flag = max ( arr [ 0 ] + arr [ 1 ] - arr [ 2 ] - arr [ 2 ] - arr [ 3 ] - arr [ 3 ] ) ;"
      ],
      "err_line": 4,
      "err_msg": "no matching function for call to ‘max(int)’"
    },
    {
      "mod_line": [
        1
      ],
      "mod_code": [
        "int arr [ 4 , flag = 0 ;"
      ],
      "err_line": 1,
      "err_msg": "expected ‘]’ before ‘,’ token"
    },
    {
      "mod_line": [
        2
      ],
      "mod_code": [
        "cout << arr [ 0 ] >> arr [ 1 ] >> arr [ 2 ] >> arr [ 3 ] ;"
      ],
      "err_line": 2,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::basic_ostream<char>’ and ‘int’)"
    },
    {
      "mod_line": [
        3
      ],
      "mod_code": [
        "sort ( arr . begin ( ) , arr . end ( ) ) ;"
      ],
      "err_line": 3,
      "err_msg": "request for member ‘begin’ in ‘arr’, which is of non-class type ‘int [4]’"
    },
    {
      "mod_line": [
        4
      ],
      "mod_code": [
        "flag = max ( arr [ 0 ] + arr [ 1 ] - arr [ 2 ] - arr [ 2 ] - arr [ 2 ] - arr [ 3 ] ) ;"
      ],
      "err_line": 4,
      "err_msg": "no matching function for call to ‘max(int)’"
    },
    {
      "mod_line": [
        3,
        4
      ],
      "mod_code": [
        "sort ( arr , arr + n ) ;",
        "flag = max ( arr [ 0 ] + arr [ 1 ] - arr [ 2 ] - arr [ 2 ] - arr [ 3 ] - arr [ 3 ] ) ;"
      ],
      "err_line": 3,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        4,
        5
      ],
      "mod_code": [
        "sort ( arr , arr + n ) ;",
        "flag = max ( arr [ 0 ] + arr [ 1 ] - arr [ 2 ] - arr [ 2 ] - arr [ 3 ] - arr [ 3 ] ) ;",
        "cout << ( flag == 0 ? \" TRIANGLE \" : \" TRIANGLE \" ) << \" : \" ;"
      ],
      "err_line": 3,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        4,
        5,
        1
      ],
      "mod_code": [
        "sort ( arr , arr + n ) ;",
        "flag = max ( arr [ 0 ] + arr [ 1 ] - arr [ 2 ] - arr [ 2 ] - arr [ 3 ] - arr [ 3 ] ) ;",
        "cout << ( flag == 0 ? \" TRIANGLE \" : \" TRIANGLE \" ) << \" : \" ;",
        "int arr [ 4 , flag = 0 ;"
      ],
      "err_line": 1,
      "err_msg": "expected ‘]’ before ‘,’ token"
    },
    {
      "mod_line": [
        3,
        4,
        5,
        2
      ],
      "mod_code": [
        "sort ( arr , arr + n ) ;",
        "flag = max ( arr [ 0 ] + arr [ 1 ] - arr [ 2 ] - arr [ 2 ] - arr [ 3 ] - arr [ 3 ] ) ;",
        "cout << ( flag == 0 ? \" TRIANGLE \" : \" TRIANGLE \" ) << \" : \" ;",
        "cout << arr [ 0 ] >> arr [ 1 ] >> arr [ 2 ] >> arr [ 3 ] ;"
      ],
      "err_line": 2,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::basic_ostream<char>’ and ‘int’)"
    },
    {
      "mod_line": [
        3,
        4,
        1
      ],
      "mod_code": [
        "sort ( arr , arr + n ) ;",
        "flag = max ( arr [ 0 ] + arr [ 1 ] - arr [ 2 ] - arr [ 2 ] - arr [ 3 ] - arr [ 3 ] ) ;",
        "int arr [ 4 , flag = 0 ;"
      ],
      "err_line": 1,
      "err_msg": "expected ‘]’ before ‘,’ token"
    },
    {
      "mod_line": [
        3,
        4,
        1,
        2
      ],
      "mod_code": [
        "sort ( arr , arr + n ) ;",
        "flag = max ( arr [ 0 ] + arr [ 1 ] - arr [ 2 ] - arr [ 2 ] - arr [ 3 ] - arr [ 3 ] ) ;",
        "int arr [ 4 , flag = 0 ;",
        "cout << arr [ 0 ] >> arr [ 1 ] >> arr [ 2 ] >> arr [ 3 ] ;"
      ],
      "err_line": 1,
      "err_msg": "expected ‘]’ before ‘,’ token"
    },
    {
      "mod_line": [
        3,
        4,
        2
      ],
      "mod_code": [
        "sort ( arr , arr + n ) ;",
        "flag = max ( arr [ 0 ] + arr [ 1 ] - arr [ 2 ] - arr [ 2 ] - arr [ 3 ] - arr [ 3 ] ) ;",
        "cout << arr [ 0 ] >> arr [ 1 ] >> arr [ 2 ] >> arr [ 3 ] ;"
      ],
      "err_line": 2,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::basic_ostream<char>’ and ‘int’)"
    },
    {
      "mod_line": [
        3,
        5
      ],
      "mod_code": [
        "sort ( arr , arr + n ) ;",
        "cout << ( flag == 0 ? \" TRIANGLE \" : \" TRIANGLE \" ) << \" : \" ;"
      ],
      "err_line": 3,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        5,
        1
      ],
      "mod_code": [
        "sort ( arr , arr + n ) ;",
        "cout << ( flag == 0 ? \" TRIANGLE \" : \" TRIANGLE \" ) << \" : \" ;",
        "int arr [ 4 , flag = 0 ;"
      ],
      "err_line": 1,
      "err_msg": "expected ‘]’ before ‘,’ token"
    },
    {
      "mod_line": [
        3,
        5,
        1,
        2
      ],
      "mod_code": [
        "sort ( arr , arr + n ) ;",
        "cout << ( flag == 0 ? \" TRIANGLE \" : \" TRIANGLE \" ) << \" : \" ;",
        "int arr [ 4 , flag = 0 ;",
        "cout << arr [ 0 ] >> arr [ 1 ] >> arr [ 2 ] >> arr [ 3 ] ;"
      ],
      "err_line": 1,
      "err_msg": "expected ‘]’ before ‘,’ token"
    },
    {
      "mod_line": [
        3,
        5,
        2
      ],
      "mod_code": [
        "sort ( arr , arr + n ) ;",
        "cout << ( flag == 0 ? \" TRIANGLE \" : \" TRIANGLE \" ) << \" : \" ;",
        "cout << arr [ 0 ] >> arr [ 1 ] >> arr [ 2 ] >> arr [ 3 ] ;"
      ],
      "err_line": 2,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::basic_ostream<char>’ and ‘int’)"
    },
    {
      "mod_line": [
        3,
        1
      ],
      "mod_code": [
        "sort ( arr , arr + n ) ;",
        "int arr [ 4 , flag = 0 ;"
      ],
      "err_line": 1,
      "err_msg": "expected ‘]’ before ‘,’ token"
    },
    {
      "mod_line": [
        3,
        1,
        2
      ],
      "mod_code": [
        "sort ( arr , arr + n ) ;",
        "int arr [ 4 , flag = 0 ;",
        "cout << arr [ 0 ] >> arr [ 1 ] >> arr [ 2 ] >> arr [ 3 ] ;"
      ],
      "err_line": 1,
      "err_msg": "expected ‘]’ before ‘,’ token"
    },
    {
      "mod_line": [
        3,
        2
      ],
      "mod_code": [
        "sort ( arr , arr + n ) ;",
        "cout << arr [ 0 ] >> arr [ 1 ] >> arr [ 2 ] >> arr [ 3 ] ;"
      ],
      "err_line": 2,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::basic_ostream<char>’ and ‘int’)"
    },
    {
      "mod_line": [
        4,
        5
      ],
      "mod_code": [
        "flag = max ( arr [ 0 ] + arr [ 1 ] - arr [ 2 ] - arr [ 2 ] - arr [ 3 ] - arr [ 3 ] ) ;",
        "cout << ( flag == 0 ? \" TRIANGLE \" : \" TRIANGLE \" ) << \" : \" ;"
      ],
      "err_line": 4,
      "err_msg": "no matching function for call to ‘max(int)’"
    },
    {
      "mod_line": [
        4,
        5,
        1
      ],
      "mod_code": [
        "flag = max ( arr [ 0 ] + arr [ 1 ] - arr [ 2 ] - arr [ 2 ] - arr [ 3 ] - arr [ 3 ] ) ;",
        "cout << ( flag == 0 ? \" TRIANGLE \" : \" TRIANGLE \" ) << \" : \" ;",
        "int arr [ 4 , flag = 0 ;"
      ],
      "err_line": 1,
      "err_msg": "expected ‘]’ before ‘,’ token"
    },
    {
      "mod_line": [
        4,
        5,
        1,
        3
      ],
      "mod_code": [
        "flag = max ( arr [ 0 ] + arr [ 1 ] - arr [ 2 ] - arr [ 2 ] - arr [ 3 ] - arr [ 3 ] ) ;",
        "cout << ( flag == 0 ? \" TRIANGLE \" : \" TRIANGLE \" ) << \" : \" ;",
        "int arr [ 4 , flag = 0 ;",
        "sort ( arr . begin ( ) , arr . end ( ) ) ;"
      ],
      "err_line": 1,
      "err_msg": "expected ‘]’ before ‘,’ token"
    },
    {
      "mod_line": [
        4,
        5,
        1,
        2
      ],
      "mod_code": [
        "flag = max ( arr [ 0 ] + arr [ 1 ] - arr [ 2 ] - arr [ 2 ] - arr [ 3 ] - arr [ 3 ] ) ;",
        "cout << ( flag == 0 ? \" TRIANGLE \" : \" TRIANGLE \" ) << \" : \" ;",
        "int arr [ 4 , flag = 0 ;",
        "cout << arr [ 0 ] >> arr [ 1 ] >> arr [ 2 ] >> arr [ 3 ] ;"
      ],
      "err_line": 1,
      "err_msg": "expected ‘]’ before ‘,’ token"
    },
    {
      "mod_line": [
        4,
        5,
        3
      ],
      "mod_code": [
        "flag = max ( arr [ 0 ] + arr [ 1 ] - arr [ 2 ] - arr [ 2 ] - arr [ 3 ] - arr [ 3 ] ) ;",
        "cout << ( flag == 0 ? \" TRIANGLE \" : \" TRIANGLE \" ) << \" : \" ;",
        "sort ( arr . begin ( ) , arr . end ( ) ) ;"
      ],
      "err_line": 3,
      "err_msg": "request for member ‘begin’ in ‘arr’, which is of non-class type ‘int [4]’"
    },
    {
      "mod_line": [
        4,
        5,
        3,
        2
      ],
      "mod_code": [
        "flag = max ( arr [ 0 ] + arr [ 1 ] - arr [ 2 ] - arr [ 2 ] - arr [ 3 ] - arr [ 3 ] ) ;",
        "cout << ( flag == 0 ? \" TRIANGLE \" : \" TRIANGLE \" ) << \" : \" ;",
        "sort ( arr . begin ( ) , arr . end ( ) ) ;",
        "cout << arr [ 0 ] >> arr [ 1 ] >> arr [ 2 ] >> arr [ 3 ] ;"
      ],
      "err_line": 2,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::basic_ostream<char>’ and ‘int’)"
    },
    {
      "mod_line": [
        4,
        5,
        2
      ],
      "mod_code": [
        "flag = max ( arr [ 0 ] + arr [ 1 ] - arr [ 2 ] - arr [ 2 ] - arr [ 3 ] - arr [ 3 ] ) ;",
        "cout << ( flag == 0 ? \" TRIANGLE \" : \" TRIANGLE \" ) << \" : \" ;",
        "cout << arr [ 0 ] >> arr [ 1 ] >> arr [ 2 ] >> arr [ 3 ] ;"
      ],
      "err_line": 2,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::basic_ostream<char>’ and ‘int’)"
    },
    {
      "mod_line": [
        4,
        1
      ],
      "mod_code": [
        "flag = max ( arr [ 0 ] + arr [ 1 ] - arr [ 2 ] - arr [ 2 ] - arr [ 3 ] - arr [ 3 ] ) ;",
        "int arr [ 4 , flag = 0 ;"
      ],
      "err_line": 1,
      "err_msg": "expected ‘]’ before ‘,’ token"
    },
    {
      "mod_line": [
        4,
        1,
        3
      ],
      "mod_code": [
        "flag = max ( arr [ 0 ] + arr [ 1 ] - arr [ 2 ] - arr [ 2 ] - arr [ 3 ] - arr [ 3 ] ) ;",
        "int arr [ 4 , flag = 0 ;",
        "sort ( arr . begin ( ) , arr . end ( ) ) ;"
      ],
      "err_line": 1,
      "err_msg": "expected ‘]’ before ‘,’ token"
    },
    {
      "mod_line": [
        4,
        1,
        3,
        2
      ],
      "mod_code": [
        "flag = max ( arr [ 0 ] + arr [ 1 ] - arr [ 2 ] - arr [ 2 ] - arr [ 3 ] - arr [ 3 ] ) ;",
        "int arr [ 4 , flag = 0 ;",
        "sort ( arr . begin ( ) , arr . end ( ) ) ;",
        "cout << arr [ 0 ] >> arr [ 1 ] >> arr [ 2 ] >> arr [ 3 ] ;"
      ],
      "err_line": 1,
      "err_msg": "expected ‘]’ before ‘,’ token"
    },
    {
      "mod_line": [
        4,
        1,
        2
      ],
      "mod_code": [
        "flag = max ( arr [ 0 ] + arr [ 1 ] - arr [ 2 ] - arr [ 2 ] - arr [ 3 ] - arr [ 3 ] ) ;",
        "int arr [ 4 , flag = 0 ;",
        "cout << arr [ 0 ] >> arr [ 1 ] >> arr [ 2 ] >> arr [ 3 ] ;"
      ],
      "err_line": 1,
      "err_msg": "expected ‘]’ before ‘,’ token"
    },
    {
      "mod_line": [
        4,
        3
      ],
      "mod_code": [
        "flag = max ( arr [ 0 ] + arr [ 1 ] - arr [ 2 ] - arr [ 2 ] - arr [ 3 ] - arr [ 3 ] ) ;",
        "sort ( arr . begin ( ) , arr . end ( ) ) ;"
      ],
      "err_line": 3,
      "err_msg": "request for member ‘begin’ in ‘arr’, which is of non-class type ‘int [4]’"
    },
    {
      "mod_line": [
        4,
        3,
        2
      ],
      "mod_code": [
        "flag = max ( arr [ 0 ] + arr [ 1 ] - arr [ 2 ] - arr [ 2 ] - arr [ 3 ] - arr [ 3 ] ) ;",
        "sort ( arr . begin ( ) , arr . end ( ) ) ;",
        "cout << arr [ 0 ] >> arr [ 1 ] >> arr [ 2 ] >> arr [ 3 ] ;"
      ],
      "err_line": 2,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::basic_ostream<char>’ and ‘int’)"
    },
    {
      "mod_line": [
        4,
        2
      ],
      "mod_code": [
        "flag = max ( arr [ 0 ] + arr [ 1 ] - arr [ 2 ] - arr [ 2 ] - arr [ 3 ] - arr [ 3 ] ) ;",
        "cout << arr [ 0 ] >> arr [ 1 ] >> arr [ 2 ] >> arr [ 3 ] ;"
      ],
      "err_line": 2,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::basic_ostream<char>’ and ‘int’)"
    },
    {
      "mod_line": [
        5,
        1
      ],
      "mod_code": [
        "cout << ( flag == 0 ? \" TRIANGLE \" : \" TRIANGLE \" ) << \" : \" ;",
        "int arr [ 4 , flag = 0 ;"
      ],
      "err_line": 1,
      "err_msg": "expected ‘]’ before ‘,’ token"
    },
    {
      "mod_line": [
        5,
        1,
        3
      ],
      "mod_code": [
        "cout << ( flag == 0 ? \" TRIANGLE \" : \" TRIANGLE \" ) << \" : \" ;",
        "int arr [ 4 , flag = 0 ;",
        "sort ( arr . begin ( ) , arr . end ( ) ) ;"
      ],
      "err_line": 1,
      "err_msg": "expected ‘]’ before ‘,’ token"
    },
    {
      "mod_line": [
        5,
        1,
        3,
        2
      ],
      "mod_code": [
        "cout << ( flag == 0 ? \" TRIANGLE \" : \" TRIANGLE \" ) << \" : \" ;",
        "int arr [ 4 , flag = 0 ;",
        "sort ( arr . begin ( ) , arr . end ( ) ) ;",
        "cout << arr [ 0 ] >> arr [ 1 ] >> arr [ 2 ] >> arr [ 3 ] ;"
      ],
      "err_line": 1,
      "err_msg": "expected ‘]’ before ‘,’ token"
    },
    {
      "mod_line": [
        5,
        1,
        2
      ],
      "mod_code": [
        "cout << ( flag == 0 ? \" TRIANGLE \" : \" TRIANGLE \" ) << \" : \" ;",
        "int arr [ 4 , flag = 0 ;",
        "cout << arr [ 0 ] >> arr [ 1 ] >> arr [ 2 ] >> arr [ 3 ] ;"
      ],
      "err_line": 1,
      "err_msg": "expected ‘]’ before ‘,’ token"
    },
    {
      "mod_line": [
        5,
        3
      ],
      "mod_code": [
        "cout << ( flag == 0 ? \" TRIANGLE \" : \" TRIANGLE \" ) << \" : \" ;",
        "sort ( arr . begin ( ) , arr . end ( ) ) ;"
      ],
      "err_line": 3,
      "err_msg": "request for member ‘begin’ in ‘arr’, which is of non-class type ‘int [4]’"
    },
    {
      "mod_line": [
        5,
        3,
        2
      ],
      "mod_code": [
        "cout << ( flag == 0 ? \" TRIANGLE \" : \" TRIANGLE \" ) << \" : \" ;",
        "sort ( arr . begin ( ) , arr . end ( ) ) ;",
        "cout << arr [ 0 ] >> arr [ 1 ] >> arr [ 2 ] >> arr [ 3 ] ;"
      ],
      "err_line": 2,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::basic_ostream<char>’ and ‘int’)"
    },
    {
      "mod_line": [
        5,
        2
      ],
      "mod_code": [
        "cout << ( flag == 0 ? \" TRIANGLE \" : \" TRIANGLE \" ) << \" : \" ;",
        "cout << arr [ 0 ] >> arr [ 1 ] >> arr [ 2 ] >> arr [ 3 ] ;"
      ],
      "err_line": 2,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::basic_ostream<char>’ and ‘int’)"
    },
    {
      "mod_line": [
        1,
        3
      ],
      "mod_code": [
        "int arr [ 4 , flag = 0 ;",
        "sort ( arr . begin ( ) , arr . end ( ) ) ;"
      ],
      "err_line": 1,
      "err_msg": "expected ‘]’ before ‘,’ token"
    },
    {
      "mod_line": [
        1,
        3,
        2
      ],
      "mod_code": [
        "int arr [ 4 , flag = 0 ;",
        "sort ( arr . begin ( ) , arr . end ( ) ) ;",
        "cout << arr [ 0 ] >> arr [ 1 ] >> arr [ 2 ] >> arr [ 3 ] ;"
      ],
      "err_line": 1,
      "err_msg": "expected ‘]’ before ‘,’ token"
    },
    {
      "mod_line": [
        1,
        2
      ],
      "mod_code": [
        "int arr [ 4 , flag = 0 ;",
        "cout << arr [ 0 ] >> arr [ 1 ] >> arr [ 2 ] >> arr [ 3 ] ;"
      ],
      "err_line": 1,
      "err_msg": "expected ‘]’ before ‘,’ token"
    },
    {
      "mod_line": [
        3,
        2
      ],
      "mod_code": [
        "sort ( arr . begin ( ) , arr . end ( ) ) ;",
        "cout << arr [ 0 ] >> arr [ 1 ] >> arr [ 2 ] >> arr [ 3 ] ;"
      ],
      "err_line": 2,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::basic_ostream<char>’ and ‘int’)"
    }
  ]
}