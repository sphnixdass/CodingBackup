{
  "meta": {
    "index": 621,
    "hitid": "3WUVMVA7OBXYE33MN0PXMX21BU8ZAF",
    "workerid": "AIWEXPJAU66D9",
    "probid": "25A",
    "subid": "48568559"
  },
  "lines": [
    {
      "line": 0,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 1,
      "text": "a is an array of integers of length 2000",
      "code": "int a [ 2000 ] ;",
      "indent": 1
    },
    {
      "line": 2,
      "text": "i , j , k , m , n , g and h = integers",
      "code": "int i , j , k , m , n , g , h ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "read n in a loop",
      "code": "while ( cin >> n )",
      "indent": 1
    },
    {
      "line": 4,
      "text": "set j and k to 0",
      "code": "j = k = 0 ;",
      "indent": 2
    },
    {
      "line": 5,
      "text": "for i = 0 to n exclusive",
      "code": "for ( i = 0 ; i < n ; i ++ )",
      "indent": 2
    },
    {
      "line": 6,
      "text": "read a [ i ]",
      "code": "cin >> a [ i ] ;",
      "indent": 3
    },
    {
      "line": 7,
      "text": "if a [ i ] is even",
      "code": "if ( a [ i ] % 2 == 0 )",
      "indent": 3
    },
    {
      "line": 8,
      "text": "increase j by one",
      "code": "j ++ ;",
      "indent": 4
    },
    {
      "line": 9,
      "text": "set value of g to i",
      "code": "g = i ;",
      "indent": 4
    },
    {
      "line": 10,
      "text": "else",
      "code": "else",
      "indent": 3
    },
    {
      "line": 11,
      "text": "increase k by one",
      "code": "k ++ ;",
      "indent": 4
    },
    {
      "line": 12,
      "text": "set value of h to i",
      "code": "h = i ;",
      "indent": 4
    },
    {
      "line": 13,
      "text": "DUMMY",
      "code": "}",
      "indent": 3
    },
    {
      "line": 14,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 15,
      "text": "if j = 1",
      "code": "if ( j == 1 )",
      "indent": 2
    },
    {
      "line": 16,
      "text": "print g + 1 and a new line",
      "code": "cout << g + 1 << endl ;",
      "indent": 3
    },
    {
      "line": 17,
      "text": "else",
      "code": "else",
      "indent": 2
    },
    {
      "line": 18,
      "text": "print h + 1 and a new line",
      "code": "cout << h + 1 << endl ;",
      "indent": 3
    },
    {
      "line": 19,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 20,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 21,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        9
      ],
      "mod_code": [
        "* g = i ;"
      ],
      "err_line": 9,
      "err_msg": "invalid type argument of unary ‘*’ (have ‘int’)"
    },
    {
      "mod_line": [
        12
      ],
      "mod_code": [
        "* h = i ;"
      ],
      "err_line": 12,
      "err_msg": "invalid type argument of unary ‘*’ (have ‘int’)"
    },
    {
      "mod_line": [
        15
      ],
      "mod_code": [
        "if ( j == 1 ) continue ;"
      ],
      "err_line": 17,
      "err_msg": "‘else’ without a previous ‘if’"
    },
    {
      "mod_line": [
        1,
        12
      ],
      "mod_code": [
        "char a [ 2000 ] ;",
        "* h = i ;"
      ],
      "err_line": 12,
      "err_msg": "invalid type argument of unary ‘*’ (have ‘int’)"
    },
    {
      "mod_line": [
        1,
        12,
        6
      ],
      "mod_code": [
        "char a [ 2000 ] ;",
        "* h = i ;",
        "cout << a [ i ] ;"
      ],
      "err_line": 12,
      "err_msg": "invalid type argument of unary ‘*’ (have ‘int’)"
    },
    {
      "mod_line": [
        1,
        12,
        6,
        3
      ],
      "mod_code": [
        "char a [ 2000 ] ;",
        "* h = i ;",
        "cout << a [ i ] ;",
        "while ( n >> n )"
      ],
      "err_line": 12,
      "err_msg": "invalid type argument of unary ‘*’ (have ‘int’)"
    },
    {
      "mod_line": [
        1,
        12,
        6,
        15
      ],
      "mod_code": [
        "char a [ 2000 ] ;",
        "* h = i ;",
        "cout << a [ i ] ;",
        "if ( j == 1 ) continue ;"
      ],
      "err_line": 12,
      "err_msg": "invalid type argument of unary ‘*’ (have ‘int’)"
    },
    {
      "mod_line": [
        1,
        12,
        6,
        9
      ],
      "mod_code": [
        "char a [ 2000 ] ;",
        "* h = i ;",
        "cout << a [ i ] ;",
        "* g = i ;"
      ],
      "err_line": 9,
      "err_msg": "invalid type argument of unary ‘*’ (have ‘int’)"
    },
    {
      "mod_line": [
        1,
        12,
        3
      ],
      "mod_code": [
        "char a [ 2000 ] ;",
        "* h = i ;",
        "while ( n >> n )"
      ],
      "err_line": 12,
      "err_msg": "invalid type argument of unary ‘*’ (have ‘int’)"
    },
    {
      "mod_line": [
        1,
        12,
        3,
        15
      ],
      "mod_code": [
        "char a [ 2000 ] ;",
        "* h = i ;",
        "while ( n >> n )",
        "if ( j == 1 ) continue ;"
      ],
      "err_line": 12,
      "err_msg": "invalid type argument of unary ‘*’ (have ‘int’)"
    },
    {
      "mod_line": [
        1,
        12,
        3,
        9
      ],
      "mod_code": [
        "char a [ 2000 ] ;",
        "* h = i ;",
        "while ( n >> n )",
        "* g = i ;"
      ],
      "err_line": 9,
      "err_msg": "invalid type argument of unary ‘*’ (have ‘int’)"
    },
    {
      "mod_line": [
        1,
        12,
        15
      ],
      "mod_code": [
        "char a [ 2000 ] ;",
        "* h = i ;",
        "if ( j == 1 ) continue ;"
      ],
      "err_line": 12,
      "err_msg": "invalid type argument of unary ‘*’ (have ‘int’)"
    },
    {
      "mod_line": [
        1,
        12,
        15,
        9
      ],
      "mod_code": [
        "char a [ 2000 ] ;",
        "* h = i ;",
        "if ( j == 1 ) continue ;",
        "* g = i ;"
      ],
      "err_line": 9,
      "err_msg": "invalid type argument of unary ‘*’ (have ‘int’)"
    },
    {
      "mod_line": [
        1,
        12,
        9
      ],
      "mod_code": [
        "char a [ 2000 ] ;",
        "* h = i ;",
        "* g = i ;"
      ],
      "err_line": 9,
      "err_msg": "invalid type argument of unary ‘*’ (have ‘int’)"
    },
    {
      "mod_line": [
        1,
        6,
        3,
        15
      ],
      "mod_code": [
        "char a [ 2000 ] ;",
        "cout << a [ i ] ;",
        "while ( n >> n )",
        "if ( j == 1 ) continue ;"
      ],
      "err_line": 17,
      "err_msg": "‘else’ without a previous ‘if’"
    },
    {
      "mod_line": [
        1,
        6,
        3,
        9
      ],
      "mod_code": [
        "char a [ 2000 ] ;",
        "cout << a [ i ] ;",
        "while ( n >> n )",
        "* g = i ;"
      ],
      "err_line": 9,
      "err_msg": "invalid type argument of unary ‘*’ (have ‘int’)"
    },
    {
      "mod_line": [
        1,
        6,
        15
      ],
      "mod_code": [
        "char a [ 2000 ] ;",
        "cout << a [ i ] ;",
        "if ( j == 1 ) continue ;"
      ],
      "err_line": 17,
      "err_msg": "‘else’ without a previous ‘if’"
    },
    {
      "mod_line": [
        1,
        6,
        15,
        9
      ],
      "mod_code": [
        "char a [ 2000 ] ;",
        "cout << a [ i ] ;",
        "if ( j == 1 ) continue ;",
        "* g = i ;"
      ],
      "err_line": 9,
      "err_msg": "invalid type argument of unary ‘*’ (have ‘int’)"
    },
    {
      "mod_line": [
        1,
        6,
        9
      ],
      "mod_code": [
        "char a [ 2000 ] ;",
        "cout << a [ i ] ;",
        "* g = i ;"
      ],
      "err_line": 9,
      "err_msg": "invalid type argument of unary ‘*’ (have ‘int’)"
    },
    {
      "mod_line": [
        1,
        3,
        15
      ],
      "mod_code": [
        "char a [ 2000 ] ;",
        "while ( n >> n )",
        "if ( j == 1 ) continue ;"
      ],
      "err_line": 17,
      "err_msg": "‘else’ without a previous ‘if’"
    },
    {
      "mod_line": [
        1,
        3,
        15,
        9
      ],
      "mod_code": [
        "char a [ 2000 ] ;",
        "while ( n >> n )",
        "if ( j == 1 ) continue ;",
        "* g = i ;"
      ],
      "err_line": 9,
      "err_msg": "invalid type argument of unary ‘*’ (have ‘int’)"
    },
    {
      "mod_line": [
        1,
        3,
        9
      ],
      "mod_code": [
        "char a [ 2000 ] ;",
        "while ( n >> n )",
        "* g = i ;"
      ],
      "err_line": 9,
      "err_msg": "invalid type argument of unary ‘*’ (have ‘int’)"
    },
    {
      "mod_line": [
        1,
        15
      ],
      "mod_code": [
        "char a [ 2000 ] ;",
        "if ( j == 1 ) continue ;"
      ],
      "err_line": 17,
      "err_msg": "‘else’ without a previous ‘if’"
    },
    {
      "mod_line": [
        1,
        15,
        9
      ],
      "mod_code": [
        "char a [ 2000 ] ;",
        "if ( j == 1 ) continue ;",
        "* g = i ;"
      ],
      "err_line": 9,
      "err_msg": "invalid type argument of unary ‘*’ (have ‘int’)"
    },
    {
      "mod_line": [
        1,
        9
      ],
      "mod_code": [
        "char a [ 2000 ] ;",
        "* g = i ;"
      ],
      "err_line": 9,
      "err_msg": "invalid type argument of unary ‘*’ (have ‘int’)"
    },
    {
      "mod_line": [
        12,
        6
      ],
      "mod_code": [
        "* h = i ;",
        "cout << a [ i ] ;"
      ],
      "err_line": 12,
      "err_msg": "invalid type argument of unary ‘*’ (have ‘int’)"
    },
    {
      "mod_line": [
        12,
        6,
        3
      ],
      "mod_code": [
        "* h = i ;",
        "cout << a [ i ] ;",
        "while ( n >> n )"
      ],
      "err_line": 12,
      "err_msg": "invalid type argument of unary ‘*’ (have ‘int’)"
    },
    {
      "mod_line": [
        12,
        6,
        3,
        15
      ],
      "mod_code": [
        "* h = i ;",
        "cout << a [ i ] ;",
        "while ( n >> n )",
        "if ( j == 1 ) continue ;"
      ],
      "err_line": 12,
      "err_msg": "invalid type argument of unary ‘*’ (have ‘int’)"
    },
    {
      "mod_line": [
        12,
        6,
        3,
        9
      ],
      "mod_code": [
        "* h = i ;",
        "cout << a [ i ] ;",
        "while ( n >> n )",
        "* g = i ;"
      ],
      "err_line": 9,
      "err_msg": "invalid type argument of unary ‘*’ (have ‘int’)"
    },
    {
      "mod_line": [
        12,
        6,
        15
      ],
      "mod_code": [
        "* h = i ;",
        "cout << a [ i ] ;",
        "if ( j == 1 ) continue ;"
      ],
      "err_line": 12,
      "err_msg": "invalid type argument of unary ‘*’ (have ‘int’)"
    },
    {
      "mod_line": [
        12,
        6,
        15,
        9
      ],
      "mod_code": [
        "* h = i ;",
        "cout << a [ i ] ;",
        "if ( j == 1 ) continue ;",
        "* g = i ;"
      ],
      "err_line": 9,
      "err_msg": "invalid type argument of unary ‘*’ (have ‘int’)"
    },
    {
      "mod_line": [
        12,
        6,
        9
      ],
      "mod_code": [
        "* h = i ;",
        "cout << a [ i ] ;",
        "* g = i ;"
      ],
      "err_line": 9,
      "err_msg": "invalid type argument of unary ‘*’ (have ‘int’)"
    },
    {
      "mod_line": [
        12,
        3
      ],
      "mod_code": [
        "* h = i ;",
        "while ( n >> n )"
      ],
      "err_line": 12,
      "err_msg": "invalid type argument of unary ‘*’ (have ‘int’)"
    },
    {
      "mod_line": [
        12,
        3,
        15
      ],
      "mod_code": [
        "* h = i ;",
        "while ( n >> n )",
        "if ( j == 1 ) continue ;"
      ],
      "err_line": 12,
      "err_msg": "invalid type argument of unary ‘*’ (have ‘int’)"
    },
    {
      "mod_line": [
        12,
        3,
        15,
        9
      ],
      "mod_code": [
        "* h = i ;",
        "while ( n >> n )",
        "if ( j == 1 ) continue ;",
        "* g = i ;"
      ],
      "err_line": 9,
      "err_msg": "invalid type argument of unary ‘*’ (have ‘int’)"
    },
    {
      "mod_line": [
        12,
        3,
        9
      ],
      "mod_code": [
        "* h = i ;",
        "while ( n >> n )",
        "* g = i ;"
      ],
      "err_line": 9,
      "err_msg": "invalid type argument of unary ‘*’ (have ‘int’)"
    },
    {
      "mod_line": [
        12,
        15
      ],
      "mod_code": [
        "* h = i ;",
        "if ( j == 1 ) continue ;"
      ],
      "err_line": 12,
      "err_msg": "invalid type argument of unary ‘*’ (have ‘int’)"
    },
    {
      "mod_line": [
        12,
        15,
        9
      ],
      "mod_code": [
        "* h = i ;",
        "if ( j == 1 ) continue ;",
        "* g = i ;"
      ],
      "err_line": 9,
      "err_msg": "invalid type argument of unary ‘*’ (have ‘int’)"
    },
    {
      "mod_line": [
        12,
        9
      ],
      "mod_code": [
        "* h = i ;",
        "* g = i ;"
      ],
      "err_line": 9,
      "err_msg": "invalid type argument of unary ‘*’ (have ‘int’)"
    },
    {
      "mod_line": [
        6,
        3,
        15
      ],
      "mod_code": [
        "cout << a [ i ] ;",
        "while ( n >> n )",
        "if ( j == 1 ) continue ;"
      ],
      "err_line": 17,
      "err_msg": "‘else’ without a previous ‘if’"
    },
    {
      "mod_line": [
        6,
        3,
        15,
        9
      ],
      "mod_code": [
        "cout << a [ i ] ;",
        "while ( n >> n )",
        "if ( j == 1 ) continue ;",
        "* g = i ;"
      ],
      "err_line": 9,
      "err_msg": "invalid type argument of unary ‘*’ (have ‘int’)"
    },
    {
      "mod_line": [
        6,
        3,
        9
      ],
      "mod_code": [
        "cout << a [ i ] ;",
        "while ( n >> n )",
        "* g = i ;"
      ],
      "err_line": 9,
      "err_msg": "invalid type argument of unary ‘*’ (have ‘int’)"
    },
    {
      "mod_line": [
        6,
        15
      ],
      "mod_code": [
        "cout << a [ i ] ;",
        "if ( j == 1 ) continue ;"
      ],
      "err_line": 17,
      "err_msg": "‘else’ without a previous ‘if’"
    },
    {
      "mod_line": [
        6,
        15,
        9
      ],
      "mod_code": [
        "cout << a [ i ] ;",
        "if ( j == 1 ) continue ;",
        "* g = i ;"
      ],
      "err_line": 9,
      "err_msg": "invalid type argument of unary ‘*’ (have ‘int’)"
    },
    {
      "mod_line": [
        6,
        9
      ],
      "mod_code": [
        "cout << a [ i ] ;",
        "* g = i ;"
      ],
      "err_line": 9,
      "err_msg": "invalid type argument of unary ‘*’ (have ‘int’)"
    },
    {
      "mod_line": [
        3,
        15
      ],
      "mod_code": [
        "while ( n >> n )",
        "if ( j == 1 ) continue ;"
      ],
      "err_line": 17,
      "err_msg": "‘else’ without a previous ‘if’"
    },
    {
      "mod_line": [
        3,
        15,
        9
      ],
      "mod_code": [
        "while ( n >> n )",
        "if ( j == 1 ) continue ;",
        "* g = i ;"
      ],
      "err_line": 9,
      "err_msg": "invalid type argument of unary ‘*’ (have ‘int’)"
    },
    {
      "mod_line": [
        3,
        9
      ],
      "mod_code": [
        "while ( n >> n )",
        "* g = i ;"
      ],
      "err_line": 9,
      "err_msg": "invalid type argument of unary ‘*’ (have ‘int’)"
    },
    {
      "mod_line": [
        15,
        9
      ],
      "mod_code": [
        "if ( j == 1 ) continue ;",
        "* g = i ;"
      ],
      "err_line": 9,
      "err_msg": "invalid type argument of unary ‘*’ (have ‘int’)"
    }
  ]
}