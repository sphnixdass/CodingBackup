{
  "meta": {
    "index": 1209,
    "hitid": "3P888QFVX3OE2FWWANB2WZA2VN9QON",
    "workerid": "AIWEXPJAU66D9",
    "probid": "870A",
    "subid": "49098653"
  },
  "lines": [
    {
      "line": 0,
      "text": "void function solve",
      "code": "void solve ( )",
      "indent": 0
    },
    {
      "line": 1,
      "text": "declare integers n and m",
      "code": "int n , m ;",
      "indent": 1
    },
    {
      "line": 2,
      "text": "read n and m",
      "code": "cin >> n >> m ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "crea vectors of integers vn with size n and vm with size m",
      "code": "vector < int > vn ( n ) , vm ( m ) ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "for i = 0 to n exclusive read vn [ i ]",
      "code": "for ( int i = 0 ; i < n ; i ++ ) cin >> vn [ i ] ;",
      "indent": 1
    },
    {
      "line": 5,
      "text": "for i = 0 to m exclusive read vm [ i ]",
      "code": "for ( int i = 0 ; i < m ; i ++ ) cin >> vm [ i ] ;",
      "indent": 1
    },
    {
      "line": 6,
      "text": "declare integer res = 100000",
      "code": "int res = 100000 ;",
      "indent": 1
    },
    {
      "line": 7,
      "text": "for i = 0 to n exclusive",
      "code": "for ( int i = 0 ; i < n ; i ++ )",
      "indent": 1
    },
    {
      "line": 8,
      "text": "for j = 0 to m exclusive",
      "code": "for ( int j = 0 ; j < m ; j ++ )",
      "indent": 2
    },
    {
      "line": 9,
      "text": "if vn [ i ] = vm [ j ]",
      "code": "if ( vn [ i ] == vm [ j ] )",
      "indent": 3
    },
    {
      "line": 10,
      "text": "assign value of min of res and vn [ i ] to res",
      "code": "res = min ( res , vn [ i ] ) ;",
      "indent": 4
    },
    {
      "line": 11,
      "text": "else",
      "code": "else",
      "indent": 3
    },
    {
      "line": 12,
      "text": "assign value of min of res and vn [ i ] * 10 + vm [ j ] to res",
      "code": "res = min ( res , vn [ i ] * 10 + vm [ j ] ) ;",
      "indent": 4
    },
    {
      "line": 13,
      "text": "assign value of min of res and vm [ j ] * 10 + vn [ i ] to res",
      "code": "res = min ( res , vm [ j ] * 10 + vn [ i ] ) ;",
      "indent": 4
    },
    {
      "line": 14,
      "text": "DUMMY",
      "code": "}",
      "indent": 3
    },
    {
      "line": 15,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 16,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 17,
      "text": "print res",
      "code": "cout << res << endl ;",
      "indent": 1
    },
    {
      "line": 18,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    },
    {
      "line": 19,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 20,
      "text": "declare integer t = 1",
      "code": "int t = 1 ;",
      "indent": 1
    },
    {
      "line": 21,
      "text": "decrementing t in a loop while it is > 0 , call solve ( )",
      "code": "while ( t -- ) { solve ( ) ; }",
      "indent": 1
    },
    {
      "line": 22,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 23,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        0
      ],
      "mod_code": [
        "void solve ( ) { }"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        3
      ],
      "mod_code": [
        "vector < int > vn ( n , vm ) ;"
      ],
      "err_line": 3,
      "err_msg": "‘vm’ was not declared in this scope"
    },
    {
      "mod_line": [
        6
      ],
      "mod_code": [
        "long long res = 100000 ;"
      ],
      "err_line": 10,
      "err_msg": "no matching function for call to ‘min(long long int&, int&)’"
    },
    {
      "mod_line": [
        7
      ],
      "mod_code": [
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 7,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        8
      ],
      "mod_code": [
        "for ( j = 0 ; j < m ; j ++ )"
      ],
      "err_line": 8,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        9
      ],
      "mod_code": [
        "if ( vn [ i ] ] == vm [ j ] )"
      ],
      "err_line": 9,
      "err_msg": "expected ‘)’ before ‘]’ token"
    },
    {
      "mod_line": [
        7,
        12
      ],
      "mod_code": [
        "for ( i = 0 ; i < n ; i ++ )",
        "res = min ( res , vn [ i ] * 10 ) + vm [ j ] ;"
      ],
      "err_line": 7,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        7,
        12,
        0
      ],
      "mod_code": [
        "for ( i = 0 ; i < n ; i ++ )",
        "res = min ( res , vn [ i ] * 10 ) + vm [ j ] ;",
        "void solve ( ) { }"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        7,
        12,
        0,
        9
      ],
      "mod_code": [
        "for ( i = 0 ; i < n ; i ++ )",
        "res = min ( res , vn [ i ] * 10 ) + vm [ j ] ;",
        "void solve ( ) { }",
        "if ( vn [ i ] ] == vm [ j ] )"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        7,
        12,
        0,
        6
      ],
      "mod_code": [
        "for ( i = 0 ; i < n ; i ++ )",
        "res = min ( res , vn [ i ] * 10 ) + vm [ j ] ;",
        "void solve ( ) { }",
        "long long res = 100000 ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        7,
        12,
        0,
        13
      ],
      "mod_code": [
        "for ( i = 0 ; i < n ; i ++ )",
        "res = min ( res , vn [ i ] * 10 ) + vm [ j ] ;",
        "void solve ( ) { }",
        "res = min ( res , vm [ j ] * 10 ) + vn [ i ] ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        7,
        12,
        9
      ],
      "mod_code": [
        "for ( i = 0 ; i < n ; i ++ )",
        "res = min ( res , vn [ i ] * 10 ) + vm [ j ] ;",
        "if ( vn [ i ] ] == vm [ j ] )"
      ],
      "err_line": 7,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        7,
        12,
        9,
        6
      ],
      "mod_code": [
        "for ( i = 0 ; i < n ; i ++ )",
        "res = min ( res , vn [ i ] * 10 ) + vm [ j ] ;",
        "if ( vn [ i ] ] == vm [ j ] )",
        "long long res = 100000 ;"
      ],
      "err_line": 7,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        7,
        12,
        9,
        13
      ],
      "mod_code": [
        "for ( i = 0 ; i < n ; i ++ )",
        "res = min ( res , vn [ i ] * 10 ) + vm [ j ] ;",
        "if ( vn [ i ] ] == vm [ j ] )",
        "res = min ( res , vm [ j ] * 10 ) + vn [ i ] ;"
      ],
      "err_line": 7,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        7,
        12,
        6
      ],
      "mod_code": [
        "for ( i = 0 ; i < n ; i ++ )",
        "res = min ( res , vn [ i ] * 10 ) + vm [ j ] ;",
        "long long res = 100000 ;"
      ],
      "err_line": 7,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        7,
        12,
        6,
        13
      ],
      "mod_code": [
        "for ( i = 0 ; i < n ; i ++ )",
        "res = min ( res , vn [ i ] * 10 ) + vm [ j ] ;",
        "long long res = 100000 ;",
        "res = min ( res , vm [ j ] * 10 ) + vn [ i ] ;"
      ],
      "err_line": 7,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        7,
        12,
        13
      ],
      "mod_code": [
        "for ( i = 0 ; i < n ; i ++ )",
        "res = min ( res , vn [ i ] * 10 ) + vm [ j ] ;",
        "res = min ( res , vm [ j ] * 10 ) + vn [ i ] ;"
      ],
      "err_line": 7,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        7,
        0
      ],
      "mod_code": [
        "for ( i = 0 ; i < n ; i ++ )",
        "void solve ( ) { }"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        7,
        0,
        9
      ],
      "mod_code": [
        "for ( i = 0 ; i < n ; i ++ )",
        "void solve ( ) { }",
        "if ( vn [ i ] ] == vm [ j ] )"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        7,
        0,
        9,
        6
      ],
      "mod_code": [
        "for ( i = 0 ; i < n ; i ++ )",
        "void solve ( ) { }",
        "if ( vn [ i ] ] == vm [ j ] )",
        "long long res = 100000 ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        7,
        0,
        9,
        13
      ],
      "mod_code": [
        "for ( i = 0 ; i < n ; i ++ )",
        "void solve ( ) { }",
        "if ( vn [ i ] ] == vm [ j ] )",
        "res = min ( res , vm [ j ] * 10 ) + vn [ i ] ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        7,
        0,
        6
      ],
      "mod_code": [
        "for ( i = 0 ; i < n ; i ++ )",
        "void solve ( ) { }",
        "long long res = 100000 ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        7,
        0,
        6,
        13
      ],
      "mod_code": [
        "for ( i = 0 ; i < n ; i ++ )",
        "void solve ( ) { }",
        "long long res = 100000 ;",
        "res = min ( res , vm [ j ] * 10 ) + vn [ i ] ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        7,
        0,
        13
      ],
      "mod_code": [
        "for ( i = 0 ; i < n ; i ++ )",
        "void solve ( ) { }",
        "res = min ( res , vm [ j ] * 10 ) + vn [ i ] ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        7,
        9
      ],
      "mod_code": [
        "for ( i = 0 ; i < n ; i ++ )",
        "if ( vn [ i ] ] == vm [ j ] )"
      ],
      "err_line": 7,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        7,
        9,
        6
      ],
      "mod_code": [
        "for ( i = 0 ; i < n ; i ++ )",
        "if ( vn [ i ] ] == vm [ j ] )",
        "long long res = 100000 ;"
      ],
      "err_line": 7,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        7,
        9,
        6,
        13
      ],
      "mod_code": [
        "for ( i = 0 ; i < n ; i ++ )",
        "if ( vn [ i ] ] == vm [ j ] )",
        "long long res = 100000 ;",
        "res = min ( res , vm [ j ] * 10 ) + vn [ i ] ;"
      ],
      "err_line": 7,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        7,
        9,
        13
      ],
      "mod_code": [
        "for ( i = 0 ; i < n ; i ++ )",
        "if ( vn [ i ] ] == vm [ j ] )",
        "res = min ( res , vm [ j ] * 10 ) + vn [ i ] ;"
      ],
      "err_line": 7,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        7,
        6
      ],
      "mod_code": [
        "for ( i = 0 ; i < n ; i ++ )",
        "long long res = 100000 ;"
      ],
      "err_line": 7,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        7,
        6,
        13
      ],
      "mod_code": [
        "for ( i = 0 ; i < n ; i ++ )",
        "long long res = 100000 ;",
        "res = min ( res , vm [ j ] * 10 ) + vn [ i ] ;"
      ],
      "err_line": 7,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        7,
        13
      ],
      "mod_code": [
        "for ( i = 0 ; i < n ; i ++ )",
        "res = min ( res , vm [ j ] * 10 ) + vn [ i ] ;"
      ],
      "err_line": 7,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        12,
        0
      ],
      "mod_code": [
        "res = min ( res , vn [ i ] * 10 ) + vm [ j ] ;",
        "void solve ( ) { }"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        12,
        0,
        9
      ],
      "mod_code": [
        "res = min ( res , vn [ i ] * 10 ) + vm [ j ] ;",
        "void solve ( ) { }",
        "if ( vn [ i ] ] == vm [ j ] )"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        12,
        0,
        9,
        6
      ],
      "mod_code": [
        "res = min ( res , vn [ i ] * 10 ) + vm [ j ] ;",
        "void solve ( ) { }",
        "if ( vn [ i ] ] == vm [ j ] )",
        "long long res = 100000 ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        12,
        0,
        9,
        13
      ],
      "mod_code": [
        "res = min ( res , vn [ i ] * 10 ) + vm [ j ] ;",
        "void solve ( ) { }",
        "if ( vn [ i ] ] == vm [ j ] )",
        "res = min ( res , vm [ j ] * 10 ) + vn [ i ] ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        12,
        0,
        6
      ],
      "mod_code": [
        "res = min ( res , vn [ i ] * 10 ) + vm [ j ] ;",
        "void solve ( ) { }",
        "long long res = 100000 ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        12,
        0,
        6,
        13
      ],
      "mod_code": [
        "res = min ( res , vn [ i ] * 10 ) + vm [ j ] ;",
        "void solve ( ) { }",
        "long long res = 100000 ;",
        "res = min ( res , vm [ j ] * 10 ) + vn [ i ] ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        12,
        0,
        13
      ],
      "mod_code": [
        "res = min ( res , vn [ i ] * 10 ) + vm [ j ] ;",
        "void solve ( ) { }",
        "res = min ( res , vm [ j ] * 10 ) + vn [ i ] ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        12,
        9
      ],
      "mod_code": [
        "res = min ( res , vn [ i ] * 10 ) + vm [ j ] ;",
        "if ( vn [ i ] ] == vm [ j ] )"
      ],
      "err_line": 9,
      "err_msg": "expected ‘)’ before ‘]’ token"
    },
    {
      "mod_line": [
        12,
        9,
        6
      ],
      "mod_code": [
        "res = min ( res , vn [ i ] * 10 ) + vm [ j ] ;",
        "if ( vn [ i ] ] == vm [ j ] )",
        "long long res = 100000 ;"
      ],
      "err_line": 9,
      "err_msg": "expected ‘)’ before ‘]’ token"
    },
    {
      "mod_line": [
        12,
        9,
        6,
        13
      ],
      "mod_code": [
        "res = min ( res , vn [ i ] * 10 ) + vm [ j ] ;",
        "if ( vn [ i ] ] == vm [ j ] )",
        "long long res = 100000 ;",
        "res = min ( res , vm [ j ] * 10 ) + vn [ i ] ;"
      ],
      "err_line": 9,
      "err_msg": "expected ‘)’ before ‘]’ token"
    },
    {
      "mod_line": [
        12,
        9,
        13
      ],
      "mod_code": [
        "res = min ( res , vn [ i ] * 10 ) + vm [ j ] ;",
        "if ( vn [ i ] ] == vm [ j ] )",
        "res = min ( res , vm [ j ] * 10 ) + vn [ i ] ;"
      ],
      "err_line": 9,
      "err_msg": "expected ‘)’ before ‘]’ token"
    },
    {
      "mod_line": [
        12,
        6
      ],
      "mod_code": [
        "res = min ( res , vn [ i ] * 10 ) + vm [ j ] ;",
        "long long res = 100000 ;"
      ],
      "err_line": 10,
      "err_msg": "no matching function for call to ‘min(long long int&, int&)’"
    },
    {
      "mod_line": [
        12,
        6,
        13
      ],
      "mod_code": [
        "res = min ( res , vn [ i ] * 10 ) + vm [ j ] ;",
        "long long res = 100000 ;",
        "res = min ( res , vm [ j ] * 10 ) + vn [ i ] ;"
      ],
      "err_line": 10,
      "err_msg": "no matching function for call to ‘min(long long int&, int&)’"
    },
    {
      "mod_line": [
        0,
        9
      ],
      "mod_code": [
        "void solve ( ) { }",
        "if ( vn [ i ] ] == vm [ j ] )"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        0,
        9,
        6
      ],
      "mod_code": [
        "void solve ( ) { }",
        "if ( vn [ i ] ] == vm [ j ] )",
        "long long res = 100000 ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        0,
        9,
        6,
        13
      ],
      "mod_code": [
        "void solve ( ) { }",
        "if ( vn [ i ] ] == vm [ j ] )",
        "long long res = 100000 ;",
        "res = min ( res , vm [ j ] * 10 ) + vn [ i ] ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        0,
        9,
        13
      ],
      "mod_code": [
        "void solve ( ) { }",
        "if ( vn [ i ] ] == vm [ j ] )",
        "res = min ( res , vm [ j ] * 10 ) + vn [ i ] ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        0,
        6
      ],
      "mod_code": [
        "void solve ( ) { }",
        "long long res = 100000 ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        0,
        6,
        13
      ],
      "mod_code": [
        "void solve ( ) { }",
        "long long res = 100000 ;",
        "res = min ( res , vm [ j ] * 10 ) + vn [ i ] ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        0,
        13
      ],
      "mod_code": [
        "void solve ( ) { }",
        "res = min ( res , vm [ j ] * 10 ) + vn [ i ] ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        9,
        6
      ],
      "mod_code": [
        "if ( vn [ i ] ] == vm [ j ] )",
        "long long res = 100000 ;"
      ],
      "err_line": 9,
      "err_msg": "expected ‘)’ before ‘]’ token"
    },
    {
      "mod_line": [
        9,
        6,
        13
      ],
      "mod_code": [
        "if ( vn [ i ] ] == vm [ j ] )",
        "long long res = 100000 ;",
        "res = min ( res , vm [ j ] * 10 ) + vn [ i ] ;"
      ],
      "err_line": 9,
      "err_msg": "expected ‘)’ before ‘]’ token"
    },
    {
      "mod_line": [
        9,
        13
      ],
      "mod_code": [
        "if ( vn [ i ] ] == vm [ j ] )",
        "res = min ( res , vm [ j ] * 10 ) + vn [ i ] ;"
      ],
      "err_line": 9,
      "err_msg": "expected ‘)’ before ‘]’ token"
    },
    {
      "mod_line": [
        6,
        13
      ],
      "mod_code": [
        "long long res = 100000 ;",
        "res = min ( res , vm [ j ] * 10 ) + vn [ i ] ;"
      ],
      "err_line": 10,
      "err_msg": "no matching function for call to ‘min(long long int&, int&)’"
    }
  ]
}