{
  "meta": {
    "index": 43,
    "hitid": "3CZH926SIC8L1JW9IC1TOKFJWGM4ER",
    "workerid": "AIWEXPJAU66D9",
    "probid": "271A",
    "subid": "48988667"
  },
  "lines": [
    {
      "line": 0,
      "text": "declare integers a , b , c , d , k , l , m , n and i",
      "code": "int a , b , c , d , k , l , m , n , i ;",
      "indent": 0
    },
    {
      "line": 1,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 2,
      "text": "read n from the user input",
      "code": "cin >> n ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "for i from n + 1 to 9000000000000000000000000000000 exclusive",
      "code": "for ( i = n + 1 ; i < 9000000000000000000000000000000 ; i ++ )",
      "indent": 1
    },
    {
      "line": 4,
      "text": "assign i / 1000 to k",
      "code": "k = i / 1000 ;",
      "indent": 2
    },
    {
      "line": 5,
      "text": "assign the new value = i modulo 10 to c",
      "code": "c = i % 10 ;",
      "indent": 2
    },
    {
      "line": 6,
      "text": "change d to ( i modulo 100 ) / 10",
      "code": "d = ( i % 100 ) / 10 ;",
      "indent": 2
    },
    {
      "line": 7,
      "text": "assign the new value = ( i / 100 ) modulo % 10 to l",
      "code": "l = ( i / 100 ) % 10 ;",
      "indent": 2
    },
    {
      "line": 8,
      "text": "if k ! = c , d or l and c ! = d or l and d ! = l",
      "code": "if ( k != c && k != d && k != l && c != d && c != l && d != l )",
      "indent": 2
    },
    {
      "line": 9,
      "text": "print i to the standard output",
      "code": "cout << i << endl ;",
      "indent": 3
    },
    {
      "line": 10,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 3
    },
    {
      "line": 11,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 12,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 13,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        0
      ],
      "mod_code": [
        "int a , b , c , d , k , l , m , m , i ;"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘int m’"
    },
    {
      "mod_line": [
        8,
        0
      ],
      "mod_code": [
        "if ( k != c || d && l != d || c != d || d != l )",
        "int a , b , c , d , k , l , m , m , i ;"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘int m’"
    },
    {
      "mod_line": [
        8,
        0,
        5
      ],
      "mod_code": [
        "if ( k != c || d && l != d || c != d || d != l )",
        "int a , b , c , d , k , l , m , m , i ;",
        "c = i = i % 10 ;"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘int m’"
    },
    {
      "mod_line": [
        0,
        8
      ],
      "mod_code": [
        "int a , b , c , d , k , l , m , m , i ;",
        "if ( k != c || d || l != d || c != d || d != l )"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘int m’"
    },
    {
      "mod_line": [
        0,
        8,
        5
      ],
      "mod_code": [
        "int a , b , c , d , k , l , m , m , i ;",
        "if ( k != c || d || l != d || c != d || d != l )",
        "c = i = i % 10 ;"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘int m’"
    },
    {
      "mod_line": [
        0,
        5
      ],
      "mod_code": [
        "int a , b , c , d , k , l , m , m , i ;",
        "c = i = i % 10 ;"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘int m’"
    }
  ]
}