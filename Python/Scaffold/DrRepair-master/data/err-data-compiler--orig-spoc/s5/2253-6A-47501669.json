{
  "meta": {
    "index": 2253,
    "hitid": "37G6BXQPLQFSQOJ7G986RNGOR6LQE7",
    "workerid": "AIWEXPJAU66D9",
    "probid": "6A",
    "subid": "47501669"
  },
  "lines": [
    {
      "line": 0,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 1,
      "text": "create integer n with value 4 , and array of integers a with size 10",
      "code": "int n = 4 , a [ 10 ] ;",
      "indent": 1
    },
    {
      "line": 2,
      "text": "read n elements into a",
      "code": "for ( int i = 0 ; i < n ; i ++ ) cin >> a [ i ] ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "sort first n elements of a",
      "code": "sort ( a , a + n ) ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "if a [ 1 ] + a [ 2 ] is greater than a [ 3 ] or a [ 0 ] + a [ 1 ] is greater than a [ 2 ]",
      "code": "if ( ( a [ 1 ] + a [ 2 ] > a [ 3 ] ) || ( a [ 0 ] + a [ 1 ] > a [ 2 ] ) )",
      "indent": 1
    },
    {
      "line": 5,
      "text": "print \" TRIANGLE \" and a new line",
      "code": "cout << \" TRIANGLE \" << endl ;",
      "indent": 2
    },
    {
      "line": 6,
      "text": "else if ( a [ 1 ] + a [ 2 ] = a [ 3 ] ) or ( a [ 0 ] + a [ 1 ] = a [ 2 ] )",
      "code": "else if ( ( a [ 1 ] + a [ 2 ] == a [ 3 ] ) || ( a [ 0 ] + a [ 1 ] == a [ 2 ] ) )",
      "indent": 1
    },
    {
      "line": 7,
      "text": "print \" SEGMENT \" and a new line",
      "code": "cout << \" SEGMENT \" << endl ;",
      "indent": 2
    },
    {
      "line": 8,
      "text": "else",
      "code": "else",
      "indent": 1
    },
    {
      "line": 9,
      "text": "print \" IMPOSSIBLE \" and a new line",
      "code": "cout << \" IMPOSSIBLE \" << endl ;",
      "indent": 2
    },
    {
      "line": 10,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 11,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 12,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        1
      ],
      "mod_code": [
        "int n , a [ 10 ] , n ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int n’"
    },
    {
      "mod_line": [
        1
      ],
      "mod_code": [
        "int a [ 10 ] , a [ 10 ] ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int a [10]’"
    },
    {
      "mod_line": [
        3
      ],
      "mod_code": [
        "sort ( a . begin ( ) , a . n ) ;"
      ],
      "err_line": 3,
      "err_msg": "request for member ‘begin’ in ‘a’, which is of non-class type ‘int [10]’"
    },
    {
      "mod_line": [
        1,
        6
      ],
      "mod_code": [
        "int n , a [ 10 ] , n ;",
        "else if ( ( a [ 1 ] + a [ 2 ] + a [ 2 ] ) || ( a [ 0 ] + a [ 1 ] ) == a [ 2 ] )"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int n’"
    },
    {
      "mod_line": [
        1,
        6,
        7
      ],
      "mod_code": [
        "int n , a [ 10 ] , n ;",
        "else if ( ( a [ 1 ] + a [ 2 ] + a [ 2 ] ) || ( a [ 0 ] + a [ 1 ] ) == a [ 2 ] )",
        "cout << \" yes\\n \" << endl ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int n’"
    },
    {
      "mod_line": [
        1,
        6,
        7,
        3
      ],
      "mod_code": [
        "int n , a [ 10 ] , n ;",
        "else if ( ( a [ 1 ] + a [ 2 ] + a [ 2 ] ) || ( a [ 0 ] + a [ 1 ] ) == a [ 2 ] )",
        "cout << \" yes\\n \" << endl ;",
        "sort ( a . begin ( ) , a . n ) ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int n’"
    },
    {
      "mod_line": [
        1,
        6,
        7,
        5
      ],
      "mod_code": [
        "int n , a [ 10 ] , n ;",
        "else if ( ( a [ 1 ] + a [ 2 ] + a [ 2 ] ) || ( a [ 0 ] + a [ 1 ] ) == a [ 2 ] )",
        "cout << \" yes\\n \" << endl ;",
        "cout << \" yes\\n \" << endl ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int n’"
    },
    {
      "mod_line": [
        1,
        6,
        3
      ],
      "mod_code": [
        "int n , a [ 10 ] , n ;",
        "else if ( ( a [ 1 ] + a [ 2 ] + a [ 2 ] ) || ( a [ 0 ] + a [ 1 ] ) == a [ 2 ] )",
        "sort ( a . begin ( ) , a . n ) ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int n’"
    },
    {
      "mod_line": [
        1,
        6,
        3,
        5
      ],
      "mod_code": [
        "int n , a [ 10 ] , n ;",
        "else if ( ( a [ 1 ] + a [ 2 ] + a [ 2 ] ) || ( a [ 0 ] + a [ 1 ] ) == a [ 2 ] )",
        "sort ( a . begin ( ) , a . n ) ;",
        "cout << \" yes\\n \" << endl ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int n’"
    },
    {
      "mod_line": [
        1,
        6,
        5
      ],
      "mod_code": [
        "int n , a [ 10 ] , n ;",
        "else if ( ( a [ 1 ] + a [ 2 ] + a [ 2 ] ) || ( a [ 0 ] + a [ 1 ] ) == a [ 2 ] )",
        "cout << \" yes\\n \" << endl ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int n’"
    },
    {
      "mod_line": [
        1,
        7
      ],
      "mod_code": [
        "int n , a [ 10 ] , n ;",
        "cout << \" yes\\n \" << endl ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int n’"
    },
    {
      "mod_line": [
        1,
        7,
        3
      ],
      "mod_code": [
        "int n , a [ 10 ] , n ;",
        "cout << \" yes\\n \" << endl ;",
        "sort ( a . begin ( ) , a . n ) ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int n’"
    },
    {
      "mod_line": [
        1,
        7,
        3,
        5
      ],
      "mod_code": [
        "int n , a [ 10 ] , n ;",
        "cout << \" yes\\n \" << endl ;",
        "sort ( a . begin ( ) , a . n ) ;",
        "cout << \" yes\\n \" << endl ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int n’"
    },
    {
      "mod_line": [
        1,
        7,
        5
      ],
      "mod_code": [
        "int n , a [ 10 ] , n ;",
        "cout << \" yes\\n \" << endl ;",
        "cout << \" yes\\n \" << endl ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int n’"
    },
    {
      "mod_line": [
        1,
        3
      ],
      "mod_code": [
        "int n , a [ 10 ] , n ;",
        "sort ( a . begin ( ) , a . n ) ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int n’"
    },
    {
      "mod_line": [
        1,
        3,
        5
      ],
      "mod_code": [
        "int n , a [ 10 ] , n ;",
        "sort ( a . begin ( ) , a . n ) ;",
        "cout << \" yes\\n \" << endl ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int n’"
    },
    {
      "mod_line": [
        1,
        5
      ],
      "mod_code": [
        "int n , a [ 10 ] , n ;",
        "cout << \" yes\\n \" << endl ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int n’"
    },
    {
      "mod_line": [
        6,
        7,
        3
      ],
      "mod_code": [
        "else if ( ( a [ 1 ] + a [ 2 ] + a [ 2 ] ) || ( a [ 0 ] + a [ 1 ] ) == a [ 2 ] )",
        "cout << \" yes\\n \" << endl ;",
        "sort ( a . begin ( ) , a . n ) ;"
      ],
      "err_line": 3,
      "err_msg": "request for member ‘begin’ in ‘a’, which is of non-class type ‘int [10]’"
    },
    {
      "mod_line": [
        6,
        7,
        3,
        1
      ],
      "mod_code": [
        "else if ( ( a [ 1 ] + a [ 2 ] + a [ 2 ] ) || ( a [ 0 ] + a [ 1 ] ) == a [ 2 ] )",
        "cout << \" yes\\n \" << endl ;",
        "sort ( a . begin ( ) , a . n ) ;",
        "int a [ 10 ] , a [ 10 ] ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int a [10]’"
    },
    {
      "mod_line": [
        6,
        7,
        3,
        5
      ],
      "mod_code": [
        "else if ( ( a [ 1 ] + a [ 2 ] + a [ 2 ] ) || ( a [ 0 ] + a [ 1 ] ) == a [ 2 ] )",
        "cout << \" yes\\n \" << endl ;",
        "sort ( a . begin ( ) , a . n ) ;",
        "cout << \" yes\\n \" << endl ;"
      ],
      "err_line": 3,
      "err_msg": "request for member ‘begin’ in ‘a’, which is of non-class type ‘int [10]’"
    },
    {
      "mod_line": [
        6,
        7,
        1
      ],
      "mod_code": [
        "else if ( ( a [ 1 ] + a [ 2 ] + a [ 2 ] ) || ( a [ 0 ] + a [ 1 ] ) == a [ 2 ] )",
        "cout << \" yes\\n \" << endl ;",
        "int a [ 10 ] , a [ 10 ] ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int a [10]’"
    },
    {
      "mod_line": [
        6,
        7,
        1,
        5
      ],
      "mod_code": [
        "else if ( ( a [ 1 ] + a [ 2 ] + a [ 2 ] ) || ( a [ 0 ] + a [ 1 ] ) == a [ 2 ] )",
        "cout << \" yes\\n \" << endl ;",
        "int a [ 10 ] , a [ 10 ] ;",
        "cout << \" yes\\n \" << endl ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int a [10]’"
    },
    {
      "mod_line": [
        6,
        3
      ],
      "mod_code": [
        "else if ( ( a [ 1 ] + a [ 2 ] + a [ 2 ] ) || ( a [ 0 ] + a [ 1 ] ) == a [ 2 ] )",
        "sort ( a . begin ( ) , a . n ) ;"
      ],
      "err_line": 3,
      "err_msg": "request for member ‘begin’ in ‘a’, which is of non-class type ‘int [10]’"
    },
    {
      "mod_line": [
        6,
        3,
        1
      ],
      "mod_code": [
        "else if ( ( a [ 1 ] + a [ 2 ] + a [ 2 ] ) || ( a [ 0 ] + a [ 1 ] ) == a [ 2 ] )",
        "sort ( a . begin ( ) , a . n ) ;",
        "int a [ 10 ] , a [ 10 ] ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int a [10]’"
    },
    {
      "mod_line": [
        6,
        3,
        1,
        5
      ],
      "mod_code": [
        "else if ( ( a [ 1 ] + a [ 2 ] + a [ 2 ] ) || ( a [ 0 ] + a [ 1 ] ) == a [ 2 ] )",
        "sort ( a . begin ( ) , a . n ) ;",
        "int a [ 10 ] , a [ 10 ] ;",
        "cout << \" yes\\n \" << endl ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int a [10]’"
    },
    {
      "mod_line": [
        6,
        3,
        5
      ],
      "mod_code": [
        "else if ( ( a [ 1 ] + a [ 2 ] + a [ 2 ] ) || ( a [ 0 ] + a [ 1 ] ) == a [ 2 ] )",
        "sort ( a . begin ( ) , a . n ) ;",
        "cout << \" yes\\n \" << endl ;"
      ],
      "err_line": 3,
      "err_msg": "request for member ‘begin’ in ‘a’, which is of non-class type ‘int [10]’"
    },
    {
      "mod_line": [
        6,
        1
      ],
      "mod_code": [
        "else if ( ( a [ 1 ] + a [ 2 ] + a [ 2 ] ) || ( a [ 0 ] + a [ 1 ] ) == a [ 2 ] )",
        "int a [ 10 ] , a [ 10 ] ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int a [10]’"
    },
    {
      "mod_line": [
        6,
        1,
        5
      ],
      "mod_code": [
        "else if ( ( a [ 1 ] + a [ 2 ] + a [ 2 ] ) || ( a [ 0 ] + a [ 1 ] ) == a [ 2 ] )",
        "int a [ 10 ] , a [ 10 ] ;",
        "cout << \" yes\\n \" << endl ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int a [10]’"
    },
    {
      "mod_line": [
        7,
        3
      ],
      "mod_code": [
        "cout << \" yes\\n \" << endl ;",
        "sort ( a . begin ( ) , a . n ) ;"
      ],
      "err_line": 3,
      "err_msg": "request for member ‘begin’ in ‘a’, which is of non-class type ‘int [10]’"
    },
    {
      "mod_line": [
        7,
        3,
        1
      ],
      "mod_code": [
        "cout << \" yes\\n \" << endl ;",
        "sort ( a . begin ( ) , a . n ) ;",
        "int a [ 10 ] , a [ 10 ] ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int a [10]’"
    },
    {
      "mod_line": [
        7,
        3,
        1,
        5
      ],
      "mod_code": [
        "cout << \" yes\\n \" << endl ;",
        "sort ( a . begin ( ) , a . n ) ;",
        "int a [ 10 ] , a [ 10 ] ;",
        "cout << \" yes\\n \" << endl ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int a [10]’"
    },
    {
      "mod_line": [
        7,
        3,
        5
      ],
      "mod_code": [
        "cout << \" yes\\n \" << endl ;",
        "sort ( a . begin ( ) , a . n ) ;",
        "cout << \" yes\\n \" << endl ;"
      ],
      "err_line": 3,
      "err_msg": "request for member ‘begin’ in ‘a’, which is of non-class type ‘int [10]’"
    },
    {
      "mod_line": [
        7,
        1
      ],
      "mod_code": [
        "cout << \" yes\\n \" << endl ;",
        "int a [ 10 ] , a [ 10 ] ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int a [10]’"
    },
    {
      "mod_line": [
        7,
        1,
        5
      ],
      "mod_code": [
        "cout << \" yes\\n \" << endl ;",
        "int a [ 10 ] , a [ 10 ] ;",
        "cout << \" yes\\n \" << endl ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int a [10]’"
    },
    {
      "mod_line": [
        3,
        1
      ],
      "mod_code": [
        "sort ( a . begin ( ) , a . n ) ;",
        "int a [ 10 ] , a [ 10 ] ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int a [10]’"
    },
    {
      "mod_line": [
        3,
        1,
        5
      ],
      "mod_code": [
        "sort ( a . begin ( ) , a . n ) ;",
        "int a [ 10 ] , a [ 10 ] ;",
        "cout << \" yes\\n \" << endl ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int a [10]’"
    },
    {
      "mod_line": [
        3,
        5
      ],
      "mod_code": [
        "sort ( a . begin ( ) , a . n ) ;",
        "cout << \" yes\\n \" << endl ;"
      ],
      "err_line": 3,
      "err_msg": "request for member ‘begin’ in ‘a’, which is of non-class type ‘int [10]’"
    },
    {
      "mod_line": [
        1,
        5
      ],
      "mod_code": [
        "int a [ 10 ] , a [ 10 ] ;",
        "cout << \" yes\\n \" << endl ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int a [10]’"
    }
  ]
}