{
  "meta": {
    "index": 2187,
    "hitid": "385MDVINFC95L11L6JI3GSB2LHDWJM",
    "workerid": "A24WRPQYGMQLGF",
    "probid": "540A",
    "subid": "49029522"
  },
  "lines": [
    {
      "line": 0,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 1,
      "text": "n = integer",
      "code": "int n ;",
      "indent": 1
    },
    {
      "line": 2,
      "text": "a , b = string",
      "code": "string a , b ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "read n , a , b",
      "code": "cin >> n >> a >> b ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "hasil = long long = 0",
      "code": "long long hasil = 0 ;",
      "indent": 1
    },
    {
      "line": 5,
      "text": "for i = 0 to n exclusive",
      "code": "for ( int i = 0 ; i < n ; i ++ )",
      "indent": 1
    },
    {
      "line": 6,
      "text": "tmpA , tmpB = integer",
      "code": "int tmpA , tmpB ;",
      "indent": 2
    },
    {
      "line": 7,
      "text": "if a [ i ] < b [ i ]",
      "code": "if ( a [ i ] < b [ i ] )",
      "indent": 2
    },
    {
      "line": 8,
      "text": "tmpA = a [ i ] + 10",
      "code": "tmpA = a [ i ] + 10 ;",
      "indent": 3
    },
    {
      "line": 9,
      "text": "tmpB = b [ i ]",
      "code": "tmpB = b [ i ] ;",
      "indent": 3
    },
    {
      "line": 10,
      "text": "else",
      "code": "else",
      "indent": 2
    },
    {
      "line": 11,
      "text": "tmpA = a [ i ]",
      "code": "tmpA = a [ i ] ;",
      "indent": 3
    },
    {
      "line": 12,
      "text": "tmpB = b [ i ] + 10",
      "code": "tmpB = b [ i ] + 10 ;",
      "indent": 3
    },
    {
      "line": 13,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 14,
      "text": "hasil = hasil + lowever value between the absolute value of a [ i ] - b [ i ] and the absolute value between tmpA - tmpB",
      "code": "hasil += min ( abs ( a [ i ] - b [ i ] ) , abs ( tmpA - tmpB ) ) ;",
      "indent": 2
    },
    {
      "line": 15,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 16,
      "text": "print hasil",
      "code": "cout << hasil << endl ;",
      "indent": 1
    },
    {
      "line": 17,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        14
      ],
      "mod_code": [
        "int hasil = hasil + abs ( a [ i ] - b [ i ] , abs ( tmpA - tmpB ) ) ;"
      ],
      "err_line": 14,
      "err_msg": "no matching function for call to ‘abs(int, int)’"
    },
    {
      "mod_line": [
        2
      ],
      "mod_code": [
        "char a , b ;"
      ],
      "err_line": 7,
      "err_msg": "invalid types ‘char[int]’ for array subscript"
    },
    {
      "mod_line": [
        5
      ],
      "mod_code": [
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 5,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        6
      ],
      "mod_code": [
        "long long tmpA , tmpB ;"
      ],
      "err_line": 14,
      "err_msg": "no matching function for call to ‘min(int, long long int)’"
    },
    {
      "mod_line": [
        7
      ],
      "mod_code": [
        "if ( a [ i ] < b [ i ] ) a ++ ;"
      ],
      "err_line": 7,
      "err_msg": "no ‘operator++(int)’ declared for postfix ‘++’ [-fpermissive]"
    },
    {
      "mod_line": [
        14,
        6
      ],
      "mod_code": [
        "int hasil = hasil + abs ( a [ i ] - b [ i ] , abs ( tmpA - tmpB ) ) ;",
        "long long tmpA , tmpB ;"
      ],
      "err_line": 14,
      "err_msg": "no matching function for call to ‘abs(int, long long int)’"
    },
    {
      "mod_line": [
        14,
        6,
        2
      ],
      "mod_code": [
        "int hasil = hasil + abs ( a [ i ] - b [ i ] , abs ( tmpA - tmpB ) ) ;",
        "long long tmpA , tmpB ;",
        "char a , b ;"
      ],
      "err_line": 7,
      "err_msg": "invalid types ‘char[int]’ for array subscript"
    },
    {
      "mod_line": [
        14,
        6,
        2,
        8
      ],
      "mod_code": [
        "int hasil = hasil + abs ( a [ i ] - b [ i ] , abs ( tmpA - tmpB ) ) ;",
        "long long tmpA , tmpB ;",
        "char a , b ;",
        "tmpA += 10 + 10 ;"
      ],
      "err_line": 7,
      "err_msg": "invalid types ‘char[int]’ for array subscript"
    },
    {
      "mod_line": [
        14,
        6,
        2,
        11
      ],
      "mod_code": [
        "int hasil = hasil + abs ( a [ i ] - b [ i ] , abs ( tmpA - tmpB ) ) ;",
        "long long tmpA , tmpB ;",
        "char a , b ;",
        "int tmpA = a [ i ] ;"
      ],
      "err_line": 7,
      "err_msg": "invalid types ‘char[int]’ for array subscript"
    },
    {
      "mod_line": [
        14,
        6,
        8
      ],
      "mod_code": [
        "int hasil = hasil + abs ( a [ i ] - b [ i ] , abs ( tmpA - tmpB ) ) ;",
        "long long tmpA , tmpB ;",
        "tmpA += 10 + 10 ;"
      ],
      "err_line": 14,
      "err_msg": "no matching function for call to ‘abs(int, long long int)’"
    },
    {
      "mod_line": [
        14,
        6,
        8,
        11
      ],
      "mod_code": [
        "int hasil = hasil + abs ( a [ i ] - b [ i ] , abs ( tmpA - tmpB ) ) ;",
        "long long tmpA , tmpB ;",
        "tmpA += 10 + 10 ;",
        "int tmpA = a [ i ] ;"
      ],
      "err_line": 14,
      "err_msg": "no matching function for call to ‘abs(int, long long int)’"
    },
    {
      "mod_line": [
        14,
        6,
        11
      ],
      "mod_code": [
        "int hasil = hasil + abs ( a [ i ] - b [ i ] , abs ( tmpA - tmpB ) ) ;",
        "long long tmpA , tmpB ;",
        "int tmpA = a [ i ] ;"
      ],
      "err_line": 14,
      "err_msg": "no matching function for call to ‘abs(int, long long int)’"
    },
    {
      "mod_line": [
        14,
        2
      ],
      "mod_code": [
        "int hasil = hasil + abs ( a [ i ] - b [ i ] , abs ( tmpA - tmpB ) ) ;",
        "char a , b ;"
      ],
      "err_line": 7,
      "err_msg": "invalid types ‘char[int]’ for array subscript"
    },
    {
      "mod_line": [
        14,
        2,
        8
      ],
      "mod_code": [
        "int hasil = hasil + abs ( a [ i ] - b [ i ] , abs ( tmpA - tmpB ) ) ;",
        "char a , b ;",
        "tmpA += 10 + 10 ;"
      ],
      "err_line": 7,
      "err_msg": "invalid types ‘char[int]’ for array subscript"
    },
    {
      "mod_line": [
        14,
        2,
        8,
        11
      ],
      "mod_code": [
        "int hasil = hasil + abs ( a [ i ] - b [ i ] , abs ( tmpA - tmpB ) ) ;",
        "char a , b ;",
        "tmpA += 10 + 10 ;",
        "int tmpA = a [ i ] ;"
      ],
      "err_line": 7,
      "err_msg": "invalid types ‘char[int]’ for array subscript"
    },
    {
      "mod_line": [
        14,
        2,
        11
      ],
      "mod_code": [
        "int hasil = hasil + abs ( a [ i ] - b [ i ] , abs ( tmpA - tmpB ) ) ;",
        "char a , b ;",
        "int tmpA = a [ i ] ;"
      ],
      "err_line": 7,
      "err_msg": "invalid types ‘char[int]’ for array subscript"
    },
    {
      "mod_line": [
        14,
        8
      ],
      "mod_code": [
        "int hasil = hasil + abs ( a [ i ] - b [ i ] , abs ( tmpA - tmpB ) ) ;",
        "tmpA += 10 + 10 ;"
      ],
      "err_line": 14,
      "err_msg": "no matching function for call to ‘abs(int, int)’"
    },
    {
      "mod_line": [
        14,
        8,
        11
      ],
      "mod_code": [
        "int hasil = hasil + abs ( a [ i ] - b [ i ] , abs ( tmpA - tmpB ) ) ;",
        "tmpA += 10 + 10 ;",
        "int tmpA = a [ i ] ;"
      ],
      "err_line": 14,
      "err_msg": "no matching function for call to ‘abs(int, int)’"
    },
    {
      "mod_line": [
        14,
        11
      ],
      "mod_code": [
        "int hasil = hasil + abs ( a [ i ] - b [ i ] , abs ( tmpA - tmpB ) ) ;",
        "int tmpA = a [ i ] ;"
      ],
      "err_line": 14,
      "err_msg": "no matching function for call to ‘abs(int, int)’"
    },
    {
      "mod_line": [
        14,
        6,
        2
      ],
      "mod_code": [
        "long long int hasil = hasil + abs ( a [ i ] - b [ i ] ) , abs ( tmpA - tmpB ) ;",
        "long long tmpA , tmpB ;",
        "char a , b ;"
      ],
      "err_line": 7,
      "err_msg": "invalid types ‘char[int]’ for array subscript"
    },
    {
      "mod_line": [
        14,
        6,
        2,
        8
      ],
      "mod_code": [
        "long long int hasil = hasil + abs ( a [ i ] - b [ i ] ) , abs ( tmpA - tmpB ) ;",
        "long long tmpA , tmpB ;",
        "char a , b ;",
        "tmpA += 10 + 10 ;"
      ],
      "err_line": 7,
      "err_msg": "invalid types ‘char[int]’ for array subscript"
    },
    {
      "mod_line": [
        14,
        6,
        2,
        11
      ],
      "mod_code": [
        "long long int hasil = hasil + abs ( a [ i ] - b [ i ] ) , abs ( tmpA - tmpB ) ;",
        "long long tmpA , tmpB ;",
        "char a , b ;",
        "int tmpA = a [ i ] ;"
      ],
      "err_line": 7,
      "err_msg": "invalid types ‘char[int]’ for array subscript"
    },
    {
      "mod_line": [
        14,
        2
      ],
      "mod_code": [
        "long long int hasil = hasil + abs ( a [ i ] - b [ i ] ) , abs ( tmpA - tmpB ) ;",
        "char a , b ;"
      ],
      "err_line": 7,
      "err_msg": "invalid types ‘char[int]’ for array subscript"
    },
    {
      "mod_line": [
        14,
        2,
        8
      ],
      "mod_code": [
        "long long int hasil = hasil + abs ( a [ i ] - b [ i ] ) , abs ( tmpA - tmpB ) ;",
        "char a , b ;",
        "tmpA += 10 + 10 ;"
      ],
      "err_line": 7,
      "err_msg": "invalid types ‘char[int]’ for array subscript"
    },
    {
      "mod_line": [
        14,
        2,
        8,
        11
      ],
      "mod_code": [
        "long long int hasil = hasil + abs ( a [ i ] - b [ i ] ) , abs ( tmpA - tmpB ) ;",
        "char a , b ;",
        "tmpA += 10 + 10 ;",
        "int tmpA = a [ i ] ;"
      ],
      "err_line": 7,
      "err_msg": "invalid types ‘char[int]’ for array subscript"
    },
    {
      "mod_line": [
        14,
        2,
        11
      ],
      "mod_code": [
        "long long int hasil = hasil + abs ( a [ i ] - b [ i ] ) , abs ( tmpA - tmpB ) ;",
        "char a , b ;",
        "int tmpA = a [ i ] ;"
      ],
      "err_line": 7,
      "err_msg": "invalid types ‘char[int]’ for array subscript"
    },
    {
      "mod_line": [
        6,
        2
      ],
      "mod_code": [
        "long long tmpA , tmpB ;",
        "char a , b ;"
      ],
      "err_line": 7,
      "err_msg": "invalid types ‘char[int]’ for array subscript"
    },
    {
      "mod_line": [
        6,
        2,
        8
      ],
      "mod_code": [
        "long long tmpA , tmpB ;",
        "char a , b ;",
        "tmpA += 10 + 10 ;"
      ],
      "err_line": 7,
      "err_msg": "invalid types ‘char[int]’ for array subscript"
    },
    {
      "mod_line": [
        6,
        2,
        8,
        11
      ],
      "mod_code": [
        "long long tmpA , tmpB ;",
        "char a , b ;",
        "tmpA += 10 + 10 ;",
        "int tmpA = a [ i ] ;"
      ],
      "err_line": 7,
      "err_msg": "invalid types ‘char[int]’ for array subscript"
    },
    {
      "mod_line": [
        6,
        2,
        11
      ],
      "mod_code": [
        "long long tmpA , tmpB ;",
        "char a , b ;",
        "int tmpA = a [ i ] ;"
      ],
      "err_line": 7,
      "err_msg": "invalid types ‘char[int]’ for array subscript"
    },
    {
      "mod_line": [
        6,
        8
      ],
      "mod_code": [
        "long long tmpA , tmpB ;",
        "tmpA += 10 + 10 ;"
      ],
      "err_line": 14,
      "err_msg": "no matching function for call to ‘min(int, long long int)’"
    },
    {
      "mod_line": [
        6,
        8,
        11
      ],
      "mod_code": [
        "long long tmpA , tmpB ;",
        "tmpA += 10 + 10 ;",
        "int tmpA = a [ i ] ;"
      ],
      "err_line": 14,
      "err_msg": "no matching function for call to ‘min(int, long long int)’"
    },
    {
      "mod_line": [
        6,
        11
      ],
      "mod_code": [
        "long long tmpA , tmpB ;",
        "int tmpA = a [ i ] ;"
      ],
      "err_line": 14,
      "err_msg": "no matching function for call to ‘min(int, long long int)’"
    },
    {
      "mod_line": [
        2,
        8
      ],
      "mod_code": [
        "char a , b ;",
        "tmpA += 10 + 10 ;"
      ],
      "err_line": 7,
      "err_msg": "invalid types ‘char[int]’ for array subscript"
    },
    {
      "mod_line": [
        2,
        8,
        11
      ],
      "mod_code": [
        "char a , b ;",
        "tmpA += 10 + 10 ;",
        "int tmpA = a [ i ] ;"
      ],
      "err_line": 7,
      "err_msg": "invalid types ‘char[int]’ for array subscript"
    },
    {
      "mod_line": [
        2,
        11
      ],
      "mod_code": [
        "char a , b ;",
        "int tmpA = a [ i ] ;"
      ],
      "err_line": 7,
      "err_msg": "invalid types ‘char[int]’ for array subscript"
    }
  ]
}