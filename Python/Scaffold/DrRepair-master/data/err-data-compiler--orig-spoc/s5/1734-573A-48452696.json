{
  "meta": {
    "index": 1734,
    "hitid": "3W3RSPVVGSLYON0GE4FFEJ3X4Q5LUC",
    "workerid": "AIWEXPJAU66D9",
    "probid": "573A",
    "subid": "48452696"
  },
  "lines": [
    {
      "line": 0,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 1,
      "text": "declare new long long called n",
      "code": "long long n ;",
      "indent": 1
    },
    {
      "line": 2,
      "text": "read input to n",
      "code": "cin >> n ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "declare vector of long longs called a with size n",
      "code": "vector < long long > a ( n ) ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "in a for loop , change i from 0 to n exclusive , read the input to a [ i ] on each loop",
      "code": "for ( int i = 0 ; i < n ; i ++ ) cin >> a [ i ] ;",
      "indent": 1
    },
    {
      "line": 5,
      "text": "g is a new long long = a [ 0 ]",
      "code": "long long g = a [ 0 ] ;",
      "indent": 1
    },
    {
      "line": 6,
      "text": "start for loop from i = 1 to n exclusive , setting g to the result of __gcd ( a [ i ] , g ) on each iteration",
      "code": "for ( int i = 1 ; i < n ; i ++ ) { g = __gcd ( a [ i ] , g ) ; }",
      "indent": 1
    },
    {
      "line": 7,
      "text": "for integer i = 0 to n exclusive , set a [ i ] to a [ i ] / g",
      "code": "for ( int i = 0 ; i < n ; i ++ ) { a [ i ] = a [ i ] / g ; }",
      "indent": 1
    },
    {
      "line": 8,
      "text": "for i = 0 to n exclusive",
      "code": "for ( int i = 0 ; i < n ; i ++ )",
      "indent": 1
    },
    {
      "line": 9,
      "text": "if a [ i ] = 1 , go to the start of the loop",
      "code": "if ( a [ i ] == 1 ) continue ;",
      "indent": 2
    },
    {
      "line": 10,
      "text": "create new long long x with value a [ i ]",
      "code": "long long x = a [ i ] ;",
      "indent": 2
    },
    {
      "line": 11,
      "text": "divide x by 2 while x is even",
      "code": "while ( x % 2 == 0 ) x /= 2 ;",
      "indent": 2
    },
    {
      "line": 12,
      "text": "while x % 3 = 0 , divide it by 3",
      "code": "while ( x % 3 == 0 ) x /= 3 ;",
      "indent": 2
    },
    {
      "line": 13,
      "text": "if x ! = 1 , return cout < < \" No \" < < endl , 0",
      "code": "if ( x != 1 ) return cout << \" No \" << endl , 0 ;",
      "indent": 2
    },
    {
      "line": 14,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 15,
      "text": "print \" Yes \" to the standard output",
      "code": "cout << \" Yes \" << endl ;",
      "indent": 1
    },
    {
      "line": 16,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 17,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        2
      ],
      "mod_code": [
        "{ cin >> n ;"
      ],
      "err_line": 17,
      "err_msg": "expected ‘}’ at end of input"
    },
    {
      "mod_line": [
        3
      ],
      "mod_code": [
        "vector < long long > a [ n ] ;"
      ],
      "err_line": 4,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘std::vector<long long int>’)"
    },
    {
      "mod_line": [
        8
      ],
      "mod_code": [
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 8,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        12,
        3
      ],
      "mod_code": [
        "while ( x % 3 == 0 )",
        "vector < long long > a [ n ] ;"
      ],
      "err_line": 4,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘std::vector<long long int>’)"
    },
    {
      "mod_line": [
        12,
        3,
        11
      ],
      "mod_code": [
        "while ( x % 3 == 0 )",
        "vector < long long > a [ n ] ;",
        "x = x / 2 + 2 ;"
      ],
      "err_line": 4,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘std::vector<long long int>’)"
    },
    {
      "mod_line": [
        12,
        3,
        11,
        8
      ],
      "mod_code": [
        "while ( x % 3 == 0 )",
        "vector < long long > a [ n ] ;",
        "x = x / 2 + 2 ;",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 4,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘std::vector<long long int>’)"
    },
    {
      "mod_line": [
        12,
        3,
        11,
        13
      ],
      "mod_code": [
        "while ( x % 3 == 0 )",
        "vector < long long > a [ n ] ;",
        "x = x / 2 + 2 ;",
        "if ( x != 1 ) return cout << \" YES\\n \" , 0 ;"
      ],
      "err_line": 4,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘std::vector<long long int>’)"
    },
    {
      "mod_line": [
        12,
        3,
        11,
        2
      ],
      "mod_code": [
        "while ( x % 3 == 0 )",
        "vector < long long > a [ n ] ;",
        "x = x / 2 + 2 ;",
        "{ cin >> n ;"
      ],
      "err_line": 4,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘std::vector<long long int>’)"
    },
    {
      "mod_line": [
        12,
        3,
        8
      ],
      "mod_code": [
        "while ( x % 3 == 0 )",
        "vector < long long > a [ n ] ;",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 4,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘std::vector<long long int>’)"
    },
    {
      "mod_line": [
        12,
        3,
        8,
        13
      ],
      "mod_code": [
        "while ( x % 3 == 0 )",
        "vector < long long > a [ n ] ;",
        "for ( i = 0 ; i < n ; i ++ )",
        "if ( x != 1 ) return cout << \" YES\\n \" , 0 ;"
      ],
      "err_line": 4,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘std::vector<long long int>’)"
    },
    {
      "mod_line": [
        12,
        3,
        8,
        2
      ],
      "mod_code": [
        "while ( x % 3 == 0 )",
        "vector < long long > a [ n ] ;",
        "for ( i = 0 ; i < n ; i ++ )",
        "{ cin >> n ;"
      ],
      "err_line": 4,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘std::vector<long long int>’)"
    },
    {
      "mod_line": [
        12,
        3,
        13
      ],
      "mod_code": [
        "while ( x % 3 == 0 )",
        "vector < long long > a [ n ] ;",
        "if ( x != 1 ) return cout << \" YES\\n \" , 0 ;"
      ],
      "err_line": 4,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘std::vector<long long int>’)"
    },
    {
      "mod_line": [
        12,
        3,
        13,
        2
      ],
      "mod_code": [
        "while ( x % 3 == 0 )",
        "vector < long long > a [ n ] ;",
        "if ( x != 1 ) return cout << \" YES\\n \" , 0 ;",
        "{ cin >> n ;"
      ],
      "err_line": 4,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘std::vector<long long int>’)"
    },
    {
      "mod_line": [
        12,
        3,
        2
      ],
      "mod_code": [
        "while ( x % 3 == 0 )",
        "vector < long long > a [ n ] ;",
        "{ cin >> n ;"
      ],
      "err_line": 4,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘std::vector<long long int>’)"
    },
    {
      "mod_line": [
        12,
        11,
        8
      ],
      "mod_code": [
        "while ( x % 3 == 0 )",
        "x = x / 2 + 2 ;",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 8,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        12,
        11,
        8,
        13
      ],
      "mod_code": [
        "while ( x % 3 == 0 )",
        "x = x / 2 + 2 ;",
        "for ( i = 0 ; i < n ; i ++ )",
        "if ( x != 1 ) return cout << \" YES\\n \" , 0 ;"
      ],
      "err_line": 8,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        12,
        11,
        8,
        2
      ],
      "mod_code": [
        "while ( x % 3 == 0 )",
        "x = x / 2 + 2 ;",
        "for ( i = 0 ; i < n ; i ++ )",
        "{ cin >> n ;"
      ],
      "err_line": 8,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        12,
        11,
        13,
        2
      ],
      "mod_code": [
        "while ( x % 3 == 0 )",
        "x = x / 2 + 2 ;",
        "if ( x != 1 ) return cout << \" YES\\n \" , 0 ;",
        "{ cin >> n ;"
      ],
      "err_line": 17,
      "err_msg": "expected ‘}’ at end of input"
    },
    {
      "mod_line": [
        12,
        11,
        2
      ],
      "mod_code": [
        "while ( x % 3 == 0 )",
        "x = x / 2 + 2 ;",
        "{ cin >> n ;"
      ],
      "err_line": 17,
      "err_msg": "expected ‘}’ at end of input"
    },
    {
      "mod_line": [
        12,
        8
      ],
      "mod_code": [
        "while ( x % 3 == 0 )",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 8,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        12,
        8,
        13
      ],
      "mod_code": [
        "while ( x % 3 == 0 )",
        "for ( i = 0 ; i < n ; i ++ )",
        "if ( x != 1 ) return cout << \" YES\\n \" , 0 ;"
      ],
      "err_line": 8,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        12,
        8,
        13,
        2
      ],
      "mod_code": [
        "while ( x % 3 == 0 )",
        "for ( i = 0 ; i < n ; i ++ )",
        "if ( x != 1 ) return cout << \" YES\\n \" , 0 ;",
        "{ cin >> n ;"
      ],
      "err_line": 8,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        12,
        8,
        2
      ],
      "mod_code": [
        "while ( x % 3 == 0 )",
        "for ( i = 0 ; i < n ; i ++ )",
        "{ cin >> n ;"
      ],
      "err_line": 8,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        12,
        13,
        2
      ],
      "mod_code": [
        "while ( x % 3 == 0 )",
        "if ( x != 1 ) return cout << \" YES\\n \" , 0 ;",
        "{ cin >> n ;"
      ],
      "err_line": 17,
      "err_msg": "expected ‘}’ at end of input"
    },
    {
      "mod_line": [
        12,
        2
      ],
      "mod_code": [
        "while ( x % 3 == 0 )",
        "{ cin >> n ;"
      ],
      "err_line": 17,
      "err_msg": "expected ‘}’ at end of input"
    },
    {
      "mod_line": [
        3,
        11
      ],
      "mod_code": [
        "vector < long long > a [ n ] ;",
        "x = x / 2 + 2 ;"
      ],
      "err_line": 4,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘std::vector<long long int>’)"
    },
    {
      "mod_line": [
        3,
        11,
        8
      ],
      "mod_code": [
        "vector < long long > a [ n ] ;",
        "x = x / 2 + 2 ;",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 4,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘std::vector<long long int>’)"
    },
    {
      "mod_line": [
        3,
        11,
        8,
        13
      ],
      "mod_code": [
        "vector < long long > a [ n ] ;",
        "x = x / 2 + 2 ;",
        "for ( i = 0 ; i < n ; i ++ )",
        "if ( x != 1 ) return cout << \" YES\\n \" , 0 ;"
      ],
      "err_line": 4,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘std::vector<long long int>’)"
    },
    {
      "mod_line": [
        3,
        11,
        8,
        2
      ],
      "mod_code": [
        "vector < long long > a [ n ] ;",
        "x = x / 2 + 2 ;",
        "for ( i = 0 ; i < n ; i ++ )",
        "{ cin >> n ;"
      ],
      "err_line": 4,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘std::vector<long long int>’)"
    },
    {
      "mod_line": [
        3,
        11,
        13
      ],
      "mod_code": [
        "vector < long long > a [ n ] ;",
        "x = x / 2 + 2 ;",
        "if ( x != 1 ) return cout << \" YES\\n \" , 0 ;"
      ],
      "err_line": 4,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘std::vector<long long int>’)"
    },
    {
      "mod_line": [
        3,
        11,
        13,
        2
      ],
      "mod_code": [
        "vector < long long > a [ n ] ;",
        "x = x / 2 + 2 ;",
        "if ( x != 1 ) return cout << \" YES\\n \" , 0 ;",
        "{ cin >> n ;"
      ],
      "err_line": 4,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘std::vector<long long int>’)"
    },
    {
      "mod_line": [
        3,
        11,
        2
      ],
      "mod_code": [
        "vector < long long > a [ n ] ;",
        "x = x / 2 + 2 ;",
        "{ cin >> n ;"
      ],
      "err_line": 4,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘std::vector<long long int>’)"
    },
    {
      "mod_line": [
        3,
        8
      ],
      "mod_code": [
        "vector < long long > a [ n ] ;",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 4,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘std::vector<long long int>’)"
    },
    {
      "mod_line": [
        3,
        8,
        13
      ],
      "mod_code": [
        "vector < long long > a [ n ] ;",
        "for ( i = 0 ; i < n ; i ++ )",
        "if ( x != 1 ) return cout << \" YES\\n \" , 0 ;"
      ],
      "err_line": 4,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘std::vector<long long int>’)"
    },
    {
      "mod_line": [
        3,
        8,
        13,
        2
      ],
      "mod_code": [
        "vector < long long > a [ n ] ;",
        "for ( i = 0 ; i < n ; i ++ )",
        "if ( x != 1 ) return cout << \" YES\\n \" , 0 ;",
        "{ cin >> n ;"
      ],
      "err_line": 4,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘std::vector<long long int>’)"
    },
    {
      "mod_line": [
        3,
        8,
        2
      ],
      "mod_code": [
        "vector < long long > a [ n ] ;",
        "for ( i = 0 ; i < n ; i ++ )",
        "{ cin >> n ;"
      ],
      "err_line": 4,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘std::vector<long long int>’)"
    },
    {
      "mod_line": [
        3,
        13
      ],
      "mod_code": [
        "vector < long long > a [ n ] ;",
        "if ( x != 1 ) return cout << \" YES\\n \" , 0 ;"
      ],
      "err_line": 4,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘std::vector<long long int>’)"
    },
    {
      "mod_line": [
        3,
        13,
        2
      ],
      "mod_code": [
        "vector < long long > a [ n ] ;",
        "if ( x != 1 ) return cout << \" YES\\n \" , 0 ;",
        "{ cin >> n ;"
      ],
      "err_line": 4,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘std::vector<long long int>’)"
    },
    {
      "mod_line": [
        3,
        2
      ],
      "mod_code": [
        "vector < long long > a [ n ] ;",
        "{ cin >> n ;"
      ],
      "err_line": 4,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘std::vector<long long int>’)"
    },
    {
      "mod_line": [
        11,
        8
      ],
      "mod_code": [
        "x = x / 2 + 2 ;",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 8,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        11,
        8,
        13
      ],
      "mod_code": [
        "x = x / 2 + 2 ;",
        "for ( i = 0 ; i < n ; i ++ )",
        "if ( x != 1 ) return cout << \" YES\\n \" , 0 ;"
      ],
      "err_line": 8,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        11,
        8,
        13,
        2
      ],
      "mod_code": [
        "x = x / 2 + 2 ;",
        "for ( i = 0 ; i < n ; i ++ )",
        "if ( x != 1 ) return cout << \" YES\\n \" , 0 ;",
        "{ cin >> n ;"
      ],
      "err_line": 8,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        11,
        8,
        2
      ],
      "mod_code": [
        "x = x / 2 + 2 ;",
        "for ( i = 0 ; i < n ; i ++ )",
        "{ cin >> n ;"
      ],
      "err_line": 8,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        11,
        13,
        2
      ],
      "mod_code": [
        "x = x / 2 + 2 ;",
        "if ( x != 1 ) return cout << \" YES\\n \" , 0 ;",
        "{ cin >> n ;"
      ],
      "err_line": 17,
      "err_msg": "expected ‘}’ at end of input"
    },
    {
      "mod_line": [
        11,
        2
      ],
      "mod_code": [
        "x = x / 2 + 2 ;",
        "{ cin >> n ;"
      ],
      "err_line": 17,
      "err_msg": "expected ‘}’ at end of input"
    },
    {
      "mod_line": [
        8,
        13
      ],
      "mod_code": [
        "for ( i = 0 ; i < n ; i ++ )",
        "if ( x != 1 ) return cout << \" YES\\n \" , 0 ;"
      ],
      "err_line": 8,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        8,
        13,
        2
      ],
      "mod_code": [
        "for ( i = 0 ; i < n ; i ++ )",
        "if ( x != 1 ) return cout << \" YES\\n \" , 0 ;",
        "{ cin >> n ;"
      ],
      "err_line": 8,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        8,
        2
      ],
      "mod_code": [
        "for ( i = 0 ; i < n ; i ++ )",
        "{ cin >> n ;"
      ],
      "err_line": 8,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        13,
        2
      ],
      "mod_code": [
        "if ( x != 1 ) return cout << \" YES\\n \" , 0 ;",
        "{ cin >> n ;"
      ],
      "err_line": 17,
      "err_msg": "expected ‘}’ at end of input"
    }
  ]
}