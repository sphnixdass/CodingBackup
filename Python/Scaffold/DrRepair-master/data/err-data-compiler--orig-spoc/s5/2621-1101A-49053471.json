{
  "meta": {
    "index": 2621,
    "hitid": "3XABXM4AJ1ZBHN9G36M6ZDK2GI58Q2",
    "workerid": "A2J7P30MA3S6OV",
    "probid": "1101A",
    "subid": "49053471"
  },
  "lines": [
    {
      "line": 0,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 1,
      "text": "n = integer",
      "code": "int n ;",
      "indent": 1
    },
    {
      "line": 2,
      "text": "read n",
      "code": "cin >> n ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "while decrement n",
      "code": "while ( n -- )",
      "indent": 1
    },
    {
      "line": 4,
      "text": "create integers l , r , a",
      "code": "int l , r , a ;",
      "indent": 2
    },
    {
      "line": 5,
      "text": "read l , r , a",
      "code": "cin >> l >> r >> a ;",
      "indent": 2
    },
    {
      "line": 6,
      "text": "if l is less than a",
      "code": "if ( l > a )",
      "indent": 2
    },
    {
      "line": 7,
      "text": "print a",
      "code": "cout << a << endl ;",
      "indent": 3
    },
    {
      "line": 8,
      "text": "otherwise",
      "code": "else",
      "indent": 2
    },
    {
      "line": 9,
      "text": "print ( r / a + 1 ) * a ) and a new line",
      "code": "cout << ( ( r / a + 1 ) * a ) << endl ;",
      "indent": 3
    },
    {
      "line": 10,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 11,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 12,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        3
      ],
      "mod_code": [
        "while ( n -- decrement )"
      ],
      "err_line": 3,
      "err_msg": "expected ‘)’ before ‘decrement’"
    },
    {
      "mod_line": [
        8
      ],
      "mod_code": [
        "otherwise"
      ],
      "err_line": 8,
      "err_msg": "‘otherwise’ was not declared in this scope"
    },
    {
      "mod_line": [
        9
      ],
      "mod_code": [
        "cout << ( r / a + 1 ) * a ) << endl ;"
      ],
      "err_line": 9,
      "err_msg": "expected ‘;’ before ‘)’ token"
    },
    {
      "mod_line": [
        6,
        3
      ],
      "mod_code": [
        "if ( l < a )",
        "while ( n -- decrement )"
      ],
      "err_line": 3,
      "err_msg": "expected ‘)’ before ‘decrement’"
    },
    {
      "mod_line": [
        6,
        3,
        8
      ],
      "mod_code": [
        "if ( l < a )",
        "while ( n -- decrement )",
        "otherwise"
      ],
      "err_line": 3,
      "err_msg": "expected ‘)’ before ‘decrement’"
    },
    {
      "mod_line": [
        6,
        3,
        8,
        9
      ],
      "mod_code": [
        "if ( l < a )",
        "while ( n -- decrement )",
        "otherwise",
        "cout << ( r / a + 1 ) * a ) << endl ;"
      ],
      "err_line": 3,
      "err_msg": "expected ‘)’ before ‘decrement’"
    },
    {
      "mod_line": [
        6,
        3,
        8,
        7
      ],
      "mod_code": [
        "if ( l < a )",
        "while ( n -- decrement )",
        "otherwise",
        "cout << a ;"
      ],
      "err_line": 3,
      "err_msg": "expected ‘)’ before ‘decrement’"
    },
    {
      "mod_line": [
        6,
        3,
        9
      ],
      "mod_code": [
        "if ( l < a )",
        "while ( n -- decrement )",
        "cout << ( r / a + 1 ) * a ) << endl ;"
      ],
      "err_line": 3,
      "err_msg": "expected ‘)’ before ‘decrement’"
    },
    {
      "mod_line": [
        6,
        3,
        9,
        7
      ],
      "mod_code": [
        "if ( l < a )",
        "while ( n -- decrement )",
        "cout << ( r / a + 1 ) * a ) << endl ;",
        "cout << a ;"
      ],
      "err_line": 3,
      "err_msg": "expected ‘)’ before ‘decrement’"
    },
    {
      "mod_line": [
        6,
        3,
        7
      ],
      "mod_code": [
        "if ( l < a )",
        "while ( n -- decrement )",
        "cout << a ;"
      ],
      "err_line": 3,
      "err_msg": "expected ‘)’ before ‘decrement’"
    },
    {
      "mod_line": [
        6,
        8
      ],
      "mod_code": [
        "if ( l < a )",
        "otherwise"
      ],
      "err_line": 8,
      "err_msg": "‘otherwise’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        8,
        9
      ],
      "mod_code": [
        "if ( l < a )",
        "otherwise",
        "cout << ( r / a + 1 ) * a ) << endl ;"
      ],
      "err_line": 8,
      "err_msg": "‘otherwise’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        8,
        9,
        7
      ],
      "mod_code": [
        "if ( l < a )",
        "otherwise",
        "cout << ( r / a + 1 ) * a ) << endl ;",
        "cout << a ;"
      ],
      "err_line": 8,
      "err_msg": "‘otherwise’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        8,
        7
      ],
      "mod_code": [
        "if ( l < a )",
        "otherwise",
        "cout << a ;"
      ],
      "err_line": 8,
      "err_msg": "‘otherwise’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        9
      ],
      "mod_code": [
        "if ( l < a )",
        "cout << ( r / a + 1 ) * a ) << endl ;"
      ],
      "err_line": 9,
      "err_msg": "expected ‘;’ before ‘)’ token"
    },
    {
      "mod_line": [
        6,
        9,
        7
      ],
      "mod_code": [
        "if ( l < a )",
        "cout << ( r / a + 1 ) * a ) << endl ;",
        "cout << a ;"
      ],
      "err_line": 9,
      "err_msg": "expected ‘;’ before ‘)’ token"
    },
    {
      "mod_line": [
        3,
        8
      ],
      "mod_code": [
        "while ( n -- decrement )",
        "otherwise"
      ],
      "err_line": 3,
      "err_msg": "expected ‘)’ before ‘decrement’"
    },
    {
      "mod_line": [
        3,
        8,
        9
      ],
      "mod_code": [
        "while ( n -- decrement )",
        "otherwise",
        "cout << ( r / a + 1 ) * a ) << endl ;"
      ],
      "err_line": 3,
      "err_msg": "expected ‘)’ before ‘decrement’"
    },
    {
      "mod_line": [
        3,
        8,
        9,
        6
      ],
      "mod_code": [
        "while ( n -- decrement )",
        "otherwise",
        "cout << ( r / a + 1 ) * a ) << endl ;",
        "if ( l <= a )"
      ],
      "err_line": 3,
      "err_msg": "expected ‘)’ before ‘decrement’"
    },
    {
      "mod_line": [
        3,
        8,
        9,
        7
      ],
      "mod_code": [
        "while ( n -- decrement )",
        "otherwise",
        "cout << ( r / a + 1 ) * a ) << endl ;",
        "cout << a ;"
      ],
      "err_line": 3,
      "err_msg": "expected ‘)’ before ‘decrement’"
    },
    {
      "mod_line": [
        3,
        8,
        6
      ],
      "mod_code": [
        "while ( n -- decrement )",
        "otherwise",
        "if ( l <= a )"
      ],
      "err_line": 3,
      "err_msg": "expected ‘)’ before ‘decrement’"
    },
    {
      "mod_line": [
        3,
        8,
        6,
        7
      ],
      "mod_code": [
        "while ( n -- decrement )",
        "otherwise",
        "if ( l <= a )",
        "cout << a ;"
      ],
      "err_line": 3,
      "err_msg": "expected ‘)’ before ‘decrement’"
    },
    {
      "mod_line": [
        3,
        8,
        7
      ],
      "mod_code": [
        "while ( n -- decrement )",
        "otherwise",
        "cout << a ;"
      ],
      "err_line": 3,
      "err_msg": "expected ‘)’ before ‘decrement’"
    },
    {
      "mod_line": [
        3,
        9
      ],
      "mod_code": [
        "while ( n -- decrement )",
        "cout << ( r / a + 1 ) * a ) << endl ;"
      ],
      "err_line": 3,
      "err_msg": "expected ‘)’ before ‘decrement’"
    },
    {
      "mod_line": [
        3,
        9,
        6
      ],
      "mod_code": [
        "while ( n -- decrement )",
        "cout << ( r / a + 1 ) * a ) << endl ;",
        "if ( l <= a )"
      ],
      "err_line": 3,
      "err_msg": "expected ‘)’ before ‘decrement’"
    },
    {
      "mod_line": [
        3,
        9,
        6,
        7
      ],
      "mod_code": [
        "while ( n -- decrement )",
        "cout << ( r / a + 1 ) * a ) << endl ;",
        "if ( l <= a )",
        "cout << a ;"
      ],
      "err_line": 3,
      "err_msg": "expected ‘)’ before ‘decrement’"
    },
    {
      "mod_line": [
        3,
        9,
        7
      ],
      "mod_code": [
        "while ( n -- decrement )",
        "cout << ( r / a + 1 ) * a ) << endl ;",
        "cout << a ;"
      ],
      "err_line": 3,
      "err_msg": "expected ‘)’ before ‘decrement’"
    },
    {
      "mod_line": [
        3,
        6
      ],
      "mod_code": [
        "while ( n -- decrement )",
        "if ( l <= a )"
      ],
      "err_line": 3,
      "err_msg": "expected ‘)’ before ‘decrement’"
    },
    {
      "mod_line": [
        3,
        6,
        7
      ],
      "mod_code": [
        "while ( n -- decrement )",
        "if ( l <= a )",
        "cout << a ;"
      ],
      "err_line": 3,
      "err_msg": "expected ‘)’ before ‘decrement’"
    },
    {
      "mod_line": [
        3,
        7
      ],
      "mod_code": [
        "while ( n -- decrement )",
        "cout << a ;"
      ],
      "err_line": 3,
      "err_msg": "expected ‘)’ before ‘decrement’"
    },
    {
      "mod_line": [
        8,
        9
      ],
      "mod_code": [
        "otherwise",
        "cout << ( r / a + 1 ) * a ) << endl ;"
      ],
      "err_line": 8,
      "err_msg": "‘otherwise’ was not declared in this scope"
    },
    {
      "mod_line": [
        8,
        9,
        6
      ],
      "mod_code": [
        "otherwise",
        "cout << ( r / a + 1 ) * a ) << endl ;",
        "if ( l <= a )"
      ],
      "err_line": 8,
      "err_msg": "‘otherwise’ was not declared in this scope"
    },
    {
      "mod_line": [
        8,
        9,
        6,
        7
      ],
      "mod_code": [
        "otherwise",
        "cout << ( r / a + 1 ) * a ) << endl ;",
        "if ( l <= a )",
        "cout << a ;"
      ],
      "err_line": 8,
      "err_msg": "‘otherwise’ was not declared in this scope"
    },
    {
      "mod_line": [
        8,
        9,
        7
      ],
      "mod_code": [
        "otherwise",
        "cout << ( r / a + 1 ) * a ) << endl ;",
        "cout << a ;"
      ],
      "err_line": 8,
      "err_msg": "‘otherwise’ was not declared in this scope"
    },
    {
      "mod_line": [
        8,
        6
      ],
      "mod_code": [
        "otherwise",
        "if ( l <= a )"
      ],
      "err_line": 8,
      "err_msg": "‘otherwise’ was not declared in this scope"
    },
    {
      "mod_line": [
        8,
        6,
        7
      ],
      "mod_code": [
        "otherwise",
        "if ( l <= a )",
        "cout << a ;"
      ],
      "err_line": 8,
      "err_msg": "‘otherwise’ was not declared in this scope"
    },
    {
      "mod_line": [
        8,
        7
      ],
      "mod_code": [
        "otherwise",
        "cout << a ;"
      ],
      "err_line": 8,
      "err_msg": "‘otherwise’ was not declared in this scope"
    },
    {
      "mod_line": [
        9,
        6
      ],
      "mod_code": [
        "cout << ( r / a + 1 ) * a ) << endl ;",
        "if ( l <= a )"
      ],
      "err_line": 9,
      "err_msg": "expected ‘;’ before ‘)’ token"
    },
    {
      "mod_line": [
        9,
        6,
        7
      ],
      "mod_code": [
        "cout << ( r / a + 1 ) * a ) << endl ;",
        "if ( l <= a )",
        "cout << a ;"
      ],
      "err_line": 9,
      "err_msg": "expected ‘;’ before ‘)’ token"
    },
    {
      "mod_line": [
        9,
        7
      ],
      "mod_code": [
        "cout << ( r / a + 1 ) * a ) << endl ;",
        "cout << a ;"
      ],
      "err_line": 9,
      "err_msg": "expected ‘;’ before ‘)’ token"
    }
  ]
}