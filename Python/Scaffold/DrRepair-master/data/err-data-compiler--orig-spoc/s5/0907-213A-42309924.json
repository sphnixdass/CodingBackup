{
  "meta": {
    "index": 907,
    "hitid": "372AGES0I4Z18PPOOTNYK2B0409XR4",
    "workerid": "A2QLFQ2ZYR6B7M",
    "probid": "213A",
    "subid": "42309924"
  },
  "lines": [
    {
      "line": 0,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 1,
      "text": "n , m , a = int",
      "code": "int n , m , a ;",
      "indent": 1
    },
    {
      "line": 2,
      "text": "read n",
      "code": "cin >> n ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "c and n = array of n + 1 int , filled with 0",
      "code": "int c [ n + 1 ] , d [ n + 1 ] = { 0 } ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "g = array of n + 2 vector of int",
      "code": "vector < int > g [ n + 2 ] ;",
      "indent": 1
    },
    {
      "line": 5,
      "text": "cc = array of 5 vector of int",
      "code": "vector < int > cc [ 5 ] ;",
      "indent": 1
    },
    {
      "line": 6,
      "text": "for i = 0 to n exclusive",
      "code": "for ( int i = 0 ; i < n ; i ++ )",
      "indent": 1
    },
    {
      "line": 7,
      "text": "read c [ i ]",
      "code": "cin >> c [ i ] ;",
      "indent": 2
    },
    {
      "line": 8,
      "text": "decrement c [ i ]",
      "code": "c [ i ] -- ;",
      "indent": 2
    },
    {
      "line": 9,
      "text": "add i to end of cc [ c [ i ] ]",
      "code": "cc [ c [ i ] ] . push_back ( i ) ;",
      "indent": 2
    },
    {
      "line": 10,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 11,
      "text": "for i = 0 to n exclusive",
      "code": "for ( int i = 0 ; i < n ; i ++ )",
      "indent": 1
    },
    {
      "line": 12,
      "text": "read m",
      "code": "cin >> m ;",
      "indent": 2
    },
    {
      "line": 13,
      "text": "while decremented value of m is not 0",
      "code": "while ( m -- )",
      "indent": 2
    },
    {
      "line": 14,
      "text": "read a",
      "code": "cin >> a ;",
      "indent": 3
    },
    {
      "line": 15,
      "text": "add i to end of g [ a - 1 ]",
      "code": "g [ a - 1 ] . push_back ( i ) ;",
      "indent": 3
    },
    {
      "line": 16,
      "text": "increment d [ i ]",
      "code": "d [ i ] ++ ;",
      "indent": 3
    },
    {
      "line": 17,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 18,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 19,
      "text": "mx = INT_MAX",
      "code": "int mx = INT_MAX ;",
      "indent": 1
    },
    {
      "line": 20,
      "text": "for k = 0 to n exclusive",
      "code": "for ( int k = 0 ; k < n ; k ++ )",
      "indent": 1
    },
    {
      "line": 21,
      "text": "if d [ k ] is 0",
      "code": "if ( d [ k ] == 0 )",
      "indent": 2
    },
    {
      "line": 22,
      "text": "dp = array of n + 1 int",
      "code": "int dp [ n + 1 ] ;",
      "indent": 3
    },
    {
      "line": 23,
      "text": "for i = 0 to n exclusive dp [ i ] = d [ i ]",
      "code": "for ( int i = 0 ; i < n ; i ++ ) dp [ i ] = d [ i ] ;",
      "indent": 3
    },
    {
      "line": 24,
      "text": "p = c [ k ] , ok = 0 , an = n",
      "code": "int p = c [ k ] , ok = 0 , an = n ;",
      "indent": 3
    },
    {
      "line": 25,
      "text": "while true",
      "code": "while ( 1 )",
      "indent": 3
    },
    {
      "line": 26,
      "text": "if ok is n break",
      "code": "if ( ok == n ) break ;",
      "indent": 4
    },
    {
      "line": 27,
      "text": "for i = 0 to size of cc [ p ] exclusive",
      "code": "for ( int i = 0 ; i < cc [ p ] . size ( ) ; i ++ )",
      "indent": 4
    },
    {
      "line": 28,
      "text": "if d [ cc [ p ] [ i ] ] is 0",
      "code": "if ( d [ cc [ p ] [ i ] ] == 0 )",
      "indent": 5
    },
    {
      "line": 29,
      "text": "decrement d [ cc [ p ] [ i ] ]",
      "code": "d [ cc [ p ] [ i ] ] -- ;",
      "indent": 6
    },
    {
      "line": 30,
      "text": "increment ok",
      "code": "ok ++ ;",
      "indent": 6
    },
    {
      "line": 31,
      "text": "for j = 0 to size of g [ cc [ p ] [ i ] ] exclusive",
      "code": "for ( int j = 0 ; j < g [ cc [ p ] [ i ] ] . size ( ) ; j ++ )",
      "indent": 6
    },
    {
      "line": 32,
      "text": "u = g [ cc [ p ] [ i ] ] [ j ]",
      "code": "int u = g [ cc [ p ] [ i ] ] [ j ] ;",
      "indent": 7
    },
    {
      "line": 33,
      "text": "decrement d [ u ]",
      "code": "d [ u ] -- ;",
      "indent": 7
    },
    {
      "line": 34,
      "text": "DUMMY",
      "code": "}",
      "indent": 6
    },
    {
      "line": 35,
      "text": "i = - 1",
      "code": "i = - 1 ;",
      "indent": 6
    },
    {
      "line": 36,
      "text": "DUMMY",
      "code": "}",
      "indent": 5
    },
    {
      "line": 37,
      "text": "DUMMY",
      "code": "}",
      "indent": 4
    },
    {
      "line": 38,
      "text": "if ok and ok < n increment an",
      "code": "if ( ok && ok < n ) an ++ ;",
      "indent": 4
    },
    {
      "line": 39,
      "text": "p = ( p + 1 ) modulo 3",
      "code": "p = ( p + 1 ) % 3 ;",
      "indent": 4
    },
    {
      "line": 40,
      "text": "DUMMY",
      "code": "}",
      "indent": 3
    },
    {
      "line": 41,
      "text": "for i = 0 to n exclusive d [ i ] = dp [ i ]",
      "code": "for ( int i = 0 ; i < n ; i ++ ) d [ i ] = dp [ i ] ;",
      "indent": 3
    },
    {
      "line": 42,
      "text": "mx = min ( mx , an )",
      "code": "mx = min ( mx , an ) ;",
      "indent": 3
    },
    {
      "line": 43,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 44,
      "text": "print mx",
      "code": "cout << mx << endl ;",
      "indent": 1
    },
    {
      "line": 45,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        3
      ],
      "mod_code": [
        "int c = 0 , n = n + 1 ;"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘int n’"
    },
    {
      "mod_line": [
        31
      ],
      "mod_code": [
        "for ( int j = 0 ; j < g [ cc [ p ] [ i ] ] ; j ++ )"
      ],
      "err_line": 31,
      "err_msg": "no match for ‘operator<’ (operand types are ‘int’ and ‘std::vector<int>’)"
    },
    {
      "mod_line": [
        32
      ],
      "mod_code": [
        "u = g [ cc [ p ] [ i ] ] [ j ] ;"
      ],
      "err_line": 32,
      "err_msg": "‘u’ was not declared in this scope"
    },
    {
      "mod_line": [
        1
      ],
      "mod_code": [
        "int n , m , n ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int n’"
    },
    {
      "mod_line": [
        2
      ],
      "mod_code": [
        "while ( cin >> n )"
      ],
      "err_line": 7,
      "err_msg": "‘c’ was not declared in this scope"
    },
    {
      "mod_line": [
        3
      ],
      "mod_code": [
        "int c [ n + 1 ] = { 0 } , n = 0 ;"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘int n’"
    },
    {
      "mod_line": [
        4
      ],
      "mod_code": [
        "vector < int > g ( n + 2 ) ;"
      ],
      "err_line": 15,
      "err_msg": "request for member ‘push_back’ in ‘g.std::vector<_Tp, _Alloc>::operator[]<int, std::allocator<int> >(((std::vector<int>::size_type)(a + -1)))’, which is of non-class type ‘int’"
    },
    {
      "mod_line": [
        5
      ],
      "mod_code": [
        "vector < int > cc ( 5 ) ;"
      ],
      "err_line": 9,
      "err_msg": "request for member ‘push_back’ in ‘cc.std::vector<_Tp, _Alloc>::operator[]<int, std::allocator<int> >(((std::vector<int>::size_type)c[i]))’, which is of non-class type ‘int’"
    },
    {
      "mod_line": [
        6
      ],
      "mod_code": [
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 6,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        9
      ],
      "mod_code": [
        "cc [ c [ i ] ] . push_back ( i ] ) ;"
      ],
      "err_line": 9,
      "err_msg": "expected ‘)’ before ‘]’ token"
    },
    {
      "mod_line": [
        11
      ],
      "mod_code": [
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 11,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        19
      ],
      "mod_code": [
        "mx = INT_MAX ;"
      ],
      "err_line": 19,
      "err_msg": "‘mx’ was not declared in this scope"
    },
    {
      "mod_line": [
        20
      ],
      "mod_code": [
        "for ( k = 0 ; k < n ; k ++ )"
      ],
      "err_line": 20,
      "err_msg": "‘k’ was not declared in this scope"
    },
    {
      "mod_line": [
        22
      ],
      "mod_code": [
        "int * dp [ n + 1 ] ;"
      ],
      "err_line": 23,
      "err_msg": "invalid conversion from ‘int’ to ‘int*’ [-fpermissive]"
    },
    {
      "mod_line": [
        24
      ],
      "mod_code": [
        "p = c [ k ] , ok = 0 , an = 0 ;"
      ],
      "err_line": 24,
      "err_msg": "‘p’ was not declared in this scope"
    },
    {
      "mod_line": [
        27
      ],
      "mod_code": [
        "for ( i = 0 ; i < cc [ p ] . size ( ) ; i ++ )"
      ],
      "err_line": 27,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        31
      ],
      "mod_code": [
        "for ( j = 0 ; j < g [ cc [ p ] [ i ] ] ; j ++ )"
      ],
      "err_line": 31,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        24
      ],
      "mod_code": [
        "int c = 0 , n = n + 1 ;",
        "int p = c [ k ] , ok = 0 , an = 0 ;"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘int n’"
    },
    {
      "mod_line": [
        3,
        24,
        31
      ],
      "mod_code": [
        "int c = 0 , n = n + 1 ;",
        "int p = c [ k ] , ok = 0 , an = 0 ;",
        "for ( int j = 0 ; j < g [ cc [ p ] [ i ] ] ; j ++ )"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘int n’"
    },
    {
      "mod_line": [
        3,
        24,
        31,
        32
      ],
      "mod_code": [
        "int c = 0 , n = n + 1 ;",
        "int p = c [ k ] , ok = 0 , an = 0 ;",
        "for ( int j = 0 ; j < g [ cc [ p ] [ i ] ] ; j ++ )",
        "u = g [ cc [ p ] [ i ] ] [ j ] ;"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘int n’"
    },
    {
      "mod_line": [
        3,
        24,
        31,
        42
      ],
      "mod_code": [
        "int c = 0 , n = n + 1 ;",
        "int p = c [ k ] , ok = 0 , an = 0 ;",
        "for ( int j = 0 ; j < g [ cc [ p ] [ i ] ] ; j ++ )",
        "int mx = min ( mx , an ) ;"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘int n’"
    },
    {
      "mod_line": [
        3,
        24,
        31,
        7
      ],
      "mod_code": [
        "int c = 0 , n = n + 1 ;",
        "int p = c [ k ] , ok = 0 , an = 0 ;",
        "for ( int j = 0 ; j < g [ cc [ p ] [ i ] ] ; j ++ )",
        "cout << c [ i ] ;"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘int n’"
    },
    {
      "mod_line": [
        3,
        24,
        32
      ],
      "mod_code": [
        "int c = 0 , n = n + 1 ;",
        "int p = c [ k ] , ok = 0 , an = 0 ;",
        "u = g [ cc [ p ] [ i ] ] [ j ] ;"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘int n’"
    },
    {
      "mod_line": [
        3,
        24,
        32,
        42
      ],
      "mod_code": [
        "int c = 0 , n = n + 1 ;",
        "int p = c [ k ] , ok = 0 , an = 0 ;",
        "u = g [ cc [ p ] [ i ] ] [ j ] ;",
        "int mx = min ( mx , an ) ;"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘int n’"
    },
    {
      "mod_line": [
        3,
        24,
        32,
        7
      ],
      "mod_code": [
        "int c = 0 , n = n + 1 ;",
        "int p = c [ k ] , ok = 0 , an = 0 ;",
        "u = g [ cc [ p ] [ i ] ] [ j ] ;",
        "cout << c [ i ] ;"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘int n’"
    },
    {
      "mod_line": [
        3,
        24,
        42
      ],
      "mod_code": [
        "int c = 0 , n = n + 1 ;",
        "int p = c [ k ] , ok = 0 , an = 0 ;",
        "int mx = min ( mx , an ) ;"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘int n’"
    },
    {
      "mod_line": [
        3,
        24,
        42,
        7
      ],
      "mod_code": [
        "int c = 0 , n = n + 1 ;",
        "int p = c [ k ] , ok = 0 , an = 0 ;",
        "int mx = min ( mx , an ) ;",
        "cout << c [ i ] ;"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘int n’"
    },
    {
      "mod_line": [
        3,
        24,
        7
      ],
      "mod_code": [
        "int c = 0 , n = n + 1 ;",
        "int p = c [ k ] , ok = 0 , an = 0 ;",
        "cout << c [ i ] ;"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘int n’"
    },
    {
      "mod_line": [
        3,
        31
      ],
      "mod_code": [
        "int c = 0 , n = n + 1 ;",
        "for ( int j = 0 ; j < g [ cc [ p ] [ i ] ] ; j ++ )"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘int n’"
    },
    {
      "mod_line": [
        3,
        31,
        32
      ],
      "mod_code": [
        "int c = 0 , n = n + 1 ;",
        "for ( int j = 0 ; j < g [ cc [ p ] [ i ] ] ; j ++ )",
        "u = g [ cc [ p ] [ i ] ] [ j ] ;"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘int n’"
    },
    {
      "mod_line": [
        3,
        31,
        32,
        42
      ],
      "mod_code": [
        "int c = 0 , n = n + 1 ;",
        "for ( int j = 0 ; j < g [ cc [ p ] [ i ] ] ; j ++ )",
        "u = g [ cc [ p ] [ i ] ] [ j ] ;",
        "int mx = min ( mx , an ) ;"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘int n’"
    },
    {
      "mod_line": [
        3,
        31,
        32,
        7
      ],
      "mod_code": [
        "int c = 0 , n = n + 1 ;",
        "for ( int j = 0 ; j < g [ cc [ p ] [ i ] ] ; j ++ )",
        "u = g [ cc [ p ] [ i ] ] [ j ] ;",
        "cout << c [ i ] ;"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘int n’"
    },
    {
      "mod_line": [
        3,
        31,
        42
      ],
      "mod_code": [
        "int c = 0 , n = n + 1 ;",
        "for ( int j = 0 ; j < g [ cc [ p ] [ i ] ] ; j ++ )",
        "int mx = min ( mx , an ) ;"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘int n’"
    },
    {
      "mod_line": [
        3,
        31,
        42,
        7
      ],
      "mod_code": [
        "int c = 0 , n = n + 1 ;",
        "for ( int j = 0 ; j < g [ cc [ p ] [ i ] ] ; j ++ )",
        "int mx = min ( mx , an ) ;",
        "cout << c [ i ] ;"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘int n’"
    },
    {
      "mod_line": [
        3,
        31,
        7
      ],
      "mod_code": [
        "int c = 0 , n = n + 1 ;",
        "for ( int j = 0 ; j < g [ cc [ p ] [ i ] ] ; j ++ )",
        "cout << c [ i ] ;"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘int n’"
    },
    {
      "mod_line": [
        3,
        32
      ],
      "mod_code": [
        "int c = 0 , n = n + 1 ;",
        "u = g [ cc [ p ] [ i ] ] [ j ] ;"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘int n’"
    },
    {
      "mod_line": [
        3,
        32,
        42
      ],
      "mod_code": [
        "int c = 0 , n = n + 1 ;",
        "u = g [ cc [ p ] [ i ] ] [ j ] ;",
        "int mx = min ( mx , an ) ;"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘int n’"
    },
    {
      "mod_line": [
        3,
        32,
        42,
        7
      ],
      "mod_code": [
        "int c = 0 , n = n + 1 ;",
        "u = g [ cc [ p ] [ i ] ] [ j ] ;",
        "int mx = min ( mx , an ) ;",
        "cout << c [ i ] ;"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘int n’"
    },
    {
      "mod_line": [
        3,
        32,
        7
      ],
      "mod_code": [
        "int c = 0 , n = n + 1 ;",
        "u = g [ cc [ p ] [ i ] ] [ j ] ;",
        "cout << c [ i ] ;"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘int n’"
    },
    {
      "mod_line": [
        3,
        42
      ],
      "mod_code": [
        "int c = 0 , n = n + 1 ;",
        "int mx = min ( mx , an ) ;"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘int n’"
    },
    {
      "mod_line": [
        3,
        42,
        7
      ],
      "mod_code": [
        "int c = 0 , n = n + 1 ;",
        "int mx = min ( mx , an ) ;",
        "cout << c [ i ] ;"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘int n’"
    },
    {
      "mod_line": [
        3,
        7
      ],
      "mod_code": [
        "int c = 0 , n = n + 1 ;",
        "cout << c [ i ] ;"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘int n’"
    },
    {
      "mod_line": [
        24,
        31
      ],
      "mod_code": [
        "int p = c [ k ] , ok = 0 , an = 0 ;",
        "for ( int j = 0 ; j < g [ cc [ p ] [ i ] ] ; j ++ )"
      ],
      "err_line": 31,
      "err_msg": "no match for ‘operator<’ (operand types are ‘int’ and ‘std::vector<int>’)"
    },
    {
      "mod_line": [
        24,
        31,
        32
      ],
      "mod_code": [
        "int p = c [ k ] , ok = 0 , an = 0 ;",
        "for ( int j = 0 ; j < g [ cc [ p ] [ i ] ] ; j ++ )",
        "u = g [ cc [ p ] [ i ] ] [ j ] ;"
      ],
      "err_line": 31,
      "err_msg": "no match for ‘operator<’ (operand types are ‘int’ and ‘std::vector<int>’)"
    },
    {
      "mod_line": [
        24,
        31,
        32,
        42
      ],
      "mod_code": [
        "int p = c [ k ] , ok = 0 , an = 0 ;",
        "for ( int j = 0 ; j < g [ cc [ p ] [ i ] ] ; j ++ )",
        "u = g [ cc [ p ] [ i ] ] [ j ] ;",
        "int mx = min ( mx , an ) ;"
      ],
      "err_line": 31,
      "err_msg": "no match for ‘operator<’ (operand types are ‘int’ and ‘std::vector<int>’)"
    },
    {
      "mod_line": [
        24,
        31,
        32,
        7
      ],
      "mod_code": [
        "int p = c [ k ] , ok = 0 , an = 0 ;",
        "for ( int j = 0 ; j < g [ cc [ p ] [ i ] ] ; j ++ )",
        "u = g [ cc [ p ] [ i ] ] [ j ] ;",
        "cout << c [ i ] ;"
      ],
      "err_line": 31,
      "err_msg": "no match for ‘operator<’ (operand types are ‘int’ and ‘std::vector<int>’)"
    },
    {
      "mod_line": [
        24,
        31,
        42
      ],
      "mod_code": [
        "int p = c [ k ] , ok = 0 , an = 0 ;",
        "for ( int j = 0 ; j < g [ cc [ p ] [ i ] ] ; j ++ )",
        "int mx = min ( mx , an ) ;"
      ],
      "err_line": 31,
      "err_msg": "no match for ‘operator<’ (operand types are ‘int’ and ‘std::vector<int>’)"
    },
    {
      "mod_line": [
        24,
        31,
        42,
        7
      ],
      "mod_code": [
        "int p = c [ k ] , ok = 0 , an = 0 ;",
        "for ( int j = 0 ; j < g [ cc [ p ] [ i ] ] ; j ++ )",
        "int mx = min ( mx , an ) ;",
        "cout << c [ i ] ;"
      ],
      "err_line": 31,
      "err_msg": "no match for ‘operator<’ (operand types are ‘int’ and ‘std::vector<int>’)"
    },
    {
      "mod_line": [
        24,
        31,
        7
      ],
      "mod_code": [
        "int p = c [ k ] , ok = 0 , an = 0 ;",
        "for ( int j = 0 ; j < g [ cc [ p ] [ i ] ] ; j ++ )",
        "cout << c [ i ] ;"
      ],
      "err_line": 31,
      "err_msg": "no match for ‘operator<’ (operand types are ‘int’ and ‘std::vector<int>’)"
    },
    {
      "mod_line": [
        24,
        32
      ],
      "mod_code": [
        "int p = c [ k ] , ok = 0 , an = 0 ;",
        "u = g [ cc [ p ] [ i ] ] [ j ] ;"
      ],
      "err_line": 32,
      "err_msg": "‘u’ was not declared in this scope"
    },
    {
      "mod_line": [
        24,
        32,
        42
      ],
      "mod_code": [
        "int p = c [ k ] , ok = 0 , an = 0 ;",
        "u = g [ cc [ p ] [ i ] ] [ j ] ;",
        "int mx = min ( mx , an ) ;"
      ],
      "err_line": 32,
      "err_msg": "‘u’ was not declared in this scope"
    },
    {
      "mod_line": [
        24,
        32,
        42,
        7
      ],
      "mod_code": [
        "int p = c [ k ] , ok = 0 , an = 0 ;",
        "u = g [ cc [ p ] [ i ] ] [ j ] ;",
        "int mx = min ( mx , an ) ;",
        "cout << c [ i ] ;"
      ],
      "err_line": 32,
      "err_msg": "‘u’ was not declared in this scope"
    },
    {
      "mod_line": [
        24,
        32,
        7
      ],
      "mod_code": [
        "int p = c [ k ] , ok = 0 , an = 0 ;",
        "u = g [ cc [ p ] [ i ] ] [ j ] ;",
        "cout << c [ i ] ;"
      ],
      "err_line": 32,
      "err_msg": "‘u’ was not declared in this scope"
    },
    {
      "mod_line": [
        31,
        32
      ],
      "mod_code": [
        "for ( int j = 0 ; j < g [ cc [ p ] [ i ] ] ; j ++ )",
        "u = g [ cc [ p ] [ i ] ] [ j ] ;"
      ],
      "err_line": 31,
      "err_msg": "no match for ‘operator<’ (operand types are ‘int’ and ‘std::vector<int>’)"
    },
    {
      "mod_line": [
        31,
        32,
        42
      ],
      "mod_code": [
        "for ( int j = 0 ; j < g [ cc [ p ] [ i ] ] ; j ++ )",
        "u = g [ cc [ p ] [ i ] ] [ j ] ;",
        "int mx = min ( mx , an ) ;"
      ],
      "err_line": 31,
      "err_msg": "no match for ‘operator<’ (operand types are ‘int’ and ‘std::vector<int>’)"
    },
    {
      "mod_line": [
        31,
        32,
        42,
        7
      ],
      "mod_code": [
        "for ( int j = 0 ; j < g [ cc [ p ] [ i ] ] ; j ++ )",
        "u = g [ cc [ p ] [ i ] ] [ j ] ;",
        "int mx = min ( mx , an ) ;",
        "cout << c [ i ] ;"
      ],
      "err_line": 31,
      "err_msg": "no match for ‘operator<’ (operand types are ‘int’ and ‘std::vector<int>’)"
    },
    {
      "mod_line": [
        31,
        32,
        7
      ],
      "mod_code": [
        "for ( int j = 0 ; j < g [ cc [ p ] [ i ] ] ; j ++ )",
        "u = g [ cc [ p ] [ i ] ] [ j ] ;",
        "cout << c [ i ] ;"
      ],
      "err_line": 31,
      "err_msg": "no match for ‘operator<’ (operand types are ‘int’ and ‘std::vector<int>’)"
    },
    {
      "mod_line": [
        31,
        42
      ],
      "mod_code": [
        "for ( int j = 0 ; j < g [ cc [ p ] [ i ] ] ; j ++ )",
        "int mx = min ( mx , an ) ;"
      ],
      "err_line": 31,
      "err_msg": "no match for ‘operator<’ (operand types are ‘int’ and ‘std::vector<int>’)"
    },
    {
      "mod_line": [
        31,
        42,
        7
      ],
      "mod_code": [
        "for ( int j = 0 ; j < g [ cc [ p ] [ i ] ] ; j ++ )",
        "int mx = min ( mx , an ) ;",
        "cout << c [ i ] ;"
      ],
      "err_line": 31,
      "err_msg": "no match for ‘operator<’ (operand types are ‘int’ and ‘std::vector<int>’)"
    },
    {
      "mod_line": [
        31,
        7
      ],
      "mod_code": [
        "for ( int j = 0 ; j < g [ cc [ p ] [ i ] ] ; j ++ )",
        "cout << c [ i ] ;"
      ],
      "err_line": 31,
      "err_msg": "no match for ‘operator<’ (operand types are ‘int’ and ‘std::vector<int>’)"
    },
    {
      "mod_line": [
        32,
        42
      ],
      "mod_code": [
        "u = g [ cc [ p ] [ i ] ] [ j ] ;",
        "int mx = min ( mx , an ) ;"
      ],
      "err_line": 32,
      "err_msg": "‘u’ was not declared in this scope"
    },
    {
      "mod_line": [
        32,
        42,
        7
      ],
      "mod_code": [
        "u = g [ cc [ p ] [ i ] ] [ j ] ;",
        "int mx = min ( mx , an ) ;",
        "cout << c [ i ] ;"
      ],
      "err_line": 32,
      "err_msg": "‘u’ was not declared in this scope"
    },
    {
      "mod_line": [
        32,
        7
      ],
      "mod_code": [
        "u = g [ cc [ p ] [ i ] ] [ j ] ;",
        "cout << c [ i ] ;"
      ],
      "err_line": 32,
      "err_msg": "‘u’ was not declared in this scope"
    }
  ]
}