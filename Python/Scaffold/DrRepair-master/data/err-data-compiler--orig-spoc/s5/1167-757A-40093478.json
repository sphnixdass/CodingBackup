{
  "meta": {
    "index": 1167,
    "hitid": "3IJ95K7NDX6575266C6DNW6V0DPGN8",
    "workerid": "ANZR2DCSMD0NX",
    "probid": "757A",
    "subid": "40093478"
  },
  "lines": [
    {
      "line": 0,
      "text": "m = map from char to int",
      "code": "map < char , int > m ;",
      "indent": 0
    },
    {
      "line": 1,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 2,
      "text": "a = string",
      "code": "string a ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "read a",
      "code": "cin >> a ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "len = integer , set len to length of a",
      "code": "int len = a . size ( ) ;",
      "indent": 1
    },
    {
      "line": 5,
      "text": "for i = 0 to len exclusive , increment m [ a [ i ] ]",
      "code": "for ( int i = 0 ; i < len ; i ++ ) m [ a [ i ] ] ++ ;",
      "indent": 1
    },
    {
      "line": 6,
      "text": "ans = integer with ans = 100000",
      "code": "int ans = 100000 ;",
      "indent": 1
    },
    {
      "line": 7,
      "text": "set ans to min of ans and m [ ' B ' ]",
      "code": "ans = min ( ans , m [ ' B ' ] ) ;",
      "indent": 1
    },
    {
      "line": 8,
      "text": "set ans to min of ans and m [ ' u ' ] / 2",
      "code": "ans = min ( ans , m [ ' u ' ] / 2 ) ;",
      "indent": 1
    },
    {
      "line": 9,
      "text": "set ans to min of ans and m [ ' l ' ]",
      "code": "ans = min ( ans , m [ ' l ' ] ) ;",
      "indent": 1
    },
    {
      "line": 10,
      "text": "set ans to min of ans and m [ ' b ' ]",
      "code": "ans = min ( ans , m [ ' b ' ] ) ;",
      "indent": 1
    },
    {
      "line": 11,
      "text": "set ans to min of ans and m [ ' a ' ] / 2",
      "code": "ans = min ( ans , m [ ' a ' ] / 2 ) ;",
      "indent": 1
    },
    {
      "line": 12,
      "text": "set ans to min of ans and m [ ' s ' ]",
      "code": "ans = min ( ans , m [ ' s ' ] ) ;",
      "indent": 1
    },
    {
      "line": 13,
      "text": "set ans to min of ans and m [ ' r ' ]",
      "code": "ans = min ( ans , m [ ' r ' ] ) ;",
      "indent": 1
    },
    {
      "line": 14,
      "text": "print ans and a new line",
      "code": "cout << ans << endl ;",
      "indent": 1
    },
    {
      "line": 15,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 16,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        2
      ],
      "mod_code": [
        "char a ;"
      ],
      "err_line": 4,
      "err_msg": "request for member ‘size’ in ‘a’, which is of non-class type ‘char’"
    },
    {
      "mod_line": [
        3
      ],
      "mod_code": [
        "cin >> n ;"
      ],
      "err_line": 3,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        6
      ],
      "mod_code": [
        "long long ans = 100000 ;"
      ],
      "err_line": 7,
      "err_msg": "no matching function for call to ‘min(long long int&, std::map<char, int>::mapped_type&)’"
    },
    {
      "mod_line": [
        7
      ],
      "mod_code": [
        "ans = min ( ans , m [ ' B ' ) ;"
      ],
      "err_line": 7,
      "err_msg": "expected ‘]’ before ‘)’ token"
    },
    {
      "mod_line": [
        8
      ],
      "mod_code": [
        "ans = min ( ans , m [ ' u ' ) / 2 ;"
      ],
      "err_line": 8,
      "err_msg": "expected ‘]’ before ‘)’ token"
    },
    {
      "mod_line": [
        9
      ],
      "mod_code": [
        "ans = min ( ans , m [ ' l ' ) ;"
      ],
      "err_line": 9,
      "err_msg": "expected ‘]’ before ‘)’ token"
    },
    {
      "mod_line": [
        10
      ],
      "mod_code": [
        "ans = min ( ans , m [ ' b ' ) ;"
      ],
      "err_line": 10,
      "err_msg": "expected ‘]’ before ‘)’ token"
    },
    {
      "mod_line": [
        11
      ],
      "mod_code": [
        "ans = min ( ans , m [ ' a ' ) / 2 ;"
      ],
      "err_line": 11,
      "err_msg": "expected ‘]’ before ‘)’ token"
    },
    {
      "mod_line": [
        12
      ],
      "mod_code": [
        "ans = min ( ans , m [ ' s ' ) ;"
      ],
      "err_line": 12,
      "err_msg": "expected ‘]’ before ‘)’ token"
    },
    {
      "mod_line": [
        13
      ],
      "mod_code": [
        "ans = min ( ans , m [ ' r ' ) ;"
      ],
      "err_line": 13,
      "err_msg": "expected ‘]’ before ‘)’ token"
    },
    {
      "mod_line": [
        7,
        9
      ],
      "mod_code": [
        "ans = min ( ans , m [ ' B ' ) ;",
        "ans = min ( ans , m [ ' l ' ) ;"
      ],
      "err_line": 7,
      "err_msg": "expected ‘]’ before ‘)’ token"
    },
    {
      "mod_line": [
        7,
        9,
        6
      ],
      "mod_code": [
        "ans = min ( ans , m [ ' B ' ) ;",
        "ans = min ( ans , m [ ' l ' ) ;",
        "long long ans = 100000 ;"
      ],
      "err_line": 7,
      "err_msg": "expected ‘]’ before ‘)’ token"
    },
    {
      "mod_line": [
        7,
        9,
        6,
        13
      ],
      "mod_code": [
        "ans = min ( ans , m [ ' B ' ) ;",
        "ans = min ( ans , m [ ' l ' ) ;",
        "long long ans = 100000 ;",
        "ans = min ( ans , m [ ' r ' ) ;"
      ],
      "err_line": 7,
      "err_msg": "expected ‘]’ before ‘)’ token"
    },
    {
      "mod_line": [
        7,
        9,
        6,
        11
      ],
      "mod_code": [
        "ans = min ( ans , m [ ' B ' ) ;",
        "ans = min ( ans , m [ ' l ' ) ;",
        "long long ans = 100000 ;",
        "ans = min ( ans , m [ ' a ' ) / 2 ;"
      ],
      "err_line": 7,
      "err_msg": "expected ‘]’ before ‘)’ token"
    },
    {
      "mod_line": [
        7,
        9,
        6,
        10
      ],
      "mod_code": [
        "ans = min ( ans , m [ ' B ' ) ;",
        "ans = min ( ans , m [ ' l ' ) ;",
        "long long ans = 100000 ;",
        "ans = min ( ans , m [ ' b ' ) ;"
      ],
      "err_line": 7,
      "err_msg": "expected ‘]’ before ‘)’ token"
    },
    {
      "mod_line": [
        7,
        9,
        13
      ],
      "mod_code": [
        "ans = min ( ans , m [ ' B ' ) ;",
        "ans = min ( ans , m [ ' l ' ) ;",
        "ans = min ( ans , m [ ' r ' ) ;"
      ],
      "err_line": 7,
      "err_msg": "expected ‘]’ before ‘)’ token"
    },
    {
      "mod_line": [
        7,
        9,
        13,
        11
      ],
      "mod_code": [
        "ans = min ( ans , m [ ' B ' ) ;",
        "ans = min ( ans , m [ ' l ' ) ;",
        "ans = min ( ans , m [ ' r ' ) ;",
        "ans = min ( ans , m [ ' a ' ) / 2 ;"
      ],
      "err_line": 7,
      "err_msg": "expected ‘]’ before ‘)’ token"
    },
    {
      "mod_line": [
        7,
        9,
        13,
        10
      ],
      "mod_code": [
        "ans = min ( ans , m [ ' B ' ) ;",
        "ans = min ( ans , m [ ' l ' ) ;",
        "ans = min ( ans , m [ ' r ' ) ;",
        "ans = min ( ans , m [ ' b ' ) ;"
      ],
      "err_line": 7,
      "err_msg": "expected ‘]’ before ‘)’ token"
    },
    {
      "mod_line": [
        7,
        9,
        11
      ],
      "mod_code": [
        "ans = min ( ans , m [ ' B ' ) ;",
        "ans = min ( ans , m [ ' l ' ) ;",
        "ans = min ( ans , m [ ' a ' ) / 2 ;"
      ],
      "err_line": 7,
      "err_msg": "expected ‘]’ before ‘)’ token"
    },
    {
      "mod_line": [
        7,
        9,
        11,
        10
      ],
      "mod_code": [
        "ans = min ( ans , m [ ' B ' ) ;",
        "ans = min ( ans , m [ ' l ' ) ;",
        "ans = min ( ans , m [ ' a ' ) / 2 ;",
        "ans = min ( ans , m [ ' b ' ) ;"
      ],
      "err_line": 7,
      "err_msg": "expected ‘]’ before ‘)’ token"
    },
    {
      "mod_line": [
        7,
        9,
        10
      ],
      "mod_code": [
        "ans = min ( ans , m [ ' B ' ) ;",
        "ans = min ( ans , m [ ' l ' ) ;",
        "ans = min ( ans , m [ ' b ' ) ;"
      ],
      "err_line": 7,
      "err_msg": "expected ‘]’ before ‘)’ token"
    },
    {
      "mod_line": [
        7,
        6
      ],
      "mod_code": [
        "ans = min ( ans , m [ ' B ' ) ;",
        "long long ans = 100000 ;"
      ],
      "err_line": 7,
      "err_msg": "expected ‘]’ before ‘)’ token"
    },
    {
      "mod_line": [
        7,
        6,
        13
      ],
      "mod_code": [
        "ans = min ( ans , m [ ' B ' ) ;",
        "long long ans = 100000 ;",
        "ans = min ( ans , m [ ' r ' ) ;"
      ],
      "err_line": 7,
      "err_msg": "expected ‘]’ before ‘)’ token"
    },
    {
      "mod_line": [
        7,
        6,
        13,
        11
      ],
      "mod_code": [
        "ans = min ( ans , m [ ' B ' ) ;",
        "long long ans = 100000 ;",
        "ans = min ( ans , m [ ' r ' ) ;",
        "ans = min ( ans , m [ ' a ' ) / 2 ;"
      ],
      "err_line": 7,
      "err_msg": "expected ‘]’ before ‘)’ token"
    },
    {
      "mod_line": [
        7,
        6,
        13,
        10
      ],
      "mod_code": [
        "ans = min ( ans , m [ ' B ' ) ;",
        "long long ans = 100000 ;",
        "ans = min ( ans , m [ ' r ' ) ;",
        "ans = min ( ans , m [ ' b ' ) ;"
      ],
      "err_line": 7,
      "err_msg": "expected ‘]’ before ‘)’ token"
    },
    {
      "mod_line": [
        7,
        6,
        11
      ],
      "mod_code": [
        "ans = min ( ans , m [ ' B ' ) ;",
        "long long ans = 100000 ;",
        "ans = min ( ans , m [ ' a ' ) / 2 ;"
      ],
      "err_line": 7,
      "err_msg": "expected ‘]’ before ‘)’ token"
    },
    {
      "mod_line": [
        7,
        6,
        11,
        10
      ],
      "mod_code": [
        "ans = min ( ans , m [ ' B ' ) ;",
        "long long ans = 100000 ;",
        "ans = min ( ans , m [ ' a ' ) / 2 ;",
        "ans = min ( ans , m [ ' b ' ) ;"
      ],
      "err_line": 7,
      "err_msg": "expected ‘]’ before ‘)’ token"
    },
    {
      "mod_line": [
        7,
        6,
        10
      ],
      "mod_code": [
        "ans = min ( ans , m [ ' B ' ) ;",
        "long long ans = 100000 ;",
        "ans = min ( ans , m [ ' b ' ) ;"
      ],
      "err_line": 7,
      "err_msg": "expected ‘]’ before ‘)’ token"
    },
    {
      "mod_line": [
        7,
        13
      ],
      "mod_code": [
        "ans = min ( ans , m [ ' B ' ) ;",
        "ans = min ( ans , m [ ' r ' ) ;"
      ],
      "err_line": 7,
      "err_msg": "expected ‘]’ before ‘)’ token"
    },
    {
      "mod_line": [
        7,
        13,
        11
      ],
      "mod_code": [
        "ans = min ( ans , m [ ' B ' ) ;",
        "ans = min ( ans , m [ ' r ' ) ;",
        "ans = min ( ans , m [ ' a ' ) / 2 ;"
      ],
      "err_line": 7,
      "err_msg": "expected ‘]’ before ‘)’ token"
    },
    {
      "mod_line": [
        7,
        13,
        11,
        10
      ],
      "mod_code": [
        "ans = min ( ans , m [ ' B ' ) ;",
        "ans = min ( ans , m [ ' r ' ) ;",
        "ans = min ( ans , m [ ' a ' ) / 2 ;",
        "ans = min ( ans , m [ ' b ' ) ;"
      ],
      "err_line": 7,
      "err_msg": "expected ‘]’ before ‘)’ token"
    },
    {
      "mod_line": [
        7,
        13,
        10
      ],
      "mod_code": [
        "ans = min ( ans , m [ ' B ' ) ;",
        "ans = min ( ans , m [ ' r ' ) ;",
        "ans = min ( ans , m [ ' b ' ) ;"
      ],
      "err_line": 7,
      "err_msg": "expected ‘]’ before ‘)’ token"
    },
    {
      "mod_line": [
        7,
        11
      ],
      "mod_code": [
        "ans = min ( ans , m [ ' B ' ) ;",
        "ans = min ( ans , m [ ' a ' ) / 2 ;"
      ],
      "err_line": 7,
      "err_msg": "expected ‘]’ before ‘)’ token"
    },
    {
      "mod_line": [
        7,
        11,
        10
      ],
      "mod_code": [
        "ans = min ( ans , m [ ' B ' ) ;",
        "ans = min ( ans , m [ ' a ' ) / 2 ;",
        "ans = min ( ans , m [ ' b ' ) ;"
      ],
      "err_line": 7,
      "err_msg": "expected ‘]’ before ‘)’ token"
    },
    {
      "mod_line": [
        7,
        10
      ],
      "mod_code": [
        "ans = min ( ans , m [ ' B ' ) ;",
        "ans = min ( ans , m [ ' b ' ) ;"
      ],
      "err_line": 7,
      "err_msg": "expected ‘]’ before ‘)’ token"
    },
    {
      "mod_line": [
        9,
        6
      ],
      "mod_code": [
        "ans = min ( ans , m [ ' l ' ) ;",
        "long long ans = 100000 ;"
      ],
      "err_line": 7,
      "err_msg": "no matching function for call to ‘min(long long int&, std::map<char, int>::mapped_type&)’"
    },
    {
      "mod_line": [
        9,
        6,
        13
      ],
      "mod_code": [
        "ans = min ( ans , m [ ' l ' ) ;",
        "long long ans = 100000 ;",
        "ans = min ( ans , m [ ' r ' ) ;"
      ],
      "err_line": 7,
      "err_msg": "no matching function for call to ‘min(long long int&, std::map<char, int>::mapped_type&)’"
    },
    {
      "mod_line": [
        9,
        6,
        13,
        11
      ],
      "mod_code": [
        "ans = min ( ans , m [ ' l ' ) ;",
        "long long ans = 100000 ;",
        "ans = min ( ans , m [ ' r ' ) ;",
        "ans = min ( ans , m [ ' a ' ) / 2 ;"
      ],
      "err_line": 7,
      "err_msg": "no matching function for call to ‘min(long long int&, std::map<char, int>::mapped_type&)’"
    },
    {
      "mod_line": [
        9,
        6,
        13,
        10
      ],
      "mod_code": [
        "ans = min ( ans , m [ ' l ' ) ;",
        "long long ans = 100000 ;",
        "ans = min ( ans , m [ ' r ' ) ;",
        "ans = min ( ans , m [ ' b ' ) ;"
      ],
      "err_line": 7,
      "err_msg": "no matching function for call to ‘min(long long int&, std::map<char, int>::mapped_type&)’"
    },
    {
      "mod_line": [
        9,
        6,
        11
      ],
      "mod_code": [
        "ans = min ( ans , m [ ' l ' ) ;",
        "long long ans = 100000 ;",
        "ans = min ( ans , m [ ' a ' ) / 2 ;"
      ],
      "err_line": 7,
      "err_msg": "no matching function for call to ‘min(long long int&, std::map<char, int>::mapped_type&)’"
    },
    {
      "mod_line": [
        9,
        6,
        11,
        10
      ],
      "mod_code": [
        "ans = min ( ans , m [ ' l ' ) ;",
        "long long ans = 100000 ;",
        "ans = min ( ans , m [ ' a ' ) / 2 ;",
        "ans = min ( ans , m [ ' b ' ) ;"
      ],
      "err_line": 7,
      "err_msg": "no matching function for call to ‘min(long long int&, std::map<char, int>::mapped_type&)’"
    },
    {
      "mod_line": [
        9,
        6,
        10
      ],
      "mod_code": [
        "ans = min ( ans , m [ ' l ' ) ;",
        "long long ans = 100000 ;",
        "ans = min ( ans , m [ ' b ' ) ;"
      ],
      "err_line": 7,
      "err_msg": "no matching function for call to ‘min(long long int&, std::map<char, int>::mapped_type&)’"
    },
    {
      "mod_line": [
        9,
        13
      ],
      "mod_code": [
        "ans = min ( ans , m [ ' l ' ) ;",
        "ans = min ( ans , m [ ' r ' ) ;"
      ],
      "err_line": 9,
      "err_msg": "expected ‘]’ before ‘)’ token"
    },
    {
      "mod_line": [
        9,
        13,
        11
      ],
      "mod_code": [
        "ans = min ( ans , m [ ' l ' ) ;",
        "ans = min ( ans , m [ ' r ' ) ;",
        "ans = min ( ans , m [ ' a ' ) / 2 ;"
      ],
      "err_line": 9,
      "err_msg": "expected ‘]’ before ‘)’ token"
    },
    {
      "mod_line": [
        9,
        13,
        11,
        10
      ],
      "mod_code": [
        "ans = min ( ans , m [ ' l ' ) ;",
        "ans = min ( ans , m [ ' r ' ) ;",
        "ans = min ( ans , m [ ' a ' ) / 2 ;",
        "ans = min ( ans , m [ ' b ' ) ;"
      ],
      "err_line": 9,
      "err_msg": "expected ‘]’ before ‘)’ token"
    },
    {
      "mod_line": [
        9,
        13,
        10
      ],
      "mod_code": [
        "ans = min ( ans , m [ ' l ' ) ;",
        "ans = min ( ans , m [ ' r ' ) ;",
        "ans = min ( ans , m [ ' b ' ) ;"
      ],
      "err_line": 9,
      "err_msg": "expected ‘]’ before ‘)’ token"
    },
    {
      "mod_line": [
        9,
        11
      ],
      "mod_code": [
        "ans = min ( ans , m [ ' l ' ) ;",
        "ans = min ( ans , m [ ' a ' ) / 2 ;"
      ],
      "err_line": 9,
      "err_msg": "expected ‘]’ before ‘)’ token"
    },
    {
      "mod_line": [
        9,
        11,
        10
      ],
      "mod_code": [
        "ans = min ( ans , m [ ' l ' ) ;",
        "ans = min ( ans , m [ ' a ' ) / 2 ;",
        "ans = min ( ans , m [ ' b ' ) ;"
      ],
      "err_line": 9,
      "err_msg": "expected ‘]’ before ‘)’ token"
    },
    {
      "mod_line": [
        9,
        10
      ],
      "mod_code": [
        "ans = min ( ans , m [ ' l ' ) ;",
        "ans = min ( ans , m [ ' b ' ) ;"
      ],
      "err_line": 9,
      "err_msg": "expected ‘]’ before ‘)’ token"
    },
    {
      "mod_line": [
        6,
        13
      ],
      "mod_code": [
        "long long ans = 100000 ;",
        "ans = min ( ans , m [ ' r ' ) ;"
      ],
      "err_line": 7,
      "err_msg": "no matching function for call to ‘min(long long int&, std::map<char, int>::mapped_type&)’"
    },
    {
      "mod_line": [
        6,
        13,
        11
      ],
      "mod_code": [
        "long long ans = 100000 ;",
        "ans = min ( ans , m [ ' r ' ) ;",
        "ans = min ( ans , m [ ' a ' ) / 2 ;"
      ],
      "err_line": 7,
      "err_msg": "no matching function for call to ‘min(long long int&, std::map<char, int>::mapped_type&)’"
    },
    {
      "mod_line": [
        6,
        13,
        11,
        10
      ],
      "mod_code": [
        "long long ans = 100000 ;",
        "ans = min ( ans , m [ ' r ' ) ;",
        "ans = min ( ans , m [ ' a ' ) / 2 ;",
        "ans = min ( ans , m [ ' b ' ) ;"
      ],
      "err_line": 7,
      "err_msg": "no matching function for call to ‘min(long long int&, std::map<char, int>::mapped_type&)’"
    },
    {
      "mod_line": [
        6,
        13,
        10
      ],
      "mod_code": [
        "long long ans = 100000 ;",
        "ans = min ( ans , m [ ' r ' ) ;",
        "ans = min ( ans , m [ ' b ' ) ;"
      ],
      "err_line": 7,
      "err_msg": "no matching function for call to ‘min(long long int&, std::map<char, int>::mapped_type&)’"
    },
    {
      "mod_line": [
        6,
        11
      ],
      "mod_code": [
        "long long ans = 100000 ;",
        "ans = min ( ans , m [ ' a ' ) / 2 ;"
      ],
      "err_line": 7,
      "err_msg": "no matching function for call to ‘min(long long int&, std::map<char, int>::mapped_type&)’"
    },
    {
      "mod_line": [
        6,
        11,
        10
      ],
      "mod_code": [
        "long long ans = 100000 ;",
        "ans = min ( ans , m [ ' a ' ) / 2 ;",
        "ans = min ( ans , m [ ' b ' ) ;"
      ],
      "err_line": 7,
      "err_msg": "no matching function for call to ‘min(long long int&, std::map<char, int>::mapped_type&)’"
    },
    {
      "mod_line": [
        6,
        10
      ],
      "mod_code": [
        "long long ans = 100000 ;",
        "ans = min ( ans , m [ ' b ' ) ;"
      ],
      "err_line": 7,
      "err_msg": "no matching function for call to ‘min(long long int&, std::map<char, int>::mapped_type&)’"
    },
    {
      "mod_line": [
        13,
        11
      ],
      "mod_code": [
        "ans = min ( ans , m [ ' r ' ) ;",
        "ans = min ( ans , m [ ' a ' ) / 2 ;"
      ],
      "err_line": 11,
      "err_msg": "expected ‘]’ before ‘)’ token"
    },
    {
      "mod_line": [
        13,
        11,
        10
      ],
      "mod_code": [
        "ans = min ( ans , m [ ' r ' ) ;",
        "ans = min ( ans , m [ ' a ' ) / 2 ;",
        "ans = min ( ans , m [ ' b ' ) ;"
      ],
      "err_line": 10,
      "err_msg": "expected ‘]’ before ‘)’ token"
    },
    {
      "mod_line": [
        13,
        10
      ],
      "mod_code": [
        "ans = min ( ans , m [ ' r ' ) ;",
        "ans = min ( ans , m [ ' b ' ) ;"
      ],
      "err_line": 10,
      "err_msg": "expected ‘]’ before ‘)’ token"
    },
    {
      "mod_line": [
        11,
        10
      ],
      "mod_code": [
        "ans = min ( ans , m [ ' a ' ) / 2 ;",
        "ans = min ( ans , m [ ' b ' ) ;"
      ],
      "err_line": 10,
      "err_msg": "expected ‘]’ before ‘)’ token"
    }
  ]
}