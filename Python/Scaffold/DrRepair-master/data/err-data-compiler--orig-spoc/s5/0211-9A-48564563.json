{
  "meta": {
    "index": 211,
    "hitid": "371DNNCG44WO9318KAG14IVP0AN8T5",
    "workerid": "A1APYLD4DUK33J",
    "probid": "9A",
    "subid": "48564563"
  },
  "lines": [
    {
      "line": 0,
      "text": "create constant double pi with pi = acosign of - 1",
      "code": "const double pi = acos ( - 1 ) ;",
      "indent": 0
    },
    {
      "line": 1,
      "text": "create constant integer N with N = 1000000005",
      "code": "const int N = 1000000005 ;",
      "indent": 0
    },
    {
      "line": 2,
      "text": "create constant integer MAXN with MAXN = 5",
      "code": "const int MAXN = 5 ;",
      "indent": 0
    },
    {
      "line": 3,
      "text": "create constant integer array dy with dy = { 0 , - 1 , 0 , 1 }",
      "code": "const int dy [ ] = { 0 , - 1 , 0 , 1 } ;",
      "indent": 0
    },
    {
      "line": 4,
      "text": "create constant integer array dx with dx = { - 1 , 0 , 1 , 0 }",
      "code": "const int dx [ ] = { - 1 , 0 , 1 , 0 } ;",
      "indent": 0
    },
    {
      "line": 5,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 6,
      "text": "create integers y , w",
      "code": "int y , w ;",
      "indent": 1
    },
    {
      "line": 7,
      "text": "read y read w",
      "code": "cin >> y >> w ;",
      "indent": 1
    },
    {
      "line": 8,
      "text": "create integer x with x = 6 - maximum of ( y and w ) + 1",
      "code": "int x = 6 - max ( y , w ) + 1 ;",
      "indent": 1
    },
    {
      "line": 9,
      "text": "if x is 6",
      "code": "if ( x == 6 )",
      "indent": 1
    },
    {
      "line": 10,
      "text": "print \" 1 / 1 \\ n \"",
      "code": "cout << \" 1/1\\n \" ;",
      "indent": 2
    },
    {
      "line": 11,
      "text": "else if x is 5",
      "code": "else if ( x == 5 )",
      "indent": 1
    },
    {
      "line": 12,
      "text": "print \" 5 / 6 \\ n \"",
      "code": "cout << \" 5/6\\n \" ;",
      "indent": 2
    },
    {
      "line": 13,
      "text": "else if x is 4",
      "code": "else if ( x == 4 )",
      "indent": 1
    },
    {
      "line": 14,
      "text": "print \" 2 / 3 \\ n \"",
      "code": "cout << \" 2/3\\n \" ;",
      "indent": 2
    },
    {
      "line": 15,
      "text": "else if x is 3",
      "code": "else if ( x == 3 )",
      "indent": 1
    },
    {
      "line": 16,
      "text": "print \" 1 / 2 \\ n \"",
      "code": "cout << \" 1/2\\n \" ;",
      "indent": 2
    },
    {
      "line": 17,
      "text": "else if x is 2",
      "code": "else if ( x == 2 )",
      "indent": 1
    },
    {
      "line": 18,
      "text": "print \" 1 / 3 \\ n \"",
      "code": "cout << \" 1/3\\n \" ;",
      "indent": 2
    },
    {
      "line": 19,
      "text": "else",
      "code": "else",
      "indent": 1
    },
    {
      "line": 20,
      "text": "print \" 1 / 6 \\ n \"",
      "code": "cout << \" 1/6\\n \" ;",
      "indent": 2
    },
    {
      "line": 21,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        3
      ],
      "mod_code": [
        "const int dy [ { 0 , - 1 , 0 , 1 } ;"
      ],
      "err_line": 3,
      "err_msg": "expected primary-expression before ‘{’ token"
    },
    {
      "mod_line": [
        4
      ],
      "mod_code": [
        "const dx [ ] = { - 1 , 0 , 1 , 0 } ;"
      ],
      "err_line": 4,
      "err_msg": "‘dx’ does not name a type"
    },
    {
      "mod_line": [
        7
      ],
      "mod_code": [
        "while ( cin >> y >> w )"
      ],
      "err_line": 9,
      "err_msg": "‘x’ was not declared in this scope"
    },
    {
      "mod_line": [
        9
      ],
      "mod_code": [
        "if ( x == 6 ) 6 ;"
      ],
      "err_line": 11,
      "err_msg": "‘else’ without a previous ‘if’"
    },
    {
      "mod_line": [
        10,
        12,
        14,
        9
      ],
      "mod_code": [
        "cout << \" 1\\n \" ;",
        "cout << \" 5 \" << \" \\n \" ;",
        "cout << \" 2 \" << \" \\n \" ;",
        "if ( x == 6 ) 6 ;"
      ],
      "err_line": 11,
      "err_msg": "‘else’ without a previous ‘if’"
    },
    {
      "mod_line": [
        10,
        12,
        16,
        9
      ],
      "mod_code": [
        "cout << \" 1\\n \" ;",
        "cout << \" 5 \" << \" \\n \" ;",
        "cout << \" 1 \" << \" \\n \" ;",
        "if ( x == 6 ) 6 ;"
      ],
      "err_line": 11,
      "err_msg": "‘else’ without a previous ‘if’"
    },
    {
      "mod_line": [
        10,
        12,
        11,
        9
      ],
      "mod_code": [
        "cout << \" 1\\n \" ;",
        "cout << \" 5 \" << \" \\n \" ;",
        "else if ( x == ' 5 ' )",
        "if ( x == 6 ) 6 ;"
      ],
      "err_line": 11,
      "err_msg": "‘else’ without a previous ‘if’"
    },
    {
      "mod_line": [
        10,
        12,
        9
      ],
      "mod_code": [
        "cout << \" 1\\n \" ;",
        "cout << \" 5 \" << \" \\n \" ;",
        "if ( x == 6 ) 6 ;"
      ],
      "err_line": 11,
      "err_msg": "‘else’ without a previous ‘if’"
    },
    {
      "mod_line": [
        10,
        14,
        16,
        9
      ],
      "mod_code": [
        "cout << \" 1\\n \" ;",
        "cout << \" 2 \" << \" \\n \" ;",
        "cout << \" 1 \" << \" \\n \" ;",
        "if ( x == 6 ) 6 ;"
      ],
      "err_line": 11,
      "err_msg": "‘else’ without a previous ‘if’"
    },
    {
      "mod_line": [
        10,
        14,
        11,
        9
      ],
      "mod_code": [
        "cout << \" 1\\n \" ;",
        "cout << \" 2 \" << \" \\n \" ;",
        "else if ( x == ' 5 ' )",
        "if ( x == 6 ) 6 ;"
      ],
      "err_line": 11,
      "err_msg": "‘else’ without a previous ‘if’"
    },
    {
      "mod_line": [
        10,
        14,
        9
      ],
      "mod_code": [
        "cout << \" 1\\n \" ;",
        "cout << \" 2 \" << \" \\n \" ;",
        "if ( x == 6 ) 6 ;"
      ],
      "err_line": 11,
      "err_msg": "‘else’ without a previous ‘if’"
    },
    {
      "mod_line": [
        10,
        16,
        11,
        9
      ],
      "mod_code": [
        "cout << \" 1\\n \" ;",
        "cout << \" 1 \" << \" \\n \" ;",
        "else if ( x == ' 5 ' )",
        "if ( x == 6 ) 6 ;"
      ],
      "err_line": 11,
      "err_msg": "‘else’ without a previous ‘if’"
    },
    {
      "mod_line": [
        10,
        16,
        9
      ],
      "mod_code": [
        "cout << \" 1\\n \" ;",
        "cout << \" 1 \" << \" \\n \" ;",
        "if ( x == 6 ) 6 ;"
      ],
      "err_line": 11,
      "err_msg": "‘else’ without a previous ‘if’"
    },
    {
      "mod_line": [
        10,
        11,
        9
      ],
      "mod_code": [
        "cout << \" 1\\n \" ;",
        "else if ( x == ' 5 ' )",
        "if ( x == 6 ) 6 ;"
      ],
      "err_line": 11,
      "err_msg": "‘else’ without a previous ‘if’"
    },
    {
      "mod_line": [
        10,
        9
      ],
      "mod_code": [
        "cout << \" 1\\n \" ;",
        "if ( x == 6 ) 6 ;"
      ],
      "err_line": 11,
      "err_msg": "‘else’ without a previous ‘if’"
    },
    {
      "mod_line": [
        12,
        14,
        16,
        9
      ],
      "mod_code": [
        "cout << \" 5 \" << \" \\n \" ;",
        "cout << \" 2 \" << \" \\n \" ;",
        "cout << \" 1 \" << \" \\n \" ;",
        "if ( x == 6 ) 6 ;"
      ],
      "err_line": 11,
      "err_msg": "‘else’ without a previous ‘if’"
    },
    {
      "mod_line": [
        12,
        14,
        11,
        9
      ],
      "mod_code": [
        "cout << \" 5 \" << \" \\n \" ;",
        "cout << \" 2 \" << \" \\n \" ;",
        "else if ( x == ' 5 ' )",
        "if ( x == 6 ) 6 ;"
      ],
      "err_line": 11,
      "err_msg": "‘else’ without a previous ‘if’"
    },
    {
      "mod_line": [
        12,
        14,
        9
      ],
      "mod_code": [
        "cout << \" 5 \" << \" \\n \" ;",
        "cout << \" 2 \" << \" \\n \" ;",
        "if ( x == 6 ) 6 ;"
      ],
      "err_line": 11,
      "err_msg": "‘else’ without a previous ‘if’"
    },
    {
      "mod_line": [
        12,
        16,
        11,
        9
      ],
      "mod_code": [
        "cout << \" 5 \" << \" \\n \" ;",
        "cout << \" 1 \" << \" \\n \" ;",
        "else if ( x == ' 5 ' )",
        "if ( x == 6 ) 6 ;"
      ],
      "err_line": 11,
      "err_msg": "‘else’ without a previous ‘if’"
    },
    {
      "mod_line": [
        12,
        16,
        9
      ],
      "mod_code": [
        "cout << \" 5 \" << \" \\n \" ;",
        "cout << \" 1 \" << \" \\n \" ;",
        "if ( x == 6 ) 6 ;"
      ],
      "err_line": 11,
      "err_msg": "‘else’ without a previous ‘if’"
    },
    {
      "mod_line": [
        12,
        11,
        9
      ],
      "mod_code": [
        "cout << \" 5 \" << \" \\n \" ;",
        "else if ( x == ' 5 ' )",
        "if ( x == 6 ) 6 ;"
      ],
      "err_line": 11,
      "err_msg": "‘else’ without a previous ‘if’"
    },
    {
      "mod_line": [
        12,
        9
      ],
      "mod_code": [
        "cout << \" 5 \" << \" \\n \" ;",
        "if ( x == 6 ) 6 ;"
      ],
      "err_line": 11,
      "err_msg": "‘else’ without a previous ‘if’"
    },
    {
      "mod_line": [
        14,
        16,
        11,
        9
      ],
      "mod_code": [
        "cout << \" 2 \" << \" \\n \" ;",
        "cout << \" 1 \" << \" \\n \" ;",
        "else if ( x == ' 5 ' )",
        "if ( x == 6 ) 6 ;"
      ],
      "err_line": 11,
      "err_msg": "‘else’ without a previous ‘if’"
    },
    {
      "mod_line": [
        14,
        16,
        9
      ],
      "mod_code": [
        "cout << \" 2 \" << \" \\n \" ;",
        "cout << \" 1 \" << \" \\n \" ;",
        "if ( x == 6 ) 6 ;"
      ],
      "err_line": 11,
      "err_msg": "‘else’ without a previous ‘if’"
    },
    {
      "mod_line": [
        14,
        11,
        9
      ],
      "mod_code": [
        "cout << \" 2 \" << \" \\n \" ;",
        "else if ( x == ' 5 ' )",
        "if ( x == 6 ) 6 ;"
      ],
      "err_line": 11,
      "err_msg": "‘else’ without a previous ‘if’"
    },
    {
      "mod_line": [
        14,
        9
      ],
      "mod_code": [
        "cout << \" 2 \" << \" \\n \" ;",
        "if ( x == 6 ) 6 ;"
      ],
      "err_line": 11,
      "err_msg": "‘else’ without a previous ‘if’"
    },
    {
      "mod_line": [
        16,
        11,
        9
      ],
      "mod_code": [
        "cout << \" 1 \" << \" \\n \" ;",
        "else if ( x == ' 5 ' )",
        "if ( x == 6 ) 6 ;"
      ],
      "err_line": 11,
      "err_msg": "‘else’ without a previous ‘if’"
    },
    {
      "mod_line": [
        16,
        9
      ],
      "mod_code": [
        "cout << \" 1 \" << \" \\n \" ;",
        "if ( x == 6 ) 6 ;"
      ],
      "err_line": 11,
      "err_msg": "‘else’ without a previous ‘if’"
    },
    {
      "mod_line": [
        11,
        9
      ],
      "mod_code": [
        "else if ( x == ' 5 ' )",
        "if ( x == 6 ) 6 ;"
      ],
      "err_line": 11,
      "err_msg": "‘else’ without a previous ‘if’"
    }
  ]
}