{
  "meta": {
    "index": 2242,
    "hitid": "3XDSWAMB22MDTQZTKI2B1ZGL6U8QCE",
    "workerid": "A1APYLD4DUK33J",
    "probid": "6A",
    "subid": "44252118"
  },
  "lines": [
    {
      "line": 0,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 1,
      "text": "create integers a , b , c , d",
      "code": "int a , b , c , d ;",
      "indent": 1
    },
    {
      "line": 2,
      "text": "create integer array n with size 4",
      "code": "int n [ 4 ] ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "for i = 0 to 4 exclusive , read n [ i ]",
      "code": "for ( int i = 0 ; i < 4 ; i ++ ) { cin >> n [ i ] ; }",
      "indent": 1
    },
    {
      "line": 4,
      "text": "for i = 0 to 3 exclusive",
      "code": "for ( int i = 0 ; i < 3 ; i ++ )",
      "indent": 1
    },
    {
      "line": 5,
      "text": "create integer max with max = i",
      "code": "int max = i ;",
      "indent": 2
    },
    {
      "line": 6,
      "text": "for j = i + 1 to 4 exclusive",
      "code": "for ( int j = i + 1 ; j < 4 ; j ++ )",
      "indent": 2
    },
    {
      "line": 7,
      "text": "if n [ j ] is greater than n [ max ] , set max to j",
      "code": "if ( n [ j ] > n [ max ] ) max = j ;",
      "indent": 3
    },
    {
      "line": 8,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 9,
      "text": "create integer temp with temp = n [ max ]",
      "code": "int temp = n [ max ] ;",
      "indent": 2
    },
    {
      "line": 10,
      "text": "set n [ max ] to n [ i ]",
      "code": "n [ max ] = n [ i ] ;",
      "indent": 2
    },
    {
      "line": 11,
      "text": "set n [ i ] to temp",
      "code": "n [ i ] = temp ;",
      "indent": 2
    },
    {
      "line": 12,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 13,
      "text": "if n [ 1 ] + n [ 2 ] is greater than n [ 0 ] or n [ 2 ] + n [ 3 ] is greater than n [ 1 ]",
      "code": "if ( ( n [ 1 ] + n [ 2 ] ) > n [ 0 ] || n [ 2 ] + n [ 3 ] > n [ 1 ] )",
      "indent": 1
    },
    {
      "line": 14,
      "text": "print \" TRIANGLE \" print newline",
      "code": "cout << \" TRIANGLE \" << endl ;",
      "indent": 2
    },
    {
      "line": 15,
      "text": "else if n [ 1 ] + n [ 2 ] is n [ 0 ] or n [ 2 ] + n [ 3 ] is n [ 1 ]",
      "code": "else if ( ( n [ 1 ] + n [ 2 ] ) == n [ 0 ] || n [ 2 ] + n [ 3 ] == n [ 1 ] )",
      "indent": 1
    },
    {
      "line": 16,
      "text": "print \" SEGMENT \" print newline",
      "code": "cout << \" SEGMENT \" << endl ;",
      "indent": 2
    },
    {
      "line": 17,
      "text": "else",
      "code": "else",
      "indent": 1
    },
    {
      "line": 18,
      "text": "print \" IMPOSSIBLE \" print newline",
      "code": "cout << \" IMPOSSIBLE \" << endl ;",
      "indent": 2
    },
    {
      "line": 19,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 20,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        2
      ],
      "mod_code": [
        "int n , n ;"
      ],
      "err_line": 2,
      "err_msg": "redeclaration of ‘int n’"
    },
    {
      "mod_line": [
        4
      ],
      "mod_code": [
        "for ( i = 0 ; i < 3 ; i ++ )"
      ],
      "err_line": 4,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        6
      ],
      "mod_code": [
        "for ( j = i + 1 ; j < 4 ; j ++ )"
      ],
      "err_line": 6,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        6
      ],
      "mod_code": [
        "for ( i = 0 ; i < 3 ; i ++ )",
        "for ( j = i + 1 ; j < 4 ; j ++ )"
      ],
      "err_line": 4,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        4,
        6,
        13
      ],
      "mod_code": [
        "for ( i = 0 ; i < 3 ; i ++ )",
        "for ( j = i + 1 ; j < 4 ; j ++ )",
        "if ( n [ 1 ] + n [ 2 ] > n [ 2 ] || n [ 2 ] + n [ 3 ] > n [ 1 ] )"
      ],
      "err_line": 4,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        4,
        6,
        13,
        2
      ],
      "mod_code": [
        "for ( i = 0 ; i < 3 ; i ++ )",
        "for ( j = i + 1 ; j < 4 ; j ++ )",
        "if ( n [ 1 ] + n [ 2 ] > n [ 2 ] || n [ 2 ] + n [ 3 ] > n [ 1 ] )",
        "int n , n ;"
      ],
      "err_line": 2,
      "err_msg": "redeclaration of ‘int n’"
    },
    {
      "mod_line": [
        4,
        6,
        13,
        11
      ],
      "mod_code": [
        "for ( i = 0 ; i < 3 ; i ++ )",
        "for ( j = i + 1 ; j < 4 ; j ++ )",
        "if ( n [ 1 ] + n [ 2 ] > n [ 2 ] || n [ 2 ] + n [ 3 ] > n [ 1 ] )",
        "n [ i ] = ' temp ' ;"
      ],
      "err_line": 4,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        4,
        6,
        2
      ],
      "mod_code": [
        "for ( i = 0 ; i < 3 ; i ++ )",
        "for ( j = i + 1 ; j < 4 ; j ++ )",
        "int n , n ;"
      ],
      "err_line": 2,
      "err_msg": "redeclaration of ‘int n’"
    },
    {
      "mod_line": [
        4,
        6,
        2,
        11
      ],
      "mod_code": [
        "for ( i = 0 ; i < 3 ; i ++ )",
        "for ( j = i + 1 ; j < 4 ; j ++ )",
        "int n , n ;",
        "n [ i ] = ' temp ' ;"
      ],
      "err_line": 2,
      "err_msg": "redeclaration of ‘int n’"
    },
    {
      "mod_line": [
        4,
        6,
        11
      ],
      "mod_code": [
        "for ( i = 0 ; i < 3 ; i ++ )",
        "for ( j = i + 1 ; j < 4 ; j ++ )",
        "n [ i ] = ' temp ' ;"
      ],
      "err_line": 4,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        4,
        13
      ],
      "mod_code": [
        "for ( i = 0 ; i < 3 ; i ++ )",
        "if ( n [ 1 ] + n [ 2 ] > n [ 2 ] || n [ 2 ] + n [ 3 ] > n [ 1 ] )"
      ],
      "err_line": 4,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        4,
        13,
        2
      ],
      "mod_code": [
        "for ( i = 0 ; i < 3 ; i ++ )",
        "if ( n [ 1 ] + n [ 2 ] > n [ 2 ] || n [ 2 ] + n [ 3 ] > n [ 1 ] )",
        "int n , n ;"
      ],
      "err_line": 2,
      "err_msg": "redeclaration of ‘int n’"
    },
    {
      "mod_line": [
        4,
        13,
        2,
        11
      ],
      "mod_code": [
        "for ( i = 0 ; i < 3 ; i ++ )",
        "if ( n [ 1 ] + n [ 2 ] > n [ 2 ] || n [ 2 ] + n [ 3 ] > n [ 1 ] )",
        "int n , n ;",
        "n [ i ] = ' temp ' ;"
      ],
      "err_line": 2,
      "err_msg": "redeclaration of ‘int n’"
    },
    {
      "mod_line": [
        4,
        13,
        11
      ],
      "mod_code": [
        "for ( i = 0 ; i < 3 ; i ++ )",
        "if ( n [ 1 ] + n [ 2 ] > n [ 2 ] || n [ 2 ] + n [ 3 ] > n [ 1 ] )",
        "n [ i ] = ' temp ' ;"
      ],
      "err_line": 4,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        4,
        2
      ],
      "mod_code": [
        "for ( i = 0 ; i < 3 ; i ++ )",
        "int n , n ;"
      ],
      "err_line": 2,
      "err_msg": "redeclaration of ‘int n’"
    },
    {
      "mod_line": [
        4,
        2,
        11
      ],
      "mod_code": [
        "for ( i = 0 ; i < 3 ; i ++ )",
        "int n , n ;",
        "n [ i ] = ' temp ' ;"
      ],
      "err_line": 2,
      "err_msg": "redeclaration of ‘int n’"
    },
    {
      "mod_line": [
        4,
        11
      ],
      "mod_code": [
        "for ( i = 0 ; i < 3 ; i ++ )",
        "n [ i ] = ' temp ' ;"
      ],
      "err_line": 4,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        6,
        13
      ],
      "mod_code": [
        "for ( j = i + 1 ; j < 4 ; j ++ )",
        "if ( n [ 1 ] + n [ 2 ] > n [ 2 ] || n [ 2 ] + n [ 3 ] > n [ 1 ] )"
      ],
      "err_line": 6,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        13,
        2
      ],
      "mod_code": [
        "for ( j = i + 1 ; j < 4 ; j ++ )",
        "if ( n [ 1 ] + n [ 2 ] > n [ 2 ] || n [ 2 ] + n [ 3 ] > n [ 1 ] )",
        "int n , n ;"
      ],
      "err_line": 2,
      "err_msg": "redeclaration of ‘int n’"
    },
    {
      "mod_line": [
        6,
        13,
        2,
        11
      ],
      "mod_code": [
        "for ( j = i + 1 ; j < 4 ; j ++ )",
        "if ( n [ 1 ] + n [ 2 ] > n [ 2 ] || n [ 2 ] + n [ 3 ] > n [ 1 ] )",
        "int n , n ;",
        "n [ i ] = ' temp ' ;"
      ],
      "err_line": 2,
      "err_msg": "redeclaration of ‘int n’"
    },
    {
      "mod_line": [
        6,
        13,
        11
      ],
      "mod_code": [
        "for ( j = i + 1 ; j < 4 ; j ++ )",
        "if ( n [ 1 ] + n [ 2 ] > n [ 2 ] || n [ 2 ] + n [ 3 ] > n [ 1 ] )",
        "n [ i ] = ' temp ' ;"
      ],
      "err_line": 6,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        2
      ],
      "mod_code": [
        "for ( j = i + 1 ; j < 4 ; j ++ )",
        "int n , n ;"
      ],
      "err_line": 2,
      "err_msg": "redeclaration of ‘int n’"
    },
    {
      "mod_line": [
        6,
        2,
        11
      ],
      "mod_code": [
        "for ( j = i + 1 ; j < 4 ; j ++ )",
        "int n , n ;",
        "n [ i ] = ' temp ' ;"
      ],
      "err_line": 2,
      "err_msg": "redeclaration of ‘int n’"
    },
    {
      "mod_line": [
        6,
        11
      ],
      "mod_code": [
        "for ( j = i + 1 ; j < 4 ; j ++ )",
        "n [ i ] = ' temp ' ;"
      ],
      "err_line": 6,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        2
      ],
      "mod_code": [
        "if ( n [ 1 ] + n [ 2 ] > n [ 2 ] || n [ 2 ] + n [ 3 ] > n [ 1 ] )",
        "int n , n ;"
      ],
      "err_line": 2,
      "err_msg": "redeclaration of ‘int n’"
    },
    {
      "mod_line": [
        13,
        2,
        11
      ],
      "mod_code": [
        "if ( n [ 1 ] + n [ 2 ] > n [ 2 ] || n [ 2 ] + n [ 3 ] > n [ 1 ] )",
        "int n , n ;",
        "n [ i ] = ' temp ' ;"
      ],
      "err_line": 2,
      "err_msg": "redeclaration of ‘int n’"
    },
    {
      "mod_line": [
        2,
        11
      ],
      "mod_code": [
        "int n , n ;",
        "n [ i ] = ' temp ' ;"
      ],
      "err_line": 2,
      "err_msg": "redeclaration of ‘int n’"
    }
  ]
}