{
  "meta": {
    "index": 2353,
    "hitid": "3B286OTISEB8EOYI5EMBY3EBTY7AJM",
    "workerid": "A1EKVUFWL7OJMO",
    "probid": "284A",
    "subid": "48897473"
  },
  "lines": [
    {
      "line": 0,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 1,
      "text": "p , cnt = long long",
      "code": "long long p , cnt = 0 ;",
      "indent": 1
    },
    {
      "line": 2,
      "text": "read p",
      "code": "cin >> p ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "for i = 1 to p exclusive",
      "code": "for ( long long i = 1 ; i < p ; i ++ )",
      "indent": 1
    },
    {
      "line": 4,
      "text": "j = long long with j = 1",
      "code": "long long j = 1 ;",
      "indent": 2
    },
    {
      "line": 5,
      "text": "isRoot = bool with isRoot = true",
      "code": "bool isRoot = true ;",
      "indent": 2
    },
    {
      "line": 6,
      "text": "for i = 1 to p - 1 exclusive",
      "code": "for ( long long k = 1 ; k < p - 1 ; k ++ )",
      "indent": 2
    },
    {
      "line": 7,
      "text": "j = j * i",
      "code": "j *= i ;",
      "indent": 3
    },
    {
      "line": 8,
      "text": "j = j modulo p",
      "code": "j %= p ;",
      "indent": 3
    },
    {
      "line": 9,
      "text": "if j is 1",
      "code": "if ( j == 1 )",
      "indent": 3
    },
    {
      "line": 10,
      "text": "isRoot = false",
      "code": "isRoot = false ;",
      "indent": 4
    },
    {
      "line": 11,
      "text": "break loop",
      "code": "break ;",
      "indent": 4
    },
    {
      "line": 12,
      "text": "DUMMY",
      "code": "}",
      "indent": 3
    },
    {
      "line": 13,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 14,
      "text": "if isRoot",
      "code": "if ( isRoot )",
      "indent": 2
    },
    {
      "line": 15,
      "text": "j = j * i",
      "code": "j *= i ;",
      "indent": 3
    },
    {
      "line": 16,
      "text": "j = j modulo p",
      "code": "j %= p ;",
      "indent": 3
    },
    {
      "line": 17,
      "text": "if j is 1 , increment cnt",
      "code": "if ( j == 1 ) cnt ++ ;",
      "indent": 3
    },
    {
      "line": 18,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 19,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 20,
      "text": "print cnt",
      "code": "cout << cnt << endl ;",
      "indent": 1
    },
    {
      "line": 21,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        3
      ],
      "mod_code": [
        "for ( i = 1 ; i < p ; i ++ )"
      ],
      "err_line": 3,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        11
      ],
      "mod_code": [
        "break break ;"
      ],
      "err_line": 11,
      "err_msg": "expected ‘;’ before ‘break’"
    },
    {
      "mod_line": [
        6,
        10,
        3
      ],
      "mod_code": [
        "for ( int i = 1 ; i < p - 1 ; i ++ )",
        "bool isRoot = false ;",
        "for ( i = 1 ; i < p ; i ++ )"
      ],
      "err_line": 3,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        10,
        3,
        9
      ],
      "mod_code": [
        "for ( int i = 1 ; i < p - 1 ; i ++ )",
        "bool isRoot = false ;",
        "for ( i = 1 ; i < p ; i ++ )",
        "if ( j == 1 ) j ++ ;"
      ],
      "err_line": 3,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        10,
        3,
        11
      ],
      "mod_code": [
        "for ( int i = 1 ; i < p - 1 ; i ++ )",
        "bool isRoot = false ;",
        "for ( i = 1 ; i < p ; i ++ )",
        "break break ;"
      ],
      "err_line": 3,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        10,
        9,
        11
      ],
      "mod_code": [
        "for ( int i = 1 ; i < p - 1 ; i ++ )",
        "bool isRoot = false ;",
        "if ( j == 1 ) j ++ ;",
        "break break ;"
      ],
      "err_line": 11,
      "err_msg": "expected ‘;’ before ‘break’"
    },
    {
      "mod_line": [
        6,
        10,
        11
      ],
      "mod_code": [
        "for ( int i = 1 ; i < p - 1 ; i ++ )",
        "bool isRoot = false ;",
        "break break ;"
      ],
      "err_line": 11,
      "err_msg": "expected ‘;’ before ‘break’"
    },
    {
      "mod_line": [
        6,
        3
      ],
      "mod_code": [
        "for ( int i = 1 ; i < p - 1 ; i ++ )",
        "for ( i = 1 ; i < p ; i ++ )"
      ],
      "err_line": 3,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        3,
        9
      ],
      "mod_code": [
        "for ( int i = 1 ; i < p - 1 ; i ++ )",
        "for ( i = 1 ; i < p ; i ++ )",
        "if ( j == 1 ) j ++ ;"
      ],
      "err_line": 3,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        3,
        9,
        11
      ],
      "mod_code": [
        "for ( int i = 1 ; i < p - 1 ; i ++ )",
        "for ( i = 1 ; i < p ; i ++ )",
        "if ( j == 1 ) j ++ ;",
        "break break ;"
      ],
      "err_line": 3,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        3,
        11
      ],
      "mod_code": [
        "for ( int i = 1 ; i < p - 1 ; i ++ )",
        "for ( i = 1 ; i < p ; i ++ )",
        "break break ;"
      ],
      "err_line": 3,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        9,
        11
      ],
      "mod_code": [
        "for ( int i = 1 ; i < p - 1 ; i ++ )",
        "if ( j == 1 ) j ++ ;",
        "break break ;"
      ],
      "err_line": 11,
      "err_msg": "expected ‘;’ before ‘break’"
    },
    {
      "mod_line": [
        6,
        11
      ],
      "mod_code": [
        "for ( int i = 1 ; i < p - 1 ; i ++ )",
        "break break ;"
      ],
      "err_line": 11,
      "err_msg": "expected ‘;’ before ‘break’"
    },
    {
      "mod_line": [
        10,
        6,
        3
      ],
      "mod_code": [
        "bool isRoot = false ;",
        "for ( i = 1 ; i < p - 1 ; i ++ )",
        "for ( i = 1 ; i < p ; i ++ )"
      ],
      "err_line": 3,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        10,
        6,
        3,
        9
      ],
      "mod_code": [
        "bool isRoot = false ;",
        "for ( i = 1 ; i < p - 1 ; i ++ )",
        "for ( i = 1 ; i < p ; i ++ )",
        "if ( j == 1 ) j ++ ;"
      ],
      "err_line": 3,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        10,
        6,
        3,
        11
      ],
      "mod_code": [
        "bool isRoot = false ;",
        "for ( i = 1 ; i < p - 1 ; i ++ )",
        "for ( i = 1 ; i < p ; i ++ )",
        "break break ;"
      ],
      "err_line": 3,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        10,
        6,
        9,
        11
      ],
      "mod_code": [
        "bool isRoot = false ;",
        "for ( i = 1 ; i < p - 1 ; i ++ )",
        "if ( j == 1 ) j ++ ;",
        "break break ;"
      ],
      "err_line": 11,
      "err_msg": "expected ‘;’ before ‘break’"
    },
    {
      "mod_line": [
        10,
        6,
        11
      ],
      "mod_code": [
        "bool isRoot = false ;",
        "for ( i = 1 ; i < p - 1 ; i ++ )",
        "break break ;"
      ],
      "err_line": 11,
      "err_msg": "expected ‘;’ before ‘break’"
    },
    {
      "mod_line": [
        10,
        3
      ],
      "mod_code": [
        "bool isRoot = false ;",
        "for ( i = 1 ; i < p ; i ++ )"
      ],
      "err_line": 3,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        10,
        3,
        9
      ],
      "mod_code": [
        "bool isRoot = false ;",
        "for ( i = 1 ; i < p ; i ++ )",
        "if ( j == 1 ) j ++ ;"
      ],
      "err_line": 3,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        10,
        3,
        9,
        11
      ],
      "mod_code": [
        "bool isRoot = false ;",
        "for ( i = 1 ; i < p ; i ++ )",
        "if ( j == 1 ) j ++ ;",
        "break break ;"
      ],
      "err_line": 3,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        10,
        3,
        11
      ],
      "mod_code": [
        "bool isRoot = false ;",
        "for ( i = 1 ; i < p ; i ++ )",
        "break break ;"
      ],
      "err_line": 3,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        10,
        9,
        11
      ],
      "mod_code": [
        "bool isRoot = false ;",
        "if ( j == 1 ) j ++ ;",
        "break break ;"
      ],
      "err_line": 11,
      "err_msg": "expected ‘;’ before ‘break’"
    },
    {
      "mod_line": [
        10,
        11
      ],
      "mod_code": [
        "bool isRoot = false ;",
        "break break ;"
      ],
      "err_line": 11,
      "err_msg": "expected ‘;’ before ‘break’"
    },
    {
      "mod_line": [
        6,
        3
      ],
      "mod_code": [
        "for ( i = 1 ; i < p - 1 ; i ++ )",
        "for ( i = 1 ; i < p ; i ++ )"
      ],
      "err_line": 3,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        3,
        9
      ],
      "mod_code": [
        "for ( i = 1 ; i < p - 1 ; i ++ )",
        "for ( i = 1 ; i < p ; i ++ )",
        "if ( j == 1 ) j ++ ;"
      ],
      "err_line": 3,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        3,
        9,
        11
      ],
      "mod_code": [
        "for ( i = 1 ; i < p - 1 ; i ++ )",
        "for ( i = 1 ; i < p ; i ++ )",
        "if ( j == 1 ) j ++ ;",
        "break break ;"
      ],
      "err_line": 3,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        3,
        11
      ],
      "mod_code": [
        "for ( i = 1 ; i < p - 1 ; i ++ )",
        "for ( i = 1 ; i < p ; i ++ )",
        "break break ;"
      ],
      "err_line": 3,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        9,
        11
      ],
      "mod_code": [
        "for ( i = 1 ; i < p - 1 ; i ++ )",
        "if ( j == 1 ) j ++ ;",
        "break break ;"
      ],
      "err_line": 11,
      "err_msg": "expected ‘;’ before ‘break’"
    },
    {
      "mod_line": [
        6,
        11
      ],
      "mod_code": [
        "for ( i = 1 ; i < p - 1 ; i ++ )",
        "break break ;"
      ],
      "err_line": 11,
      "err_msg": "expected ‘;’ before ‘break’"
    },
    {
      "mod_line": [
        3,
        9
      ],
      "mod_code": [
        "for ( i = 1 ; i < p ; i ++ )",
        "if ( j == 1 ) j ++ ;"
      ],
      "err_line": 3,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        9,
        11
      ],
      "mod_code": [
        "for ( i = 1 ; i < p ; i ++ )",
        "if ( j == 1 ) j ++ ;",
        "break break ;"
      ],
      "err_line": 3,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        11
      ],
      "mod_code": [
        "for ( i = 1 ; i < p ; i ++ )",
        "break break ;"
      ],
      "err_line": 3,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        9,
        11
      ],
      "mod_code": [
        "if ( j == 1 ) j ++ ;",
        "break break ;"
      ],
      "err_line": 11,
      "err_msg": "expected ‘;’ before ‘break’"
    }
  ]
}