{
  "meta": {
    "index": 561,
    "hitid": "3ATYLI1PRTWXGSSJFXRTZYYGIF9JOS",
    "workerid": "A2J7P30MA3S6OV",
    "probid": "318A",
    "subid": "48668068"
  },
  "lines": [
    {
      "line": 0,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 1,
      "text": "create long long n and k",
      "code": "long long n , k ;",
      "indent": 1
    },
    {
      "line": 2,
      "text": "read n , k",
      "code": "cin >> n >> k ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "if n is odd",
      "code": "if ( n % 2 )",
      "indent": 1
    },
    {
      "line": 4,
      "text": "if k greater than ( ( n - 1 ) / 2 ) + 1 )",
      "code": "if ( k > ( ( n - 1 ) / 2 ) + 1 )",
      "indent": 2
    },
    {
      "line": 5,
      "text": "k = k - ( ( n - 1 ) / 2 ) - 1",
      "code": "k = k - ( ( n - 1 ) / 2 ) - 1 ;",
      "indent": 3
    },
    {
      "line": 6,
      "text": "assign 2 * k to k",
      "code": "k = 2 * k ;",
      "indent": 3
    },
    {
      "line": 7,
      "text": "esle",
      "code": "else",
      "indent": 2
    },
    {
      "line": 8,
      "text": "set k to 2 * k - 1",
      "code": "k = 2 * k - 1 ;",
      "indent": 3
    },
    {
      "line": 9,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 10,
      "text": "else",
      "code": "else",
      "indent": 1
    },
    {
      "line": 11,
      "text": "k greater than n / 2",
      "code": "if ( k > n / 2 )",
      "indent": 2
    },
    {
      "line": 12,
      "text": "k = k - ( n / 2 )",
      "code": "k = k - ( n / 2 ) ;",
      "indent": 3
    },
    {
      "line": 13,
      "text": "set k to 2 * k",
      "code": "k = 2 * k ;",
      "indent": 3
    },
    {
      "line": 14,
      "text": "else",
      "code": "else",
      "indent": 2
    },
    {
      "line": 15,
      "text": "set k = 2 * k - 1",
      "code": "k = 2 * k - 1 ;",
      "indent": 3
    },
    {
      "line": 16,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 17,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 18,
      "text": "print k",
      "code": "cout << k << endl ;",
      "indent": 1
    },
    {
      "line": 19,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 20,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        11
      ],
      "mod_code": [
        "k = n / 2 ;"
      ],
      "err_line": 14,
      "err_msg": "‘else’ without a previous ‘if’"
    },
    {
      "mod_line": [
        11
      ],
      "mod_code": [
        "k > n / 2 ;"
      ],
      "err_line": 14,
      "err_msg": "‘else’ without a previous ‘if’"
    },
    {
      "mod_line": [
        11,
        7
      ],
      "mod_code": [
        "k = n / 2 ;",
        "esle :"
      ],
      "err_line": 14,
      "err_msg": "‘else’ without a previous ‘if’"
    },
    {
      "mod_line": [
        11,
        7,
        4
      ],
      "mod_code": [
        "k = n / 2 ;",
        "esle :",
        "if ( k )"
      ],
      "err_line": 14,
      "err_msg": "‘else’ without a previous ‘if’"
    },
    {
      "mod_line": [
        11,
        7,
        4,
        5
      ],
      "mod_code": [
        "k = n / 2 ;",
        "esle :",
        "if ( k )",
        "int k = k - ( ( n - 1 ) / 2 ) - 1 ;"
      ],
      "err_line": 14,
      "err_msg": "‘else’ without a previous ‘if’"
    },
    {
      "mod_line": [
        11,
        7,
        4,
        12
      ],
      "mod_code": [
        "k = n / 2 ;",
        "esle :",
        "if ( k )",
        "int k = k - ( n / 2 ) ;"
      ],
      "err_line": 14,
      "err_msg": "‘else’ without a previous ‘if’"
    },
    {
      "mod_line": [
        11,
        7,
        4,
        13
      ],
      "mod_code": [
        "k = n / 2 ;",
        "esle :",
        "if ( k )",
        "k *= k ;"
      ],
      "err_line": 14,
      "err_msg": "‘else’ without a previous ‘if’"
    },
    {
      "mod_line": [
        11,
        7,
        5
      ],
      "mod_code": [
        "k = n / 2 ;",
        "esle :",
        "int k = k - ( ( n - 1 ) / 2 ) - 1 ;"
      ],
      "err_line": 14,
      "err_msg": "‘else’ without a previous ‘if’"
    },
    {
      "mod_line": [
        11,
        7,
        5,
        12
      ],
      "mod_code": [
        "k = n / 2 ;",
        "esle :",
        "int k = k - ( ( n - 1 ) / 2 ) - 1 ;",
        "int k = k - ( n / 2 ) ;"
      ],
      "err_line": 14,
      "err_msg": "‘else’ without a previous ‘if’"
    },
    {
      "mod_line": [
        11,
        7,
        5,
        13
      ],
      "mod_code": [
        "k = n / 2 ;",
        "esle :",
        "int k = k - ( ( n - 1 ) / 2 ) - 1 ;",
        "k *= k ;"
      ],
      "err_line": 14,
      "err_msg": "‘else’ without a previous ‘if’"
    },
    {
      "mod_line": [
        11,
        7,
        12
      ],
      "mod_code": [
        "k = n / 2 ;",
        "esle :",
        "int k = k - ( n / 2 ) ;"
      ],
      "err_line": 14,
      "err_msg": "‘else’ without a previous ‘if’"
    },
    {
      "mod_line": [
        11,
        7,
        12,
        13
      ],
      "mod_code": [
        "k = n / 2 ;",
        "esle :",
        "int k = k - ( n / 2 ) ;",
        "k *= k ;"
      ],
      "err_line": 14,
      "err_msg": "‘else’ without a previous ‘if’"
    },
    {
      "mod_line": [
        11,
        7,
        13
      ],
      "mod_code": [
        "k = n / 2 ;",
        "esle :",
        "k *= k ;"
      ],
      "err_line": 14,
      "err_msg": "‘else’ without a previous ‘if’"
    },
    {
      "mod_line": [
        11,
        4
      ],
      "mod_code": [
        "k = n / 2 ;",
        "if ( k )"
      ],
      "err_line": 14,
      "err_msg": "‘else’ without a previous ‘if’"
    },
    {
      "mod_line": [
        11,
        4,
        5
      ],
      "mod_code": [
        "k = n / 2 ;",
        "if ( k )",
        "int k = k - ( ( n - 1 ) / 2 ) - 1 ;"
      ],
      "err_line": 14,
      "err_msg": "‘else’ without a previous ‘if’"
    },
    {
      "mod_line": [
        11,
        4,
        5,
        12
      ],
      "mod_code": [
        "k = n / 2 ;",
        "if ( k )",
        "int k = k - ( ( n - 1 ) / 2 ) - 1 ;",
        "int k = k - ( n / 2 ) ;"
      ],
      "err_line": 14,
      "err_msg": "‘else’ without a previous ‘if’"
    },
    {
      "mod_line": [
        11,
        4,
        5,
        13
      ],
      "mod_code": [
        "k = n / 2 ;",
        "if ( k )",
        "int k = k - ( ( n - 1 ) / 2 ) - 1 ;",
        "k *= k ;"
      ],
      "err_line": 14,
      "err_msg": "‘else’ without a previous ‘if’"
    },
    {
      "mod_line": [
        11,
        4,
        12
      ],
      "mod_code": [
        "k = n / 2 ;",
        "if ( k )",
        "int k = k - ( n / 2 ) ;"
      ],
      "err_line": 14,
      "err_msg": "‘else’ without a previous ‘if’"
    },
    {
      "mod_line": [
        11,
        4,
        12,
        13
      ],
      "mod_code": [
        "k = n / 2 ;",
        "if ( k )",
        "int k = k - ( n / 2 ) ;",
        "k *= k ;"
      ],
      "err_line": 14,
      "err_msg": "‘else’ without a previous ‘if’"
    },
    {
      "mod_line": [
        11,
        4,
        13
      ],
      "mod_code": [
        "k = n / 2 ;",
        "if ( k )",
        "k *= k ;"
      ],
      "err_line": 14,
      "err_msg": "‘else’ without a previous ‘if’"
    },
    {
      "mod_line": [
        11,
        5
      ],
      "mod_code": [
        "k = n / 2 ;",
        "int k = k - ( ( n - 1 ) / 2 ) - 1 ;"
      ],
      "err_line": 14,
      "err_msg": "‘else’ without a previous ‘if’"
    },
    {
      "mod_line": [
        11,
        5,
        12
      ],
      "mod_code": [
        "k = n / 2 ;",
        "int k = k - ( ( n - 1 ) / 2 ) - 1 ;",
        "int k = k - ( n / 2 ) ;"
      ],
      "err_line": 14,
      "err_msg": "‘else’ without a previous ‘if’"
    },
    {
      "mod_line": [
        11,
        5,
        12,
        13
      ],
      "mod_code": [
        "k = n / 2 ;",
        "int k = k - ( ( n - 1 ) / 2 ) - 1 ;",
        "int k = k - ( n / 2 ) ;",
        "k *= k ;"
      ],
      "err_line": 14,
      "err_msg": "‘else’ without a previous ‘if’"
    },
    {
      "mod_line": [
        11,
        5,
        13
      ],
      "mod_code": [
        "k = n / 2 ;",
        "int k = k - ( ( n - 1 ) / 2 ) - 1 ;",
        "k *= k ;"
      ],
      "err_line": 14,
      "err_msg": "‘else’ without a previous ‘if’"
    },
    {
      "mod_line": [
        11,
        12
      ],
      "mod_code": [
        "k = n / 2 ;",
        "int k = k - ( n / 2 ) ;"
      ],
      "err_line": 14,
      "err_msg": "‘else’ without a previous ‘if’"
    },
    {
      "mod_line": [
        11,
        12,
        13
      ],
      "mod_code": [
        "k = n / 2 ;",
        "int k = k - ( n / 2 ) ;",
        "k *= k ;"
      ],
      "err_line": 14,
      "err_msg": "‘else’ without a previous ‘if’"
    },
    {
      "mod_line": [
        11,
        13
      ],
      "mod_code": [
        "k = n / 2 ;",
        "k *= k ;"
      ],
      "err_line": 14,
      "err_msg": "‘else’ without a previous ‘if’"
    }
  ]
}