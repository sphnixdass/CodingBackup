{
  "meta": {
    "index": 114,
    "hitid": "368IUKXGA523DXPDAEAJFUY16EMP6A",
    "workerid": "A1NBHCFZKJGHKW",
    "probid": "354A",
    "subid": "30944856"
  },
  "lines": [
    {
      "line": 0,
      "text": "w = long long array of size 1000006",
      "code": "long long w [ 1000006 ] = { } ;",
      "indent": 0
    },
    {
      "line": 1,
      "text": "d , sum = long long array of size 1000006 each",
      "code": "long long d [ 1000006 ] = { } , sum [ 1000006 ] = { } ;",
      "indent": 0
    },
    {
      "line": 2,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 3,
      "text": "n , l , r , q1 , q2 = long long",
      "code": "long long n , l , r , q1 , q2 ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "read n then l then r then q1 then q2",
      "code": "cin >> n >> l >> r >> q1 >> q2 ;",
      "indent": 1
    },
    {
      "line": 5,
      "text": "for i = 0 to n",
      "code": "for ( int i = 0 ; i < n ; i ++ )",
      "indent": 1
    },
    {
      "line": 6,
      "text": "read w [ i ]",
      "code": "cin >> w [ i ] ;",
      "indent": 2
    },
    {
      "line": 7,
      "text": "if i is 0",
      "code": "if ( i == 0 )",
      "indent": 2
    },
    {
      "line": 8,
      "text": "set sum [ i ] to w [ i ]",
      "code": "sum [ i ] = w [ i ] ;",
      "indent": 3
    },
    {
      "line": 9,
      "text": "else",
      "code": "else",
      "indent": 2
    },
    {
      "line": 10,
      "text": "set sum [ i ] to sum [ i - 1 ] + w [ i ]",
      "code": "sum [ i ] = sum [ i - 1 ] + w [ i ] ;",
      "indent": 3
    },
    {
      "line": 11,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 12,
      "text": "if n is 1",
      "code": "if ( n == 1 )",
      "indent": 1
    },
    {
      "line": 13,
      "text": "print min of l and r * w [ 0 ]",
      "code": "cout << ( min ( l , r ) * w [ 0 ] ) << endl ;",
      "indent": 2
    },
    {
      "line": 14,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 2
    },
    {
      "line": 15,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 16,
      "text": "st , en = int with st = 0 and en = n - 1",
      "code": "int st = 0 , en = n - 1 ;",
      "indent": 1
    },
    {
      "line": 17,
      "text": "left , right = bool with left = false and right = false",
      "code": "bool left = 0 , right = 0 ;",
      "indent": 1
    },
    {
      "line": 18,
      "text": "ct = long long with ct = 0",
      "code": "long long ct = 0 ;",
      "indent": 1
    },
    {
      "line": 19,
      "text": "if l is r",
      "code": "if ( l == r )",
      "indent": 1
    },
    {
      "line": 20,
      "text": "for i = 0 to n increment ct by w [ i ]",
      "code": "for ( int i = 0 ; i < n ; i ++ ) { ct += w [ i ] ; }",
      "indent": 2
    },
    {
      "line": 21,
      "text": "set ct to ct * l",
      "code": "ct = ct * l ;",
      "indent": 2
    },
    {
      "line": 22,
      "text": "print ct",
      "code": "cout << ct << endl ;",
      "indent": 2
    },
    {
      "line": 23,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 2
    },
    {
      "line": 24,
      "text": "else if r is less than l",
      "code": "else if ( r < l )",
      "indent": 1
    },
    {
      "line": 25,
      "text": "set ct to w [ n - 1 ] * r",
      "code": "ct = w [ n - 1 ] * r ;",
      "indent": 2
    },
    {
      "line": 26,
      "text": "set right to 1",
      "code": "right = 1 ;",
      "indent": 2
    },
    {
      "line": 27,
      "text": "set st to 0",
      "code": "st = 0 ;",
      "indent": 2
    },
    {
      "line": 28,
      "text": "set en to n - 1",
      "code": "en = n - 1 ;",
      "indent": 2
    },
    {
      "line": 29,
      "text": "set d [ en ] to ct + sum [ en - 1 ] * ( l ) + q1 * ( en - 1 )",
      "code": "d [ en ] = ct + sum [ en - 1 ] * ( l ) + q1 * ( en - 1 ) ;",
      "indent": 2
    },
    {
      "line": 30,
      "text": "set d [ st ] to ( sum [ n - 1 ] ) * r + ( n - 1 ) * q2",
      "code": "d [ st ] = ( sum [ n - 1 ] ) * r + ( n - 1 ) * q2 ;",
      "indent": 2
    },
    {
      "line": 31,
      "text": "set en to n - 2",
      "code": "en = n - 2 ;",
      "indent": 2
    },
    {
      "line": 32,
      "text": "for i = i to ( n - 1 ) / 2 inclusive set d [ i ] to d [ i - 1 ] - 2 * q2 + w [ i - 1 ] * l - w [ i - 1 ] * r",
      "code": "for ( int i = 1 ; i <= ( n - 1 ) / 2 ; i ++ ) { d [ i ] = d [ i - 1 ] - 2 * q2 + w [ i - 1 ] * l - w [ i - 1 ] * r ; }",
      "indent": 2
    },
    {
      "line": 33,
      "text": "for i = n - 2 to ( n - 1 ) / 2 decrementing i set d [ i ] to d [ i + 1 ] - 2 * q1 - w [ i ] * l + w [ i ] * r",
      "code": "for ( int i = n - 2 ; i > ( n - 1 ) / 2 ; i -- ) { d [ i ] = d [ i + 1 ] - 2 * q1 - w [ i ] * l + w [ i ] * r ; }",
      "indent": 2
    },
    {
      "line": 34,
      "text": "else",
      "code": "else",
      "indent": 1
    },
    {
      "line": 35,
      "text": "set ct to w [ 0 ] * l",
      "code": "ct = w [ 0 ] * l ;",
      "indent": 2
    },
    {
      "line": 36,
      "text": "set right to 1",
      "code": "right = 1 ;",
      "indent": 2
    },
    {
      "line": 37,
      "text": "set st to 0",
      "code": "st = 0 ;",
      "indent": 2
    },
    {
      "line": 38,
      "text": "set en to n - 1",
      "code": "en = n - 1 ;",
      "indent": 2
    },
    {
      "line": 39,
      "text": "set d [ en ] to sum [ en ] * ( l ) + q1 * ( n - 1 )",
      "code": "d [ en ] = sum [ en ] * ( l ) + q1 * ( n - 1 ) ;",
      "indent": 2
    },
    {
      "line": 40,
      "text": "set d [ st ] to ct + ( sum [ n - 1 ] - sum [ st ] ) * r + ( n - 1 - ( st + 1 ) ) * q2",
      "code": "d [ st ] = ct + ( sum [ n - 1 ] - sum [ st ] ) * r + ( n - 1 - ( st + 1 ) ) * q2 ;",
      "indent": 2
    },
    {
      "line": 41,
      "text": "set st to 1",
      "code": "st = 1 ;",
      "indent": 2
    },
    {
      "line": 42,
      "text": "for i = n - 2 to n / 2 inclusive decrementing i set d [ i ] to d [ i + 1 ] - 2 * q1 - w [ i + 1 ] * l + w [ i + 1 ] * r",
      "code": "for ( int i = n - 2 ; i >= n / 2 ; i -- ) { d [ i ] = d [ i + 1 ] - 2 * q1 - w [ i + 1 ] * l + w [ i + 1 ] * r ; }",
      "indent": 2
    },
    {
      "line": 43,
      "text": "for i = 1 to n / 2 set d [ i ] to d [ i - 1 ] - 2 * q2 - w [ i ] * r + w [ i ] * l",
      "code": "for ( int i = 1 ; i < n / 2 ; i ++ ) { d [ i ] = d [ i - 1 ] - 2 * q2 - w [ i ] * r + w [ i ] * l ; }",
      "indent": 2
    },
    {
      "line": 44,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 45,
      "text": "call sort on d and d + n",
      "code": "sort ( d , d + n ) ;",
      "indent": 1
    },
    {
      "line": 46,
      "text": "print d [ 0 ]",
      "code": "cout << d [ 0 ] << endl ;",
      "indent": 1
    },
    {
      "line": 47,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 48,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        32
      ],
      "mod_code": [
        "for ( int i = i ; i <= ( n - 1 ) / 2 ; i ++ ) { d [ i ] = d [ i - 1 ] - 2 * q2 [ i - 1 ] * l - w [ i - 1 ] * r ; }"
      ],
      "err_line": 32,
      "err_msg": "invalid types ‘long long int[int]’ for array subscript"
    },
    {
      "mod_line": [
        33
      ],
      "mod_code": [
        "for ( int i = n - 2 ; i >= ( n - 1 ) / 2 + q1 [ i ] * l + q1 [ i ] * l + w [ i ] * r + w [ i ] * r ; i ++ )"
      ],
      "err_line": 33,
      "err_msg": "invalid types ‘long long int[int]’ for array subscript"
    },
    {
      "mod_line": [
        42
      ],
      "mod_code": [
        "for ( int i = n - 2 ; i <= n / 2 ; i ++ ) d [ i ] = d [ i + 1 ] - 2 * q1 [ i + 1 ] * l + w [ i + 1 ] * r ;"
      ],
      "err_line": 42,
      "err_msg": "invalid types ‘long long int[int]’ for array subscript"
    },
    {
      "mod_line": [
        43
      ],
      "mod_code": [
        "for ( int i = 1 ; i <= n / 2 ; i ++ ) { d [ i ] = d [ i - 1 ] - 2 * q2 [ i ] * l + w [ i ] * l ; }"
      ],
      "err_line": 43,
      "err_msg": "invalid types ‘long long int[int]’ for array subscript"
    },
    {
      "mod_line": [
        1
      ],
      "mod_code": [
        "long long d [ 1000006 ] , sum , sum ;"
      ],
      "err_line": 1,
      "err_msg": "redefinition of ‘long long int sum’"
    },
    {
      "mod_line": [
        4
      ],
      "mod_code": [
        "cin >> n >> l >> r >> q1 >> 0 ;"
      ],
      "err_line": 4,
      "err_msg": "ambiguous overload for ‘operator>>’ (operand types are ‘std::basic_istream<char>::__istream_type {aka std::basic_istream<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        5
      ],
      "mod_code": [
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 5,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        6
      ],
      "mod_code": [
        "w >> w [ i ] ;"
      ],
      "err_line": 6,
      "err_msg": "invalid operands of types ‘long long int [1000006]’ and ‘long long int’ to binary ‘operator>>’"
    },
    {
      "mod_line": [
        16
      ],
      "mod_code": [
        "int st = 0 , st = n - 1 ;"
      ],
      "err_line": 16,
      "err_msg": "redeclaration of ‘int st’"
    },
    {
      "mod_line": [
        17
      ],
      "mod_code": [
        "bool left = false ;"
      ],
      "err_line": 26,
      "err_msg": "assignment of function ‘std::ios_base& std::right(std::ios_base&)’"
    },
    {
      "mod_line": [
        32
      ],
      "mod_code": [
        "for ( int i = i ; i <= ( n - 1 ) / 2 ; i ++ ) d [ i ] = d [ i - 1 ] - 2 * q2 [ i - 1 ] * l - w [ i - 1 ] * r ;"
      ],
      "err_line": 32,
      "err_msg": "invalid types ‘long long int[int]’ for array subscript"
    },
    {
      "mod_line": [
        33
      ],
      "mod_code": [
        "for ( int i = n - 2 ; i >= ( n - 1 ) / 2 + q1 [ i ] * 2 + q1 [ i ] * l + w [ i ] * r + w [ i ] * r ; i ++ )"
      ],
      "err_line": 33,
      "err_msg": "invalid types ‘long long int[int]’ for array subscript"
    },
    {
      "mod_line": [
        42
      ],
      "mod_code": [
        "for ( int i = n - 2 ; i <= n / 2 ; i ++ ) { d [ i ] = d [ i + 1 ] - 2 * q1 [ i + 1 ] * l + w [ i + 1 ] * r ; }"
      ],
      "err_line": 42,
      "err_msg": "invalid types ‘long long int[int]’ for array subscript"
    },
    {
      "mod_line": [
        43
      ],
      "mod_code": [
        "for ( int i = 1 ; i <= n / 2 ; i ++ ) { d [ i ] = d [ i - 1 ] - 2 * q2 [ i ] * r + w [ i ] * l ; }"
      ],
      "err_line": 43,
      "err_msg": "invalid types ‘long long int[int]’ for array subscript"
    },
    {
      "mod_line": [
        45
      ],
      "mod_code": [
        "sort ( d and d + n ) ;"
      ],
      "err_line": 45,
      "err_msg": "no matching function for call to ‘sort(bool)’"
    },
    {
      "mod_line": [
        13,
        29,
        32
      ],
      "mod_code": [
        "cout << min ( l , r * w [ 0 ] ) << endl ;",
        "d [ en ] = ct + sum [ en - 1 ] * ( l ) + ( en - 1 ) ;",
        "for ( int i = i ; i <= ( n - 1 ) / 2 ; i ++ ) { d [ i ] = d [ i - 1 ] - 2 * q2 [ i - 1 ] * l - w [ i - 1 ] * r ; }"
      ],
      "err_line": 32,
      "err_msg": "invalid types ‘long long int[int]’ for array subscript"
    },
    {
      "mod_line": [
        13,
        29,
        32,
        33
      ],
      "mod_code": [
        "cout << min ( l , r * w [ 0 ] ) << endl ;",
        "d [ en ] = ct + sum [ en - 1 ] * ( l ) + ( en - 1 ) ;",
        "for ( int i = i ; i <= ( n - 1 ) / 2 ; i ++ ) { d [ i ] = d [ i - 1 ] - 2 * q2 [ i - 1 ] * l - w [ i - 1 ] * r ; }",
        "for ( int i = n - 2 ; i >= ( n - 1 ) / 2 + q1 [ i ] * l + q1 [ i ] * l + w [ i ] * r + w [ i ] * r ; i ++ )"
      ],
      "err_line": 32,
      "err_msg": "invalid types ‘long long int[int]’ for array subscript"
    },
    {
      "mod_line": [
        13,
        29,
        32,
        42
      ],
      "mod_code": [
        "cout << min ( l , r * w [ 0 ] ) << endl ;",
        "d [ en ] = ct + sum [ en - 1 ] * ( l ) + ( en - 1 ) ;",
        "for ( int i = i ; i <= ( n - 1 ) / 2 ; i ++ ) { d [ i ] = d [ i - 1 ] - 2 * q2 [ i - 1 ] * l - w [ i - 1 ] * r ; }",
        "for ( int i = n - 2 ; i <= n / 2 ; i ++ ) d [ i ] = d [ i + 1 ] - 2 * q1 [ i + 1 ] * l + w [ i + 1 ] * r ;"
      ],
      "err_line": 32,
      "err_msg": "invalid types ‘long long int[int]’ for array subscript"
    },
    {
      "mod_line": [
        13,
        29,
        32,
        43
      ],
      "mod_code": [
        "cout << min ( l , r * w [ 0 ] ) << endl ;",
        "d [ en ] = ct + sum [ en - 1 ] * ( l ) + ( en - 1 ) ;",
        "for ( int i = i ; i <= ( n - 1 ) / 2 ; i ++ ) { d [ i ] = d [ i - 1 ] - 2 * q2 [ i - 1 ] * l - w [ i - 1 ] * r ; }",
        "for ( int i = 1 ; i <= n / 2 ; i ++ ) { d [ i ] = d [ i - 1 ] - 2 * q2 [ i ] * l + w [ i ] * l ; }"
      ],
      "err_line": 32,
      "err_msg": "invalid types ‘long long int[int]’ for array subscript"
    },
    {
      "mod_line": [
        13,
        29,
        33
      ],
      "mod_code": [
        "cout << min ( l , r * w [ 0 ] ) << endl ;",
        "d [ en ] = ct + sum [ en - 1 ] * ( l ) + ( en - 1 ) ;",
        "for ( int i = n - 2 ; i >= ( n - 1 ) / 2 + q1 [ i ] * l + q1 [ i ] * l + w [ i ] * r + w [ i ] * r ; i ++ )"
      ],
      "err_line": 33,
      "err_msg": "invalid types ‘long long int[int]’ for array subscript"
    },
    {
      "mod_line": [
        13,
        29,
        33,
        42
      ],
      "mod_code": [
        "cout << min ( l , r * w [ 0 ] ) << endl ;",
        "d [ en ] = ct + sum [ en - 1 ] * ( l ) + ( en - 1 ) ;",
        "for ( int i = n - 2 ; i >= ( n - 1 ) / 2 + q1 [ i ] * l + q1 [ i ] * l + w [ i ] * r + w [ i ] * r ; i ++ )",
        "for ( int i = n - 2 ; i <= n / 2 ; i ++ ) d [ i ] = d [ i + 1 ] - 2 * q1 [ i + 1 ] * l + w [ i + 1 ] * r ;"
      ],
      "err_line": 33,
      "err_msg": "invalid types ‘long long int[int]’ for array subscript"
    },
    {
      "mod_line": [
        13,
        29,
        33,
        43
      ],
      "mod_code": [
        "cout << min ( l , r * w [ 0 ] ) << endl ;",
        "d [ en ] = ct + sum [ en - 1 ] * ( l ) + ( en - 1 ) ;",
        "for ( int i = n - 2 ; i >= ( n - 1 ) / 2 + q1 [ i ] * l + q1 [ i ] * l + w [ i ] * r + w [ i ] * r ; i ++ )",
        "for ( int i = 1 ; i <= n / 2 ; i ++ ) { d [ i ] = d [ i - 1 ] - 2 * q2 [ i ] * l + w [ i ] * l ; }"
      ],
      "err_line": 33,
      "err_msg": "invalid types ‘long long int[int]’ for array subscript"
    },
    {
      "mod_line": [
        13,
        29,
        42
      ],
      "mod_code": [
        "cout << min ( l , r * w [ 0 ] ) << endl ;",
        "d [ en ] = ct + sum [ en - 1 ] * ( l ) + ( en - 1 ) ;",
        "for ( int i = n - 2 ; i <= n / 2 ; i ++ ) d [ i ] = d [ i + 1 ] - 2 * q1 [ i + 1 ] * l + w [ i + 1 ] * r ;"
      ],
      "err_line": 42,
      "err_msg": "invalid types ‘long long int[int]’ for array subscript"
    },
    {
      "mod_line": [
        13,
        29,
        42,
        43
      ],
      "mod_code": [
        "cout << min ( l , r * w [ 0 ] ) << endl ;",
        "d [ en ] = ct + sum [ en - 1 ] * ( l ) + ( en - 1 ) ;",
        "for ( int i = n - 2 ; i <= n / 2 ; i ++ ) d [ i ] = d [ i + 1 ] - 2 * q1 [ i + 1 ] * l + w [ i + 1 ] * r ;",
        "for ( int i = 1 ; i <= n / 2 ; i ++ ) { d [ i ] = d [ i - 1 ] - 2 * q2 [ i ] * l + w [ i ] * l ; }"
      ],
      "err_line": 42,
      "err_msg": "invalid types ‘long long int[int]’ for array subscript"
    },
    {
      "mod_line": [
        13,
        29,
        43
      ],
      "mod_code": [
        "cout << min ( l , r * w [ 0 ] ) << endl ;",
        "d [ en ] = ct + sum [ en - 1 ] * ( l ) + ( en - 1 ) ;",
        "for ( int i = 1 ; i <= n / 2 ; i ++ ) { d [ i ] = d [ i - 1 ] - 2 * q2 [ i ] * l + w [ i ] * l ; }"
      ],
      "err_line": 43,
      "err_msg": "invalid types ‘long long int[int]’ for array subscript"
    },
    {
      "mod_line": [
        13,
        32
      ],
      "mod_code": [
        "cout << min ( l , r * w [ 0 ] ) << endl ;",
        "for ( int i = i ; i <= ( n - 1 ) / 2 ; i ++ ) { d [ i ] = d [ i - 1 ] - 2 * q2 [ i - 1 ] * l - w [ i - 1 ] * r ; }"
      ],
      "err_line": 32,
      "err_msg": "invalid types ‘long long int[int]’ for array subscript"
    },
    {
      "mod_line": [
        13,
        32,
        33
      ],
      "mod_code": [
        "cout << min ( l , r * w [ 0 ] ) << endl ;",
        "for ( int i = i ; i <= ( n - 1 ) / 2 ; i ++ ) { d [ i ] = d [ i - 1 ] - 2 * q2 [ i - 1 ] * l - w [ i - 1 ] * r ; }",
        "for ( int i = n - 2 ; i >= ( n - 1 ) / 2 + q1 [ i ] * l + q1 [ i ] * l + w [ i ] * r + w [ i ] * r ; i ++ )"
      ],
      "err_line": 32,
      "err_msg": "invalid types ‘long long int[int]’ for array subscript"
    },
    {
      "mod_line": [
        13,
        32,
        33,
        42
      ],
      "mod_code": [
        "cout << min ( l , r * w [ 0 ] ) << endl ;",
        "for ( int i = i ; i <= ( n - 1 ) / 2 ; i ++ ) { d [ i ] = d [ i - 1 ] - 2 * q2 [ i - 1 ] * l - w [ i - 1 ] * r ; }",
        "for ( int i = n - 2 ; i >= ( n - 1 ) / 2 + q1 [ i ] * l + q1 [ i ] * l + w [ i ] * r + w [ i ] * r ; i ++ )",
        "for ( int i = n - 2 ; i <= n / 2 ; i ++ ) d [ i ] = d [ i + 1 ] - 2 * q1 [ i + 1 ] * l + w [ i + 1 ] * r ;"
      ],
      "err_line": 32,
      "err_msg": "invalid types ‘long long int[int]’ for array subscript"
    },
    {
      "mod_line": [
        13,
        32,
        33,
        43
      ],
      "mod_code": [
        "cout << min ( l , r * w [ 0 ] ) << endl ;",
        "for ( int i = i ; i <= ( n - 1 ) / 2 ; i ++ ) { d [ i ] = d [ i - 1 ] - 2 * q2 [ i - 1 ] * l - w [ i - 1 ] * r ; }",
        "for ( int i = n - 2 ; i >= ( n - 1 ) / 2 + q1 [ i ] * l + q1 [ i ] * l + w [ i ] * r + w [ i ] * r ; i ++ )",
        "for ( int i = 1 ; i <= n / 2 ; i ++ ) { d [ i ] = d [ i - 1 ] - 2 * q2 [ i ] * l + w [ i ] * l ; }"
      ],
      "err_line": 32,
      "err_msg": "invalid types ‘long long int[int]’ for array subscript"
    },
    {
      "mod_line": [
        13,
        32,
        42
      ],
      "mod_code": [
        "cout << min ( l , r * w [ 0 ] ) << endl ;",
        "for ( int i = i ; i <= ( n - 1 ) / 2 ; i ++ ) { d [ i ] = d [ i - 1 ] - 2 * q2 [ i - 1 ] * l - w [ i - 1 ] * r ; }",
        "for ( int i = n - 2 ; i <= n / 2 ; i ++ ) d [ i ] = d [ i + 1 ] - 2 * q1 [ i + 1 ] * l + w [ i + 1 ] * r ;"
      ],
      "err_line": 32,
      "err_msg": "invalid types ‘long long int[int]’ for array subscript"
    },
    {
      "mod_line": [
        13,
        32,
        42,
        43
      ],
      "mod_code": [
        "cout << min ( l , r * w [ 0 ] ) << endl ;",
        "for ( int i = i ; i <= ( n - 1 ) / 2 ; i ++ ) { d [ i ] = d [ i - 1 ] - 2 * q2 [ i - 1 ] * l - w [ i - 1 ] * r ; }",
        "for ( int i = n - 2 ; i <= n / 2 ; i ++ ) d [ i ] = d [ i + 1 ] - 2 * q1 [ i + 1 ] * l + w [ i + 1 ] * r ;",
        "for ( int i = 1 ; i <= n / 2 ; i ++ ) { d [ i ] = d [ i - 1 ] - 2 * q2 [ i ] * l + w [ i ] * l ; }"
      ],
      "err_line": 32,
      "err_msg": "invalid types ‘long long int[int]’ for array subscript"
    },
    {
      "mod_line": [
        13,
        32,
        43
      ],
      "mod_code": [
        "cout << min ( l , r * w [ 0 ] ) << endl ;",
        "for ( int i = i ; i <= ( n - 1 ) / 2 ; i ++ ) { d [ i ] = d [ i - 1 ] - 2 * q2 [ i - 1 ] * l - w [ i - 1 ] * r ; }",
        "for ( int i = 1 ; i <= n / 2 ; i ++ ) { d [ i ] = d [ i - 1 ] - 2 * q2 [ i ] * l + w [ i ] * l ; }"
      ],
      "err_line": 32,
      "err_msg": "invalid types ‘long long int[int]’ for array subscript"
    },
    {
      "mod_line": [
        13,
        33
      ],
      "mod_code": [
        "cout << min ( l , r * w [ 0 ] ) << endl ;",
        "for ( int i = n - 2 ; i >= ( n - 1 ) / 2 + q1 [ i ] * l + q1 [ i ] * l + w [ i ] * r + w [ i ] * r ; i ++ )"
      ],
      "err_line": 33,
      "err_msg": "invalid types ‘long long int[int]’ for array subscript"
    },
    {
      "mod_line": [
        13,
        33,
        42
      ],
      "mod_code": [
        "cout << min ( l , r * w [ 0 ] ) << endl ;",
        "for ( int i = n - 2 ; i >= ( n - 1 ) / 2 + q1 [ i ] * l + q1 [ i ] * l + w [ i ] * r + w [ i ] * r ; i ++ )",
        "for ( int i = n - 2 ; i <= n / 2 ; i ++ ) d [ i ] = d [ i + 1 ] - 2 * q1 [ i + 1 ] * l + w [ i + 1 ] * r ;"
      ],
      "err_line": 33,
      "err_msg": "invalid types ‘long long int[int]’ for array subscript"
    },
    {
      "mod_line": [
        13,
        33,
        42,
        43
      ],
      "mod_code": [
        "cout << min ( l , r * w [ 0 ] ) << endl ;",
        "for ( int i = n - 2 ; i >= ( n - 1 ) / 2 + q1 [ i ] * l + q1 [ i ] * l + w [ i ] * r + w [ i ] * r ; i ++ )",
        "for ( int i = n - 2 ; i <= n / 2 ; i ++ ) d [ i ] = d [ i + 1 ] - 2 * q1 [ i + 1 ] * l + w [ i + 1 ] * r ;",
        "for ( int i = 1 ; i <= n / 2 ; i ++ ) { d [ i ] = d [ i - 1 ] - 2 * q2 [ i ] * l + w [ i ] * l ; }"
      ],
      "err_line": 33,
      "err_msg": "invalid types ‘long long int[int]’ for array subscript"
    },
    {
      "mod_line": [
        13,
        33,
        43
      ],
      "mod_code": [
        "cout << min ( l , r * w [ 0 ] ) << endl ;",
        "for ( int i = n - 2 ; i >= ( n - 1 ) / 2 + q1 [ i ] * l + q1 [ i ] * l + w [ i ] * r + w [ i ] * r ; i ++ )",
        "for ( int i = 1 ; i <= n / 2 ; i ++ ) { d [ i ] = d [ i - 1 ] - 2 * q2 [ i ] * l + w [ i ] * l ; }"
      ],
      "err_line": 33,
      "err_msg": "invalid types ‘long long int[int]’ for array subscript"
    },
    {
      "mod_line": [
        13,
        42
      ],
      "mod_code": [
        "cout << min ( l , r * w [ 0 ] ) << endl ;",
        "for ( int i = n - 2 ; i <= n / 2 ; i ++ ) d [ i ] = d [ i + 1 ] - 2 * q1 [ i + 1 ] * l + w [ i + 1 ] * r ;"
      ],
      "err_line": 42,
      "err_msg": "invalid types ‘long long int[int]’ for array subscript"
    },
    {
      "mod_line": [
        13,
        42,
        43
      ],
      "mod_code": [
        "cout << min ( l , r * w [ 0 ] ) << endl ;",
        "for ( int i = n - 2 ; i <= n / 2 ; i ++ ) d [ i ] = d [ i + 1 ] - 2 * q1 [ i + 1 ] * l + w [ i + 1 ] * r ;",
        "for ( int i = 1 ; i <= n / 2 ; i ++ ) { d [ i ] = d [ i - 1 ] - 2 * q2 [ i ] * l + w [ i ] * l ; }"
      ],
      "err_line": 42,
      "err_msg": "invalid types ‘long long int[int]’ for array subscript"
    },
    {
      "mod_line": [
        13,
        43
      ],
      "mod_code": [
        "cout << min ( l , r * w [ 0 ] ) << endl ;",
        "for ( int i = 1 ; i <= n / 2 ; i ++ ) { d [ i ] = d [ i - 1 ] - 2 * q2 [ i ] * l + w [ i ] * l ; }"
      ],
      "err_line": 43,
      "err_msg": "invalid types ‘long long int[int]’ for array subscript"
    },
    {
      "mod_line": [
        29,
        32
      ],
      "mod_code": [
        "d [ en ] = ct + sum [ en - 1 ] * ( l ) + ( en - 1 ) ;",
        "for ( int i = i ; i <= ( n - 1 ) / 2 ; i ++ ) { d [ i ] = d [ i - 1 ] - 2 * q2 [ i - 1 ] * l - w [ i - 1 ] * r ; }"
      ],
      "err_line": 32,
      "err_msg": "invalid types ‘long long int[int]’ for array subscript"
    },
    {
      "mod_line": [
        29,
        32,
        33
      ],
      "mod_code": [
        "d [ en ] = ct + sum [ en - 1 ] * ( l ) + ( en - 1 ) ;",
        "for ( int i = i ; i <= ( n - 1 ) / 2 ; i ++ ) { d [ i ] = d [ i - 1 ] - 2 * q2 [ i - 1 ] * l - w [ i - 1 ] * r ; }",
        "for ( int i = n - 2 ; i >= ( n - 1 ) / 2 + q1 [ i ] * l + q1 [ i ] * l + w [ i ] * r + w [ i ] * r ; i ++ )"
      ],
      "err_line": 32,
      "err_msg": "invalid types ‘long long int[int]’ for array subscript"
    },
    {
      "mod_line": [
        29,
        32,
        33,
        42
      ],
      "mod_code": [
        "d [ en ] = ct + sum [ en - 1 ] * ( l ) + ( en - 1 ) ;",
        "for ( int i = i ; i <= ( n - 1 ) / 2 ; i ++ ) { d [ i ] = d [ i - 1 ] - 2 * q2 [ i - 1 ] * l - w [ i - 1 ] * r ; }",
        "for ( int i = n - 2 ; i >= ( n - 1 ) / 2 + q1 [ i ] * l + q1 [ i ] * l + w [ i ] * r + w [ i ] * r ; i ++ )",
        "for ( int i = n - 2 ; i <= n / 2 ; i ++ ) d [ i ] = d [ i + 1 ] - 2 * q1 [ i + 1 ] * l + w [ i + 1 ] * r ;"
      ],
      "err_line": 32,
      "err_msg": "invalid types ‘long long int[int]’ for array subscript"
    },
    {
      "mod_line": [
        29,
        32,
        33,
        43
      ],
      "mod_code": [
        "d [ en ] = ct + sum [ en - 1 ] * ( l ) + ( en - 1 ) ;",
        "for ( int i = i ; i <= ( n - 1 ) / 2 ; i ++ ) { d [ i ] = d [ i - 1 ] - 2 * q2 [ i - 1 ] * l - w [ i - 1 ] * r ; }",
        "for ( int i = n - 2 ; i >= ( n - 1 ) / 2 + q1 [ i ] * l + q1 [ i ] * l + w [ i ] * r + w [ i ] * r ; i ++ )",
        "for ( int i = 1 ; i <= n / 2 ; i ++ ) { d [ i ] = d [ i - 1 ] - 2 * q2 [ i ] * l + w [ i ] * l ; }"
      ],
      "err_line": 32,
      "err_msg": "invalid types ‘long long int[int]’ for array subscript"
    },
    {
      "mod_line": [
        29,
        32,
        42
      ],
      "mod_code": [
        "d [ en ] = ct + sum [ en - 1 ] * ( l ) + ( en - 1 ) ;",
        "for ( int i = i ; i <= ( n - 1 ) / 2 ; i ++ ) { d [ i ] = d [ i - 1 ] - 2 * q2 [ i - 1 ] * l - w [ i - 1 ] * r ; }",
        "for ( int i = n - 2 ; i <= n / 2 ; i ++ ) d [ i ] = d [ i + 1 ] - 2 * q1 [ i + 1 ] * l + w [ i + 1 ] * r ;"
      ],
      "err_line": 32,
      "err_msg": "invalid types ‘long long int[int]’ for array subscript"
    },
    {
      "mod_line": [
        29,
        32,
        42,
        43
      ],
      "mod_code": [
        "d [ en ] = ct + sum [ en - 1 ] * ( l ) + ( en - 1 ) ;",
        "for ( int i = i ; i <= ( n - 1 ) / 2 ; i ++ ) { d [ i ] = d [ i - 1 ] - 2 * q2 [ i - 1 ] * l - w [ i - 1 ] * r ; }",
        "for ( int i = n - 2 ; i <= n / 2 ; i ++ ) d [ i ] = d [ i + 1 ] - 2 * q1 [ i + 1 ] * l + w [ i + 1 ] * r ;",
        "for ( int i = 1 ; i <= n / 2 ; i ++ ) { d [ i ] = d [ i - 1 ] - 2 * q2 [ i ] * l + w [ i ] * l ; }"
      ],
      "err_line": 32,
      "err_msg": "invalid types ‘long long int[int]’ for array subscript"
    },
    {
      "mod_line": [
        29,
        32,
        43
      ],
      "mod_code": [
        "d [ en ] = ct + sum [ en - 1 ] * ( l ) + ( en - 1 ) ;",
        "for ( int i = i ; i <= ( n - 1 ) / 2 ; i ++ ) { d [ i ] = d [ i - 1 ] - 2 * q2 [ i - 1 ] * l - w [ i - 1 ] * r ; }",
        "for ( int i = 1 ; i <= n / 2 ; i ++ ) { d [ i ] = d [ i - 1 ] - 2 * q2 [ i ] * l + w [ i ] * l ; }"
      ],
      "err_line": 32,
      "err_msg": "invalid types ‘long long int[int]’ for array subscript"
    },
    {
      "mod_line": [
        29,
        33
      ],
      "mod_code": [
        "d [ en ] = ct + sum [ en - 1 ] * ( l ) + ( en - 1 ) ;",
        "for ( int i = n - 2 ; i >= ( n - 1 ) / 2 + q1 [ i ] * l + q1 [ i ] * l + w [ i ] * r + w [ i ] * r ; i ++ )"
      ],
      "err_line": 33,
      "err_msg": "invalid types ‘long long int[int]’ for array subscript"
    },
    {
      "mod_line": [
        29,
        33,
        42
      ],
      "mod_code": [
        "d [ en ] = ct + sum [ en - 1 ] * ( l ) + ( en - 1 ) ;",
        "for ( int i = n - 2 ; i >= ( n - 1 ) / 2 + q1 [ i ] * l + q1 [ i ] * l + w [ i ] * r + w [ i ] * r ; i ++ )",
        "for ( int i = n - 2 ; i <= n / 2 ; i ++ ) d [ i ] = d [ i + 1 ] - 2 * q1 [ i + 1 ] * l + w [ i + 1 ] * r ;"
      ],
      "err_line": 33,
      "err_msg": "invalid types ‘long long int[int]’ for array subscript"
    },
    {
      "mod_line": [
        29,
        33,
        42,
        43
      ],
      "mod_code": [
        "d [ en ] = ct + sum [ en - 1 ] * ( l ) + ( en - 1 ) ;",
        "for ( int i = n - 2 ; i >= ( n - 1 ) / 2 + q1 [ i ] * l + q1 [ i ] * l + w [ i ] * r + w [ i ] * r ; i ++ )",
        "for ( int i = n - 2 ; i <= n / 2 ; i ++ ) d [ i ] = d [ i + 1 ] - 2 * q1 [ i + 1 ] * l + w [ i + 1 ] * r ;",
        "for ( int i = 1 ; i <= n / 2 ; i ++ ) { d [ i ] = d [ i - 1 ] - 2 * q2 [ i ] * l + w [ i ] * l ; }"
      ],
      "err_line": 33,
      "err_msg": "invalid types ‘long long int[int]’ for array subscript"
    },
    {
      "mod_line": [
        29,
        33,
        43
      ],
      "mod_code": [
        "d [ en ] = ct + sum [ en - 1 ] * ( l ) + ( en - 1 ) ;",
        "for ( int i = n - 2 ; i >= ( n - 1 ) / 2 + q1 [ i ] * l + q1 [ i ] * l + w [ i ] * r + w [ i ] * r ; i ++ )",
        "for ( int i = 1 ; i <= n / 2 ; i ++ ) { d [ i ] = d [ i - 1 ] - 2 * q2 [ i ] * l + w [ i ] * l ; }"
      ],
      "err_line": 33,
      "err_msg": "invalid types ‘long long int[int]’ for array subscript"
    },
    {
      "mod_line": [
        29,
        42
      ],
      "mod_code": [
        "d [ en ] = ct + sum [ en - 1 ] * ( l ) + ( en - 1 ) ;",
        "for ( int i = n - 2 ; i <= n / 2 ; i ++ ) d [ i ] = d [ i + 1 ] - 2 * q1 [ i + 1 ] * l + w [ i + 1 ] * r ;"
      ],
      "err_line": 42,
      "err_msg": "invalid types ‘long long int[int]’ for array subscript"
    },
    {
      "mod_line": [
        29,
        42,
        43
      ],
      "mod_code": [
        "d [ en ] = ct + sum [ en - 1 ] * ( l ) + ( en - 1 ) ;",
        "for ( int i = n - 2 ; i <= n / 2 ; i ++ ) d [ i ] = d [ i + 1 ] - 2 * q1 [ i + 1 ] * l + w [ i + 1 ] * r ;",
        "for ( int i = 1 ; i <= n / 2 ; i ++ ) { d [ i ] = d [ i - 1 ] - 2 * q2 [ i ] * l + w [ i ] * l ; }"
      ],
      "err_line": 42,
      "err_msg": "invalid types ‘long long int[int]’ for array subscript"
    },
    {
      "mod_line": [
        29,
        43
      ],
      "mod_code": [
        "d [ en ] = ct + sum [ en - 1 ] * ( l ) + ( en - 1 ) ;",
        "for ( int i = 1 ; i <= n / 2 ; i ++ ) { d [ i ] = d [ i - 1 ] - 2 * q2 [ i ] * l + w [ i ] * l ; }"
      ],
      "err_line": 43,
      "err_msg": "invalid types ‘long long int[int]’ for array subscript"
    },
    {
      "mod_line": [
        32,
        33
      ],
      "mod_code": [
        "for ( int i = i ; i <= ( n - 1 ) / 2 ; i ++ ) { d [ i ] = d [ i - 1 ] - 2 * q2 [ i - 1 ] * l - w [ i - 1 ] * r ; }",
        "for ( int i = n - 2 ; i >= ( n - 1 ) / 2 + q1 [ i ] * l + q1 [ i ] * l + w [ i ] * r + w [ i ] * r ; i ++ )"
      ],
      "err_line": 32,
      "err_msg": "invalid types ‘long long int[int]’ for array subscript"
    },
    {
      "mod_line": [
        32,
        33,
        42
      ],
      "mod_code": [
        "for ( int i = i ; i <= ( n - 1 ) / 2 ; i ++ ) { d [ i ] = d [ i - 1 ] - 2 * q2 [ i - 1 ] * l - w [ i - 1 ] * r ; }",
        "for ( int i = n - 2 ; i >= ( n - 1 ) / 2 + q1 [ i ] * l + q1 [ i ] * l + w [ i ] * r + w [ i ] * r ; i ++ )",
        "for ( int i = n - 2 ; i <= n / 2 ; i ++ ) d [ i ] = d [ i + 1 ] - 2 * q1 [ i + 1 ] * l + w [ i + 1 ] * r ;"
      ],
      "err_line": 32,
      "err_msg": "invalid types ‘long long int[int]’ for array subscript"
    },
    {
      "mod_line": [
        32,
        33,
        42,
        43
      ],
      "mod_code": [
        "for ( int i = i ; i <= ( n - 1 ) / 2 ; i ++ ) { d [ i ] = d [ i - 1 ] - 2 * q2 [ i - 1 ] * l - w [ i - 1 ] * r ; }",
        "for ( int i = n - 2 ; i >= ( n - 1 ) / 2 + q1 [ i ] * l + q1 [ i ] * l + w [ i ] * r + w [ i ] * r ; i ++ )",
        "for ( int i = n - 2 ; i <= n / 2 ; i ++ ) d [ i ] = d [ i + 1 ] - 2 * q1 [ i + 1 ] * l + w [ i + 1 ] * r ;",
        "for ( int i = 1 ; i <= n / 2 ; i ++ ) { d [ i ] = d [ i - 1 ] - 2 * q2 [ i ] * l + w [ i ] * l ; }"
      ],
      "err_line": 32,
      "err_msg": "invalid types ‘long long int[int]’ for array subscript"
    },
    {
      "mod_line": [
        32,
        33,
        43
      ],
      "mod_code": [
        "for ( int i = i ; i <= ( n - 1 ) / 2 ; i ++ ) { d [ i ] = d [ i - 1 ] - 2 * q2 [ i - 1 ] * l - w [ i - 1 ] * r ; }",
        "for ( int i = n - 2 ; i >= ( n - 1 ) / 2 + q1 [ i ] * l + q1 [ i ] * l + w [ i ] * r + w [ i ] * r ; i ++ )",
        "for ( int i = 1 ; i <= n / 2 ; i ++ ) { d [ i ] = d [ i - 1 ] - 2 * q2 [ i ] * l + w [ i ] * l ; }"
      ],
      "err_line": 32,
      "err_msg": "invalid types ‘long long int[int]’ for array subscript"
    },
    {
      "mod_line": [
        32,
        42
      ],
      "mod_code": [
        "for ( int i = i ; i <= ( n - 1 ) / 2 ; i ++ ) { d [ i ] = d [ i - 1 ] - 2 * q2 [ i - 1 ] * l - w [ i - 1 ] * r ; }",
        "for ( int i = n - 2 ; i <= n / 2 ; i ++ ) d [ i ] = d [ i + 1 ] - 2 * q1 [ i + 1 ] * l + w [ i + 1 ] * r ;"
      ],
      "err_line": 32,
      "err_msg": "invalid types ‘long long int[int]’ for array subscript"
    },
    {
      "mod_line": [
        32,
        42,
        43
      ],
      "mod_code": [
        "for ( int i = i ; i <= ( n - 1 ) / 2 ; i ++ ) { d [ i ] = d [ i - 1 ] - 2 * q2 [ i - 1 ] * l - w [ i - 1 ] * r ; }",
        "for ( int i = n - 2 ; i <= n / 2 ; i ++ ) d [ i ] = d [ i + 1 ] - 2 * q1 [ i + 1 ] * l + w [ i + 1 ] * r ;",
        "for ( int i = 1 ; i <= n / 2 ; i ++ ) { d [ i ] = d [ i - 1 ] - 2 * q2 [ i ] * l + w [ i ] * l ; }"
      ],
      "err_line": 32,
      "err_msg": "invalid types ‘long long int[int]’ for array subscript"
    },
    {
      "mod_line": [
        32,
        43
      ],
      "mod_code": [
        "for ( int i = i ; i <= ( n - 1 ) / 2 ; i ++ ) { d [ i ] = d [ i - 1 ] - 2 * q2 [ i - 1 ] * l - w [ i - 1 ] * r ; }",
        "for ( int i = 1 ; i <= n / 2 ; i ++ ) { d [ i ] = d [ i - 1 ] - 2 * q2 [ i ] * l + w [ i ] * l ; }"
      ],
      "err_line": 32,
      "err_msg": "invalid types ‘long long int[int]’ for array subscript"
    },
    {
      "mod_line": [
        33,
        42
      ],
      "mod_code": [
        "for ( int i = n - 2 ; i >= ( n - 1 ) / 2 + q1 [ i ] * l + q1 [ i ] * l + w [ i ] * r + w [ i ] * r ; i ++ )",
        "for ( int i = n - 2 ; i <= n / 2 ; i ++ ) d [ i ] = d [ i + 1 ] - 2 * q1 [ i + 1 ] * l + w [ i + 1 ] * r ;"
      ],
      "err_line": 33,
      "err_msg": "invalid types ‘long long int[int]’ for array subscript"
    },
    {
      "mod_line": [
        33,
        42,
        43
      ],
      "mod_code": [
        "for ( int i = n - 2 ; i >= ( n - 1 ) / 2 + q1 [ i ] * l + q1 [ i ] * l + w [ i ] * r + w [ i ] * r ; i ++ )",
        "for ( int i = n - 2 ; i <= n / 2 ; i ++ ) d [ i ] = d [ i + 1 ] - 2 * q1 [ i + 1 ] * l + w [ i + 1 ] * r ;",
        "for ( int i = 1 ; i <= n / 2 ; i ++ ) { d [ i ] = d [ i - 1 ] - 2 * q2 [ i ] * l + w [ i ] * l ; }"
      ],
      "err_line": 33,
      "err_msg": "invalid types ‘long long int[int]’ for array subscript"
    },
    {
      "mod_line": [
        33,
        43
      ],
      "mod_code": [
        "for ( int i = n - 2 ; i >= ( n - 1 ) / 2 + q1 [ i ] * l + q1 [ i ] * l + w [ i ] * r + w [ i ] * r ; i ++ )",
        "for ( int i = 1 ; i <= n / 2 ; i ++ ) { d [ i ] = d [ i - 1 ] - 2 * q2 [ i ] * l + w [ i ] * l ; }"
      ],
      "err_line": 33,
      "err_msg": "invalid types ‘long long int[int]’ for array subscript"
    },
    {
      "mod_line": [
        42,
        43
      ],
      "mod_code": [
        "for ( int i = n - 2 ; i <= n / 2 ; i ++ ) d [ i ] = d [ i + 1 ] - 2 * q1 [ i + 1 ] * l + w [ i + 1 ] * r ;",
        "for ( int i = 1 ; i <= n / 2 ; i ++ ) { d [ i ] = d [ i - 1 ] - 2 * q2 [ i ] * l + w [ i ] * l ; }"
      ],
      "err_line": 42,
      "err_msg": "invalid types ‘long long int[int]’ for array subscript"
    }
  ]
}