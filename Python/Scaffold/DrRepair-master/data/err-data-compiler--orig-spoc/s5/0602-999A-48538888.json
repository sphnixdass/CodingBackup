{
  "meta": {
    "index": 602,
    "hitid": "3LCXHSGDLT0434YK8DXBMNVPAWHES0",
    "workerid": "A1R0Q9CUUBSM5F",
    "probid": "999A",
    "subid": "48538888"
  },
  "lines": [
    {
      "line": 0,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 1,
      "text": "create integers i , n , m , and c = 0",
      "code": "int i , n , m , c = 0 ;",
      "indent": 1
    },
    {
      "line": 2,
      "text": "read n and m",
      "code": "cin >> n >> m ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "create integer array a of size n",
      "code": "int a [ n ] ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "for i = 0 to n exclusive",
      "code": "for ( i = 0 ; i < n ; i ++ ) { cin >> a [ i ] ; }",
      "indent": 1
    },
    {
      "line": 5,
      "text": "set i to 0",
      "code": "i = 0 ;",
      "indent": 1
    },
    {
      "line": 6,
      "text": "create integer j = n - 1",
      "code": "int j = n - 1 ;",
      "indent": 1
    },
    {
      "line": 7,
      "text": "for i = 0 to n exclusive",
      "code": "for ( i = 0 ; i < n ; i ++ )",
      "indent": 1
    },
    {
      "line": 8,
      "text": "if a [ i ] is less than or equal to m",
      "code": "if ( a [ i ] <= m )",
      "indent": 2
    },
    {
      "line": 9,
      "text": "set c to c + 1",
      "code": "c += 1 ;",
      "indent": 3
    },
    {
      "line": 10,
      "text": "else",
      "code": "else",
      "indent": 2
    },
    {
      "line": 11,
      "text": "break loop",
      "code": "break ;",
      "indent": 3
    },
    {
      "line": 12,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 13,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 14,
      "text": "if c is less than n",
      "code": "if ( c < n )",
      "indent": 1
    },
    {
      "line": 15,
      "text": "for i = n - 1 to 0 inclusive",
      "code": "for ( i = n - 1 ; i >= 0 ; i -- )",
      "indent": 2
    },
    {
      "line": 16,
      "text": "if a [ i ] is less than or equal to m",
      "code": "if ( a [ i ] <= m )",
      "indent": 3
    },
    {
      "line": 17,
      "text": "set c to c + 1",
      "code": "c += 1 ;",
      "indent": 4
    },
    {
      "line": 18,
      "text": "else",
      "code": "else",
      "indent": 3
    },
    {
      "line": 19,
      "text": "break loop",
      "code": "break ;",
      "indent": 4
    },
    {
      "line": 20,
      "text": "DUMMY",
      "code": "}",
      "indent": 3
    },
    {
      "line": 21,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 22,
      "text": "print c",
      "code": "cout << c << endl ;",
      "indent": 2
    },
    {
      "line": 23,
      "text": "else",
      "code": "else",
      "indent": 1
    },
    {
      "line": 24,
      "text": "print n",
      "code": "cout << n << endl ;",
      "indent": 2
    },
    {
      "line": 25,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 26,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 27,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        1
      ],
      "mod_code": [
        "int i , n , m , c , c ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int c’"
    },
    {
      "mod_line": [
        3
      ],
      "mod_code": [
        "int * a [ n ] ;"
      ],
      "err_line": 4,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘int*’)"
    },
    {
      "mod_line": [
        5
      ],
      "mod_code": [
        "int i = 0 ;"
      ],
      "err_line": 5,
      "err_msg": "redeclaration of ‘int i’"
    },
    {
      "mod_line": [
        6
      ],
      "mod_code": [
        "int * j = n - 1 ;"
      ],
      "err_line": 6,
      "err_msg": "invalid conversion from ‘int’ to ‘int*’ [-fpermissive]"
    },
    {
      "mod_line": [
        11
      ],
      "mod_code": [
        "break break ;"
      ],
      "err_line": 11,
      "err_msg": "expected ‘;’ before ‘break’"
    },
    {
      "mod_line": [
        19
      ],
      "mod_code": [
        "break break ;"
      ],
      "err_line": 19,
      "err_msg": "expected ‘;’ before ‘break’"
    },
    {
      "mod_line": [
        4,
        14,
        3
      ],
      "mod_code": [
        "for ( int i = 0 ; i < n ; i ++ )",
        "if ( c <= n )",
        "int * a [ n ] ;"
      ],
      "err_line": 8,
      "err_msg": "ISO C++ forbids comparison between pointer and integer [-fpermissive]"
    },
    {
      "mod_line": [
        4,
        14,
        3,
        2
      ],
      "mod_code": [
        "for ( int i = 0 ; i < n ; i ++ )",
        "if ( c <= n )",
        "int * a [ n ] ;",
        "cin >> m >> m ;"
      ],
      "err_line": 8,
      "err_msg": "ISO C++ forbids comparison between pointer and integer [-fpermissive]"
    },
    {
      "mod_line": [
        4,
        14,
        3,
        16
      ],
      "mod_code": [
        "for ( int i = 0 ; i < n ; i ++ )",
        "if ( c <= n )",
        "int * a [ n ] ;",
        "if ( a [ i ] <= ' m ' )"
      ],
      "err_line": 8,
      "err_msg": "ISO C++ forbids comparison between pointer and integer [-fpermissive]"
    },
    {
      "mod_line": [
        4,
        3
      ],
      "mod_code": [
        "for ( int i = 0 ; i < n ; i ++ )",
        "int * a [ n ] ;"
      ],
      "err_line": 8,
      "err_msg": "ISO C++ forbids comparison between pointer and integer [-fpermissive]"
    },
    {
      "mod_line": [
        4,
        3,
        2
      ],
      "mod_code": [
        "for ( int i = 0 ; i < n ; i ++ )",
        "int * a [ n ] ;",
        "cin >> m >> m ;"
      ],
      "err_line": 8,
      "err_msg": "ISO C++ forbids comparison between pointer and integer [-fpermissive]"
    },
    {
      "mod_line": [
        4,
        3,
        2,
        16
      ],
      "mod_code": [
        "for ( int i = 0 ; i < n ; i ++ )",
        "int * a [ n ] ;",
        "cin >> m >> m ;",
        "if ( a [ i ] <= ' m ' )"
      ],
      "err_line": 8,
      "err_msg": "ISO C++ forbids comparison between pointer and integer [-fpermissive]"
    },
    {
      "mod_line": [
        4,
        3,
        16
      ],
      "mod_code": [
        "for ( int i = 0 ; i < n ; i ++ )",
        "int * a [ n ] ;",
        "if ( a [ i ] <= ' m ' )"
      ],
      "err_line": 8,
      "err_msg": "ISO C++ forbids comparison between pointer and integer [-fpermissive]"
    },
    {
      "mod_line": [
        14,
        3
      ],
      "mod_code": [
        "if ( c <= n )",
        "int * a [ n ] ;"
      ],
      "err_line": 4,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘int*’)"
    },
    {
      "mod_line": [
        14,
        3,
        2
      ],
      "mod_code": [
        "if ( c <= n )",
        "int * a [ n ] ;",
        "cin >> m >> m ;"
      ],
      "err_line": 4,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘int*’)"
    },
    {
      "mod_line": [
        14,
        3,
        2,
        4
      ],
      "mod_code": [
        "if ( c <= n )",
        "int * a [ n ] ;",
        "cin >> m >> m ;",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 8,
      "err_msg": "ISO C++ forbids comparison between pointer and integer [-fpermissive]"
    },
    {
      "mod_line": [
        14,
        3,
        2,
        16
      ],
      "mod_code": [
        "if ( c <= n )",
        "int * a [ n ] ;",
        "cin >> m >> m ;",
        "if ( a [ i ] <= ' m ' )"
      ],
      "err_line": 4,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘int*’)"
    },
    {
      "mod_line": [
        14,
        3,
        4
      ],
      "mod_code": [
        "if ( c <= n )",
        "int * a [ n ] ;",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 8,
      "err_msg": "ISO C++ forbids comparison between pointer and integer [-fpermissive]"
    },
    {
      "mod_line": [
        14,
        3,
        4,
        16
      ],
      "mod_code": [
        "if ( c <= n )",
        "int * a [ n ] ;",
        "for ( i = 0 ; i < n ; i ++ )",
        "if ( a [ i ] <= ' m ' )"
      ],
      "err_line": 8,
      "err_msg": "ISO C++ forbids comparison between pointer and integer [-fpermissive]"
    },
    {
      "mod_line": [
        14,
        3,
        16
      ],
      "mod_code": [
        "if ( c <= n )",
        "int * a [ n ] ;",
        "if ( a [ i ] <= ' m ' )"
      ],
      "err_line": 4,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘int*’)"
    },
    {
      "mod_line": [
        3,
        2
      ],
      "mod_code": [
        "int * a [ n ] ;",
        "cin >> m >> m ;"
      ],
      "err_line": 4,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘int*’)"
    },
    {
      "mod_line": [
        3,
        2,
        4
      ],
      "mod_code": [
        "int * a [ n ] ;",
        "cin >> m >> m ;",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 8,
      "err_msg": "ISO C++ forbids comparison between pointer and integer [-fpermissive]"
    },
    {
      "mod_line": [
        3,
        2,
        4,
        16
      ],
      "mod_code": [
        "int * a [ n ] ;",
        "cin >> m >> m ;",
        "for ( i = 0 ; i < n ; i ++ )",
        "if ( a [ i ] <= ' m ' )"
      ],
      "err_line": 8,
      "err_msg": "ISO C++ forbids comparison between pointer and integer [-fpermissive]"
    },
    {
      "mod_line": [
        3,
        2,
        16
      ],
      "mod_code": [
        "int * a [ n ] ;",
        "cin >> m >> m ;",
        "if ( a [ i ] <= ' m ' )"
      ],
      "err_line": 4,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘int*’)"
    },
    {
      "mod_line": [
        3,
        4
      ],
      "mod_code": [
        "int * a [ n ] ;",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 8,
      "err_msg": "ISO C++ forbids comparison between pointer and integer [-fpermissive]"
    },
    {
      "mod_line": [
        3,
        4,
        16
      ],
      "mod_code": [
        "int * a [ n ] ;",
        "for ( i = 0 ; i < n ; i ++ )",
        "if ( a [ i ] <= ' m ' )"
      ],
      "err_line": 8,
      "err_msg": "ISO C++ forbids comparison between pointer and integer [-fpermissive]"
    },
    {
      "mod_line": [
        3,
        16
      ],
      "mod_code": [
        "int * a [ n ] ;",
        "if ( a [ i ] <= ' m ' )"
      ],
      "err_line": 4,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘int*’)"
    }
  ]
}