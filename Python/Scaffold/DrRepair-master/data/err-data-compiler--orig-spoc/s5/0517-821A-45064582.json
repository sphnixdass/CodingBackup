{
  "meta": {
    "index": 517,
    "hitid": "34O39PNDK62UVMMNJXVGV5K8LXRRBV",
    "workerid": "A28TIENUWLMMIP",
    "probid": "821A",
    "subid": "45064582"
  },
  "lines": [
    {
      "line": 0,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 1,
      "text": "let n , cnt , mnt , and sum be integers , set cnt and mnt to 0",
      "code": "long long int n , cnt = 0 , mnt = 0 , sum ;",
      "indent": 1
    },
    {
      "line": 2,
      "text": "read in n",
      "code": "cin >> n ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "let arr be a double array of long long integers or size n and n",
      "code": "long long int arr [ n ] [ n ] ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "iterate for n times",
      "code": "for ( long long int i = 0 ; i < n ; i ++ )",
      "indent": 1
    },
    {
      "line": 5,
      "text": "iterate for n times , read in values for arr [ i ] [ j ]",
      "code": "for ( long long int j = 0 ; j < n ; j ++ ) { cin >> arr [ i ] [ j ] ; }",
      "indent": 2
    },
    {
      "line": 6,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 7,
      "text": "iterate for n times",
      "code": "for ( long long int i = 0 ; i < n ; i ++ )",
      "indent": 1
    },
    {
      "line": 8,
      "text": "iterate for n times",
      "code": "for ( long long int j = 0 ; j < n ; j ++ )",
      "indent": 2
    },
    {
      "line": 9,
      "text": "if arr [ i ] [ j ] is not equal to 1",
      "code": "if ( arr [ i ] [ j ] != 1 )",
      "indent": 3
    },
    {
      "line": 10,
      "text": "increment mnt",
      "code": "mnt ++ ;",
      "indent": 4
    },
    {
      "line": 11,
      "text": "iterate for n times",
      "code": "for ( long long int k = 0 ; k < n ; k ++ )",
      "indent": 4
    },
    {
      "line": 12,
      "text": "iterate for n times",
      "code": "for ( long long int l = 0 ; l < n ; l ++ )",
      "indent": 5
    },
    {
      "line": 13,
      "text": "set sum to arr [ i ] [ k ] + arr [ l ] [ j ]",
      "code": "sum = arr [ i ] [ k ] + arr [ l ] [ j ] ;",
      "indent": 6
    },
    {
      "line": 14,
      "text": "if sum is equal to arr [ i ] [ j ]",
      "code": "if ( sum == arr [ i ] [ j ] )",
      "indent": 6
    },
    {
      "line": 15,
      "text": "increment cnt",
      "code": "cnt ++ ;",
      "indent": 7
    },
    {
      "line": 16,
      "text": "set l to n",
      "code": "l = n ;",
      "indent": 7
    },
    {
      "line": 17,
      "text": "set k to n",
      "code": "k = n ;",
      "indent": 7
    },
    {
      "line": 18,
      "text": "DUMMY",
      "code": "}",
      "indent": 6
    },
    {
      "line": 19,
      "text": "DUMMY",
      "code": "}",
      "indent": 5
    },
    {
      "line": 20,
      "text": "DUMMY",
      "code": "}",
      "indent": 4
    },
    {
      "line": 21,
      "text": "DUMMY",
      "code": "}",
      "indent": 3
    },
    {
      "line": 22,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 23,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 24,
      "text": "if cnt is equal to mnt",
      "code": "if ( cnt == mnt )",
      "indent": 1
    },
    {
      "line": 25,
      "text": "print YES",
      "code": "cout << \" Yes \" << endl ;",
      "indent": 2
    },
    {
      "line": 26,
      "text": "or else",
      "code": "else",
      "indent": 1
    },
    {
      "line": 27,
      "text": "print NO",
      "code": "cout << \" No \" << endl ;",
      "indent": 2
    },
    {
      "line": 28,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 29,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 30,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        3
      ],
      "mod_code": [
        "double arr [ n ] , n ;"
      ],
      "err_line": 3,
      "err_msg": "conflicting declaration ‘double n’"
    },
    {
      "mod_line": [
        8
      ],
      "mod_code": [
        "for ( int i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 9,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        11
      ],
      "mod_code": [
        "for ( int i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 13,
      "err_msg": "‘k’ was not declared in this scope"
    },
    {
      "mod_line": [
        12
      ],
      "mod_code": [
        "for ( int i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 13,
      "err_msg": "‘l’ was not declared in this scope"
    },
    {
      "mod_line": [
        2
      ],
      "mod_code": [
        "while ( cin >> n )"
      ],
      "err_line": 5,
      "err_msg": "‘arr’ was not declared in this scope"
    },
    {
      "mod_line": [
        3
      ],
      "mod_code": [
        "long long arr [ n ] , n ;"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘long long int n’"
    },
    {
      "mod_line": [
        4
      ],
      "mod_code": [
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 4,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        7
      ],
      "mod_code": [
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 7,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        8
      ],
      "mod_code": [
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 9,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        11
      ],
      "mod_code": [
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 13,
      "err_msg": "‘k’ was not declared in this scope"
    },
    {
      "mod_line": [
        12
      ],
      "mod_code": [
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 13,
      "err_msg": "‘l’ was not declared in this scope"
    },
    {
      "mod_line": [
        26
      ],
      "mod_code": [
        "else else"
      ],
      "err_line": 26,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        1,
        3
      ],
      "mod_code": [
        "int n , cnt = 0 , mnt , sum = 0 ;",
        "double arr [ n ] , n ;"
      ],
      "err_line": 3,
      "err_msg": "conflicting declaration ‘double n’"
    },
    {
      "mod_line": [
        1,
        3,
        8
      ],
      "mod_code": [
        "int n , cnt = 0 , mnt , sum = 0 ;",
        "double arr [ n ] , n ;",
        "for ( int i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 3,
      "err_msg": "conflicting declaration ‘double n’"
    },
    {
      "mod_line": [
        1,
        3,
        8,
        11
      ],
      "mod_code": [
        "int n , cnt = 0 , mnt , sum = 0 ;",
        "double arr [ n ] , n ;",
        "for ( int i = 0 ; i < n ; i ++ )",
        "for ( int i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 3,
      "err_msg": "conflicting declaration ‘double n’"
    },
    {
      "mod_line": [
        1,
        3,
        8,
        12
      ],
      "mod_code": [
        "int n , cnt = 0 , mnt , sum = 0 ;",
        "double arr [ n ] , n ;",
        "for ( int i = 0 ; i < n ; i ++ )",
        "for ( int i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 3,
      "err_msg": "conflicting declaration ‘double n’"
    },
    {
      "mod_line": [
        1,
        3,
        8,
        25
      ],
      "mod_code": [
        "int n , cnt = 0 , mnt , sum = 0 ;",
        "double arr [ n ] , n ;",
        "for ( int i = 0 ; i < n ; i ++ )",
        "cout << \" YES \" << endl ;"
      ],
      "err_line": 3,
      "err_msg": "conflicting declaration ‘double n’"
    },
    {
      "mod_line": [
        1,
        3,
        8,
        27
      ],
      "mod_code": [
        "int n , cnt = 0 , mnt , sum = 0 ;",
        "double arr [ n ] , n ;",
        "for ( int i = 0 ; i < n ; i ++ )",
        "cout << \" NO \" << endl ;"
      ],
      "err_line": 3,
      "err_msg": "conflicting declaration ‘double n’"
    },
    {
      "mod_line": [
        1,
        3,
        11
      ],
      "mod_code": [
        "int n , cnt = 0 , mnt , sum = 0 ;",
        "double arr [ n ] , n ;",
        "for ( int i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 3,
      "err_msg": "conflicting declaration ‘double n’"
    },
    {
      "mod_line": [
        1,
        3,
        11,
        12
      ],
      "mod_code": [
        "int n , cnt = 0 , mnt , sum = 0 ;",
        "double arr [ n ] , n ;",
        "for ( int i = 0 ; i < n ; i ++ )",
        "for ( int i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 3,
      "err_msg": "conflicting declaration ‘double n’"
    },
    {
      "mod_line": [
        1,
        3,
        11,
        25
      ],
      "mod_code": [
        "int n , cnt = 0 , mnt , sum = 0 ;",
        "double arr [ n ] , n ;",
        "for ( int i = 0 ; i < n ; i ++ )",
        "cout << \" YES \" << endl ;"
      ],
      "err_line": 3,
      "err_msg": "conflicting declaration ‘double n’"
    },
    {
      "mod_line": [
        1,
        3,
        11,
        27
      ],
      "mod_code": [
        "int n , cnt = 0 , mnt , sum = 0 ;",
        "double arr [ n ] , n ;",
        "for ( int i = 0 ; i < n ; i ++ )",
        "cout << \" NO \" << endl ;"
      ],
      "err_line": 3,
      "err_msg": "conflicting declaration ‘double n’"
    },
    {
      "mod_line": [
        1,
        3,
        12
      ],
      "mod_code": [
        "int n , cnt = 0 , mnt , sum = 0 ;",
        "double arr [ n ] , n ;",
        "for ( int i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 3,
      "err_msg": "conflicting declaration ‘double n’"
    },
    {
      "mod_line": [
        1,
        3,
        12,
        25
      ],
      "mod_code": [
        "int n , cnt = 0 , mnt , sum = 0 ;",
        "double arr [ n ] , n ;",
        "for ( int i = 0 ; i < n ; i ++ )",
        "cout << \" YES \" << endl ;"
      ],
      "err_line": 3,
      "err_msg": "conflicting declaration ‘double n’"
    },
    {
      "mod_line": [
        1,
        3,
        12,
        27
      ],
      "mod_code": [
        "int n , cnt = 0 , mnt , sum = 0 ;",
        "double arr [ n ] , n ;",
        "for ( int i = 0 ; i < n ; i ++ )",
        "cout << \" NO \" << endl ;"
      ],
      "err_line": 3,
      "err_msg": "conflicting declaration ‘double n’"
    },
    {
      "mod_line": [
        1,
        3,
        25
      ],
      "mod_code": [
        "int n , cnt = 0 , mnt , sum = 0 ;",
        "double arr [ n ] , n ;",
        "cout << \" YES \" << endl ;"
      ],
      "err_line": 3,
      "err_msg": "conflicting declaration ‘double n’"
    },
    {
      "mod_line": [
        1,
        3,
        25,
        27
      ],
      "mod_code": [
        "int n , cnt = 0 , mnt , sum = 0 ;",
        "double arr [ n ] , n ;",
        "cout << \" YES \" << endl ;",
        "cout << \" NO \" << endl ;"
      ],
      "err_line": 3,
      "err_msg": "conflicting declaration ‘double n’"
    },
    {
      "mod_line": [
        1,
        3,
        27
      ],
      "mod_code": [
        "int n , cnt = 0 , mnt , sum = 0 ;",
        "double arr [ n ] , n ;",
        "cout << \" NO \" << endl ;"
      ],
      "err_line": 3,
      "err_msg": "conflicting declaration ‘double n’"
    },
    {
      "mod_line": [
        1,
        8
      ],
      "mod_code": [
        "int n , cnt = 0 , mnt , sum = 0 ;",
        "for ( int i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 9,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        8,
        11
      ],
      "mod_code": [
        "int n , cnt = 0 , mnt , sum = 0 ;",
        "for ( int i = 0 ; i < n ; i ++ )",
        "for ( int i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 9,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        8,
        11,
        12
      ],
      "mod_code": [
        "int n , cnt = 0 , mnt , sum = 0 ;",
        "for ( int i = 0 ; i < n ; i ++ )",
        "for ( int i = 0 ; i < n ; i ++ )",
        "for ( int i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 9,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        8,
        11,
        25
      ],
      "mod_code": [
        "int n , cnt = 0 , mnt , sum = 0 ;",
        "for ( int i = 0 ; i < n ; i ++ )",
        "for ( int i = 0 ; i < n ; i ++ )",
        "cout << \" YES \" << endl ;"
      ],
      "err_line": 9,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        8,
        11,
        27
      ],
      "mod_code": [
        "int n , cnt = 0 , mnt , sum = 0 ;",
        "for ( int i = 0 ; i < n ; i ++ )",
        "for ( int i = 0 ; i < n ; i ++ )",
        "cout << \" NO \" << endl ;"
      ],
      "err_line": 9,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        8,
        12
      ],
      "mod_code": [
        "int n , cnt = 0 , mnt , sum = 0 ;",
        "for ( int i = 0 ; i < n ; i ++ )",
        "for ( int i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 9,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        8,
        12,
        25
      ],
      "mod_code": [
        "int n , cnt = 0 , mnt , sum = 0 ;",
        "for ( int i = 0 ; i < n ; i ++ )",
        "for ( int i = 0 ; i < n ; i ++ )",
        "cout << \" YES \" << endl ;"
      ],
      "err_line": 9,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        8,
        12,
        27
      ],
      "mod_code": [
        "int n , cnt = 0 , mnt , sum = 0 ;",
        "for ( int i = 0 ; i < n ; i ++ )",
        "for ( int i = 0 ; i < n ; i ++ )",
        "cout << \" NO \" << endl ;"
      ],
      "err_line": 9,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        8,
        25
      ],
      "mod_code": [
        "int n , cnt = 0 , mnt , sum = 0 ;",
        "for ( int i = 0 ; i < n ; i ++ )",
        "cout << \" YES \" << endl ;"
      ],
      "err_line": 9,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        8,
        25,
        27
      ],
      "mod_code": [
        "int n , cnt = 0 , mnt , sum = 0 ;",
        "for ( int i = 0 ; i < n ; i ++ )",
        "cout << \" YES \" << endl ;",
        "cout << \" NO \" << endl ;"
      ],
      "err_line": 9,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        8,
        27
      ],
      "mod_code": [
        "int n , cnt = 0 , mnt , sum = 0 ;",
        "for ( int i = 0 ; i < n ; i ++ )",
        "cout << \" NO \" << endl ;"
      ],
      "err_line": 9,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        11
      ],
      "mod_code": [
        "int n , cnt = 0 , mnt , sum = 0 ;",
        "for ( int i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 13,
      "err_msg": "‘k’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        11,
        12
      ],
      "mod_code": [
        "int n , cnt = 0 , mnt , sum = 0 ;",
        "for ( int i = 0 ; i < n ; i ++ )",
        "for ( int i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 13,
      "err_msg": "‘k’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        11,
        12,
        25
      ],
      "mod_code": [
        "int n , cnt = 0 , mnt , sum = 0 ;",
        "for ( int i = 0 ; i < n ; i ++ )",
        "for ( int i = 0 ; i < n ; i ++ )",
        "cout << \" YES \" << endl ;"
      ],
      "err_line": 13,
      "err_msg": "‘k’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        11,
        12,
        27
      ],
      "mod_code": [
        "int n , cnt = 0 , mnt , sum = 0 ;",
        "for ( int i = 0 ; i < n ; i ++ )",
        "for ( int i = 0 ; i < n ; i ++ )",
        "cout << \" NO \" << endl ;"
      ],
      "err_line": 13,
      "err_msg": "‘k’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        11,
        25
      ],
      "mod_code": [
        "int n , cnt = 0 , mnt , sum = 0 ;",
        "for ( int i = 0 ; i < n ; i ++ )",
        "cout << \" YES \" << endl ;"
      ],
      "err_line": 13,
      "err_msg": "‘k’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        11,
        25,
        27
      ],
      "mod_code": [
        "int n , cnt = 0 , mnt , sum = 0 ;",
        "for ( int i = 0 ; i < n ; i ++ )",
        "cout << \" YES \" << endl ;",
        "cout << \" NO \" << endl ;"
      ],
      "err_line": 13,
      "err_msg": "‘k’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        11,
        27
      ],
      "mod_code": [
        "int n , cnt = 0 , mnt , sum = 0 ;",
        "for ( int i = 0 ; i < n ; i ++ )",
        "cout << \" NO \" << endl ;"
      ],
      "err_line": 13,
      "err_msg": "‘k’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        12
      ],
      "mod_code": [
        "int n , cnt = 0 , mnt , sum = 0 ;",
        "for ( int i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 13,
      "err_msg": "‘l’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        12,
        25
      ],
      "mod_code": [
        "int n , cnt = 0 , mnt , sum = 0 ;",
        "for ( int i = 0 ; i < n ; i ++ )",
        "cout << \" YES \" << endl ;"
      ],
      "err_line": 13,
      "err_msg": "‘l’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        12,
        25,
        27
      ],
      "mod_code": [
        "int n , cnt = 0 , mnt , sum = 0 ;",
        "for ( int i = 0 ; i < n ; i ++ )",
        "cout << \" YES \" << endl ;",
        "cout << \" NO \" << endl ;"
      ],
      "err_line": 13,
      "err_msg": "‘l’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        12,
        27
      ],
      "mod_code": [
        "int n , cnt = 0 , mnt , sum = 0 ;",
        "for ( int i = 0 ; i < n ; i ++ )",
        "cout << \" NO \" << endl ;"
      ],
      "err_line": 13,
      "err_msg": "‘l’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        8
      ],
      "mod_code": [
        "double arr [ n ] , n ;",
        "for ( int i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 3,
      "err_msg": "conflicting declaration ‘double n’"
    },
    {
      "mod_line": [
        3,
        8,
        11
      ],
      "mod_code": [
        "double arr [ n ] , n ;",
        "for ( int i = 0 ; i < n ; i ++ )",
        "for ( int i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 3,
      "err_msg": "conflicting declaration ‘double n’"
    },
    {
      "mod_line": [
        3,
        8,
        11,
        12
      ],
      "mod_code": [
        "double arr [ n ] , n ;",
        "for ( int i = 0 ; i < n ; i ++ )",
        "for ( int i = 0 ; i < n ; i ++ )",
        "for ( int i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 3,
      "err_msg": "conflicting declaration ‘double n’"
    },
    {
      "mod_line": [
        3,
        8,
        11,
        25
      ],
      "mod_code": [
        "double arr [ n ] , n ;",
        "for ( int i = 0 ; i < n ; i ++ )",
        "for ( int i = 0 ; i < n ; i ++ )",
        "cout << \" YES \" << endl ;"
      ],
      "err_line": 3,
      "err_msg": "conflicting declaration ‘double n’"
    },
    {
      "mod_line": [
        3,
        8,
        11,
        27
      ],
      "mod_code": [
        "double arr [ n ] , n ;",
        "for ( int i = 0 ; i < n ; i ++ )",
        "for ( int i = 0 ; i < n ; i ++ )",
        "cout << \" NO \" << endl ;"
      ],
      "err_line": 3,
      "err_msg": "conflicting declaration ‘double n’"
    },
    {
      "mod_line": [
        3,
        8,
        12
      ],
      "mod_code": [
        "double arr [ n ] , n ;",
        "for ( int i = 0 ; i < n ; i ++ )",
        "for ( int i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 3,
      "err_msg": "conflicting declaration ‘double n’"
    },
    {
      "mod_line": [
        3,
        8,
        12,
        25
      ],
      "mod_code": [
        "double arr [ n ] , n ;",
        "for ( int i = 0 ; i < n ; i ++ )",
        "for ( int i = 0 ; i < n ; i ++ )",
        "cout << \" YES \" << endl ;"
      ],
      "err_line": 3,
      "err_msg": "conflicting declaration ‘double n’"
    },
    {
      "mod_line": [
        3,
        8,
        12,
        27
      ],
      "mod_code": [
        "double arr [ n ] , n ;",
        "for ( int i = 0 ; i < n ; i ++ )",
        "for ( int i = 0 ; i < n ; i ++ )",
        "cout << \" NO \" << endl ;"
      ],
      "err_line": 3,
      "err_msg": "conflicting declaration ‘double n’"
    },
    {
      "mod_line": [
        3,
        8,
        25
      ],
      "mod_code": [
        "double arr [ n ] , n ;",
        "for ( int i = 0 ; i < n ; i ++ )",
        "cout << \" YES \" << endl ;"
      ],
      "err_line": 3,
      "err_msg": "conflicting declaration ‘double n’"
    },
    {
      "mod_line": [
        3,
        8,
        25,
        27
      ],
      "mod_code": [
        "double arr [ n ] , n ;",
        "for ( int i = 0 ; i < n ; i ++ )",
        "cout << \" YES \" << endl ;",
        "cout << \" NO \" << endl ;"
      ],
      "err_line": 3,
      "err_msg": "conflicting declaration ‘double n’"
    },
    {
      "mod_line": [
        3,
        8,
        27
      ],
      "mod_code": [
        "double arr [ n ] , n ;",
        "for ( int i = 0 ; i < n ; i ++ )",
        "cout << \" NO \" << endl ;"
      ],
      "err_line": 3,
      "err_msg": "conflicting declaration ‘double n’"
    },
    {
      "mod_line": [
        3,
        11
      ],
      "mod_code": [
        "double arr [ n ] , n ;",
        "for ( int i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 3,
      "err_msg": "conflicting declaration ‘double n’"
    },
    {
      "mod_line": [
        3,
        11,
        12
      ],
      "mod_code": [
        "double arr [ n ] , n ;",
        "for ( int i = 0 ; i < n ; i ++ )",
        "for ( int i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 3,
      "err_msg": "conflicting declaration ‘double n’"
    },
    {
      "mod_line": [
        3,
        11,
        12,
        25
      ],
      "mod_code": [
        "double arr [ n ] , n ;",
        "for ( int i = 0 ; i < n ; i ++ )",
        "for ( int i = 0 ; i < n ; i ++ )",
        "cout << \" YES \" << endl ;"
      ],
      "err_line": 3,
      "err_msg": "conflicting declaration ‘double n’"
    },
    {
      "mod_line": [
        3,
        11,
        12,
        27
      ],
      "mod_code": [
        "double arr [ n ] , n ;",
        "for ( int i = 0 ; i < n ; i ++ )",
        "for ( int i = 0 ; i < n ; i ++ )",
        "cout << \" NO \" << endl ;"
      ],
      "err_line": 3,
      "err_msg": "conflicting declaration ‘double n’"
    },
    {
      "mod_line": [
        3,
        11,
        25
      ],
      "mod_code": [
        "double arr [ n ] , n ;",
        "for ( int i = 0 ; i < n ; i ++ )",
        "cout << \" YES \" << endl ;"
      ],
      "err_line": 3,
      "err_msg": "conflicting declaration ‘double n’"
    },
    {
      "mod_line": [
        3,
        11,
        25,
        27
      ],
      "mod_code": [
        "double arr [ n ] , n ;",
        "for ( int i = 0 ; i < n ; i ++ )",
        "cout << \" YES \" << endl ;",
        "cout << \" NO \" << endl ;"
      ],
      "err_line": 3,
      "err_msg": "conflicting declaration ‘double n’"
    },
    {
      "mod_line": [
        3,
        11,
        27
      ],
      "mod_code": [
        "double arr [ n ] , n ;",
        "for ( int i = 0 ; i < n ; i ++ )",
        "cout << \" NO \" << endl ;"
      ],
      "err_line": 3,
      "err_msg": "conflicting declaration ‘double n’"
    },
    {
      "mod_line": [
        3,
        12
      ],
      "mod_code": [
        "double arr [ n ] , n ;",
        "for ( int i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 3,
      "err_msg": "conflicting declaration ‘double n’"
    },
    {
      "mod_line": [
        3,
        12,
        25
      ],
      "mod_code": [
        "double arr [ n ] , n ;",
        "for ( int i = 0 ; i < n ; i ++ )",
        "cout << \" YES \" << endl ;"
      ],
      "err_line": 3,
      "err_msg": "conflicting declaration ‘double n’"
    },
    {
      "mod_line": [
        3,
        12,
        25,
        27
      ],
      "mod_code": [
        "double arr [ n ] , n ;",
        "for ( int i = 0 ; i < n ; i ++ )",
        "cout << \" YES \" << endl ;",
        "cout << \" NO \" << endl ;"
      ],
      "err_line": 3,
      "err_msg": "conflicting declaration ‘double n’"
    },
    {
      "mod_line": [
        3,
        12,
        27
      ],
      "mod_code": [
        "double arr [ n ] , n ;",
        "for ( int i = 0 ; i < n ; i ++ )",
        "cout << \" NO \" << endl ;"
      ],
      "err_line": 3,
      "err_msg": "conflicting declaration ‘double n’"
    },
    {
      "mod_line": [
        3,
        25
      ],
      "mod_code": [
        "double arr [ n ] , n ;",
        "cout << \" YES \" << endl ;"
      ],
      "err_line": 3,
      "err_msg": "conflicting declaration ‘double n’"
    },
    {
      "mod_line": [
        3,
        25,
        27
      ],
      "mod_code": [
        "double arr [ n ] , n ;",
        "cout << \" YES \" << endl ;",
        "cout << \" NO \" << endl ;"
      ],
      "err_line": 3,
      "err_msg": "conflicting declaration ‘double n’"
    },
    {
      "mod_line": [
        3,
        27
      ],
      "mod_code": [
        "double arr [ n ] , n ;",
        "cout << \" NO \" << endl ;"
      ],
      "err_line": 3,
      "err_msg": "conflicting declaration ‘double n’"
    },
    {
      "mod_line": [
        8,
        11
      ],
      "mod_code": [
        "for ( int i = 0 ; i < n ; i ++ )",
        "for ( int i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 9,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        8,
        11,
        12
      ],
      "mod_code": [
        "for ( int i = 0 ; i < n ; i ++ )",
        "for ( int i = 0 ; i < n ; i ++ )",
        "for ( int i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 9,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        8,
        11,
        12,
        25
      ],
      "mod_code": [
        "for ( int i = 0 ; i < n ; i ++ )",
        "for ( int i = 0 ; i < n ; i ++ )",
        "for ( int i = 0 ; i < n ; i ++ )",
        "cout << \" YES \" << endl ;"
      ],
      "err_line": 9,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        8,
        11,
        12,
        27
      ],
      "mod_code": [
        "for ( int i = 0 ; i < n ; i ++ )",
        "for ( int i = 0 ; i < n ; i ++ )",
        "for ( int i = 0 ; i < n ; i ++ )",
        "cout << \" NO \" << endl ;"
      ],
      "err_line": 9,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        8,
        11,
        25
      ],
      "mod_code": [
        "for ( int i = 0 ; i < n ; i ++ )",
        "for ( int i = 0 ; i < n ; i ++ )",
        "cout << \" YES \" << endl ;"
      ],
      "err_line": 9,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        8,
        11,
        25,
        27
      ],
      "mod_code": [
        "for ( int i = 0 ; i < n ; i ++ )",
        "for ( int i = 0 ; i < n ; i ++ )",
        "cout << \" YES \" << endl ;",
        "cout << \" NO \" << endl ;"
      ],
      "err_line": 9,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        8,
        11,
        27
      ],
      "mod_code": [
        "for ( int i = 0 ; i < n ; i ++ )",
        "for ( int i = 0 ; i < n ; i ++ )",
        "cout << \" NO \" << endl ;"
      ],
      "err_line": 9,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        8,
        12
      ],
      "mod_code": [
        "for ( int i = 0 ; i < n ; i ++ )",
        "for ( int i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 9,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        8,
        12,
        25
      ],
      "mod_code": [
        "for ( int i = 0 ; i < n ; i ++ )",
        "for ( int i = 0 ; i < n ; i ++ )",
        "cout << \" YES \" << endl ;"
      ],
      "err_line": 9,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        8,
        12,
        25,
        27
      ],
      "mod_code": [
        "for ( int i = 0 ; i < n ; i ++ )",
        "for ( int i = 0 ; i < n ; i ++ )",
        "cout << \" YES \" << endl ;",
        "cout << \" NO \" << endl ;"
      ],
      "err_line": 9,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        8,
        12,
        27
      ],
      "mod_code": [
        "for ( int i = 0 ; i < n ; i ++ )",
        "for ( int i = 0 ; i < n ; i ++ )",
        "cout << \" NO \" << endl ;"
      ],
      "err_line": 9,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        8,
        25
      ],
      "mod_code": [
        "for ( int i = 0 ; i < n ; i ++ )",
        "cout << \" YES \" << endl ;"
      ],
      "err_line": 9,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        8,
        25,
        27
      ],
      "mod_code": [
        "for ( int i = 0 ; i < n ; i ++ )",
        "cout << \" YES \" << endl ;",
        "cout << \" NO \" << endl ;"
      ],
      "err_line": 9,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        8,
        27
      ],
      "mod_code": [
        "for ( int i = 0 ; i < n ; i ++ )",
        "cout << \" NO \" << endl ;"
      ],
      "err_line": 9,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        11,
        12
      ],
      "mod_code": [
        "for ( int i = 0 ; i < n ; i ++ )",
        "for ( int i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 13,
      "err_msg": "‘k’ was not declared in this scope"
    },
    {
      "mod_line": [
        11,
        12,
        25
      ],
      "mod_code": [
        "for ( int i = 0 ; i < n ; i ++ )",
        "for ( int i = 0 ; i < n ; i ++ )",
        "cout << \" YES \" << endl ;"
      ],
      "err_line": 13,
      "err_msg": "‘k’ was not declared in this scope"
    },
    {
      "mod_line": [
        11,
        12,
        25,
        27
      ],
      "mod_code": [
        "for ( int i = 0 ; i < n ; i ++ )",
        "for ( int i = 0 ; i < n ; i ++ )",
        "cout << \" YES \" << endl ;",
        "cout << \" NO \" << endl ;"
      ],
      "err_line": 13,
      "err_msg": "‘k’ was not declared in this scope"
    },
    {
      "mod_line": [
        11,
        12,
        27
      ],
      "mod_code": [
        "for ( int i = 0 ; i < n ; i ++ )",
        "for ( int i = 0 ; i < n ; i ++ )",
        "cout << \" NO \" << endl ;"
      ],
      "err_line": 13,
      "err_msg": "‘k’ was not declared in this scope"
    },
    {
      "mod_line": [
        11,
        25
      ],
      "mod_code": [
        "for ( int i = 0 ; i < n ; i ++ )",
        "cout << \" YES \" << endl ;"
      ],
      "err_line": 13,
      "err_msg": "‘k’ was not declared in this scope"
    },
    {
      "mod_line": [
        11,
        25,
        27
      ],
      "mod_code": [
        "for ( int i = 0 ; i < n ; i ++ )",
        "cout << \" YES \" << endl ;",
        "cout << \" NO \" << endl ;"
      ],
      "err_line": 13,
      "err_msg": "‘k’ was not declared in this scope"
    },
    {
      "mod_line": [
        11,
        27
      ],
      "mod_code": [
        "for ( int i = 0 ; i < n ; i ++ )",
        "cout << \" NO \" << endl ;"
      ],
      "err_line": 13,
      "err_msg": "‘k’ was not declared in this scope"
    },
    {
      "mod_line": [
        12,
        25
      ],
      "mod_code": [
        "for ( int i = 0 ; i < n ; i ++ )",
        "cout << \" YES \" << endl ;"
      ],
      "err_line": 13,
      "err_msg": "‘l’ was not declared in this scope"
    },
    {
      "mod_line": [
        12,
        25,
        27
      ],
      "mod_code": [
        "for ( int i = 0 ; i < n ; i ++ )",
        "cout << \" YES \" << endl ;",
        "cout << \" NO \" << endl ;"
      ],
      "err_line": 13,
      "err_msg": "‘l’ was not declared in this scope"
    },
    {
      "mod_line": [
        12,
        27
      ],
      "mod_code": [
        "for ( int i = 0 ; i < n ; i ++ )",
        "cout << \" NO \" << endl ;"
      ],
      "err_line": 13,
      "err_msg": "‘l’ was not declared in this scope"
    }
  ]
}