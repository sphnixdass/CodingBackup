{
  "meta": {
    "index": 2571,
    "hitid": "3R6RZGK0XF6I11WF29EA4D7CQPMVYW",
    "workerid": "A1EKVUFWL7OJMO",
    "probid": "154A",
    "subid": "38074022"
  },
  "lines": [
    {
      "line": 0,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 1,
      "text": "s = string",
      "code": "string s ;",
      "indent": 1
    },
    {
      "line": 2,
      "text": "read s",
      "code": "cin >> s ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "f = map of char to char",
      "code": "map < char , char > f ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "k = integer",
      "code": "int k ;",
      "indent": 1
    },
    {
      "line": 5,
      "text": "read k",
      "code": "cin >> k ;",
      "indent": 1
    },
    {
      "line": 6,
      "text": "for i = 0 to k exclusive",
      "code": "for ( int i = 0 ; i < k ; ++ i )",
      "indent": 1
    },
    {
      "line": 7,
      "text": "a = string",
      "code": "string a ;",
      "indent": 2
    },
    {
      "line": 8,
      "text": "read a",
      "code": "cin >> a ;",
      "indent": 2
    },
    {
      "line": 9,
      "text": "f [ a [ 0 ] ] = a [ 1 ]",
      "code": "f [ a [ 0 ] ] = a [ 1 ] ;",
      "indent": 2
    },
    {
      "line": 10,
      "text": "f [ a [ 1 ] ] = a [ 0 ]",
      "code": "f [ a [ 1 ] ] = a [ 0 ] ;",
      "indent": 2
    },
    {
      "line": 11,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 12,
      "text": "n = int with n = size of s",
      "code": "int n = s . size ( ) ;",
      "indent": 1
    },
    {
      "line": 13,
      "text": "ans = integer with ans = 0",
      "code": "int ans = 0 ;",
      "indent": 1
    },
    {
      "line": 14,
      "text": "count = integer with count = 1",
      "code": "int count = 1 ;",
      "indent": 1
    },
    {
      "line": 15,
      "text": "i = integer with i = 1",
      "code": "int i = 1 ;",
      "indent": 1
    },
    {
      "line": 16,
      "text": "while i < n",
      "code": "while ( i < n )",
      "indent": 1
    },
    {
      "line": 17,
      "text": "if s [ i ] is s [ i - 1 ]",
      "code": "if ( s [ i ] == s [ i - 1 ] )",
      "indent": 2
    },
    {
      "line": 18,
      "text": "increment count",
      "code": "count ++ ;",
      "indent": 3
    },
    {
      "line": 19,
      "text": "increment i",
      "code": "i ++ ;",
      "indent": 3
    },
    {
      "line": 20,
      "text": "else if ( count ( s [ i - 1 ] ) on f and s [ i ] is f [ s [ i - 1 ] ] )",
      "code": "else if ( f . count ( s [ i - 1 ] ) && s [ i ] == f [ s [ i - 1 ] ] )",
      "indent": 2
    },
    {
      "line": 21,
      "text": "if ( ! count ) count = 1",
      "code": "if ( ! count ) count = 1 ;",
      "indent": 3
    },
    {
      "line": 22,
      "text": "count2 = 0",
      "code": "int count2 = 0 ;",
      "indent": 3
    },
    {
      "line": 23,
      "text": "j = integer with j = i",
      "code": "int j = i ;",
      "indent": 3
    },
    {
      "line": 24,
      "text": "while ( j < n and ( s [ j ] is s [ i ] or s [ j ] is s [ i - 1 ] ) )",
      "code": "while ( j < n && ( s [ j ] == s [ i ] || s [ j ] == s [ i - 1 ] ) )",
      "indent": 3
    },
    {
      "line": 25,
      "text": "if s [ j ] is s [ i ]",
      "code": "if ( s [ j ] == s [ i ] )",
      "indent": 4
    },
    {
      "line": 26,
      "text": "increment count2",
      "code": "count2 ++ ;",
      "indent": 5
    },
    {
      "line": 27,
      "text": "else",
      "code": "else",
      "indent": 4
    },
    {
      "line": 28,
      "text": "increment count",
      "code": "count ++ ;",
      "indent": 5
    },
    {
      "line": 29,
      "text": "increment j",
      "code": "j ++ ;",
      "indent": 4
    },
    {
      "line": 30,
      "text": "DUMMY",
      "code": "}",
      "indent": 3
    },
    {
      "line": 31,
      "text": "ans = ans + min of count and count2",
      "code": "ans += min ( count , count2 ) ;",
      "indent": 3
    },
    {
      "line": 32,
      "text": "i = j + 1",
      "code": "i = j + 1 ;",
      "indent": 3
    },
    {
      "line": 33,
      "text": "count = 1",
      "code": "count = 1 ;",
      "indent": 3
    },
    {
      "line": 34,
      "text": "else",
      "code": "else",
      "indent": 2
    },
    {
      "line": 35,
      "text": "count = 1",
      "code": "count = 1 ;",
      "indent": 3
    },
    {
      "line": 36,
      "text": "increment i",
      "code": "i ++ ;",
      "indent": 3
    },
    {
      "line": 37,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 38,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 39,
      "text": "print ans",
      "code": "cout << ans << \" \\n \" ;",
      "indent": 1
    },
    {
      "line": 40,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        20
      ],
      "mod_code": [
        "else if ( count ( s [ i - 1 ] ) && s [ i ] == f [ s [ i - 1 ] ] )"
      ],
      "err_line": 20,
      "err_msg": "‘count’ cannot be used as a function"
    },
    {
      "mod_line": [
        1
      ],
      "mod_code": [
        "char s ;"
      ],
      "err_line": 12,
      "err_msg": "request for member ‘size’ in ‘s’, which is of non-class type ‘char’"
    },
    {
      "mod_line": [
        3
      ],
      "mod_code": [
        "map < char , char > :: f ;"
      ],
      "err_line": 3,
      "err_msg": "‘f’ is not a member of ‘std::map<char, char>’"
    },
    {
      "mod_line": [
        5
      ],
      "mod_code": [
        "cin >> n ;"
      ],
      "err_line": 5,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        6
      ],
      "mod_code": [
        "for ( i = 0 ; i < k ; i ++ )"
      ],
      "err_line": 6,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        7
      ],
      "mod_code": [
        "char a ;"
      ],
      "err_line": 9,
      "err_msg": "invalid types ‘char[int]’ for array subscript"
    },
    {
      "mod_line": [
        8
      ],
      "mod_code": [
        "cin >> n ;"
      ],
      "err_line": 8,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        9
      ],
      "mod_code": [
        "int f [ a [ 0 ] ] = a [ 1 ] ;"
      ],
      "err_line": 9,
      "err_msg": "array must be initialized with a brace-enclosed initializer"
    },
    {
      "mod_line": [
        10
      ],
      "mod_code": [
        "int f [ a [ 1 ] ] = a [ 0 ] ;"
      ],
      "err_line": 10,
      "err_msg": "array must be initialized with a brace-enclosed initializer"
    },
    {
      "mod_line": [
        12
      ],
      "mod_code": [
        "int n = s = s . size ( ) ;"
      ],
      "err_line": 12,
      "err_msg": "cannot convert ‘std::__cxx11::basic_string<char>’ to ‘int’ in initialization"
    },
    {
      "mod_line": [
        14
      ],
      "mod_code": [
        "long long count = 1 ;"
      ],
      "err_line": 31,
      "err_msg": "no matching function for call to ‘min(long long int&, int&)’"
    },
    {
      "mod_line": [
        17
      ],
      "mod_code": [
        "if ( s [ i ] == s [ i - 1 )"
      ],
      "err_line": 17,
      "err_msg": "expected ‘]’ before ‘)’ token"
    },
    {
      "mod_line": [
        20
      ],
      "mod_code": [
        "else if ( s ( s [ i - 1 ] ) && s [ i ] == f [ s [ i - 1 ] ] )"
      ],
      "err_line": 20,
      "err_msg": "no match for call to ‘(std::__cxx11::string {aka std::__cxx11::basic_string<char>}) (char&)’"
    },
    {
      "mod_line": [
        22
      ],
      "mod_code": [
        "long long count2 = 0 ;"
      ],
      "err_line": 31,
      "err_msg": "no matching function for call to ‘min(int&, long long int&)’"
    },
    {
      "mod_line": [
        24
      ],
      "mod_code": [
        "while ( j < n && ( s [ j ] == s [ i ] || s [ j ] == s [ i - 1 ] ) ) )"
      ],
      "err_line": 24,
      "err_msg": "expected primary-expression before ‘)’ token"
    },
    {
      "mod_line": [
        20,
        33
      ],
      "mod_code": [
        "else if ( count ( s [ i - 1 ] ) && s [ i ] == f [ s [ i - 1 ] ] )",
        "int count = 1 ;"
      ],
      "err_line": 20,
      "err_msg": "‘count’ cannot be used as a function"
    },
    {
      "mod_line": [
        20,
        33,
        2
      ],
      "mod_code": [
        "else if ( count ( s [ i - 1 ] ) && s [ i ] == f [ s [ i - 1 ] ] )",
        "int count = 1 ;",
        "cout << s << endl ;"
      ],
      "err_line": 20,
      "err_msg": "‘count’ cannot be used as a function"
    },
    {
      "mod_line": [
        20,
        33,
        2,
        16
      ],
      "mod_code": [
        "else if ( count ( s [ i - 1 ] ) && s [ i ] == f [ s [ i - 1 ] ] )",
        "int count = 1 ;",
        "cout << s << endl ;",
        "while ( i < n ) ;"
      ],
      "err_line": 20,
      "err_msg": "‘count’ cannot be used as a function"
    },
    {
      "mod_line": [
        20,
        33,
        2,
        14
      ],
      "mod_code": [
        "else if ( count ( s [ i - 1 ] ) && s [ i ] == f [ s [ i - 1 ] ] )",
        "int count = 1 ;",
        "cout << s << endl ;",
        "long long count = 1 ;"
      ],
      "err_line": 20,
      "err_msg": "‘count’ cannot be used as a function"
    },
    {
      "mod_line": [
        20,
        33,
        16
      ],
      "mod_code": [
        "else if ( count ( s [ i - 1 ] ) && s [ i ] == f [ s [ i - 1 ] ] )",
        "int count = 1 ;",
        "while ( i < n ) ;"
      ],
      "err_line": 20,
      "err_msg": "‘count’ cannot be used as a function"
    },
    {
      "mod_line": [
        20,
        33,
        16,
        14
      ],
      "mod_code": [
        "else if ( count ( s [ i - 1 ] ) && s [ i ] == f [ s [ i - 1 ] ] )",
        "int count = 1 ;",
        "while ( i < n ) ;",
        "long long count = 1 ;"
      ],
      "err_line": 20,
      "err_msg": "‘count’ cannot be used as a function"
    },
    {
      "mod_line": [
        20,
        33,
        14
      ],
      "mod_code": [
        "else if ( count ( s [ i - 1 ] ) && s [ i ] == f [ s [ i - 1 ] ] )",
        "int count = 1 ;",
        "long long count = 1 ;"
      ],
      "err_line": 20,
      "err_msg": "‘count’ cannot be used as a function"
    },
    {
      "mod_line": [
        20,
        2
      ],
      "mod_code": [
        "else if ( count ( s [ i - 1 ] ) && s [ i ] == f [ s [ i - 1 ] ] )",
        "cout << s << endl ;"
      ],
      "err_line": 20,
      "err_msg": "‘count’ cannot be used as a function"
    },
    {
      "mod_line": [
        20,
        2,
        16
      ],
      "mod_code": [
        "else if ( count ( s [ i - 1 ] ) && s [ i ] == f [ s [ i - 1 ] ] )",
        "cout << s << endl ;",
        "while ( i < n ) ;"
      ],
      "err_line": 20,
      "err_msg": "‘count’ cannot be used as a function"
    },
    {
      "mod_line": [
        20,
        2,
        16,
        14
      ],
      "mod_code": [
        "else if ( count ( s [ i - 1 ] ) && s [ i ] == f [ s [ i - 1 ] ] )",
        "cout << s << endl ;",
        "while ( i < n ) ;",
        "long long count = 1 ;"
      ],
      "err_line": 20,
      "err_msg": "‘count’ cannot be used as a function"
    },
    {
      "mod_line": [
        20,
        2,
        14
      ],
      "mod_code": [
        "else if ( count ( s [ i - 1 ] ) && s [ i ] == f [ s [ i - 1 ] ] )",
        "cout << s << endl ;",
        "long long count = 1 ;"
      ],
      "err_line": 20,
      "err_msg": "‘count’ cannot be used as a function"
    },
    {
      "mod_line": [
        20,
        16
      ],
      "mod_code": [
        "else if ( count ( s [ i - 1 ] ) && s [ i ] == f [ s [ i - 1 ] ] )",
        "while ( i < n ) ;"
      ],
      "err_line": 20,
      "err_msg": "‘count’ cannot be used as a function"
    },
    {
      "mod_line": [
        20,
        16,
        14
      ],
      "mod_code": [
        "else if ( count ( s [ i - 1 ] ) && s [ i ] == f [ s [ i - 1 ] ] )",
        "while ( i < n ) ;",
        "long long count = 1 ;"
      ],
      "err_line": 20,
      "err_msg": "‘count’ cannot be used as a function"
    },
    {
      "mod_line": [
        20,
        14
      ],
      "mod_code": [
        "else if ( count ( s [ i - 1 ] ) && s [ i ] == f [ s [ i - 1 ] ] )",
        "long long count = 1 ;"
      ],
      "err_line": 20,
      "err_msg": "‘count’ cannot be used as a function"
    },
    {
      "mod_line": [
        33,
        2,
        16,
        14
      ],
      "mod_code": [
        "int count = 1 ;",
        "cout << s << endl ;",
        "while ( i < n ) ;",
        "long long count = 1 ;"
      ],
      "err_line": 31,
      "err_msg": "no matching function for call to ‘min(long long int&, int&)’"
    },
    {
      "mod_line": [
        33,
        2,
        16,
        20
      ],
      "mod_code": [
        "int count = 1 ;",
        "cout << s << endl ;",
        "while ( i < n ) ;",
        "else if ( s ( s [ i - 1 ] ) && s [ i ] == f [ s [ i - 1 ] ] )"
      ],
      "err_line": 20,
      "err_msg": "no match for call to ‘(std::__cxx11::string {aka std::__cxx11::basic_string<char>}) (char&)’"
    },
    {
      "mod_line": [
        33,
        2,
        14
      ],
      "mod_code": [
        "int count = 1 ;",
        "cout << s << endl ;",
        "long long count = 1 ;"
      ],
      "err_line": 31,
      "err_msg": "no matching function for call to ‘min(long long int&, int&)’"
    },
    {
      "mod_line": [
        33,
        2,
        14,
        20
      ],
      "mod_code": [
        "int count = 1 ;",
        "cout << s << endl ;",
        "long long count = 1 ;",
        "else if ( s ( s [ i - 1 ] ) && s [ i ] == f [ s [ i - 1 ] ] )"
      ],
      "err_line": 20,
      "err_msg": "no match for call to ‘(std::__cxx11::string {aka std::__cxx11::basic_string<char>}) (char&)’"
    },
    {
      "mod_line": [
        33,
        2,
        20
      ],
      "mod_code": [
        "int count = 1 ;",
        "cout << s << endl ;",
        "else if ( s ( s [ i - 1 ] ) && s [ i ] == f [ s [ i - 1 ] ] )"
      ],
      "err_line": 20,
      "err_msg": "no match for call to ‘(std::__cxx11::string {aka std::__cxx11::basic_string<char>}) (char&)’"
    },
    {
      "mod_line": [
        33,
        16,
        14
      ],
      "mod_code": [
        "int count = 1 ;",
        "while ( i < n ) ;",
        "long long count = 1 ;"
      ],
      "err_line": 31,
      "err_msg": "no matching function for call to ‘min(long long int&, int&)’"
    },
    {
      "mod_line": [
        33,
        16,
        14,
        20
      ],
      "mod_code": [
        "int count = 1 ;",
        "while ( i < n ) ;",
        "long long count = 1 ;",
        "else if ( s ( s [ i - 1 ] ) && s [ i ] == f [ s [ i - 1 ] ] )"
      ],
      "err_line": 20,
      "err_msg": "no match for call to ‘(std::__cxx11::string {aka std::__cxx11::basic_string<char>}) (char&)’"
    },
    {
      "mod_line": [
        33,
        16,
        20
      ],
      "mod_code": [
        "int count = 1 ;",
        "while ( i < n ) ;",
        "else if ( s ( s [ i - 1 ] ) && s [ i ] == f [ s [ i - 1 ] ] )"
      ],
      "err_line": 20,
      "err_msg": "no match for call to ‘(std::__cxx11::string {aka std::__cxx11::basic_string<char>}) (char&)’"
    },
    {
      "mod_line": [
        33,
        14
      ],
      "mod_code": [
        "int count = 1 ;",
        "long long count = 1 ;"
      ],
      "err_line": 31,
      "err_msg": "no matching function for call to ‘min(long long int&, int&)’"
    },
    {
      "mod_line": [
        33,
        14,
        20
      ],
      "mod_code": [
        "int count = 1 ;",
        "long long count = 1 ;",
        "else if ( s ( s [ i - 1 ] ) && s [ i ] == f [ s [ i - 1 ] ] )"
      ],
      "err_line": 20,
      "err_msg": "no match for call to ‘(std::__cxx11::string {aka std::__cxx11::basic_string<char>}) (char&)’"
    },
    {
      "mod_line": [
        33,
        20
      ],
      "mod_code": [
        "int count = 1 ;",
        "else if ( s ( s [ i - 1 ] ) && s [ i ] == f [ s [ i - 1 ] ] )"
      ],
      "err_line": 20,
      "err_msg": "no match for call to ‘(std::__cxx11::string {aka std::__cxx11::basic_string<char>}) (char&)’"
    },
    {
      "mod_line": [
        2,
        16,
        14
      ],
      "mod_code": [
        "cout << s << endl ;",
        "while ( i < n ) ;",
        "long long count = 1 ;"
      ],
      "err_line": 31,
      "err_msg": "no matching function for call to ‘min(long long int&, int&)’"
    },
    {
      "mod_line": [
        2,
        16,
        14,
        20
      ],
      "mod_code": [
        "cout << s << endl ;",
        "while ( i < n ) ;",
        "long long count = 1 ;",
        "else if ( s ( s [ i - 1 ] ) && s [ i ] == f [ s [ i - 1 ] ] )"
      ],
      "err_line": 20,
      "err_msg": "no match for call to ‘(std::__cxx11::string {aka std::__cxx11::basic_string<char>}) (char&)’"
    },
    {
      "mod_line": [
        2,
        16,
        20
      ],
      "mod_code": [
        "cout << s << endl ;",
        "while ( i < n ) ;",
        "else if ( s ( s [ i - 1 ] ) && s [ i ] == f [ s [ i - 1 ] ] )"
      ],
      "err_line": 20,
      "err_msg": "no match for call to ‘(std::__cxx11::string {aka std::__cxx11::basic_string<char>}) (char&)’"
    },
    {
      "mod_line": [
        2,
        14
      ],
      "mod_code": [
        "cout << s << endl ;",
        "long long count = 1 ;"
      ],
      "err_line": 31,
      "err_msg": "no matching function for call to ‘min(long long int&, int&)’"
    },
    {
      "mod_line": [
        2,
        14,
        20
      ],
      "mod_code": [
        "cout << s << endl ;",
        "long long count = 1 ;",
        "else if ( s ( s [ i - 1 ] ) && s [ i ] == f [ s [ i - 1 ] ] )"
      ],
      "err_line": 20,
      "err_msg": "no match for call to ‘(std::__cxx11::string {aka std::__cxx11::basic_string<char>}) (char&)’"
    },
    {
      "mod_line": [
        2,
        20
      ],
      "mod_code": [
        "cout << s << endl ;",
        "else if ( s ( s [ i - 1 ] ) && s [ i ] == f [ s [ i - 1 ] ] )"
      ],
      "err_line": 20,
      "err_msg": "no match for call to ‘(std::__cxx11::string {aka std::__cxx11::basic_string<char>}) (char&)’"
    },
    {
      "mod_line": [
        16,
        14
      ],
      "mod_code": [
        "while ( i < n ) ;",
        "long long count = 1 ;"
      ],
      "err_line": 31,
      "err_msg": "no matching function for call to ‘min(long long int&, int&)’"
    },
    {
      "mod_line": [
        16,
        14,
        20
      ],
      "mod_code": [
        "while ( i < n ) ;",
        "long long count = 1 ;",
        "else if ( s ( s [ i - 1 ] ) && s [ i ] == f [ s [ i - 1 ] ] )"
      ],
      "err_line": 20,
      "err_msg": "no match for call to ‘(std::__cxx11::string {aka std::__cxx11::basic_string<char>}) (char&)’"
    },
    {
      "mod_line": [
        16,
        20
      ],
      "mod_code": [
        "while ( i < n ) ;",
        "else if ( s ( s [ i - 1 ] ) && s [ i ] == f [ s [ i - 1 ] ] )"
      ],
      "err_line": 20,
      "err_msg": "no match for call to ‘(std::__cxx11::string {aka std::__cxx11::basic_string<char>}) (char&)’"
    },
    {
      "mod_line": [
        14,
        20
      ],
      "mod_code": [
        "long long count = 1 ;",
        "else if ( s ( s [ i - 1 ] ) && s [ i ] == f [ s [ i - 1 ] ] )"
      ],
      "err_line": 20,
      "err_msg": "no match for call to ‘(std::__cxx11::string {aka std::__cxx11::basic_string<char>}) (char&)’"
    }
  ]
}