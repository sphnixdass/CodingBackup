{
  "meta": {
    "index": 1311,
    "hitid": "3XU9MCX6VO6079MR0425UCH4RRDR2S",
    "workerid": "A1EKVUFWL7OJMO",
    "probid": "49A",
    "subid": "27179634"
  },
  "lines": [
    {
      "line": 0,
      "text": "M = const integer with M = 105",
      "code": "const int M = 100 + 5 ;",
      "indent": 0
    },
    {
      "line": 1,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 2,
      "text": "s = string",
      "code": "string s ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "read line s",
      "code": "getline ( cin , s ) ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "c = character with c = s [ 0 ]",
      "code": "char c = s [ 0 ] ;",
      "indent": 1
    },
    {
      "line": 5,
      "text": "for i = 0 to s . length ( ) exclusive",
      "code": "for ( int i = 0 ; i < s . length ( ) ; i ++ )",
      "indent": 1
    },
    {
      "line": 6,
      "text": "if ( ( s [ i ] > = a and s [ i ] < = z ) or ( s [ i ] > = A and s [ i ] < = Z ) ) , c = s [ i ]",
      "code": "if ( ( s [ i ] >= ' a ' && s [ i ] <= ' z ' ) || ( s [ i ] >= ' A ' && s [ i ] <= ' Z ' ) ) { c = s [ i ] ; }",
      "indent": 2
    },
    {
      "line": 7,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 8,
      "text": "le = character array of size 12 with le = { ' a ' , ' e ' , ' i ' , ' o ' , ' u ' , ' y ' , ' A ' , ' E ' , ' I ' , ' O ' , ' U ' , ' Y ' }",
      "code": "char le [ 12 ] = { ' a ' , ' e ' , ' i ' , ' o ' , ' u ' , ' y ' , ' A ' , ' E ' , ' I ' , ' O ' , ' U ' , ' Y ' } ;",
      "indent": 1
    },
    {
      "line": 9,
      "text": "ok = bool with ok = false",
      "code": "bool ok = false ;",
      "indent": 1
    },
    {
      "line": 10,
      "text": "for i = 0 to 11",
      "code": "for ( int i = 0 ; i < 12 ; i ++ )",
      "indent": 1
    },
    {
      "line": 11,
      "text": "if ( c is le [ i ] )",
      "code": "if ( c == le [ i ] )",
      "indent": 2
    },
    {
      "line": 12,
      "text": "ok = true",
      "code": "ok = true ;",
      "indent": 3
    },
    {
      "line": 13,
      "text": "break loop",
      "code": "break ;",
      "indent": 3
    },
    {
      "line": 14,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 15,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 16,
      "text": "if ( ok )",
      "code": "if ( ok )",
      "indent": 1
    },
    {
      "line": 17,
      "text": "print YES",
      "code": "cout << \" YES \" << endl ;",
      "indent": 2
    },
    {
      "line": 18,
      "text": "else",
      "code": "else",
      "indent": 1
    },
    {
      "line": 19,
      "text": "print NO",
      "code": "cout << \" NO \" << endl ;",
      "indent": 2
    },
    {
      "line": 20,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 21,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 22,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        2
      ],
      "mod_code": [
        "char s ;"
      ],
      "err_line": 3,
      "err_msg": "no matching function for call to ‘getline(std::istream&, char&)’"
    },
    {
      "mod_line": [
        4
      ],
      "mod_code": [
        "character = s [ 0 ] ;"
      ],
      "err_line": 4,
      "err_msg": "‘character’ was not declared in this scope"
    },
    {
      "mod_line": [
        5
      ],
      "mod_code": [
        "for ( i = 0 ; i < s . length ( ) ; i ++ )"
      ],
      "err_line": 5,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        6
      ],
      "mod_code": [
        "if ( s [ i ] >= ' a ' && s [ i ] <= ' z ' || s [ i ] >= ' A ' ) c = s [ i ] <= ' Z ' ) ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before ‘)’ token"
    },
    {
      "mod_line": [
        13
      ],
      "mod_code": [
        "break break ;"
      ],
      "err_line": 13,
      "err_msg": "expected ‘;’ before ‘break’"
    },
    {
      "mod_line": [
        16
      ],
      "mod_code": [
        "if ( ok ) ok ( ok ) ;"
      ],
      "err_line": 16,
      "err_msg": "‘ok’ cannot be used as a function"
    },
    {
      "mod_line": [
        3,
        8,
        10,
        4
      ],
      "mod_code": [
        "cin >> s ;",
        "char le [ 12 ] = { ' a ' } ;",
        "for ( int i = 0 ; i < 11 ; i ++ )",
        "character = s [ 0 ] ;"
      ],
      "err_line": 4,
      "err_msg": "‘character’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        8,
        10,
        6
      ],
      "mod_code": [
        "cin >> s ;",
        "char le [ 12 ] = { ' a ' } ;",
        "for ( int i = 0 ; i < 11 ; i ++ )",
        "if ( s [ i ] >= ' a ' && s [ i ] <= ' z ' || s [ i ] >= ' A ' ) c = s [ i ] <= ' Z ' ) ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before ‘)’ token"
    },
    {
      "mod_line": [
        3,
        8,
        12,
        4
      ],
      "mod_code": [
        "cin >> s ;",
        "char le [ 12 ] = { ' a ' } ;",
        "bool ok = true ;",
        "character = s [ 0 ] ;"
      ],
      "err_line": 4,
      "err_msg": "‘character’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        8,
        12,
        6
      ],
      "mod_code": [
        "cin >> s ;",
        "char le [ 12 ] = { ' a ' } ;",
        "bool ok = true ;",
        "if ( s [ i ] >= ' a ' && s [ i ] <= ' z ' || s [ i ] >= ' A ' ) c = s [ i ] <= ' Z ' ) ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before ‘)’ token"
    },
    {
      "mod_line": [
        3,
        8,
        4
      ],
      "mod_code": [
        "cin >> s ;",
        "char le [ 12 ] = { ' a ' } ;",
        "character = s [ 0 ] ;"
      ],
      "err_line": 4,
      "err_msg": "‘character’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        8,
        4,
        6
      ],
      "mod_code": [
        "cin >> s ;",
        "char le [ 12 ] = { ' a ' } ;",
        "character = s [ 0 ] ;",
        "if ( s [ i ] >= ' a ' && s [ i ] <= ' z ' || s [ i ] >= ' A ' ) c = s [ i ] <= ' Z ' ) ;"
      ],
      "err_line": 4,
      "err_msg": "‘character’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        8,
        6
      ],
      "mod_code": [
        "cin >> s ;",
        "char le [ 12 ] = { ' a ' } ;",
        "if ( s [ i ] >= ' a ' && s [ i ] <= ' z ' || s [ i ] >= ' A ' ) c = s [ i ] <= ' Z ' ) ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before ‘)’ token"
    },
    {
      "mod_line": [
        3,
        10,
        12,
        4
      ],
      "mod_code": [
        "cin >> s ;",
        "for ( int i = 0 ; i < 11 ; i ++ )",
        "bool ok = true ;",
        "character = s [ 0 ] ;"
      ],
      "err_line": 4,
      "err_msg": "‘character’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        10,
        12,
        6
      ],
      "mod_code": [
        "cin >> s ;",
        "for ( int i = 0 ; i < 11 ; i ++ )",
        "bool ok = true ;",
        "if ( s [ i ] >= ' a ' && s [ i ] <= ' z ' || s [ i ] >= ' A ' ) c = s [ i ] <= ' Z ' ) ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before ‘)’ token"
    },
    {
      "mod_line": [
        3,
        10,
        4
      ],
      "mod_code": [
        "cin >> s ;",
        "for ( int i = 0 ; i < 11 ; i ++ )",
        "character = s [ 0 ] ;"
      ],
      "err_line": 4,
      "err_msg": "‘character’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        10,
        4,
        6
      ],
      "mod_code": [
        "cin >> s ;",
        "for ( int i = 0 ; i < 11 ; i ++ )",
        "character = s [ 0 ] ;",
        "if ( s [ i ] >= ' a ' && s [ i ] <= ' z ' || s [ i ] >= ' A ' ) c = s [ i ] <= ' Z ' ) ;"
      ],
      "err_line": 4,
      "err_msg": "‘character’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        10,
        6
      ],
      "mod_code": [
        "cin >> s ;",
        "for ( int i = 0 ; i < 11 ; i ++ )",
        "if ( s [ i ] >= ' a ' && s [ i ] <= ' z ' || s [ i ] >= ' A ' ) c = s [ i ] <= ' Z ' ) ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before ‘)’ token"
    },
    {
      "mod_line": [
        3,
        12,
        4
      ],
      "mod_code": [
        "cin >> s ;",
        "bool ok = true ;",
        "character = s [ 0 ] ;"
      ],
      "err_line": 4,
      "err_msg": "‘character’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        12,
        4,
        6
      ],
      "mod_code": [
        "cin >> s ;",
        "bool ok = true ;",
        "character = s [ 0 ] ;",
        "if ( s [ i ] >= ' a ' && s [ i ] <= ' z ' || s [ i ] >= ' A ' ) c = s [ i ] <= ' Z ' ) ;"
      ],
      "err_line": 4,
      "err_msg": "‘character’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        12,
        6
      ],
      "mod_code": [
        "cin >> s ;",
        "bool ok = true ;",
        "if ( s [ i ] >= ' a ' && s [ i ] <= ' z ' || s [ i ] >= ' A ' ) c = s [ i ] <= ' Z ' ) ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before ‘)’ token"
    },
    {
      "mod_line": [
        3,
        4
      ],
      "mod_code": [
        "cin >> s ;",
        "character = s [ 0 ] ;"
      ],
      "err_line": 4,
      "err_msg": "‘character’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        4,
        6
      ],
      "mod_code": [
        "cin >> s ;",
        "character = s [ 0 ] ;",
        "if ( s [ i ] >= ' a ' && s [ i ] <= ' z ' || s [ i ] >= ' A ' ) c = s [ i ] <= ' Z ' ) ;"
      ],
      "err_line": 4,
      "err_msg": "‘character’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        6
      ],
      "mod_code": [
        "cin >> s ;",
        "if ( s [ i ] >= ' a ' && s [ i ] <= ' z ' || s [ i ] >= ' A ' ) c = s [ i ] <= ' Z ' ) ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before ‘)’ token"
    },
    {
      "mod_line": [
        8,
        10,
        12,
        4
      ],
      "mod_code": [
        "char le [ 12 ] = { ' a ' } ;",
        "for ( int i = 0 ; i < 11 ; i ++ )",
        "bool ok = true ;",
        "character = s [ 0 ] ;"
      ],
      "err_line": 4,
      "err_msg": "‘character’ was not declared in this scope"
    },
    {
      "mod_line": [
        8,
        10,
        12,
        6
      ],
      "mod_code": [
        "char le [ 12 ] = { ' a ' } ;",
        "for ( int i = 0 ; i < 11 ; i ++ )",
        "bool ok = true ;",
        "if ( s [ i ] >= ' a ' && s [ i ] <= ' z ' || s [ i ] >= ' A ' ) c = s [ i ] <= ' Z ' ) ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before ‘)’ token"
    },
    {
      "mod_line": [
        8,
        10,
        4
      ],
      "mod_code": [
        "char le [ 12 ] = { ' a ' } ;",
        "for ( int i = 0 ; i < 11 ; i ++ )",
        "character = s [ 0 ] ;"
      ],
      "err_line": 4,
      "err_msg": "‘character’ was not declared in this scope"
    },
    {
      "mod_line": [
        8,
        10,
        4,
        6
      ],
      "mod_code": [
        "char le [ 12 ] = { ' a ' } ;",
        "for ( int i = 0 ; i < 11 ; i ++ )",
        "character = s [ 0 ] ;",
        "if ( s [ i ] >= ' a ' && s [ i ] <= ' z ' || s [ i ] >= ' A ' ) c = s [ i ] <= ' Z ' ) ;"
      ],
      "err_line": 4,
      "err_msg": "‘character’ was not declared in this scope"
    },
    {
      "mod_line": [
        8,
        10,
        6
      ],
      "mod_code": [
        "char le [ 12 ] = { ' a ' } ;",
        "for ( int i = 0 ; i < 11 ; i ++ )",
        "if ( s [ i ] >= ' a ' && s [ i ] <= ' z ' || s [ i ] >= ' A ' ) c = s [ i ] <= ' Z ' ) ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before ‘)’ token"
    },
    {
      "mod_line": [
        8,
        12,
        4
      ],
      "mod_code": [
        "char le [ 12 ] = { ' a ' } ;",
        "bool ok = true ;",
        "character = s [ 0 ] ;"
      ],
      "err_line": 4,
      "err_msg": "‘character’ was not declared in this scope"
    },
    {
      "mod_line": [
        8,
        12,
        4,
        6
      ],
      "mod_code": [
        "char le [ 12 ] = { ' a ' } ;",
        "bool ok = true ;",
        "character = s [ 0 ] ;",
        "if ( s [ i ] >= ' a ' && s [ i ] <= ' z ' || s [ i ] >= ' A ' ) c = s [ i ] <= ' Z ' ) ;"
      ],
      "err_line": 4,
      "err_msg": "‘character’ was not declared in this scope"
    },
    {
      "mod_line": [
        8,
        12,
        6
      ],
      "mod_code": [
        "char le [ 12 ] = { ' a ' } ;",
        "bool ok = true ;",
        "if ( s [ i ] >= ' a ' && s [ i ] <= ' z ' || s [ i ] >= ' A ' ) c = s [ i ] <= ' Z ' ) ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before ‘)’ token"
    },
    {
      "mod_line": [
        8,
        4
      ],
      "mod_code": [
        "char le [ 12 ] = { ' a ' } ;",
        "character = s [ 0 ] ;"
      ],
      "err_line": 4,
      "err_msg": "‘character’ was not declared in this scope"
    },
    {
      "mod_line": [
        8,
        4,
        6
      ],
      "mod_code": [
        "char le [ 12 ] = { ' a ' } ;",
        "character = s [ 0 ] ;",
        "if ( s [ i ] >= ' a ' && s [ i ] <= ' z ' || s [ i ] >= ' A ' ) c = s [ i ] <= ' Z ' ) ;"
      ],
      "err_line": 4,
      "err_msg": "‘character’ was not declared in this scope"
    },
    {
      "mod_line": [
        8,
        6
      ],
      "mod_code": [
        "char le [ 12 ] = { ' a ' } ;",
        "if ( s [ i ] >= ' a ' && s [ i ] <= ' z ' || s [ i ] >= ' A ' ) c = s [ i ] <= ' Z ' ) ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before ‘)’ token"
    },
    {
      "mod_line": [
        10,
        12,
        4
      ],
      "mod_code": [
        "for ( int i = 0 ; i < 11 ; i ++ )",
        "bool ok = true ;",
        "character = s [ 0 ] ;"
      ],
      "err_line": 4,
      "err_msg": "‘character’ was not declared in this scope"
    },
    {
      "mod_line": [
        10,
        12,
        4,
        6
      ],
      "mod_code": [
        "for ( int i = 0 ; i < 11 ; i ++ )",
        "bool ok = true ;",
        "character = s [ 0 ] ;",
        "if ( s [ i ] >= ' a ' && s [ i ] <= ' z ' || s [ i ] >= ' A ' ) c = s [ i ] <= ' Z ' ) ;"
      ],
      "err_line": 4,
      "err_msg": "‘character’ was not declared in this scope"
    },
    {
      "mod_line": [
        10,
        12,
        6
      ],
      "mod_code": [
        "for ( int i = 0 ; i < 11 ; i ++ )",
        "bool ok = true ;",
        "if ( s [ i ] >= ' a ' && s [ i ] <= ' z ' || s [ i ] >= ' A ' ) c = s [ i ] <= ' Z ' ) ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before ‘)’ token"
    },
    {
      "mod_line": [
        10,
        4
      ],
      "mod_code": [
        "for ( int i = 0 ; i < 11 ; i ++ )",
        "character = s [ 0 ] ;"
      ],
      "err_line": 4,
      "err_msg": "‘character’ was not declared in this scope"
    },
    {
      "mod_line": [
        10,
        4,
        6
      ],
      "mod_code": [
        "for ( int i = 0 ; i < 11 ; i ++ )",
        "character = s [ 0 ] ;",
        "if ( s [ i ] >= ' a ' && s [ i ] <= ' z ' || s [ i ] >= ' A ' ) c = s [ i ] <= ' Z ' ) ;"
      ],
      "err_line": 4,
      "err_msg": "‘character’ was not declared in this scope"
    },
    {
      "mod_line": [
        10,
        6
      ],
      "mod_code": [
        "for ( int i = 0 ; i < 11 ; i ++ )",
        "if ( s [ i ] >= ' a ' && s [ i ] <= ' z ' || s [ i ] >= ' A ' ) c = s [ i ] <= ' Z ' ) ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before ‘)’ token"
    },
    {
      "mod_line": [
        12,
        4
      ],
      "mod_code": [
        "bool ok = true ;",
        "character = s [ 0 ] ;"
      ],
      "err_line": 4,
      "err_msg": "‘character’ was not declared in this scope"
    },
    {
      "mod_line": [
        12,
        4,
        6
      ],
      "mod_code": [
        "bool ok = true ;",
        "character = s [ 0 ] ;",
        "if ( s [ i ] >= ' a ' && s [ i ] <= ' z ' || s [ i ] >= ' A ' ) c = s [ i ] <= ' Z ' ) ;"
      ],
      "err_line": 4,
      "err_msg": "‘character’ was not declared in this scope"
    },
    {
      "mod_line": [
        12,
        6
      ],
      "mod_code": [
        "bool ok = true ;",
        "if ( s [ i ] >= ' a ' && s [ i ] <= ' z ' || s [ i ] >= ' A ' ) c = s [ i ] <= ' Z ' ) ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before ‘)’ token"
    },
    {
      "mod_line": [
        4,
        6
      ],
      "mod_code": [
        "character = s [ 0 ] ;",
        "if ( s [ i ] >= ' a ' && s [ i ] <= ' z ' || s [ i ] >= ' A ' ) c = s [ i ] <= ' Z ' ) ;"
      ],
      "err_line": 4,
      "err_msg": "‘character’ was not declared in this scope"
    }
  ]
}