{
  "meta": {
    "index": 968,
    "hitid": "3WJGKMRWVI3J4HVOFWWR109MNU1DC8",
    "workerid": "AIWEXPJAU66D9",
    "probid": "119A",
    "subid": "48922589"
  },
  "lines": [
    {
      "line": 0,
      "text": "integer function fpb with integer arguments x and y",
      "code": "int fpb ( int x , int y )",
      "indent": 0
    },
    {
      "line": 1,
      "text": "declare integer variable z",
      "code": "int z ;",
      "indent": 1
    },
    {
      "line": 2,
      "text": "if x = 0 return y",
      "code": "if ( x == 0 ) return y ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "if y = 0 return x",
      "code": "if ( y == 0 ) return x ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "for integer i = 1 to min of x and y inclusive",
      "code": "for ( int i = 1 ; i <= min ( x , y ) ; i ++ )",
      "indent": 1
    },
    {
      "line": 5,
      "text": "if x % i = 0 & & y % i = 0 , change value of z to i",
      "code": "if ( x % i == 0 && y % i == 0 ) z = i ;",
      "indent": 2
    },
    {
      "line": 6,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 7,
      "text": "return z",
      "code": "return z ;",
      "indent": 1
    },
    {
      "line": 8,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    },
    {
      "line": 9,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 10,
      "text": "create integers a , b and n",
      "code": "int a , b , n ;",
      "indent": 1
    },
    {
      "line": 11,
      "text": "read a , b and n",
      "code": "cin >> a >> b >> n ;",
      "indent": 1
    },
    {
      "line": 12,
      "text": "while n > = 0",
      "code": "while ( n >= 0 )",
      "indent": 1
    },
    {
      "line": 13,
      "text": "decrease n by fpb of a and n",
      "code": "n -= fpb ( a , n ) ;",
      "indent": 2
    },
    {
      "line": 14,
      "text": "if n is less than 0",
      "code": "if ( n < 0 )",
      "indent": 2
    },
    {
      "line": 15,
      "text": "print 1",
      "code": "cout << 1 << endl ;",
      "indent": 3
    },
    {
      "line": 16,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 3
    },
    {
      "line": 17,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 18,
      "text": "decrease n by fpb of b and n",
      "code": "n -= fpb ( b , n ) ;",
      "indent": 2
    },
    {
      "line": 19,
      "text": "if n is less than 0",
      "code": "if ( n < 0 )",
      "indent": 2
    },
    {
      "line": 20,
      "text": "print 0",
      "code": "cout << 0 << endl ;",
      "indent": 3
    },
    {
      "line": 21,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 3
    },
    {
      "line": 22,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 23,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 24,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        0
      ],
      "mod_code": [
        "int fpb ( int x , int y ) ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        4
      ],
      "mod_code": [
        "for ( int i = 1 ; i <= min ( x and y ) ; i ++ )"
      ],
      "err_line": 4,
      "err_msg": "no matching function for call to ‘min(bool)’"
    },
    {
      "mod_line": [
        13
      ],
      "mod_code": [
        "n -= fpb [ a ] ;"
      ],
      "err_line": 13,
      "err_msg": "invalid operands of types ‘int’ and ‘int(int, int)’ to binary ‘operator-’"
    },
    {
      "mod_line": [
        18
      ],
      "mod_code": [
        "n -= fpb ( b ) ;"
      ],
      "err_line": 18,
      "err_msg": "too few arguments to function ‘int fpb(int, int)’"
    },
    {
      "mod_line": [
        7,
        4
      ],
      "mod_code": [
        "z = getchar ( ) ;",
        "for ( int i = 1 ; i <= min ( x and y ) ; i ++ )"
      ],
      "err_line": 4,
      "err_msg": "no matching function for call to ‘min(bool)’"
    },
    {
      "mod_line": [
        7,
        4,
        13
      ],
      "mod_code": [
        "z = getchar ( ) ;",
        "for ( int i = 1 ; i <= min ( x and y ) ; i ++ )",
        "n -= fpb [ a ] ;"
      ],
      "err_line": 4,
      "err_msg": "no matching function for call to ‘min(bool)’"
    },
    {
      "mod_line": [
        7,
        4,
        13,
        18
      ],
      "mod_code": [
        "z = getchar ( ) ;",
        "for ( int i = 1 ; i <= min ( x and y ) ; i ++ )",
        "n -= fpb [ a ] ;",
        "n -= fpb ( b ) ;"
      ],
      "err_line": 4,
      "err_msg": "no matching function for call to ‘min(bool)’"
    },
    {
      "mod_line": [
        7,
        4,
        13,
        0
      ],
      "mod_code": [
        "z = getchar ( ) ;",
        "for ( int i = 1 ; i <= min ( x and y ) ; i ++ )",
        "n -= fpb [ a ] ;",
        "int fpb ( int x , int y ) ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        7,
        4,
        13,
        19
      ],
      "mod_code": [
        "z = getchar ( ) ;",
        "for ( int i = 1 ; i <= min ( x and y ) ; i ++ )",
        "n -= fpb [ a ] ;",
        "if ( n <= 0 )"
      ],
      "err_line": 4,
      "err_msg": "no matching function for call to ‘min(bool)’"
    },
    {
      "mod_line": [
        7,
        4,
        18
      ],
      "mod_code": [
        "z = getchar ( ) ;",
        "for ( int i = 1 ; i <= min ( x and y ) ; i ++ )",
        "n -= fpb ( b ) ;"
      ],
      "err_line": 4,
      "err_msg": "no matching function for call to ‘min(bool)’"
    },
    {
      "mod_line": [
        7,
        4,
        18,
        0
      ],
      "mod_code": [
        "z = getchar ( ) ;",
        "for ( int i = 1 ; i <= min ( x and y ) ; i ++ )",
        "n -= fpb ( b ) ;",
        "int fpb ( int x , int y ) ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        7,
        4,
        18,
        19
      ],
      "mod_code": [
        "z = getchar ( ) ;",
        "for ( int i = 1 ; i <= min ( x and y ) ; i ++ )",
        "n -= fpb ( b ) ;",
        "if ( n <= 0 )"
      ],
      "err_line": 4,
      "err_msg": "no matching function for call to ‘min(bool)’"
    },
    {
      "mod_line": [
        7,
        4,
        0
      ],
      "mod_code": [
        "z = getchar ( ) ;",
        "for ( int i = 1 ; i <= min ( x and y ) ; i ++ )",
        "int fpb ( int x , int y ) ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        7,
        4,
        0,
        19
      ],
      "mod_code": [
        "z = getchar ( ) ;",
        "for ( int i = 1 ; i <= min ( x and y ) ; i ++ )",
        "int fpb ( int x , int y ) ;",
        "if ( n <= 0 )"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        7,
        4,
        19
      ],
      "mod_code": [
        "z = getchar ( ) ;",
        "for ( int i = 1 ; i <= min ( x and y ) ; i ++ )",
        "if ( n <= 0 )"
      ],
      "err_line": 4,
      "err_msg": "no matching function for call to ‘min(bool)’"
    },
    {
      "mod_line": [
        7,
        13
      ],
      "mod_code": [
        "z = getchar ( ) ;",
        "n -= fpb [ a ] ;"
      ],
      "err_line": 13,
      "err_msg": "invalid operands of types ‘int’ and ‘int(int, int)’ to binary ‘operator-’"
    },
    {
      "mod_line": [
        7,
        13,
        18
      ],
      "mod_code": [
        "z = getchar ( ) ;",
        "n -= fpb [ a ] ;",
        "n -= fpb ( b ) ;"
      ],
      "err_line": 13,
      "err_msg": "invalid operands of types ‘int’ and ‘int(int, int)’ to binary ‘operator-’"
    },
    {
      "mod_line": [
        7,
        13,
        18,
        0
      ],
      "mod_code": [
        "z = getchar ( ) ;",
        "n -= fpb [ a ] ;",
        "n -= fpb ( b ) ;",
        "int fpb ( int x , int y ) ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        7,
        13,
        18,
        19
      ],
      "mod_code": [
        "z = getchar ( ) ;",
        "n -= fpb [ a ] ;",
        "n -= fpb ( b ) ;",
        "if ( n <= 0 )"
      ],
      "err_line": 13,
      "err_msg": "invalid operands of types ‘int’ and ‘int(int, int)’ to binary ‘operator-’"
    },
    {
      "mod_line": [
        7,
        13,
        0
      ],
      "mod_code": [
        "z = getchar ( ) ;",
        "n -= fpb [ a ] ;",
        "int fpb ( int x , int y ) ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        7,
        13,
        0,
        19
      ],
      "mod_code": [
        "z = getchar ( ) ;",
        "n -= fpb [ a ] ;",
        "int fpb ( int x , int y ) ;",
        "if ( n <= 0 )"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        7,
        13,
        19
      ],
      "mod_code": [
        "z = getchar ( ) ;",
        "n -= fpb [ a ] ;",
        "if ( n <= 0 )"
      ],
      "err_line": 13,
      "err_msg": "invalid operands of types ‘int’ and ‘int(int, int)’ to binary ‘operator-’"
    },
    {
      "mod_line": [
        7,
        18
      ],
      "mod_code": [
        "z = getchar ( ) ;",
        "n -= fpb ( b ) ;"
      ],
      "err_line": 18,
      "err_msg": "too few arguments to function ‘int fpb(int, int)’"
    },
    {
      "mod_line": [
        7,
        18,
        0
      ],
      "mod_code": [
        "z = getchar ( ) ;",
        "n -= fpb ( b ) ;",
        "int fpb ( int x , int y ) ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        7,
        18,
        0,
        19
      ],
      "mod_code": [
        "z = getchar ( ) ;",
        "n -= fpb ( b ) ;",
        "int fpb ( int x , int y ) ;",
        "if ( n <= 0 )"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        7,
        18,
        19
      ],
      "mod_code": [
        "z = getchar ( ) ;",
        "n -= fpb ( b ) ;",
        "if ( n <= 0 )"
      ],
      "err_line": 18,
      "err_msg": "too few arguments to function ‘int fpb(int, int)’"
    },
    {
      "mod_line": [
        7,
        0
      ],
      "mod_code": [
        "z = getchar ( ) ;",
        "int fpb ( int x , int y ) ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        7,
        0,
        19
      ],
      "mod_code": [
        "z = getchar ( ) ;",
        "int fpb ( int x , int y ) ;",
        "if ( n <= 0 )"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        4,
        13
      ],
      "mod_code": [
        "for ( int i = 1 ; i <= min ( x and y ) ; i ++ )",
        "n -= fpb [ a ] ;"
      ],
      "err_line": 4,
      "err_msg": "no matching function for call to ‘min(bool)’"
    },
    {
      "mod_line": [
        4,
        13,
        18
      ],
      "mod_code": [
        "for ( int i = 1 ; i <= min ( x and y ) ; i ++ )",
        "n -= fpb [ a ] ;",
        "n -= fpb ( b ) ;"
      ],
      "err_line": 4,
      "err_msg": "no matching function for call to ‘min(bool)’"
    },
    {
      "mod_line": [
        4,
        13,
        18,
        0
      ],
      "mod_code": [
        "for ( int i = 1 ; i <= min ( x and y ) ; i ++ )",
        "n -= fpb [ a ] ;",
        "n -= fpb ( b ) ;",
        "int fpb ( int x , int y ) ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        4,
        13,
        18,
        19
      ],
      "mod_code": [
        "for ( int i = 1 ; i <= min ( x and y ) ; i ++ )",
        "n -= fpb [ a ] ;",
        "n -= fpb ( b ) ;",
        "if ( n <= 0 )"
      ],
      "err_line": 4,
      "err_msg": "no matching function for call to ‘min(bool)’"
    },
    {
      "mod_line": [
        4,
        13,
        0
      ],
      "mod_code": [
        "for ( int i = 1 ; i <= min ( x and y ) ; i ++ )",
        "n -= fpb [ a ] ;",
        "int fpb ( int x , int y ) ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        4,
        13,
        0,
        19
      ],
      "mod_code": [
        "for ( int i = 1 ; i <= min ( x and y ) ; i ++ )",
        "n -= fpb [ a ] ;",
        "int fpb ( int x , int y ) ;",
        "if ( n <= 0 )"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        4,
        13,
        19
      ],
      "mod_code": [
        "for ( int i = 1 ; i <= min ( x and y ) ; i ++ )",
        "n -= fpb [ a ] ;",
        "if ( n <= 0 )"
      ],
      "err_line": 4,
      "err_msg": "no matching function for call to ‘min(bool)’"
    },
    {
      "mod_line": [
        4,
        18
      ],
      "mod_code": [
        "for ( int i = 1 ; i <= min ( x and y ) ; i ++ )",
        "n -= fpb ( b ) ;"
      ],
      "err_line": 4,
      "err_msg": "no matching function for call to ‘min(bool)’"
    },
    {
      "mod_line": [
        4,
        18,
        0
      ],
      "mod_code": [
        "for ( int i = 1 ; i <= min ( x and y ) ; i ++ )",
        "n -= fpb ( b ) ;",
        "int fpb ( int x , int y ) ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        4,
        18,
        0,
        19
      ],
      "mod_code": [
        "for ( int i = 1 ; i <= min ( x and y ) ; i ++ )",
        "n -= fpb ( b ) ;",
        "int fpb ( int x , int y ) ;",
        "if ( n <= 0 )"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        4,
        18,
        19
      ],
      "mod_code": [
        "for ( int i = 1 ; i <= min ( x and y ) ; i ++ )",
        "n -= fpb ( b ) ;",
        "if ( n <= 0 )"
      ],
      "err_line": 4,
      "err_msg": "no matching function for call to ‘min(bool)’"
    },
    {
      "mod_line": [
        4,
        0
      ],
      "mod_code": [
        "for ( int i = 1 ; i <= min ( x and y ) ; i ++ )",
        "int fpb ( int x , int y ) ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        4,
        0,
        19
      ],
      "mod_code": [
        "for ( int i = 1 ; i <= min ( x and y ) ; i ++ )",
        "int fpb ( int x , int y ) ;",
        "if ( n <= 0 )"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        4,
        19
      ],
      "mod_code": [
        "for ( int i = 1 ; i <= min ( x and y ) ; i ++ )",
        "if ( n <= 0 )"
      ],
      "err_line": 4,
      "err_msg": "no matching function for call to ‘min(bool)’"
    },
    {
      "mod_line": [
        13,
        18
      ],
      "mod_code": [
        "n -= fpb [ a ] ;",
        "n -= fpb ( b ) ;"
      ],
      "err_line": 13,
      "err_msg": "invalid operands of types ‘int’ and ‘int(int, int)’ to binary ‘operator-’"
    },
    {
      "mod_line": [
        13,
        18,
        0
      ],
      "mod_code": [
        "n -= fpb [ a ] ;",
        "n -= fpb ( b ) ;",
        "int fpb ( int x , int y ) ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        13,
        18,
        0,
        19
      ],
      "mod_code": [
        "n -= fpb [ a ] ;",
        "n -= fpb ( b ) ;",
        "int fpb ( int x , int y ) ;",
        "if ( n <= 0 )"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        13,
        18,
        19
      ],
      "mod_code": [
        "n -= fpb [ a ] ;",
        "n -= fpb ( b ) ;",
        "if ( n <= 0 )"
      ],
      "err_line": 13,
      "err_msg": "invalid operands of types ‘int’ and ‘int(int, int)’ to binary ‘operator-’"
    },
    {
      "mod_line": [
        13,
        0
      ],
      "mod_code": [
        "n -= fpb [ a ] ;",
        "int fpb ( int x , int y ) ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        13,
        0,
        19
      ],
      "mod_code": [
        "n -= fpb [ a ] ;",
        "int fpb ( int x , int y ) ;",
        "if ( n <= 0 )"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        13,
        19
      ],
      "mod_code": [
        "n -= fpb [ a ] ;",
        "if ( n <= 0 )"
      ],
      "err_line": 13,
      "err_msg": "invalid operands of types ‘int’ and ‘int(int, int)’ to binary ‘operator-’"
    },
    {
      "mod_line": [
        18,
        0
      ],
      "mod_code": [
        "n -= fpb ( b ) ;",
        "int fpb ( int x , int y ) ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        18,
        0,
        19
      ],
      "mod_code": [
        "n -= fpb ( b ) ;",
        "int fpb ( int x , int y ) ;",
        "if ( n <= 0 )"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        18,
        19
      ],
      "mod_code": [
        "n -= fpb ( b ) ;",
        "if ( n <= 0 )"
      ],
      "err_line": 18,
      "err_msg": "too few arguments to function ‘int fpb(int, int)’"
    },
    {
      "mod_line": [
        0,
        19
      ],
      "mod_code": [
        "int fpb ( int x , int y ) ;",
        "if ( n <= 0 )"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    }
  ]
}