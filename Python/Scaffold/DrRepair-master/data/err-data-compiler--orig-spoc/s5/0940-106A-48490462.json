{
  "meta": {
    "index": 940,
    "hitid": "3UEDKCTP9VKL6662GWA3PRCY7F37KT",
    "workerid": "A1APYLD4DUK33J",
    "probid": "106A",
    "subid": "48490462"
  },
  "lines": [
    {
      "line": 0,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 1,
      "text": "declare map from character to character mp",
      "code": "map < char , char > mp ;",
      "indent": 1
    },
    {
      "line": 2,
      "text": "let mp [ ' 6 ' ] be 6",
      "code": "mp [ ' 6 ' ] = 6 ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "let mp [ ' 7 ' ] be 7",
      "code": "mp [ ' 7 ' ] = 7 ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "let mp [ ' 8 ' ] be 8",
      "code": "mp [ ' 8 ' ] = 8 ;",
      "indent": 1
    },
    {
      "line": 5,
      "text": "let mp [ ' 9 ' ] be 9",
      "code": "mp [ ' 9 ' ] = 9 ;",
      "indent": 1
    },
    {
      "line": 6,
      "text": "let mp [ ' T ' ] be 10",
      "code": "mp [ ' T ' ] = 10 ;",
      "indent": 1
    },
    {
      "line": 7,
      "text": "let mp [ ' J ' ] be 11",
      "code": "mp [ ' J ' ] = 11 ;",
      "indent": 1
    },
    {
      "line": 8,
      "text": "let mp [ ' Q ' ] be 12",
      "code": "mp [ ' Q ' ] = 12 ;",
      "indent": 1
    },
    {
      "line": 9,
      "text": "let mp [ ' K ' ] be 13",
      "code": "mp [ ' K ' ] = 13 ;",
      "indent": 1
    },
    {
      "line": 10,
      "text": "let mp [ ' A ' ] be 14",
      "code": "mp [ ' A ' ] = 14 ;",
      "indent": 1
    },
    {
      "line": 11,
      "text": "let strings t , f , s",
      "code": "string t , f , s ;",
      "indent": 1
    },
    {
      "line": 12,
      "text": "read t , f , s",
      "code": "cin >> t >> f >> s ;",
      "indent": 1
    },
    {
      "line": 13,
      "text": "if f [ 1 ] is not s [ 1 ]",
      "code": "if ( f [ 1 ] != s [ 1 ] )",
      "indent": 1
    },
    {
      "line": 14,
      "text": "if f [ 1 ] is t [ 0 ]",
      "code": "if ( f [ 1 ] == t [ 0 ] )",
      "indent": 2
    },
    {
      "line": 15,
      "text": "print \" YES \" , newline",
      "code": "cout << \" YES \" << endl ;",
      "indent": 3
    },
    {
      "line": 16,
      "text": "else",
      "code": "else",
      "indent": 2
    },
    {
      "line": 17,
      "text": "print \" NO \" , newline",
      "code": "cout << \" NO \" << endl ;",
      "indent": 3
    },
    {
      "line": 18,
      "text": "else",
      "code": "else",
      "indent": 1
    },
    {
      "line": 19,
      "text": "if mp [ f [ 0 ] ] is greater than mp [ s [ 0 ] ]",
      "code": "if ( mp [ f [ 0 ] ] > mp [ s [ 0 ] ] )",
      "indent": 2
    },
    {
      "line": 20,
      "text": "print \" YES \" , newline",
      "code": "cout << \" YES \" << endl ;",
      "indent": 3
    },
    {
      "line": 21,
      "text": "else",
      "code": "else",
      "indent": 2
    },
    {
      "line": 22,
      "text": "print \" NO \" , newline",
      "code": "cout << \" NO \" << endl ;",
      "indent": 3
    },
    {
      "line": 23,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 24,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 25,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        1
      ],
      "mod_code": [
        "map < character , char > mp ;"
      ],
      "err_line": 1,
      "err_msg": "‘character’ was not declared in this scope"
    },
    {
      "mod_line": [
        2
      ],
      "mod_code": [
        "char mp [ ' 6 ' ] = 6 ;"
      ],
      "err_line": 2,
      "err_msg": "conflicting declaration ‘char mp [54]’"
    },
    {
      "mod_line": [
        9
      ],
      "mod_code": [
        "mp [ ' K ' ] = 13 ] = 13 ;"
      ],
      "err_line": 9,
      "err_msg": "expected ‘;’ before ‘]’ token"
    },
    {
      "mod_line": [
        11
      ],
      "mod_code": [
        "strings >> f , s ;"
      ],
      "err_line": 11,
      "err_msg": "‘strings’ was not declared in this scope"
    },
    {
      "mod_line": [
        13
      ],
      "mod_code": [
        "if ( f [ 1 ] ] != s [ 1 ] )"
      ],
      "err_line": 13,
      "err_msg": "expected ‘)’ before ‘]’ token"
    },
    {
      "mod_line": [
        14
      ],
      "mod_code": [
        "if ( f [ 1 ] == t )"
      ],
      "err_line": 14,
      "err_msg": "no match for ‘operator==’ (operand types are ‘char’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        19
      ],
      "mod_code": [
        "if ( mp [ f [ 0 ] ] > mp [ s [ 0 ] )"
      ],
      "err_line": 19,
      "err_msg": "expected ‘]’ before ‘)’ token"
    },
    {
      "mod_line": [
        9,
        5
      ],
      "mod_code": [
        "mp [ ' K ' ] = 13 ] = 13 ;",
        "mp [ ' 9 ' ] = ' 9 ' ;"
      ],
      "err_line": 9,
      "err_msg": "expected ‘;’ before ‘]’ token"
    },
    {
      "mod_line": [
        9,
        5,
        1
      ],
      "mod_code": [
        "mp [ ' K ' ] = 13 ] = 13 ;",
        "mp [ ' 9 ' ] = ' 9 ' ;",
        "map < character , char > mp ;"
      ],
      "err_line": 1,
      "err_msg": "‘character’ was not declared in this scope"
    },
    {
      "mod_line": [
        9,
        5,
        1,
        14
      ],
      "mod_code": [
        "mp [ ' K ' ] = 13 ] = 13 ;",
        "mp [ ' 9 ' ] = ' 9 ' ;",
        "map < character , char > mp ;",
        "if ( f [ 1 ] == t )"
      ],
      "err_line": 1,
      "err_msg": "‘character’ was not declared in this scope"
    },
    {
      "mod_line": [
        9,
        5,
        1,
        20
      ],
      "mod_code": [
        "mp [ ' K ' ] = 13 ] = 13 ;",
        "mp [ ' 9 ' ] = ' 9 ' ;",
        "map < character , char > mp ;",
        "cout << \" YES\\n \" << endl ;"
      ],
      "err_line": 1,
      "err_msg": "‘character’ was not declared in this scope"
    },
    {
      "mod_line": [
        9,
        5,
        1,
        13
      ],
      "mod_code": [
        "mp [ ' K ' ] = 13 ] = 13 ;",
        "mp [ ' 9 ' ] = ' 9 ' ;",
        "map < character , char > mp ;",
        "if ( f [ 1 ] ] != s [ 1 ] )"
      ],
      "err_line": 1,
      "err_msg": "‘character’ was not declared in this scope"
    },
    {
      "mod_line": [
        9,
        5,
        14
      ],
      "mod_code": [
        "mp [ ' K ' ] = 13 ] = 13 ;",
        "mp [ ' 9 ' ] = ' 9 ' ;",
        "if ( f [ 1 ] == t )"
      ],
      "err_line": 9,
      "err_msg": "expected ‘;’ before ‘]’ token"
    },
    {
      "mod_line": [
        9,
        5,
        14,
        20
      ],
      "mod_code": [
        "mp [ ' K ' ] = 13 ] = 13 ;",
        "mp [ ' 9 ' ] = ' 9 ' ;",
        "if ( f [ 1 ] == t )",
        "cout << \" YES\\n \" << endl ;"
      ],
      "err_line": 9,
      "err_msg": "expected ‘;’ before ‘]’ token"
    },
    {
      "mod_line": [
        9,
        5,
        14,
        13
      ],
      "mod_code": [
        "mp [ ' K ' ] = 13 ] = 13 ;",
        "mp [ ' 9 ' ] = ' 9 ' ;",
        "if ( f [ 1 ] == t )",
        "if ( f [ 1 ] ] != s [ 1 ] )"
      ],
      "err_line": 9,
      "err_msg": "expected ‘;’ before ‘]’ token"
    },
    {
      "mod_line": [
        9,
        5,
        20
      ],
      "mod_code": [
        "mp [ ' K ' ] = 13 ] = 13 ;",
        "mp [ ' 9 ' ] = ' 9 ' ;",
        "cout << \" YES\\n \" << endl ;"
      ],
      "err_line": 9,
      "err_msg": "expected ‘;’ before ‘]’ token"
    },
    {
      "mod_line": [
        9,
        5,
        20,
        13
      ],
      "mod_code": [
        "mp [ ' K ' ] = 13 ] = 13 ;",
        "mp [ ' 9 ' ] = ' 9 ' ;",
        "cout << \" YES\\n \" << endl ;",
        "if ( f [ 1 ] ] != s [ 1 ] )"
      ],
      "err_line": 9,
      "err_msg": "expected ‘;’ before ‘]’ token"
    },
    {
      "mod_line": [
        9,
        5,
        13
      ],
      "mod_code": [
        "mp [ ' K ' ] = 13 ] = 13 ;",
        "mp [ ' 9 ' ] = ' 9 ' ;",
        "if ( f [ 1 ] ] != s [ 1 ] )"
      ],
      "err_line": 9,
      "err_msg": "expected ‘;’ before ‘]’ token"
    },
    {
      "mod_line": [
        9,
        1
      ],
      "mod_code": [
        "mp [ ' K ' ] = 13 ] = 13 ;",
        "map < character , char > mp ;"
      ],
      "err_line": 1,
      "err_msg": "‘character’ was not declared in this scope"
    },
    {
      "mod_line": [
        9,
        1,
        14
      ],
      "mod_code": [
        "mp [ ' K ' ] = 13 ] = 13 ;",
        "map < character , char > mp ;",
        "if ( f [ 1 ] == t )"
      ],
      "err_line": 1,
      "err_msg": "‘character’ was not declared in this scope"
    },
    {
      "mod_line": [
        9,
        1,
        14,
        20
      ],
      "mod_code": [
        "mp [ ' K ' ] = 13 ] = 13 ;",
        "map < character , char > mp ;",
        "if ( f [ 1 ] == t )",
        "cout << \" YES\\n \" << endl ;"
      ],
      "err_line": 1,
      "err_msg": "‘character’ was not declared in this scope"
    },
    {
      "mod_line": [
        9,
        1,
        14,
        13
      ],
      "mod_code": [
        "mp [ ' K ' ] = 13 ] = 13 ;",
        "map < character , char > mp ;",
        "if ( f [ 1 ] == t )",
        "if ( f [ 1 ] ] != s [ 1 ] )"
      ],
      "err_line": 1,
      "err_msg": "‘character’ was not declared in this scope"
    },
    {
      "mod_line": [
        9,
        1,
        20
      ],
      "mod_code": [
        "mp [ ' K ' ] = 13 ] = 13 ;",
        "map < character , char > mp ;",
        "cout << \" YES\\n \" << endl ;"
      ],
      "err_line": 1,
      "err_msg": "‘character’ was not declared in this scope"
    },
    {
      "mod_line": [
        9,
        1,
        20,
        13
      ],
      "mod_code": [
        "mp [ ' K ' ] = 13 ] = 13 ;",
        "map < character , char > mp ;",
        "cout << \" YES\\n \" << endl ;",
        "if ( f [ 1 ] ] != s [ 1 ] )"
      ],
      "err_line": 1,
      "err_msg": "‘character’ was not declared in this scope"
    },
    {
      "mod_line": [
        9,
        1,
        13
      ],
      "mod_code": [
        "mp [ ' K ' ] = 13 ] = 13 ;",
        "map < character , char > mp ;",
        "if ( f [ 1 ] ] != s [ 1 ] )"
      ],
      "err_line": 1,
      "err_msg": "‘character’ was not declared in this scope"
    },
    {
      "mod_line": [
        9,
        14
      ],
      "mod_code": [
        "mp [ ' K ' ] = 13 ] = 13 ;",
        "if ( f [ 1 ] == t )"
      ],
      "err_line": 9,
      "err_msg": "expected ‘;’ before ‘]’ token"
    },
    {
      "mod_line": [
        9,
        14,
        20
      ],
      "mod_code": [
        "mp [ ' K ' ] = 13 ] = 13 ;",
        "if ( f [ 1 ] == t )",
        "cout << \" YES\\n \" << endl ;"
      ],
      "err_line": 9,
      "err_msg": "expected ‘;’ before ‘]’ token"
    },
    {
      "mod_line": [
        9,
        14,
        20,
        13
      ],
      "mod_code": [
        "mp [ ' K ' ] = 13 ] = 13 ;",
        "if ( f [ 1 ] == t )",
        "cout << \" YES\\n \" << endl ;",
        "if ( f [ 1 ] ] != s [ 1 ] )"
      ],
      "err_line": 9,
      "err_msg": "expected ‘;’ before ‘]’ token"
    },
    {
      "mod_line": [
        9,
        14,
        13
      ],
      "mod_code": [
        "mp [ ' K ' ] = 13 ] = 13 ;",
        "if ( f [ 1 ] == t )",
        "if ( f [ 1 ] ] != s [ 1 ] )"
      ],
      "err_line": 9,
      "err_msg": "expected ‘;’ before ‘]’ token"
    },
    {
      "mod_line": [
        9,
        20
      ],
      "mod_code": [
        "mp [ ' K ' ] = 13 ] = 13 ;",
        "cout << \" YES\\n \" << endl ;"
      ],
      "err_line": 9,
      "err_msg": "expected ‘;’ before ‘]’ token"
    },
    {
      "mod_line": [
        9,
        20,
        13
      ],
      "mod_code": [
        "mp [ ' K ' ] = 13 ] = 13 ;",
        "cout << \" YES\\n \" << endl ;",
        "if ( f [ 1 ] ] != s [ 1 ] )"
      ],
      "err_line": 9,
      "err_msg": "expected ‘;’ before ‘]’ token"
    },
    {
      "mod_line": [
        9,
        13
      ],
      "mod_code": [
        "mp [ ' K ' ] = 13 ] = 13 ;",
        "if ( f [ 1 ] ] != s [ 1 ] )"
      ],
      "err_line": 9,
      "err_msg": "expected ‘;’ before ‘]’ token"
    },
    {
      "mod_line": [
        5,
        1
      ],
      "mod_code": [
        "mp [ ' 9 ' ] = ' 9 ' ;",
        "map < character , char > mp ;"
      ],
      "err_line": 1,
      "err_msg": "‘character’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        1,
        14
      ],
      "mod_code": [
        "mp [ ' 9 ' ] = ' 9 ' ;",
        "map < character , char > mp ;",
        "if ( f [ 1 ] == t )"
      ],
      "err_line": 1,
      "err_msg": "‘character’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        1,
        14,
        20
      ],
      "mod_code": [
        "mp [ ' 9 ' ] = ' 9 ' ;",
        "map < character , char > mp ;",
        "if ( f [ 1 ] == t )",
        "cout << \" YES\\n \" << endl ;"
      ],
      "err_line": 1,
      "err_msg": "‘character’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        1,
        14,
        13
      ],
      "mod_code": [
        "mp [ ' 9 ' ] = ' 9 ' ;",
        "map < character , char > mp ;",
        "if ( f [ 1 ] == t )",
        "if ( f [ 1 ] ] != s [ 1 ] )"
      ],
      "err_line": 1,
      "err_msg": "‘character’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        1,
        20
      ],
      "mod_code": [
        "mp [ ' 9 ' ] = ' 9 ' ;",
        "map < character , char > mp ;",
        "cout << \" YES\\n \" << endl ;"
      ],
      "err_line": 1,
      "err_msg": "‘character’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        1,
        20,
        13
      ],
      "mod_code": [
        "mp [ ' 9 ' ] = ' 9 ' ;",
        "map < character , char > mp ;",
        "cout << \" YES\\n \" << endl ;",
        "if ( f [ 1 ] ] != s [ 1 ] )"
      ],
      "err_line": 1,
      "err_msg": "‘character’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        1,
        13
      ],
      "mod_code": [
        "mp [ ' 9 ' ] = ' 9 ' ;",
        "map < character , char > mp ;",
        "if ( f [ 1 ] ] != s [ 1 ] )"
      ],
      "err_line": 1,
      "err_msg": "‘character’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        14
      ],
      "mod_code": [
        "mp [ ' 9 ' ] = ' 9 ' ;",
        "if ( f [ 1 ] == t )"
      ],
      "err_line": 14,
      "err_msg": "no match for ‘operator==’ (operand types are ‘char’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        5,
        14,
        20
      ],
      "mod_code": [
        "mp [ ' 9 ' ] = ' 9 ' ;",
        "if ( f [ 1 ] == t )",
        "cout << \" YES\\n \" << endl ;"
      ],
      "err_line": 14,
      "err_msg": "no match for ‘operator==’ (operand types are ‘char’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        5,
        14,
        20,
        13
      ],
      "mod_code": [
        "mp [ ' 9 ' ] = ' 9 ' ;",
        "if ( f [ 1 ] == t )",
        "cout << \" YES\\n \" << endl ;",
        "if ( f [ 1 ] ] != s [ 1 ] )"
      ],
      "err_line": 13,
      "err_msg": "expected ‘)’ before ‘]’ token"
    },
    {
      "mod_line": [
        5,
        14,
        13
      ],
      "mod_code": [
        "mp [ ' 9 ' ] = ' 9 ' ;",
        "if ( f [ 1 ] == t )",
        "if ( f [ 1 ] ] != s [ 1 ] )"
      ],
      "err_line": 13,
      "err_msg": "expected ‘)’ before ‘]’ token"
    },
    {
      "mod_line": [
        5,
        20,
        13
      ],
      "mod_code": [
        "mp [ ' 9 ' ] = ' 9 ' ;",
        "cout << \" YES\\n \" << endl ;",
        "if ( f [ 1 ] ] != s [ 1 ] )"
      ],
      "err_line": 13,
      "err_msg": "expected ‘)’ before ‘]’ token"
    },
    {
      "mod_line": [
        5,
        13
      ],
      "mod_code": [
        "mp [ ' 9 ' ] = ' 9 ' ;",
        "if ( f [ 1 ] ] != s [ 1 ] )"
      ],
      "err_line": 13,
      "err_msg": "expected ‘)’ before ‘]’ token"
    },
    {
      "mod_line": [
        1,
        14
      ],
      "mod_code": [
        "map < character , char > mp ;",
        "if ( f [ 1 ] == t )"
      ],
      "err_line": 1,
      "err_msg": "‘character’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        14,
        20
      ],
      "mod_code": [
        "map < character , char > mp ;",
        "if ( f [ 1 ] == t )",
        "cout << \" YES\\n \" << endl ;"
      ],
      "err_line": 1,
      "err_msg": "‘character’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        14,
        20,
        13
      ],
      "mod_code": [
        "map < character , char > mp ;",
        "if ( f [ 1 ] == t )",
        "cout << \" YES\\n \" << endl ;",
        "if ( f [ 1 ] ] != s [ 1 ] )"
      ],
      "err_line": 1,
      "err_msg": "‘character’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        14,
        13
      ],
      "mod_code": [
        "map < character , char > mp ;",
        "if ( f [ 1 ] == t )",
        "if ( f [ 1 ] ] != s [ 1 ] )"
      ],
      "err_line": 1,
      "err_msg": "‘character’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        20
      ],
      "mod_code": [
        "map < character , char > mp ;",
        "cout << \" YES\\n \" << endl ;"
      ],
      "err_line": 1,
      "err_msg": "‘character’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        20,
        13
      ],
      "mod_code": [
        "map < character , char > mp ;",
        "cout << \" YES\\n \" << endl ;",
        "if ( f [ 1 ] ] != s [ 1 ] )"
      ],
      "err_line": 1,
      "err_msg": "‘character’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        13
      ],
      "mod_code": [
        "map < character , char > mp ;",
        "if ( f [ 1 ] ] != s [ 1 ] )"
      ],
      "err_line": 1,
      "err_msg": "‘character’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        20
      ],
      "mod_code": [
        "if ( f [ 1 ] == t )",
        "cout << \" YES\\n \" << endl ;"
      ],
      "err_line": 14,
      "err_msg": "no match for ‘operator==’ (operand types are ‘char’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        14,
        20,
        13
      ],
      "mod_code": [
        "if ( f [ 1 ] == t )",
        "cout << \" YES\\n \" << endl ;",
        "if ( f [ 1 ] ] != s [ 1 ] )"
      ],
      "err_line": 13,
      "err_msg": "expected ‘)’ before ‘]’ token"
    },
    {
      "mod_line": [
        14,
        13
      ],
      "mod_code": [
        "if ( f [ 1 ] == t )",
        "if ( f [ 1 ] ] != s [ 1 ] )"
      ],
      "err_line": 13,
      "err_msg": "expected ‘)’ before ‘]’ token"
    },
    {
      "mod_line": [
        20,
        13
      ],
      "mod_code": [
        "cout << \" YES\\n \" << endl ;",
        "if ( f [ 1 ] ] != s [ 1 ] )"
      ],
      "err_line": 13,
      "err_msg": "expected ‘)’ before ‘]’ token"
    }
  ]
}