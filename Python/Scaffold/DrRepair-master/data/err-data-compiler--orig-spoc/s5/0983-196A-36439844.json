{
  "meta": {
    "index": 983,
    "hitid": "36818Z1KV37XTAWT2TUOIWXMWEQ3AX",
    "workerid": "A1APYLD4DUK33J",
    "probid": "196A",
    "subid": "36439844"
  },
  "lines": [
    {
      "line": 0,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 1,
      "text": "create integer i with i = 0",
      "code": "int i = 0 ;",
      "indent": 1
    },
    {
      "line": 2,
      "text": "create character array s with size 200100 , create character c",
      "code": "char s [ 200100 ] , c ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "while c is read character is not ' \\ n '",
      "code": "while ( ( c = getchar ( ) ) != ' \\n ' )",
      "indent": 1
    },
    {
      "line": 4,
      "text": "while i and s [ i - 1 ] is less than c",
      "code": "while ( i && s [ i - 1 ] < c )",
      "indent": 2
    },
    {
      "line": 5,
      "text": "set s [ i ] to 0",
      "code": "s [ i ] = 0 ;",
      "indent": 3
    },
    {
      "line": 6,
      "text": "increment i",
      "code": "i -- ;",
      "indent": 3
    },
    {
      "line": 7,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 8,
      "text": "set s [ increment i ] to c",
      "code": "s [ i ++ ] = c ;",
      "indent": 2
    },
    {
      "line": 9,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 10,
      "text": "for j = 0 to i exclusive print s [ j ]",
      "code": "for ( int j = 0 ; j < i ; j ++ ) cout << s [ j ] ;",
      "indent": 1
    },
    {
      "line": 11,
      "text": "print newline",
      "code": "cout << endl ;",
      "indent": 1
    },
    {
      "line": 12,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 13,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        4
      ],
      "mod_code": [
        "while ( i [ i - 1 ] < c )"
      ],
      "err_line": 4,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        2
      ],
      "mod_code": [
        "char s [ 200100 ] ;"
      ],
      "err_line": 3,
      "err_msg": "‘c’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        4
      ],
      "mod_code": [
        "while ( c == ' \\n ' )",
        "while ( i [ i - 1 ] < c )"
      ],
      "err_line": 4,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        3,
        4,
        6
      ],
      "mod_code": [
        "while ( c == ' \\n ' )",
        "while ( i [ i - 1 ] < c )",
        "i ++ ;"
      ],
      "err_line": 4,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        3,
        4,
        6,
        8
      ],
      "mod_code": [
        "while ( c == ' \\n ' )",
        "while ( i [ i - 1 ] < c )",
        "i ++ ;",
        "s [ ++ i ] = c ;"
      ],
      "err_line": 4,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        3,
        4,
        8
      ],
      "mod_code": [
        "while ( c == ' \\n ' )",
        "while ( i [ i - 1 ] < c )",
        "s [ ++ i ] = c ;"
      ],
      "err_line": 4,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        3,
        4,
        8,
        6
      ],
      "mod_code": [
        "while ( c == ' \\n ' )",
        "while ( i [ i - 1 ] < c )",
        "s [ ++ i ] = c ;",
        "++ i ;"
      ],
      "err_line": 4,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        3,
        4,
        6
      ],
      "mod_code": [
        "while ( c == ' \\n ' )",
        "while ( i [ i - 1 ] < c )",
        "++ i ;"
      ],
      "err_line": 4,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        4,
        6
      ],
      "mod_code": [
        "while ( i [ i - 1 ] < c )",
        "i ++ ;"
      ],
      "err_line": 4,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        4,
        6,
        8
      ],
      "mod_code": [
        "while ( i [ i - 1 ] < c )",
        "i ++ ;",
        "s [ ++ i ] = c ;"
      ],
      "err_line": 4,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        4,
        6,
        8,
        3
      ],
      "mod_code": [
        "while ( i [ i - 1 ] < c )",
        "i ++ ;",
        "s [ ++ i ] = c ;",
        "while ( c >= ' \\n ' )"
      ],
      "err_line": 4,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        4,
        6,
        3
      ],
      "mod_code": [
        "while ( i [ i - 1 ] < c )",
        "i ++ ;",
        "while ( c >= ' \\n ' )"
      ],
      "err_line": 4,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        4,
        8
      ],
      "mod_code": [
        "while ( i [ i - 1 ] < c )",
        "s [ ++ i ] = c ;"
      ],
      "err_line": 4,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        4,
        8,
        6
      ],
      "mod_code": [
        "while ( i [ i - 1 ] < c )",
        "s [ ++ i ] = c ;",
        "++ i ;"
      ],
      "err_line": 4,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        4,
        8,
        6,
        3
      ],
      "mod_code": [
        "while ( i [ i - 1 ] < c )",
        "s [ ++ i ] = c ;",
        "++ i ;",
        "while ( c >= ' \\n ' )"
      ],
      "err_line": 4,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        4,
        8,
        3
      ],
      "mod_code": [
        "while ( i [ i - 1 ] < c )",
        "s [ ++ i ] = c ;",
        "while ( c >= ' \\n ' )"
      ],
      "err_line": 4,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        4,
        6
      ],
      "mod_code": [
        "while ( i [ i - 1 ] < c )",
        "++ i ;"
      ],
      "err_line": 4,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        4,
        6,
        3
      ],
      "mod_code": [
        "while ( i [ i - 1 ] < c )",
        "++ i ;",
        "while ( c >= ' \\n ' )"
      ],
      "err_line": 4,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        4,
        3
      ],
      "mod_code": [
        "while ( i [ i - 1 ] < c )",
        "while ( c >= ' \\n ' )"
      ],
      "err_line": 4,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    }
  ]
}