{
  "meta": {
    "index": 2635,
    "hitid": "3M93N4X8HKHCEKKCME82J38HF4LJSY",
    "workerid": "A1APYLD4DUK33J",
    "probid": "98A",
    "subid": "39959725"
  },
  "lines": [
    {
      "line": 0,
      "text": "declare rotate1 with string address t as argument , returning void",
      "code": "void rotate1 ( string & t )",
      "indent": 0
    },
    {
      "line": 1,
      "text": "declare character temp = t [ 1 ]",
      "code": "char temp = t [ 1 ] ;",
      "indent": 1
    },
    {
      "line": 2,
      "text": "let t [ 1 ] be t [ 0 ]",
      "code": "t [ 1 ] = t [ 0 ] ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "let t [ 0 ] be t [ 3 ]",
      "code": "t [ 0 ] = t [ 3 ] ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "let t [ 3 ] be t [ 2 ]",
      "code": "t [ 3 ] = t [ 2 ] ;",
      "indent": 1
    },
    {
      "line": 5,
      "text": "let t [ 2 ] be temp",
      "code": "t [ 2 ] = temp ;",
      "indent": 1
    },
    {
      "line": 6,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    },
    {
      "line": 7,
      "text": "declare rotate2 with string address t as argument",
      "code": "void rotate2 ( string & t )",
      "indent": 0
    },
    {
      "line": 8,
      "text": "declare character temp = t [ 1 ]",
      "code": "char temp = t [ 1 ] ;",
      "indent": 1
    },
    {
      "line": 9,
      "text": "let t [ 1 ] be t [ 4 ]",
      "code": "t [ 1 ] = t [ 4 ] ;",
      "indent": 1
    },
    {
      "line": 10,
      "text": "let t [ 4 ] be t [ 3 ]",
      "code": "t [ 4 ] = t [ 3 ] ;",
      "indent": 1
    },
    {
      "line": 11,
      "text": "let t [ 3 ] be t [ 5 ]",
      "code": "t [ 3 ] = t [ 5 ] ;",
      "indent": 1
    },
    {
      "line": 12,
      "text": "let t [ 5 ] be temp",
      "code": "t [ 5 ] = temp ;",
      "indent": 1
    },
    {
      "line": 13,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    },
    {
      "line": 14,
      "text": "declare rotate 3 with string address t as argument , returning void",
      "code": "void rotate3 ( string & t )",
      "indent": 0
    },
    {
      "line": 15,
      "text": "declare character temp = t [ 0 ]",
      "code": "char temp = t [ 0 ] ;",
      "indent": 1
    },
    {
      "line": 16,
      "text": "let t [ 0 ] be [ 4 ]",
      "code": "t [ 0 ] = t [ 4 ] ;",
      "indent": 1
    },
    {
      "line": 17,
      "text": "let t [ 4 ] be t [ 2 ]",
      "code": "t [ 4 ] = t [ 2 ] ;",
      "indent": 1
    },
    {
      "line": 18,
      "text": "let t [ 2 ] be t [ 5 ]",
      "code": "t [ 2 ] = t [ 5 ] ;",
      "indent": 1
    },
    {
      "line": 19,
      "text": "let t [ 5 ] be temp",
      "code": "t [ 5 ] = temp ;",
      "indent": 1
    },
    {
      "line": 20,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    },
    {
      "line": 21,
      "text": "declare norm with string s as argument , returning string",
      "code": "string norm ( string s )",
      "indent": 0
    },
    {
      "line": 22,
      "text": "declare string res = s",
      "code": "string res = s ;",
      "indent": 1
    },
    {
      "line": 23,
      "text": "for i = 0 to 2 exclusive",
      "code": "for ( int ( i ) = 0 ; ( i ) < ( 2 ) ; ++ ( i ) )",
      "indent": 1
    },
    {
      "line": 24,
      "text": "fo rj = 0 to 4 exclusive",
      "code": "for ( int ( j ) = 0 ; ( j ) < ( 4 ) ; ++ ( j ) )",
      "indent": 2
    },
    {
      "line": 25,
      "text": "for k = 0 to 4 exclusive",
      "code": "for ( int ( k ) = 0 ; ( k ) < ( 4 ) ; ++ ( k ) )",
      "indent": 3
    },
    {
      "line": 26,
      "text": "run rotate1 ( s )",
      "code": "rotate1 ( s ) ;",
      "indent": 4
    },
    {
      "line": 27,
      "text": "let res be minimum of res and s",
      "code": "res = min ( res , s ) ;",
      "indent": 4
    },
    {
      "line": 28,
      "text": "DUMMY",
      "code": "}",
      "indent": 3
    },
    {
      "line": 29,
      "text": "run rotate3 ( s )",
      "code": "rotate3 ( s ) ;",
      "indent": 3
    },
    {
      "line": 30,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 31,
      "text": "run rotate1 ( s )",
      "code": "rotate1 ( s ) ;",
      "indent": 2
    },
    {
      "line": 32,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 33,
      "text": "return res from function",
      "code": "return res ;",
      "indent": 1
    },
    {
      "line": 34,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    },
    {
      "line": 35,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 36,
      "text": "declare string s",
      "code": "string s ;",
      "indent": 1
    },
    {
      "line": 37,
      "text": "read s",
      "code": "cin >> s ;",
      "indent": 1
    },
    {
      "line": 38,
      "text": "sort from beginning of s to end of s",
      "code": "sort ( s . begin ( ) , s . end ( ) ) ;",
      "indent": 1
    },
    {
      "line": 39,
      "text": "declare string set S",
      "code": "set < string > S ;",
      "indent": 1
    },
    {
      "line": 40,
      "text": "start loop ( insert result of run norm ( s ) into S ) while ( rearrange from beginning of s to end of s lexicographically is true )",
      "code": "do { S . insert ( norm ( s ) ) ; } while ( next_permutation ( s . begin ( ) , s . end ( ) ) ) ;",
      "indent": 1
    },
    {
      "line": 41,
      "text": "print size of S , newline",
      "code": "cout << S . size ( ) << endl ;",
      "indent": 1
    },
    {
      "line": 42,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        14
      ],
      "mod_code": [
        "void rotate ( string & t )"
      ],
      "err_line": 29,
      "err_msg": "‘rotate3’ was not declared in this scope"
    },
    {
      "mod_line": [
        16
      ],
      "mod_code": [
        "t [ 0 ] = 4 [ 4 ] ;"
      ],
      "err_line": 16,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        40
      ],
      "mod_code": [
        "do"
      ],
      "err_line": 42,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        0
      ],
      "mod_code": [
        "void rotate1 ( string & t ) ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        1
      ],
      "mod_code": [
        "character = t [ 1 ] ;"
      ],
      "err_line": 1,
      "err_msg": "‘character’ was not declared in this scope"
    },
    {
      "mod_line": [
        2
      ],
      "mod_code": [
        "char t [ 1 ] = t [ 0 ] ;"
      ],
      "err_line": 2,
      "err_msg": "declaration of ‘char t [1]’ shadows a parameter"
    },
    {
      "mod_line": [
        3
      ],
      "mod_code": [
        "char t [ 0 ] = t [ 3 ] ;"
      ],
      "err_line": 3,
      "err_msg": "declaration of ‘char t [0]’ shadows a parameter"
    },
    {
      "mod_line": [
        4
      ],
      "mod_code": [
        "char t [ 3 ] = t [ 2 ] ;"
      ],
      "err_line": 4,
      "err_msg": "declaration of ‘char t [3]’ shadows a parameter"
    },
    {
      "mod_line": [
        8
      ],
      "mod_code": [
        "character = t [ 1 ] ;"
      ],
      "err_line": 8,
      "err_msg": "‘character’ was not declared in this scope"
    },
    {
      "mod_line": [
        9
      ],
      "mod_code": [
        "char t [ 1 ] = t [ 4 ] ;"
      ],
      "err_line": 9,
      "err_msg": "declaration of ‘char t [1]’ shadows a parameter"
    },
    {
      "mod_line": [
        10
      ],
      "mod_code": [
        "char t [ 4 ] = t [ 3 ] ;"
      ],
      "err_line": 10,
      "err_msg": "declaration of ‘char t [4]’ shadows a parameter"
    },
    {
      "mod_line": [
        11
      ],
      "mod_code": [
        "char t [ 3 ] = t [ 5 ] ;"
      ],
      "err_line": 11,
      "err_msg": "declaration of ‘char t [3]’ shadows a parameter"
    },
    {
      "mod_line": [
        12
      ],
      "mod_code": [
        "t [ 5 ] = \" temp \" ;"
      ],
      "err_line": 12,
      "err_msg": "invalid conversion from ‘const char*’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        14
      ],
      "mod_code": [
        "void rotate ( string & t ) ;"
      ],
      "err_line": 15,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        15
      ],
      "mod_code": [
        "character = t [ 0 ] ;"
      ],
      "err_line": 15,
      "err_msg": "‘character’ was not declared in this scope"
    },
    {
      "mod_line": [
        17
      ],
      "mod_code": [
        "char t [ 4 ] = t [ 2 ] ;"
      ],
      "err_line": 17,
      "err_msg": "declaration of ‘char t [4]’ shadows a parameter"
    },
    {
      "mod_line": [
        19
      ],
      "mod_code": [
        "t [ 5 ] = \" temp \" ;"
      ],
      "err_line": 19,
      "err_msg": "invalid conversion from ‘const char*’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        21
      ],
      "mod_code": [
        "string norm ( string s ) ;"
      ],
      "err_line": 22,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        22
      ],
      "mod_code": [
        "string res = 1 ;"
      ],
      "err_line": 22,
      "err_msg": "conversion from ‘int’ to non-scalar type ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ requested"
    },
    {
      "mod_line": [
        23
      ],
      "mod_code": [
        "for ( i = 0 ; i < 2 ; i ++ )"
      ],
      "err_line": 23,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        25
      ],
      "mod_code": [
        "for ( k = 0 ; k < 4 ; k ++ )"
      ],
      "err_line": 25,
      "err_msg": "‘k’ was not declared in this scope"
    },
    {
      "mod_line": [
        26
      ],
      "mod_code": [
        "void rotate1 ( s ) ;"
      ],
      "err_line": 26,
      "err_msg": "variable or field ‘rotate1’ declared void"
    },
    {
      "mod_line": [
        27
      ],
      "mod_code": [
        "int res = min ( res , s ) ;"
      ],
      "err_line": 27,
      "err_msg": "no matching function for call to ‘min(int&, std::__cxx11::string&)’"
    },
    {
      "mod_line": [
        29
      ],
      "mod_code": [
        "void rotate3 ( s ) ;"
      ],
      "err_line": 29,
      "err_msg": "variable or field ‘rotate3’ declared void"
    },
    {
      "mod_line": [
        31
      ],
      "mod_code": [
        "void rotate1 ( s ) ;"
      ],
      "err_line": 31,
      "err_msg": "variable or field ‘rotate1’ declared void"
    },
    {
      "mod_line": [
        36
      ],
      "mod_code": [
        "string n ;"
      ],
      "err_line": 37,
      "err_msg": "‘s’ was not declared in this scope"
    },
    {
      "mod_line": [
        39
      ],
      "mod_code": [
        "set < string > :: S ;"
      ],
      "err_line": 39,
      "err_msg": "‘S’ is not a member of ‘std::set<std::__cxx11::basic_string<char> >’"
    },
    {
      "mod_line": [
        40
      ],
      "mod_code": [
        "while ( s . begin ( ) ) while ( s . begin ( ) , s . end ( ) ) ;"
      ],
      "err_line": 40,
      "err_msg": "could not convert ‘s.std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::begin<char, std::char_traits<char>, std::allocator<char> >()’ from ‘std::__cxx11::basic_string<char>::iterator {aka __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> >}’ to ‘bool’"
    },
    {
      "mod_line": [
        14,
        16
      ],
      "mod_code": [
        "void rotate ( string & t )",
        "t [ 0 ] = 4 [ 4 ] ;"
      ],
      "err_line": 16,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        14,
        16,
        40
      ],
      "mod_code": [
        "void rotate ( string & t )",
        "t [ 0 ] = 4 [ 4 ] ;",
        "do"
      ],
      "err_line": 16,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        14,
        16,
        40,
        19
      ],
      "mod_code": [
        "void rotate ( string & t )",
        "t [ 0 ] = 4 [ 4 ] ;",
        "do",
        "t [ 5 ] = \" temp \" ;"
      ],
      "err_line": 16,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        14,
        16,
        40,
        15
      ],
      "mod_code": [
        "void rotate ( string & t )",
        "t [ 0 ] = 4 [ 4 ] ;",
        "do",
        "character = t [ 0 ] ;"
      ],
      "err_line": 15,
      "err_msg": "‘character’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        16,
        40,
        23
      ],
      "mod_code": [
        "void rotate ( string & t )",
        "t [ 0 ] = 4 [ 4 ] ;",
        "do",
        "for ( i = 0 ; i < 2 ; i ++ )"
      ],
      "err_line": 16,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        14,
        16,
        19
      ],
      "mod_code": [
        "void rotate ( string & t )",
        "t [ 0 ] = 4 [ 4 ] ;",
        "t [ 5 ] = \" temp \" ;"
      ],
      "err_line": 16,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        14,
        16,
        19,
        15
      ],
      "mod_code": [
        "void rotate ( string & t )",
        "t [ 0 ] = 4 [ 4 ] ;",
        "t [ 5 ] = \" temp \" ;",
        "character = t [ 0 ] ;"
      ],
      "err_line": 15,
      "err_msg": "‘character’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        16,
        19,
        23
      ],
      "mod_code": [
        "void rotate ( string & t )",
        "t [ 0 ] = 4 [ 4 ] ;",
        "t [ 5 ] = \" temp \" ;",
        "for ( i = 0 ; i < 2 ; i ++ )"
      ],
      "err_line": 16,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        14,
        16,
        15
      ],
      "mod_code": [
        "void rotate ( string & t )",
        "t [ 0 ] = 4 [ 4 ] ;",
        "character = t [ 0 ] ;"
      ],
      "err_line": 15,
      "err_msg": "‘character’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        16,
        15,
        23
      ],
      "mod_code": [
        "void rotate ( string & t )",
        "t [ 0 ] = 4 [ 4 ] ;",
        "character = t [ 0 ] ;",
        "for ( i = 0 ; i < 2 ; i ++ )"
      ],
      "err_line": 15,
      "err_msg": "‘character’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        16,
        23
      ],
      "mod_code": [
        "void rotate ( string & t )",
        "t [ 0 ] = 4 [ 4 ] ;",
        "for ( i = 0 ; i < 2 ; i ++ )"
      ],
      "err_line": 16,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        14,
        40
      ],
      "mod_code": [
        "void rotate ( string & t )",
        "do"
      ],
      "err_line": 29,
      "err_msg": "‘rotate3’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        40,
        19
      ],
      "mod_code": [
        "void rotate ( string & t )",
        "do",
        "t [ 5 ] = \" temp \" ;"
      ],
      "err_line": 19,
      "err_msg": "invalid conversion from ‘const char*’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        14,
        40,
        19,
        15
      ],
      "mod_code": [
        "void rotate ( string & t )",
        "do",
        "t [ 5 ] = \" temp \" ;",
        "character = t [ 0 ] ;"
      ],
      "err_line": 15,
      "err_msg": "‘character’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        40,
        19,
        23
      ],
      "mod_code": [
        "void rotate ( string & t )",
        "do",
        "t [ 5 ] = \" temp \" ;",
        "for ( i = 0 ; i < 2 ; i ++ )"
      ],
      "err_line": 19,
      "err_msg": "invalid conversion from ‘const char*’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        14,
        40,
        15
      ],
      "mod_code": [
        "void rotate ( string & t )",
        "do",
        "character = t [ 0 ] ;"
      ],
      "err_line": 15,
      "err_msg": "‘character’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        40,
        15,
        23
      ],
      "mod_code": [
        "void rotate ( string & t )",
        "do",
        "character = t [ 0 ] ;",
        "for ( i = 0 ; i < 2 ; i ++ )"
      ],
      "err_line": 15,
      "err_msg": "‘character’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        40,
        23
      ],
      "mod_code": [
        "void rotate ( string & t )",
        "do",
        "for ( i = 0 ; i < 2 ; i ++ )"
      ],
      "err_line": 23,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        19
      ],
      "mod_code": [
        "void rotate ( string & t )",
        "t [ 5 ] = \" temp \" ;"
      ],
      "err_line": 19,
      "err_msg": "invalid conversion from ‘const char*’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        14,
        19,
        15
      ],
      "mod_code": [
        "void rotate ( string & t )",
        "t [ 5 ] = \" temp \" ;",
        "character = t [ 0 ] ;"
      ],
      "err_line": 15,
      "err_msg": "‘character’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        19,
        15,
        23
      ],
      "mod_code": [
        "void rotate ( string & t )",
        "t [ 5 ] = \" temp \" ;",
        "character = t [ 0 ] ;",
        "for ( i = 0 ; i < 2 ; i ++ )"
      ],
      "err_line": 15,
      "err_msg": "‘character’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        19,
        23
      ],
      "mod_code": [
        "void rotate ( string & t )",
        "t [ 5 ] = \" temp \" ;",
        "for ( i = 0 ; i < 2 ; i ++ )"
      ],
      "err_line": 19,
      "err_msg": "invalid conversion from ‘const char*’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        14,
        15
      ],
      "mod_code": [
        "void rotate ( string & t )",
        "character = t [ 0 ] ;"
      ],
      "err_line": 15,
      "err_msg": "‘character’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        15,
        23
      ],
      "mod_code": [
        "void rotate ( string & t )",
        "character = t [ 0 ] ;",
        "for ( i = 0 ; i < 2 ; i ++ )"
      ],
      "err_line": 15,
      "err_msg": "‘character’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        23
      ],
      "mod_code": [
        "void rotate ( string & t )",
        "for ( i = 0 ; i < 2 ; i ++ )"
      ],
      "err_line": 23,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        16,
        40
      ],
      "mod_code": [
        "t [ 0 ] = 4 [ 4 ] ;",
        "do"
      ],
      "err_line": 16,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        16,
        40,
        19
      ],
      "mod_code": [
        "t [ 0 ] = 4 [ 4 ] ;",
        "do",
        "t [ 5 ] = \" temp \" ;"
      ],
      "err_line": 16,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        16,
        40,
        19,
        15
      ],
      "mod_code": [
        "t [ 0 ] = 4 [ 4 ] ;",
        "do",
        "t [ 5 ] = \" temp \" ;",
        "character = t [ 0 ] ;"
      ],
      "err_line": 15,
      "err_msg": "‘character’ was not declared in this scope"
    },
    {
      "mod_line": [
        16,
        40,
        19,
        23
      ],
      "mod_code": [
        "t [ 0 ] = 4 [ 4 ] ;",
        "do",
        "t [ 5 ] = \" temp \" ;",
        "for ( i = 0 ; i < 2 ; i ++ )"
      ],
      "err_line": 16,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        16,
        40,
        15
      ],
      "mod_code": [
        "t [ 0 ] = 4 [ 4 ] ;",
        "do",
        "character = t [ 0 ] ;"
      ],
      "err_line": 15,
      "err_msg": "‘character’ was not declared in this scope"
    },
    {
      "mod_line": [
        16,
        40,
        15,
        23
      ],
      "mod_code": [
        "t [ 0 ] = 4 [ 4 ] ;",
        "do",
        "character = t [ 0 ] ;",
        "for ( i = 0 ; i < 2 ; i ++ )"
      ],
      "err_line": 15,
      "err_msg": "‘character’ was not declared in this scope"
    },
    {
      "mod_line": [
        16,
        40,
        23
      ],
      "mod_code": [
        "t [ 0 ] = 4 [ 4 ] ;",
        "do",
        "for ( i = 0 ; i < 2 ; i ++ )"
      ],
      "err_line": 16,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        16,
        19
      ],
      "mod_code": [
        "t [ 0 ] = 4 [ 4 ] ;",
        "t [ 5 ] = \" temp \" ;"
      ],
      "err_line": 16,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        16,
        19,
        15
      ],
      "mod_code": [
        "t [ 0 ] = 4 [ 4 ] ;",
        "t [ 5 ] = \" temp \" ;",
        "character = t [ 0 ] ;"
      ],
      "err_line": 15,
      "err_msg": "‘character’ was not declared in this scope"
    },
    {
      "mod_line": [
        16,
        19,
        15,
        23
      ],
      "mod_code": [
        "t [ 0 ] = 4 [ 4 ] ;",
        "t [ 5 ] = \" temp \" ;",
        "character = t [ 0 ] ;",
        "for ( i = 0 ; i < 2 ; i ++ )"
      ],
      "err_line": 15,
      "err_msg": "‘character’ was not declared in this scope"
    },
    {
      "mod_line": [
        16,
        19,
        23
      ],
      "mod_code": [
        "t [ 0 ] = 4 [ 4 ] ;",
        "t [ 5 ] = \" temp \" ;",
        "for ( i = 0 ; i < 2 ; i ++ )"
      ],
      "err_line": 16,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        16,
        15
      ],
      "mod_code": [
        "t [ 0 ] = 4 [ 4 ] ;",
        "character = t [ 0 ] ;"
      ],
      "err_line": 15,
      "err_msg": "‘character’ was not declared in this scope"
    },
    {
      "mod_line": [
        16,
        15,
        23
      ],
      "mod_code": [
        "t [ 0 ] = 4 [ 4 ] ;",
        "character = t [ 0 ] ;",
        "for ( i = 0 ; i < 2 ; i ++ )"
      ],
      "err_line": 15,
      "err_msg": "‘character’ was not declared in this scope"
    },
    {
      "mod_line": [
        16,
        23
      ],
      "mod_code": [
        "t [ 0 ] = 4 [ 4 ] ;",
        "for ( i = 0 ; i < 2 ; i ++ )"
      ],
      "err_line": 16,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        40,
        19
      ],
      "mod_code": [
        "do",
        "t [ 5 ] = \" temp \" ;"
      ],
      "err_line": 19,
      "err_msg": "invalid conversion from ‘const char*’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        40,
        19,
        15
      ],
      "mod_code": [
        "do",
        "t [ 5 ] = \" temp \" ;",
        "character = t [ 0 ] ;"
      ],
      "err_line": 15,
      "err_msg": "‘character’ was not declared in this scope"
    },
    {
      "mod_line": [
        40,
        19,
        15,
        23
      ],
      "mod_code": [
        "do",
        "t [ 5 ] = \" temp \" ;",
        "character = t [ 0 ] ;",
        "for ( i = 0 ; i < 2 ; i ++ )"
      ],
      "err_line": 15,
      "err_msg": "‘character’ was not declared in this scope"
    },
    {
      "mod_line": [
        40,
        19,
        23
      ],
      "mod_code": [
        "do",
        "t [ 5 ] = \" temp \" ;",
        "for ( i = 0 ; i < 2 ; i ++ )"
      ],
      "err_line": 19,
      "err_msg": "invalid conversion from ‘const char*’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        40,
        15
      ],
      "mod_code": [
        "do",
        "character = t [ 0 ] ;"
      ],
      "err_line": 15,
      "err_msg": "‘character’ was not declared in this scope"
    },
    {
      "mod_line": [
        40,
        15,
        23
      ],
      "mod_code": [
        "do",
        "character = t [ 0 ] ;",
        "for ( i = 0 ; i < 2 ; i ++ )"
      ],
      "err_line": 15,
      "err_msg": "‘character’ was not declared in this scope"
    },
    {
      "mod_line": [
        40,
        23
      ],
      "mod_code": [
        "do",
        "for ( i = 0 ; i < 2 ; i ++ )"
      ],
      "err_line": 23,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        19,
        15
      ],
      "mod_code": [
        "t [ 5 ] = \" temp \" ;",
        "character = t [ 0 ] ;"
      ],
      "err_line": 15,
      "err_msg": "‘character’ was not declared in this scope"
    },
    {
      "mod_line": [
        19,
        15,
        23
      ],
      "mod_code": [
        "t [ 5 ] = \" temp \" ;",
        "character = t [ 0 ] ;",
        "for ( i = 0 ; i < 2 ; i ++ )"
      ],
      "err_line": 15,
      "err_msg": "‘character’ was not declared in this scope"
    },
    {
      "mod_line": [
        19,
        23
      ],
      "mod_code": [
        "t [ 5 ] = \" temp \" ;",
        "for ( i = 0 ; i < 2 ; i ++ )"
      ],
      "err_line": 19,
      "err_msg": "invalid conversion from ‘const char*’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        15,
        23
      ],
      "mod_code": [
        "character = t [ 0 ] ;",
        "for ( i = 0 ; i < 2 ; i ++ )"
      ],
      "err_line": 15,
      "err_msg": "‘character’ was not declared in this scope"
    }
  ]
}