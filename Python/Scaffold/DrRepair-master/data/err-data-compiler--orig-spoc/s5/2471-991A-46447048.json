{
  "meta": {
    "index": 2471,
    "hitid": "3XD2A6FGFNON887302HPU9UEJZ29SM",
    "workerid": "AIWEXPJAU66D9",
    "probid": "991A",
    "subid": "46447048"
  },
  "lines": [
    {
      "line": 0,
      "text": "declare integer variables a , b , c and n",
      "code": "int a , b , c , n ;",
      "indent": 0
    },
    {
      "line": 1,
      "text": "declare integers x , y and z",
      "code": "int x , y , z ;",
      "indent": 0
    },
    {
      "line": 2,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 3,
      "text": "read a , b , c and n and loop further",
      "code": "while ( cin >> a >> b >> c >> n )",
      "indent": 1
    },
    {
      "line": 4,
      "text": "assign a - c to x",
      "code": "x = a - c ;",
      "indent": 2
    },
    {
      "line": 5,
      "text": "assign b - c to y",
      "code": "y = b - c ;",
      "indent": 2
    },
    {
      "line": 6,
      "text": "change z to x + y + c",
      "code": "z = x + y + c ;",
      "indent": 2
    },
    {
      "line": 7,
      "text": "if z > = n or a < c or b < c",
      "code": "if ( z >= n || a < c || b < c )",
      "indent": 2
    },
    {
      "line": 8,
      "text": "print \" - 1 \"",
      "code": "cout << \" -1 \" << endl ;",
      "indent": 3
    },
    {
      "line": 9,
      "text": "else",
      "code": "else",
      "indent": 2
    },
    {
      "line": 10,
      "text": "print n - z",
      "code": "cout << n - z << endl ;",
      "indent": 3
    },
    {
      "line": 11,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 12,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 13,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        3
      ],
      "mod_code": [
        "while ( cin >> a >> b >> c >> n ;"
      ],
      "err_line": 3,
      "err_msg": "expected ‘)’ before ‘;’ token"
    },
    {
      "mod_line": [
        7,
        6,
        5,
        3
      ],
      "mod_code": [
        "if ( z >= ' n ' || a < c || b < c )",
        "z += y + c ;",
        "y -= c ;",
        "while ( cin >> a >> b >> c >> n ;"
      ],
      "err_line": 3,
      "err_msg": "expected ‘)’ before ‘;’ token"
    },
    {
      "mod_line": [
        7,
        6,
        4,
        3
      ],
      "mod_code": [
        "if ( z >= ' n ' || a < c || b < c )",
        "z += y + c ;",
        "x -= c ;",
        "while ( cin >> a >> b >> c >> n ;"
      ],
      "err_line": 3,
      "err_msg": "expected ‘)’ before ‘;’ token"
    },
    {
      "mod_line": [
        7,
        6,
        3
      ],
      "mod_code": [
        "if ( z >= ' n ' || a < c || b < c )",
        "z += y + c ;",
        "while ( cin >> a >> b >> c >> n ;"
      ],
      "err_line": 3,
      "err_msg": "expected ‘)’ before ‘;’ token"
    },
    {
      "mod_line": [
        7,
        5,
        4,
        3
      ],
      "mod_code": [
        "if ( z >= ' n ' || a < c || b < c )",
        "y -= c ;",
        "x -= c ;",
        "while ( cin >> a >> b >> c >> n ;"
      ],
      "err_line": 3,
      "err_msg": "expected ‘)’ before ‘;’ token"
    },
    {
      "mod_line": [
        7,
        5,
        3
      ],
      "mod_code": [
        "if ( z >= ' n ' || a < c || b < c )",
        "y -= c ;",
        "while ( cin >> a >> b >> c >> n ;"
      ],
      "err_line": 3,
      "err_msg": "expected ‘)’ before ‘;’ token"
    },
    {
      "mod_line": [
        7,
        4,
        3
      ],
      "mod_code": [
        "if ( z >= ' n ' || a < c || b < c )",
        "x -= c ;",
        "while ( cin >> a >> b >> c >> n ;"
      ],
      "err_line": 3,
      "err_msg": "expected ‘)’ before ‘;’ token"
    },
    {
      "mod_line": [
        7,
        3
      ],
      "mod_code": [
        "if ( z >= ' n ' || a < c || b < c )",
        "while ( cin >> a >> b >> c >> n ;"
      ],
      "err_line": 3,
      "err_msg": "expected ‘)’ before ‘;’ token"
    },
    {
      "mod_line": [
        6,
        5,
        4,
        3
      ],
      "mod_code": [
        "z += y + c ;",
        "y -= c ;",
        "x -= c ;",
        "while ( cin >> a >> b >> c >> n ;"
      ],
      "err_line": 3,
      "err_msg": "expected ‘)’ before ‘;’ token"
    },
    {
      "mod_line": [
        6,
        5,
        3
      ],
      "mod_code": [
        "z += y + c ;",
        "y -= c ;",
        "while ( cin >> a >> b >> c >> n ;"
      ],
      "err_line": 3,
      "err_msg": "expected ‘)’ before ‘;’ token"
    },
    {
      "mod_line": [
        6,
        4,
        3
      ],
      "mod_code": [
        "z += y + c ;",
        "x -= c ;",
        "while ( cin >> a >> b >> c >> n ;"
      ],
      "err_line": 3,
      "err_msg": "expected ‘)’ before ‘;’ token"
    },
    {
      "mod_line": [
        6,
        3
      ],
      "mod_code": [
        "z += y + c ;",
        "while ( cin >> a >> b >> c >> n ;"
      ],
      "err_line": 3,
      "err_msg": "expected ‘)’ before ‘;’ token"
    },
    {
      "mod_line": [
        5,
        4,
        3
      ],
      "mod_code": [
        "y -= c ;",
        "x -= c ;",
        "while ( cin >> a >> b >> c >> n ;"
      ],
      "err_line": 3,
      "err_msg": "expected ‘)’ before ‘;’ token"
    },
    {
      "mod_line": [
        5,
        3
      ],
      "mod_code": [
        "y -= c ;",
        "while ( cin >> a >> b >> c >> n ;"
      ],
      "err_line": 3,
      "err_msg": "expected ‘)’ before ‘;’ token"
    },
    {
      "mod_line": [
        4,
        3
      ],
      "mod_code": [
        "x -= c ;",
        "while ( cin >> a >> b >> c >> n ;"
      ],
      "err_line": 3,
      "err_msg": "expected ‘)’ before ‘;’ token"
    }
  ]
}