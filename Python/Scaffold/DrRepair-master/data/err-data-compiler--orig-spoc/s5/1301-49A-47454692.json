{
  "meta": {
    "index": 1301,
    "hitid": "3LN3BXKGC0PVUZBKYDX0JFJMSNHWGY",
    "workerid": "AIWEXPJAU66D9",
    "probid": "49A",
    "subid": "47454692"
  },
  "lines": [
    {
      "line": 0,
      "text": "array of characters vol filled with ' y ' , ' Y ' , ' o ' , ' O ' , ' i ' , ' I ' , ' a ' , ' A ' , ' e ' , ' E ' , ' u ' and ' U '",
      "code": "char vol [ ] = { ' y ' , ' Y ' , ' o ' , ' O ' , ' i ' , ' I ' , ' a ' , ' A ' , ' e ' , ' E ' , ' u ' , ' U ' } ;",
      "indent": 0
    },
    {
      "line": 1,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 2,
      "text": "let s be string",
      "code": "string s ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "read input into s",
      "code": "getline ( cin , s ) ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "for i = length of s - 1 to - 1 exclusive decrementing i",
      "code": "for ( int i = s . size ( ) - 1 ; i > - 1 ; i -- )",
      "indent": 1
    },
    {
      "line": 5,
      "text": "if s [ i ] ! = ' ? ' and s [ i ] ! = ' '",
      "code": "if ( s [ i ] != ' ? ' && s [ i ] != ' ' )",
      "indent": 2
    },
    {
      "line": 6,
      "text": "for integer j = 0 to 12 exclusive",
      "code": "for ( int j = 0 ; j < 12 ; j ++ )",
      "indent": 3
    },
    {
      "line": 7,
      "text": "if s [ i ] = vol [ j ] return cout < < \" YES \" < < ' \\ n ' , 0",
      "code": "if ( s [ i ] == vol [ j ] ) return cout << \" YES \" << ' \\n ' , 0 ;",
      "indent": 4
    },
    {
      "line": 8,
      "text": "return cout < < \" NO \" < < ' \\ n ' , 0",
      "code": "return cout << \" NO \" << ' \\n ' , 0 ;",
      "indent": 3
    },
    {
      "line": 9,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 10,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 11,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        2
      ],
      "mod_code": [
        "char s ;"
      ],
      "err_line": 3,
      "err_msg": "no matching function for call to ‘getline(std::istream&, char&)’"
    },
    {
      "mod_line": [
        7
      ],
      "mod_code": [
        "if ( s [ i ] == ' j ' ) return \" YES \" << ' \\n ' , 0 ;"
      ],
      "err_line": 7,
      "err_msg": "invalid operands of types ‘const char [4]’ and ‘char’ to binary ‘operator<<’"
    },
    {
      "mod_line": [
        8
      ],
      "mod_code": [
        "return cout << \" NO \" << ' \\n ' ;"
      ],
      "err_line": 8,
      "err_msg": "invalid user-defined conversion from ‘std::basic_ostream<char>’ to ‘int’ [-fpermissive]"
    },
    {
      "mod_line": [
        0,
        7,
        2
      ],
      "mod_code": [
        "char vol [ ] = { ' y ' , ' Y ' , ' I ' , ' I ' , ' I ' , ' I ' , ' I ' , ' I ' , ' e ' , ' E ' , ' U ' } ;",
        "if ( s [ i ] == ' j ' ) return cout << \" YES \" << ' \\n ' , 0 ;",
        "char s ;"
      ],
      "err_line": 3,
      "err_msg": "no matching function for call to ‘getline(std::istream&, char&)’"
    },
    {
      "mod_line": [
        0,
        7,
        2,
        8
      ],
      "mod_code": [
        "char vol [ ] = { ' y ' , ' Y ' , ' I ' , ' I ' , ' I ' , ' I ' , ' I ' , ' I ' , ' e ' , ' E ' , ' U ' } ;",
        "if ( s [ i ] == ' j ' ) return cout << \" YES \" << ' \\n ' , 0 ;",
        "char s ;",
        "return cout << \" NO \" << ' \\n ' ;"
      ],
      "err_line": 3,
      "err_msg": "no matching function for call to ‘getline(std::istream&, char&)’"
    },
    {
      "mod_line": [
        0,
        7,
        2,
        3
      ],
      "mod_code": [
        "char vol [ ] = { ' y ' , ' Y ' , ' I ' , ' I ' , ' I ' , ' I ' , ' I ' , ' I ' , ' e ' , ' E ' , ' U ' } ;",
        "if ( s [ i ] == ' j ' ) return cout << \" YES \" << ' \\n ' , 0 ;",
        "char s ;",
        "cin >> s ;"
      ],
      "err_line": 4,
      "err_msg": "request for member ‘size’ in ‘s’, which is of non-class type ‘char’"
    },
    {
      "mod_line": [
        0,
        7,
        8
      ],
      "mod_code": [
        "char vol [ ] = { ' y ' , ' Y ' , ' I ' , ' I ' , ' I ' , ' I ' , ' I ' , ' I ' , ' e ' , ' E ' , ' U ' } ;",
        "if ( s [ i ] == ' j ' ) return cout << \" YES \" << ' \\n ' , 0 ;",
        "return cout << \" NO \" << ' \\n ' ;"
      ],
      "err_line": 8,
      "err_msg": "invalid user-defined conversion from ‘std::basic_ostream<char>’ to ‘int’ [-fpermissive]"
    },
    {
      "mod_line": [
        0,
        7,
        8,
        3
      ],
      "mod_code": [
        "char vol [ ] = { ' y ' , ' Y ' , ' I ' , ' I ' , ' I ' , ' I ' , ' I ' , ' I ' , ' e ' , ' E ' , ' U ' } ;",
        "if ( s [ i ] == ' j ' ) return cout << \" YES \" << ' \\n ' , 0 ;",
        "return cout << \" NO \" << ' \\n ' ;",
        "cin >> s ;"
      ],
      "err_line": 8,
      "err_msg": "invalid user-defined conversion from ‘std::basic_ostream<char>’ to ‘int’ [-fpermissive]"
    },
    {
      "mod_line": [
        0,
        2
      ],
      "mod_code": [
        "char vol [ ] = { ' y ' , ' Y ' , ' I ' , ' I ' , ' I ' , ' I ' , ' I ' , ' I ' , ' e ' , ' E ' , ' U ' } ;",
        "char s ;"
      ],
      "err_line": 3,
      "err_msg": "no matching function for call to ‘getline(std::istream&, char&)’"
    },
    {
      "mod_line": [
        0,
        2,
        8
      ],
      "mod_code": [
        "char vol [ ] = { ' y ' , ' Y ' , ' I ' , ' I ' , ' I ' , ' I ' , ' I ' , ' I ' , ' e ' , ' E ' , ' U ' } ;",
        "char s ;",
        "return cout << \" NO \" << ' \\n ' ;"
      ],
      "err_line": 3,
      "err_msg": "no matching function for call to ‘getline(std::istream&, char&)’"
    },
    {
      "mod_line": [
        0,
        2,
        8,
        3
      ],
      "mod_code": [
        "char vol [ ] = { ' y ' , ' Y ' , ' I ' , ' I ' , ' I ' , ' I ' , ' I ' , ' I ' , ' e ' , ' E ' , ' U ' } ;",
        "char s ;",
        "return cout << \" NO \" << ' \\n ' ;",
        "cin >> s ;"
      ],
      "err_line": 4,
      "err_msg": "request for member ‘size’ in ‘s’, which is of non-class type ‘char’"
    },
    {
      "mod_line": [
        0,
        2,
        8,
        7
      ],
      "mod_code": [
        "char vol [ ] = { ' y ' , ' Y ' , ' I ' , ' I ' , ' I ' , ' I ' , ' I ' , ' I ' , ' e ' , ' E ' , ' U ' } ;",
        "char s ;",
        "return cout << \" NO \" << ' \\n ' ;",
        "if ( s [ i ] == ' j ' ) return \" YES \" << ' \\n ' , 0 ;"
      ],
      "err_line": 3,
      "err_msg": "no matching function for call to ‘getline(std::istream&, char&)’"
    },
    {
      "mod_line": [
        0,
        2,
        3
      ],
      "mod_code": [
        "char vol [ ] = { ' y ' , ' Y ' , ' I ' , ' I ' , ' I ' , ' I ' , ' I ' , ' I ' , ' e ' , ' E ' , ' U ' } ;",
        "char s ;",
        "cin >> s ;"
      ],
      "err_line": 4,
      "err_msg": "request for member ‘size’ in ‘s’, which is of non-class type ‘char’"
    },
    {
      "mod_line": [
        0,
        2,
        3,
        7
      ],
      "mod_code": [
        "char vol [ ] = { ' y ' , ' Y ' , ' I ' , ' I ' , ' I ' , ' I ' , ' I ' , ' I ' , ' e ' , ' E ' , ' U ' } ;",
        "char s ;",
        "cin >> s ;",
        "if ( s [ i ] == ' j ' ) return \" YES \" << ' \\n ' , 0 ;"
      ],
      "err_line": 4,
      "err_msg": "request for member ‘size’ in ‘s’, which is of non-class type ‘char’"
    },
    {
      "mod_line": [
        0,
        2,
        7
      ],
      "mod_code": [
        "char vol [ ] = { ' y ' , ' Y ' , ' I ' , ' I ' , ' I ' , ' I ' , ' I ' , ' I ' , ' e ' , ' E ' , ' U ' } ;",
        "char s ;",
        "if ( s [ i ] == ' j ' ) return \" YES \" << ' \\n ' , 0 ;"
      ],
      "err_line": 3,
      "err_msg": "no matching function for call to ‘getline(std::istream&, char&)’"
    },
    {
      "mod_line": [
        0,
        8
      ],
      "mod_code": [
        "char vol [ ] = { ' y ' , ' Y ' , ' I ' , ' I ' , ' I ' , ' I ' , ' I ' , ' I ' , ' e ' , ' E ' , ' U ' } ;",
        "return cout << \" NO \" << ' \\n ' ;"
      ],
      "err_line": 8,
      "err_msg": "invalid user-defined conversion from ‘std::basic_ostream<char>’ to ‘int’ [-fpermissive]"
    },
    {
      "mod_line": [
        0,
        8,
        3
      ],
      "mod_code": [
        "char vol [ ] = { ' y ' , ' Y ' , ' I ' , ' I ' , ' I ' , ' I ' , ' I ' , ' I ' , ' e ' , ' E ' , ' U ' } ;",
        "return cout << \" NO \" << ' \\n ' ;",
        "cin >> s ;"
      ],
      "err_line": 8,
      "err_msg": "invalid user-defined conversion from ‘std::basic_ostream<char>’ to ‘int’ [-fpermissive]"
    },
    {
      "mod_line": [
        0,
        8,
        3,
        7
      ],
      "mod_code": [
        "char vol [ ] = { ' y ' , ' Y ' , ' I ' , ' I ' , ' I ' , ' I ' , ' I ' , ' I ' , ' e ' , ' E ' , ' U ' } ;",
        "return cout << \" NO \" << ' \\n ' ;",
        "cin >> s ;",
        "if ( s [ i ] == ' j ' ) return \" YES \" << ' \\n ' , 0 ;"
      ],
      "err_line": 7,
      "err_msg": "invalid operands of types ‘const char [4]’ and ‘char’ to binary ‘operator<<’"
    },
    {
      "mod_line": [
        0,
        8,
        7
      ],
      "mod_code": [
        "char vol [ ] = { ' y ' , ' Y ' , ' I ' , ' I ' , ' I ' , ' I ' , ' I ' , ' I ' , ' e ' , ' E ' , ' U ' } ;",
        "return cout << \" NO \" << ' \\n ' ;",
        "if ( s [ i ] == ' j ' ) return \" YES \" << ' \\n ' , 0 ;"
      ],
      "err_line": 7,
      "err_msg": "invalid operands of types ‘const char [4]’ and ‘char’ to binary ‘operator<<’"
    },
    {
      "mod_line": [
        0,
        3,
        7
      ],
      "mod_code": [
        "char vol [ ] = { ' y ' , ' Y ' , ' I ' , ' I ' , ' I ' , ' I ' , ' I ' , ' I ' , ' e ' , ' E ' , ' U ' } ;",
        "cin >> s ;",
        "if ( s [ i ] == ' j ' ) return \" YES \" << ' \\n ' , 0 ;"
      ],
      "err_line": 7,
      "err_msg": "invalid operands of types ‘const char [4]’ and ‘char’ to binary ‘operator<<’"
    },
    {
      "mod_line": [
        0,
        7
      ],
      "mod_code": [
        "char vol [ ] = { ' y ' , ' Y ' , ' I ' , ' I ' , ' I ' , ' I ' , ' I ' , ' I ' , ' e ' , ' E ' , ' U ' } ;",
        "if ( s [ i ] == ' j ' ) return \" YES \" << ' \\n ' , 0 ;"
      ],
      "err_line": 7,
      "err_msg": "invalid operands of types ‘const char [4]’ and ‘char’ to binary ‘operator<<’"
    },
    {
      "mod_line": [
        7,
        2
      ],
      "mod_code": [
        "if ( s [ i ] == ' j ' ) return cout << \" YES \" << ' \\n ' , 0 ;",
        "char s ;"
      ],
      "err_line": 3,
      "err_msg": "no matching function for call to ‘getline(std::istream&, char&)’"
    },
    {
      "mod_line": [
        7,
        2,
        8
      ],
      "mod_code": [
        "if ( s [ i ] == ' j ' ) return cout << \" YES \" << ' \\n ' , 0 ;",
        "char s ;",
        "return cout << \" NO \" << ' \\n ' ;"
      ],
      "err_line": 3,
      "err_msg": "no matching function for call to ‘getline(std::istream&, char&)’"
    },
    {
      "mod_line": [
        7,
        2,
        8,
        3
      ],
      "mod_code": [
        "if ( s [ i ] == ' j ' ) return cout << \" YES \" << ' \\n ' , 0 ;",
        "char s ;",
        "return cout << \" NO \" << ' \\n ' ;",
        "cin >> s ;"
      ],
      "err_line": 4,
      "err_msg": "request for member ‘size’ in ‘s’, which is of non-class type ‘char’"
    },
    {
      "mod_line": [
        7,
        2,
        3
      ],
      "mod_code": [
        "if ( s [ i ] == ' j ' ) return cout << \" YES \" << ' \\n ' , 0 ;",
        "char s ;",
        "cin >> s ;"
      ],
      "err_line": 4,
      "err_msg": "request for member ‘size’ in ‘s’, which is of non-class type ‘char’"
    },
    {
      "mod_line": [
        7,
        8
      ],
      "mod_code": [
        "if ( s [ i ] == ' j ' ) return cout << \" YES \" << ' \\n ' , 0 ;",
        "return cout << \" NO \" << ' \\n ' ;"
      ],
      "err_line": 8,
      "err_msg": "invalid user-defined conversion from ‘std::basic_ostream<char>’ to ‘int’ [-fpermissive]"
    },
    {
      "mod_line": [
        7,
        8,
        3
      ],
      "mod_code": [
        "if ( s [ i ] == ' j ' ) return cout << \" YES \" << ' \\n ' , 0 ;",
        "return cout << \" NO \" << ' \\n ' ;",
        "cin >> s ;"
      ],
      "err_line": 8,
      "err_msg": "invalid user-defined conversion from ‘std::basic_ostream<char>’ to ‘int’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        8
      ],
      "mod_code": [
        "char s ;",
        "return cout << \" NO \" << ' \\n ' ;"
      ],
      "err_line": 3,
      "err_msg": "no matching function for call to ‘getline(std::istream&, char&)’"
    },
    {
      "mod_line": [
        2,
        8,
        3
      ],
      "mod_code": [
        "char s ;",
        "return cout << \" NO \" << ' \\n ' ;",
        "cin >> s ;"
      ],
      "err_line": 4,
      "err_msg": "request for member ‘size’ in ‘s’, which is of non-class type ‘char’"
    },
    {
      "mod_line": [
        2,
        8,
        3,
        7
      ],
      "mod_code": [
        "char s ;",
        "return cout << \" NO \" << ' \\n ' ;",
        "cin >> s ;",
        "if ( s [ i ] == ' j ' ) return \" YES \" << ' \\n ' , 0 ;"
      ],
      "err_line": 4,
      "err_msg": "request for member ‘size’ in ‘s’, which is of non-class type ‘char’"
    },
    {
      "mod_line": [
        2,
        8,
        7
      ],
      "mod_code": [
        "char s ;",
        "return cout << \" NO \" << ' \\n ' ;",
        "if ( s [ i ] == ' j ' ) return \" YES \" << ' \\n ' , 0 ;"
      ],
      "err_line": 3,
      "err_msg": "no matching function for call to ‘getline(std::istream&, char&)’"
    },
    {
      "mod_line": [
        2,
        3
      ],
      "mod_code": [
        "char s ;",
        "cin >> s ;"
      ],
      "err_line": 4,
      "err_msg": "request for member ‘size’ in ‘s’, which is of non-class type ‘char’"
    },
    {
      "mod_line": [
        2,
        3,
        7
      ],
      "mod_code": [
        "char s ;",
        "cin >> s ;",
        "if ( s [ i ] == ' j ' ) return \" YES \" << ' \\n ' , 0 ;"
      ],
      "err_line": 4,
      "err_msg": "request for member ‘size’ in ‘s’, which is of non-class type ‘char’"
    },
    {
      "mod_line": [
        2,
        7
      ],
      "mod_code": [
        "char s ;",
        "if ( s [ i ] == ' j ' ) return \" YES \" << ' \\n ' , 0 ;"
      ],
      "err_line": 3,
      "err_msg": "no matching function for call to ‘getline(std::istream&, char&)’"
    },
    {
      "mod_line": [
        8,
        3
      ],
      "mod_code": [
        "return cout << \" NO \" << ' \\n ' ;",
        "cin >> s ;"
      ],
      "err_line": 8,
      "err_msg": "invalid user-defined conversion from ‘std::basic_ostream<char>’ to ‘int’ [-fpermissive]"
    },
    {
      "mod_line": [
        8,
        3,
        7
      ],
      "mod_code": [
        "return cout << \" NO \" << ' \\n ' ;",
        "cin >> s ;",
        "if ( s [ i ] == ' j ' ) return \" YES \" << ' \\n ' , 0 ;"
      ],
      "err_line": 7,
      "err_msg": "invalid operands of types ‘const char [4]’ and ‘char’ to binary ‘operator<<’"
    },
    {
      "mod_line": [
        8,
        7
      ],
      "mod_code": [
        "return cout << \" NO \" << ' \\n ' ;",
        "if ( s [ i ] == ' j ' ) return \" YES \" << ' \\n ' , 0 ;"
      ],
      "err_line": 7,
      "err_msg": "invalid operands of types ‘const char [4]’ and ‘char’ to binary ‘operator<<’"
    },
    {
      "mod_line": [
        3,
        7
      ],
      "mod_code": [
        "cin >> s ;",
        "if ( s [ i ] == ' j ' ) return \" YES \" << ' \\n ' , 0 ;"
      ],
      "err_line": 7,
      "err_msg": "invalid operands of types ‘const char [4]’ and ‘char’ to binary ‘operator<<’"
    }
  ]
}