{
  "meta": {
    "index": 1160,
    "hitid": "3421H3BM9ABU95ODD88B283RNGPJ9G",
    "workerid": "AIWEXPJAU66D9",
    "probid": "757A",
    "subid": "48552239"
  },
  "lines": [
    {
      "line": 0,
      "text": "let mp be a map from characters to integers",
      "code": "map < char , int > mp ;",
      "indent": 0
    },
    {
      "line": 1,
      "text": "declare string my = \" Bulbasaur \"",
      "code": "string my = \" Bulbasaur \" ;",
      "indent": 0
    },
    {
      "line": 2,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 3,
      "text": "declare string s",
      "code": "string s ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "read s",
      "code": "cin >> s ;",
      "indent": 1
    },
    {
      "line": 5,
      "text": "move new map iterator it through s , incrementing element of mp at it",
      "code": "for ( string :: iterator it = s . begin ( ) ; it != s . end ( ) ; ++ it ) { mp [ * it ] ++ ; }",
      "indent": 1
    },
    {
      "line": 6,
      "text": "divide mp [ ' a ' ] by 2",
      "code": "mp [ ' a ' ] /= 2 ;",
      "indent": 1
    },
    {
      "line": 7,
      "text": "divide mp [ ' u ' ] by 2",
      "code": "mp [ ' u ' ] /= 2 ;",
      "indent": 1
    },
    {
      "line": 8,
      "text": "create integer ans = 100000",
      "code": "int ans = 100000 ;",
      "indent": 1
    },
    {
      "line": 9,
      "text": "move new map iterator it through my , setting ans to min of ans and mp [ * it ] on each iteration",
      "code": "for ( string :: iterator it = my . begin ( ) ; it != my . end ( ) ; ++ it ) { ans = min ( ans , mp [ * it ] ) ; }",
      "indent": 1
    },
    {
      "line": 10,
      "text": "print ans",
      "code": "cout << ans << endl ;",
      "indent": 1
    },
    {
      "line": 11,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 12,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        5
      ],
      "mod_code": [
        "for ( map < string > :: iterator it = s . begin ( ) ; it != s . end ( ) ; it ++ )"
      ],
      "err_line": 5,
      "err_msg": "wrong number of template arguments (1, should be at least 2)"
    },
    {
      "mod_line": [
        6
      ],
      "mod_code": [
        "mp [ ' a ' ] = mp [ 2 a ' + ' ] ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘]’ before ‘a’"
    },
    {
      "mod_line": [
        7
      ],
      "mod_code": [
        "mp [ ' u ' ] = mp [ 2 u ] + 2 ;"
      ],
      "err_line": 7,
      "err_msg": "expected ‘]’ before ‘u’"
    },
    {
      "mod_line": [
        9
      ],
      "mod_code": [
        "for ( map < string , int > :: iterator it = my . begin ( ) ; it != my . end ( ) ; it ++ ) { ans = min ( ans , mp [ * it ] ) ; }"
      ],
      "err_line": 9,
      "err_msg": "conversion from ‘std::__cxx11::basic_string<char>::iterator {aka __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> >}’ to non-scalar type ‘std::map<std::__cxx11::basic_string<char>, int>::iterator {aka std::_Rb_tree_iterator<std::pair<const std::__cxx11::basic_string<char>, int> >}’ requested"
    },
    {
      "mod_line": [
        0
      ],
      "mod_code": [
        "map < characters , int > mp ;"
      ],
      "err_line": 0,
      "err_msg": "‘characters’ was not declared in this scope"
    },
    {
      "mod_line": [
        3
      ],
      "mod_code": [
        "string n ;"
      ],
      "err_line": 4,
      "err_msg": "‘s’ was not declared in this scope"
    },
    {
      "mod_line": [
        5
      ],
      "mod_code": [
        "for ( map < string > :: iterator it = s . begin ( ) ; it != s . end ( ) ; it ++ ) { mp . at ( it ) ; }"
      ],
      "err_line": 5,
      "err_msg": "wrong number of template arguments (1, should be at least 2)"
    },
    {
      "mod_line": [
        6
      ],
      "mod_code": [
        "mp [ ' a ' ] = mp [ 2 a ' ] + 2 ;"
      ],
      "err_line": 6,
      "err_msg": "missing terminating ' character"
    },
    {
      "mod_line": [
        7
      ],
      "mod_code": [
        "mp [ ' u ' ] = mp [ 2 u + 2 ] ;"
      ],
      "err_line": 7,
      "err_msg": "expected ‘]’ before ‘u’"
    },
    {
      "mod_line": [
        8
      ],
      "mod_code": [
        "long long ans = 100000 ;"
      ],
      "err_line": 9,
      "err_msg": "no matching function for call to ‘min(long long int&, std::map<char, int>::mapped_type&)’"
    },
    {
      "mod_line": [
        9
      ],
      "mod_code": [
        "iterator it = min ( ans , my [ it ++ ] ) ;"
      ],
      "err_line": 9,
      "err_msg": "missing template arguments before ‘it’"
    },
    {
      "mod_line": [
        5,
        6
      ],
      "mod_code": [
        "for ( map < string > :: iterator it = s . begin ( ) ; it != s . end ( ) ; it ++ )",
        "mp [ ' a ' ] = mp [ 2 a ' + ' ] ;"
      ],
      "err_line": 5,
      "err_msg": "wrong number of template arguments (1, should be at least 2)"
    },
    {
      "mod_line": [
        5,
        6,
        7
      ],
      "mod_code": [
        "for ( map < string > :: iterator it = s . begin ( ) ; it != s . end ( ) ; it ++ )",
        "mp [ ' a ' ] = mp [ 2 a ' + ' ] ;",
        "mp [ ' u ' ] = mp [ 2 u ] + 2 ;"
      ],
      "err_line": 5,
      "err_msg": "wrong number of template arguments (1, should be at least 2)"
    },
    {
      "mod_line": [
        5,
        6,
        7,
        9
      ],
      "mod_code": [
        "for ( map < string > :: iterator it = s . begin ( ) ; it != s . end ( ) ; it ++ )",
        "mp [ ' a ' ] = mp [ 2 a ' + ' ] ;",
        "mp [ ' u ' ] = mp [ 2 u ] + 2 ;",
        "for ( map < string , int > :: iterator it = my . begin ( ) ; it != my . end ( ) ; it ++ ) { ans = min ( ans , mp [ * it ] ) ; }"
      ],
      "err_line": 5,
      "err_msg": "wrong number of template arguments (1, should be at least 2)"
    },
    {
      "mod_line": [
        5,
        6,
        7,
        3
      ],
      "mod_code": [
        "for ( map < string > :: iterator it = s . begin ( ) ; it != s . end ( ) ; it ++ )",
        "mp [ ' a ' ] = mp [ 2 a ' + ' ] ;",
        "mp [ ' u ' ] = mp [ 2 u ] + 2 ;",
        "string n ;"
      ],
      "err_line": 4,
      "err_msg": "‘s’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        6,
        9
      ],
      "mod_code": [
        "for ( map < string > :: iterator it = s . begin ( ) ; it != s . end ( ) ; it ++ )",
        "mp [ ' a ' ] = mp [ 2 a ' + ' ] ;",
        "for ( map < string , int > :: iterator it = my . begin ( ) ; it != my . end ( ) ; it ++ ) { ans = min ( ans , mp [ * it ] ) ; }"
      ],
      "err_line": 5,
      "err_msg": "wrong number of template arguments (1, should be at least 2)"
    },
    {
      "mod_line": [
        5,
        6,
        9,
        3
      ],
      "mod_code": [
        "for ( map < string > :: iterator it = s . begin ( ) ; it != s . end ( ) ; it ++ )",
        "mp [ ' a ' ] = mp [ 2 a ' + ' ] ;",
        "for ( map < string , int > :: iterator it = my . begin ( ) ; it != my . end ( ) ; it ++ ) { ans = min ( ans , mp [ * it ] ) ; }",
        "string n ;"
      ],
      "err_line": 4,
      "err_msg": "‘s’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        6,
        3
      ],
      "mod_code": [
        "for ( map < string > :: iterator it = s . begin ( ) ; it != s . end ( ) ; it ++ )",
        "mp [ ' a ' ] = mp [ 2 a ' + ' ] ;",
        "string n ;"
      ],
      "err_line": 4,
      "err_msg": "‘s’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        7
      ],
      "mod_code": [
        "for ( map < string > :: iterator it = s . begin ( ) ; it != s . end ( ) ; it ++ )",
        "mp [ ' u ' ] = mp [ 2 u ] + 2 ;"
      ],
      "err_line": 5,
      "err_msg": "wrong number of template arguments (1, should be at least 2)"
    },
    {
      "mod_line": [
        5,
        7,
        9
      ],
      "mod_code": [
        "for ( map < string > :: iterator it = s . begin ( ) ; it != s . end ( ) ; it ++ )",
        "mp [ ' u ' ] = mp [ 2 u ] + 2 ;",
        "for ( map < string , int > :: iterator it = my . begin ( ) ; it != my . end ( ) ; it ++ ) { ans = min ( ans , mp [ * it ] ) ; }"
      ],
      "err_line": 5,
      "err_msg": "wrong number of template arguments (1, should be at least 2)"
    },
    {
      "mod_line": [
        5,
        7,
        9,
        6
      ],
      "mod_code": [
        "for ( map < string > :: iterator it = s . begin ( ) ; it != s . end ( ) ; it ++ )",
        "mp [ ' u ' ] = mp [ 2 u ] + 2 ;",
        "for ( map < string , int > :: iterator it = my . begin ( ) ; it != my . end ( ) ; it ++ ) { ans = min ( ans , mp [ * it ] ) ; }",
        "mp [ ' a ' ] = mp [ 2 a ' ] + 2 ;"
      ],
      "err_line": 6,
      "err_msg": "missing terminating ' character"
    },
    {
      "mod_line": [
        5,
        7,
        9,
        3
      ],
      "mod_code": [
        "for ( map < string > :: iterator it = s . begin ( ) ; it != s . end ( ) ; it ++ )",
        "mp [ ' u ' ] = mp [ 2 u ] + 2 ;",
        "for ( map < string , int > :: iterator it = my . begin ( ) ; it != my . end ( ) ; it ++ ) { ans = min ( ans , mp [ * it ] ) ; }",
        "string n ;"
      ],
      "err_line": 4,
      "err_msg": "‘s’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        7,
        6
      ],
      "mod_code": [
        "for ( map < string > :: iterator it = s . begin ( ) ; it != s . end ( ) ; it ++ )",
        "mp [ ' u ' ] = mp [ 2 u ] + 2 ;",
        "mp [ ' a ' ] = mp [ 2 a ' ] + 2 ;"
      ],
      "err_line": 6,
      "err_msg": "missing terminating ' character"
    },
    {
      "mod_line": [
        5,
        7,
        6,
        3
      ],
      "mod_code": [
        "for ( map < string > :: iterator it = s . begin ( ) ; it != s . end ( ) ; it ++ )",
        "mp [ ' u ' ] = mp [ 2 u ] + 2 ;",
        "mp [ ' a ' ] = mp [ 2 a ' ] + 2 ;",
        "string n ;"
      ],
      "err_line": 6,
      "err_msg": "missing terminating ' character"
    },
    {
      "mod_line": [
        5,
        7,
        3
      ],
      "mod_code": [
        "for ( map < string > :: iterator it = s . begin ( ) ; it != s . end ( ) ; it ++ )",
        "mp [ ' u ' ] = mp [ 2 u ] + 2 ;",
        "string n ;"
      ],
      "err_line": 4,
      "err_msg": "‘s’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        9
      ],
      "mod_code": [
        "for ( map < string > :: iterator it = s . begin ( ) ; it != s . end ( ) ; it ++ )",
        "for ( map < string , int > :: iterator it = my . begin ( ) ; it != my . end ( ) ; it ++ ) { ans = min ( ans , mp [ * it ] ) ; }"
      ],
      "err_line": 5,
      "err_msg": "wrong number of template arguments (1, should be at least 2)"
    },
    {
      "mod_line": [
        5,
        9,
        6
      ],
      "mod_code": [
        "for ( map < string > :: iterator it = s . begin ( ) ; it != s . end ( ) ; it ++ )",
        "for ( map < string , int > :: iterator it = my . begin ( ) ; it != my . end ( ) ; it ++ ) { ans = min ( ans , mp [ * it ] ) ; }",
        "mp [ ' a ' ] = mp [ 2 a ' ] + 2 ;"
      ],
      "err_line": 6,
      "err_msg": "missing terminating ' character"
    },
    {
      "mod_line": [
        5,
        9,
        6,
        3
      ],
      "mod_code": [
        "for ( map < string > :: iterator it = s . begin ( ) ; it != s . end ( ) ; it ++ )",
        "for ( map < string , int > :: iterator it = my . begin ( ) ; it != my . end ( ) ; it ++ ) { ans = min ( ans , mp [ * it ] ) ; }",
        "mp [ ' a ' ] = mp [ 2 a ' ] + 2 ;",
        "string n ;"
      ],
      "err_line": 6,
      "err_msg": "missing terminating ' character"
    },
    {
      "mod_line": [
        5,
        9,
        3
      ],
      "mod_code": [
        "for ( map < string > :: iterator it = s . begin ( ) ; it != s . end ( ) ; it ++ )",
        "for ( map < string , int > :: iterator it = my . begin ( ) ; it != my . end ( ) ; it ++ ) { ans = min ( ans , mp [ * it ] ) ; }",
        "string n ;"
      ],
      "err_line": 4,
      "err_msg": "‘s’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        6
      ],
      "mod_code": [
        "for ( map < string > :: iterator it = s . begin ( ) ; it != s . end ( ) ; it ++ )",
        "mp [ ' a ' ] = mp [ 2 a ' ] + 2 ;"
      ],
      "err_line": 6,
      "err_msg": "missing terminating ' character"
    },
    {
      "mod_line": [
        5,
        6,
        3
      ],
      "mod_code": [
        "for ( map < string > :: iterator it = s . begin ( ) ; it != s . end ( ) ; it ++ )",
        "mp [ ' a ' ] = mp [ 2 a ' ] + 2 ;",
        "string n ;"
      ],
      "err_line": 6,
      "err_msg": "missing terminating ' character"
    },
    {
      "mod_line": [
        5,
        3
      ],
      "mod_code": [
        "for ( map < string > :: iterator it = s . begin ( ) ; it != s . end ( ) ; it ++ )",
        "string n ;"
      ],
      "err_line": 4,
      "err_msg": "‘s’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        7
      ],
      "mod_code": [
        "mp [ ' a ' ] = mp [ 2 a ' + ' ] ;",
        "mp [ ' u ' ] = mp [ 2 u ] + 2 ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘]’ before ‘a’"
    },
    {
      "mod_line": [
        6,
        7,
        9
      ],
      "mod_code": [
        "mp [ ' a ' ] = mp [ 2 a ' + ' ] ;",
        "mp [ ' u ' ] = mp [ 2 u ] + 2 ;",
        "for ( map < string , int > :: iterator it = my . begin ( ) ; it != my . end ( ) ; it ++ ) { ans = min ( ans , mp [ * it ] ) ; }"
      ],
      "err_line": 6,
      "err_msg": "expected ‘]’ before ‘a’"
    },
    {
      "mod_line": [
        6,
        7,
        9,
        3
      ],
      "mod_code": [
        "mp [ ' a ' ] = mp [ 2 a ' + ' ] ;",
        "mp [ ' u ' ] = mp [ 2 u ] + 2 ;",
        "for ( map < string , int > :: iterator it = my . begin ( ) ; it != my . end ( ) ; it ++ ) { ans = min ( ans , mp [ * it ] ) ; }",
        "string n ;"
      ],
      "err_line": 4,
      "err_msg": "‘s’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        7,
        3
      ],
      "mod_code": [
        "mp [ ' a ' ] = mp [ 2 a ' + ' ] ;",
        "mp [ ' u ' ] = mp [ 2 u ] + 2 ;",
        "string n ;"
      ],
      "err_line": 4,
      "err_msg": "‘s’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        9
      ],
      "mod_code": [
        "mp [ ' a ' ] = mp [ 2 a ' + ' ] ;",
        "for ( map < string , int > :: iterator it = my . begin ( ) ; it != my . end ( ) ; it ++ ) { ans = min ( ans , mp [ * it ] ) ; }"
      ],
      "err_line": 6,
      "err_msg": "expected ‘]’ before ‘a’"
    },
    {
      "mod_line": [
        6,
        9,
        3
      ],
      "mod_code": [
        "mp [ ' a ' ] = mp [ 2 a ' + ' ] ;",
        "for ( map < string , int > :: iterator it = my . begin ( ) ; it != my . end ( ) ; it ++ ) { ans = min ( ans , mp [ * it ] ) ; }",
        "string n ;"
      ],
      "err_line": 4,
      "err_msg": "‘s’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        3
      ],
      "mod_code": [
        "mp [ ' a ' ] = mp [ 2 a ' + ' ] ;",
        "string n ;"
      ],
      "err_line": 4,
      "err_msg": "‘s’ was not declared in this scope"
    },
    {
      "mod_line": [
        7,
        9
      ],
      "mod_code": [
        "mp [ ' u ' ] = mp [ 2 u ] + 2 ;",
        "for ( map < string , int > :: iterator it = my . begin ( ) ; it != my . end ( ) ; it ++ ) { ans = min ( ans , mp [ * it ] ) ; }"
      ],
      "err_line": 7,
      "err_msg": "expected ‘]’ before ‘u’"
    },
    {
      "mod_line": [
        7,
        9,
        6
      ],
      "mod_code": [
        "mp [ ' u ' ] = mp [ 2 u ] + 2 ;",
        "for ( map < string , int > :: iterator it = my . begin ( ) ; it != my . end ( ) ; it ++ ) { ans = min ( ans , mp [ * it ] ) ; }",
        "mp [ ' a ' ] = mp [ 2 a ' ] + 2 ;"
      ],
      "err_line": 6,
      "err_msg": "missing terminating ' character"
    },
    {
      "mod_line": [
        7,
        9,
        6,
        3
      ],
      "mod_code": [
        "mp [ ' u ' ] = mp [ 2 u ] + 2 ;",
        "for ( map < string , int > :: iterator it = my . begin ( ) ; it != my . end ( ) ; it ++ ) { ans = min ( ans , mp [ * it ] ) ; }",
        "mp [ ' a ' ] = mp [ 2 a ' ] + 2 ;",
        "string n ;"
      ],
      "err_line": 6,
      "err_msg": "missing terminating ' character"
    },
    {
      "mod_line": [
        7,
        9,
        3
      ],
      "mod_code": [
        "mp [ ' u ' ] = mp [ 2 u ] + 2 ;",
        "for ( map < string , int > :: iterator it = my . begin ( ) ; it != my . end ( ) ; it ++ ) { ans = min ( ans , mp [ * it ] ) ; }",
        "string n ;"
      ],
      "err_line": 4,
      "err_msg": "‘s’ was not declared in this scope"
    },
    {
      "mod_line": [
        7,
        6
      ],
      "mod_code": [
        "mp [ ' u ' ] = mp [ 2 u ] + 2 ;",
        "mp [ ' a ' ] = mp [ 2 a ' ] + 2 ;"
      ],
      "err_line": 6,
      "err_msg": "missing terminating ' character"
    },
    {
      "mod_line": [
        7,
        6,
        3
      ],
      "mod_code": [
        "mp [ ' u ' ] = mp [ 2 u ] + 2 ;",
        "mp [ ' a ' ] = mp [ 2 a ' ] + 2 ;",
        "string n ;"
      ],
      "err_line": 6,
      "err_msg": "missing terminating ' character"
    },
    {
      "mod_line": [
        7,
        3
      ],
      "mod_code": [
        "mp [ ' u ' ] = mp [ 2 u ] + 2 ;",
        "string n ;"
      ],
      "err_line": 4,
      "err_msg": "‘s’ was not declared in this scope"
    },
    {
      "mod_line": [
        9,
        6
      ],
      "mod_code": [
        "for ( map < string , int > :: iterator it = my . begin ( ) ; it != my . end ( ) ; it ++ ) { ans = min ( ans , mp [ * it ] ) ; }",
        "mp [ ' a ' ] = mp [ 2 a ' ] + 2 ;"
      ],
      "err_line": 6,
      "err_msg": "missing terminating ' character"
    },
    {
      "mod_line": [
        9,
        6,
        3
      ],
      "mod_code": [
        "for ( map < string , int > :: iterator it = my . begin ( ) ; it != my . end ( ) ; it ++ ) { ans = min ( ans , mp [ * it ] ) ; }",
        "mp [ ' a ' ] = mp [ 2 a ' ] + 2 ;",
        "string n ;"
      ],
      "err_line": 6,
      "err_msg": "missing terminating ' character"
    },
    {
      "mod_line": [
        9,
        3
      ],
      "mod_code": [
        "for ( map < string , int > :: iterator it = my . begin ( ) ; it != my . end ( ) ; it ++ ) { ans = min ( ans , mp [ * it ] ) ; }",
        "string n ;"
      ],
      "err_line": 4,
      "err_msg": "‘s’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        3
      ],
      "mod_code": [
        "mp [ ' a ' ] = mp [ 2 a ' ] + 2 ;",
        "string n ;"
      ],
      "err_line": 6,
      "err_msg": "missing terminating ' character"
    }
  ]
}