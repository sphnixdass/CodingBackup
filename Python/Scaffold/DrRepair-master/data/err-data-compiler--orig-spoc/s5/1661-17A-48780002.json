{
  "meta": {
    "index": 1661,
    "hitid": "3T2EL38U0ME1WOAOBEYYFC1V7CWXQN",
    "workerid": "AIWEXPJAU66D9",
    "probid": "17A",
    "subid": "48780002"
  },
  "lines": [
    {
      "line": 0,
      "text": "integers n , k and lt , integer arrays p and ok with size 1111",
      "code": "int n , k , p [ 1111 ] , ok [ 1111 ] , lt ;",
      "indent": 0
    },
    {
      "line": 1,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 2,
      "text": "read n and k",
      "code": "cin >> n >> k ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "for integer i = 2 to n inclusive",
      "code": "for ( int i = 2 ; i <= n ; i ++ )",
      "indent": 1
    },
    {
      "line": 4,
      "text": "if p [ i ] is 0",
      "code": "if ( ! p [ i ] )",
      "indent": 2
    },
    {
      "line": 5,
      "text": "decrease k by ok [ i ]",
      "code": "k -= ok [ i ] ;",
      "indent": 3
    },
    {
      "line": 6,
      "text": "if lt ! = 0 & & lt + i + 1 < = n , set ok [ lt + i + 1 ] to 1",
      "code": "if ( lt != 0 && lt + i + 1 <= n ) { ok [ lt + i + 1 ] = 1 ; }",
      "indent": 3
    },
    {
      "line": 7,
      "text": "assign value of i to the lt",
      "code": "lt = i ;",
      "indent": 3
    },
    {
      "line": 8,
      "text": "for integer j = i * i to n inclusive , assign 1 to p [ i ]",
      "code": "for ( int j = i * i ; j <= n ; j += i ) { p [ j ] = 1 ; }",
      "indent": 3
    },
    {
      "line": 9,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 10,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 11,
      "text": "if k is greater than 0",
      "code": "if ( k > 0 )",
      "indent": 1
    },
    {
      "line": 12,
      "text": "print \" NO \" and a new line",
      "code": "cout << \" NO \" << endl ;",
      "indent": 2
    },
    {
      "line": 13,
      "text": "else",
      "code": "else",
      "indent": 1
    },
    {
      "line": 14,
      "text": "print \" YES \" and a new line",
      "code": "cout << \" YES \" << endl ;",
      "indent": 2
    },
    {
      "line": 15,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 16,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 17,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        0
      ],
      "mod_code": [
        "int n , k , p [ 1111 ] , ok [ 1111 ] ;"
      ],
      "err_line": 6,
      "err_msg": "‘lt’ was not declared in this scope"
    },
    {
      "mod_line": [
        0
      ],
      "mod_code": [
        "int n , k , p , p [ 1111 ] , lt [ 1111 ] ;"
      ],
      "err_line": 0,
      "err_msg": "conflicting declaration ‘int p [1111]’"
    },
    {
      "mod_line": [
        7
      ],
      "mod_code": [
        "* lt = i ;"
      ],
      "err_line": 7,
      "err_msg": "invalid type argument of unary ‘*’ (have ‘int’)"
    },
    {
      "mod_line": [
        0,
        8
      ],
      "mod_code": [
        "int n , k , p [ 1111 ] , ok [ 1111 ] ;",
        "for ( int j = i * i ; j <= n ; j ++ ) { p [ i ] = 1 ; }"
      ],
      "err_line": 6,
      "err_msg": "‘lt’ was not declared in this scope"
    },
    {
      "mod_line": [
        0,
        8,
        11
      ],
      "mod_code": [
        "int n , k , p [ 1111 ] , ok [ 1111 ] ;",
        "for ( int j = i * i ; j <= n ; j ++ ) { p [ i ] = 1 ; }",
        "if ( k >= 0 )"
      ],
      "err_line": 6,
      "err_msg": "‘lt’ was not declared in this scope"
    },
    {
      "mod_line": [
        0,
        8,
        11,
        14
      ],
      "mod_code": [
        "int n , k , p [ 1111 ] , ok [ 1111 ] ;",
        "for ( int j = i * i ; j <= n ; j ++ ) { p [ i ] = 1 ; }",
        "if ( k >= 0 )",
        "cout << \" YES\\n \" << endl ;"
      ],
      "err_line": 6,
      "err_msg": "‘lt’ was not declared in this scope"
    },
    {
      "mod_line": [
        0,
        8,
        14
      ],
      "mod_code": [
        "int n , k , p [ 1111 ] , ok [ 1111 ] ;",
        "for ( int j = i * i ; j <= n ; j ++ ) { p [ i ] = 1 ; }",
        "cout << \" YES\\n \" << endl ;"
      ],
      "err_line": 6,
      "err_msg": "‘lt’ was not declared in this scope"
    },
    {
      "mod_line": [
        0,
        11
      ],
      "mod_code": [
        "int n , k , p [ 1111 ] , ok [ 1111 ] ;",
        "if ( k >= 0 )"
      ],
      "err_line": 6,
      "err_msg": "‘lt’ was not declared in this scope"
    },
    {
      "mod_line": [
        0,
        11,
        14
      ],
      "mod_code": [
        "int n , k , p [ 1111 ] , ok [ 1111 ] ;",
        "if ( k >= 0 )",
        "cout << \" YES\\n \" << endl ;"
      ],
      "err_line": 6,
      "err_msg": "‘lt’ was not declared in this scope"
    },
    {
      "mod_line": [
        0,
        11,
        14,
        8
      ],
      "mod_code": [
        "int n , k , p [ 1111 ] , ok [ 1111 ] ;",
        "if ( k >= 0 )",
        "cout << \" YES\\n \" << endl ;",
        "for ( int j = i * i ; j <= n ; j ++ ) p [ i ] = 1 ;"
      ],
      "err_line": 6,
      "err_msg": "‘lt’ was not declared in this scope"
    },
    {
      "mod_line": [
        0,
        11,
        8
      ],
      "mod_code": [
        "int n , k , p [ 1111 ] , ok [ 1111 ] ;",
        "if ( k >= 0 )",
        "for ( int j = i * i ; j <= n ; j ++ ) p [ i ] = 1 ;"
      ],
      "err_line": 6,
      "err_msg": "‘lt’ was not declared in this scope"
    },
    {
      "mod_line": [
        0,
        14
      ],
      "mod_code": [
        "int n , k , p [ 1111 ] , ok [ 1111 ] ;",
        "cout << \" YES\\n \" << endl ;"
      ],
      "err_line": 6,
      "err_msg": "‘lt’ was not declared in this scope"
    },
    {
      "mod_line": [
        0,
        14,
        8
      ],
      "mod_code": [
        "int n , k , p [ 1111 ] , ok [ 1111 ] ;",
        "cout << \" YES\\n \" << endl ;",
        "for ( int j = i * i ; j <= n ; j ++ ) p [ i ] = 1 ;"
      ],
      "err_line": 6,
      "err_msg": "‘lt’ was not declared in this scope"
    },
    {
      "mod_line": [
        0,
        8
      ],
      "mod_code": [
        "int n , k , p [ 1111 ] , ok [ 1111 ] ;",
        "for ( int j = i * i ; j <= n ; j ++ ) p [ i ] = 1 ;"
      ],
      "err_line": 6,
      "err_msg": "‘lt’ was not declared in this scope"
    },
    {
      "mod_line": [
        8,
        11,
        14,
        0
      ],
      "mod_code": [
        "for ( int j = i * i ; j <= n ; j ++ ) { p [ i ] = 1 ; }",
        "if ( k >= 0 )",
        "cout << \" YES\\n \" << endl ;",
        "int n , k , p , p [ 1111 ] , lt [ 1111 ] ;"
      ],
      "err_line": 0,
      "err_msg": "conflicting declaration ‘int p [1111]’"
    },
    {
      "mod_line": [
        8,
        11,
        0
      ],
      "mod_code": [
        "for ( int j = i * i ; j <= n ; j ++ ) { p [ i ] = 1 ; }",
        "if ( k >= 0 )",
        "int n , k , p , p [ 1111 ] , lt [ 1111 ] ;"
      ],
      "err_line": 0,
      "err_msg": "conflicting declaration ‘int p [1111]’"
    },
    {
      "mod_line": [
        8,
        14,
        0
      ],
      "mod_code": [
        "for ( int j = i * i ; j <= n ; j ++ ) { p [ i ] = 1 ; }",
        "cout << \" YES\\n \" << endl ;",
        "int n , k , p , p [ 1111 ] , lt [ 1111 ] ;"
      ],
      "err_line": 0,
      "err_msg": "conflicting declaration ‘int p [1111]’"
    },
    {
      "mod_line": [
        8,
        0
      ],
      "mod_code": [
        "for ( int j = i * i ; j <= n ; j ++ ) { p [ i ] = 1 ; }",
        "int n , k , p , p [ 1111 ] , lt [ 1111 ] ;"
      ],
      "err_line": 0,
      "err_msg": "conflicting declaration ‘int p [1111]’"
    },
    {
      "mod_line": [
        11,
        14,
        0
      ],
      "mod_code": [
        "if ( k >= 0 )",
        "cout << \" YES\\n \" << endl ;",
        "int n , k , p , p [ 1111 ] , lt [ 1111 ] ;"
      ],
      "err_line": 0,
      "err_msg": "conflicting declaration ‘int p [1111]’"
    },
    {
      "mod_line": [
        11,
        14,
        0,
        8
      ],
      "mod_code": [
        "if ( k >= 0 )",
        "cout << \" YES\\n \" << endl ;",
        "int n , k , p , p [ 1111 ] , lt [ 1111 ] ;",
        "for ( int j = i * i ; j <= n ; j ++ ) p [ i ] = 1 ;"
      ],
      "err_line": 0,
      "err_msg": "conflicting declaration ‘int p [1111]’"
    },
    {
      "mod_line": [
        11,
        0
      ],
      "mod_code": [
        "if ( k >= 0 )",
        "int n , k , p , p [ 1111 ] , lt [ 1111 ] ;"
      ],
      "err_line": 0,
      "err_msg": "conflicting declaration ‘int p [1111]’"
    },
    {
      "mod_line": [
        11,
        0,
        8
      ],
      "mod_code": [
        "if ( k >= 0 )",
        "int n , k , p , p [ 1111 ] , lt [ 1111 ] ;",
        "for ( int j = i * i ; j <= n ; j ++ ) p [ i ] = 1 ;"
      ],
      "err_line": 0,
      "err_msg": "conflicting declaration ‘int p [1111]’"
    },
    {
      "mod_line": [
        14,
        0
      ],
      "mod_code": [
        "cout << \" YES\\n \" << endl ;",
        "int n , k , p , p [ 1111 ] , lt [ 1111 ] ;"
      ],
      "err_line": 0,
      "err_msg": "conflicting declaration ‘int p [1111]’"
    },
    {
      "mod_line": [
        14,
        0,
        8
      ],
      "mod_code": [
        "cout << \" YES\\n \" << endl ;",
        "int n , k , p , p [ 1111 ] , lt [ 1111 ] ;",
        "for ( int j = i * i ; j <= n ; j ++ ) p [ i ] = 1 ;"
      ],
      "err_line": 0,
      "err_msg": "conflicting declaration ‘int p [1111]’"
    },
    {
      "mod_line": [
        0,
        8
      ],
      "mod_code": [
        "int n , k , p , p [ 1111 ] , lt [ 1111 ] ;",
        "for ( int j = i * i ; j <= n ; j ++ ) p [ i ] = 1 ;"
      ],
      "err_line": 0,
      "err_msg": "conflicting declaration ‘int p [1111]’"
    }
  ]
}