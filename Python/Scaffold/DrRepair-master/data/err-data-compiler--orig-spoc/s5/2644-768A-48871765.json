{
  "meta": {
    "index": 2644,
    "hitid": "36JW4WBR06E7J9K0SU5I0R9NCZNHFX",
    "workerid": "A1NBHCFZKJGHKW",
    "probid": "768A",
    "subid": "48871765"
  },
  "lines": [
    {
      "line": 0,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 1,
      "text": "n = int and a = int array of size 100010",
      "code": "int a [ 100010 ] , n ;",
      "indent": 1
    },
    {
      "line": 2,
      "text": "read n",
      "code": "cin >> n ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "for i = 1 to n inclusive read a [ i ]",
      "code": "for ( int i = 1 ; i <= n ; i ++ ) cin >> a [ i ] ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "sort all n elements in array a starting at a + 1",
      "code": "sort ( a + 1 , a + n + 1 ) ;",
      "indent": 1
    },
    {
      "line": 5,
      "text": "b , c = int with b = a [ 1 ] and c = a [ n ]",
      "code": "int b = a [ 1 ] , c = a [ n ] ;",
      "indent": 1
    },
    {
      "line": 6,
      "text": "ans = int with ans = 0",
      "code": "int ans = 0 ;",
      "indent": 1
    },
    {
      "line": 7,
      "text": "for i = 1 to n inclusive",
      "code": "for ( int i = 1 ; i <= n ; i ++ )",
      "indent": 1
    },
    {
      "line": 8,
      "text": "if a [ i ] is between b and c then increment ans",
      "code": "if ( b < a [ i ] && a [ i ] < c ) ans ++ ;",
      "indent": 2
    },
    {
      "line": 9,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 10,
      "text": "print ans",
      "code": "cout << ans << endl ;",
      "indent": 1
    },
    {
      "line": 11,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 12,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        5
      ],
      "mod_code": [
        "int c = a [ 1 ] , c = a [ n ] ;"
      ],
      "err_line": 5,
      "err_msg": "redeclaration of ‘int c’"
    },
    {
      "mod_line": [
        7
      ],
      "mod_code": [
        "for ( i = 1 ; i <= n ; i ++ )"
      ],
      "err_line": 7,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        4,
        8,
        7
      ],
      "mod_code": [
        "sort ( a , a + 1 , a ) ;",
        "if ( a [ i ] > b && a [ i ] > c ) { ans ++ ; }",
        "for ( i = 1 ; i <= n ; i ++ )"
      ],
      "err_line": 7,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        4,
        8,
        7,
        6
      ],
      "mod_code": [
        "sort ( a , a + 1 , a ) ;",
        "if ( a [ i ] > b && a [ i ] > c ) { ans ++ ; }",
        "for ( i = 1 ; i <= n ; i ++ )",
        "int * ans = 0 ;"
      ],
      "err_line": 7,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        4,
        7
      ],
      "mod_code": [
        "sort ( a , a + 1 , a ) ;",
        "for ( i = 1 ; i <= n ; i ++ )"
      ],
      "err_line": 7,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        4,
        7,
        8
      ],
      "mod_code": [
        "sort ( a , a + 1 , a ) ;",
        "for ( i = 1 ; i <= n ; i ++ )",
        "if ( a [ i ] > b && a [ i ] > c ) ans ++ ;"
      ],
      "err_line": 7,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        4,
        7,
        8,
        6
      ],
      "mod_code": [
        "sort ( a , a + 1 , a ) ;",
        "for ( i = 1 ; i <= n ; i ++ )",
        "if ( a [ i ] > b && a [ i ] > c ) ans ++ ;",
        "int * ans = 0 ;"
      ],
      "err_line": 7,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        4,
        7,
        6
      ],
      "mod_code": [
        "sort ( a , a + 1 , a ) ;",
        "for ( i = 1 ; i <= n ; i ++ )",
        "int * ans = 0 ;"
      ],
      "err_line": 7,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        8,
        7
      ],
      "mod_code": [
        "if ( a [ i ] > b && a [ i ] > c ) { ans ++ ; }",
        "for ( i = 1 ; i <= n ; i ++ )"
      ],
      "err_line": 7,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        8,
        7,
        4
      ],
      "mod_code": [
        "if ( a [ i ] > b && a [ i ] > c ) { ans ++ ; }",
        "for ( i = 1 ; i <= n ; i ++ )",
        "sort ( a , a + 1 , sizeof ( a ) ) ;"
      ],
      "err_line": 7,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        8,
        7,
        4,
        6
      ],
      "mod_code": [
        "if ( a [ i ] > b && a [ i ] > c ) { ans ++ ; }",
        "for ( i = 1 ; i <= n ; i ++ )",
        "sort ( a , a + 1 , sizeof ( a ) ) ;",
        "int * ans = 0 ;"
      ],
      "err_line": 7,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        8,
        7,
        6
      ],
      "mod_code": [
        "if ( a [ i ] > b && a [ i ] > c ) { ans ++ ; }",
        "for ( i = 1 ; i <= n ; i ++ )",
        "int * ans = 0 ;"
      ],
      "err_line": 7,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        7,
        8
      ],
      "mod_code": [
        "for ( i = 1 ; i <= n ; i ++ )",
        "if ( a [ i ] > b && a [ i ] > c ) ans ++ ;"
      ],
      "err_line": 7,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        7,
        8,
        4
      ],
      "mod_code": [
        "for ( i = 1 ; i <= n ; i ++ )",
        "if ( a [ i ] > b && a [ i ] > c ) ans ++ ;",
        "sort ( a , a + 1 , sizeof ( a ) ) ;"
      ],
      "err_line": 7,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        7,
        8,
        4,
        6
      ],
      "mod_code": [
        "for ( i = 1 ; i <= n ; i ++ )",
        "if ( a [ i ] > b && a [ i ] > c ) ans ++ ;",
        "sort ( a , a + 1 , sizeof ( a ) ) ;",
        "int * ans = 0 ;"
      ],
      "err_line": 7,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        7,
        8,
        6
      ],
      "mod_code": [
        "for ( i = 1 ; i <= n ; i ++ )",
        "if ( a [ i ] > b && a [ i ] > c ) ans ++ ;",
        "int * ans = 0 ;"
      ],
      "err_line": 7,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        7,
        4
      ],
      "mod_code": [
        "for ( i = 1 ; i <= n ; i ++ )",
        "sort ( a , a + 1 , sizeof ( a ) ) ;"
      ],
      "err_line": 7,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        7,
        4,
        6
      ],
      "mod_code": [
        "for ( i = 1 ; i <= n ; i ++ )",
        "sort ( a , a + 1 , sizeof ( a ) ) ;",
        "int * ans = 0 ;"
      ],
      "err_line": 7,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        7,
        6
      ],
      "mod_code": [
        "for ( i = 1 ; i <= n ; i ++ )",
        "int * ans = 0 ;"
      ],
      "err_line": 7,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    }
  ]
}