{
  "meta": {
    "index": 1840,
    "hitid": "3UEDKCTP9VKL6662GWA3PRCY6S4K7W",
    "workerid": "A1APYLD4DUK33J",
    "probid": "513A",
    "subid": "48440498"
  },
  "lines": [
    {
      "line": 0,
      "text": "create constant integer INF with INF = 2000000000",
      "code": "const int INF = 2000000000 ;",
      "indent": 0
    },
    {
      "line": 1,
      "text": "create constant double EPS with EPS = 1e - 9",
      "code": "const double EPS = 1e-9 ;",
      "indent": 0
    },
    {
      "line": 2,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 3,
      "text": "create integers n1 , n2 , k1 , k2",
      "code": "int n1 , n2 , k1 , k2 ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "read n1 read n2 read k1 read k2",
      "code": "cin >> n1 >> n2 >> k1 >> k2 ;",
      "indent": 1
    },
    {
      "line": 5,
      "text": "if n1 is less than or equal to n2",
      "code": "if ( n1 <= n2 )",
      "indent": 1
    },
    {
      "line": 6,
      "text": "print \" Second \\ n \"",
      "code": "cout << \" Second\\n \" ;",
      "indent": 2
    },
    {
      "line": 7,
      "text": "else",
      "code": "else",
      "indent": 1
    },
    {
      "line": 8,
      "text": "print \" First \\ n \"",
      "code": "cout << \" First\\n \" ;",
      "indent": 2
    },
    {
      "line": 9,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        8
      ],
      "mod_code": [
        "<< \" 1\\n \" ;"
      ],
      "err_line": 8,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        6,
        8
      ],
      "mod_code": [
        "cout << \" A\\n \" ;",
        "<< \" 1\\n \" ;"
      ],
      "err_line": 8,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        6,
        8,
        5
      ],
      "mod_code": [
        "cout << \" A\\n \" ;",
        "<< \" 1\\n \" ;",
        "if ( n1 < n2 )"
      ],
      "err_line": 8,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        8,
        5
      ],
      "mod_code": [
        "<< \" 1\\n \" ;",
        "if ( n1 < n2 )"
      ],
      "err_line": 8,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        8,
        5,
        6
      ],
      "mod_code": [
        "<< \" 1\\n \" ;",
        "if ( n1 < n2 )",
        "cout << \" 1\\n \" ;"
      ],
      "err_line": 8,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        8,
        6
      ],
      "mod_code": [
        "<< \" 1\\n \" ;",
        "cout << \" 1\\n \" ;"
      ],
      "err_line": 8,
      "err_msg": "expected primary-expression before ‘<<’ token"
    }
  ]
}