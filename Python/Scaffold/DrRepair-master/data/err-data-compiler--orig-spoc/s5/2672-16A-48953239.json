{
  "meta": {
    "index": 2672,
    "hitid": "3R6RZGK0XF6I11WF29EA4D7CQA5YVO",
    "workerid": "AIWEXPJAU66D9",
    "probid": "16A",
    "subid": "48953239"
  },
  "lines": [
    {
      "line": 0,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 1,
      "text": "create long longs i , j , n and m",
      "code": "long long i , j , n , m ;",
      "indent": 1
    },
    {
      "line": 2,
      "text": "s = 2d array of characters with size 101 by 101",
      "code": "char s [ 101 ] [ 101 ] ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "read n and m from the input in a loop",
      "code": "while ( cin >> n >> m )",
      "indent": 1
    },
    {
      "line": 4,
      "text": "for i = 0 to n exclusive",
      "code": "for ( i = 0 ; i < n ; i ++ )",
      "indent": 2
    },
    {
      "line": 5,
      "text": "for j = 0 to m exclusive read s [ i ] [ j ]",
      "code": "for ( j = 0 ; j < m ; j ++ ) { cin >> s [ i ] [ j ] ; }",
      "indent": 3
    },
    {
      "line": 6,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 7,
      "text": "declare boolean called f = 1",
      "code": "bool f = 1 ;",
      "indent": 2
    },
    {
      "line": 8,
      "text": "for i = 1 to n exclusive",
      "code": "for ( i = 1 ; i < n ; i ++ )",
      "indent": 2
    },
    {
      "line": 9,
      "text": "for j = 0 to m exclusive",
      "code": "for ( j = 0 ; j < m ; j ++ )",
      "indent": 3
    },
    {
      "line": 10,
      "text": "if s [ i ] [ j ] = s [ i - 1 ] [ j ]",
      "code": "if ( s [ i ] [ j ] == s [ i - 1 ] [ j ] )",
      "indent": 4
    },
    {
      "line": 11,
      "text": "set value of f to 0",
      "code": "f = 0 ;",
      "indent": 5
    },
    {
      "line": 12,
      "text": "stop the loop",
      "code": "break ;",
      "indent": 5
    },
    {
      "line": 13,
      "text": "DUMMY",
      "code": "}",
      "indent": 4
    },
    {
      "line": 14,
      "text": "DUMMY",
      "code": "}",
      "indent": 3
    },
    {
      "line": 15,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 16,
      "text": "for i = 0 to n exclusive",
      "code": "for ( i = 0 ; i < n ; i ++ )",
      "indent": 2
    },
    {
      "line": 17,
      "text": "for j = 1 to m exclusive",
      "code": "for ( j = 1 ; j < m ; j ++ )",
      "indent": 3
    },
    {
      "line": 18,
      "text": "if s [ i ] [ j ] ! = s [ i ] [ j - 1 ]",
      "code": "if ( s [ i ] [ j ] != s [ i ] [ j - 1 ] )",
      "indent": 4
    },
    {
      "line": 19,
      "text": "assign value of 0 to the f",
      "code": "f = 0 ;",
      "indent": 5
    },
    {
      "line": 20,
      "text": "break the loop",
      "code": "break ;",
      "indent": 5
    },
    {
      "line": 21,
      "text": "DUMMY",
      "code": "}",
      "indent": 4
    },
    {
      "line": 22,
      "text": "DUMMY",
      "code": "}",
      "indent": 3
    },
    {
      "line": 23,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 24,
      "text": "if f = 1",
      "code": "if ( f == 1 )",
      "indent": 2
    },
    {
      "line": 25,
      "text": "print \" YES \\ n \"",
      "code": "cout << \" YES\\n \" ;",
      "indent": 3
    },
    {
      "line": 26,
      "text": "else",
      "code": "else",
      "indent": 2
    },
    {
      "line": 27,
      "text": "print \" NO \\ n \"",
      "code": "cout << \" NO\\n \" ;",
      "indent": 3
    },
    {
      "line": 28,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 29,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 30,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        2
      ],
      "mod_code": [
        "char arr [ 101 ] [ 101 ] ;"
      ],
      "err_line": 5,
      "err_msg": "‘s’ was not declared in this scope"
    },
    {
      "mod_line": [
        3
      ],
      "mod_code": [
        "while ( { cin >> n >> m )"
      ],
      "err_line": 3,
      "err_msg": "expected primary-expression before ‘{’ token"
    },
    {
      "mod_line": [
        7
      ],
      "mod_code": [
        "bool f = l ;"
      ],
      "err_line": 7,
      "err_msg": "‘l’ was not declared in this scope"
    },
    {
      "mod_line": [
        11
      ],
      "mod_code": [
        "* f = 0 ;"
      ],
      "err_line": 11,
      "err_msg": "invalid type argument of unary ‘*’ (have ‘bool’)"
    },
    {
      "mod_line": [
        12
      ],
      "mod_code": [
        "stop ;"
      ],
      "err_line": 12,
      "err_msg": "‘stop’ was not declared in this scope"
    },
    {
      "mod_line": [
        20
      ],
      "mod_code": [
        "break the ;"
      ],
      "err_line": 20,
      "err_msg": "expected ‘;’ before ‘the’"
    },
    {
      "mod_line": [
        2,
        19
      ],
      "mod_code": [
        "char arr [ 101 ] [ 101 ] ;",
        "int f = 0 ;"
      ],
      "err_line": 5,
      "err_msg": "‘s’ was not declared in this scope"
    },
    {
      "mod_line": [
        2,
        19,
        12
      ],
      "mod_code": [
        "char arr [ 101 ] [ 101 ] ;",
        "int f = 0 ;",
        "stop ;"
      ],
      "err_line": 5,
      "err_msg": "‘s’ was not declared in this scope"
    },
    {
      "mod_line": [
        2,
        19,
        12,
        17
      ],
      "mod_code": [
        "char arr [ 101 ] [ 101 ] ;",
        "int f = 0 ;",
        "stop ;",
        "for ( int j = 1 ; j <= m ; j ++ )"
      ],
      "err_line": 5,
      "err_msg": "‘s’ was not declared in this scope"
    },
    {
      "mod_line": [
        2,
        19,
        12,
        3
      ],
      "mod_code": [
        "char arr [ 101 ] [ 101 ] ;",
        "int f = 0 ;",
        "stop ;",
        "while ( { cin >> n >> m )"
      ],
      "err_line": 3,
      "err_msg": "expected primary-expression before ‘{’ token"
    },
    {
      "mod_line": [
        2,
        19,
        12,
        11
      ],
      "mod_code": [
        "char arr [ 101 ] [ 101 ] ;",
        "int f = 0 ;",
        "stop ;",
        "* f = 0 ;"
      ],
      "err_line": 5,
      "err_msg": "‘s’ was not declared in this scope"
    },
    {
      "mod_line": [
        2,
        19,
        17
      ],
      "mod_code": [
        "char arr [ 101 ] [ 101 ] ;",
        "int f = 0 ;",
        "for ( int j = 1 ; j <= m ; j ++ )"
      ],
      "err_line": 5,
      "err_msg": "‘s’ was not declared in this scope"
    },
    {
      "mod_line": [
        2,
        19,
        17,
        3
      ],
      "mod_code": [
        "char arr [ 101 ] [ 101 ] ;",
        "int f = 0 ;",
        "for ( int j = 1 ; j <= m ; j ++ )",
        "while ( { cin >> n >> m )"
      ],
      "err_line": 3,
      "err_msg": "expected primary-expression before ‘{’ token"
    },
    {
      "mod_line": [
        2,
        19,
        17,
        11
      ],
      "mod_code": [
        "char arr [ 101 ] [ 101 ] ;",
        "int f = 0 ;",
        "for ( int j = 1 ; j <= m ; j ++ )",
        "* f = 0 ;"
      ],
      "err_line": 5,
      "err_msg": "‘s’ was not declared in this scope"
    },
    {
      "mod_line": [
        2,
        19,
        3
      ],
      "mod_code": [
        "char arr [ 101 ] [ 101 ] ;",
        "int f = 0 ;",
        "while ( { cin >> n >> m )"
      ],
      "err_line": 3,
      "err_msg": "expected primary-expression before ‘{’ token"
    },
    {
      "mod_line": [
        2,
        19,
        3,
        11
      ],
      "mod_code": [
        "char arr [ 101 ] [ 101 ] ;",
        "int f = 0 ;",
        "while ( { cin >> n >> m )",
        "* f = 0 ;"
      ],
      "err_line": 3,
      "err_msg": "expected primary-expression before ‘{’ token"
    },
    {
      "mod_line": [
        2,
        19,
        11
      ],
      "mod_code": [
        "char arr [ 101 ] [ 101 ] ;",
        "int f = 0 ;",
        "* f = 0 ;"
      ],
      "err_line": 5,
      "err_msg": "‘s’ was not declared in this scope"
    },
    {
      "mod_line": [
        2,
        12
      ],
      "mod_code": [
        "char arr [ 101 ] [ 101 ] ;",
        "stop ;"
      ],
      "err_line": 5,
      "err_msg": "‘s’ was not declared in this scope"
    },
    {
      "mod_line": [
        2,
        12,
        17
      ],
      "mod_code": [
        "char arr [ 101 ] [ 101 ] ;",
        "stop ;",
        "for ( int j = 1 ; j <= m ; j ++ )"
      ],
      "err_line": 5,
      "err_msg": "‘s’ was not declared in this scope"
    },
    {
      "mod_line": [
        2,
        12,
        17,
        3
      ],
      "mod_code": [
        "char arr [ 101 ] [ 101 ] ;",
        "stop ;",
        "for ( int j = 1 ; j <= m ; j ++ )",
        "while ( { cin >> n >> m )"
      ],
      "err_line": 3,
      "err_msg": "expected primary-expression before ‘{’ token"
    },
    {
      "mod_line": [
        2,
        12,
        17,
        11
      ],
      "mod_code": [
        "char arr [ 101 ] [ 101 ] ;",
        "stop ;",
        "for ( int j = 1 ; j <= m ; j ++ )",
        "* f = 0 ;"
      ],
      "err_line": 5,
      "err_msg": "‘s’ was not declared in this scope"
    },
    {
      "mod_line": [
        2,
        12,
        3
      ],
      "mod_code": [
        "char arr [ 101 ] [ 101 ] ;",
        "stop ;",
        "while ( { cin >> n >> m )"
      ],
      "err_line": 3,
      "err_msg": "expected primary-expression before ‘{’ token"
    },
    {
      "mod_line": [
        2,
        12,
        3,
        11
      ],
      "mod_code": [
        "char arr [ 101 ] [ 101 ] ;",
        "stop ;",
        "while ( { cin >> n >> m )",
        "* f = 0 ;"
      ],
      "err_line": 3,
      "err_msg": "expected primary-expression before ‘{’ token"
    },
    {
      "mod_line": [
        2,
        12,
        11
      ],
      "mod_code": [
        "char arr [ 101 ] [ 101 ] ;",
        "stop ;",
        "* f = 0 ;"
      ],
      "err_line": 5,
      "err_msg": "‘s’ was not declared in this scope"
    },
    {
      "mod_line": [
        2,
        17
      ],
      "mod_code": [
        "char arr [ 101 ] [ 101 ] ;",
        "for ( int j = 1 ; j <= m ; j ++ )"
      ],
      "err_line": 5,
      "err_msg": "‘s’ was not declared in this scope"
    },
    {
      "mod_line": [
        2,
        17,
        3
      ],
      "mod_code": [
        "char arr [ 101 ] [ 101 ] ;",
        "for ( int j = 1 ; j <= m ; j ++ )",
        "while ( { cin >> n >> m )"
      ],
      "err_line": 3,
      "err_msg": "expected primary-expression before ‘{’ token"
    },
    {
      "mod_line": [
        2,
        17,
        3,
        11
      ],
      "mod_code": [
        "char arr [ 101 ] [ 101 ] ;",
        "for ( int j = 1 ; j <= m ; j ++ )",
        "while ( { cin >> n >> m )",
        "* f = 0 ;"
      ],
      "err_line": 3,
      "err_msg": "expected primary-expression before ‘{’ token"
    },
    {
      "mod_line": [
        2,
        17,
        11
      ],
      "mod_code": [
        "char arr [ 101 ] [ 101 ] ;",
        "for ( int j = 1 ; j <= m ; j ++ )",
        "* f = 0 ;"
      ],
      "err_line": 5,
      "err_msg": "‘s’ was not declared in this scope"
    },
    {
      "mod_line": [
        2,
        3
      ],
      "mod_code": [
        "char arr [ 101 ] [ 101 ] ;",
        "while ( { cin >> n >> m )"
      ],
      "err_line": 3,
      "err_msg": "expected primary-expression before ‘{’ token"
    },
    {
      "mod_line": [
        2,
        3,
        11
      ],
      "mod_code": [
        "char arr [ 101 ] [ 101 ] ;",
        "while ( { cin >> n >> m )",
        "* f = 0 ;"
      ],
      "err_line": 3,
      "err_msg": "expected primary-expression before ‘{’ token"
    },
    {
      "mod_line": [
        2,
        11
      ],
      "mod_code": [
        "char arr [ 101 ] [ 101 ] ;",
        "* f = 0 ;"
      ],
      "err_line": 5,
      "err_msg": "‘s’ was not declared in this scope"
    },
    {
      "mod_line": [
        19,
        12
      ],
      "mod_code": [
        "int f = 0 ;",
        "stop ;"
      ],
      "err_line": 12,
      "err_msg": "‘stop’ was not declared in this scope"
    },
    {
      "mod_line": [
        19,
        12,
        17
      ],
      "mod_code": [
        "int f = 0 ;",
        "stop ;",
        "for ( int j = 1 ; j <= m ; j ++ )"
      ],
      "err_line": 12,
      "err_msg": "‘stop’ was not declared in this scope"
    },
    {
      "mod_line": [
        19,
        12,
        17,
        3
      ],
      "mod_code": [
        "int f = 0 ;",
        "stop ;",
        "for ( int j = 1 ; j <= m ; j ++ )",
        "while ( { cin >> n >> m )"
      ],
      "err_line": 3,
      "err_msg": "expected primary-expression before ‘{’ token"
    },
    {
      "mod_line": [
        19,
        12,
        17,
        11
      ],
      "mod_code": [
        "int f = 0 ;",
        "stop ;",
        "for ( int j = 1 ; j <= m ; j ++ )",
        "* f = 0 ;"
      ],
      "err_line": 11,
      "err_msg": "invalid type argument of unary ‘*’ (have ‘bool’)"
    },
    {
      "mod_line": [
        19,
        12,
        3
      ],
      "mod_code": [
        "int f = 0 ;",
        "stop ;",
        "while ( { cin >> n >> m )"
      ],
      "err_line": 3,
      "err_msg": "expected primary-expression before ‘{’ token"
    },
    {
      "mod_line": [
        19,
        12,
        3,
        11
      ],
      "mod_code": [
        "int f = 0 ;",
        "stop ;",
        "while ( { cin >> n >> m )",
        "* f = 0 ;"
      ],
      "err_line": 3,
      "err_msg": "expected primary-expression before ‘{’ token"
    },
    {
      "mod_line": [
        19,
        12,
        11
      ],
      "mod_code": [
        "int f = 0 ;",
        "stop ;",
        "* f = 0 ;"
      ],
      "err_line": 11,
      "err_msg": "invalid type argument of unary ‘*’ (have ‘bool’)"
    },
    {
      "mod_line": [
        19,
        17,
        3
      ],
      "mod_code": [
        "int f = 0 ;",
        "for ( int j = 1 ; j <= m ; j ++ )",
        "while ( { cin >> n >> m )"
      ],
      "err_line": 3,
      "err_msg": "expected primary-expression before ‘{’ token"
    },
    {
      "mod_line": [
        19,
        17,
        3,
        11
      ],
      "mod_code": [
        "int f = 0 ;",
        "for ( int j = 1 ; j <= m ; j ++ )",
        "while ( { cin >> n >> m )",
        "* f = 0 ;"
      ],
      "err_line": 3,
      "err_msg": "expected primary-expression before ‘{’ token"
    },
    {
      "mod_line": [
        19,
        17,
        11
      ],
      "mod_code": [
        "int f = 0 ;",
        "for ( int j = 1 ; j <= m ; j ++ )",
        "* f = 0 ;"
      ],
      "err_line": 11,
      "err_msg": "invalid type argument of unary ‘*’ (have ‘bool’)"
    },
    {
      "mod_line": [
        19,
        3
      ],
      "mod_code": [
        "int f = 0 ;",
        "while ( { cin >> n >> m )"
      ],
      "err_line": 3,
      "err_msg": "expected primary-expression before ‘{’ token"
    },
    {
      "mod_line": [
        19,
        3,
        11
      ],
      "mod_code": [
        "int f = 0 ;",
        "while ( { cin >> n >> m )",
        "* f = 0 ;"
      ],
      "err_line": 3,
      "err_msg": "expected primary-expression before ‘{’ token"
    },
    {
      "mod_line": [
        19,
        11
      ],
      "mod_code": [
        "int f = 0 ;",
        "* f = 0 ;"
      ],
      "err_line": 11,
      "err_msg": "invalid type argument of unary ‘*’ (have ‘bool’)"
    },
    {
      "mod_line": [
        12,
        17
      ],
      "mod_code": [
        "stop ;",
        "for ( int j = 1 ; j <= m ; j ++ )"
      ],
      "err_line": 12,
      "err_msg": "‘stop’ was not declared in this scope"
    },
    {
      "mod_line": [
        12,
        17,
        3
      ],
      "mod_code": [
        "stop ;",
        "for ( int j = 1 ; j <= m ; j ++ )",
        "while ( { cin >> n >> m )"
      ],
      "err_line": 3,
      "err_msg": "expected primary-expression before ‘{’ token"
    },
    {
      "mod_line": [
        12,
        17,
        3,
        11
      ],
      "mod_code": [
        "stop ;",
        "for ( int j = 1 ; j <= m ; j ++ )",
        "while ( { cin >> n >> m )",
        "* f = 0 ;"
      ],
      "err_line": 3,
      "err_msg": "expected primary-expression before ‘{’ token"
    },
    {
      "mod_line": [
        12,
        17,
        11
      ],
      "mod_code": [
        "stop ;",
        "for ( int j = 1 ; j <= m ; j ++ )",
        "* f = 0 ;"
      ],
      "err_line": 11,
      "err_msg": "invalid type argument of unary ‘*’ (have ‘bool’)"
    },
    {
      "mod_line": [
        12,
        3
      ],
      "mod_code": [
        "stop ;",
        "while ( { cin >> n >> m )"
      ],
      "err_line": 3,
      "err_msg": "expected primary-expression before ‘{’ token"
    },
    {
      "mod_line": [
        12,
        3,
        11
      ],
      "mod_code": [
        "stop ;",
        "while ( { cin >> n >> m )",
        "* f = 0 ;"
      ],
      "err_line": 3,
      "err_msg": "expected primary-expression before ‘{’ token"
    },
    {
      "mod_line": [
        12,
        11
      ],
      "mod_code": [
        "stop ;",
        "* f = 0 ;"
      ],
      "err_line": 11,
      "err_msg": "invalid type argument of unary ‘*’ (have ‘bool’)"
    },
    {
      "mod_line": [
        17,
        3
      ],
      "mod_code": [
        "for ( int j = 1 ; j <= m ; j ++ )",
        "while ( { cin >> n >> m )"
      ],
      "err_line": 3,
      "err_msg": "expected primary-expression before ‘{’ token"
    },
    {
      "mod_line": [
        17,
        3,
        11
      ],
      "mod_code": [
        "for ( int j = 1 ; j <= m ; j ++ )",
        "while ( { cin >> n >> m )",
        "* f = 0 ;"
      ],
      "err_line": 3,
      "err_msg": "expected primary-expression before ‘{’ token"
    },
    {
      "mod_line": [
        17,
        11
      ],
      "mod_code": [
        "for ( int j = 1 ; j <= m ; j ++ )",
        "* f = 0 ;"
      ],
      "err_line": 11,
      "err_msg": "invalid type argument of unary ‘*’ (have ‘bool’)"
    },
    {
      "mod_line": [
        3,
        11
      ],
      "mod_code": [
        "while ( { cin >> n >> m )",
        "* f = 0 ;"
      ],
      "err_line": 3,
      "err_msg": "expected primary-expression before ‘{’ token"
    }
  ]
}