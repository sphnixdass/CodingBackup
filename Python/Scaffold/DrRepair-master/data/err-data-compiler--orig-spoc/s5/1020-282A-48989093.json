{
  "meta": {
    "index": 1020,
    "hitid": "3JHB4BPSFK3BVSSQ8YSKZ9FD0OK9QP",
    "workerid": "A1AYVATMT88U1W",
    "probid": "282A",
    "subid": "48989093"
  },
  "lines": [
    {
      "line": 0,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 1,
      "text": "n , x ( 0 ) = integers",
      "code": "int n , x ( 0 ) ;",
      "indent": 1
    },
    {
      "line": 2,
      "text": "read n",
      "code": "cin >> n ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "s = array of characters of length 100",
      "code": "char s [ 100 ] ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "while n is decremented by 1",
      "code": "while ( n -- )",
      "indent": 1
    },
    {
      "line": 5,
      "text": "read s",
      "code": "cin >> s ;",
      "indent": 2
    },
    {
      "line": 6,
      "text": "if ( s [ 1 ] = = ' + ' )",
      "code": "if ( s [ 1 ] == ' + ' )",
      "indent": 2
    },
    {
      "line": 7,
      "text": "increase the value of x by 1",
      "code": "++ x ;",
      "indent": 3
    },
    {
      "line": 8,
      "text": "else",
      "code": "else",
      "indent": 2
    },
    {
      "line": 9,
      "text": "decrease the value of x by 1",
      "code": "-- x ;",
      "indent": 3
    },
    {
      "line": 10,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 11,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 12,
      "text": "print the value of x",
      "code": "cout << x << endl ;",
      "indent": 1
    },
    {
      "line": 13,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 14,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        1
      ],
      "mod_code": [
        "int n , x , 0 ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before numeric constant"
    },
    {
      "mod_line": [
        2
      ],
      "mod_code": [
        "while ( cin >> n )"
      ],
      "err_line": 5,
      "err_msg": "‘s’ was not declared in this scope"
    },
    {
      "mod_line": [
        3
      ],
      "mod_code": [
        "char * s [ 100 ] ;"
      ],
      "err_line": 5,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘char* [100]’)"
    },
    {
      "mod_line": [
        1,
        12
      ],
      "mod_code": [
        "int n , x , 0 ;",
        "cout << x << \" \" << x << endl ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before numeric constant"
    },
    {
      "mod_line": [
        1,
        12,
        5
      ],
      "mod_code": [
        "int n , x , 0 ;",
        "cout << x << \" \" << x << endl ;",
        "cout << s << endl ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before numeric constant"
    },
    {
      "mod_line": [
        1,
        12,
        5,
        2
      ],
      "mod_code": [
        "int n , x , 0 ;",
        "cout << x << \" \" << x << endl ;",
        "cout << s << endl ;",
        "while ( cin >> n )"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before numeric constant"
    },
    {
      "mod_line": [
        1,
        12,
        5,
        3
      ],
      "mod_code": [
        "int n , x , 0 ;",
        "cout << x << \" \" << x << endl ;",
        "cout << s << endl ;",
        "char * s [ 100 ] ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before numeric constant"
    },
    {
      "mod_line": [
        1,
        12,
        5,
        6
      ],
      "mod_code": [
        "int n , x , 0 ;",
        "cout << x << \" \" << x << endl ;",
        "cout << s << endl ;",
        "if ( s [ 1 ] = ' + ' )"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before numeric constant"
    },
    {
      "mod_line": [
        1,
        12,
        2
      ],
      "mod_code": [
        "int n , x , 0 ;",
        "cout << x << \" \" << x << endl ;",
        "while ( cin >> n )"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before numeric constant"
    },
    {
      "mod_line": [
        1,
        12,
        2,
        3
      ],
      "mod_code": [
        "int n , x , 0 ;",
        "cout << x << \" \" << x << endl ;",
        "while ( cin >> n )",
        "char * s [ 100 ] ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before numeric constant"
    },
    {
      "mod_line": [
        1,
        12,
        2,
        6
      ],
      "mod_code": [
        "int n , x , 0 ;",
        "cout << x << \" \" << x << endl ;",
        "while ( cin >> n )",
        "if ( s [ 1 ] = ' + ' )"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before numeric constant"
    },
    {
      "mod_line": [
        1,
        12,
        3
      ],
      "mod_code": [
        "int n , x , 0 ;",
        "cout << x << \" \" << x << endl ;",
        "char * s [ 100 ] ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before numeric constant"
    },
    {
      "mod_line": [
        1,
        12,
        3,
        6
      ],
      "mod_code": [
        "int n , x , 0 ;",
        "cout << x << \" \" << x << endl ;",
        "char * s [ 100 ] ;",
        "if ( s [ 1 ] = ' + ' )"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before numeric constant"
    },
    {
      "mod_line": [
        1,
        12,
        6
      ],
      "mod_code": [
        "int n , x , 0 ;",
        "cout << x << \" \" << x << endl ;",
        "if ( s [ 1 ] = ' + ' )"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before numeric constant"
    },
    {
      "mod_line": [
        1,
        5
      ],
      "mod_code": [
        "int n , x , 0 ;",
        "cout << s << endl ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before numeric constant"
    },
    {
      "mod_line": [
        1,
        5,
        2
      ],
      "mod_code": [
        "int n , x , 0 ;",
        "cout << s << endl ;",
        "while ( cin >> n )"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before numeric constant"
    },
    {
      "mod_line": [
        1,
        5,
        2,
        3
      ],
      "mod_code": [
        "int n , x , 0 ;",
        "cout << s << endl ;",
        "while ( cin >> n )",
        "char * s [ 100 ] ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before numeric constant"
    },
    {
      "mod_line": [
        1,
        5,
        2,
        6
      ],
      "mod_code": [
        "int n , x , 0 ;",
        "cout << s << endl ;",
        "while ( cin >> n )",
        "if ( s [ 1 ] = ' + ' )"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before numeric constant"
    },
    {
      "mod_line": [
        1,
        5,
        3
      ],
      "mod_code": [
        "int n , x , 0 ;",
        "cout << s << endl ;",
        "char * s [ 100 ] ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before numeric constant"
    },
    {
      "mod_line": [
        1,
        5,
        3,
        6
      ],
      "mod_code": [
        "int n , x , 0 ;",
        "cout << s << endl ;",
        "char * s [ 100 ] ;",
        "if ( s [ 1 ] = ' + ' )"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before numeric constant"
    },
    {
      "mod_line": [
        1,
        5,
        6
      ],
      "mod_code": [
        "int n , x , 0 ;",
        "cout << s << endl ;",
        "if ( s [ 1 ] = ' + ' )"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before numeric constant"
    },
    {
      "mod_line": [
        1,
        2
      ],
      "mod_code": [
        "int n , x , 0 ;",
        "while ( cin >> n )"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before numeric constant"
    },
    {
      "mod_line": [
        1,
        2,
        3
      ],
      "mod_code": [
        "int n , x , 0 ;",
        "while ( cin >> n )",
        "char * s [ 100 ] ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before numeric constant"
    },
    {
      "mod_line": [
        1,
        2,
        3,
        6
      ],
      "mod_code": [
        "int n , x , 0 ;",
        "while ( cin >> n )",
        "char * s [ 100 ] ;",
        "if ( s [ 1 ] = ' + ' )"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before numeric constant"
    },
    {
      "mod_line": [
        1,
        2,
        6
      ],
      "mod_code": [
        "int n , x , 0 ;",
        "while ( cin >> n )",
        "if ( s [ 1 ] = ' + ' )"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before numeric constant"
    },
    {
      "mod_line": [
        1,
        3
      ],
      "mod_code": [
        "int n , x , 0 ;",
        "char * s [ 100 ] ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before numeric constant"
    },
    {
      "mod_line": [
        1,
        3,
        6
      ],
      "mod_code": [
        "int n , x , 0 ;",
        "char * s [ 100 ] ;",
        "if ( s [ 1 ] = ' + ' )"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before numeric constant"
    },
    {
      "mod_line": [
        1,
        6
      ],
      "mod_code": [
        "int n , x , 0 ;",
        "if ( s [ 1 ] = ' + ' )"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before numeric constant"
    },
    {
      "mod_line": [
        12,
        5,
        2
      ],
      "mod_code": [
        "cout << x << \" \" << x << endl ;",
        "cout << s << endl ;",
        "while ( cin >> n )"
      ],
      "err_line": 5,
      "err_msg": "‘s’ was not declared in this scope"
    },
    {
      "mod_line": [
        12,
        5,
        2,
        3
      ],
      "mod_code": [
        "cout << x << \" \" << x << endl ;",
        "cout << s << endl ;",
        "while ( cin >> n )",
        "char * s [ 100 ] ;"
      ],
      "err_line": 5,
      "err_msg": "‘s’ was not declared in this scope"
    },
    {
      "mod_line": [
        12,
        5,
        2,
        6
      ],
      "mod_code": [
        "cout << x << \" \" << x << endl ;",
        "cout << s << endl ;",
        "while ( cin >> n )",
        "if ( s [ 1 ] = ' + ' )"
      ],
      "err_line": 5,
      "err_msg": "‘s’ was not declared in this scope"
    },
    {
      "mod_line": [
        12,
        5,
        3
      ],
      "mod_code": [
        "cout << x << \" \" << x << endl ;",
        "cout << s << endl ;",
        "char * s [ 100 ] ;"
      ],
      "err_line": 6,
      "err_msg": "ISO C++ forbids comparison between pointer and integer [-fpermissive]"
    },
    {
      "mod_line": [
        12,
        5,
        3,
        6
      ],
      "mod_code": [
        "cout << x << \" \" << x << endl ;",
        "cout << s << endl ;",
        "char * s [ 100 ] ;",
        "if ( s [ 1 ] = ' + ' )"
      ],
      "err_line": 6,
      "err_msg": "invalid conversion from ‘char’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        12,
        2
      ],
      "mod_code": [
        "cout << x << \" \" << x << endl ;",
        "while ( cin >> n )"
      ],
      "err_line": 5,
      "err_msg": "‘s’ was not declared in this scope"
    },
    {
      "mod_line": [
        12,
        2,
        3
      ],
      "mod_code": [
        "cout << x << \" \" << x << endl ;",
        "while ( cin >> n )",
        "char * s [ 100 ] ;"
      ],
      "err_line": 5,
      "err_msg": "‘s’ was not declared in this scope"
    },
    {
      "mod_line": [
        12,
        2,
        3,
        6
      ],
      "mod_code": [
        "cout << x << \" \" << x << endl ;",
        "while ( cin >> n )",
        "char * s [ 100 ] ;",
        "if ( s [ 1 ] = ' + ' )"
      ],
      "err_line": 5,
      "err_msg": "‘s’ was not declared in this scope"
    },
    {
      "mod_line": [
        12,
        2,
        6
      ],
      "mod_code": [
        "cout << x << \" \" << x << endl ;",
        "while ( cin >> n )",
        "if ( s [ 1 ] = ' + ' )"
      ],
      "err_line": 5,
      "err_msg": "‘s’ was not declared in this scope"
    },
    {
      "mod_line": [
        12,
        3
      ],
      "mod_code": [
        "cout << x << \" \" << x << endl ;",
        "char * s [ 100 ] ;"
      ],
      "err_line": 5,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘char* [100]’)"
    },
    {
      "mod_line": [
        12,
        3,
        6
      ],
      "mod_code": [
        "cout << x << \" \" << x << endl ;",
        "char * s [ 100 ] ;",
        "if ( s [ 1 ] = ' + ' )"
      ],
      "err_line": 5,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘char* [100]’)"
    },
    {
      "mod_line": [
        5,
        2
      ],
      "mod_code": [
        "cout << s << endl ;",
        "while ( cin >> n )"
      ],
      "err_line": 5,
      "err_msg": "‘s’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        2,
        3
      ],
      "mod_code": [
        "cout << s << endl ;",
        "while ( cin >> n )",
        "char * s [ 100 ] ;"
      ],
      "err_line": 5,
      "err_msg": "‘s’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        2,
        3,
        6
      ],
      "mod_code": [
        "cout << s << endl ;",
        "while ( cin >> n )",
        "char * s [ 100 ] ;",
        "if ( s [ 1 ] = ' + ' )"
      ],
      "err_line": 5,
      "err_msg": "‘s’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        2,
        6
      ],
      "mod_code": [
        "cout << s << endl ;",
        "while ( cin >> n )",
        "if ( s [ 1 ] = ' + ' )"
      ],
      "err_line": 5,
      "err_msg": "‘s’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        3
      ],
      "mod_code": [
        "cout << s << endl ;",
        "char * s [ 100 ] ;"
      ],
      "err_line": 6,
      "err_msg": "ISO C++ forbids comparison between pointer and integer [-fpermissive]"
    },
    {
      "mod_line": [
        5,
        3,
        6
      ],
      "mod_code": [
        "cout << s << endl ;",
        "char * s [ 100 ] ;",
        "if ( s [ 1 ] = ' + ' )"
      ],
      "err_line": 6,
      "err_msg": "invalid conversion from ‘char’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        3
      ],
      "mod_code": [
        "while ( cin >> n )",
        "char * s [ 100 ] ;"
      ],
      "err_line": 5,
      "err_msg": "‘s’ was not declared in this scope"
    },
    {
      "mod_line": [
        2,
        3,
        6
      ],
      "mod_code": [
        "while ( cin >> n )",
        "char * s [ 100 ] ;",
        "if ( s [ 1 ] = ' + ' )"
      ],
      "err_line": 5,
      "err_msg": "‘s’ was not declared in this scope"
    },
    {
      "mod_line": [
        2,
        6
      ],
      "mod_code": [
        "while ( cin >> n )",
        "if ( s [ 1 ] = ' + ' )"
      ],
      "err_line": 5,
      "err_msg": "‘s’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        6
      ],
      "mod_code": [
        "char * s [ 100 ] ;",
        "if ( s [ 1 ] = ' + ' )"
      ],
      "err_line": 5,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘char* [100]’)"
    }
  ]
}