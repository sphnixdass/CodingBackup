{
  "meta": {
    "index": 1019,
    "hitid": "3IKDQS3DQEU0CSBA7AX2SXPZFZ7ICD",
    "workerid": "AIWEXPJAU66D9",
    "probid": "282A",
    "subid": "49030216"
  },
  "lines": [
    {
      "line": 0,
      "text": "declare character array bit with size 2",
      "code": "char bit [ 2 ] ;",
      "indent": 0
    },
    {
      "line": 1,
      "text": "declare integer x = 0",
      "code": "int x = 0 ;",
      "indent": 0
    },
    {
      "line": 2,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 3,
      "text": "create integer n",
      "code": "int n ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "read n",
      "code": "cin >> n ;",
      "indent": 1
    },
    {
      "line": 5,
      "text": "for integer i = 0 to n exclusive",
      "code": "for ( int i = 0 ; i < n ; i ++ )",
      "indent": 1
    },
    {
      "line": 6,
      "text": "read 3 elements from the input into bit",
      "code": "for ( int j = 0 ; j <= 2 ; j ++ ) { cin >> bit [ j ] ; }",
      "indent": 2
    },
    {
      "line": 7,
      "text": "if bit [ 1 ] = ' + '",
      "code": "if ( bit [ 1 ] == ' + ' )",
      "indent": 2
    },
    {
      "line": 8,
      "text": "increase x",
      "code": "++ x ;",
      "indent": 3
    },
    {
      "line": 9,
      "text": "else if bit [ 1 ] = ' - '",
      "code": "else if ( bit [ 1 ] == ' - ' )",
      "indent": 2
    },
    {
      "line": 10,
      "text": "decrease x",
      "code": "-- x ;",
      "indent": 3
    },
    {
      "line": 11,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 12,
      "text": "print x and a new line",
      "code": "cout << x << endl ;",
      "indent": 1
    },
    {
      "line": 13,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 14,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        0
      ],
      "mod_code": [
        "char bit [ 2 ] [ 2 ] ;"
      ],
      "err_line": 7,
      "err_msg": "ISO C++ forbids comparison between pointer and integer [-fpermissive]"
    },
    {
      "mod_line": [
        7
      ],
      "mod_code": [
        "if ( bit [ 1 ] ] == ' + ' )"
      ],
      "err_line": 7,
      "err_msg": "expected ‘)’ before ‘]’ token"
    },
    {
      "mod_line": [
        9
      ],
      "mod_code": [
        "else if ( bit [ 1 ] ] == ' - ' )"
      ],
      "err_line": 9,
      "err_msg": "expected ‘)’ before ‘]’ token"
    },
    {
      "mod_line": [
        7,
        0
      ],
      "mod_code": [
        "if ( bit [ 1 ] ] == ' + ' )",
        "char bit [ 2 ] [ 2 ] ;"
      ],
      "err_line": 7,
      "err_msg": "expected ‘)’ before ‘]’ token"
    },
    {
      "mod_line": [
        7,
        0,
        9
      ],
      "mod_code": [
        "if ( bit [ 1 ] ] == ' + ' )",
        "char bit [ 2 ] [ 2 ] ;",
        "else if ( bit [ 1 ] ] == ' - ' )"
      ],
      "err_line": 7,
      "err_msg": "expected ‘)’ before ‘]’ token"
    },
    {
      "mod_line": [
        7,
        9
      ],
      "mod_code": [
        "if ( bit [ 1 ] ] == ' + ' )",
        "else if ( bit [ 1 ] ] == ' - ' )"
      ],
      "err_line": 7,
      "err_msg": "expected ‘)’ before ‘]’ token"
    },
    {
      "mod_line": [
        0,
        9
      ],
      "mod_code": [
        "char bit [ 2 ] [ 2 ] ;",
        "else if ( bit [ 1 ] ] == ' - ' )"
      ],
      "err_line": 7,
      "err_msg": "ISO C++ forbids comparison between pointer and integer [-fpermissive]"
    }
  ]
}