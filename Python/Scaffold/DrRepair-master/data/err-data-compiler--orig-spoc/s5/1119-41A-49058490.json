{
  "meta": {
    "index": 1119,
    "hitid": "30Y6N4AHYPQNAJK7XTMMQV88NGNDR3",
    "workerid": "AIWEXPJAU66D9",
    "probid": "41A",
    "subid": "49058490"
  },
  "lines": [
    {
      "line": 0,
      "text": "define function reverseStr",
      "code": "void reverseStr ( string & str )",
      "indent": 0
    },
    {
      "line": 1,
      "text": "integer n = length of str",
      "code": "int n = str . length ( ) ;",
      "indent": 1
    },
    {
      "line": 2,
      "text": "for integer i = 0 to n / 2 exclusive , swap symbols at str [ i ] and str [ n - i - 1 ]",
      "code": "for ( int i = 0 ; i < n / 2 ; i ++ ) swap ( str [ i ] , str [ n - i - 1 ] ) ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    },
    {
      "line": 4,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 5,
      "text": "declare strings called s1 and s2",
      "code": "string s1 , s2 ;",
      "indent": 1
    },
    {
      "line": 6,
      "text": "read s1",
      "code": "cin >> s1 ;",
      "indent": 1
    },
    {
      "line": 7,
      "text": "read s2",
      "code": "cin >> s2 ;",
      "indent": 1
    },
    {
      "line": 8,
      "text": "call function reverseStr of s1",
      "code": "reverseStr ( s1 ) ;",
      "indent": 1
    },
    {
      "line": 9,
      "text": "if s2 is equal to s1",
      "code": "if ( s2 == s1 )",
      "indent": 1
    },
    {
      "line": 10,
      "text": "print \" YES \" and a new line",
      "code": "cout << \" YES \" << endl ;",
      "indent": 2
    },
    {
      "line": 11,
      "text": "else",
      "code": "else",
      "indent": 1
    },
    {
      "line": 12,
      "text": "print \" NO \" and a new line",
      "code": "cout << \" NO \" << endl ;",
      "indent": 2
    },
    {
      "line": 13,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 14,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        0
      ],
      "mod_code": [
        "void reverseStr ( )"
      ],
      "err_line": 1,
      "err_msg": "‘str’ was not declared in this scope"
    },
    {
      "mod_line": [
        0
      ],
      "mod_code": [
        "void reverseStr ( ) { }"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        5
      ],
      "mod_code": [
        "string s1 declare s2 ;"
      ],
      "err_line": 5,
      "err_msg": "expected initializer before ‘declare’"
    },
    {
      "mod_line": [
        6
      ],
      "mod_code": [
        "gets ( s1 ) ;"
      ],
      "err_line": 6,
      "err_msg": "cannot convert ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ to ‘char*’ for argument ‘1’ to ‘char* gets(char*)’"
    },
    {
      "mod_line": [
        8
      ],
      "mod_code": [
        "s1 ( s1 ) ;"
      ],
      "err_line": 8,
      "err_msg": "no match for call to ‘(std::__cxx11::string {aka std::__cxx11::basic_string<char>}) (std::__cxx11::string&)’"
    },
    {
      "mod_line": [
        9
      ],
      "mod_code": [
        "if ( s2 == ' s1 ' )"
      ],
      "err_line": 9,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        0,
        5
      ],
      "mod_code": [
        "void reverseStr ( )",
        "string s1 declare s2 ;"
      ],
      "err_line": 1,
      "err_msg": "‘str’ was not declared in this scope"
    },
    {
      "mod_line": [
        0,
        5,
        8
      ],
      "mod_code": [
        "void reverseStr ( )",
        "string s1 declare s2 ;",
        "s1 ( s1 ) ;"
      ],
      "err_line": 1,
      "err_msg": "‘str’ was not declared in this scope"
    },
    {
      "mod_line": [
        0,
        5,
        8,
        9
      ],
      "mod_code": [
        "void reverseStr ( )",
        "string s1 declare s2 ;",
        "s1 ( s1 ) ;",
        "if ( s2 == ' s1 ' )"
      ],
      "err_line": 1,
      "err_msg": "‘str’ was not declared in this scope"
    },
    {
      "mod_line": [
        0,
        5,
        8,
        6
      ],
      "mod_code": [
        "void reverseStr ( )",
        "string s1 declare s2 ;",
        "s1 ( s1 ) ;",
        "gets ( s1 ) ;"
      ],
      "err_line": 1,
      "err_msg": "‘str’ was not declared in this scope"
    },
    {
      "mod_line": [
        0,
        5,
        9
      ],
      "mod_code": [
        "void reverseStr ( )",
        "string s1 declare s2 ;",
        "if ( s2 == ' s1 ' )"
      ],
      "err_line": 1,
      "err_msg": "‘str’ was not declared in this scope"
    },
    {
      "mod_line": [
        0,
        5,
        9,
        6
      ],
      "mod_code": [
        "void reverseStr ( )",
        "string s1 declare s2 ;",
        "if ( s2 == ' s1 ' )",
        "gets ( s1 ) ;"
      ],
      "err_line": 1,
      "err_msg": "‘str’ was not declared in this scope"
    },
    {
      "mod_line": [
        0,
        5,
        6
      ],
      "mod_code": [
        "void reverseStr ( )",
        "string s1 declare s2 ;",
        "gets ( s1 ) ;"
      ],
      "err_line": 1,
      "err_msg": "‘str’ was not declared in this scope"
    },
    {
      "mod_line": [
        0,
        8
      ],
      "mod_code": [
        "void reverseStr ( )",
        "s1 ( s1 ) ;"
      ],
      "err_line": 1,
      "err_msg": "‘str’ was not declared in this scope"
    },
    {
      "mod_line": [
        0,
        8,
        9
      ],
      "mod_code": [
        "void reverseStr ( )",
        "s1 ( s1 ) ;",
        "if ( s2 == ' s1 ' )"
      ],
      "err_line": 1,
      "err_msg": "‘str’ was not declared in this scope"
    },
    {
      "mod_line": [
        0,
        8,
        9,
        6
      ],
      "mod_code": [
        "void reverseStr ( )",
        "s1 ( s1 ) ;",
        "if ( s2 == ' s1 ' )",
        "gets ( s1 ) ;"
      ],
      "err_line": 1,
      "err_msg": "‘str’ was not declared in this scope"
    },
    {
      "mod_line": [
        0,
        8,
        6
      ],
      "mod_code": [
        "void reverseStr ( )",
        "s1 ( s1 ) ;",
        "gets ( s1 ) ;"
      ],
      "err_line": 1,
      "err_msg": "‘str’ was not declared in this scope"
    },
    {
      "mod_line": [
        0,
        9
      ],
      "mod_code": [
        "void reverseStr ( )",
        "if ( s2 == ' s1 ' )"
      ],
      "err_line": 1,
      "err_msg": "‘str’ was not declared in this scope"
    },
    {
      "mod_line": [
        0,
        9,
        6
      ],
      "mod_code": [
        "void reverseStr ( )",
        "if ( s2 == ' s1 ' )",
        "gets ( s1 ) ;"
      ],
      "err_line": 1,
      "err_msg": "‘str’ was not declared in this scope"
    },
    {
      "mod_line": [
        0,
        6
      ],
      "mod_code": [
        "void reverseStr ( )",
        "gets ( s1 ) ;"
      ],
      "err_line": 1,
      "err_msg": "‘str’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        8
      ],
      "mod_code": [
        "string s1 declare s2 ;",
        "s1 ( s1 ) ;"
      ],
      "err_line": 5,
      "err_msg": "expected initializer before ‘declare’"
    },
    {
      "mod_line": [
        5,
        8,
        0
      ],
      "mod_code": [
        "string s1 declare s2 ;",
        "s1 ( s1 ) ;",
        "void reverseStr ( ) { }"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        5,
        8,
        0,
        9
      ],
      "mod_code": [
        "string s1 declare s2 ;",
        "s1 ( s1 ) ;",
        "void reverseStr ( ) { }",
        "if ( s2 == ' s1 ' )"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        5,
        8,
        0,
        6
      ],
      "mod_code": [
        "string s1 declare s2 ;",
        "s1 ( s1 ) ;",
        "void reverseStr ( ) { }",
        "gets ( s1 ) ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        5,
        8,
        9
      ],
      "mod_code": [
        "string s1 declare s2 ;",
        "s1 ( s1 ) ;",
        "if ( s2 == ' s1 ' )"
      ],
      "err_line": 5,
      "err_msg": "expected initializer before ‘declare’"
    },
    {
      "mod_line": [
        5,
        8,
        9,
        6
      ],
      "mod_code": [
        "string s1 declare s2 ;",
        "s1 ( s1 ) ;",
        "if ( s2 == ' s1 ' )",
        "gets ( s1 ) ;"
      ],
      "err_line": 5,
      "err_msg": "expected initializer before ‘declare’"
    },
    {
      "mod_line": [
        5,
        8,
        6
      ],
      "mod_code": [
        "string s1 declare s2 ;",
        "s1 ( s1 ) ;",
        "gets ( s1 ) ;"
      ],
      "err_line": 5,
      "err_msg": "expected initializer before ‘declare’"
    },
    {
      "mod_line": [
        5,
        0
      ],
      "mod_code": [
        "string s1 declare s2 ;",
        "void reverseStr ( ) { }"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        5,
        0,
        9
      ],
      "mod_code": [
        "string s1 declare s2 ;",
        "void reverseStr ( ) { }",
        "if ( s2 == ' s1 ' )"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        5,
        0,
        9,
        6
      ],
      "mod_code": [
        "string s1 declare s2 ;",
        "void reverseStr ( ) { }",
        "if ( s2 == ' s1 ' )",
        "gets ( s1 ) ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        5,
        0,
        6
      ],
      "mod_code": [
        "string s1 declare s2 ;",
        "void reverseStr ( ) { }",
        "gets ( s1 ) ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        5,
        9
      ],
      "mod_code": [
        "string s1 declare s2 ;",
        "if ( s2 == ' s1 ' )"
      ],
      "err_line": 5,
      "err_msg": "expected initializer before ‘declare’"
    },
    {
      "mod_line": [
        5,
        9,
        6
      ],
      "mod_code": [
        "string s1 declare s2 ;",
        "if ( s2 == ' s1 ' )",
        "gets ( s1 ) ;"
      ],
      "err_line": 5,
      "err_msg": "expected initializer before ‘declare’"
    },
    {
      "mod_line": [
        5,
        6
      ],
      "mod_code": [
        "string s1 declare s2 ;",
        "gets ( s1 ) ;"
      ],
      "err_line": 5,
      "err_msg": "expected initializer before ‘declare’"
    },
    {
      "mod_line": [
        8,
        0
      ],
      "mod_code": [
        "s1 ( s1 ) ;",
        "void reverseStr ( ) { }"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        8,
        0,
        9
      ],
      "mod_code": [
        "s1 ( s1 ) ;",
        "void reverseStr ( ) { }",
        "if ( s2 == ' s1 ' )"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        8,
        0,
        9,
        6
      ],
      "mod_code": [
        "s1 ( s1 ) ;",
        "void reverseStr ( ) { }",
        "if ( s2 == ' s1 ' )",
        "gets ( s1 ) ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        8,
        0,
        6
      ],
      "mod_code": [
        "s1 ( s1 ) ;",
        "void reverseStr ( ) { }",
        "gets ( s1 ) ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        8,
        9
      ],
      "mod_code": [
        "s1 ( s1 ) ;",
        "if ( s2 == ' s1 ' )"
      ],
      "err_line": 8,
      "err_msg": "no match for call to ‘(std::__cxx11::string {aka std::__cxx11::basic_string<char>}) (std::__cxx11::string&)’"
    },
    {
      "mod_line": [
        8,
        9,
        6
      ],
      "mod_code": [
        "s1 ( s1 ) ;",
        "if ( s2 == ' s1 ' )",
        "gets ( s1 ) ;"
      ],
      "err_line": 6,
      "err_msg": "cannot convert ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ to ‘char*’ for argument ‘1’ to ‘char* gets(char*)’"
    },
    {
      "mod_line": [
        8,
        6
      ],
      "mod_code": [
        "s1 ( s1 ) ;",
        "gets ( s1 ) ;"
      ],
      "err_line": 6,
      "err_msg": "cannot convert ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ to ‘char*’ for argument ‘1’ to ‘char* gets(char*)’"
    },
    {
      "mod_line": [
        0,
        9
      ],
      "mod_code": [
        "void reverseStr ( ) { }",
        "if ( s2 == ' s1 ' )"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        0,
        9,
        6
      ],
      "mod_code": [
        "void reverseStr ( ) { }",
        "if ( s2 == ' s1 ' )",
        "gets ( s1 ) ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        0,
        6
      ],
      "mod_code": [
        "void reverseStr ( ) { }",
        "gets ( s1 ) ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        9,
        6
      ],
      "mod_code": [
        "if ( s2 == ' s1 ' )",
        "gets ( s1 ) ;"
      ],
      "err_line": 6,
      "err_msg": "cannot convert ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ to ‘char*’ for argument ‘1’ to ‘char* gets(char*)’"
    }
  ]
}