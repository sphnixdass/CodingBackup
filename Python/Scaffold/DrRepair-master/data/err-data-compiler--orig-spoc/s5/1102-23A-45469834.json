{
  "meta": {
    "index": 1102,
    "hitid": "3NQUW096N6204VCDGTKOINGJR50L9Q",
    "workerid": "A1AYVATMT88U1W",
    "probid": "23A",
    "subid": "45469834"
  },
  "lines": [
    {
      "line": 0,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 1,
      "text": "str is a string",
      "code": "string str ;",
      "indent": 1
    },
    {
      "line": 2,
      "text": "read str",
      "code": "cin >> str ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "count equals integer 0",
      "code": "int count = 0 ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "for i = str . size ( ) - 1 to 0 exclusive",
      "code": "for ( size_t i = str . size ( ) - 1 ; i > 0 ; -- i )",
      "indent": 1
    },
    {
      "line": 5,
      "text": "integer j equals 0",
      "code": "int j = 0 ;",
      "indent": 2
    },
    {
      "line": 6,
      "text": "while j + i less than or equal to str . size ( )",
      "code": "while ( j + i <= str . size ( ) )",
      "indent": 2
    },
    {
      "line": 7,
      "text": "string sub equals str . substr ( j , i )",
      "code": "string sub = str . substr ( j , i ) ;",
      "indent": 3
    },
    {
      "line": 8,
      "text": "pos equals integer 0",
      "code": "int pos = 0 ;",
      "indent": 3
    },
    {
      "line": 9,
      "text": "while pos + i less than or equal to str . size ( )",
      "code": "while ( pos + i <= str . size ( ) )",
      "indent": 3
    },
    {
      "line": 10,
      "text": "if ( pos = str . find ( sub , pos ) ) not equal to string : : npos",
      "code": "if ( ( pos = str . find ( sub , pos ) ) != string :: npos )",
      "indent": 4
    },
    {
      "line": 11,
      "text": "increase count by 1",
      "code": "count ++ ;",
      "indent": 5
    },
    {
      "line": 12,
      "text": "else",
      "code": "else",
      "indent": 4
    },
    {
      "line": 13,
      "text": "stop",
      "code": "break ;",
      "indent": 5
    },
    {
      "line": 14,
      "text": "DUMMY",
      "code": "}",
      "indent": 4
    },
    {
      "line": 15,
      "text": "increase value of pos by 1",
      "code": "pos ++ ;",
      "indent": 4
    },
    {
      "line": 16,
      "text": "DUMMY",
      "code": "}",
      "indent": 3
    },
    {
      "line": 17,
      "text": "if count is greater than or equal to 2",
      "code": "if ( count >= 2 )",
      "indent": 3
    },
    {
      "line": 18,
      "text": "print sub . length ( ) and endline",
      "code": "cout << sub . length ( ) << endl ;",
      "indent": 4
    },
    {
      "line": 19,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 4
    },
    {
      "line": 20,
      "text": "DUMMY",
      "code": "}",
      "indent": 3
    },
    {
      "line": 21,
      "text": "count equals 0",
      "code": "count = 0 ;",
      "indent": 3
    },
    {
      "line": 22,
      "text": "increase j by 1",
      "code": "j ++ ;",
      "indent": 3
    },
    {
      "line": 23,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 24,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 25,
      "text": "print 0 and newline",
      "code": "cout << 0 << endl ;",
      "indent": 1
    },
    {
      "line": 26,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 27,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        10
      ],
      "mod_code": [
        "if ( ( pos = str . find ( sub , pos ) ) != string . npos )"
      ],
      "err_line": 10,
      "err_msg": "expected primary-expression before ‘.’ token"
    },
    {
      "mod_line": [
        1
      ],
      "mod_code": [
        "char str ;"
      ],
      "err_line": 4,
      "err_msg": "request for member ‘size’ in ‘str’, which is of non-class type ‘char’"
    },
    {
      "mod_line": [
        2
      ],
      "mod_code": [
        "gets ( str ) ;"
      ],
      "err_line": 2,
      "err_msg": "cannot convert ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ to ‘char*’ for argument ‘1’ to ‘char* gets(char*)’"
    },
    {
      "mod_line": [
        5
      ],
      "mod_code": [
        "int j equals 0 ;"
      ],
      "err_line": 5,
      "err_msg": "expected initializer before ‘equals’"
    },
    {
      "mod_line": [
        10
      ],
      "mod_code": [
        "if ( ( pos = str . find ( sub , pos ) ) != string : npos )"
      ],
      "err_line": 10,
      "err_msg": "found ‘:’ in nested-name-specifier, expected ‘::’"
    },
    {
      "mod_line": [
        13
      ],
      "mod_code": [
        "stop ;"
      ],
      "err_line": 13,
      "err_msg": "‘stop’ was not declared in this scope"
    },
    {
      "mod_line": [
        10,
        8
      ],
      "mod_code": [
        "if ( ( pos = str . find ( sub , pos ) ) != string . npos )",
        "int pos = 1 ;"
      ],
      "err_line": 10,
      "err_msg": "expected primary-expression before ‘.’ token"
    },
    {
      "mod_line": [
        10,
        8,
        5
      ],
      "mod_code": [
        "if ( ( pos = str . find ( sub , pos ) ) != string . npos )",
        "int pos = 1 ;",
        "int j equals 0 ;"
      ],
      "err_line": 5,
      "err_msg": "expected initializer before ‘equals’"
    },
    {
      "mod_line": [
        10,
        8,
        5,
        21
      ],
      "mod_code": [
        "if ( ( pos = str . find ( sub , pos ) ) != string . npos )",
        "int pos = 1 ;",
        "int j equals 0 ;",
        "int count = 0 ;"
      ],
      "err_line": 5,
      "err_msg": "expected initializer before ‘equals’"
    },
    {
      "mod_line": [
        10,
        8,
        5,
        9
      ],
      "mod_code": [
        "if ( ( pos = str . find ( sub , pos ) ) != string . npos )",
        "int pos = 1 ;",
        "int j equals 0 ;",
        "while ( pos + i <= str . size ( ) ) ;"
      ],
      "err_line": 5,
      "err_msg": "expected initializer before ‘equals’"
    },
    {
      "mod_line": [
        10,
        8,
        5,
        17
      ],
      "mod_code": [
        "if ( ( pos = str . find ( sub , pos ) ) != string . npos )",
        "int pos = 1 ;",
        "int j equals 0 ;",
        "if ( count > 2 )"
      ],
      "err_line": 5,
      "err_msg": "expected initializer before ‘equals’"
    },
    {
      "mod_line": [
        10,
        8,
        21
      ],
      "mod_code": [
        "if ( ( pos = str . find ( sub , pos ) ) != string . npos )",
        "int pos = 1 ;",
        "int count = 0 ;"
      ],
      "err_line": 10,
      "err_msg": "expected primary-expression before ‘.’ token"
    },
    {
      "mod_line": [
        10,
        8,
        21,
        9
      ],
      "mod_code": [
        "if ( ( pos = str . find ( sub , pos ) ) != string . npos )",
        "int pos = 1 ;",
        "int count = 0 ;",
        "while ( pos + i <= str . size ( ) ) ;"
      ],
      "err_line": 10,
      "err_msg": "expected primary-expression before ‘.’ token"
    },
    {
      "mod_line": [
        10,
        8,
        21,
        17
      ],
      "mod_code": [
        "if ( ( pos = str . find ( sub , pos ) ) != string . npos )",
        "int pos = 1 ;",
        "int count = 0 ;",
        "if ( count > 2 )"
      ],
      "err_line": 10,
      "err_msg": "expected primary-expression before ‘.’ token"
    },
    {
      "mod_line": [
        10,
        8,
        9
      ],
      "mod_code": [
        "if ( ( pos = str . find ( sub , pos ) ) != string . npos )",
        "int pos = 1 ;",
        "while ( pos + i <= str . size ( ) ) ;"
      ],
      "err_line": 10,
      "err_msg": "expected primary-expression before ‘.’ token"
    },
    {
      "mod_line": [
        10,
        8,
        9,
        17
      ],
      "mod_code": [
        "if ( ( pos = str . find ( sub , pos ) ) != string . npos )",
        "int pos = 1 ;",
        "while ( pos + i <= str . size ( ) ) ;",
        "if ( count > 2 )"
      ],
      "err_line": 10,
      "err_msg": "expected primary-expression before ‘.’ token"
    },
    {
      "mod_line": [
        10,
        8,
        17
      ],
      "mod_code": [
        "if ( ( pos = str . find ( sub , pos ) ) != string . npos )",
        "int pos = 1 ;",
        "if ( count > 2 )"
      ],
      "err_line": 10,
      "err_msg": "expected primary-expression before ‘.’ token"
    },
    {
      "mod_line": [
        10,
        5
      ],
      "mod_code": [
        "if ( ( pos = str . find ( sub , pos ) ) != string . npos )",
        "int j equals 0 ;"
      ],
      "err_line": 5,
      "err_msg": "expected initializer before ‘equals’"
    },
    {
      "mod_line": [
        10,
        5,
        21
      ],
      "mod_code": [
        "if ( ( pos = str . find ( sub , pos ) ) != string . npos )",
        "int j equals 0 ;",
        "int count = 0 ;"
      ],
      "err_line": 5,
      "err_msg": "expected initializer before ‘equals’"
    },
    {
      "mod_line": [
        10,
        5,
        21,
        9
      ],
      "mod_code": [
        "if ( ( pos = str . find ( sub , pos ) ) != string . npos )",
        "int j equals 0 ;",
        "int count = 0 ;",
        "while ( pos + i <= str . size ( ) ) ;"
      ],
      "err_line": 5,
      "err_msg": "expected initializer before ‘equals’"
    },
    {
      "mod_line": [
        10,
        5,
        21,
        17
      ],
      "mod_code": [
        "if ( ( pos = str . find ( sub , pos ) ) != string . npos )",
        "int j equals 0 ;",
        "int count = 0 ;",
        "if ( count > 2 )"
      ],
      "err_line": 5,
      "err_msg": "expected initializer before ‘equals’"
    },
    {
      "mod_line": [
        10,
        5,
        9
      ],
      "mod_code": [
        "if ( ( pos = str . find ( sub , pos ) ) != string . npos )",
        "int j equals 0 ;",
        "while ( pos + i <= str . size ( ) ) ;"
      ],
      "err_line": 5,
      "err_msg": "expected initializer before ‘equals’"
    },
    {
      "mod_line": [
        10,
        5,
        9,
        17
      ],
      "mod_code": [
        "if ( ( pos = str . find ( sub , pos ) ) != string . npos )",
        "int j equals 0 ;",
        "while ( pos + i <= str . size ( ) ) ;",
        "if ( count > 2 )"
      ],
      "err_line": 5,
      "err_msg": "expected initializer before ‘equals’"
    },
    {
      "mod_line": [
        10,
        5,
        17
      ],
      "mod_code": [
        "if ( ( pos = str . find ( sub , pos ) ) != string . npos )",
        "int j equals 0 ;",
        "if ( count > 2 )"
      ],
      "err_line": 5,
      "err_msg": "expected initializer before ‘equals’"
    },
    {
      "mod_line": [
        10,
        21
      ],
      "mod_code": [
        "if ( ( pos = str . find ( sub , pos ) ) != string . npos )",
        "int count = 0 ;"
      ],
      "err_line": 10,
      "err_msg": "expected primary-expression before ‘.’ token"
    },
    {
      "mod_line": [
        10,
        21,
        9
      ],
      "mod_code": [
        "if ( ( pos = str . find ( sub , pos ) ) != string . npos )",
        "int count = 0 ;",
        "while ( pos + i <= str . size ( ) ) ;"
      ],
      "err_line": 10,
      "err_msg": "expected primary-expression before ‘.’ token"
    },
    {
      "mod_line": [
        10,
        21,
        9,
        17
      ],
      "mod_code": [
        "if ( ( pos = str . find ( sub , pos ) ) != string . npos )",
        "int count = 0 ;",
        "while ( pos + i <= str . size ( ) ) ;",
        "if ( count > 2 )"
      ],
      "err_line": 10,
      "err_msg": "expected primary-expression before ‘.’ token"
    },
    {
      "mod_line": [
        10,
        21,
        17
      ],
      "mod_code": [
        "if ( ( pos = str . find ( sub , pos ) ) != string . npos )",
        "int count = 0 ;",
        "if ( count > 2 )"
      ],
      "err_line": 10,
      "err_msg": "expected primary-expression before ‘.’ token"
    },
    {
      "mod_line": [
        10,
        9
      ],
      "mod_code": [
        "if ( ( pos = str . find ( sub , pos ) ) != string . npos )",
        "while ( pos + i <= str . size ( ) ) ;"
      ],
      "err_line": 10,
      "err_msg": "expected primary-expression before ‘.’ token"
    },
    {
      "mod_line": [
        10,
        9,
        17
      ],
      "mod_code": [
        "if ( ( pos = str . find ( sub , pos ) ) != string . npos )",
        "while ( pos + i <= str . size ( ) ) ;",
        "if ( count > 2 )"
      ],
      "err_line": 10,
      "err_msg": "expected primary-expression before ‘.’ token"
    },
    {
      "mod_line": [
        10,
        17
      ],
      "mod_code": [
        "if ( ( pos = str . find ( sub , pos ) ) != string . npos )",
        "if ( count > 2 )"
      ],
      "err_line": 10,
      "err_msg": "expected primary-expression before ‘.’ token"
    },
    {
      "mod_line": [
        8,
        5
      ],
      "mod_code": [
        "int pos = 1 ;",
        "int j equals 0 ;"
      ],
      "err_line": 5,
      "err_msg": "expected initializer before ‘equals’"
    },
    {
      "mod_line": [
        8,
        5,
        21
      ],
      "mod_code": [
        "int pos = 1 ;",
        "int j equals 0 ;",
        "int count = 0 ;"
      ],
      "err_line": 5,
      "err_msg": "expected initializer before ‘equals’"
    },
    {
      "mod_line": [
        8,
        5,
        21,
        9
      ],
      "mod_code": [
        "int pos = 1 ;",
        "int j equals 0 ;",
        "int count = 0 ;",
        "while ( pos + i <= str . size ( ) ) ;"
      ],
      "err_line": 5,
      "err_msg": "expected initializer before ‘equals’"
    },
    {
      "mod_line": [
        8,
        5,
        21,
        17
      ],
      "mod_code": [
        "int pos = 1 ;",
        "int j equals 0 ;",
        "int count = 0 ;",
        "if ( count > 2 )"
      ],
      "err_line": 5,
      "err_msg": "expected initializer before ‘equals’"
    },
    {
      "mod_line": [
        8,
        5,
        9
      ],
      "mod_code": [
        "int pos = 1 ;",
        "int j equals 0 ;",
        "while ( pos + i <= str . size ( ) ) ;"
      ],
      "err_line": 5,
      "err_msg": "expected initializer before ‘equals’"
    },
    {
      "mod_line": [
        8,
        5,
        9,
        17
      ],
      "mod_code": [
        "int pos = 1 ;",
        "int j equals 0 ;",
        "while ( pos + i <= str . size ( ) ) ;",
        "if ( count > 2 )"
      ],
      "err_line": 5,
      "err_msg": "expected initializer before ‘equals’"
    },
    {
      "mod_line": [
        8,
        5,
        17
      ],
      "mod_code": [
        "int pos = 1 ;",
        "int j equals 0 ;",
        "if ( count > 2 )"
      ],
      "err_line": 5,
      "err_msg": "expected initializer before ‘equals’"
    },
    {
      "mod_line": [
        5,
        21
      ],
      "mod_code": [
        "int j equals 0 ;",
        "int count = 0 ;"
      ],
      "err_line": 5,
      "err_msg": "expected initializer before ‘equals’"
    },
    {
      "mod_line": [
        5,
        21,
        9
      ],
      "mod_code": [
        "int j equals 0 ;",
        "int count = 0 ;",
        "while ( pos + i <= str . size ( ) ) ;"
      ],
      "err_line": 5,
      "err_msg": "expected initializer before ‘equals’"
    },
    {
      "mod_line": [
        5,
        21,
        9,
        17
      ],
      "mod_code": [
        "int j equals 0 ;",
        "int count = 0 ;",
        "while ( pos + i <= str . size ( ) ) ;",
        "if ( count > 2 )"
      ],
      "err_line": 5,
      "err_msg": "expected initializer before ‘equals’"
    },
    {
      "mod_line": [
        5,
        21,
        17
      ],
      "mod_code": [
        "int j equals 0 ;",
        "int count = 0 ;",
        "if ( count > 2 )"
      ],
      "err_line": 5,
      "err_msg": "expected initializer before ‘equals’"
    },
    {
      "mod_line": [
        5,
        9
      ],
      "mod_code": [
        "int j equals 0 ;",
        "while ( pos + i <= str . size ( ) ) ;"
      ],
      "err_line": 5,
      "err_msg": "expected initializer before ‘equals’"
    },
    {
      "mod_line": [
        5,
        9,
        17
      ],
      "mod_code": [
        "int j equals 0 ;",
        "while ( pos + i <= str . size ( ) ) ;",
        "if ( count > 2 )"
      ],
      "err_line": 5,
      "err_msg": "expected initializer before ‘equals’"
    },
    {
      "mod_line": [
        5,
        17
      ],
      "mod_code": [
        "int j equals 0 ;",
        "if ( count > 2 )"
      ],
      "err_line": 5,
      "err_msg": "expected initializer before ‘equals’"
    }
  ]
}