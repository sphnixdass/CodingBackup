{
  "meta": {
    "index": 2005,
    "hitid": "3INZSNUD80KH6JOL3CM0ZA8EIWY9DY",
    "workerid": "A2QLFQ2ZYR6B7M",
    "probid": "1027A",
    "subid": "48559560"
  },
  "lines": [
    {
      "line": 0,
      "text": "n , m = int",
      "code": "int n , m ;",
      "indent": 0
    },
    {
      "line": 1,
      "text": "s = string",
      "code": "string s ;",
      "indent": 0
    },
    {
      "line": 2,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 3,
      "text": "while read n",
      "code": "while ( cin >> n )",
      "indent": 1
    },
    {
      "line": 4,
      "text": "for k = 0 to n exclusive",
      "code": "for ( int k = 0 ; k < n ; k ++ )",
      "indent": 2
    },
    {
      "line": 5,
      "text": "read m , s",
      "code": "cin >> m >> s ;",
      "indent": 3
    },
    {
      "line": 6,
      "text": "ans = 0",
      "code": "int ans = 0 ;",
      "indent": 3
    },
    {
      "line": 7,
      "text": "for i = 0 to m / 2 exclusive",
      "code": "for ( int i = 0 ; i < m / 2 ; i ++ )",
      "indent": 3
    },
    {
      "line": 8,
      "text": "if s [ i ] is s [ m - i - 1 ] or abs ( s [ i ] - s [ m - i - 1 ] ) is 2 increment ans",
      "code": "if ( s [ i ] == s [ m - i - 1 ] || ( int ) abs ( s [ i ] - s [ m - i - 1 ] ) == 2 ) ans ++ ;",
      "indent": 4
    },
    {
      "line": 9,
      "text": "DUMMY",
      "code": "}",
      "indent": 3
    },
    {
      "line": 10,
      "text": "if ans is m / 2",
      "code": "if ( ans == m / 2 )",
      "indent": 3
    },
    {
      "line": 11,
      "text": "print YES",
      "code": "cout << \" YES \" << endl ;",
      "indent": 4
    },
    {
      "line": 12,
      "text": "else",
      "code": "else",
      "indent": 3
    },
    {
      "line": 13,
      "text": "print NO",
      "code": "cout << \" NO \" << endl ;",
      "indent": 4
    },
    {
      "line": 14,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 15,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 16,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 17,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        1
      ],
      "mod_code": [
        "char s ;"
      ],
      "err_line": 8,
      "err_msg": "invalid types ‘char[int]’ for array subscript"
    },
    {
      "mod_line": [
        3
      ],
      "mod_code": [
        "while ( { cin >> n )"
      ],
      "err_line": 3,
      "err_msg": "expected primary-expression before ‘{’ token"
    },
    {
      "mod_line": [
        4
      ],
      "mod_code": [
        "for ( k = 0 ; k < n ; k ++ )"
      ],
      "err_line": 4,
      "err_msg": "‘k’ was not declared in this scope"
    },
    {
      "mod_line": [
        5
      ],
      "mod_code": [
        "while ( cin >> m >> s )"
      ],
      "err_line": 8,
      "err_msg": "‘ans’ was not declared in this scope"
    },
    {
      "mod_line": [
        7
      ],
      "mod_code": [
        "for ( i = 0 ; i < m / 2 ; i ++ )"
      ],
      "err_line": 7,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        7
      ],
      "mod_code": [
        "while ( { cin >> n )",
        "for ( i = 0 ; i < m / 2 ; i ++ )"
      ],
      "err_line": 3,
      "err_msg": "expected primary-expression before ‘{’ token"
    },
    {
      "mod_line": [
        3,
        7,
        0
      ],
      "mod_code": [
        "while ( { cin >> n )",
        "for ( i = 0 ; i < m / 2 ; i ++ )",
        "char n , m ;"
      ],
      "err_line": 3,
      "err_msg": "expected primary-expression before ‘{’ token"
    },
    {
      "mod_line": [
        3,
        7,
        0,
        1
      ],
      "mod_code": [
        "while ( { cin >> n )",
        "for ( i = 0 ; i < m / 2 ; i ++ )",
        "char n , m ;",
        "char s ;"
      ],
      "err_line": 3,
      "err_msg": "expected primary-expression before ‘{’ token"
    },
    {
      "mod_line": [
        3,
        7,
        0,
        4
      ],
      "mod_code": [
        "while ( { cin >> n )",
        "for ( i = 0 ; i < m / 2 ; i ++ )",
        "char n , m ;",
        "for ( k = 0 ; k < n ; k ++ )"
      ],
      "err_line": 3,
      "err_msg": "expected primary-expression before ‘{’ token"
    },
    {
      "mod_line": [
        3,
        7,
        0,
        5
      ],
      "mod_code": [
        "while ( { cin >> n )",
        "for ( i = 0 ; i < m / 2 ; i ++ )",
        "char n , m ;",
        "while ( cin >> m >> s )"
      ],
      "err_line": 3,
      "err_msg": "expected primary-expression before ‘{’ token"
    },
    {
      "mod_line": [
        3,
        7,
        1
      ],
      "mod_code": [
        "while ( { cin >> n )",
        "for ( i = 0 ; i < m / 2 ; i ++ )",
        "char s ;"
      ],
      "err_line": 3,
      "err_msg": "expected primary-expression before ‘{’ token"
    },
    {
      "mod_line": [
        3,
        7,
        1,
        4
      ],
      "mod_code": [
        "while ( { cin >> n )",
        "for ( i = 0 ; i < m / 2 ; i ++ )",
        "char s ;",
        "for ( k = 0 ; k < n ; k ++ )"
      ],
      "err_line": 3,
      "err_msg": "expected primary-expression before ‘{’ token"
    },
    {
      "mod_line": [
        3,
        7,
        1,
        5
      ],
      "mod_code": [
        "while ( { cin >> n )",
        "for ( i = 0 ; i < m / 2 ; i ++ )",
        "char s ;",
        "while ( cin >> m >> s )"
      ],
      "err_line": 3,
      "err_msg": "expected primary-expression before ‘{’ token"
    },
    {
      "mod_line": [
        3,
        7,
        4
      ],
      "mod_code": [
        "while ( { cin >> n )",
        "for ( i = 0 ; i < m / 2 ; i ++ )",
        "for ( k = 0 ; k < n ; k ++ )"
      ],
      "err_line": 3,
      "err_msg": "expected primary-expression before ‘{’ token"
    },
    {
      "mod_line": [
        3,
        7,
        4,
        5
      ],
      "mod_code": [
        "while ( { cin >> n )",
        "for ( i = 0 ; i < m / 2 ; i ++ )",
        "for ( k = 0 ; k < n ; k ++ )",
        "while ( cin >> m >> s )"
      ],
      "err_line": 3,
      "err_msg": "expected primary-expression before ‘{’ token"
    },
    {
      "mod_line": [
        3,
        7,
        5
      ],
      "mod_code": [
        "while ( { cin >> n )",
        "for ( i = 0 ; i < m / 2 ; i ++ )",
        "while ( cin >> m >> s )"
      ],
      "err_line": 3,
      "err_msg": "expected primary-expression before ‘{’ token"
    },
    {
      "mod_line": [
        3,
        0
      ],
      "mod_code": [
        "while ( { cin >> n )",
        "char n , m ;"
      ],
      "err_line": 3,
      "err_msg": "expected primary-expression before ‘{’ token"
    },
    {
      "mod_line": [
        3,
        0,
        1
      ],
      "mod_code": [
        "while ( { cin >> n )",
        "char n , m ;",
        "char s ;"
      ],
      "err_line": 3,
      "err_msg": "expected primary-expression before ‘{’ token"
    },
    {
      "mod_line": [
        3,
        0,
        1,
        4
      ],
      "mod_code": [
        "while ( { cin >> n )",
        "char n , m ;",
        "char s ;",
        "for ( k = 0 ; k < n ; k ++ )"
      ],
      "err_line": 3,
      "err_msg": "expected primary-expression before ‘{’ token"
    },
    {
      "mod_line": [
        3,
        0,
        1,
        5
      ],
      "mod_code": [
        "while ( { cin >> n )",
        "char n , m ;",
        "char s ;",
        "while ( cin >> m >> s )"
      ],
      "err_line": 3,
      "err_msg": "expected primary-expression before ‘{’ token"
    },
    {
      "mod_line": [
        3,
        0,
        4
      ],
      "mod_code": [
        "while ( { cin >> n )",
        "char n , m ;",
        "for ( k = 0 ; k < n ; k ++ )"
      ],
      "err_line": 3,
      "err_msg": "expected primary-expression before ‘{’ token"
    },
    {
      "mod_line": [
        3,
        0,
        4,
        5
      ],
      "mod_code": [
        "while ( { cin >> n )",
        "char n , m ;",
        "for ( k = 0 ; k < n ; k ++ )",
        "while ( cin >> m >> s )"
      ],
      "err_line": 3,
      "err_msg": "expected primary-expression before ‘{’ token"
    },
    {
      "mod_line": [
        3,
        0,
        5
      ],
      "mod_code": [
        "while ( { cin >> n )",
        "char n , m ;",
        "while ( cin >> m >> s )"
      ],
      "err_line": 3,
      "err_msg": "expected primary-expression before ‘{’ token"
    },
    {
      "mod_line": [
        3,
        1
      ],
      "mod_code": [
        "while ( { cin >> n )",
        "char s ;"
      ],
      "err_line": 3,
      "err_msg": "expected primary-expression before ‘{’ token"
    },
    {
      "mod_line": [
        3,
        1,
        4
      ],
      "mod_code": [
        "while ( { cin >> n )",
        "char s ;",
        "for ( k = 0 ; k < n ; k ++ )"
      ],
      "err_line": 3,
      "err_msg": "expected primary-expression before ‘{’ token"
    },
    {
      "mod_line": [
        3,
        1,
        4,
        5
      ],
      "mod_code": [
        "while ( { cin >> n )",
        "char s ;",
        "for ( k = 0 ; k < n ; k ++ )",
        "while ( cin >> m >> s )"
      ],
      "err_line": 3,
      "err_msg": "expected primary-expression before ‘{’ token"
    },
    {
      "mod_line": [
        3,
        1,
        5
      ],
      "mod_code": [
        "while ( { cin >> n )",
        "char s ;",
        "while ( cin >> m >> s )"
      ],
      "err_line": 3,
      "err_msg": "expected primary-expression before ‘{’ token"
    },
    {
      "mod_line": [
        3,
        4
      ],
      "mod_code": [
        "while ( { cin >> n )",
        "for ( k = 0 ; k < n ; k ++ )"
      ],
      "err_line": 3,
      "err_msg": "expected primary-expression before ‘{’ token"
    },
    {
      "mod_line": [
        3,
        4,
        5
      ],
      "mod_code": [
        "while ( { cin >> n )",
        "for ( k = 0 ; k < n ; k ++ )",
        "while ( cin >> m >> s )"
      ],
      "err_line": 3,
      "err_msg": "expected primary-expression before ‘{’ token"
    },
    {
      "mod_line": [
        3,
        5
      ],
      "mod_code": [
        "while ( { cin >> n )",
        "while ( cin >> m >> s )"
      ],
      "err_line": 3,
      "err_msg": "expected primary-expression before ‘{’ token"
    },
    {
      "mod_line": [
        7,
        0
      ],
      "mod_code": [
        "for ( i = 0 ; i < m / 2 ; i ++ )",
        "char n , m ;"
      ],
      "err_line": 7,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        7,
        0,
        1
      ],
      "mod_code": [
        "for ( i = 0 ; i < m / 2 ; i ++ )",
        "char n , m ;",
        "char s ;"
      ],
      "err_line": 7,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        7,
        0,
        1,
        4
      ],
      "mod_code": [
        "for ( i = 0 ; i < m / 2 ; i ++ )",
        "char n , m ;",
        "char s ;",
        "for ( k = 0 ; k < n ; k ++ )"
      ],
      "err_line": 4,
      "err_msg": "‘k’ was not declared in this scope"
    },
    {
      "mod_line": [
        7,
        0,
        1,
        5
      ],
      "mod_code": [
        "for ( i = 0 ; i < m / 2 ; i ++ )",
        "char n , m ;",
        "char s ;",
        "while ( cin >> m >> s )"
      ],
      "err_line": 7,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        7,
        0,
        4
      ],
      "mod_code": [
        "for ( i = 0 ; i < m / 2 ; i ++ )",
        "char n , m ;",
        "for ( k = 0 ; k < n ; k ++ )"
      ],
      "err_line": 4,
      "err_msg": "‘k’ was not declared in this scope"
    },
    {
      "mod_line": [
        7,
        0,
        4,
        5
      ],
      "mod_code": [
        "for ( i = 0 ; i < m / 2 ; i ++ )",
        "char n , m ;",
        "for ( k = 0 ; k < n ; k ++ )",
        "while ( cin >> m >> s )"
      ],
      "err_line": 4,
      "err_msg": "‘k’ was not declared in this scope"
    },
    {
      "mod_line": [
        7,
        0,
        5
      ],
      "mod_code": [
        "for ( i = 0 ; i < m / 2 ; i ++ )",
        "char n , m ;",
        "while ( cin >> m >> s )"
      ],
      "err_line": 7,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        7,
        1
      ],
      "mod_code": [
        "for ( i = 0 ; i < m / 2 ; i ++ )",
        "char s ;"
      ],
      "err_line": 7,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        7,
        1,
        4
      ],
      "mod_code": [
        "for ( i = 0 ; i < m / 2 ; i ++ )",
        "char s ;",
        "for ( k = 0 ; k < n ; k ++ )"
      ],
      "err_line": 4,
      "err_msg": "‘k’ was not declared in this scope"
    },
    {
      "mod_line": [
        7,
        1,
        4,
        5
      ],
      "mod_code": [
        "for ( i = 0 ; i < m / 2 ; i ++ )",
        "char s ;",
        "for ( k = 0 ; k < n ; k ++ )",
        "while ( cin >> m >> s )"
      ],
      "err_line": 4,
      "err_msg": "‘k’ was not declared in this scope"
    },
    {
      "mod_line": [
        7,
        1,
        5
      ],
      "mod_code": [
        "for ( i = 0 ; i < m / 2 ; i ++ )",
        "char s ;",
        "while ( cin >> m >> s )"
      ],
      "err_line": 7,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        7,
        4
      ],
      "mod_code": [
        "for ( i = 0 ; i < m / 2 ; i ++ )",
        "for ( k = 0 ; k < n ; k ++ )"
      ],
      "err_line": 4,
      "err_msg": "‘k’ was not declared in this scope"
    },
    {
      "mod_line": [
        7,
        4,
        5
      ],
      "mod_code": [
        "for ( i = 0 ; i < m / 2 ; i ++ )",
        "for ( k = 0 ; k < n ; k ++ )",
        "while ( cin >> m >> s )"
      ],
      "err_line": 4,
      "err_msg": "‘k’ was not declared in this scope"
    },
    {
      "mod_line": [
        7,
        5
      ],
      "mod_code": [
        "for ( i = 0 ; i < m / 2 ; i ++ )",
        "while ( cin >> m >> s )"
      ],
      "err_line": 7,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        0,
        1
      ],
      "mod_code": [
        "char n , m ;",
        "char s ;"
      ],
      "err_line": 8,
      "err_msg": "invalid types ‘char[int]’ for array subscript"
    },
    {
      "mod_line": [
        0,
        1,
        4
      ],
      "mod_code": [
        "char n , m ;",
        "char s ;",
        "for ( k = 0 ; k < n ; k ++ )"
      ],
      "err_line": 4,
      "err_msg": "‘k’ was not declared in this scope"
    },
    {
      "mod_line": [
        0,
        1,
        4,
        5
      ],
      "mod_code": [
        "char n , m ;",
        "char s ;",
        "for ( k = 0 ; k < n ; k ++ )",
        "while ( cin >> m >> s )"
      ],
      "err_line": 4,
      "err_msg": "‘k’ was not declared in this scope"
    },
    {
      "mod_line": [
        0,
        1,
        5
      ],
      "mod_code": [
        "char n , m ;",
        "char s ;",
        "while ( cin >> m >> s )"
      ],
      "err_line": 8,
      "err_msg": "invalid types ‘char[int]’ for array subscript"
    },
    {
      "mod_line": [
        0,
        4
      ],
      "mod_code": [
        "char n , m ;",
        "for ( k = 0 ; k < n ; k ++ )"
      ],
      "err_line": 4,
      "err_msg": "‘k’ was not declared in this scope"
    },
    {
      "mod_line": [
        0,
        4,
        5
      ],
      "mod_code": [
        "char n , m ;",
        "for ( k = 0 ; k < n ; k ++ )",
        "while ( cin >> m >> s )"
      ],
      "err_line": 4,
      "err_msg": "‘k’ was not declared in this scope"
    },
    {
      "mod_line": [
        0,
        5
      ],
      "mod_code": [
        "char n , m ;",
        "while ( cin >> m >> s )"
      ],
      "err_line": 8,
      "err_msg": "‘ans’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        4
      ],
      "mod_code": [
        "char s ;",
        "for ( k = 0 ; k < n ; k ++ )"
      ],
      "err_line": 4,
      "err_msg": "‘k’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        4,
        5
      ],
      "mod_code": [
        "char s ;",
        "for ( k = 0 ; k < n ; k ++ )",
        "while ( cin >> m >> s )"
      ],
      "err_line": 4,
      "err_msg": "‘k’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        5
      ],
      "mod_code": [
        "char s ;",
        "while ( cin >> m >> s )"
      ],
      "err_line": 8,
      "err_msg": "invalid types ‘char[int]’ for array subscript"
    },
    {
      "mod_line": [
        4,
        5
      ],
      "mod_code": [
        "for ( k = 0 ; k < n ; k ++ )",
        "while ( cin >> m >> s )"
      ],
      "err_line": 4,
      "err_msg": "‘k’ was not declared in this scope"
    }
  ]
}