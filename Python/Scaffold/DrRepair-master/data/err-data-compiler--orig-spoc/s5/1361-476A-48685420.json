{
  "meta": {
    "index": 1361,
    "hitid": "38RHULDV9Y99QQHFO1X34RW27FPWI0",
    "workerid": "A3GEA5LU87T3E5",
    "probid": "476A",
    "subid": "48685420"
  },
  "lines": [
    {
      "line": 0,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 1,
      "text": "create integer output",
      "code": "int output ;",
      "indent": 1
    },
    {
      "line": 2,
      "text": "create integer input1",
      "code": "int input1 ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "create integer input2",
      "code": "int input2 ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "while ( input1 and input2 value entered )",
      "code": "while ( cin >> input1 >> input2 )",
      "indent": 1
    },
    {
      "line": 5,
      "text": "if ( input2 is greater than input1 )",
      "code": "if ( input2 > input1 )",
      "indent": 2
    },
    {
      "line": 6,
      "text": "set output to - 1",
      "code": "output = - 1 ;",
      "indent": 3
    },
    {
      "line": 7,
      "text": "else",
      "code": "else",
      "indent": 2
    },
    {
      "line": 8,
      "text": "if ( input1 is an even number ) execute",
      "code": "if ( input1 % 2 == 0 )",
      "indent": 3
    },
    {
      "line": 9,
      "text": "set output to input1 / 2",
      "code": "output = input1 / 2 ;",
      "indent": 4
    },
    {
      "line": 10,
      "text": "else",
      "code": "else",
      "indent": 3
    },
    {
      "line": 11,
      "text": "set output to ( input1 / 2 ) and add 1",
      "code": "output = ( input1 / 2 ) + 1 ;",
      "indent": 4
    },
    {
      "line": 12,
      "text": "DUMMY",
      "code": "}",
      "indent": 3
    },
    {
      "line": 13,
      "text": "while ( output is not divisible by input2 ) increment output by 1",
      "code": "while ( output % input2 != 0 ) { output ++ ; }",
      "indent": 3
    },
    {
      "line": 14,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 15,
      "text": "print out output",
      "code": "cout << output << endl ;",
      "indent": 2
    },
    {
      "line": 16,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 17,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        11
      ],
      "mod_code": [
        "output = ( input1 / 2 ) , 1 ++ ;"
      ],
      "err_line": 11,
      "err_msg": "lvalue required as increment operand"
    },
    {
      "mod_line": [
        2
      ],
      "mod_code": [
        "int n ;"
      ],
      "err_line": 4,
      "err_msg": "‘input1’ was not declared in this scope"
    },
    {
      "mod_line": [
        3
      ],
      "mod_code": [
        "int n ;"
      ],
      "err_line": 4,
      "err_msg": "‘input2’ was not declared in this scope"
    },
    {
      "mod_line": [
        8
      ],
      "mod_code": [
        "if ( input1 == 0 || input1 == number )"
      ],
      "err_line": 8,
      "err_msg": "‘number’ was not declared in this scope"
    },
    {
      "mod_line": [
        11
      ],
      "mod_code": [
        "cout << ( input1 / 2 ) , 1 ++ ;"
      ],
      "err_line": 11,
      "err_msg": "lvalue required as increment operand"
    },
    {
      "mod_line": [
        4,
        11
      ],
      "mod_code": [
        "while ( input1 && input2 )",
        "output = ( input1 / 2 ) , 1 ++ ;"
      ],
      "err_line": 11,
      "err_msg": "lvalue required as increment operand"
    },
    {
      "mod_line": [
        4,
        11,
        15
      ],
      "mod_code": [
        "while ( input1 && input2 )",
        "output = ( input1 / 2 ) , 1 ++ ;",
        "cout << \" Incorrect\\n \" ;"
      ],
      "err_line": 11,
      "err_msg": "lvalue required as increment operand"
    },
    {
      "mod_line": [
        4,
        11,
        15,
        8
      ],
      "mod_code": [
        "while ( input1 && input2 )",
        "output = ( input1 / 2 ) , 1 ++ ;",
        "cout << \" Incorrect\\n \" ;",
        "if ( input1 == 0 || input1 == number )"
      ],
      "err_line": 8,
      "err_msg": "‘number’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        11,
        15,
        1
      ],
      "mod_code": [
        "while ( input1 && input2 )",
        "output = ( input1 / 2 ) , 1 ++ ;",
        "cout << \" Incorrect\\n \" ;",
        "bool output ;"
      ],
      "err_line": 11,
      "err_msg": "lvalue required as increment operand"
    },
    {
      "mod_line": [
        4,
        11,
        15,
        5
      ],
      "mod_code": [
        "while ( input1 && input2 )",
        "output = ( input1 / 2 ) , 1 ++ ;",
        "cout << \" Incorrect\\n \" ;",
        "if ( input2 )"
      ],
      "err_line": 11,
      "err_msg": "lvalue required as increment operand"
    },
    {
      "mod_line": [
        4,
        11,
        8
      ],
      "mod_code": [
        "while ( input1 && input2 )",
        "output = ( input1 / 2 ) , 1 ++ ;",
        "if ( input1 == 0 || input1 == number )"
      ],
      "err_line": 8,
      "err_msg": "‘number’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        11,
        8,
        1
      ],
      "mod_code": [
        "while ( input1 && input2 )",
        "output = ( input1 / 2 ) , 1 ++ ;",
        "if ( input1 == 0 || input1 == number )",
        "bool output ;"
      ],
      "err_line": 8,
      "err_msg": "‘number’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        11,
        8,
        5
      ],
      "mod_code": [
        "while ( input1 && input2 )",
        "output = ( input1 / 2 ) , 1 ++ ;",
        "if ( input1 == 0 || input1 == number )",
        "if ( input2 )"
      ],
      "err_line": 8,
      "err_msg": "‘number’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        11,
        1
      ],
      "mod_code": [
        "while ( input1 && input2 )",
        "output = ( input1 / 2 ) , 1 ++ ;",
        "bool output ;"
      ],
      "err_line": 11,
      "err_msg": "lvalue required as increment operand"
    },
    {
      "mod_line": [
        4,
        11,
        1,
        5
      ],
      "mod_code": [
        "while ( input1 && input2 )",
        "output = ( input1 / 2 ) , 1 ++ ;",
        "bool output ;",
        "if ( input2 )"
      ],
      "err_line": 11,
      "err_msg": "lvalue required as increment operand"
    },
    {
      "mod_line": [
        4,
        11,
        5
      ],
      "mod_code": [
        "while ( input1 && input2 )",
        "output = ( input1 / 2 ) , 1 ++ ;",
        "if ( input2 )"
      ],
      "err_line": 11,
      "err_msg": "lvalue required as increment operand"
    },
    {
      "mod_line": [
        4,
        15,
        8
      ],
      "mod_code": [
        "while ( input1 && input2 )",
        "cout << \" Incorrect\\n \" ;",
        "if ( input1 == 0 || input1 == number )"
      ],
      "err_line": 8,
      "err_msg": "‘number’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        15,
        8,
        1
      ],
      "mod_code": [
        "while ( input1 && input2 )",
        "cout << \" Incorrect\\n \" ;",
        "if ( input1 == 0 || input1 == number )",
        "bool output ;"
      ],
      "err_line": 8,
      "err_msg": "‘number’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        15,
        8,
        5
      ],
      "mod_code": [
        "while ( input1 && input2 )",
        "cout << \" Incorrect\\n \" ;",
        "if ( input1 == 0 || input1 == number )",
        "if ( input2 )"
      ],
      "err_line": 8,
      "err_msg": "‘number’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        8
      ],
      "mod_code": [
        "while ( input1 && input2 )",
        "if ( input1 == 0 || input1 == number )"
      ],
      "err_line": 8,
      "err_msg": "‘number’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        8,
        1
      ],
      "mod_code": [
        "while ( input1 && input2 )",
        "if ( input1 == 0 || input1 == number )",
        "bool output ;"
      ],
      "err_line": 8,
      "err_msg": "‘number’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        8,
        1,
        5
      ],
      "mod_code": [
        "while ( input1 && input2 )",
        "if ( input1 == 0 || input1 == number )",
        "bool output ;",
        "if ( input2 )"
      ],
      "err_line": 8,
      "err_msg": "‘number’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        8,
        5
      ],
      "mod_code": [
        "while ( input1 && input2 )",
        "if ( input1 == 0 || input1 == number )",
        "if ( input2 )"
      ],
      "err_line": 8,
      "err_msg": "‘number’ was not declared in this scope"
    },
    {
      "mod_line": [
        11,
        15
      ],
      "mod_code": [
        "output = ( input1 / 2 ) , 1 ++ ;",
        "cout << \" Incorrect\\n \" ;"
      ],
      "err_line": 11,
      "err_msg": "lvalue required as increment operand"
    },
    {
      "mod_line": [
        11,
        15,
        8
      ],
      "mod_code": [
        "output = ( input1 / 2 ) , 1 ++ ;",
        "cout << \" Incorrect\\n \" ;",
        "if ( input1 == 0 || input1 == number )"
      ],
      "err_line": 8,
      "err_msg": "‘number’ was not declared in this scope"
    },
    {
      "mod_line": [
        11,
        15,
        8,
        1
      ],
      "mod_code": [
        "output = ( input1 / 2 ) , 1 ++ ;",
        "cout << \" Incorrect\\n \" ;",
        "if ( input1 == 0 || input1 == number )",
        "bool output ;"
      ],
      "err_line": 8,
      "err_msg": "‘number’ was not declared in this scope"
    },
    {
      "mod_line": [
        11,
        15,
        8,
        5
      ],
      "mod_code": [
        "output = ( input1 / 2 ) , 1 ++ ;",
        "cout << \" Incorrect\\n \" ;",
        "if ( input1 == 0 || input1 == number )",
        "if ( input2 )"
      ],
      "err_line": 8,
      "err_msg": "‘number’ was not declared in this scope"
    },
    {
      "mod_line": [
        11,
        15,
        1
      ],
      "mod_code": [
        "output = ( input1 / 2 ) , 1 ++ ;",
        "cout << \" Incorrect\\n \" ;",
        "bool output ;"
      ],
      "err_line": 11,
      "err_msg": "lvalue required as increment operand"
    },
    {
      "mod_line": [
        11,
        15,
        1,
        5
      ],
      "mod_code": [
        "output = ( input1 / 2 ) , 1 ++ ;",
        "cout << \" Incorrect\\n \" ;",
        "bool output ;",
        "if ( input2 )"
      ],
      "err_line": 11,
      "err_msg": "lvalue required as increment operand"
    },
    {
      "mod_line": [
        11,
        15,
        5
      ],
      "mod_code": [
        "output = ( input1 / 2 ) , 1 ++ ;",
        "cout << \" Incorrect\\n \" ;",
        "if ( input2 )"
      ],
      "err_line": 11,
      "err_msg": "lvalue required as increment operand"
    },
    {
      "mod_line": [
        11,
        8
      ],
      "mod_code": [
        "output = ( input1 / 2 ) , 1 ++ ;",
        "if ( input1 == 0 || input1 == number )"
      ],
      "err_line": 8,
      "err_msg": "‘number’ was not declared in this scope"
    },
    {
      "mod_line": [
        11,
        8,
        1
      ],
      "mod_code": [
        "output = ( input1 / 2 ) , 1 ++ ;",
        "if ( input1 == 0 || input1 == number )",
        "bool output ;"
      ],
      "err_line": 8,
      "err_msg": "‘number’ was not declared in this scope"
    },
    {
      "mod_line": [
        11,
        8,
        1,
        5
      ],
      "mod_code": [
        "output = ( input1 / 2 ) , 1 ++ ;",
        "if ( input1 == 0 || input1 == number )",
        "bool output ;",
        "if ( input2 )"
      ],
      "err_line": 8,
      "err_msg": "‘number’ was not declared in this scope"
    },
    {
      "mod_line": [
        11,
        8,
        5
      ],
      "mod_code": [
        "output = ( input1 / 2 ) , 1 ++ ;",
        "if ( input1 == 0 || input1 == number )",
        "if ( input2 )"
      ],
      "err_line": 8,
      "err_msg": "‘number’ was not declared in this scope"
    },
    {
      "mod_line": [
        11,
        1
      ],
      "mod_code": [
        "output = ( input1 / 2 ) , 1 ++ ;",
        "bool output ;"
      ],
      "err_line": 11,
      "err_msg": "lvalue required as increment operand"
    },
    {
      "mod_line": [
        11,
        1,
        5
      ],
      "mod_code": [
        "output = ( input1 / 2 ) , 1 ++ ;",
        "bool output ;",
        "if ( input2 )"
      ],
      "err_line": 11,
      "err_msg": "lvalue required as increment operand"
    },
    {
      "mod_line": [
        11,
        5
      ],
      "mod_code": [
        "output = ( input1 / 2 ) , 1 ++ ;",
        "if ( input2 )"
      ],
      "err_line": 11,
      "err_msg": "lvalue required as increment operand"
    },
    {
      "mod_line": [
        15,
        8
      ],
      "mod_code": [
        "cout << \" Incorrect\\n \" ;",
        "if ( input1 == 0 || input1 == number )"
      ],
      "err_line": 8,
      "err_msg": "‘number’ was not declared in this scope"
    },
    {
      "mod_line": [
        15,
        8,
        1
      ],
      "mod_code": [
        "cout << \" Incorrect\\n \" ;",
        "if ( input1 == 0 || input1 == number )",
        "bool output ;"
      ],
      "err_line": 8,
      "err_msg": "‘number’ was not declared in this scope"
    },
    {
      "mod_line": [
        15,
        8,
        1,
        5
      ],
      "mod_code": [
        "cout << \" Incorrect\\n \" ;",
        "if ( input1 == 0 || input1 == number )",
        "bool output ;",
        "if ( input2 )"
      ],
      "err_line": 8,
      "err_msg": "‘number’ was not declared in this scope"
    },
    {
      "mod_line": [
        15,
        8,
        5
      ],
      "mod_code": [
        "cout << \" Incorrect\\n \" ;",
        "if ( input1 == 0 || input1 == number )",
        "if ( input2 )"
      ],
      "err_line": 8,
      "err_msg": "‘number’ was not declared in this scope"
    },
    {
      "mod_line": [
        8,
        1
      ],
      "mod_code": [
        "if ( input1 == 0 || input1 == number )",
        "bool output ;"
      ],
      "err_line": 8,
      "err_msg": "‘number’ was not declared in this scope"
    },
    {
      "mod_line": [
        8,
        1,
        5
      ],
      "mod_code": [
        "if ( input1 == 0 || input1 == number )",
        "bool output ;",
        "if ( input2 )"
      ],
      "err_line": 8,
      "err_msg": "‘number’ was not declared in this scope"
    },
    {
      "mod_line": [
        8,
        5
      ],
      "mod_code": [
        "if ( input1 == 0 || input1 == number )",
        "if ( input2 )"
      ],
      "err_line": 8,
      "err_msg": "‘number’ was not declared in this scope"
    }
  ]
}