{
  "meta": {
    "index": 1432,
    "hitid": "3X2YVV51PUYYQKLHGUCXCSFGR0EW1J",
    "workerid": "A1APYLD4DUK33J",
    "probid": "259A",
    "subid": "48558556"
  },
  "lines": [
    {
      "line": 0,
      "text": "declare character array ara size 15 by 15",
      "code": "char ara [ 15 ] [ 15 ] ;",
      "indent": 0
    },
    {
      "line": 1,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 2,
      "text": "for i = 1 to 8 inclusive",
      "code": "for ( int i = 1 ; i <= 8 ; i ++ )",
      "indent": 1
    },
    {
      "line": 3,
      "text": "for j = 1 to 8 inclusive , read a [ i ] [ j ]",
      "code": "for ( int j = 1 ; j <= 8 ; j ++ ) { cin >> ara [ i ] [ j ] ; }",
      "indent": 2
    },
    {
      "line": 4,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 5,
      "text": "declare boolean ok = 0",
      "code": "bool ok = 0 ;",
      "indent": 1
    },
    {
      "line": 6,
      "text": "for i = 1 to 8 inclusive and ok is false",
      "code": "for ( int i = 1 ; i <= 8 && ! ok ; i ++ )",
      "indent": 1
    },
    {
      "line": 7,
      "text": "if ara [ i ] [ 1 ] is ara [ i ] [ 8 ]",
      "code": "if ( ara [ i ] [ 1 ] == ara [ i ] [ 8 ] )",
      "indent": 2
    },
    {
      "line": 8,
      "text": "let ok be 1",
      "code": "ok = 1 ;",
      "indent": 3
    },
    {
      "line": 9,
      "text": "end loop",
      "code": "break ;",
      "indent": 3
    },
    {
      "line": 10,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 11,
      "text": "for j = 1 to 8 inclusive and ok is false",
      "code": "for ( int j = 1 ; j <= 8 && ! ok ; j ++ )",
      "indent": 2
    },
    {
      "line": 12,
      "text": "read ara [ i ] [ j ]",
      "code": "cin >> ara [ i ] [ j ] ;",
      "indent": 3
    },
    {
      "line": 13,
      "text": "if ara [ i ] [ j ] is ara [ i ] [ j + 1 ]",
      "code": "if ( ara [ i ] [ j ] == ara [ i ] [ j + 1 ] )",
      "indent": 3
    },
    {
      "line": 14,
      "text": "let ok be 1",
      "code": "ok = 1 ;",
      "indent": 4
    },
    {
      "line": 15,
      "text": "end loop",
      "code": "break ;",
      "indent": 4
    },
    {
      "line": 16,
      "text": "DUMMY",
      "code": "}",
      "indent": 3
    },
    {
      "line": 17,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 18,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 19,
      "text": "if ok is true",
      "code": "if ( ok )",
      "indent": 1
    },
    {
      "line": 20,
      "text": "print \" NO \" and newline",
      "code": "cout << \" NO \" << endl ;",
      "indent": 2
    },
    {
      "line": 21,
      "text": "else",
      "code": "else",
      "indent": 1
    },
    {
      "line": 22,
      "text": "print \" YES \" and newline",
      "code": "cout << \" YES \" << endl ;",
      "indent": 2
    },
    {
      "line": 23,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 24,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        3
      ],
      "mod_code": [
        "for ( int j = 1 ; j <= 8 ; j ++ ) { cin >> a [ i ] [ j ] ; }"
      ],
      "err_line": 3,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        2
      ],
      "mod_code": [
        "for ( i = 1 ; i <= 8 ; i ++ )"
      ],
      "err_line": 2,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        3
      ],
      "mod_code": [
        "for ( int j = 1 ; j <= 8 ; j ++ ) cin >> a [ i ] [ j ] ;"
      ],
      "err_line": 3,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        6
      ],
      "mod_code": [
        "for ( i = 1 ; i <= 8 && ok == false ; i ++ )"
      ],
      "err_line": 6,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        7
      ],
      "mod_code": [
        "if ( ara [ i ] [ 1 ] == ara [ i ] [ 8 )"
      ],
      "err_line": 7,
      "err_msg": "expected ‘]’ before ‘)’ token"
    },
    {
      "mod_line": [
        11
      ],
      "mod_code": [
        "for ( j = 1 ; j <= 8 && ok == false ; j ++ )"
      ],
      "err_line": 11,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        12
      ],
      "mod_code": [
        "{ cin >> ara [ i ] [ j ] ;"
      ],
      "err_line": 24,
      "err_msg": "expected ‘}’ at end of input"
    },
    {
      "mod_line": [
        19
      ],
      "mod_code": [
        "if ( ok ) return ;"
      ],
      "err_line": 19,
      "err_msg": "return-statement with no value, in function returning ‘int’ [-fpermissive]"
    },
    {
      "mod_line": [
        3,
        0
      ],
      "mod_code": [
        "for ( int j = 1 ; j <= 8 ; j ++ ) { cin >> a [ i ] [ j ] ; }",
        "char * ara [ 15 ] [ 15 ] ;"
      ],
      "err_line": 3,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        0,
        6
      ],
      "mod_code": [
        "for ( int j = 1 ; j <= 8 ; j ++ ) { cin >> a [ i ] [ j ] ; }",
        "char * ara [ 15 ] [ 15 ] ;",
        "for ( i = 1 ; i <= 8 && ok == false ; i ++ )"
      ],
      "err_line": 3,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        0,
        6,
        8
      ],
      "mod_code": [
        "for ( int j = 1 ; j <= 8 ; j ++ ) { cin >> a [ i ] [ j ] ; }",
        "char * ara [ 15 ] [ 15 ] ;",
        "for ( i = 1 ; i <= 8 && ok == false ; i ++ )",
        "int ok = 1 ;"
      ],
      "err_line": 3,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        0,
        6,
        19
      ],
      "mod_code": [
        "for ( int j = 1 ; j <= 8 ; j ++ ) { cin >> a [ i ] [ j ] ; }",
        "char * ara [ 15 ] [ 15 ] ;",
        "for ( i = 1 ; i <= 8 && ok == false ; i ++ )",
        "if ( ok ) return ;"
      ],
      "err_line": 3,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        0,
        8
      ],
      "mod_code": [
        "for ( int j = 1 ; j <= 8 ; j ++ ) { cin >> a [ i ] [ j ] ; }",
        "char * ara [ 15 ] [ 15 ] ;",
        "int ok = 1 ;"
      ],
      "err_line": 3,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        0,
        8,
        19
      ],
      "mod_code": [
        "for ( int j = 1 ; j <= 8 ; j ++ ) { cin >> a [ i ] [ j ] ; }",
        "char * ara [ 15 ] [ 15 ] ;",
        "int ok = 1 ;",
        "if ( ok ) return ;"
      ],
      "err_line": 3,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        0,
        19
      ],
      "mod_code": [
        "for ( int j = 1 ; j <= 8 ; j ++ ) { cin >> a [ i ] [ j ] ; }",
        "char * ara [ 15 ] [ 15 ] ;",
        "if ( ok ) return ;"
      ],
      "err_line": 3,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        6
      ],
      "mod_code": [
        "for ( int j = 1 ; j <= 8 ; j ++ ) { cin >> a [ i ] [ j ] ; }",
        "for ( i = 1 ; i <= 8 && ok == false ; i ++ )"
      ],
      "err_line": 3,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        6,
        8
      ],
      "mod_code": [
        "for ( int j = 1 ; j <= 8 ; j ++ ) { cin >> a [ i ] [ j ] ; }",
        "for ( i = 1 ; i <= 8 && ok == false ; i ++ )",
        "int ok = 1 ;"
      ],
      "err_line": 3,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        6,
        8,
        19
      ],
      "mod_code": [
        "for ( int j = 1 ; j <= 8 ; j ++ ) { cin >> a [ i ] [ j ] ; }",
        "for ( i = 1 ; i <= 8 && ok == false ; i ++ )",
        "int ok = 1 ;",
        "if ( ok ) return ;"
      ],
      "err_line": 3,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        6,
        19
      ],
      "mod_code": [
        "for ( int j = 1 ; j <= 8 ; j ++ ) { cin >> a [ i ] [ j ] ; }",
        "for ( i = 1 ; i <= 8 && ok == false ; i ++ )",
        "if ( ok ) return ;"
      ],
      "err_line": 3,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        8
      ],
      "mod_code": [
        "for ( int j = 1 ; j <= 8 ; j ++ ) { cin >> a [ i ] [ j ] ; }",
        "int ok = 1 ;"
      ],
      "err_line": 3,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        8,
        19
      ],
      "mod_code": [
        "for ( int j = 1 ; j <= 8 ; j ++ ) { cin >> a [ i ] [ j ] ; }",
        "int ok = 1 ;",
        "if ( ok ) return ;"
      ],
      "err_line": 3,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        19
      ],
      "mod_code": [
        "for ( int j = 1 ; j <= 8 ; j ++ ) { cin >> a [ i ] [ j ] ; }",
        "if ( ok ) return ;"
      ],
      "err_line": 3,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        0
      ],
      "mod_code": [
        "for ( int j = 1 ; j <= 8 ; j ++ ) cin >> a [ i ] [ j ] ;",
        "char * ara [ 15 ] [ 15 ] ;"
      ],
      "err_line": 3,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        0,
        6
      ],
      "mod_code": [
        "for ( int j = 1 ; j <= 8 ; j ++ ) cin >> a [ i ] [ j ] ;",
        "char * ara [ 15 ] [ 15 ] ;",
        "for ( i = 1 ; i <= 8 && ok == false ; i ++ )"
      ],
      "err_line": 3,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        0,
        6,
        8
      ],
      "mod_code": [
        "for ( int j = 1 ; j <= 8 ; j ++ ) cin >> a [ i ] [ j ] ;",
        "char * ara [ 15 ] [ 15 ] ;",
        "for ( i = 1 ; i <= 8 && ok == false ; i ++ )",
        "int ok = 1 ;"
      ],
      "err_line": 3,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        0,
        6,
        19
      ],
      "mod_code": [
        "for ( int j = 1 ; j <= 8 ; j ++ ) cin >> a [ i ] [ j ] ;",
        "char * ara [ 15 ] [ 15 ] ;",
        "for ( i = 1 ; i <= 8 && ok == false ; i ++ )",
        "if ( ok ) return ;"
      ],
      "err_line": 3,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        0,
        8
      ],
      "mod_code": [
        "for ( int j = 1 ; j <= 8 ; j ++ ) cin >> a [ i ] [ j ] ;",
        "char * ara [ 15 ] [ 15 ] ;",
        "int ok = 1 ;"
      ],
      "err_line": 3,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        0,
        8,
        19
      ],
      "mod_code": [
        "for ( int j = 1 ; j <= 8 ; j ++ ) cin >> a [ i ] [ j ] ;",
        "char * ara [ 15 ] [ 15 ] ;",
        "int ok = 1 ;",
        "if ( ok ) return ;"
      ],
      "err_line": 3,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        0,
        19
      ],
      "mod_code": [
        "for ( int j = 1 ; j <= 8 ; j ++ ) cin >> a [ i ] [ j ] ;",
        "char * ara [ 15 ] [ 15 ] ;",
        "if ( ok ) return ;"
      ],
      "err_line": 3,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        6
      ],
      "mod_code": [
        "for ( int j = 1 ; j <= 8 ; j ++ ) cin >> a [ i ] [ j ] ;",
        "for ( i = 1 ; i <= 8 && ok == false ; i ++ )"
      ],
      "err_line": 3,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        6,
        8
      ],
      "mod_code": [
        "for ( int j = 1 ; j <= 8 ; j ++ ) cin >> a [ i ] [ j ] ;",
        "for ( i = 1 ; i <= 8 && ok == false ; i ++ )",
        "int ok = 1 ;"
      ],
      "err_line": 3,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        6,
        8,
        19
      ],
      "mod_code": [
        "for ( int j = 1 ; j <= 8 ; j ++ ) cin >> a [ i ] [ j ] ;",
        "for ( i = 1 ; i <= 8 && ok == false ; i ++ )",
        "int ok = 1 ;",
        "if ( ok ) return ;"
      ],
      "err_line": 3,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        6,
        19
      ],
      "mod_code": [
        "for ( int j = 1 ; j <= 8 ; j ++ ) cin >> a [ i ] [ j ] ;",
        "for ( i = 1 ; i <= 8 && ok == false ; i ++ )",
        "if ( ok ) return ;"
      ],
      "err_line": 3,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        8
      ],
      "mod_code": [
        "for ( int j = 1 ; j <= 8 ; j ++ ) cin >> a [ i ] [ j ] ;",
        "int ok = 1 ;"
      ],
      "err_line": 3,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        8,
        19
      ],
      "mod_code": [
        "for ( int j = 1 ; j <= 8 ; j ++ ) cin >> a [ i ] [ j ] ;",
        "int ok = 1 ;",
        "if ( ok ) return ;"
      ],
      "err_line": 3,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        19
      ],
      "mod_code": [
        "for ( int j = 1 ; j <= 8 ; j ++ ) cin >> a [ i ] [ j ] ;",
        "if ( ok ) return ;"
      ],
      "err_line": 3,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        0,
        6
      ],
      "mod_code": [
        "char * ara [ 15 ] [ 15 ] ;",
        "for ( i = 1 ; i <= 8 && ok == false ; i ++ )"
      ],
      "err_line": 6,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        0,
        6,
        8
      ],
      "mod_code": [
        "char * ara [ 15 ] [ 15 ] ;",
        "for ( i = 1 ; i <= 8 && ok == false ; i ++ )",
        "int ok = 1 ;"
      ],
      "err_line": 6,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        0,
        6,
        8,
        19
      ],
      "mod_code": [
        "char * ara [ 15 ] [ 15 ] ;",
        "for ( i = 1 ; i <= 8 && ok == false ; i ++ )",
        "int ok = 1 ;",
        "if ( ok ) return ;"
      ],
      "err_line": 6,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        0,
        6,
        19
      ],
      "mod_code": [
        "char * ara [ 15 ] [ 15 ] ;",
        "for ( i = 1 ; i <= 8 && ok == false ; i ++ )",
        "if ( ok ) return ;"
      ],
      "err_line": 6,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        0,
        8,
        19
      ],
      "mod_code": [
        "char * ara [ 15 ] [ 15 ] ;",
        "int ok = 1 ;",
        "if ( ok ) return ;"
      ],
      "err_line": 19,
      "err_msg": "return-statement with no value, in function returning ‘int’ [-fpermissive]"
    },
    {
      "mod_line": [
        0,
        19
      ],
      "mod_code": [
        "char * ara [ 15 ] [ 15 ] ;",
        "if ( ok ) return ;"
      ],
      "err_line": 19,
      "err_msg": "return-statement with no value, in function returning ‘int’ [-fpermissive]"
    },
    {
      "mod_line": [
        6,
        8
      ],
      "mod_code": [
        "for ( i = 1 ; i <= 8 && ok == false ; i ++ )",
        "int ok = 1 ;"
      ],
      "err_line": 6,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        6,
        8,
        19
      ],
      "mod_code": [
        "for ( i = 1 ; i <= 8 && ok == false ; i ++ )",
        "int ok = 1 ;",
        "if ( ok ) return ;"
      ],
      "err_line": 6,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        6,
        19
      ],
      "mod_code": [
        "for ( i = 1 ; i <= 8 && ok == false ; i ++ )",
        "if ( ok ) return ;"
      ],
      "err_line": 6,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        8,
        19
      ],
      "mod_code": [
        "int ok = 1 ;",
        "if ( ok ) return ;"
      ],
      "err_line": 19,
      "err_msg": "return-statement with no value, in function returning ‘int’ [-fpermissive]"
    }
  ]
}