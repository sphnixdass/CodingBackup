{
  "meta": {
    "index": 1001,
    "hitid": "3UUIU9GZC5Z5MLI6MC9YSYLYYZ25TA",
    "workerid": "A36Q5TAZ7L6HOS",
    "probid": "196A",
    "subid": "9365945"
  },
  "lines": [
    {
      "line": 0,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 1,
      "text": "declare s as string",
      "code": "string s ;",
      "indent": 1
    },
    {
      "line": 2,
      "text": "while read s",
      "code": "while ( cin >> s )",
      "indent": 1
    },
    {
      "line": 3,
      "text": "declare m as map of char to int",
      "code": "map < char , int > m ;",
      "indent": 2
    },
    {
      "line": 4,
      "text": "for 0 to s . length exclusive , increment m [ s [ i ] ]",
      "code": "for ( int i = 0 ; i < s . length ( ) ; ++ i ) { m [ s [ i ] ] ++ ; }",
      "indent": 2
    },
    {
      "line": 5,
      "text": "assign iterator it from char to int to m . end ( )",
      "code": "map < char , int > :: iterator it = m . end ( ) ;",
      "indent": 2
    },
    {
      "line": 6,
      "text": "decrement it",
      "code": "it -- ;",
      "indent": 2
    },
    {
      "line": 7,
      "text": "for 0 to s . length ( ) exclusive",
      "code": "for ( int i = 0 ; i < s . length ( ) ; ++ i )",
      "indent": 2
    },
    {
      "line": 8,
      "text": "if ( it - > second ) greater than 0",
      "code": "if ( ( it -> second ) > 0 )",
      "indent": 3
    },
    {
      "line": 9,
      "text": "if s [ i ] equal to it - > first print s [ i ]",
      "code": "if ( s [ i ] == it -> first ) cout << s [ i ] ;",
      "indent": 4
    },
    {
      "line": 10,
      "text": "decrement m [ s [ i ] ]",
      "code": "m [ s [ i ] ] -- ;",
      "indent": 4
    },
    {
      "line": 11,
      "text": "while it - > second equal to 0 and it not equal to m . begin ( ) decrement it",
      "code": "while ( it -> second == 0 && it != m . begin ( ) ) { it -- ; }",
      "indent": 4
    },
    {
      "line": 12,
      "text": "DUMMY",
      "code": "}",
      "indent": 3
    },
    {
      "line": 13,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 14,
      "text": "print new line",
      "code": "cout << endl ;",
      "indent": 2
    },
    {
      "line": 15,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 16,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 17,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        5
      ],
      "mod_code": [
        "char it = m . begin ( ) ;"
      ],
      "err_line": 5,
      "err_msg": "cannot convert ‘std::map<char, int>::iterator {aka std::_Rb_tree_iterator<std::pair<const char, int> >}’ to ‘char’ in initialization"
    },
    {
      "mod_line": [
        7
      ],
      "mod_code": [
        "for ( int 0 = 0 ; i < s . length ( ) ; i ++ )"
      ],
      "err_line": 7,
      "err_msg": "expected unqualified-id before numeric constant"
    },
    {
      "mod_line": [
        11
      ],
      "mod_code": [
        "while ( it -> second != m . begin ( ) )"
      ],
      "err_line": 11,
      "err_msg": "no match for ‘operator!=’ (operand types are ‘int’ and ‘std::map<char, int>::iterator {aka std::_Rb_tree_iterator<std::pair<const char, int> >}’)"
    },
    {
      "mod_line": [
        1
      ],
      "mod_code": [
        "vector < string > s ;"
      ],
      "err_line": 2,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘std::vector<std::__cxx11::basic_string<char> >’)"
    },
    {
      "mod_line": [
        2
      ],
      "mod_code": [
        "while ( s >> s )"
      ],
      "err_line": 2,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        3
      ],
      "mod_code": [
        "map < int , int > m ;"
      ],
      "err_line": 5,
      "err_msg": "conversion from ‘std::map<int, int>::iterator {aka std::_Rb_tree_iterator<std::pair<const int, int> >}’ to non-scalar type ‘std::map<char, int>::iterator {aka std::_Rb_tree_iterator<std::pair<const char, int> >}’ requested"
    },
    {
      "mod_line": [
        5
      ],
      "mod_code": [
        "char it = end ( m ) ;"
      ],
      "err_line": 5,
      "err_msg": "‘end’ was not declared in this scope"
    },
    {
      "mod_line": [
        8
      ],
      "mod_code": [
        "if ( ( it << second ) > 0 )"
      ],
      "err_line": 8,
      "err_msg": "‘second’ was not declared in this scope"
    },
    {
      "mod_line": [
        9
      ],
      "mod_code": [
        "if ( s [ i ] == it ) cout << s [ i ] << endl ;"
      ],
      "err_line": 9,
      "err_msg": "no match for ‘operator==’ (operand types are ‘char’ and ‘std::map<char, int>::iterator {aka std::_Rb_tree_iterator<std::pair<const char, int> >}’)"
    },
    {
      "mod_line": [
        11
      ],
      "mod_code": [
        "while ( it -> second != m . begin ( ) ) it -- ;"
      ],
      "err_line": 11,
      "err_msg": "no match for ‘operator!=’ (operand types are ‘int’ and ‘std::map<char, int>::iterator {aka std::_Rb_tree_iterator<std::pair<const char, int> >}’)"
    },
    {
      "mod_line": [
        5,
        7
      ],
      "mod_code": [
        "char it = m . begin ( ) ;",
        "for ( int 0 = 0 ; i < s . length ( ) ; i ++ )"
      ],
      "err_line": 5,
      "err_msg": "cannot convert ‘std::map<char, int>::iterator {aka std::_Rb_tree_iterator<std::pair<const char, int> >}’ to ‘char’ in initialization"
    },
    {
      "mod_line": [
        5,
        7,
        9
      ],
      "mod_code": [
        "char it = m . begin ( ) ;",
        "for ( int 0 = 0 ; i < s . length ( ) ; i ++ )",
        "if ( s [ i ] == ' it ' ) cout << s [ i ] << endl ;"
      ],
      "err_line": 5,
      "err_msg": "cannot convert ‘std::map<char, int>::iterator {aka std::_Rb_tree_iterator<std::pair<const char, int> >}’ to ‘char’ in initialization"
    },
    {
      "mod_line": [
        5,
        7,
        9,
        11
      ],
      "mod_code": [
        "char it = m . begin ( ) ;",
        "for ( int 0 = 0 ; i < s . length ( ) ; i ++ )",
        "if ( s [ i ] == ' it ' ) cout << s [ i ] << endl ;",
        "while ( it -> second != m . begin ( ) )"
      ],
      "err_line": 5,
      "err_msg": "cannot convert ‘std::map<char, int>::iterator {aka std::_Rb_tree_iterator<std::pair<const char, int> >}’ to ‘char’ in initialization"
    },
    {
      "mod_line": [
        5,
        7,
        9,
        2
      ],
      "mod_code": [
        "char it = m . begin ( ) ;",
        "for ( int 0 = 0 ; i < s . length ( ) ; i ++ )",
        "if ( s [ i ] == ' it ' ) cout << s [ i ] << endl ;",
        "while ( s >> s )"
      ],
      "err_line": 2,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        5,
        7,
        11
      ],
      "mod_code": [
        "char it = m . begin ( ) ;",
        "for ( int 0 = 0 ; i < s . length ( ) ; i ++ )",
        "while ( it -> second != m . begin ( ) )"
      ],
      "err_line": 5,
      "err_msg": "cannot convert ‘std::map<char, int>::iterator {aka std::_Rb_tree_iterator<std::pair<const char, int> >}’ to ‘char’ in initialization"
    },
    {
      "mod_line": [
        5,
        7,
        11,
        2
      ],
      "mod_code": [
        "char it = m . begin ( ) ;",
        "for ( int 0 = 0 ; i < s . length ( ) ; i ++ )",
        "while ( it -> second != m . begin ( ) )",
        "while ( s >> s )"
      ],
      "err_line": 2,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        5,
        7,
        2
      ],
      "mod_code": [
        "char it = m . begin ( ) ;",
        "for ( int 0 = 0 ; i < s . length ( ) ; i ++ )",
        "while ( s >> s )"
      ],
      "err_line": 2,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        5,
        9
      ],
      "mod_code": [
        "char it = m . begin ( ) ;",
        "if ( s [ i ] == ' it ' ) cout << s [ i ] << endl ;"
      ],
      "err_line": 5,
      "err_msg": "cannot convert ‘std::map<char, int>::iterator {aka std::_Rb_tree_iterator<std::pair<const char, int> >}’ to ‘char’ in initialization"
    },
    {
      "mod_line": [
        5,
        9,
        11
      ],
      "mod_code": [
        "char it = m . begin ( ) ;",
        "if ( s [ i ] == ' it ' ) cout << s [ i ] << endl ;",
        "while ( it -> second != m . begin ( ) )"
      ],
      "err_line": 5,
      "err_msg": "cannot convert ‘std::map<char, int>::iterator {aka std::_Rb_tree_iterator<std::pair<const char, int> >}’ to ‘char’ in initialization"
    },
    {
      "mod_line": [
        5,
        9,
        11,
        2
      ],
      "mod_code": [
        "char it = m . begin ( ) ;",
        "if ( s [ i ] == ' it ' ) cout << s [ i ] << endl ;",
        "while ( it -> second != m . begin ( ) )",
        "while ( s >> s )"
      ],
      "err_line": 2,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        5,
        9,
        2
      ],
      "mod_code": [
        "char it = m . begin ( ) ;",
        "if ( s [ i ] == ' it ' ) cout << s [ i ] << endl ;",
        "while ( s >> s )"
      ],
      "err_line": 2,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        5,
        11
      ],
      "mod_code": [
        "char it = m . begin ( ) ;",
        "while ( it -> second != m . begin ( ) )"
      ],
      "err_line": 5,
      "err_msg": "cannot convert ‘std::map<char, int>::iterator {aka std::_Rb_tree_iterator<std::pair<const char, int> >}’ to ‘char’ in initialization"
    },
    {
      "mod_line": [
        5,
        11,
        2
      ],
      "mod_code": [
        "char it = m . begin ( ) ;",
        "while ( it -> second != m . begin ( ) )",
        "while ( s >> s )"
      ],
      "err_line": 2,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        5,
        2
      ],
      "mod_code": [
        "char it = m . begin ( ) ;",
        "while ( s >> s )"
      ],
      "err_line": 2,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        7,
        9
      ],
      "mod_code": [
        "for ( int 0 = 0 ; i < s . length ( ) ; i ++ )",
        "if ( s [ i ] == ' it ' ) cout << s [ i ] << endl ;"
      ],
      "err_line": 7,
      "err_msg": "expected unqualified-id before numeric constant"
    },
    {
      "mod_line": [
        7,
        9,
        11
      ],
      "mod_code": [
        "for ( int 0 = 0 ; i < s . length ( ) ; i ++ )",
        "if ( s [ i ] == ' it ' ) cout << s [ i ] << endl ;",
        "while ( it -> second != m . begin ( ) )"
      ],
      "err_line": 7,
      "err_msg": "expected unqualified-id before numeric constant"
    },
    {
      "mod_line": [
        7,
        9,
        11,
        2
      ],
      "mod_code": [
        "for ( int 0 = 0 ; i < s . length ( ) ; i ++ )",
        "if ( s [ i ] == ' it ' ) cout << s [ i ] << endl ;",
        "while ( it -> second != m . begin ( ) )",
        "while ( s >> s )"
      ],
      "err_line": 2,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        7,
        9,
        11,
        5
      ],
      "mod_code": [
        "for ( int 0 = 0 ; i < s . length ( ) ; i ++ )",
        "if ( s [ i ] == ' it ' ) cout << s [ i ] << endl ;",
        "while ( it -> second != m . begin ( ) )",
        "char it = end ( m ) ;"
      ],
      "err_line": 5,
      "err_msg": "‘end’ was not declared in this scope"
    },
    {
      "mod_line": [
        7,
        9,
        2
      ],
      "mod_code": [
        "for ( int 0 = 0 ; i < s . length ( ) ; i ++ )",
        "if ( s [ i ] == ' it ' ) cout << s [ i ] << endl ;",
        "while ( s >> s )"
      ],
      "err_line": 2,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        7,
        9,
        2,
        5
      ],
      "mod_code": [
        "for ( int 0 = 0 ; i < s . length ( ) ; i ++ )",
        "if ( s [ i ] == ' it ' ) cout << s [ i ] << endl ;",
        "while ( s >> s )",
        "char it = end ( m ) ;"
      ],
      "err_line": 2,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        7,
        9,
        5
      ],
      "mod_code": [
        "for ( int 0 = 0 ; i < s . length ( ) ; i ++ )",
        "if ( s [ i ] == ' it ' ) cout << s [ i ] << endl ;",
        "char it = end ( m ) ;"
      ],
      "err_line": 5,
      "err_msg": "‘end’ was not declared in this scope"
    },
    {
      "mod_line": [
        7,
        11
      ],
      "mod_code": [
        "for ( int 0 = 0 ; i < s . length ( ) ; i ++ )",
        "while ( it -> second != m . begin ( ) )"
      ],
      "err_line": 7,
      "err_msg": "expected unqualified-id before numeric constant"
    },
    {
      "mod_line": [
        7,
        11,
        2
      ],
      "mod_code": [
        "for ( int 0 = 0 ; i < s . length ( ) ; i ++ )",
        "while ( it -> second != m . begin ( ) )",
        "while ( s >> s )"
      ],
      "err_line": 2,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        7,
        11,
        2,
        5
      ],
      "mod_code": [
        "for ( int 0 = 0 ; i < s . length ( ) ; i ++ )",
        "while ( it -> second != m . begin ( ) )",
        "while ( s >> s )",
        "char it = end ( m ) ;"
      ],
      "err_line": 2,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        7,
        11,
        5
      ],
      "mod_code": [
        "for ( int 0 = 0 ; i < s . length ( ) ; i ++ )",
        "while ( it -> second != m . begin ( ) )",
        "char it = end ( m ) ;"
      ],
      "err_line": 5,
      "err_msg": "‘end’ was not declared in this scope"
    },
    {
      "mod_line": [
        7,
        2
      ],
      "mod_code": [
        "for ( int 0 = 0 ; i < s . length ( ) ; i ++ )",
        "while ( s >> s )"
      ],
      "err_line": 2,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        7,
        2,
        5
      ],
      "mod_code": [
        "for ( int 0 = 0 ; i < s . length ( ) ; i ++ )",
        "while ( s >> s )",
        "char it = end ( m ) ;"
      ],
      "err_line": 2,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        7,
        5
      ],
      "mod_code": [
        "for ( int 0 = 0 ; i < s . length ( ) ; i ++ )",
        "char it = end ( m ) ;"
      ],
      "err_line": 5,
      "err_msg": "‘end’ was not declared in this scope"
    },
    {
      "mod_line": [
        9,
        11
      ],
      "mod_code": [
        "if ( s [ i ] == ' it ' ) cout << s [ i ] << endl ;",
        "while ( it -> second != m . begin ( ) )"
      ],
      "err_line": 11,
      "err_msg": "no match for ‘operator!=’ (operand types are ‘int’ and ‘std::map<char, int>::iterator {aka std::_Rb_tree_iterator<std::pair<const char, int> >}’)"
    },
    {
      "mod_line": [
        9,
        11,
        2
      ],
      "mod_code": [
        "if ( s [ i ] == ' it ' ) cout << s [ i ] << endl ;",
        "while ( it -> second != m . begin ( ) )",
        "while ( s >> s )"
      ],
      "err_line": 2,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        9,
        11,
        2,
        5
      ],
      "mod_code": [
        "if ( s [ i ] == ' it ' ) cout << s [ i ] << endl ;",
        "while ( it -> second != m . begin ( ) )",
        "while ( s >> s )",
        "char it = end ( m ) ;"
      ],
      "err_line": 2,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        9,
        11,
        5
      ],
      "mod_code": [
        "if ( s [ i ] == ' it ' ) cout << s [ i ] << endl ;",
        "while ( it -> second != m . begin ( ) )",
        "char it = end ( m ) ;"
      ],
      "err_line": 5,
      "err_msg": "‘end’ was not declared in this scope"
    },
    {
      "mod_line": [
        9,
        2
      ],
      "mod_code": [
        "if ( s [ i ] == ' it ' ) cout << s [ i ] << endl ;",
        "while ( s >> s )"
      ],
      "err_line": 2,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        9,
        2,
        5
      ],
      "mod_code": [
        "if ( s [ i ] == ' it ' ) cout << s [ i ] << endl ;",
        "while ( s >> s )",
        "char it = end ( m ) ;"
      ],
      "err_line": 2,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        9,
        5
      ],
      "mod_code": [
        "if ( s [ i ] == ' it ' ) cout << s [ i ] << endl ;",
        "char it = end ( m ) ;"
      ],
      "err_line": 5,
      "err_msg": "‘end’ was not declared in this scope"
    },
    {
      "mod_line": [
        11,
        2
      ],
      "mod_code": [
        "while ( it -> second != m . begin ( ) )",
        "while ( s >> s )"
      ],
      "err_line": 2,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        11,
        2,
        5
      ],
      "mod_code": [
        "while ( it -> second != m . begin ( ) )",
        "while ( s >> s )",
        "char it = end ( m ) ;"
      ],
      "err_line": 2,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        11,
        5
      ],
      "mod_code": [
        "while ( it -> second != m . begin ( ) )",
        "char it = end ( m ) ;"
      ],
      "err_line": 5,
      "err_msg": "‘end’ was not declared in this scope"
    },
    {
      "mod_line": [
        2,
        5
      ],
      "mod_code": [
        "while ( s >> s )",
        "char it = end ( m ) ;"
      ],
      "err_line": 2,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    }
  ]
}