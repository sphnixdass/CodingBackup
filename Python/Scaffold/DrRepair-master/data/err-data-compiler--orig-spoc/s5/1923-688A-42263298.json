{
  "meta": {
    "index": 1923,
    "hitid": "34R0BODSP1T3X209WHK3TCLXWC8E5X",
    "workerid": "AIWEXPJAU66D9",
    "probid": "688A",
    "subid": "42263298"
  },
  "lines": [
    {
      "line": 0,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 1,
      "text": "create ints n , d and m where m = 0 and an arrays of integers ans with size 100 and win with size 102",
      "code": "int n , d , win [ 102 ] , m = 0 , ans [ 100 ] ;",
      "indent": 1
    },
    {
      "line": 2,
      "text": "declare character a",
      "code": "char a ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "set sizeof ( win ) bytes at the pointer win to - 1",
      "code": "memset ( win , - 1 , sizeof ( win ) ) ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "set sizeof ( ans ) bytes at the pointer ans to 0",
      "code": "memset ( ans , 0 , sizeof ( ans ) ) ;",
      "indent": 1
    },
    {
      "line": 5,
      "text": "read n and d",
      "code": "cin >> n >> d ;",
      "indent": 1
    },
    {
      "line": 6,
      "text": "loop i from 0 to d exclusive",
      "code": "for ( int i = 0 ; i < d ; i ++ )",
      "indent": 1
    },
    {
      "line": 7,
      "text": "for j from 0 to n exclusive",
      "code": "for ( int j = 0 ; j < n ; j ++ )",
      "indent": 2
    },
    {
      "line": 8,
      "text": "read a",
      "code": "cin >> a ;",
      "indent": 3
    },
    {
      "line": 9,
      "text": "multiply win [ i ] by a - ' 0 '",
      "code": "win [ i ] *= a - ' 0 ' ;",
      "indent": 3
    },
    {
      "line": 10,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 11,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 12,
      "text": "for i from 0 to d exclusive",
      "code": "for ( int i = 0 ; i < d ; i ++ )",
      "indent": 1
    },
    {
      "line": 13,
      "text": "if win [ i ] = - 1",
      "code": "if ( win [ i ] == - 1 )",
      "indent": 2
    },
    {
      "line": 14,
      "text": "assign m to ans [ i ]",
      "code": "ans [ i ] = m ;",
      "indent": 3
    },
    {
      "line": 15,
      "text": "change m to 0",
      "code": "m = 0 ;",
      "indent": 3
    },
    {
      "line": 16,
      "text": "else",
      "code": "else",
      "indent": 2
    },
    {
      "line": 17,
      "text": "increment m by one",
      "code": "m ++ ;",
      "indent": 3
    },
    {
      "line": 18,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 19,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 20,
      "text": "sort ans",
      "code": "sort ( ans , ans + 100 ) ;",
      "indent": 1
    },
    {
      "line": 21,
      "text": "print max of ans [ 99 ] and m",
      "code": "cout << max ( ans [ 99 ] , m ) << endl ;",
      "indent": 1
    },
    {
      "line": 22,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 23,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        1
      ],
      "mod_code": [
        "int n , d [ 100 ] , win [ 100 ] , win [ 102 ] ;"
      ],
      "err_line": 1,
      "err_msg": "conflicting declaration ‘int win [102]’"
    },
    {
      "mod_line": [
        20
      ],
      "mod_code": [
        "sort ( ans . begin ( ) , ans . end ( ) ) ;"
      ],
      "err_line": 20,
      "err_msg": "request for member ‘begin’ in ‘ans’, which is of non-class type ‘int [100]’"
    },
    {
      "mod_line": [
        1
      ],
      "mod_code": [
        "int n , d [ 100 ] , win [ 100 ] , m = 0 ;"
      ],
      "err_line": 4,
      "err_msg": "‘ans’ was not declared in this scope"
    },
    {
      "mod_line": [
        2
      ],
      "mod_code": [
        "char a [ 8 ] ;"
      ],
      "err_line": 9,
      "err_msg": "invalid operands of types ‘int’ and ‘char*’ to binary ‘operator*’"
    },
    {
      "mod_line": [
        3
      ],
      "mod_code": [
        "memset ( win , - 1 ) , sizeof ( win ) ;"
      ],
      "err_line": 3,
      "err_msg": "too few arguments to function ‘void* memset(void*, int, size_t)’"
    },
    {
      "mod_line": [
        4
      ],
      "mod_code": [
        "memset ( ans ) , sizeof ( ans ) ;"
      ],
      "err_line": 4,
      "err_msg": "too few arguments to function ‘void* memset(void*, int, size_t)’"
    },
    {
      "mod_line": [
        6
      ],
      "mod_code": [
        "for ( i = 0 ; i < d ; i ++ )"
      ],
      "err_line": 6,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        7
      ],
      "mod_code": [
        "for ( j = 0 ; j < n ; j ++ )"
      ],
      "err_line": 7,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        9
      ],
      "mod_code": [
        "win [ i ] = win - a - ' 0 ' ;"
      ],
      "err_line": 9,
      "err_msg": "invalid conversion from ‘int*’ to ‘int’ [-fpermissive]"
    },
    {
      "mod_line": [
        12
      ],
      "mod_code": [
        "for ( i = 0 ; i < d ; i ++ )"
      ],
      "err_line": 12,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        21
      ],
      "mod_code": [
        "cout << max ( ans [ i ] , m ) << endl ;"
      ],
      "err_line": 21,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        1,
        20
      ],
      "mod_code": [
        "int n , d [ 100 ] , win [ 100 ] , win [ 102 ] ;",
        "sort ( ans . begin ( ) , ans . end ( ) ) ;"
      ],
      "err_line": 1,
      "err_msg": "conflicting declaration ‘int win [102]’"
    },
    {
      "mod_line": [
        1,
        20,
        4
      ],
      "mod_code": [
        "int n , d [ 100 ] , win [ 100 ] , win [ 102 ] ;",
        "sort ( ans . begin ( ) , ans . end ( ) ) ;",
        "memset ( ans ) , sizeof ( ans ) ;"
      ],
      "err_line": 1,
      "err_msg": "conflicting declaration ‘int win [102]’"
    },
    {
      "mod_line": [
        1,
        20,
        4,
        12
      ],
      "mod_code": [
        "int n , d [ 100 ] , win [ 100 ] , win [ 102 ] ;",
        "sort ( ans . begin ( ) , ans . end ( ) ) ;",
        "memset ( ans ) , sizeof ( ans ) ;",
        "for ( i = 0 ; i < d ; i ++ )"
      ],
      "err_line": 1,
      "err_msg": "conflicting declaration ‘int win [102]’"
    },
    {
      "mod_line": [
        1,
        20,
        4,
        6
      ],
      "mod_code": [
        "int n , d [ 100 ] , win [ 100 ] , win [ 102 ] ;",
        "sort ( ans . begin ( ) , ans . end ( ) ) ;",
        "memset ( ans ) , sizeof ( ans ) ;",
        "for ( i = 0 ; i < d ; i ++ )"
      ],
      "err_line": 1,
      "err_msg": "conflicting declaration ‘int win [102]’"
    },
    {
      "mod_line": [
        1,
        20,
        4,
        14
      ],
      "mod_code": [
        "int n , d [ 100 ] , win [ 100 ] , win [ 102 ] ;",
        "sort ( ans . begin ( ) , ans . end ( ) ) ;",
        "memset ( ans ) , sizeof ( ans ) ;",
        "ans [ i ] = ' m ' ;"
      ],
      "err_line": 1,
      "err_msg": "conflicting declaration ‘int win [102]’"
    },
    {
      "mod_line": [
        1,
        20,
        12
      ],
      "mod_code": [
        "int n , d [ 100 ] , win [ 100 ] , win [ 102 ] ;",
        "sort ( ans . begin ( ) , ans . end ( ) ) ;",
        "for ( i = 0 ; i < d ; i ++ )"
      ],
      "err_line": 1,
      "err_msg": "conflicting declaration ‘int win [102]’"
    },
    {
      "mod_line": [
        1,
        20,
        12,
        6
      ],
      "mod_code": [
        "int n , d [ 100 ] , win [ 100 ] , win [ 102 ] ;",
        "sort ( ans . begin ( ) , ans . end ( ) ) ;",
        "for ( i = 0 ; i < d ; i ++ )",
        "for ( i = 0 ; i < d ; i ++ )"
      ],
      "err_line": 1,
      "err_msg": "conflicting declaration ‘int win [102]’"
    },
    {
      "mod_line": [
        1,
        20,
        12,
        14
      ],
      "mod_code": [
        "int n , d [ 100 ] , win [ 100 ] , win [ 102 ] ;",
        "sort ( ans . begin ( ) , ans . end ( ) ) ;",
        "for ( i = 0 ; i < d ; i ++ )",
        "ans [ i ] = ' m ' ;"
      ],
      "err_line": 1,
      "err_msg": "conflicting declaration ‘int win [102]’"
    },
    {
      "mod_line": [
        1,
        20,
        6
      ],
      "mod_code": [
        "int n , d [ 100 ] , win [ 100 ] , win [ 102 ] ;",
        "sort ( ans . begin ( ) , ans . end ( ) ) ;",
        "for ( i = 0 ; i < d ; i ++ )"
      ],
      "err_line": 1,
      "err_msg": "conflicting declaration ‘int win [102]’"
    },
    {
      "mod_line": [
        1,
        20,
        6,
        14
      ],
      "mod_code": [
        "int n , d [ 100 ] , win [ 100 ] , win [ 102 ] ;",
        "sort ( ans . begin ( ) , ans . end ( ) ) ;",
        "for ( i = 0 ; i < d ; i ++ )",
        "ans [ i ] = ' m ' ;"
      ],
      "err_line": 1,
      "err_msg": "conflicting declaration ‘int win [102]’"
    },
    {
      "mod_line": [
        1,
        20,
        14
      ],
      "mod_code": [
        "int n , d [ 100 ] , win [ 100 ] , win [ 102 ] ;",
        "sort ( ans . begin ( ) , ans . end ( ) ) ;",
        "ans [ i ] = ' m ' ;"
      ],
      "err_line": 1,
      "err_msg": "conflicting declaration ‘int win [102]’"
    },
    {
      "mod_line": [
        1,
        4
      ],
      "mod_code": [
        "int n , d [ 100 ] , win [ 100 ] , win [ 102 ] ;",
        "memset ( ans ) , sizeof ( ans ) ;"
      ],
      "err_line": 1,
      "err_msg": "conflicting declaration ‘int win [102]’"
    },
    {
      "mod_line": [
        1,
        4,
        12
      ],
      "mod_code": [
        "int n , d [ 100 ] , win [ 100 ] , win [ 102 ] ;",
        "memset ( ans ) , sizeof ( ans ) ;",
        "for ( i = 0 ; i < d ; i ++ )"
      ],
      "err_line": 1,
      "err_msg": "conflicting declaration ‘int win [102]’"
    },
    {
      "mod_line": [
        1,
        4,
        12,
        6
      ],
      "mod_code": [
        "int n , d [ 100 ] , win [ 100 ] , win [ 102 ] ;",
        "memset ( ans ) , sizeof ( ans ) ;",
        "for ( i = 0 ; i < d ; i ++ )",
        "for ( i = 0 ; i < d ; i ++ )"
      ],
      "err_line": 1,
      "err_msg": "conflicting declaration ‘int win [102]’"
    },
    {
      "mod_line": [
        1,
        4,
        12,
        14
      ],
      "mod_code": [
        "int n , d [ 100 ] , win [ 100 ] , win [ 102 ] ;",
        "memset ( ans ) , sizeof ( ans ) ;",
        "for ( i = 0 ; i < d ; i ++ )",
        "ans [ i ] = ' m ' ;"
      ],
      "err_line": 1,
      "err_msg": "conflicting declaration ‘int win [102]’"
    },
    {
      "mod_line": [
        1,
        4,
        6
      ],
      "mod_code": [
        "int n , d [ 100 ] , win [ 100 ] , win [ 102 ] ;",
        "memset ( ans ) , sizeof ( ans ) ;",
        "for ( i = 0 ; i < d ; i ++ )"
      ],
      "err_line": 1,
      "err_msg": "conflicting declaration ‘int win [102]’"
    },
    {
      "mod_line": [
        1,
        4,
        6,
        14
      ],
      "mod_code": [
        "int n , d [ 100 ] , win [ 100 ] , win [ 102 ] ;",
        "memset ( ans ) , sizeof ( ans ) ;",
        "for ( i = 0 ; i < d ; i ++ )",
        "ans [ i ] = ' m ' ;"
      ],
      "err_line": 1,
      "err_msg": "conflicting declaration ‘int win [102]’"
    },
    {
      "mod_line": [
        1,
        4,
        14
      ],
      "mod_code": [
        "int n , d [ 100 ] , win [ 100 ] , win [ 102 ] ;",
        "memset ( ans ) , sizeof ( ans ) ;",
        "ans [ i ] = ' m ' ;"
      ],
      "err_line": 1,
      "err_msg": "conflicting declaration ‘int win [102]’"
    },
    {
      "mod_line": [
        1,
        12
      ],
      "mod_code": [
        "int n , d [ 100 ] , win [ 100 ] , win [ 102 ] ;",
        "for ( i = 0 ; i < d ; i ++ )"
      ],
      "err_line": 1,
      "err_msg": "conflicting declaration ‘int win [102]’"
    },
    {
      "mod_line": [
        1,
        12,
        6
      ],
      "mod_code": [
        "int n , d [ 100 ] , win [ 100 ] , win [ 102 ] ;",
        "for ( i = 0 ; i < d ; i ++ )",
        "for ( i = 0 ; i < d ; i ++ )"
      ],
      "err_line": 1,
      "err_msg": "conflicting declaration ‘int win [102]’"
    },
    {
      "mod_line": [
        1,
        12,
        6,
        14
      ],
      "mod_code": [
        "int n , d [ 100 ] , win [ 100 ] , win [ 102 ] ;",
        "for ( i = 0 ; i < d ; i ++ )",
        "for ( i = 0 ; i < d ; i ++ )",
        "ans [ i ] = ' m ' ;"
      ],
      "err_line": 1,
      "err_msg": "conflicting declaration ‘int win [102]’"
    },
    {
      "mod_line": [
        1,
        12,
        14
      ],
      "mod_code": [
        "int n , d [ 100 ] , win [ 100 ] , win [ 102 ] ;",
        "for ( i = 0 ; i < d ; i ++ )",
        "ans [ i ] = ' m ' ;"
      ],
      "err_line": 1,
      "err_msg": "conflicting declaration ‘int win [102]’"
    },
    {
      "mod_line": [
        1,
        6
      ],
      "mod_code": [
        "int n , d [ 100 ] , win [ 100 ] , win [ 102 ] ;",
        "for ( i = 0 ; i < d ; i ++ )"
      ],
      "err_line": 1,
      "err_msg": "conflicting declaration ‘int win [102]’"
    },
    {
      "mod_line": [
        1,
        6,
        14
      ],
      "mod_code": [
        "int n , d [ 100 ] , win [ 100 ] , win [ 102 ] ;",
        "for ( i = 0 ; i < d ; i ++ )",
        "ans [ i ] = ' m ' ;"
      ],
      "err_line": 1,
      "err_msg": "conflicting declaration ‘int win [102]’"
    },
    {
      "mod_line": [
        1,
        14
      ],
      "mod_code": [
        "int n , d [ 100 ] , win [ 100 ] , win [ 102 ] ;",
        "ans [ i ] = ' m ' ;"
      ],
      "err_line": 1,
      "err_msg": "conflicting declaration ‘int win [102]’"
    },
    {
      "mod_line": [
        20,
        4
      ],
      "mod_code": [
        "sort ( ans . begin ( ) , ans . end ( ) ) ;",
        "memset ( ans ) , sizeof ( ans ) ;"
      ],
      "err_line": 4,
      "err_msg": "too few arguments to function ‘void* memset(void*, int, size_t)’"
    },
    {
      "mod_line": [
        20,
        4,
        12
      ],
      "mod_code": [
        "sort ( ans . begin ( ) , ans . end ( ) ) ;",
        "memset ( ans ) , sizeof ( ans ) ;",
        "for ( i = 0 ; i < d ; i ++ )"
      ],
      "err_line": 4,
      "err_msg": "too few arguments to function ‘void* memset(void*, int, size_t)’"
    },
    {
      "mod_line": [
        20,
        4,
        12,
        6
      ],
      "mod_code": [
        "sort ( ans . begin ( ) , ans . end ( ) ) ;",
        "memset ( ans ) , sizeof ( ans ) ;",
        "for ( i = 0 ; i < d ; i ++ )",
        "for ( i = 0 ; i < d ; i ++ )"
      ],
      "err_line": 4,
      "err_msg": "too few arguments to function ‘void* memset(void*, int, size_t)’"
    },
    {
      "mod_line": [
        20,
        4,
        12,
        14
      ],
      "mod_code": [
        "sort ( ans . begin ( ) , ans . end ( ) ) ;",
        "memset ( ans ) , sizeof ( ans ) ;",
        "for ( i = 0 ; i < d ; i ++ )",
        "ans [ i ] = ' m ' ;"
      ],
      "err_line": 4,
      "err_msg": "too few arguments to function ‘void* memset(void*, int, size_t)’"
    },
    {
      "mod_line": [
        20,
        4,
        6
      ],
      "mod_code": [
        "sort ( ans . begin ( ) , ans . end ( ) ) ;",
        "memset ( ans ) , sizeof ( ans ) ;",
        "for ( i = 0 ; i < d ; i ++ )"
      ],
      "err_line": 4,
      "err_msg": "too few arguments to function ‘void* memset(void*, int, size_t)’"
    },
    {
      "mod_line": [
        20,
        4,
        6,
        14
      ],
      "mod_code": [
        "sort ( ans . begin ( ) , ans . end ( ) ) ;",
        "memset ( ans ) , sizeof ( ans ) ;",
        "for ( i = 0 ; i < d ; i ++ )",
        "ans [ i ] = ' m ' ;"
      ],
      "err_line": 4,
      "err_msg": "too few arguments to function ‘void* memset(void*, int, size_t)’"
    },
    {
      "mod_line": [
        20,
        4,
        14
      ],
      "mod_code": [
        "sort ( ans . begin ( ) , ans . end ( ) ) ;",
        "memset ( ans ) , sizeof ( ans ) ;",
        "ans [ i ] = ' m ' ;"
      ],
      "err_line": 4,
      "err_msg": "too few arguments to function ‘void* memset(void*, int, size_t)’"
    },
    {
      "mod_line": [
        20,
        12
      ],
      "mod_code": [
        "sort ( ans . begin ( ) , ans . end ( ) ) ;",
        "for ( i = 0 ; i < d ; i ++ )"
      ],
      "err_line": 12,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        20,
        12,
        6
      ],
      "mod_code": [
        "sort ( ans . begin ( ) , ans . end ( ) ) ;",
        "for ( i = 0 ; i < d ; i ++ )",
        "for ( i = 0 ; i < d ; i ++ )"
      ],
      "err_line": 6,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        12,
        6,
        14
      ],
      "mod_code": [
        "sort ( ans . begin ( ) , ans . end ( ) ) ;",
        "for ( i = 0 ; i < d ; i ++ )",
        "for ( i = 0 ; i < d ; i ++ )",
        "ans [ i ] = ' m ' ;"
      ],
      "err_line": 6,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        12,
        14
      ],
      "mod_code": [
        "sort ( ans . begin ( ) , ans . end ( ) ) ;",
        "for ( i = 0 ; i < d ; i ++ )",
        "ans [ i ] = ' m ' ;"
      ],
      "err_line": 12,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        20,
        6
      ],
      "mod_code": [
        "sort ( ans . begin ( ) , ans . end ( ) ) ;",
        "for ( i = 0 ; i < d ; i ++ )"
      ],
      "err_line": 6,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        6,
        14
      ],
      "mod_code": [
        "sort ( ans . begin ( ) , ans . end ( ) ) ;",
        "for ( i = 0 ; i < d ; i ++ )",
        "ans [ i ] = ' m ' ;"
      ],
      "err_line": 6,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        14
      ],
      "mod_code": [
        "sort ( ans . begin ( ) , ans . end ( ) ) ;",
        "ans [ i ] = ' m ' ;"
      ],
      "err_line": 20,
      "err_msg": "request for member ‘begin’ in ‘ans’, which is of non-class type ‘int [100]’"
    },
    {
      "mod_line": [
        4,
        12
      ],
      "mod_code": [
        "memset ( ans ) , sizeof ( ans ) ;",
        "for ( i = 0 ; i < d ; i ++ )"
      ],
      "err_line": 4,
      "err_msg": "too few arguments to function ‘void* memset(void*, int, size_t)’"
    },
    {
      "mod_line": [
        4,
        12,
        6
      ],
      "mod_code": [
        "memset ( ans ) , sizeof ( ans ) ;",
        "for ( i = 0 ; i < d ; i ++ )",
        "for ( i = 0 ; i < d ; i ++ )"
      ],
      "err_line": 4,
      "err_msg": "too few arguments to function ‘void* memset(void*, int, size_t)’"
    },
    {
      "mod_line": [
        4,
        12,
        6,
        14
      ],
      "mod_code": [
        "memset ( ans ) , sizeof ( ans ) ;",
        "for ( i = 0 ; i < d ; i ++ )",
        "for ( i = 0 ; i < d ; i ++ )",
        "ans [ i ] = ' m ' ;"
      ],
      "err_line": 4,
      "err_msg": "too few arguments to function ‘void* memset(void*, int, size_t)’"
    },
    {
      "mod_line": [
        4,
        12,
        14
      ],
      "mod_code": [
        "memset ( ans ) , sizeof ( ans ) ;",
        "for ( i = 0 ; i < d ; i ++ )",
        "ans [ i ] = ' m ' ;"
      ],
      "err_line": 4,
      "err_msg": "too few arguments to function ‘void* memset(void*, int, size_t)’"
    },
    {
      "mod_line": [
        4,
        6
      ],
      "mod_code": [
        "memset ( ans ) , sizeof ( ans ) ;",
        "for ( i = 0 ; i < d ; i ++ )"
      ],
      "err_line": 4,
      "err_msg": "too few arguments to function ‘void* memset(void*, int, size_t)’"
    },
    {
      "mod_line": [
        4,
        6,
        14
      ],
      "mod_code": [
        "memset ( ans ) , sizeof ( ans ) ;",
        "for ( i = 0 ; i < d ; i ++ )",
        "ans [ i ] = ' m ' ;"
      ],
      "err_line": 4,
      "err_msg": "too few arguments to function ‘void* memset(void*, int, size_t)’"
    },
    {
      "mod_line": [
        4,
        14
      ],
      "mod_code": [
        "memset ( ans ) , sizeof ( ans ) ;",
        "ans [ i ] = ' m ' ;"
      ],
      "err_line": 4,
      "err_msg": "too few arguments to function ‘void* memset(void*, int, size_t)’"
    },
    {
      "mod_line": [
        12,
        6
      ],
      "mod_code": [
        "for ( i = 0 ; i < d ; i ++ )",
        "for ( i = 0 ; i < d ; i ++ )"
      ],
      "err_line": 6,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        12,
        6,
        14
      ],
      "mod_code": [
        "for ( i = 0 ; i < d ; i ++ )",
        "for ( i = 0 ; i < d ; i ++ )",
        "ans [ i ] = ' m ' ;"
      ],
      "err_line": 6,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        12,
        14
      ],
      "mod_code": [
        "for ( i = 0 ; i < d ; i ++ )",
        "ans [ i ] = ' m ' ;"
      ],
      "err_line": 12,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        6,
        14
      ],
      "mod_code": [
        "for ( i = 0 ; i < d ; i ++ )",
        "ans [ i ] = ' m ' ;"
      ],
      "err_line": 6,
      "err_msg": "‘i’ was not declared in this scope"
    }
  ]
}