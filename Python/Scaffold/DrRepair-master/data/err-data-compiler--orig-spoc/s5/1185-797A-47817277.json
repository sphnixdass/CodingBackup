{
  "meta": {
    "index": 1185,
    "hitid": "3OQQD2WO8I0CZSFREHM1ZUL5A9RI3N",
    "workerid": "A1NBHCFZKJGHKW",
    "probid": "797A",
    "subid": "47817277"
  },
  "lines": [
    {
      "line": 0,
      "text": "d = long long vector",
      "code": "vector < long long > d ;",
      "indent": 0
    },
    {
      "line": 1,
      "text": "criba = bool array of size 100001",
      "code": "bool criba [ 100001 ] ;",
      "indent": 0
    },
    {
      "line": 2,
      "text": "in function crearCriba taking reference to const long long n",
      "code": "void crearCriba ( const long long & n )",
      "indent": 0
    },
    {
      "line": 3,
      "text": "set all values of criba to 0",
      "code": "memset ( criba , 0 , sizeof ( criba ) ) ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "set criba [ 0 ] and criba [ 1 ] to true",
      "code": "criba [ 0 ] = criba [ 1 ] = true ;",
      "indent": 1
    },
    {
      "line": 5,
      "text": "for i = 2 to n inclusive",
      "code": "for ( long long i = 2 ; i <= n ; i ++ )",
      "indent": 1
    },
    {
      "line": 6,
      "text": "if not criba [ i ]",
      "code": "if ( ! criba [ i ] )",
      "indent": 2
    },
    {
      "line": 7,
      "text": "iterate j from i * 2 incrementing j by i while j * j < = n set criba [ j ] to true",
      "code": "for ( long long j = ( i * 2 ) ; ( ( j * j ) <= n ) ; j += i ) criba [ j ] = true ;",
      "indent": 3
    },
    {
      "line": 8,
      "text": "for i = 2 to n inclusive",
      "code": "for ( long long i = 2 ; i <= n ; i ++ )",
      "indent": 1
    },
    {
      "line": 9,
      "text": "if not criba [ i ] append i to d",
      "code": "if ( ! criba [ i ] ) d . push_back ( i ) ;",
      "indent": 2
    },
    {
      "line": 10,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    },
    {
      "line": 11,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 12,
      "text": "n , k , p = long long with p = 0",
      "code": "long long n , k , p = 0 ;",
      "indent": 1
    },
    {
      "line": 13,
      "text": "read n then k",
      "code": "cin >> n >> k ;",
      "indent": 1
    },
    {
      "line": 14,
      "text": "call crearCriba of n",
      "code": "crearCriba ( n ) ;",
      "indent": 1
    },
    {
      "line": 15,
      "text": "r = long long vector",
      "code": "vector < long long > r ;",
      "indent": 1
    },
    {
      "line": 16,
      "text": "loop while n > 1",
      "code": "while ( n > 1 )",
      "indent": 1
    },
    {
      "line": 17,
      "text": "if not ( n mod d [ p ] )",
      "code": "if ( ! ( n % d [ p ] ) )",
      "indent": 2
    },
    {
      "line": 18,
      "text": "set n to n / d [ p ]",
      "code": "n /= d [ p ] ;",
      "indent": 3
    },
    {
      "line": 19,
      "text": "append d [ p ] to r",
      "code": "r . push_back ( d [ p ] ) ;",
      "indent": 3
    },
    {
      "line": 20,
      "text": "else if p + 1 < size of d as int",
      "code": "else if ( ( p + 1 ) < int ( d . size ( ) ) )",
      "indent": 2
    },
    {
      "line": 21,
      "text": "increment p",
      "code": "p ++ ;",
      "indent": 3
    },
    {
      "line": 22,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 23,
      "text": "if size of r as int > = k",
      "code": "if ( int ( r . size ( ) ) >= k )",
      "indent": 1
    },
    {
      "line": 24,
      "text": "mult = long long with mult = 1",
      "code": "long long mult = 1 ;",
      "indent": 2
    },
    {
      "line": 25,
      "text": "for i = 0 to k - 1 print r [ i ] then \" \"",
      "code": "for ( long long i = 0 ; i < ( k - 1 ) ; i ++ ) cout << r [ i ] << \" \" ;",
      "indent": 2
    },
    {
      "line": 26,
      "text": "for i = k - 1 to size of r as int set mult as mult * r [ i ]",
      "code": "for ( long long i = ( k - 1 ) ; i < int ( r . size ( ) ) ; i ++ ) mult *= r [ i ] ;",
      "indent": 2
    },
    {
      "line": 27,
      "text": "if mult > 1 print mult",
      "code": "if ( mult > 1 ) cout << mult << \" \\n \" ;",
      "indent": 2
    },
    {
      "line": 28,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 2
    },
    {
      "line": 29,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 30,
      "text": "print \" - 1 \"",
      "code": "cout << \" -1\\n \" ;",
      "indent": 1
    },
    {
      "line": 31,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 32,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        19
      ],
      "mod_code": [
        "r += d [ p ] ;"
      ],
      "err_line": 19,
      "err_msg": "no match for ‘operator+=’ (operand types are ‘std::vector<long long int>’ and ‘long long int’)"
    },
    {
      "mod_line": [
        0
      ],
      "mod_code": [
        "vector < long long d ;"
      ],
      "err_line": 0,
      "err_msg": "template argument 1 is invalid"
    },
    {
      "mod_line": [
        2
      ],
      "mod_code": [
        "void crearCriba ( const long long x )"
      ],
      "err_line": 5,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        3
      ],
      "mod_code": [
        "for ( int i = 0 ; i < 0 ; i ++ ) { criba = 0 ; }"
      ],
      "err_line": 3,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘bool [100001]’"
    },
    {
      "mod_line": [
        5
      ],
      "mod_code": [
        "for ( i = 2 ; i <= n ; i ++ )"
      ],
      "err_line": 5,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        8
      ],
      "mod_code": [
        "for ( i = 2 ; i <= n ; i ++ )"
      ],
      "err_line": 8,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        14
      ],
      "mod_code": [
        "crearCriba ( ) ;"
      ],
      "err_line": 14,
      "err_msg": "too few arguments to function ‘void crearCriba(const long long int&)’"
    },
    {
      "mod_line": [
        15
      ],
      "mod_code": [
        "vector < long long = > r ;"
      ],
      "err_line": 15,
      "err_msg": "template argument 1 is invalid"
    },
    {
      "mod_line": [
        19
      ],
      "mod_code": [
        "r = r + d [ p ] ;"
      ],
      "err_line": 19,
      "err_msg": "no match for ‘operator+’ (operand types are ‘std::vector<long long int>’ and ‘long long int’)"
    },
    {
      "mod_line": [
        23
      ],
      "mod_code": [
        "if ( int ( r ) . size ( ) >= k )"
      ],
      "err_line": 23,
      "err_msg": "invalid cast from type ‘std::vector<long long int>’ to type ‘int’"
    },
    {
      "mod_line": [
        19,
        0
      ],
      "mod_code": [
        "r += d [ p ] ;",
        "vector < long long d ;"
      ],
      "err_line": 0,
      "err_msg": "template argument 1 is invalid"
    },
    {
      "mod_line": [
        19,
        0,
        2
      ],
      "mod_code": [
        "r += d [ p ] ;",
        "vector < long long d ;",
        "void crearCriba ( const long long x )"
      ],
      "err_line": 0,
      "err_msg": "template argument 1 is invalid"
    },
    {
      "mod_line": [
        19,
        0,
        2,
        3
      ],
      "mod_code": [
        "r += d [ p ] ;",
        "vector < long long d ;",
        "void crearCriba ( const long long x )",
        "for ( int i = 0 ; i < 0 ; i ++ ) { criba = 0 ; }"
      ],
      "err_line": 0,
      "err_msg": "template argument 1 is invalid"
    },
    {
      "mod_line": [
        19,
        0,
        2,
        15
      ],
      "mod_code": [
        "r += d [ p ] ;",
        "vector < long long d ;",
        "void crearCriba ( const long long x )",
        "vector < long long = > r ;"
      ],
      "err_line": 0,
      "err_msg": "template argument 1 is invalid"
    },
    {
      "mod_line": [
        19,
        0,
        2,
        8
      ],
      "mod_code": [
        "r += d [ p ] ;",
        "vector < long long d ;",
        "void crearCriba ( const long long x )",
        "for ( i = 2 ; i <= n ; i ++ )"
      ],
      "err_line": 0,
      "err_msg": "template argument 1 is invalid"
    },
    {
      "mod_line": [
        19,
        0,
        3
      ],
      "mod_code": [
        "r += d [ p ] ;",
        "vector < long long d ;",
        "for ( int i = 0 ; i < 0 ; i ++ ) { criba = 0 ; }"
      ],
      "err_line": 0,
      "err_msg": "template argument 1 is invalid"
    },
    {
      "mod_line": [
        19,
        0,
        3,
        15
      ],
      "mod_code": [
        "r += d [ p ] ;",
        "vector < long long d ;",
        "for ( int i = 0 ; i < 0 ; i ++ ) { criba = 0 ; }",
        "vector < long long = > r ;"
      ],
      "err_line": 0,
      "err_msg": "template argument 1 is invalid"
    },
    {
      "mod_line": [
        19,
        0,
        3,
        8
      ],
      "mod_code": [
        "r += d [ p ] ;",
        "vector < long long d ;",
        "for ( int i = 0 ; i < 0 ; i ++ ) { criba = 0 ; }",
        "for ( i = 2 ; i <= n ; i ++ )"
      ],
      "err_line": 0,
      "err_msg": "template argument 1 is invalid"
    },
    {
      "mod_line": [
        19,
        0,
        15
      ],
      "mod_code": [
        "r += d [ p ] ;",
        "vector < long long d ;",
        "vector < long long = > r ;"
      ],
      "err_line": 0,
      "err_msg": "template argument 1 is invalid"
    },
    {
      "mod_line": [
        19,
        0,
        15,
        8
      ],
      "mod_code": [
        "r += d [ p ] ;",
        "vector < long long d ;",
        "vector < long long = > r ;",
        "for ( i = 2 ; i <= n ; i ++ )"
      ],
      "err_line": 0,
      "err_msg": "template argument 1 is invalid"
    },
    {
      "mod_line": [
        19,
        0,
        8
      ],
      "mod_code": [
        "r += d [ p ] ;",
        "vector < long long d ;",
        "for ( i = 2 ; i <= n ; i ++ )"
      ],
      "err_line": 0,
      "err_msg": "template argument 1 is invalid"
    },
    {
      "mod_line": [
        19,
        2
      ],
      "mod_code": [
        "r += d [ p ] ;",
        "void crearCriba ( const long long x )"
      ],
      "err_line": 5,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        19,
        2,
        3
      ],
      "mod_code": [
        "r += d [ p ] ;",
        "void crearCriba ( const long long x )",
        "for ( int i = 0 ; i < 0 ; i ++ ) { criba = 0 ; }"
      ],
      "err_line": 3,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘bool [100001]’"
    },
    {
      "mod_line": [
        19,
        2,
        3,
        15
      ],
      "mod_code": [
        "r += d [ p ] ;",
        "void crearCriba ( const long long x )",
        "for ( int i = 0 ; i < 0 ; i ++ ) { criba = 0 ; }",
        "vector < long long = > r ;"
      ],
      "err_line": 3,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘bool [100001]’"
    },
    {
      "mod_line": [
        19,
        2,
        3,
        8
      ],
      "mod_code": [
        "r += d [ p ] ;",
        "void crearCriba ( const long long x )",
        "for ( int i = 0 ; i < 0 ; i ++ ) { criba = 0 ; }",
        "for ( i = 2 ; i <= n ; i ++ )"
      ],
      "err_line": 3,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘bool [100001]’"
    },
    {
      "mod_line": [
        19,
        2,
        15
      ],
      "mod_code": [
        "r += d [ p ] ;",
        "void crearCriba ( const long long x )",
        "vector < long long = > r ;"
      ],
      "err_line": 5,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        19,
        2,
        15,
        8
      ],
      "mod_code": [
        "r += d [ p ] ;",
        "void crearCriba ( const long long x )",
        "vector < long long = > r ;",
        "for ( i = 2 ; i <= n ; i ++ )"
      ],
      "err_line": 5,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        19,
        2,
        8
      ],
      "mod_code": [
        "r += d [ p ] ;",
        "void crearCriba ( const long long x )",
        "for ( i = 2 ; i <= n ; i ++ )"
      ],
      "err_line": 5,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        19,
        3
      ],
      "mod_code": [
        "r += d [ p ] ;",
        "for ( int i = 0 ; i < 0 ; i ++ ) { criba = 0 ; }"
      ],
      "err_line": 3,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘bool [100001]’"
    },
    {
      "mod_line": [
        19,
        3,
        15
      ],
      "mod_code": [
        "r += d [ p ] ;",
        "for ( int i = 0 ; i < 0 ; i ++ ) { criba = 0 ; }",
        "vector < long long = > r ;"
      ],
      "err_line": 3,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘bool [100001]’"
    },
    {
      "mod_line": [
        19,
        3,
        15,
        8
      ],
      "mod_code": [
        "r += d [ p ] ;",
        "for ( int i = 0 ; i < 0 ; i ++ ) { criba = 0 ; }",
        "vector < long long = > r ;",
        "for ( i = 2 ; i <= n ; i ++ )"
      ],
      "err_line": 3,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘bool [100001]’"
    },
    {
      "mod_line": [
        19,
        3,
        8
      ],
      "mod_code": [
        "r += d [ p ] ;",
        "for ( int i = 0 ; i < 0 ; i ++ ) { criba = 0 ; }",
        "for ( i = 2 ; i <= n ; i ++ )"
      ],
      "err_line": 3,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘bool [100001]’"
    },
    {
      "mod_line": [
        19,
        15
      ],
      "mod_code": [
        "r += d [ p ] ;",
        "vector < long long = > r ;"
      ],
      "err_line": 15,
      "err_msg": "template argument 1 is invalid"
    },
    {
      "mod_line": [
        19,
        15,
        8
      ],
      "mod_code": [
        "r += d [ p ] ;",
        "vector < long long = > r ;",
        "for ( i = 2 ; i <= n ; i ++ )"
      ],
      "err_line": 8,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        19,
        8
      ],
      "mod_code": [
        "r += d [ p ] ;",
        "for ( i = 2 ; i <= n ; i ++ )"
      ],
      "err_line": 8,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        0,
        2
      ],
      "mod_code": [
        "vector < long long d ;",
        "void crearCriba ( const long long x )"
      ],
      "err_line": 0,
      "err_msg": "template argument 1 is invalid"
    },
    {
      "mod_line": [
        0,
        2,
        3
      ],
      "mod_code": [
        "vector < long long d ;",
        "void crearCriba ( const long long x )",
        "for ( int i = 0 ; i < 0 ; i ++ ) { criba = 0 ; }"
      ],
      "err_line": 0,
      "err_msg": "template argument 1 is invalid"
    },
    {
      "mod_line": [
        0,
        2,
        3,
        15
      ],
      "mod_code": [
        "vector < long long d ;",
        "void crearCriba ( const long long x )",
        "for ( int i = 0 ; i < 0 ; i ++ ) { criba = 0 ; }",
        "vector < long long = > r ;"
      ],
      "err_line": 0,
      "err_msg": "template argument 1 is invalid"
    },
    {
      "mod_line": [
        0,
        2,
        3,
        8
      ],
      "mod_code": [
        "vector < long long d ;",
        "void crearCriba ( const long long x )",
        "for ( int i = 0 ; i < 0 ; i ++ ) { criba = 0 ; }",
        "for ( i = 2 ; i <= n ; i ++ )"
      ],
      "err_line": 0,
      "err_msg": "template argument 1 is invalid"
    },
    {
      "mod_line": [
        0,
        2,
        15
      ],
      "mod_code": [
        "vector < long long d ;",
        "void crearCriba ( const long long x )",
        "vector < long long = > r ;"
      ],
      "err_line": 0,
      "err_msg": "template argument 1 is invalid"
    },
    {
      "mod_line": [
        0,
        2,
        15,
        8
      ],
      "mod_code": [
        "vector < long long d ;",
        "void crearCriba ( const long long x )",
        "vector < long long = > r ;",
        "for ( i = 2 ; i <= n ; i ++ )"
      ],
      "err_line": 0,
      "err_msg": "template argument 1 is invalid"
    },
    {
      "mod_line": [
        0,
        2,
        8
      ],
      "mod_code": [
        "vector < long long d ;",
        "void crearCriba ( const long long x )",
        "for ( i = 2 ; i <= n ; i ++ )"
      ],
      "err_line": 0,
      "err_msg": "template argument 1 is invalid"
    },
    {
      "mod_line": [
        0,
        3
      ],
      "mod_code": [
        "vector < long long d ;",
        "for ( int i = 0 ; i < 0 ; i ++ ) { criba = 0 ; }"
      ],
      "err_line": 0,
      "err_msg": "template argument 1 is invalid"
    },
    {
      "mod_line": [
        0,
        3,
        15
      ],
      "mod_code": [
        "vector < long long d ;",
        "for ( int i = 0 ; i < 0 ; i ++ ) { criba = 0 ; }",
        "vector < long long = > r ;"
      ],
      "err_line": 0,
      "err_msg": "template argument 1 is invalid"
    },
    {
      "mod_line": [
        0,
        3,
        15,
        8
      ],
      "mod_code": [
        "vector < long long d ;",
        "for ( int i = 0 ; i < 0 ; i ++ ) { criba = 0 ; }",
        "vector < long long = > r ;",
        "for ( i = 2 ; i <= n ; i ++ )"
      ],
      "err_line": 0,
      "err_msg": "template argument 1 is invalid"
    },
    {
      "mod_line": [
        0,
        3,
        8
      ],
      "mod_code": [
        "vector < long long d ;",
        "for ( int i = 0 ; i < 0 ; i ++ ) { criba = 0 ; }",
        "for ( i = 2 ; i <= n ; i ++ )"
      ],
      "err_line": 0,
      "err_msg": "template argument 1 is invalid"
    },
    {
      "mod_line": [
        0,
        15
      ],
      "mod_code": [
        "vector < long long d ;",
        "vector < long long = > r ;"
      ],
      "err_line": 0,
      "err_msg": "template argument 1 is invalid"
    },
    {
      "mod_line": [
        0,
        15,
        8
      ],
      "mod_code": [
        "vector < long long d ;",
        "vector < long long = > r ;",
        "for ( i = 2 ; i <= n ; i ++ )"
      ],
      "err_line": 0,
      "err_msg": "template argument 1 is invalid"
    },
    {
      "mod_line": [
        0,
        8
      ],
      "mod_code": [
        "vector < long long d ;",
        "for ( i = 2 ; i <= n ; i ++ )"
      ],
      "err_line": 0,
      "err_msg": "template argument 1 is invalid"
    },
    {
      "mod_line": [
        2,
        3
      ],
      "mod_code": [
        "void crearCriba ( const long long x )",
        "for ( int i = 0 ; i < 0 ; i ++ ) { criba = 0 ; }"
      ],
      "err_line": 3,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘bool [100001]’"
    },
    {
      "mod_line": [
        2,
        3,
        15
      ],
      "mod_code": [
        "void crearCriba ( const long long x )",
        "for ( int i = 0 ; i < 0 ; i ++ ) { criba = 0 ; }",
        "vector < long long = > r ;"
      ],
      "err_line": 3,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘bool [100001]’"
    },
    {
      "mod_line": [
        2,
        3,
        15,
        8
      ],
      "mod_code": [
        "void crearCriba ( const long long x )",
        "for ( int i = 0 ; i < 0 ; i ++ ) { criba = 0 ; }",
        "vector < long long = > r ;",
        "for ( i = 2 ; i <= n ; i ++ )"
      ],
      "err_line": 3,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘bool [100001]’"
    },
    {
      "mod_line": [
        2,
        3,
        8
      ],
      "mod_code": [
        "void crearCriba ( const long long x )",
        "for ( int i = 0 ; i < 0 ; i ++ ) { criba = 0 ; }",
        "for ( i = 2 ; i <= n ; i ++ )"
      ],
      "err_line": 3,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘bool [100001]’"
    },
    {
      "mod_line": [
        2,
        15
      ],
      "mod_code": [
        "void crearCriba ( const long long x )",
        "vector < long long = > r ;"
      ],
      "err_line": 5,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        2,
        15,
        8
      ],
      "mod_code": [
        "void crearCriba ( const long long x )",
        "vector < long long = > r ;",
        "for ( i = 2 ; i <= n ; i ++ )"
      ],
      "err_line": 5,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        2,
        8
      ],
      "mod_code": [
        "void crearCriba ( const long long x )",
        "for ( i = 2 ; i <= n ; i ++ )"
      ],
      "err_line": 5,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        15
      ],
      "mod_code": [
        "for ( int i = 0 ; i < 0 ; i ++ ) { criba = 0 ; }",
        "vector < long long = > r ;"
      ],
      "err_line": 3,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘bool [100001]’"
    },
    {
      "mod_line": [
        3,
        15,
        8
      ],
      "mod_code": [
        "for ( int i = 0 ; i < 0 ; i ++ ) { criba = 0 ; }",
        "vector < long long = > r ;",
        "for ( i = 2 ; i <= n ; i ++ )"
      ],
      "err_line": 3,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘bool [100001]’"
    },
    {
      "mod_line": [
        3,
        8
      ],
      "mod_code": [
        "for ( int i = 0 ; i < 0 ; i ++ ) { criba = 0 ; }",
        "for ( i = 2 ; i <= n ; i ++ )"
      ],
      "err_line": 3,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘bool [100001]’"
    },
    {
      "mod_line": [
        15,
        8
      ],
      "mod_code": [
        "vector < long long = > r ;",
        "for ( i = 2 ; i <= n ; i ++ )"
      ],
      "err_line": 8,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    }
  ]
}