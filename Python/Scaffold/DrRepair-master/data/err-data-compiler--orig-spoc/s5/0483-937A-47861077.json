{
  "meta": {
    "index": 483,
    "hitid": "33NOQL7T9OTKVFA7Q25JQ6W6M8LZ8T",
    "workerid": "A1APYLD4DUK33J",
    "probid": "937A",
    "subid": "47861077"
  },
  "lines": [
    {
      "line": 0,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 1,
      "text": "declare long long integers n , i , j , c = 1 , f = 0 , long long integer arrays a size 100000 , b size 100000",
      "code": "long long int n , a [ 100000 ] , i , j , b [ 100000 ] , c = 1 , f = 0 ;",
      "indent": 1
    },
    {
      "line": 2,
      "text": "read n",
      "code": "cin >> n ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "for i = 0 to n exclusive , read a [ i ]",
      "code": "for ( i = 0 ; i < n ; i ++ ) { cin >> a [ i ] ; }",
      "indent": 1
    },
    {
      "line": 4,
      "text": "let b [ 0 ] be a [ n - 1 ]",
      "code": "b [ 0 ] = a [ n - 1 ] ;",
      "indent": 1
    },
    {
      "line": 5,
      "text": "for i = n - 2 to 0 inclusive , decrementing i",
      "code": "for ( i = n - 2 ; i >= 0 ; i -- )",
      "indent": 1
    },
    {
      "line": 6,
      "text": "for j = 0 to c exclusive",
      "code": "for ( j = 0 ; j < c ; j ++ )",
      "indent": 2
    },
    {
      "line": 7,
      "text": "if a [ i ] is b [ j ]",
      "code": "if ( a [ i ] == b [ j ] )",
      "indent": 3
    },
    {
      "line": 8,
      "text": "let f be 0",
      "code": "f = 0 ;",
      "indent": 4
    },
    {
      "line": 9,
      "text": "end loop",
      "code": "break ;",
      "indent": 4
    },
    {
      "line": 10,
      "text": "else",
      "code": "else",
      "indent": 3
    },
    {
      "line": 11,
      "text": "let f be 1",
      "code": "f = 1 ;",
      "indent": 4
    },
    {
      "line": 12,
      "text": "DUMMY",
      "code": "}",
      "indent": 3
    },
    {
      "line": 13,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 14,
      "text": "if f is 1",
      "code": "if ( f == 1 )",
      "indent": 2
    },
    {
      "line": 15,
      "text": "let b [ c ] be a [ i ]",
      "code": "b [ c ] = a [ i ] ;",
      "indent": 3
    },
    {
      "line": 16,
      "text": "increment c",
      "code": "c ++ ;",
      "indent": 3
    },
    {
      "line": 17,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 18,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 19,
      "text": "for i = c - 1 to 0 inclusive , decrementing i",
      "code": "for ( i = c - 1 ; i >= 0 ; i -- )",
      "indent": 1
    },
    {
      "line": 20,
      "text": "if b [ i ] is 0 , decrement c",
      "code": "if ( b [ i ] == 0 ) c -- ;",
      "indent": 2
    },
    {
      "line": 21,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 22,
      "text": "print c , newline",
      "code": "cout << c << endl ;",
      "indent": 1
    },
    {
      "line": 23,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 24,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        1
      ],
      "mod_code": [
        "long long int n , i , j , a [ 100000 ] , j , c = 1 , f = 0 ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘long long int j’"
    },
    {
      "mod_line": [
        1
      ],
      "mod_code": [
        "long long int n , i , j , a [ 100000 ] , j = 1 , c = 1 , f = 0 ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘long long int j’"
    },
    {
      "mod_line": [
        1,
        9
      ],
      "mod_code": [
        "long long int n , i , j , a [ 100000 ] , j , c = 1 , f = 0 ;",
        "continue ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘long long int j’"
    },
    {
      "mod_line": [
        1,
        9,
        7
      ],
      "mod_code": [
        "long long int n , i , j , a [ 100000 ] , j , c = 1 , f = 0 ;",
        "continue ;",
        "if ( a [ i ] != b [ j ] )"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘long long int j’"
    },
    {
      "mod_line": [
        1,
        9,
        7,
        15
      ],
      "mod_code": [
        "long long int n , i , j , a [ 100000 ] , j , c = 1 , f = 0 ;",
        "continue ;",
        "if ( a [ i ] != b [ j ] )",
        "b [ c ] *= a [ i ] ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘long long int j’"
    },
    {
      "mod_line": [
        1,
        9,
        7,
        8
      ],
      "mod_code": [
        "long long int n , i , j , a [ 100000 ] , j , c = 1 , f = 0 ;",
        "continue ;",
        "if ( a [ i ] != b [ j ] )",
        "int f = 0 ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘long long int j’"
    },
    {
      "mod_line": [
        1,
        9,
        15
      ],
      "mod_code": [
        "long long int n , i , j , a [ 100000 ] , j , c = 1 , f = 0 ;",
        "continue ;",
        "b [ c ] *= a [ i ] ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘long long int j’"
    },
    {
      "mod_line": [
        1,
        9,
        15,
        8
      ],
      "mod_code": [
        "long long int n , i , j , a [ 100000 ] , j , c = 1 , f = 0 ;",
        "continue ;",
        "b [ c ] *= a [ i ] ;",
        "int f = 0 ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘long long int j’"
    },
    {
      "mod_line": [
        1,
        9,
        8
      ],
      "mod_code": [
        "long long int n , i , j , a [ 100000 ] , j , c = 1 , f = 0 ;",
        "continue ;",
        "int f = 0 ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘long long int j’"
    },
    {
      "mod_line": [
        1,
        7
      ],
      "mod_code": [
        "long long int n , i , j , a [ 100000 ] , j , c = 1 , f = 0 ;",
        "if ( a [ i ] != b [ j ] )"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘long long int j’"
    },
    {
      "mod_line": [
        1,
        7,
        15
      ],
      "mod_code": [
        "long long int n , i , j , a [ 100000 ] , j , c = 1 , f = 0 ;",
        "if ( a [ i ] != b [ j ] )",
        "b [ c ] *= a [ i ] ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘long long int j’"
    },
    {
      "mod_line": [
        1,
        7,
        15,
        8
      ],
      "mod_code": [
        "long long int n , i , j , a [ 100000 ] , j , c = 1 , f = 0 ;",
        "if ( a [ i ] != b [ j ] )",
        "b [ c ] *= a [ i ] ;",
        "int f = 0 ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘long long int j’"
    },
    {
      "mod_line": [
        1,
        7,
        8
      ],
      "mod_code": [
        "long long int n , i , j , a [ 100000 ] , j , c = 1 , f = 0 ;",
        "if ( a [ i ] != b [ j ] )",
        "int f = 0 ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘long long int j’"
    },
    {
      "mod_line": [
        1,
        15
      ],
      "mod_code": [
        "long long int n , i , j , a [ 100000 ] , j , c = 1 , f = 0 ;",
        "b [ c ] *= a [ i ] ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘long long int j’"
    },
    {
      "mod_line": [
        1,
        15,
        8
      ],
      "mod_code": [
        "long long int n , i , j , a [ 100000 ] , j , c = 1 , f = 0 ;",
        "b [ c ] *= a [ i ] ;",
        "int f = 0 ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘long long int j’"
    },
    {
      "mod_line": [
        1,
        8
      ],
      "mod_code": [
        "long long int n , i , j , a [ 100000 ] , j , c = 1 , f = 0 ;",
        "int f = 0 ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘long long int j’"
    },
    {
      "mod_line": [
        9,
        1
      ],
      "mod_code": [
        "continue ;",
        "long long int n , i , j , a [ 100000 ] , j = 1 , c = 1 , f = 0 ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘long long int j’"
    },
    {
      "mod_line": [
        9,
        1,
        7
      ],
      "mod_code": [
        "continue ;",
        "long long int n , i , j , a [ 100000 ] , j = 1 , c = 1 , f = 0 ;",
        "if ( a [ i ] != b [ j ] )"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘long long int j’"
    },
    {
      "mod_line": [
        9,
        1,
        7,
        15
      ],
      "mod_code": [
        "continue ;",
        "long long int n , i , j , a [ 100000 ] , j = 1 , c = 1 , f = 0 ;",
        "if ( a [ i ] != b [ j ] )",
        "b [ c ] *= a [ i ] ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘long long int j’"
    },
    {
      "mod_line": [
        9,
        1,
        7,
        8
      ],
      "mod_code": [
        "continue ;",
        "long long int n , i , j , a [ 100000 ] , j = 1 , c = 1 , f = 0 ;",
        "if ( a [ i ] != b [ j ] )",
        "int f = 0 ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘long long int j’"
    },
    {
      "mod_line": [
        9,
        1,
        15
      ],
      "mod_code": [
        "continue ;",
        "long long int n , i , j , a [ 100000 ] , j = 1 , c = 1 , f = 0 ;",
        "b [ c ] *= a [ i ] ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘long long int j’"
    },
    {
      "mod_line": [
        9,
        1,
        15,
        8
      ],
      "mod_code": [
        "continue ;",
        "long long int n , i , j , a [ 100000 ] , j = 1 , c = 1 , f = 0 ;",
        "b [ c ] *= a [ i ] ;",
        "int f = 0 ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘long long int j’"
    },
    {
      "mod_line": [
        9,
        1,
        8
      ],
      "mod_code": [
        "continue ;",
        "long long int n , i , j , a [ 100000 ] , j = 1 , c = 1 , f = 0 ;",
        "int f = 0 ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘long long int j’"
    },
    {
      "mod_line": [
        1,
        7
      ],
      "mod_code": [
        "long long int n , i , j , a [ 100000 ] , j = 1 , c = 1 , f = 0 ;",
        "if ( a [ i ] != b [ j ] )"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘long long int j’"
    },
    {
      "mod_line": [
        1,
        7,
        15
      ],
      "mod_code": [
        "long long int n , i , j , a [ 100000 ] , j = 1 , c = 1 , f = 0 ;",
        "if ( a [ i ] != b [ j ] )",
        "b [ c ] *= a [ i ] ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘long long int j’"
    },
    {
      "mod_line": [
        1,
        7,
        15,
        8
      ],
      "mod_code": [
        "long long int n , i , j , a [ 100000 ] , j = 1 , c = 1 , f = 0 ;",
        "if ( a [ i ] != b [ j ] )",
        "b [ c ] *= a [ i ] ;",
        "int f = 0 ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘long long int j’"
    },
    {
      "mod_line": [
        1,
        7,
        8
      ],
      "mod_code": [
        "long long int n , i , j , a [ 100000 ] , j = 1 , c = 1 , f = 0 ;",
        "if ( a [ i ] != b [ j ] )",
        "int f = 0 ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘long long int j’"
    },
    {
      "mod_line": [
        1,
        15
      ],
      "mod_code": [
        "long long int n , i , j , a [ 100000 ] , j = 1 , c = 1 , f = 0 ;",
        "b [ c ] *= a [ i ] ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘long long int j’"
    },
    {
      "mod_line": [
        1,
        15,
        8
      ],
      "mod_code": [
        "long long int n , i , j , a [ 100000 ] , j = 1 , c = 1 , f = 0 ;",
        "b [ c ] *= a [ i ] ;",
        "int f = 0 ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘long long int j’"
    },
    {
      "mod_line": [
        1,
        8
      ],
      "mod_code": [
        "long long int n , i , j , a [ 100000 ] , j = 1 , c = 1 , f = 0 ;",
        "int f = 0 ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘long long int j’"
    }
  ]
}