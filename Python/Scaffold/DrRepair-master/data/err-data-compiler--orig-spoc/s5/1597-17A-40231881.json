{
  "meta": {
    "index": 1597,
    "hitid": "3AJA9FLWSCS7F4VKYCN303A2CXJIFE",
    "workerid": "A1APYLD4DUK33J",
    "probid": "17A",
    "subid": "40231881"
  },
  "lines": [
    {
      "line": 0,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 1,
      "text": "create boolean vector prime initialized with 1005 , true",
      "code": "vector < bool > prime ( 1005 , true ) ;",
      "indent": 1
    },
    {
      "line": 2,
      "text": "set prime [ 1 ] to falst",
      "code": "prime [ 1 ] = false ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "create integer sq with sq = integer casted result of run ceil with argument square root of 1005 + 0 . 0",
      "code": "int sq = ( int ) ceil ( sqrt ( 1005 + 0.0 ) ) ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "for i = 2 to sq inclusive",
      "code": "for ( int i = 2 ; i <= sq ; i ++ )",
      "indent": 1
    },
    {
      "line": 5,
      "text": "if i * i is less than or equal to 1000",
      "code": "if ( i * i <= 1000 )",
      "indent": 2
    },
    {
      "line": 6,
      "text": "for j = i * i to 1000 inclusive , incrementing j by i , set prime [ j ] to false",
      "code": "for ( int j = i * i ; j <= 1000 ; j += i ) { prime [ j ] = false ; }",
      "indent": 3
    },
    {
      "line": 7,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 8,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 9,
      "text": "create integers n , k , c with c = 0",
      "code": "int n , k , c = 0 ;",
      "indent": 1
    },
    {
      "line": 10,
      "text": "read n read k",
      "code": "cin >> n >> k ;",
      "indent": 1
    },
    {
      "line": 11,
      "text": "for i = 2 to n inclusive",
      "code": "for ( int i = 2 ; i <= n ; i ++ )",
      "indent": 1
    },
    {
      "line": 12,
      "text": "if prime [ i ] is true",
      "code": "if ( prime [ i ] )",
      "indent": 2
    },
    {
      "line": 13,
      "text": "for j = i + 1 to n inclusive",
      "code": "for ( int j = i + 1 ; j <= n ; j ++ )",
      "indent": 3
    },
    {
      "line": 14,
      "text": "if prime [ j ] is true",
      "code": "if ( prime [ j ] )",
      "indent": 4
    },
    {
      "line": 15,
      "text": "if i + j + 1 is less than or equal to n and prime [ i + j + 1 ] is true",
      "code": "if ( i + j + 1 <= n && prime [ i + j + 1 ] == true )",
      "indent": 5
    },
    {
      "line": 16,
      "text": "increment c",
      "code": "c ++ ;",
      "indent": 6
    },
    {
      "line": 17,
      "text": "break loop",
      "code": "break ;",
      "indent": 6
    },
    {
      "line": 18,
      "text": "else",
      "code": "else",
      "indent": 5
    },
    {
      "line": 19,
      "text": "break loop",
      "code": "break ;",
      "indent": 6
    },
    {
      "line": 20,
      "text": "DUMMY",
      "code": "}",
      "indent": 4
    },
    {
      "line": 21,
      "text": "DUMMY",
      "code": "}",
      "indent": 3
    },
    {
      "line": 22,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 23,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 24,
      "text": "if c is greater than or equal to k",
      "code": "if ( c >= k )",
      "indent": 1
    },
    {
      "line": 25,
      "text": "print \" YES \" print newline",
      "code": "cout << \" YES \" << endl ;",
      "indent": 2
    },
    {
      "line": 26,
      "text": "else",
      "code": "else",
      "indent": 1
    },
    {
      "line": 27,
      "text": "print \" NO \" print newline",
      "code": "cout << \" NO \" << endl ;",
      "indent": 2
    },
    {
      "line": 28,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 29,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        2
      ],
      "mod_code": [
        "prime [ 1 ] = falst ;"
      ],
      "err_line": 2,
      "err_msg": "‘falst’ was not declared in this scope"
    },
    {
      "mod_line": [
        1
      ],
      "mod_code": [
        "bool prime ( vector < bool > prime )"
      ],
      "err_line": 2,
      "err_msg": "expected initializer before ‘prime’"
    },
    {
      "mod_line": [
        4
      ],
      "mod_code": [
        "for ( i = 2 ; i <= sq ; i ++ )"
      ],
      "err_line": 4,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        11
      ],
      "mod_code": [
        "for ( i = 2 ; i <= n ; i ++ )"
      ],
      "err_line": 11,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        13
      ],
      "mod_code": [
        "for ( j = i + 1 ; j <= n ; j ++ )"
      ],
      "err_line": 13,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        17
      ],
      "mod_code": [
        "break break ;"
      ],
      "err_line": 17,
      "err_msg": "expected ‘;’ before ‘break’"
    },
    {
      "mod_line": [
        19
      ],
      "mod_code": [
        "break break ;"
      ],
      "err_line": 19,
      "err_msg": "expected ‘;’ before ‘break’"
    },
    {
      "mod_line": [
        2,
        11
      ],
      "mod_code": [
        "prime [ 1 ] = falst ;",
        "for ( i = 2 ; i <= n ; i ++ )"
      ],
      "err_line": 2,
      "err_msg": "‘falst’ was not declared in this scope"
    },
    {
      "mod_line": [
        2,
        11,
        13
      ],
      "mod_code": [
        "prime [ 1 ] = falst ;",
        "for ( i = 2 ; i <= n ; i ++ )",
        "for ( j = i + 1 ; j <= n ; j ++ )"
      ],
      "err_line": 2,
      "err_msg": "‘falst’ was not declared in this scope"
    },
    {
      "mod_line": [
        2,
        11,
        13,
        12
      ],
      "mod_code": [
        "prime [ 1 ] = falst ;",
        "for ( i = 2 ; i <= n ; i ++ )",
        "for ( j = i + 1 ; j <= n ; j ++ )",
        "if ( prime [ i ] ) i ++ ;"
      ],
      "err_line": 2,
      "err_msg": "‘falst’ was not declared in this scope"
    },
    {
      "mod_line": [
        2,
        11,
        13,
        4
      ],
      "mod_code": [
        "prime [ 1 ] = falst ;",
        "for ( i = 2 ; i <= n ; i ++ )",
        "for ( j = i + 1 ; j <= n ; j ++ )",
        "for ( i = 2 ; i <= sq ; i ++ )"
      ],
      "err_line": 2,
      "err_msg": "‘falst’ was not declared in this scope"
    },
    {
      "mod_line": [
        2,
        11,
        13,
        17
      ],
      "mod_code": [
        "prime [ 1 ] = falst ;",
        "for ( i = 2 ; i <= n ; i ++ )",
        "for ( j = i + 1 ; j <= n ; j ++ )",
        "break break ;"
      ],
      "err_line": 2,
      "err_msg": "‘falst’ was not declared in this scope"
    },
    {
      "mod_line": [
        2,
        11,
        12
      ],
      "mod_code": [
        "prime [ 1 ] = falst ;",
        "for ( i = 2 ; i <= n ; i ++ )",
        "if ( prime [ i ] ) i ++ ;"
      ],
      "err_line": 2,
      "err_msg": "‘falst’ was not declared in this scope"
    },
    {
      "mod_line": [
        2,
        11,
        12,
        4
      ],
      "mod_code": [
        "prime [ 1 ] = falst ;",
        "for ( i = 2 ; i <= n ; i ++ )",
        "if ( prime [ i ] ) i ++ ;",
        "for ( i = 2 ; i <= sq ; i ++ )"
      ],
      "err_line": 2,
      "err_msg": "‘falst’ was not declared in this scope"
    },
    {
      "mod_line": [
        2,
        11,
        12,
        17
      ],
      "mod_code": [
        "prime [ 1 ] = falst ;",
        "for ( i = 2 ; i <= n ; i ++ )",
        "if ( prime [ i ] ) i ++ ;",
        "break break ;"
      ],
      "err_line": 2,
      "err_msg": "‘falst’ was not declared in this scope"
    },
    {
      "mod_line": [
        2,
        11,
        4
      ],
      "mod_code": [
        "prime [ 1 ] = falst ;",
        "for ( i = 2 ; i <= n ; i ++ )",
        "for ( i = 2 ; i <= sq ; i ++ )"
      ],
      "err_line": 2,
      "err_msg": "‘falst’ was not declared in this scope"
    },
    {
      "mod_line": [
        2,
        11,
        4,
        17
      ],
      "mod_code": [
        "prime [ 1 ] = falst ;",
        "for ( i = 2 ; i <= n ; i ++ )",
        "for ( i = 2 ; i <= sq ; i ++ )",
        "break break ;"
      ],
      "err_line": 2,
      "err_msg": "‘falst’ was not declared in this scope"
    },
    {
      "mod_line": [
        2,
        11,
        17
      ],
      "mod_code": [
        "prime [ 1 ] = falst ;",
        "for ( i = 2 ; i <= n ; i ++ )",
        "break break ;"
      ],
      "err_line": 2,
      "err_msg": "‘falst’ was not declared in this scope"
    },
    {
      "mod_line": [
        2,
        13
      ],
      "mod_code": [
        "prime [ 1 ] = falst ;",
        "for ( j = i + 1 ; j <= n ; j ++ )"
      ],
      "err_line": 2,
      "err_msg": "‘falst’ was not declared in this scope"
    },
    {
      "mod_line": [
        2,
        13,
        12
      ],
      "mod_code": [
        "prime [ 1 ] = falst ;",
        "for ( j = i + 1 ; j <= n ; j ++ )",
        "if ( prime [ i ] ) i ++ ;"
      ],
      "err_line": 2,
      "err_msg": "‘falst’ was not declared in this scope"
    },
    {
      "mod_line": [
        2,
        13,
        12,
        4
      ],
      "mod_code": [
        "prime [ 1 ] = falst ;",
        "for ( j = i + 1 ; j <= n ; j ++ )",
        "if ( prime [ i ] ) i ++ ;",
        "for ( i = 2 ; i <= sq ; i ++ )"
      ],
      "err_line": 2,
      "err_msg": "‘falst’ was not declared in this scope"
    },
    {
      "mod_line": [
        2,
        13,
        12,
        17
      ],
      "mod_code": [
        "prime [ 1 ] = falst ;",
        "for ( j = i + 1 ; j <= n ; j ++ )",
        "if ( prime [ i ] ) i ++ ;",
        "break break ;"
      ],
      "err_line": 2,
      "err_msg": "‘falst’ was not declared in this scope"
    },
    {
      "mod_line": [
        2,
        13,
        4
      ],
      "mod_code": [
        "prime [ 1 ] = falst ;",
        "for ( j = i + 1 ; j <= n ; j ++ )",
        "for ( i = 2 ; i <= sq ; i ++ )"
      ],
      "err_line": 2,
      "err_msg": "‘falst’ was not declared in this scope"
    },
    {
      "mod_line": [
        2,
        13,
        4,
        17
      ],
      "mod_code": [
        "prime [ 1 ] = falst ;",
        "for ( j = i + 1 ; j <= n ; j ++ )",
        "for ( i = 2 ; i <= sq ; i ++ )",
        "break break ;"
      ],
      "err_line": 2,
      "err_msg": "‘falst’ was not declared in this scope"
    },
    {
      "mod_line": [
        2,
        13,
        17
      ],
      "mod_code": [
        "prime [ 1 ] = falst ;",
        "for ( j = i + 1 ; j <= n ; j ++ )",
        "break break ;"
      ],
      "err_line": 2,
      "err_msg": "‘falst’ was not declared in this scope"
    },
    {
      "mod_line": [
        2,
        12
      ],
      "mod_code": [
        "prime [ 1 ] = falst ;",
        "if ( prime [ i ] ) i ++ ;"
      ],
      "err_line": 2,
      "err_msg": "‘falst’ was not declared in this scope"
    },
    {
      "mod_line": [
        2,
        12,
        4
      ],
      "mod_code": [
        "prime [ 1 ] = falst ;",
        "if ( prime [ i ] ) i ++ ;",
        "for ( i = 2 ; i <= sq ; i ++ )"
      ],
      "err_line": 2,
      "err_msg": "‘falst’ was not declared in this scope"
    },
    {
      "mod_line": [
        2,
        12,
        4,
        17
      ],
      "mod_code": [
        "prime [ 1 ] = falst ;",
        "if ( prime [ i ] ) i ++ ;",
        "for ( i = 2 ; i <= sq ; i ++ )",
        "break break ;"
      ],
      "err_line": 2,
      "err_msg": "‘falst’ was not declared in this scope"
    },
    {
      "mod_line": [
        2,
        12,
        17
      ],
      "mod_code": [
        "prime [ 1 ] = falst ;",
        "if ( prime [ i ] ) i ++ ;",
        "break break ;"
      ],
      "err_line": 2,
      "err_msg": "‘falst’ was not declared in this scope"
    },
    {
      "mod_line": [
        2,
        4
      ],
      "mod_code": [
        "prime [ 1 ] = falst ;",
        "for ( i = 2 ; i <= sq ; i ++ )"
      ],
      "err_line": 2,
      "err_msg": "‘falst’ was not declared in this scope"
    },
    {
      "mod_line": [
        2,
        4,
        17
      ],
      "mod_code": [
        "prime [ 1 ] = falst ;",
        "for ( i = 2 ; i <= sq ; i ++ )",
        "break break ;"
      ],
      "err_line": 2,
      "err_msg": "‘falst’ was not declared in this scope"
    },
    {
      "mod_line": [
        2,
        17
      ],
      "mod_code": [
        "prime [ 1 ] = falst ;",
        "break break ;"
      ],
      "err_line": 2,
      "err_msg": "‘falst’ was not declared in this scope"
    },
    {
      "mod_line": [
        11,
        13
      ],
      "mod_code": [
        "for ( i = 2 ; i <= n ; i ++ )",
        "for ( j = i + 1 ; j <= n ; j ++ )"
      ],
      "err_line": 11,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        11,
        13,
        12
      ],
      "mod_code": [
        "for ( i = 2 ; i <= n ; i ++ )",
        "for ( j = i + 1 ; j <= n ; j ++ )",
        "if ( prime [ i ] ) i ++ ;"
      ],
      "err_line": 11,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        11,
        13,
        12,
        4
      ],
      "mod_code": [
        "for ( i = 2 ; i <= n ; i ++ )",
        "for ( j = i + 1 ; j <= n ; j ++ )",
        "if ( prime [ i ] ) i ++ ;",
        "for ( i = 2 ; i <= sq ; i ++ )"
      ],
      "err_line": 4,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        11,
        13,
        12,
        17
      ],
      "mod_code": [
        "for ( i = 2 ; i <= n ; i ++ )",
        "for ( j = i + 1 ; j <= n ; j ++ )",
        "if ( prime [ i ] ) i ++ ;",
        "break break ;"
      ],
      "err_line": 11,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        11,
        13,
        4
      ],
      "mod_code": [
        "for ( i = 2 ; i <= n ; i ++ )",
        "for ( j = i + 1 ; j <= n ; j ++ )",
        "for ( i = 2 ; i <= sq ; i ++ )"
      ],
      "err_line": 4,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        11,
        13,
        4,
        17
      ],
      "mod_code": [
        "for ( i = 2 ; i <= n ; i ++ )",
        "for ( j = i + 1 ; j <= n ; j ++ )",
        "for ( i = 2 ; i <= sq ; i ++ )",
        "break break ;"
      ],
      "err_line": 4,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        11,
        13,
        17
      ],
      "mod_code": [
        "for ( i = 2 ; i <= n ; i ++ )",
        "for ( j = i + 1 ; j <= n ; j ++ )",
        "break break ;"
      ],
      "err_line": 11,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        11,
        12
      ],
      "mod_code": [
        "for ( i = 2 ; i <= n ; i ++ )",
        "if ( prime [ i ] ) i ++ ;"
      ],
      "err_line": 11,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        11,
        12,
        4
      ],
      "mod_code": [
        "for ( i = 2 ; i <= n ; i ++ )",
        "if ( prime [ i ] ) i ++ ;",
        "for ( i = 2 ; i <= sq ; i ++ )"
      ],
      "err_line": 4,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        11,
        12,
        4,
        17
      ],
      "mod_code": [
        "for ( i = 2 ; i <= n ; i ++ )",
        "if ( prime [ i ] ) i ++ ;",
        "for ( i = 2 ; i <= sq ; i ++ )",
        "break break ;"
      ],
      "err_line": 4,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        11,
        12,
        17
      ],
      "mod_code": [
        "for ( i = 2 ; i <= n ; i ++ )",
        "if ( prime [ i ] ) i ++ ;",
        "break break ;"
      ],
      "err_line": 11,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        11,
        4
      ],
      "mod_code": [
        "for ( i = 2 ; i <= n ; i ++ )",
        "for ( i = 2 ; i <= sq ; i ++ )"
      ],
      "err_line": 4,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        11,
        4,
        17
      ],
      "mod_code": [
        "for ( i = 2 ; i <= n ; i ++ )",
        "for ( i = 2 ; i <= sq ; i ++ )",
        "break break ;"
      ],
      "err_line": 4,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        11,
        17
      ],
      "mod_code": [
        "for ( i = 2 ; i <= n ; i ++ )",
        "break break ;"
      ],
      "err_line": 11,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        13,
        12
      ],
      "mod_code": [
        "for ( j = i + 1 ; j <= n ; j ++ )",
        "if ( prime [ i ] ) i ++ ;"
      ],
      "err_line": 13,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        12,
        4
      ],
      "mod_code": [
        "for ( j = i + 1 ; j <= n ; j ++ )",
        "if ( prime [ i ] ) i ++ ;",
        "for ( i = 2 ; i <= sq ; i ++ )"
      ],
      "err_line": 4,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        12,
        4,
        17
      ],
      "mod_code": [
        "for ( j = i + 1 ; j <= n ; j ++ )",
        "if ( prime [ i ] ) i ++ ;",
        "for ( i = 2 ; i <= sq ; i ++ )",
        "break break ;"
      ],
      "err_line": 4,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        12,
        17
      ],
      "mod_code": [
        "for ( j = i + 1 ; j <= n ; j ++ )",
        "if ( prime [ i ] ) i ++ ;",
        "break break ;"
      ],
      "err_line": 13,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        4
      ],
      "mod_code": [
        "for ( j = i + 1 ; j <= n ; j ++ )",
        "for ( i = 2 ; i <= sq ; i ++ )"
      ],
      "err_line": 4,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        4,
        17
      ],
      "mod_code": [
        "for ( j = i + 1 ; j <= n ; j ++ )",
        "for ( i = 2 ; i <= sq ; i ++ )",
        "break break ;"
      ],
      "err_line": 4,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        17
      ],
      "mod_code": [
        "for ( j = i + 1 ; j <= n ; j ++ )",
        "break break ;"
      ],
      "err_line": 13,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        12,
        4
      ],
      "mod_code": [
        "if ( prime [ i ] ) i ++ ;",
        "for ( i = 2 ; i <= sq ; i ++ )"
      ],
      "err_line": 4,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        12,
        4,
        17
      ],
      "mod_code": [
        "if ( prime [ i ] ) i ++ ;",
        "for ( i = 2 ; i <= sq ; i ++ )",
        "break break ;"
      ],
      "err_line": 4,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        12,
        17
      ],
      "mod_code": [
        "if ( prime [ i ] ) i ++ ;",
        "break break ;"
      ],
      "err_line": 17,
      "err_msg": "expected ‘;’ before ‘break’"
    },
    {
      "mod_line": [
        4,
        17
      ],
      "mod_code": [
        "for ( i = 2 ; i <= sq ; i ++ )",
        "break break ;"
      ],
      "err_line": 4,
      "err_msg": "‘i’ was not declared in this scope"
    }
  ]
}