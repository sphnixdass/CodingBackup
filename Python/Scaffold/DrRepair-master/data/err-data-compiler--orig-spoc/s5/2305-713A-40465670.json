{
  "meta": {
    "index": 2305,
    "hitid": "3EPG8DX9LKK7UTPZ5V0ENOK1AJFP5Y",
    "workerid": "AIWEXPJAU66D9",
    "probid": "713A",
    "subid": "40465670"
  },
  "lines": [
    {
      "line": 0,
      "text": "create a map from strings to integers called ok",
      "code": "map < string , int > ok ;",
      "indent": 0
    },
    {
      "line": 1,
      "text": "inter is a string function with string argument ss",
      "code": "string inter ( string ss )",
      "indent": 0
    },
    {
      "line": 2,
      "text": "declare string res",
      "code": "string res ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "in a for loop , change i from 0 to length of ss exclusive",
      "code": "for ( int i = 0 ; i < ss . length ( ) ; i ++ )",
      "indent": 1
    },
    {
      "line": 4,
      "text": "if ( ss [ i ] - ' 0 ' ) % 2 is not 0",
      "code": "if ( ( ss [ i ] - ' 0 ' ) % 2 )",
      "indent": 2
    },
    {
      "line": 5,
      "text": "change res to res + ' 1 '",
      "code": "res += ' 1 ' ;",
      "indent": 3
    },
    {
      "line": 6,
      "text": "else",
      "code": "else",
      "indent": 2
    },
    {
      "line": 7,
      "text": "change res to res + ' 0 '",
      "code": "res += ' 0 ' ;",
      "indent": 3
    },
    {
      "line": 8,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 9,
      "text": "return \" 0 \" if all elements of res are ' 0 '",
      "code": "if ( res . find_first_not_of ( ' 0 ' ) == string :: npos ) return \" 0 \" ;",
      "indent": 1
    },
    {
      "line": 10,
      "text": "declare new integer called pos with value = index of the first element of res with value not equal to ' 0 '",
      "code": "int pos = res . find_first_not_of ( ' 0 ' ) ;",
      "indent": 1
    },
    {
      "line": 11,
      "text": "set res to the substring of res from the index pos with length = length of ss - poss",
      "code": "res = res . substr ( pos , ss . length ( ) - pos ) ;",
      "indent": 1
    },
    {
      "line": 12,
      "text": "return res",
      "code": "return res ;",
      "indent": 1
    },
    {
      "line": 13,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    },
    {
      "line": 14,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 15,
      "text": "declare character variable op",
      "code": "char op ;",
      "indent": 1
    },
    {
      "line": 16,
      "text": "declare new string called s",
      "code": "string s ;",
      "indent": 1
    },
    {
      "line": 17,
      "text": "create integer variable t",
      "code": "int t ;",
      "indent": 1
    },
    {
      "line": 18,
      "text": "read t from the input",
      "code": "cin >> t ;",
      "indent": 1
    },
    {
      "line": 19,
      "text": "loop , decrementing t , while it is not 0",
      "code": "while ( t -- )",
      "indent": 1
    },
    {
      "line": 20,
      "text": "read op from the user input",
      "code": "cin >> op ;",
      "indent": 2
    },
    {
      "line": 21,
      "text": "read variable s from the input",
      "code": "cin >> s ;",
      "indent": 2
    },
    {
      "line": 22,
      "text": "assign the new value = inter ( s ) to s",
      "code": "s = inter ( s ) ;",
      "indent": 2
    },
    {
      "line": 23,
      "text": "if op is equal to ' + '",
      "code": "if ( op == ' + ' )",
      "indent": 2
    },
    {
      "line": 24,
      "text": "increment ok [ s ]",
      "code": "ok [ s ] ++ ;",
      "indent": 3
    },
    {
      "line": 25,
      "text": "else if op = ' - '",
      "code": "else if ( op == ' - ' )",
      "indent": 2
    },
    {
      "line": 26,
      "text": "decrement ok [ s ]",
      "code": "ok [ s ] -- ;",
      "indent": 3
    },
    {
      "line": 27,
      "text": "else",
      "code": "else",
      "indent": 2
    },
    {
      "line": 28,
      "text": "print ok [ s ]",
      "code": "cout << ok [ s ] << endl ;",
      "indent": 3
    },
    {
      "line": 29,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 30,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 31,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 32,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        9
      ],
      "mod_code": [
        "if ( res . all ( ' 0 ' ) == ' 0 ' ) { return \" 0 ' ; }"
      ],
      "err_line": 9,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        10
      ],
      "mod_code": [
        "int pos = res . first = res . first ;"
      ],
      "err_line": 10,
      "err_msg": "‘std::__cxx11::string {aka class std::__cxx11::basic_string<char>}’ has no member named ‘first’"
    },
    {
      "mod_line": [
        11
      ],
      "mod_code": [
        "res = res . substr ( pos , length ) - poss ;"
      ],
      "err_line": 11,
      "err_msg": "‘length’ was not declared in this scope"
    },
    {
      "mod_line": [
        0
      ],
      "mod_code": [
        "map < strings , int > ok ;"
      ],
      "err_line": 0,
      "err_msg": "‘strings’ was not declared in this scope"
    },
    {
      "mod_line": [
        1
      ],
      "mod_code": [
        "string inter ( string ss ) ;"
      ],
      "err_line": 2,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        2
      ],
      "mod_code": [
        "string n ;"
      ],
      "err_line": 5,
      "err_msg": "‘res’ was not declared in this scope"
    },
    {
      "mod_line": [
        9
      ],
      "mod_code": [
        "if ( res . all ( ' 0 ' ) == 0 ) { return \" 0 ' ; }"
      ],
      "err_line": 9,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        10
      ],
      "mod_code": [
        "int pos = res . first ;"
      ],
      "err_line": 10,
      "err_msg": "‘std::__cxx11::string {aka class std::__cxx11::basic_string<char>}’ has no member named ‘first’"
    },
    {
      "mod_line": [
        11
      ],
      "mod_code": [
        "res = res . substr ( pos , ss . length ( ) - poss ) ;"
      ],
      "err_line": 11,
      "err_msg": "‘poss’ was not declared in this scope"
    },
    {
      "mod_line": [
        15
      ],
      "mod_code": [
        "char op [ 8 ] [ 8 ] ;"
      ],
      "err_line": 20,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘char [8][8]’)"
    },
    {
      "mod_line": [
        16
      ],
      "mod_code": [
        "string n ;"
      ],
      "err_line": 21,
      "err_msg": "‘s’ was not declared in this scope"
    },
    {
      "mod_line": [
        21
      ],
      "mod_code": [
        "s >> s ;"
      ],
      "err_line": 21,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        22
      ],
      "mod_code": [
        "int s = inter ( s ) ;"
      ],
      "err_line": 22,
      "err_msg": "could not convert ‘s’ from ‘int’ to ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’"
    },
    {
      "mod_line": [
        23
      ],
      "mod_code": [
        "if ( op == ' + ' ) break ;"
      ],
      "err_line": 25,
      "err_msg": "‘else’ without a previous ‘if’"
    },
    {
      "mod_line": [
        26
      ],
      "mod_code": [
        "ok [ s ] -= s ;"
      ],
      "err_line": 26,
      "err_msg": "no match for ‘operator-=’ (operand types are ‘std::map<std::__cxx11::basic_string<char>, int>::mapped_type {aka int}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        9,
        10
      ],
      "mod_code": [
        "if ( res . all ( ' 0 ' ) == ' 0 ' ) { return \" 0 ' ; }",
        "int pos = res . first = res . first ;"
      ],
      "err_line": 9,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        9,
        10,
        11
      ],
      "mod_code": [
        "if ( res . all ( ' 0 ' ) == ' 0 ' ) { return \" 0 ' ; }",
        "int pos = res . first = res . first ;",
        "res = res . substr ( pos , length ) - poss ;"
      ],
      "err_line": 9,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        9,
        10,
        11,
        26
      ],
      "mod_code": [
        "if ( res . all ( ' 0 ' ) == ' 0 ' ) { return \" 0 ' ; }",
        "int pos = res . first = res . first ;",
        "res = res . substr ( pos , length ) - poss ;",
        "ok [ s ] -= s ;"
      ],
      "err_line": 9,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        9,
        10,
        11,
        21
      ],
      "mod_code": [
        "if ( res . all ( ' 0 ' ) == ' 0 ' ) { return \" 0 ' ; }",
        "int pos = res . first = res . first ;",
        "res = res . substr ( pos , length ) - poss ;",
        "s >> s ;"
      ],
      "err_line": 9,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        9,
        10,
        11,
        22
      ],
      "mod_code": [
        "if ( res . all ( ' 0 ' ) == ' 0 ' ) { return \" 0 ' ; }",
        "int pos = res . first = res . first ;",
        "res = res . substr ( pos , length ) - poss ;",
        "int s = inter ( s ) ;"
      ],
      "err_line": 9,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        9,
        10,
        26
      ],
      "mod_code": [
        "if ( res . all ( ' 0 ' ) == ' 0 ' ) { return \" 0 ' ; }",
        "int pos = res . first = res . first ;",
        "ok [ s ] -= s ;"
      ],
      "err_line": 9,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        9,
        10,
        26,
        21
      ],
      "mod_code": [
        "if ( res . all ( ' 0 ' ) == ' 0 ' ) { return \" 0 ' ; }",
        "int pos = res . first = res . first ;",
        "ok [ s ] -= s ;",
        "s >> s ;"
      ],
      "err_line": 9,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        9,
        10,
        26,
        22
      ],
      "mod_code": [
        "if ( res . all ( ' 0 ' ) == ' 0 ' ) { return \" 0 ' ; }",
        "int pos = res . first = res . first ;",
        "ok [ s ] -= s ;",
        "int s = inter ( s ) ;"
      ],
      "err_line": 9,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        9,
        10,
        21
      ],
      "mod_code": [
        "if ( res . all ( ' 0 ' ) == ' 0 ' ) { return \" 0 ' ; }",
        "int pos = res . first = res . first ;",
        "s >> s ;"
      ],
      "err_line": 9,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        9,
        10,
        21,
        22
      ],
      "mod_code": [
        "if ( res . all ( ' 0 ' ) == ' 0 ' ) { return \" 0 ' ; }",
        "int pos = res . first = res . first ;",
        "s >> s ;",
        "int s = inter ( s ) ;"
      ],
      "err_line": 9,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        9,
        10,
        22
      ],
      "mod_code": [
        "if ( res . all ( ' 0 ' ) == ' 0 ' ) { return \" 0 ' ; }",
        "int pos = res . first = res . first ;",
        "int s = inter ( s ) ;"
      ],
      "err_line": 9,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        9,
        11
      ],
      "mod_code": [
        "if ( res . all ( ' 0 ' ) == ' 0 ' ) { return \" 0 ' ; }",
        "res = res . substr ( pos , length ) - poss ;"
      ],
      "err_line": 9,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        9,
        11,
        26
      ],
      "mod_code": [
        "if ( res . all ( ' 0 ' ) == ' 0 ' ) { return \" 0 ' ; }",
        "res = res . substr ( pos , length ) - poss ;",
        "ok [ s ] -= s ;"
      ],
      "err_line": 9,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        9,
        11,
        26,
        21
      ],
      "mod_code": [
        "if ( res . all ( ' 0 ' ) == ' 0 ' ) { return \" 0 ' ; }",
        "res = res . substr ( pos , length ) - poss ;",
        "ok [ s ] -= s ;",
        "s >> s ;"
      ],
      "err_line": 9,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        9,
        11,
        26,
        22
      ],
      "mod_code": [
        "if ( res . all ( ' 0 ' ) == ' 0 ' ) { return \" 0 ' ; }",
        "res = res . substr ( pos , length ) - poss ;",
        "ok [ s ] -= s ;",
        "int s = inter ( s ) ;"
      ],
      "err_line": 9,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        9,
        11,
        21
      ],
      "mod_code": [
        "if ( res . all ( ' 0 ' ) == ' 0 ' ) { return \" 0 ' ; }",
        "res = res . substr ( pos , length ) - poss ;",
        "s >> s ;"
      ],
      "err_line": 9,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        9,
        11,
        21,
        22
      ],
      "mod_code": [
        "if ( res . all ( ' 0 ' ) == ' 0 ' ) { return \" 0 ' ; }",
        "res = res . substr ( pos , length ) - poss ;",
        "s >> s ;",
        "int s = inter ( s ) ;"
      ],
      "err_line": 9,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        9,
        11,
        22
      ],
      "mod_code": [
        "if ( res . all ( ' 0 ' ) == ' 0 ' ) { return \" 0 ' ; }",
        "res = res . substr ( pos , length ) - poss ;",
        "int s = inter ( s ) ;"
      ],
      "err_line": 9,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        9,
        26
      ],
      "mod_code": [
        "if ( res . all ( ' 0 ' ) == ' 0 ' ) { return \" 0 ' ; }",
        "ok [ s ] -= s ;"
      ],
      "err_line": 9,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        9,
        26,
        21
      ],
      "mod_code": [
        "if ( res . all ( ' 0 ' ) == ' 0 ' ) { return \" 0 ' ; }",
        "ok [ s ] -= s ;",
        "s >> s ;"
      ],
      "err_line": 9,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        9,
        26,
        21,
        22
      ],
      "mod_code": [
        "if ( res . all ( ' 0 ' ) == ' 0 ' ) { return \" 0 ' ; }",
        "ok [ s ] -= s ;",
        "s >> s ;",
        "int s = inter ( s ) ;"
      ],
      "err_line": 9,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        9,
        26,
        22
      ],
      "mod_code": [
        "if ( res . all ( ' 0 ' ) == ' 0 ' ) { return \" 0 ' ; }",
        "ok [ s ] -= s ;",
        "int s = inter ( s ) ;"
      ],
      "err_line": 9,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        9,
        21
      ],
      "mod_code": [
        "if ( res . all ( ' 0 ' ) == ' 0 ' ) { return \" 0 ' ; }",
        "s >> s ;"
      ],
      "err_line": 9,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        9,
        21,
        22
      ],
      "mod_code": [
        "if ( res . all ( ' 0 ' ) == ' 0 ' ) { return \" 0 ' ; }",
        "s >> s ;",
        "int s = inter ( s ) ;"
      ],
      "err_line": 9,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        9,
        22
      ],
      "mod_code": [
        "if ( res . all ( ' 0 ' ) == ' 0 ' ) { return \" 0 ' ; }",
        "int s = inter ( s ) ;"
      ],
      "err_line": 9,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        10,
        11
      ],
      "mod_code": [
        "int pos = res . first = res . first ;",
        "res = res . substr ( pos , length ) - poss ;"
      ],
      "err_line": 10,
      "err_msg": "‘std::__cxx11::string {aka class std::__cxx11::basic_string<char>}’ has no member named ‘first’"
    },
    {
      "mod_line": [
        10,
        11,
        26
      ],
      "mod_code": [
        "int pos = res . first = res . first ;",
        "res = res . substr ( pos , length ) - poss ;",
        "ok [ s ] -= s ;"
      ],
      "err_line": 10,
      "err_msg": "‘std::__cxx11::string {aka class std::__cxx11::basic_string<char>}’ has no member named ‘first’"
    },
    {
      "mod_line": [
        10,
        11,
        26,
        21
      ],
      "mod_code": [
        "int pos = res . first = res . first ;",
        "res = res . substr ( pos , length ) - poss ;",
        "ok [ s ] -= s ;",
        "s >> s ;"
      ],
      "err_line": 10,
      "err_msg": "‘std::__cxx11::string {aka class std::__cxx11::basic_string<char>}’ has no member named ‘first’"
    },
    {
      "mod_line": [
        10,
        11,
        26,
        22
      ],
      "mod_code": [
        "int pos = res . first = res . first ;",
        "res = res . substr ( pos , length ) - poss ;",
        "ok [ s ] -= s ;",
        "int s = inter ( s ) ;"
      ],
      "err_line": 10,
      "err_msg": "‘std::__cxx11::string {aka class std::__cxx11::basic_string<char>}’ has no member named ‘first’"
    },
    {
      "mod_line": [
        10,
        11,
        21
      ],
      "mod_code": [
        "int pos = res . first = res . first ;",
        "res = res . substr ( pos , length ) - poss ;",
        "s >> s ;"
      ],
      "err_line": 10,
      "err_msg": "‘std::__cxx11::string {aka class std::__cxx11::basic_string<char>}’ has no member named ‘first’"
    },
    {
      "mod_line": [
        10,
        11,
        21,
        22
      ],
      "mod_code": [
        "int pos = res . first = res . first ;",
        "res = res . substr ( pos , length ) - poss ;",
        "s >> s ;",
        "int s = inter ( s ) ;"
      ],
      "err_line": 10,
      "err_msg": "‘std::__cxx11::string {aka class std::__cxx11::basic_string<char>}’ has no member named ‘first’"
    },
    {
      "mod_line": [
        10,
        11,
        22
      ],
      "mod_code": [
        "int pos = res . first = res . first ;",
        "res = res . substr ( pos , length ) - poss ;",
        "int s = inter ( s ) ;"
      ],
      "err_line": 10,
      "err_msg": "‘std::__cxx11::string {aka class std::__cxx11::basic_string<char>}’ has no member named ‘first’"
    },
    {
      "mod_line": [
        10,
        26
      ],
      "mod_code": [
        "int pos = res . first = res . first ;",
        "ok [ s ] -= s ;"
      ],
      "err_line": 10,
      "err_msg": "‘std::__cxx11::string {aka class std::__cxx11::basic_string<char>}’ has no member named ‘first’"
    },
    {
      "mod_line": [
        10,
        26,
        21
      ],
      "mod_code": [
        "int pos = res . first = res . first ;",
        "ok [ s ] -= s ;",
        "s >> s ;"
      ],
      "err_line": 10,
      "err_msg": "‘std::__cxx11::string {aka class std::__cxx11::basic_string<char>}’ has no member named ‘first’"
    },
    {
      "mod_line": [
        10,
        26,
        21,
        22
      ],
      "mod_code": [
        "int pos = res . first = res . first ;",
        "ok [ s ] -= s ;",
        "s >> s ;",
        "int s = inter ( s ) ;"
      ],
      "err_line": 10,
      "err_msg": "‘std::__cxx11::string {aka class std::__cxx11::basic_string<char>}’ has no member named ‘first’"
    },
    {
      "mod_line": [
        10,
        26,
        22
      ],
      "mod_code": [
        "int pos = res . first = res . first ;",
        "ok [ s ] -= s ;",
        "int s = inter ( s ) ;"
      ],
      "err_line": 10,
      "err_msg": "‘std::__cxx11::string {aka class std::__cxx11::basic_string<char>}’ has no member named ‘first’"
    },
    {
      "mod_line": [
        10,
        21
      ],
      "mod_code": [
        "int pos = res . first = res . first ;",
        "s >> s ;"
      ],
      "err_line": 10,
      "err_msg": "‘std::__cxx11::string {aka class std::__cxx11::basic_string<char>}’ has no member named ‘first’"
    },
    {
      "mod_line": [
        10,
        21,
        22
      ],
      "mod_code": [
        "int pos = res . first = res . first ;",
        "s >> s ;",
        "int s = inter ( s ) ;"
      ],
      "err_line": 10,
      "err_msg": "‘std::__cxx11::string {aka class std::__cxx11::basic_string<char>}’ has no member named ‘first’"
    },
    {
      "mod_line": [
        10,
        22
      ],
      "mod_code": [
        "int pos = res . first = res . first ;",
        "int s = inter ( s ) ;"
      ],
      "err_line": 10,
      "err_msg": "‘std::__cxx11::string {aka class std::__cxx11::basic_string<char>}’ has no member named ‘first’"
    },
    {
      "mod_line": [
        11,
        26
      ],
      "mod_code": [
        "res = res . substr ( pos , length ) - poss ;",
        "ok [ s ] -= s ;"
      ],
      "err_line": 11,
      "err_msg": "‘length’ was not declared in this scope"
    },
    {
      "mod_line": [
        11,
        26,
        21
      ],
      "mod_code": [
        "res = res . substr ( pos , length ) - poss ;",
        "ok [ s ] -= s ;",
        "s >> s ;"
      ],
      "err_line": 11,
      "err_msg": "‘length’ was not declared in this scope"
    },
    {
      "mod_line": [
        11,
        26,
        21,
        22
      ],
      "mod_code": [
        "res = res . substr ( pos , length ) - poss ;",
        "ok [ s ] -= s ;",
        "s >> s ;",
        "int s = inter ( s ) ;"
      ],
      "err_line": 11,
      "err_msg": "‘length’ was not declared in this scope"
    },
    {
      "mod_line": [
        11,
        26,
        22
      ],
      "mod_code": [
        "res = res . substr ( pos , length ) - poss ;",
        "ok [ s ] -= s ;",
        "int s = inter ( s ) ;"
      ],
      "err_line": 11,
      "err_msg": "‘length’ was not declared in this scope"
    },
    {
      "mod_line": [
        11,
        21
      ],
      "mod_code": [
        "res = res . substr ( pos , length ) - poss ;",
        "s >> s ;"
      ],
      "err_line": 11,
      "err_msg": "‘length’ was not declared in this scope"
    },
    {
      "mod_line": [
        11,
        21,
        22
      ],
      "mod_code": [
        "res = res . substr ( pos , length ) - poss ;",
        "s >> s ;",
        "int s = inter ( s ) ;"
      ],
      "err_line": 11,
      "err_msg": "‘length’ was not declared in this scope"
    },
    {
      "mod_line": [
        11,
        22
      ],
      "mod_code": [
        "res = res . substr ( pos , length ) - poss ;",
        "int s = inter ( s ) ;"
      ],
      "err_line": 11,
      "err_msg": "‘length’ was not declared in this scope"
    },
    {
      "mod_line": [
        26,
        21
      ],
      "mod_code": [
        "ok [ s ] -= s ;",
        "s >> s ;"
      ],
      "err_line": 21,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        26,
        21,
        22
      ],
      "mod_code": [
        "ok [ s ] -= s ;",
        "s >> s ;",
        "int s = inter ( s ) ;"
      ],
      "err_line": 21,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        26,
        22
      ],
      "mod_code": [
        "ok [ s ] -= s ;",
        "int s = inter ( s ) ;"
      ],
      "err_line": 22,
      "err_msg": "could not convert ‘s’ from ‘int’ to ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’"
    },
    {
      "mod_line": [
        21,
        22
      ],
      "mod_code": [
        "s >> s ;",
        "int s = inter ( s ) ;"
      ],
      "err_line": 21,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    }
  ]
}