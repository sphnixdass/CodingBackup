{
  "meta": {
    "index": 2615,
    "hitid": "3RTFSSG7T80BGRPL94UGW7OUOJKWLF",
    "workerid": "AIWEXPJAU66D9",
    "probid": "1101A",
    "subid": "49029640"
  },
  "lines": [
    {
      "line": 0,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 1,
      "text": "set output stream precision to 0",
      "code": "cout . precision ( 0 ) ;",
      "indent": 1
    },
    {
      "line": 2,
      "text": "set output stream format flags to ios_base : : fixed",
      "code": "cout . setf ( ios_base :: fixed ) ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "declare long long variables n and m",
      "code": "long long n , m ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "read n",
      "code": "cin >> n ;",
      "indent": 1
    },
    {
      "line": 5,
      "text": "declare long doubles a , b and c",
      "code": "long double a , b , c ;",
      "indent": 1
    },
    {
      "line": 6,
      "text": "decrement n in a lopp while it is greater than 0",
      "code": "while ( n -- )",
      "indent": 1
    },
    {
      "line": 7,
      "text": "read a , b and c",
      "code": "cin >> a >> b >> c ;",
      "indent": 2
    },
    {
      "line": 8,
      "text": "create double i = ( a / c )",
      "code": "double i = ( a / c ) ;",
      "indent": 2
    },
    {
      "line": 9,
      "text": "if i < = 1",
      "code": "if ( i <= 1 )",
      "indent": 2
    },
    {
      "line": 10,
      "text": "print ( ( b / c ) + 1 ) * c",
      "code": "cout << ( double ) ( int ( b / c ) + 1 ) * c << endl ;",
      "indent": 3
    },
    {
      "line": 11,
      "text": "else",
      "code": "else",
      "indent": 2
    },
    {
      "line": 12,
      "text": "print c",
      "code": "cout << c << endl ;",
      "indent": 3
    },
    {
      "line": 13,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 14,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        2
      ],
      "mod_code": [
        "cout << ios_base == fixed ;"
      ],
      "err_line": 2,
      "err_msg": "expected primary-expression before ‘==’ token"
    },
    {
      "mod_line": [
        1
      ],
      "mod_code": [
        "cout << precision . precision ( 0 ) ;"
      ],
      "err_line": 1,
      "err_msg": "‘precision’ was not declared in this scope"
    },
    {
      "mod_line": [
        2
      ],
      "mod_code": [
        "output . setf ( flags ) ;"
      ],
      "err_line": 2,
      "err_msg": "‘output’ was not declared in this scope"
    },
    {
      "mod_line": [
        4
      ],
      "mod_code": [
        "while ( cin >> n )"
      ],
      "err_line": 7,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        5
      ],
      "mod_code": [
        "long doubles , b , c ;"
      ],
      "err_line": 7,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        8
      ],
      "mod_code": [
        "double * i = ( a / c ) ;"
      ],
      "err_line": 8,
      "err_msg": "cannot convert ‘long double’ to ‘double*’ in initialization"
    },
    {
      "mod_line": [
        2,
        10
      ],
      "mod_code": [
        "cout << ios_base == fixed ;",
        "cout << ( ( b / c ) + 1 ) * c << endl ;"
      ],
      "err_line": 2,
      "err_msg": "expected primary-expression before ‘==’ token"
    },
    {
      "mod_line": [
        2,
        10,
        7
      ],
      "mod_code": [
        "cout << ios_base == fixed ;",
        "cout << ( ( b / c ) + 1 ) * c << endl ;",
        "cin >> a >> b >> n ;"
      ],
      "err_line": 2,
      "err_msg": "expected primary-expression before ‘==’ token"
    },
    {
      "mod_line": [
        2,
        10,
        7,
        5
      ],
      "mod_code": [
        "cout << ios_base == fixed ;",
        "cout << ( ( b / c ) + 1 ) * c << endl ;",
        "cin >> a >> b >> n ;",
        "long doubles , b , c ;"
      ],
      "err_line": 2,
      "err_msg": "expected primary-expression before ‘==’ token"
    },
    {
      "mod_line": [
        2,
        10,
        5
      ],
      "mod_code": [
        "cout << ios_base == fixed ;",
        "cout << ( ( b / c ) + 1 ) * c << endl ;",
        "long doubles , b , c ;"
      ],
      "err_line": 2,
      "err_msg": "expected primary-expression before ‘==’ token"
    },
    {
      "mod_line": [
        2,
        7
      ],
      "mod_code": [
        "cout << ios_base == fixed ;",
        "cin >> a >> b >> n ;"
      ],
      "err_line": 2,
      "err_msg": "expected primary-expression before ‘==’ token"
    },
    {
      "mod_line": [
        2,
        7,
        5
      ],
      "mod_code": [
        "cout << ios_base == fixed ;",
        "cin >> a >> b >> n ;",
        "long doubles , b , c ;"
      ],
      "err_line": 2,
      "err_msg": "expected primary-expression before ‘==’ token"
    },
    {
      "mod_line": [
        2,
        7,
        5,
        10
      ],
      "mod_code": [
        "cout << ios_base == fixed ;",
        "cin >> a >> b >> n ;",
        "long doubles , b , c ;",
        "cout << ( ( b / c ) + 1 ) * c << \" \\n \" ;"
      ],
      "err_line": 2,
      "err_msg": "expected primary-expression before ‘==’ token"
    },
    {
      "mod_line": [
        2,
        7,
        10
      ],
      "mod_code": [
        "cout << ios_base == fixed ;",
        "cin >> a >> b >> n ;",
        "cout << ( ( b / c ) + 1 ) * c << \" \\n \" ;"
      ],
      "err_line": 2,
      "err_msg": "expected primary-expression before ‘==’ token"
    },
    {
      "mod_line": [
        2,
        5
      ],
      "mod_code": [
        "cout << ios_base == fixed ;",
        "long doubles , b , c ;"
      ],
      "err_line": 2,
      "err_msg": "expected primary-expression before ‘==’ token"
    },
    {
      "mod_line": [
        2,
        5,
        10
      ],
      "mod_code": [
        "cout << ios_base == fixed ;",
        "long doubles , b , c ;",
        "cout << ( ( b / c ) + 1 ) * c << \" \\n \" ;"
      ],
      "err_line": 2,
      "err_msg": "expected primary-expression before ‘==’ token"
    },
    {
      "mod_line": [
        2,
        10
      ],
      "mod_code": [
        "cout << ios_base == fixed ;",
        "cout << ( ( b / c ) + 1 ) * c << \" \\n \" ;"
      ],
      "err_line": 2,
      "err_msg": "expected primary-expression before ‘==’ token"
    },
    {
      "mod_line": [
        10,
        7,
        2
      ],
      "mod_code": [
        "cout << ( ( b / c ) + 1 ) * c << endl ;",
        "cin >> a >> b >> n ;",
        "output . setf ( flags ) ;"
      ],
      "err_line": 2,
      "err_msg": "‘output’ was not declared in this scope"
    },
    {
      "mod_line": [
        10,
        7,
        2,
        5
      ],
      "mod_code": [
        "cout << ( ( b / c ) + 1 ) * c << endl ;",
        "cin >> a >> b >> n ;",
        "output . setf ( flags ) ;",
        "long doubles , b , c ;"
      ],
      "err_line": 2,
      "err_msg": "‘output’ was not declared in this scope"
    },
    {
      "mod_line": [
        10,
        7,
        5
      ],
      "mod_code": [
        "cout << ( ( b / c ) + 1 ) * c << endl ;",
        "cin >> a >> b >> n ;",
        "long doubles , b , c ;"
      ],
      "err_line": 7,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        10,
        2
      ],
      "mod_code": [
        "cout << ( ( b / c ) + 1 ) * c << endl ;",
        "output . setf ( flags ) ;"
      ],
      "err_line": 2,
      "err_msg": "‘output’ was not declared in this scope"
    },
    {
      "mod_line": [
        10,
        2,
        5
      ],
      "mod_code": [
        "cout << ( ( b / c ) + 1 ) * c << endl ;",
        "output . setf ( flags ) ;",
        "long doubles , b , c ;"
      ],
      "err_line": 2,
      "err_msg": "‘output’ was not declared in this scope"
    },
    {
      "mod_line": [
        10,
        5
      ],
      "mod_code": [
        "cout << ( ( b / c ) + 1 ) * c << endl ;",
        "long doubles , b , c ;"
      ],
      "err_line": 7,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        7,
        2
      ],
      "mod_code": [
        "cin >> a >> b >> n ;",
        "output . setf ( flags ) ;"
      ],
      "err_line": 2,
      "err_msg": "‘output’ was not declared in this scope"
    },
    {
      "mod_line": [
        7,
        2,
        5
      ],
      "mod_code": [
        "cin >> a >> b >> n ;",
        "output . setf ( flags ) ;",
        "long doubles , b , c ;"
      ],
      "err_line": 2,
      "err_msg": "‘output’ was not declared in this scope"
    },
    {
      "mod_line": [
        7,
        2,
        5,
        10
      ],
      "mod_code": [
        "cin >> a >> b >> n ;",
        "output . setf ( flags ) ;",
        "long doubles , b , c ;",
        "cout << ( ( b / c ) + 1 ) * c << \" \\n \" ;"
      ],
      "err_line": 2,
      "err_msg": "‘output’ was not declared in this scope"
    },
    {
      "mod_line": [
        7,
        2,
        10
      ],
      "mod_code": [
        "cin >> a >> b >> n ;",
        "output . setf ( flags ) ;",
        "cout << ( ( b / c ) + 1 ) * c << \" \\n \" ;"
      ],
      "err_line": 2,
      "err_msg": "‘output’ was not declared in this scope"
    },
    {
      "mod_line": [
        7,
        5
      ],
      "mod_code": [
        "cin >> a >> b >> n ;",
        "long doubles , b , c ;"
      ],
      "err_line": 7,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        7,
        5,
        10
      ],
      "mod_code": [
        "cin >> a >> b >> n ;",
        "long doubles , b , c ;",
        "cout << ( ( b / c ) + 1 ) * c << \" \\n \" ;"
      ],
      "err_line": 7,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        2,
        5
      ],
      "mod_code": [
        "output . setf ( flags ) ;",
        "long doubles , b , c ;"
      ],
      "err_line": 2,
      "err_msg": "‘output’ was not declared in this scope"
    },
    {
      "mod_line": [
        2,
        5,
        10
      ],
      "mod_code": [
        "output . setf ( flags ) ;",
        "long doubles , b , c ;",
        "cout << ( ( b / c ) + 1 ) * c << \" \\n \" ;"
      ],
      "err_line": 2,
      "err_msg": "‘output’ was not declared in this scope"
    },
    {
      "mod_line": [
        2,
        10
      ],
      "mod_code": [
        "output . setf ( flags ) ;",
        "cout << ( ( b / c ) + 1 ) * c << \" \\n \" ;"
      ],
      "err_line": 2,
      "err_msg": "‘output’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        10
      ],
      "mod_code": [
        "long doubles , b , c ;",
        "cout << ( ( b / c ) + 1 ) * c << \" \\n \" ;"
      ],
      "err_line": 7,
      "err_msg": "‘a’ was not declared in this scope"
    }
  ]
}