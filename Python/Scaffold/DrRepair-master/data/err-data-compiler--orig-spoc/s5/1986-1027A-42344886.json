{
  "meta": {
    "index": 1986,
    "hitid": "30OITAWPBQXYIZTNP85QQVNCAOR9H7",
    "workerid": "A1C5H6OY3HGO4U",
    "probid": "1027A",
    "subid": "42344886"
  },
  "lines": [
    {
      "line": 0,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 1,
      "text": "t = integer",
      "code": "int t ;",
      "indent": 1
    },
    {
      "line": 2,
      "text": "read t",
      "code": "cin >> t ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "while t is not 0 decrease t by 1 and do",
      "code": "while ( t -- )",
      "indent": 1
    },
    {
      "line": 4,
      "text": "n = integer",
      "code": "int n ;",
      "indent": 2
    },
    {
      "line": 5,
      "text": "read n",
      "code": "cin >> n ;",
      "indent": 2
    },
    {
      "line": 6,
      "text": "s = string",
      "code": "string s ;",
      "indent": 2
    },
    {
      "line": 7,
      "text": "read s",
      "code": "cin >> s ;",
      "indent": 2
    },
    {
      "line": 8,
      "text": "len = integer with value of n - 1",
      "code": "int len = n - 1 ;",
      "indent": 2
    },
    {
      "line": 9,
      "text": "i = integer with value of 0",
      "code": "int i = 0 ;",
      "indent": 2
    },
    {
      "line": 10,
      "text": "flag = integer with value of 0",
      "code": "int flag = 0 ;",
      "indent": 2
    },
    {
      "line": 11,
      "text": "while i is less than len",
      "code": "while ( i < len )",
      "indent": 2
    },
    {
      "line": 12,
      "text": "if the absolute value of ( s [ i ] - s [ len ] ) equals 2 or the absolute value of ( s [ i ] - s [ len ] ) equals 0",
      "code": "if ( abs ( s [ i ] - s [ len ] ) == 2 || abs ( s [ i ] - s [ len ] ) == 0 )",
      "indent": 3
    },
    {
      "line": 13,
      "text": "add 1 to i",
      "code": "i ++ ;",
      "indent": 4
    },
    {
      "line": 14,
      "text": "subtract 1 from len",
      "code": "len -- ;",
      "indent": 4
    },
    {
      "line": 15,
      "text": "else",
      "code": "else",
      "indent": 3
    },
    {
      "line": 16,
      "text": "set flag to 1",
      "code": "flag = 1 ;",
      "indent": 4
    },
    {
      "line": 17,
      "text": "break",
      "code": "break ;",
      "indent": 4
    },
    {
      "line": 18,
      "text": "DUMMY",
      "code": "}",
      "indent": 3
    },
    {
      "line": 19,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 20,
      "text": "if flag equals 1",
      "code": "if ( flag == 1 )",
      "indent": 2
    },
    {
      "line": 21,
      "text": "print NO",
      "code": "cout << \" NO \" << endl ;",
      "indent": 3
    },
    {
      "line": 22,
      "text": "else",
      "code": "else",
      "indent": 2
    },
    {
      "line": 23,
      "text": "print YES",
      "code": "cout << \" YES \" << endl ;",
      "indent": 3
    },
    {
      "line": 24,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 25,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 26,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        2
      ],
      "mod_code": [
        "cin . get ( t ) ;"
      ],
      "err_line": 2,
      "err_msg": "invalid initialization of non-const reference of type ‘std::basic_istream<char>::char_type& {aka char&}’ from an rvalue of type ‘std::basic_istream<char>::char_type {aka char}’"
    },
    {
      "mod_line": [
        5
      ],
      "mod_code": [
        "while ( cin >> n )"
      ],
      "err_line": 7,
      "err_msg": "‘s’ was not declared in this scope"
    },
    {
      "mod_line": [
        6
      ],
      "mod_code": [
        "char s ;"
      ],
      "err_line": 12,
      "err_msg": "invalid types ‘char[int]’ for array subscript"
    },
    {
      "mod_line": [
        17
      ],
      "mod_code": [
        "break break ;"
      ],
      "err_line": 17,
      "err_msg": "expected ‘;’ before ‘break’"
    },
    {
      "mod_line": [
        20
      ],
      "mod_code": [
        "else if ( flag == 1 )"
      ],
      "err_line": 20,
      "err_msg": "‘else’ without a previous ‘if’"
    },
    {
      "mod_line": [
        12,
        11,
        17
      ],
      "mod_code": [
        "if ( abs ( s [ i ] - s [ len ] ) == 0 || abs ( s [ i ] - s [ len ] ) == 0 )",
        "while ( i < len ) i ++ ;",
        "break break ;"
      ],
      "err_line": 17,
      "err_msg": "expected ‘;’ before ‘break’"
    },
    {
      "mod_line": [
        12,
        11,
        17,
        5
      ],
      "mod_code": [
        "if ( abs ( s [ i ] - s [ len ] ) == 0 || abs ( s [ i ] - s [ len ] ) == 0 )",
        "while ( i < len ) i ++ ;",
        "break break ;",
        "while ( cin >> n )"
      ],
      "err_line": 7,
      "err_msg": "‘s’ was not declared in this scope"
    },
    {
      "mod_line": [
        12,
        11,
        17,
        20
      ],
      "mod_code": [
        "if ( abs ( s [ i ] - s [ len ] ) == 0 || abs ( s [ i ] - s [ len ] ) == 0 )",
        "while ( i < len ) i ++ ;",
        "break break ;",
        "else if ( flag == 1 )"
      ],
      "err_line": 17,
      "err_msg": "expected ‘;’ before ‘break’"
    },
    {
      "mod_line": [
        12,
        11,
        17,
        16
      ],
      "mod_code": [
        "if ( abs ( s [ i ] - s [ len ] ) == 0 || abs ( s [ i ] - s [ len ] ) == 0 )",
        "while ( i < len ) i ++ ;",
        "break break ;",
        "int flag = 1 ;"
      ],
      "err_line": 17,
      "err_msg": "expected ‘;’ before ‘break’"
    },
    {
      "mod_line": [
        12,
        11,
        5
      ],
      "mod_code": [
        "if ( abs ( s [ i ] - s [ len ] ) == 0 || abs ( s [ i ] - s [ len ] ) == 0 )",
        "while ( i < len ) i ++ ;",
        "while ( cin >> n )"
      ],
      "err_line": 7,
      "err_msg": "‘s’ was not declared in this scope"
    },
    {
      "mod_line": [
        12,
        11,
        5,
        20
      ],
      "mod_code": [
        "if ( abs ( s [ i ] - s [ len ] ) == 0 || abs ( s [ i ] - s [ len ] ) == 0 )",
        "while ( i < len ) i ++ ;",
        "while ( cin >> n )",
        "else if ( flag == 1 )"
      ],
      "err_line": 7,
      "err_msg": "‘s’ was not declared in this scope"
    },
    {
      "mod_line": [
        12,
        11,
        5,
        16
      ],
      "mod_code": [
        "if ( abs ( s [ i ] - s [ len ] ) == 0 || abs ( s [ i ] - s [ len ] ) == 0 )",
        "while ( i < len ) i ++ ;",
        "while ( cin >> n )",
        "int flag = 1 ;"
      ],
      "err_line": 7,
      "err_msg": "‘s’ was not declared in this scope"
    },
    {
      "mod_line": [
        12,
        11,
        20
      ],
      "mod_code": [
        "if ( abs ( s [ i ] - s [ len ] ) == 0 || abs ( s [ i ] - s [ len ] ) == 0 )",
        "while ( i < len ) i ++ ;",
        "else if ( flag == 1 )"
      ],
      "err_line": 20,
      "err_msg": "‘else’ without a previous ‘if’"
    },
    {
      "mod_line": [
        12,
        11,
        20,
        16
      ],
      "mod_code": [
        "if ( abs ( s [ i ] - s [ len ] ) == 0 || abs ( s [ i ] - s [ len ] ) == 0 )",
        "while ( i < len ) i ++ ;",
        "else if ( flag == 1 )",
        "int flag = 1 ;"
      ],
      "err_line": 20,
      "err_msg": "‘else’ without a previous ‘if’"
    },
    {
      "mod_line": [
        12,
        17
      ],
      "mod_code": [
        "if ( abs ( s [ i ] - s [ len ] ) == 0 || abs ( s [ i ] - s [ len ] ) == 0 )",
        "break break ;"
      ],
      "err_line": 17,
      "err_msg": "expected ‘;’ before ‘break’"
    },
    {
      "mod_line": [
        12,
        17,
        5
      ],
      "mod_code": [
        "if ( abs ( s [ i ] - s [ len ] ) == 0 || abs ( s [ i ] - s [ len ] ) == 0 )",
        "break break ;",
        "while ( cin >> n )"
      ],
      "err_line": 7,
      "err_msg": "‘s’ was not declared in this scope"
    },
    {
      "mod_line": [
        12,
        17,
        5,
        20
      ],
      "mod_code": [
        "if ( abs ( s [ i ] - s [ len ] ) == 0 || abs ( s [ i ] - s [ len ] ) == 0 )",
        "break break ;",
        "while ( cin >> n )",
        "else if ( flag == 1 )"
      ],
      "err_line": 7,
      "err_msg": "‘s’ was not declared in this scope"
    },
    {
      "mod_line": [
        12,
        17,
        5,
        16
      ],
      "mod_code": [
        "if ( abs ( s [ i ] - s [ len ] ) == 0 || abs ( s [ i ] - s [ len ] ) == 0 )",
        "break break ;",
        "while ( cin >> n )",
        "int flag = 1 ;"
      ],
      "err_line": 7,
      "err_msg": "‘s’ was not declared in this scope"
    },
    {
      "mod_line": [
        12,
        17,
        20
      ],
      "mod_code": [
        "if ( abs ( s [ i ] - s [ len ] ) == 0 || abs ( s [ i ] - s [ len ] ) == 0 )",
        "break break ;",
        "else if ( flag == 1 )"
      ],
      "err_line": 17,
      "err_msg": "expected ‘;’ before ‘break’"
    },
    {
      "mod_line": [
        12,
        17,
        20,
        16
      ],
      "mod_code": [
        "if ( abs ( s [ i ] - s [ len ] ) == 0 || abs ( s [ i ] - s [ len ] ) == 0 )",
        "break break ;",
        "else if ( flag == 1 )",
        "int flag = 1 ;"
      ],
      "err_line": 17,
      "err_msg": "expected ‘;’ before ‘break’"
    },
    {
      "mod_line": [
        12,
        17,
        16
      ],
      "mod_code": [
        "if ( abs ( s [ i ] - s [ len ] ) == 0 || abs ( s [ i ] - s [ len ] ) == 0 )",
        "break break ;",
        "int flag = 1 ;"
      ],
      "err_line": 17,
      "err_msg": "expected ‘;’ before ‘break’"
    },
    {
      "mod_line": [
        12,
        5
      ],
      "mod_code": [
        "if ( abs ( s [ i ] - s [ len ] ) == 0 || abs ( s [ i ] - s [ len ] ) == 0 )",
        "while ( cin >> n )"
      ],
      "err_line": 7,
      "err_msg": "‘s’ was not declared in this scope"
    },
    {
      "mod_line": [
        12,
        5,
        20
      ],
      "mod_code": [
        "if ( abs ( s [ i ] - s [ len ] ) == 0 || abs ( s [ i ] - s [ len ] ) == 0 )",
        "while ( cin >> n )",
        "else if ( flag == 1 )"
      ],
      "err_line": 7,
      "err_msg": "‘s’ was not declared in this scope"
    },
    {
      "mod_line": [
        12,
        5,
        20,
        16
      ],
      "mod_code": [
        "if ( abs ( s [ i ] - s [ len ] ) == 0 || abs ( s [ i ] - s [ len ] ) == 0 )",
        "while ( cin >> n )",
        "else if ( flag == 1 )",
        "int flag = 1 ;"
      ],
      "err_line": 7,
      "err_msg": "‘s’ was not declared in this scope"
    },
    {
      "mod_line": [
        12,
        5,
        16
      ],
      "mod_code": [
        "if ( abs ( s [ i ] - s [ len ] ) == 0 || abs ( s [ i ] - s [ len ] ) == 0 )",
        "while ( cin >> n )",
        "int flag = 1 ;"
      ],
      "err_line": 7,
      "err_msg": "‘s’ was not declared in this scope"
    },
    {
      "mod_line": [
        12,
        20
      ],
      "mod_code": [
        "if ( abs ( s [ i ] - s [ len ] ) == 0 || abs ( s [ i ] - s [ len ] ) == 0 )",
        "else if ( flag == 1 )"
      ],
      "err_line": 20,
      "err_msg": "‘else’ without a previous ‘if’"
    },
    {
      "mod_line": [
        12,
        20,
        16
      ],
      "mod_code": [
        "if ( abs ( s [ i ] - s [ len ] ) == 0 || abs ( s [ i ] - s [ len ] ) == 0 )",
        "else if ( flag == 1 )",
        "int flag = 1 ;"
      ],
      "err_line": 20,
      "err_msg": "‘else’ without a previous ‘if’"
    },
    {
      "mod_line": [
        11,
        17
      ],
      "mod_code": [
        "while ( i < len ) i ++ ;",
        "break break ;"
      ],
      "err_line": 17,
      "err_msg": "expected ‘;’ before ‘break’"
    },
    {
      "mod_line": [
        11,
        17,
        5
      ],
      "mod_code": [
        "while ( i < len ) i ++ ;",
        "break break ;",
        "while ( cin >> n )"
      ],
      "err_line": 7,
      "err_msg": "‘s’ was not declared in this scope"
    },
    {
      "mod_line": [
        11,
        17,
        5,
        20
      ],
      "mod_code": [
        "while ( i < len ) i ++ ;",
        "break break ;",
        "while ( cin >> n )",
        "else if ( flag == 1 )"
      ],
      "err_line": 7,
      "err_msg": "‘s’ was not declared in this scope"
    },
    {
      "mod_line": [
        11,
        17,
        5,
        16
      ],
      "mod_code": [
        "while ( i < len ) i ++ ;",
        "break break ;",
        "while ( cin >> n )",
        "int flag = 1 ;"
      ],
      "err_line": 7,
      "err_msg": "‘s’ was not declared in this scope"
    },
    {
      "mod_line": [
        11,
        17,
        20
      ],
      "mod_code": [
        "while ( i < len ) i ++ ;",
        "break break ;",
        "else if ( flag == 1 )"
      ],
      "err_line": 17,
      "err_msg": "expected ‘;’ before ‘break’"
    },
    {
      "mod_line": [
        11,
        17,
        20,
        16
      ],
      "mod_code": [
        "while ( i < len ) i ++ ;",
        "break break ;",
        "else if ( flag == 1 )",
        "int flag = 1 ;"
      ],
      "err_line": 17,
      "err_msg": "expected ‘;’ before ‘break’"
    },
    {
      "mod_line": [
        11,
        17,
        16
      ],
      "mod_code": [
        "while ( i < len ) i ++ ;",
        "break break ;",
        "int flag = 1 ;"
      ],
      "err_line": 17,
      "err_msg": "expected ‘;’ before ‘break’"
    },
    {
      "mod_line": [
        11,
        5
      ],
      "mod_code": [
        "while ( i < len ) i ++ ;",
        "while ( cin >> n )"
      ],
      "err_line": 7,
      "err_msg": "‘s’ was not declared in this scope"
    },
    {
      "mod_line": [
        11,
        5,
        20
      ],
      "mod_code": [
        "while ( i < len ) i ++ ;",
        "while ( cin >> n )",
        "else if ( flag == 1 )"
      ],
      "err_line": 7,
      "err_msg": "‘s’ was not declared in this scope"
    },
    {
      "mod_line": [
        11,
        5,
        20,
        16
      ],
      "mod_code": [
        "while ( i < len ) i ++ ;",
        "while ( cin >> n )",
        "else if ( flag == 1 )",
        "int flag = 1 ;"
      ],
      "err_line": 7,
      "err_msg": "‘s’ was not declared in this scope"
    },
    {
      "mod_line": [
        11,
        5,
        16
      ],
      "mod_code": [
        "while ( i < len ) i ++ ;",
        "while ( cin >> n )",
        "int flag = 1 ;"
      ],
      "err_line": 7,
      "err_msg": "‘s’ was not declared in this scope"
    },
    {
      "mod_line": [
        11,
        20
      ],
      "mod_code": [
        "while ( i < len ) i ++ ;",
        "else if ( flag == 1 )"
      ],
      "err_line": 20,
      "err_msg": "‘else’ without a previous ‘if’"
    },
    {
      "mod_line": [
        11,
        20,
        16
      ],
      "mod_code": [
        "while ( i < len ) i ++ ;",
        "else if ( flag == 1 )",
        "int flag = 1 ;"
      ],
      "err_line": 20,
      "err_msg": "‘else’ without a previous ‘if’"
    },
    {
      "mod_line": [
        17,
        5
      ],
      "mod_code": [
        "break break ;",
        "while ( cin >> n )"
      ],
      "err_line": 7,
      "err_msg": "‘s’ was not declared in this scope"
    },
    {
      "mod_line": [
        17,
        5,
        20
      ],
      "mod_code": [
        "break break ;",
        "while ( cin >> n )",
        "else if ( flag == 1 )"
      ],
      "err_line": 7,
      "err_msg": "‘s’ was not declared in this scope"
    },
    {
      "mod_line": [
        17,
        5,
        20,
        16
      ],
      "mod_code": [
        "break break ;",
        "while ( cin >> n )",
        "else if ( flag == 1 )",
        "int flag = 1 ;"
      ],
      "err_line": 7,
      "err_msg": "‘s’ was not declared in this scope"
    },
    {
      "mod_line": [
        17,
        5,
        16
      ],
      "mod_code": [
        "break break ;",
        "while ( cin >> n )",
        "int flag = 1 ;"
      ],
      "err_line": 7,
      "err_msg": "‘s’ was not declared in this scope"
    },
    {
      "mod_line": [
        17,
        20
      ],
      "mod_code": [
        "break break ;",
        "else if ( flag == 1 )"
      ],
      "err_line": 17,
      "err_msg": "expected ‘;’ before ‘break’"
    },
    {
      "mod_line": [
        17,
        20,
        16
      ],
      "mod_code": [
        "break break ;",
        "else if ( flag == 1 )",
        "int flag = 1 ;"
      ],
      "err_line": 17,
      "err_msg": "expected ‘;’ before ‘break’"
    },
    {
      "mod_line": [
        17,
        16
      ],
      "mod_code": [
        "break break ;",
        "int flag = 1 ;"
      ],
      "err_line": 17,
      "err_msg": "expected ‘;’ before ‘break’"
    },
    {
      "mod_line": [
        5,
        20
      ],
      "mod_code": [
        "while ( cin >> n )",
        "else if ( flag == 1 )"
      ],
      "err_line": 7,
      "err_msg": "‘s’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        20,
        16
      ],
      "mod_code": [
        "while ( cin >> n )",
        "else if ( flag == 1 )",
        "int flag = 1 ;"
      ],
      "err_line": 7,
      "err_msg": "‘s’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        16
      ],
      "mod_code": [
        "while ( cin >> n )",
        "int flag = 1 ;"
      ],
      "err_line": 7,
      "err_msg": "‘s’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        16
      ],
      "mod_code": [
        "else if ( flag == 1 )",
        "int flag = 1 ;"
      ],
      "err_line": 20,
      "err_msg": "‘else’ without a previous ‘if’"
    }
  ]
}