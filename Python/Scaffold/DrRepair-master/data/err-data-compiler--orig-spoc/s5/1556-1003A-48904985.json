{
  "meta": {
    "index": 1556,
    "hitid": "3JVP4ZJHDPMGI0GUVU4IXWNY7XDI0Y",
    "workerid": "A1APYLD4DUK33J",
    "probid": "1003A",
    "subid": "48904985"
  },
  "lines": [
    {
      "line": 0,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 1,
      "text": "declare integers n , max = - 1 , cnt , integer array arr size 105",
      "code": "int n , arr [ 105 ] , max = - 1 , cnt ;",
      "indent": 1
    },
    {
      "line": 2,
      "text": "read n",
      "code": "cin >> n ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "for i = 0 to n exclusive , read arr [ i ]",
      "code": "for ( int i = 0 ; i < n ; i ++ ) { cin >> arr [ i ] ; }",
      "indent": 1
    },
    {
      "line": 4,
      "text": "for i = 0 to n exclusive",
      "code": "for ( int i = 0 ; i < n ; i ++ )",
      "indent": 1
    },
    {
      "line": 5,
      "text": "let cnt be 0",
      "code": "cnt = 0 ;",
      "indent": 2
    },
    {
      "line": 6,
      "text": "if arr [ i ] is - 5000000 , end loop iteration",
      "code": "if ( arr [ i ] == - 5000000 ) { continue ; }",
      "indent": 2
    },
    {
      "line": 7,
      "text": "declare integer tmp = arr [ i ]",
      "code": "int tmp = arr [ i ] ;",
      "indent": 2
    },
    {
      "line": 8,
      "text": "for j = 0 to n exclusive",
      "code": "for ( int j = 0 ; j < n ; j ++ )",
      "indent": 2
    },
    {
      "line": 9,
      "text": "if tmp is arr [ j ]",
      "code": "if ( tmp == arr [ j ] )",
      "indent": 3
    },
    {
      "line": 10,
      "text": "increment cnt",
      "code": "cnt ++ ;",
      "indent": 4
    },
    {
      "line": 11,
      "text": "let arr [ j ] be - 5000000",
      "code": "arr [ j ] = - 5000000 ;",
      "indent": 4
    },
    {
      "line": 12,
      "text": "DUMMY",
      "code": "}",
      "indent": 3
    },
    {
      "line": 13,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 14,
      "text": "if cnt is greater than or equal to max , let max be cnt",
      "code": "if ( cnt >= max ) { max = cnt ; }",
      "indent": 2
    },
    {
      "line": 15,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 16,
      "text": "print max , newline",
      "code": "cout << max << endl ;",
      "indent": 1
    },
    {
      "line": 17,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        1
      ],
      "mod_code": [
        "int n , max = - 1 , cnt = - 1 , cnt = - 1 ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int cnt’"
    },
    {
      "mod_line": [
        1
      ],
      "mod_code": [
        "int n , max = - 1 , cnt = - 1 , cnt ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int cnt’"
    },
    {
      "mod_line": [
        4
      ],
      "mod_code": [
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 4,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        8
      ],
      "mod_code": [
        "for ( j = 0 ; j < n ; j ++ )"
      ],
      "err_line": 8,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        8
      ],
      "mod_code": [
        "int n , max = - 1 , cnt = - 1 , cnt = - 1 ;",
        "for ( j = 0 ; j < n ; j ++ )"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int cnt’"
    },
    {
      "mod_line": [
        1,
        8,
        9
      ],
      "mod_code": [
        "int n , max = - 1 , cnt = - 1 , cnt = - 1 ;",
        "for ( j = 0 ; j < n ; j ++ )",
        "if ( tmp == arr [ j ] ) break ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int cnt’"
    },
    {
      "mod_line": [
        1,
        8,
        9,
        4
      ],
      "mod_code": [
        "int n , max = - 1 , cnt = - 1 , cnt = - 1 ;",
        "for ( j = 0 ; j < n ; j ++ )",
        "if ( tmp == arr [ j ] ) break ;",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int cnt’"
    },
    {
      "mod_line": [
        1,
        8,
        9,
        6
      ],
      "mod_code": [
        "int n , max = - 1 , cnt = - 1 , cnt = - 1 ;",
        "for ( j = 0 ; j < n ; j ++ )",
        "if ( tmp == arr [ j ] ) break ;",
        "if ( arr [ i ] == ' 5000000 ' ) continue ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int cnt’"
    },
    {
      "mod_line": [
        1,
        8,
        4
      ],
      "mod_code": [
        "int n , max = - 1 , cnt = - 1 , cnt = - 1 ;",
        "for ( j = 0 ; j < n ; j ++ )",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int cnt’"
    },
    {
      "mod_line": [
        1,
        8,
        4,
        6
      ],
      "mod_code": [
        "int n , max = - 1 , cnt = - 1 , cnt = - 1 ;",
        "for ( j = 0 ; j < n ; j ++ )",
        "for ( i = 0 ; i < n ; i ++ )",
        "if ( arr [ i ] == ' 5000000 ' ) continue ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int cnt’"
    },
    {
      "mod_line": [
        1,
        8,
        6
      ],
      "mod_code": [
        "int n , max = - 1 , cnt = - 1 , cnt = - 1 ;",
        "for ( j = 0 ; j < n ; j ++ )",
        "if ( arr [ i ] == ' 5000000 ' ) continue ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int cnt’"
    },
    {
      "mod_line": [
        1,
        9
      ],
      "mod_code": [
        "int n , max = - 1 , cnt = - 1 , cnt = - 1 ;",
        "if ( tmp == arr [ j ] ) break ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int cnt’"
    },
    {
      "mod_line": [
        1,
        9,
        4
      ],
      "mod_code": [
        "int n , max = - 1 , cnt = - 1 , cnt = - 1 ;",
        "if ( tmp == arr [ j ] ) break ;",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int cnt’"
    },
    {
      "mod_line": [
        1,
        9,
        4,
        6
      ],
      "mod_code": [
        "int n , max = - 1 , cnt = - 1 , cnt = - 1 ;",
        "if ( tmp == arr [ j ] ) break ;",
        "for ( i = 0 ; i < n ; i ++ )",
        "if ( arr [ i ] == ' 5000000 ' ) continue ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int cnt’"
    },
    {
      "mod_line": [
        1,
        9,
        6
      ],
      "mod_code": [
        "int n , max = - 1 , cnt = - 1 , cnt = - 1 ;",
        "if ( tmp == arr [ j ] ) break ;",
        "if ( arr [ i ] == ' 5000000 ' ) continue ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int cnt’"
    },
    {
      "mod_line": [
        1,
        4
      ],
      "mod_code": [
        "int n , max = - 1 , cnt = - 1 , cnt = - 1 ;",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int cnt’"
    },
    {
      "mod_line": [
        1,
        4,
        6
      ],
      "mod_code": [
        "int n , max = - 1 , cnt = - 1 , cnt = - 1 ;",
        "for ( i = 0 ; i < n ; i ++ )",
        "if ( arr [ i ] == ' 5000000 ' ) continue ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int cnt’"
    },
    {
      "mod_line": [
        1,
        6
      ],
      "mod_code": [
        "int n , max = - 1 , cnt = - 1 , cnt = - 1 ;",
        "if ( arr [ i ] == ' 5000000 ' ) continue ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int cnt’"
    },
    {
      "mod_line": [
        8,
        9
      ],
      "mod_code": [
        "for ( j = 0 ; j < n ; j ++ )",
        "if ( tmp == arr [ j ] ) break ;"
      ],
      "err_line": 8,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        8,
        9,
        4
      ],
      "mod_code": [
        "for ( j = 0 ; j < n ; j ++ )",
        "if ( tmp == arr [ j ] ) break ;",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 4,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        8,
        9,
        4,
        6
      ],
      "mod_code": [
        "for ( j = 0 ; j < n ; j ++ )",
        "if ( tmp == arr [ j ] ) break ;",
        "for ( i = 0 ; i < n ; i ++ )",
        "if ( arr [ i ] == ' 5000000 ' ) continue ;"
      ],
      "err_line": 4,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        8,
        9,
        4,
        1
      ],
      "mod_code": [
        "for ( j = 0 ; j < n ; j ++ )",
        "if ( tmp == arr [ j ] ) break ;",
        "for ( i = 0 ; i < n ; i ++ )",
        "int n , max = - 1 , cnt = - 1 , cnt ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int cnt’"
    },
    {
      "mod_line": [
        8,
        9,
        6
      ],
      "mod_code": [
        "for ( j = 0 ; j < n ; j ++ )",
        "if ( tmp == arr [ j ] ) break ;",
        "if ( arr [ i ] == ' 5000000 ' ) continue ;"
      ],
      "err_line": 8,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        8,
        9,
        6,
        1
      ],
      "mod_code": [
        "for ( j = 0 ; j < n ; j ++ )",
        "if ( tmp == arr [ j ] ) break ;",
        "if ( arr [ i ] == ' 5000000 ' ) continue ;",
        "int n , max = - 1 , cnt = - 1 , cnt ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int cnt’"
    },
    {
      "mod_line": [
        8,
        9,
        1
      ],
      "mod_code": [
        "for ( j = 0 ; j < n ; j ++ )",
        "if ( tmp == arr [ j ] ) break ;",
        "int n , max = - 1 , cnt = - 1 , cnt ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int cnt’"
    },
    {
      "mod_line": [
        8,
        4
      ],
      "mod_code": [
        "for ( j = 0 ; j < n ; j ++ )",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 4,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        8,
        4,
        6
      ],
      "mod_code": [
        "for ( j = 0 ; j < n ; j ++ )",
        "for ( i = 0 ; i < n ; i ++ )",
        "if ( arr [ i ] == ' 5000000 ' ) continue ;"
      ],
      "err_line": 4,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        8,
        4,
        6,
        1
      ],
      "mod_code": [
        "for ( j = 0 ; j < n ; j ++ )",
        "for ( i = 0 ; i < n ; i ++ )",
        "if ( arr [ i ] == ' 5000000 ' ) continue ;",
        "int n , max = - 1 , cnt = - 1 , cnt ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int cnt’"
    },
    {
      "mod_line": [
        8,
        4,
        1
      ],
      "mod_code": [
        "for ( j = 0 ; j < n ; j ++ )",
        "for ( i = 0 ; i < n ; i ++ )",
        "int n , max = - 1 , cnt = - 1 , cnt ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int cnt’"
    },
    {
      "mod_line": [
        8,
        6
      ],
      "mod_code": [
        "for ( j = 0 ; j < n ; j ++ )",
        "if ( arr [ i ] == ' 5000000 ' ) continue ;"
      ],
      "err_line": 8,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        8,
        6,
        1
      ],
      "mod_code": [
        "for ( j = 0 ; j < n ; j ++ )",
        "if ( arr [ i ] == ' 5000000 ' ) continue ;",
        "int n , max = - 1 , cnt = - 1 , cnt ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int cnt’"
    },
    {
      "mod_line": [
        8,
        1
      ],
      "mod_code": [
        "for ( j = 0 ; j < n ; j ++ )",
        "int n , max = - 1 , cnt = - 1 , cnt ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int cnt’"
    },
    {
      "mod_line": [
        9,
        4
      ],
      "mod_code": [
        "if ( tmp == arr [ j ] ) break ;",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 4,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        9,
        4,
        6
      ],
      "mod_code": [
        "if ( tmp == arr [ j ] ) break ;",
        "for ( i = 0 ; i < n ; i ++ )",
        "if ( arr [ i ] == ' 5000000 ' ) continue ;"
      ],
      "err_line": 4,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        9,
        4,
        6,
        1
      ],
      "mod_code": [
        "if ( tmp == arr [ j ] ) break ;",
        "for ( i = 0 ; i < n ; i ++ )",
        "if ( arr [ i ] == ' 5000000 ' ) continue ;",
        "int n , max = - 1 , cnt = - 1 , cnt ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int cnt’"
    },
    {
      "mod_line": [
        9,
        4,
        1
      ],
      "mod_code": [
        "if ( tmp == arr [ j ] ) break ;",
        "for ( i = 0 ; i < n ; i ++ )",
        "int n , max = - 1 , cnt = - 1 , cnt ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int cnt’"
    },
    {
      "mod_line": [
        9,
        6,
        1
      ],
      "mod_code": [
        "if ( tmp == arr [ j ] ) break ;",
        "if ( arr [ i ] == ' 5000000 ' ) continue ;",
        "int n , max = - 1 , cnt = - 1 , cnt ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int cnt’"
    },
    {
      "mod_line": [
        9,
        1
      ],
      "mod_code": [
        "if ( tmp == arr [ j ] ) break ;",
        "int n , max = - 1 , cnt = - 1 , cnt ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int cnt’"
    },
    {
      "mod_line": [
        4,
        6
      ],
      "mod_code": [
        "for ( i = 0 ; i < n ; i ++ )",
        "if ( arr [ i ] == ' 5000000 ' ) continue ;"
      ],
      "err_line": 4,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        4,
        6,
        1
      ],
      "mod_code": [
        "for ( i = 0 ; i < n ; i ++ )",
        "if ( arr [ i ] == ' 5000000 ' ) continue ;",
        "int n , max = - 1 , cnt = - 1 , cnt ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int cnt’"
    },
    {
      "mod_line": [
        4,
        1
      ],
      "mod_code": [
        "for ( i = 0 ; i < n ; i ++ )",
        "int n , max = - 1 , cnt = - 1 , cnt ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int cnt’"
    },
    {
      "mod_line": [
        6,
        1
      ],
      "mod_code": [
        "if ( arr [ i ] == ' 5000000 ' ) continue ;",
        "int n , max = - 1 , cnt = - 1 , cnt ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int cnt’"
    }
  ]
}