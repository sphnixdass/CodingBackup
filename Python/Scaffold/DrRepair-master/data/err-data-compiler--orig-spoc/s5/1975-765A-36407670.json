{
  "meta": {
    "index": 1975,
    "hitid": "3TRB893CSJ4G4KAJQ5PORZK50YN7GR",
    "workerid": "A1NBHCFZKJGHKW",
    "probid": "765A",
    "subid": "36407670"
  },
  "lines": [
    {
      "line": 0,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 1,
      "text": "c = char array of size 500",
      "code": "char c [ 500 ] ;",
      "indent": 1
    },
    {
      "line": 2,
      "text": "ans , n = int",
      "code": "int ans , n ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "read n",
      "code": "cin >> n ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "read c",
      "code": "cin >> c ;",
      "indent": 1
    },
    {
      "line": 5,
      "text": "i = int",
      "code": "int i ;",
      "indent": 1
    },
    {
      "line": 6,
      "text": "for i = 0 to n read c",
      "code": "for ( i = 0 ; i < n ; i ++ ) cin >> c ;",
      "indent": 1
    },
    {
      "line": 7,
      "text": "print \" contest \" if n is uneven else print \" home \"",
      "code": "cout << ( n % 2 ? \" contest \" : \" home \" ) << endl ;",
      "indent": 1
    },
    {
      "line": 8,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 9,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        2
      ],
      "mod_code": [
        "int ans , ans ;"
      ],
      "err_line": 2,
      "err_msg": "redeclaration of ‘int ans’"
    },
    {
      "mod_line": [
        4
      ],
      "mod_code": [
        "cin . get ( c ) ;"
      ],
      "err_line": 4,
      "err_msg": "invalid conversion from ‘char*’ to ‘std::basic_istream<char>::char_type {aka char}’ [-fpermissive]"
    },
    {
      "mod_line": [
        6,
        3,
        4
      ],
      "mod_code": [
        "for ( int i = 0 ; i < n ; i ++ )",
        "while ( cin >> n )",
        "cin . get ( c ) ;"
      ],
      "err_line": 4,
      "err_msg": "invalid conversion from ‘char*’ to ‘std::basic_istream<char>::char_type {aka char}’ [-fpermissive]"
    },
    {
      "mod_line": [
        6,
        3,
        4,
        2
      ],
      "mod_code": [
        "for ( int i = 0 ; i < n ; i ++ )",
        "while ( cin >> n )",
        "cin . get ( c ) ;",
        "int ans , ans ;"
      ],
      "err_line": 2,
      "err_msg": "redeclaration of ‘int ans’"
    },
    {
      "mod_line": [
        6,
        3,
        2
      ],
      "mod_code": [
        "for ( int i = 0 ; i < n ; i ++ )",
        "while ( cin >> n )",
        "int ans , ans ;"
      ],
      "err_line": 2,
      "err_msg": "redeclaration of ‘int ans’"
    },
    {
      "mod_line": [
        6,
        4
      ],
      "mod_code": [
        "for ( int i = 0 ; i < n ; i ++ )",
        "cin . get ( c ) ;"
      ],
      "err_line": 4,
      "err_msg": "invalid conversion from ‘char*’ to ‘std::basic_istream<char>::char_type {aka char}’ [-fpermissive]"
    },
    {
      "mod_line": [
        6,
        4,
        2
      ],
      "mod_code": [
        "for ( int i = 0 ; i < n ; i ++ )",
        "cin . get ( c ) ;",
        "int ans , ans ;"
      ],
      "err_line": 2,
      "err_msg": "redeclaration of ‘int ans’"
    },
    {
      "mod_line": [
        6,
        2
      ],
      "mod_code": [
        "for ( int i = 0 ; i < n ; i ++ )",
        "int ans , ans ;"
      ],
      "err_line": 2,
      "err_msg": "redeclaration of ‘int ans’"
    },
    {
      "mod_line": [
        3,
        4
      ],
      "mod_code": [
        "while ( cin >> n )",
        "cin . get ( c ) ;"
      ],
      "err_line": 4,
      "err_msg": "invalid conversion from ‘char*’ to ‘std::basic_istream<char>::char_type {aka char}’ [-fpermissive]"
    },
    {
      "mod_line": [
        3,
        4,
        2
      ],
      "mod_code": [
        "while ( cin >> n )",
        "cin . get ( c ) ;",
        "int ans , ans ;"
      ],
      "err_line": 2,
      "err_msg": "redeclaration of ‘int ans’"
    },
    {
      "mod_line": [
        3,
        2
      ],
      "mod_code": [
        "while ( cin >> n )",
        "int ans , ans ;"
      ],
      "err_line": 2,
      "err_msg": "redeclaration of ‘int ans’"
    },
    {
      "mod_line": [
        4,
        2
      ],
      "mod_code": [
        "cin . get ( c ) ;",
        "int ans , ans ;"
      ],
      "err_line": 2,
      "err_msg": "redeclaration of ‘int ans’"
    }
  ]
}