{
  "meta": {
    "index": 131,
    "hitid": "3W9XHF7WGKP84439TZD4UN4GWCRKTF",
    "workerid": "A1C5H6OY3HGO4U",
    "probid": "354A",
    "subid": "46992545"
  },
  "lines": [
    {
      "line": 0,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 1,
      "text": "n , l , r , q1 , q2 = long long",
      "code": "long long n , l , r , q1 , q2 ;",
      "indent": 1
    },
    {
      "line": 2,
      "text": "read n , l , r , q1 and q2",
      "code": "cin >> n >> l >> r >> q1 >> q2 ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "arr = long long array of length n",
      "code": "long long arr [ n ] ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "sum = long long with value of 0",
      "code": "long long sum = 0 ;",
      "indent": 1
    },
    {
      "line": 5,
      "text": "for long long i = 0 to n exclusive",
      "code": "for ( long long i = 0 ; i < n ; i ++ )",
      "indent": 1
    },
    {
      "line": 6,
      "text": "read arr [ i ]",
      "code": "cin >> arr [ i ] ;",
      "indent": 2
    },
    {
      "line": 7,
      "text": "increase sum by arr [ i ]",
      "code": "sum += arr [ i ] ;",
      "indent": 2
    },
    {
      "line": 8,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 9,
      "text": "tempsum = long long with value of 0",
      "code": "long long tempsum = 0 ;",
      "indent": 1
    },
    {
      "line": 10,
      "text": "temp = long long with value of r * sum + ( n - 1 ) * q2",
      "code": "long long temp = r * sum + ( n - 1 ) * q2 ;",
      "indent": 1
    },
    {
      "line": 11,
      "text": "for long long i = 0 to n exclusive",
      "code": "for ( long long i = 0 ; i < n ; i ++ )",
      "indent": 1
    },
    {
      "line": 12,
      "text": "increase tempsum by arr [ i ]",
      "code": "tempsum += arr [ i ] ;",
      "indent": 2
    },
    {
      "line": 13,
      "text": "ans = long long with value of 0",
      "code": "long long ans = 0 ;",
      "indent": 2
    },
    {
      "line": 14,
      "text": "y = long long with value of n - i - 1",
      "code": "long long y = n - i - 1 ;",
      "indent": 2
    },
    {
      "line": 15,
      "text": "x = long long with value of i + 1",
      "code": "long long x = i + 1 ;",
      "indent": 2
    },
    {
      "line": 16,
      "text": "increase ans by l * tempsum",
      "code": "ans += l * ( tempsum ) ;",
      "indent": 2
    },
    {
      "line": 17,
      "text": "increase ans by r * ( sum - tempsum )",
      "code": "ans += r * ( sum - tempsum ) ;",
      "indent": 2
    },
    {
      "line": 18,
      "text": "if y is greater than x + 1",
      "code": "if ( y > x + 1 )",
      "indent": 2
    },
    {
      "line": 19,
      "text": "increase ans by ( q2 * ( y - x - 1 ) )",
      "code": "ans += ( q2 * ( y - x - 1 ) ) ;",
      "indent": 3
    },
    {
      "line": 20,
      "text": "else if x is greater than y + 1",
      "code": "else if ( x > y + 1 )",
      "indent": 2
    },
    {
      "line": 21,
      "text": "increase ans by ( q1 * ( x - y - 1 ) )",
      "code": "ans += ( q1 * ( x - y - 1 ) ) ;",
      "indent": 3
    },
    {
      "line": 22,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 23,
      "text": "if ans is less than temp then set temp to ans",
      "code": "if ( ans < temp ) temp = ans ;",
      "indent": 2
    },
    {
      "line": 24,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 25,
      "text": "print temp",
      "code": "cout << temp << endl ;",
      "indent": 1
    },
    {
      "line": 26,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        2
      ],
      "mod_code": [
        "cin >> n >> l >> r >> q1 >> 0 ;"
      ],
      "err_line": 2,
      "err_msg": "ambiguous overload for ‘operator>>’ (operand types are ‘std::basic_istream<char>::__istream_type {aka std::basic_istream<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        6,
        21,
        2
      ],
      "mod_code": [
        "cout << arr [ i ] ;",
        "ans += ( q1 * ( x - 1 - 1 ) ) ;",
        "cin >> n >> l >> r >> q1 >> 0 ;"
      ],
      "err_line": 2,
      "err_msg": "ambiguous overload for ‘operator>>’ (operand types are ‘std::basic_istream<char>::__istream_type {aka std::basic_istream<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        6,
        2
      ],
      "mod_code": [
        "cout << arr [ i ] ;",
        "cin >> n >> l >> r >> q1 >> 0 ;"
      ],
      "err_line": 2,
      "err_msg": "ambiguous overload for ‘operator>>’ (operand types are ‘std::basic_istream<char>::__istream_type {aka std::basic_istream<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        21,
        2
      ],
      "mod_code": [
        "ans += ( q1 * ( x - 1 - 1 ) ) ;",
        "cin >> n >> l >> r >> q1 >> 0 ;"
      ],
      "err_line": 2,
      "err_msg": "ambiguous overload for ‘operator>>’ (operand types are ‘std::basic_istream<char>::__istream_type {aka std::basic_istream<char>}’ and ‘int’)"
    }
  ]
}