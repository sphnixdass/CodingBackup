{
  "meta": {
    "index": 282,
    "hitid": "3N2YPY1GI6SKVWFO282GXAFW90AEV4",
    "workerid": "AIWEXPJAU66D9",
    "probid": "209A",
    "subid": "1898888"
  },
  "lines": [
    {
      "line": 0,
      "text": "declare const int mod = 1000000007",
      "code": "const int mod = 1000000007 ;",
      "indent": 0
    },
    {
      "line": 1,
      "text": "let d be 2d integer array with size 1234567 by 2",
      "code": "int d [ 1234567 ] [ 2 ] ;",
      "indent": 0
    },
    {
      "line": 2,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 3,
      "text": "declare integer n",
      "code": "int n ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "read n",
      "code": "cin >> n ;",
      "indent": 1
    },
    {
      "line": 5,
      "text": "set d [ 1 ] [ 0 ] to 0",
      "code": "d [ 1 ] [ 0 ] = 0 ;",
      "indent": 1
    },
    {
      "line": 6,
      "text": "set d [ 1 ] [ 1 ] to 1",
      "code": "d [ 1 ] [ 1 ] = 1 ;",
      "indent": 1
    },
    {
      "line": 7,
      "text": "for i = 2 to n inclusive",
      "code": "for ( int i = 2 ; i <= n ; ++ i )",
      "indent": 1
    },
    {
      "line": 8,
      "text": "set d [ i ] [ 0 ] to d [ i - 1 ] [ 0 ]",
      "code": "d [ i ] [ 0 ] = d [ i - 1 ] [ 0 ] ;",
      "indent": 2
    },
    {
      "line": 9,
      "text": "set d [ i ] [ 1 ] to d [ i - 1 ] [ 1 ]",
      "code": "d [ i ] [ 1 ] = d [ i - 1 ] [ 1 ] ;",
      "indent": 2
    },
    {
      "line": 10,
      "text": "increase d [ i ] [ i % 2 ] by d [ i - 1 ] [ 1 - ( i % 2 ) ] + 1",
      "code": "d [ i ] [ i % 2 ] += d [ i - 1 ] [ 1 - ( i % 2 ) ] + 1 ;",
      "indent": 2
    },
    {
      "line": 11,
      "text": "change d [ i ] [ i % 2 ] to d [ i ] [ i % 2 ] modulo mod",
      "code": "d [ i ] [ i % 2 ] %= mod ;",
      "indent": 2
    },
    {
      "line": 12,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 13,
      "text": "print ( d [ n ] [ 0 ] + d [ n ] [ 1 ] ) % mod",
      "code": "cout << ( d [ n ] [ 0 ] + d [ n ] [ 1 ] ) % mod << endl ;",
      "indent": 1
    },
    {
      "line": 14,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 15,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        7
      ],
      "mod_code": [
        "for ( i = 2 ; i <= n ; i ++ )"
      ],
      "err_line": 7,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        9
      ],
      "mod_code": [
        "char d [ i ] [ 1 ] = d [ i - 1 ] [ 1 ] ;"
      ],
      "err_line": 9,
      "err_msg": "array must be initialized with a brace-enclosed initializer"
    },
    {
      "mod_line": [
        10
      ],
      "mod_code": [
        "d [ i ] [ i % 2 ] += d [ i - 1 ] [ 1 - 2 ] [ 1 - 2 ] ;"
      ],
      "err_line": 10,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        9,
        7
      ],
      "mod_code": [
        "char d [ i ] [ 1 ] = d [ i - 1 ] [ 1 ] ;",
        "for ( i = 2 ; i <= n ; i ++ )"
      ],
      "err_line": 7,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        9,
        7,
        6
      ],
      "mod_code": [
        "char d [ i ] [ 1 ] = d [ i - 1 ] [ 1 ] ;",
        "for ( i = 2 ; i <= n ; i ++ )",
        "if ( d [ 1 ] [ 1 ] == 1 )"
      ],
      "err_line": 7,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        9,
        7,
        6,
        10
      ],
      "mod_code": [
        "char d [ i ] [ 1 ] = d [ i - 1 ] [ 1 ] ;",
        "for ( i = 2 ; i <= n ; i ++ )",
        "if ( d [ 1 ] [ 1 ] == 1 )",
        "d [ i ] [ i % 2 ] += d [ i - 1 ] [ 1 - 2 ] [ 1 - 2 ] ;"
      ],
      "err_line": 7,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        9,
        7,
        10
      ],
      "mod_code": [
        "char d [ i ] [ 1 ] = d [ i - 1 ] [ 1 ] ;",
        "for ( i = 2 ; i <= n ; i ++ )",
        "d [ i ] [ i % 2 ] += d [ i - 1 ] [ 1 - 2 ] [ 1 - 2 ] ;"
      ],
      "err_line": 7,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        9,
        6
      ],
      "mod_code": [
        "char d [ i ] [ 1 ] = d [ i - 1 ] [ 1 ] ;",
        "if ( d [ 1 ] [ 1 ] == 1 )"
      ],
      "err_line": 9,
      "err_msg": "array must be initialized with a brace-enclosed initializer"
    },
    {
      "mod_line": [
        9,
        6,
        10
      ],
      "mod_code": [
        "char d [ i ] [ 1 ] = d [ i - 1 ] [ 1 ] ;",
        "if ( d [ 1 ] [ 1 ] == 1 )",
        "d [ i ] [ i % 2 ] += d [ i - 1 ] [ 1 - 2 ] [ 1 - 2 ] ;"
      ],
      "err_line": 9,
      "err_msg": "array must be initialized with a brace-enclosed initializer"
    },
    {
      "mod_line": [
        9,
        10
      ],
      "mod_code": [
        "char d [ i ] [ 1 ] = d [ i - 1 ] [ 1 ] ;",
        "d [ i ] [ i % 2 ] += d [ i - 1 ] [ 1 - 2 ] [ 1 - 2 ] ;"
      ],
      "err_line": 9,
      "err_msg": "array must be initialized with a brace-enclosed initializer"
    },
    {
      "mod_line": [
        7,
        6
      ],
      "mod_code": [
        "for ( i = 2 ; i <= n ; i ++ )",
        "if ( d [ 1 ] [ 1 ] == 1 )"
      ],
      "err_line": 7,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        7,
        6,
        10
      ],
      "mod_code": [
        "for ( i = 2 ; i <= n ; i ++ )",
        "if ( d [ 1 ] [ 1 ] == 1 )",
        "d [ i ] [ i % 2 ] += d [ i - 1 ] [ 1 - 2 ] [ 1 - 2 ] ;"
      ],
      "err_line": 7,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        7,
        10
      ],
      "mod_code": [
        "for ( i = 2 ; i <= n ; i ++ )",
        "d [ i ] [ i % 2 ] += d [ i - 1 ] [ 1 - 2 ] [ 1 - 2 ] ;"
      ],
      "err_line": 7,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        10
      ],
      "mod_code": [
        "if ( d [ 1 ] [ 1 ] == 1 )",
        "d [ i ] [ i % 2 ] += d [ i - 1 ] [ 1 - 2 ] [ 1 - 2 ] ;"
      ],
      "err_line": 10,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    }
  ]
}