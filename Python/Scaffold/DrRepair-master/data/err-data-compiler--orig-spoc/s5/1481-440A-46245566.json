{
  "meta": {
    "index": 1481,
    "hitid": "3AJA9FLWSCS7F4VKYCN303A2DZUFIR",
    "workerid": "AIWEXPJAU66D9",
    "probid": "440A",
    "subid": "46245566"
  },
  "lines": [
    {
      "line": 0,
      "text": "declare int variables a and x",
      "code": "int a , x ;",
      "indent": 0
    },
    {
      "line": 1,
      "text": "declare boolean array ar with size 100005",
      "code": "bool ar [ 100005 ] ;",
      "indent": 0
    },
    {
      "line": 2,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 3,
      "text": "read a",
      "code": "cin >> a ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "for i from 0 to a - 1 exclusive",
      "code": "for ( int i = 0 ; i < a - 1 ; i ++ )",
      "indent": 1
    },
    {
      "line": 5,
      "text": "read x",
      "code": "cin >> x ;",
      "indent": 2
    },
    {
      "line": 6,
      "text": "change ar [ x ] to 1",
      "code": "ar [ x ] = 1 ;",
      "indent": 2
    },
    {
      "line": 7,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 8,
      "text": "for integer i = 1 to a inclusive",
      "code": "for ( int i = 1 ; i <= a ; i ++ )",
      "indent": 1
    },
    {
      "line": 9,
      "text": "if ar [ i ] is false",
      "code": "if ( ! ar [ i ] )",
      "indent": 2
    },
    {
      "line": 10,
      "text": "print i and ' \\ n '",
      "code": "cout << i << ' \\n ' ;",
      "indent": 3
    },
    {
      "line": 11,
      "text": "break",
      "code": "break ;",
      "indent": 3
    },
    {
      "line": 12,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 13,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 14,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 15,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        0
      ],
      "mod_code": [
        "int a and x ;"
      ],
      "err_line": 0,
      "err_msg": "expected initializer before ‘and’ token"
    },
    {
      "mod_line": [
        1
      ],
      "mod_code": [
        "bool ar [ 100005 100005 ] ;"
      ],
      "err_line": 1,
      "err_msg": "expected ‘]’ before numeric constant"
    },
    {
      "mod_line": [
        3
      ],
      "mod_code": [
        "cin >> n ;"
      ],
      "err_line": 3,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        4
      ],
      "mod_code": [
        "for ( i = 0 ; i < a - 1 ; i ++ )"
      ],
      "err_line": 4,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        11
      ],
      "mod_code": [
        "break break ;"
      ],
      "err_line": 11,
      "err_msg": "expected ‘;’ before ‘break’"
    },
    {
      "mod_line": [
        3,
        10
      ],
      "mod_code": [
        "cin >> n ;",
        "cout << i << ' ' ;"
      ],
      "err_line": 3,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        10,
        4
      ],
      "mod_code": [
        "cin >> n ;",
        "cout << i << ' ' ;",
        "for ( i = 0 ; i < a - 1 ; i ++ )"
      ],
      "err_line": 3,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        10,
        4,
        5
      ],
      "mod_code": [
        "cin >> n ;",
        "cout << i << ' ' ;",
        "for ( i = 0 ; i < a - 1 ; i ++ )",
        "cout << x << endl ;"
      ],
      "err_line": 3,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        10,
        4,
        0
      ],
      "mod_code": [
        "cin >> n ;",
        "cout << i << ' ' ;",
        "for ( i = 0 ; i < a - 1 ; i ++ )",
        "int a and x ;"
      ],
      "err_line": 0,
      "err_msg": "expected initializer before ‘and’ token"
    },
    {
      "mod_line": [
        3,
        10,
        4,
        11
      ],
      "mod_code": [
        "cin >> n ;",
        "cout << i << ' ' ;",
        "for ( i = 0 ; i < a - 1 ; i ++ )",
        "break break ;"
      ],
      "err_line": 3,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        10,
        5
      ],
      "mod_code": [
        "cin >> n ;",
        "cout << i << ' ' ;",
        "cout << x << endl ;"
      ],
      "err_line": 3,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        10,
        5,
        0
      ],
      "mod_code": [
        "cin >> n ;",
        "cout << i << ' ' ;",
        "cout << x << endl ;",
        "int a and x ;"
      ],
      "err_line": 0,
      "err_msg": "expected initializer before ‘and’ token"
    },
    {
      "mod_line": [
        3,
        10,
        5,
        11
      ],
      "mod_code": [
        "cin >> n ;",
        "cout << i << ' ' ;",
        "cout << x << endl ;",
        "break break ;"
      ],
      "err_line": 3,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        10,
        0
      ],
      "mod_code": [
        "cin >> n ;",
        "cout << i << ' ' ;",
        "int a and x ;"
      ],
      "err_line": 0,
      "err_msg": "expected initializer before ‘and’ token"
    },
    {
      "mod_line": [
        3,
        10,
        0,
        11
      ],
      "mod_code": [
        "cin >> n ;",
        "cout << i << ' ' ;",
        "int a and x ;",
        "break break ;"
      ],
      "err_line": 0,
      "err_msg": "expected initializer before ‘and’ token"
    },
    {
      "mod_line": [
        3,
        10,
        11
      ],
      "mod_code": [
        "cin >> n ;",
        "cout << i << ' ' ;",
        "break break ;"
      ],
      "err_line": 3,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        4
      ],
      "mod_code": [
        "cin >> n ;",
        "for ( i = 0 ; i < a - 1 ; i ++ )"
      ],
      "err_line": 3,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        4,
        5
      ],
      "mod_code": [
        "cin >> n ;",
        "for ( i = 0 ; i < a - 1 ; i ++ )",
        "cout << x << endl ;"
      ],
      "err_line": 3,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        4,
        5,
        0
      ],
      "mod_code": [
        "cin >> n ;",
        "for ( i = 0 ; i < a - 1 ; i ++ )",
        "cout << x << endl ;",
        "int a and x ;"
      ],
      "err_line": 0,
      "err_msg": "expected initializer before ‘and’ token"
    },
    {
      "mod_line": [
        3,
        4,
        5,
        11
      ],
      "mod_code": [
        "cin >> n ;",
        "for ( i = 0 ; i < a - 1 ; i ++ )",
        "cout << x << endl ;",
        "break break ;"
      ],
      "err_line": 3,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        4,
        0
      ],
      "mod_code": [
        "cin >> n ;",
        "for ( i = 0 ; i < a - 1 ; i ++ )",
        "int a and x ;"
      ],
      "err_line": 0,
      "err_msg": "expected initializer before ‘and’ token"
    },
    {
      "mod_line": [
        3,
        4,
        0,
        11
      ],
      "mod_code": [
        "cin >> n ;",
        "for ( i = 0 ; i < a - 1 ; i ++ )",
        "int a and x ;",
        "break break ;"
      ],
      "err_line": 0,
      "err_msg": "expected initializer before ‘and’ token"
    },
    {
      "mod_line": [
        3,
        4,
        11
      ],
      "mod_code": [
        "cin >> n ;",
        "for ( i = 0 ; i < a - 1 ; i ++ )",
        "break break ;"
      ],
      "err_line": 3,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        5
      ],
      "mod_code": [
        "cin >> n ;",
        "cout << x << endl ;"
      ],
      "err_line": 3,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        5,
        0
      ],
      "mod_code": [
        "cin >> n ;",
        "cout << x << endl ;",
        "int a and x ;"
      ],
      "err_line": 0,
      "err_msg": "expected initializer before ‘and’ token"
    },
    {
      "mod_line": [
        3,
        5,
        0,
        11
      ],
      "mod_code": [
        "cin >> n ;",
        "cout << x << endl ;",
        "int a and x ;",
        "break break ;"
      ],
      "err_line": 0,
      "err_msg": "expected initializer before ‘and’ token"
    },
    {
      "mod_line": [
        3,
        5,
        11
      ],
      "mod_code": [
        "cin >> n ;",
        "cout << x << endl ;",
        "break break ;"
      ],
      "err_line": 3,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        0
      ],
      "mod_code": [
        "cin >> n ;",
        "int a and x ;"
      ],
      "err_line": 0,
      "err_msg": "expected initializer before ‘and’ token"
    },
    {
      "mod_line": [
        3,
        0,
        11
      ],
      "mod_code": [
        "cin >> n ;",
        "int a and x ;",
        "break break ;"
      ],
      "err_line": 0,
      "err_msg": "expected initializer before ‘and’ token"
    },
    {
      "mod_line": [
        3,
        11
      ],
      "mod_code": [
        "cin >> n ;",
        "break break ;"
      ],
      "err_line": 3,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        10,
        4
      ],
      "mod_code": [
        "cout << i << ' ' ;",
        "for ( i = 0 ; i < a - 1 ; i ++ )"
      ],
      "err_line": 4,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        10,
        4,
        5
      ],
      "mod_code": [
        "cout << i << ' ' ;",
        "for ( i = 0 ; i < a - 1 ; i ++ )",
        "cout << x << endl ;"
      ],
      "err_line": 4,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        10,
        4,
        5,
        0
      ],
      "mod_code": [
        "cout << i << ' ' ;",
        "for ( i = 0 ; i < a - 1 ; i ++ )",
        "cout << x << endl ;",
        "int a and x ;"
      ],
      "err_line": 0,
      "err_msg": "expected initializer before ‘and’ token"
    },
    {
      "mod_line": [
        10,
        4,
        5,
        11
      ],
      "mod_code": [
        "cout << i << ' ' ;",
        "for ( i = 0 ; i < a - 1 ; i ++ )",
        "cout << x << endl ;",
        "break break ;"
      ],
      "err_line": 4,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        10,
        4,
        0
      ],
      "mod_code": [
        "cout << i << ' ' ;",
        "for ( i = 0 ; i < a - 1 ; i ++ )",
        "int a and x ;"
      ],
      "err_line": 0,
      "err_msg": "expected initializer before ‘and’ token"
    },
    {
      "mod_line": [
        10,
        4,
        0,
        11
      ],
      "mod_code": [
        "cout << i << ' ' ;",
        "for ( i = 0 ; i < a - 1 ; i ++ )",
        "int a and x ;",
        "break break ;"
      ],
      "err_line": 0,
      "err_msg": "expected initializer before ‘and’ token"
    },
    {
      "mod_line": [
        10,
        4,
        11
      ],
      "mod_code": [
        "cout << i << ' ' ;",
        "for ( i = 0 ; i < a - 1 ; i ++ )",
        "break break ;"
      ],
      "err_line": 4,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        10,
        5,
        0
      ],
      "mod_code": [
        "cout << i << ' ' ;",
        "cout << x << endl ;",
        "int a and x ;"
      ],
      "err_line": 0,
      "err_msg": "expected initializer before ‘and’ token"
    },
    {
      "mod_line": [
        10,
        5,
        0,
        11
      ],
      "mod_code": [
        "cout << i << ' ' ;",
        "cout << x << endl ;",
        "int a and x ;",
        "break break ;"
      ],
      "err_line": 0,
      "err_msg": "expected initializer before ‘and’ token"
    },
    {
      "mod_line": [
        10,
        5,
        11
      ],
      "mod_code": [
        "cout << i << ' ' ;",
        "cout << x << endl ;",
        "break break ;"
      ],
      "err_line": 11,
      "err_msg": "expected ‘;’ before ‘break’"
    },
    {
      "mod_line": [
        10,
        0
      ],
      "mod_code": [
        "cout << i << ' ' ;",
        "int a and x ;"
      ],
      "err_line": 0,
      "err_msg": "expected initializer before ‘and’ token"
    },
    {
      "mod_line": [
        10,
        0,
        11
      ],
      "mod_code": [
        "cout << i << ' ' ;",
        "int a and x ;",
        "break break ;"
      ],
      "err_line": 0,
      "err_msg": "expected initializer before ‘and’ token"
    },
    {
      "mod_line": [
        10,
        11
      ],
      "mod_code": [
        "cout << i << ' ' ;",
        "break break ;"
      ],
      "err_line": 11,
      "err_msg": "expected ‘;’ before ‘break’"
    },
    {
      "mod_line": [
        4,
        5
      ],
      "mod_code": [
        "for ( i = 0 ; i < a - 1 ; i ++ )",
        "cout << x << endl ;"
      ],
      "err_line": 4,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        5,
        0
      ],
      "mod_code": [
        "for ( i = 0 ; i < a - 1 ; i ++ )",
        "cout << x << endl ;",
        "int a and x ;"
      ],
      "err_line": 0,
      "err_msg": "expected initializer before ‘and’ token"
    },
    {
      "mod_line": [
        4,
        5,
        0,
        11
      ],
      "mod_code": [
        "for ( i = 0 ; i < a - 1 ; i ++ )",
        "cout << x << endl ;",
        "int a and x ;",
        "break break ;"
      ],
      "err_line": 0,
      "err_msg": "expected initializer before ‘and’ token"
    },
    {
      "mod_line": [
        4,
        5,
        11
      ],
      "mod_code": [
        "for ( i = 0 ; i < a - 1 ; i ++ )",
        "cout << x << endl ;",
        "break break ;"
      ],
      "err_line": 4,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        0
      ],
      "mod_code": [
        "for ( i = 0 ; i < a - 1 ; i ++ )",
        "int a and x ;"
      ],
      "err_line": 0,
      "err_msg": "expected initializer before ‘and’ token"
    },
    {
      "mod_line": [
        4,
        0,
        11
      ],
      "mod_code": [
        "for ( i = 0 ; i < a - 1 ; i ++ )",
        "int a and x ;",
        "break break ;"
      ],
      "err_line": 0,
      "err_msg": "expected initializer before ‘and’ token"
    },
    {
      "mod_line": [
        4,
        11
      ],
      "mod_code": [
        "for ( i = 0 ; i < a - 1 ; i ++ )",
        "break break ;"
      ],
      "err_line": 4,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        0
      ],
      "mod_code": [
        "cout << x << endl ;",
        "int a and x ;"
      ],
      "err_line": 0,
      "err_msg": "expected initializer before ‘and’ token"
    },
    {
      "mod_line": [
        5,
        0,
        11
      ],
      "mod_code": [
        "cout << x << endl ;",
        "int a and x ;",
        "break break ;"
      ],
      "err_line": 0,
      "err_msg": "expected initializer before ‘and’ token"
    },
    {
      "mod_line": [
        5,
        11
      ],
      "mod_code": [
        "cout << x << endl ;",
        "break break ;"
      ],
      "err_line": 11,
      "err_msg": "expected ‘;’ before ‘break’"
    },
    {
      "mod_line": [
        0,
        11
      ],
      "mod_code": [
        "int a and x ;",
        "break break ;"
      ],
      "err_line": 0,
      "err_msg": "expected initializer before ‘and’ token"
    }
  ]
}