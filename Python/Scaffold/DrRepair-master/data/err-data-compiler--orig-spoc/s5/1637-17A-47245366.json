{
  "meta": {
    "index": 1637,
    "hitid": "3G57RS03HHZB2MOT3XP2RBC8Y79255",
    "workerid": "AIWEXPJAU66D9",
    "probid": "17A",
    "subid": "47245366"
  },
  "lines": [
    {
      "line": 0,
      "text": "function pri with integer argument num",
      "code": "bool pri ( int num )",
      "indent": 0
    },
    {
      "line": 1,
      "text": "for i = 2 to i * i < = num",
      "code": "for ( int i = 2 ; i * i <= num ; i ++ )",
      "indent": 1
    },
    {
      "line": 2,
      "text": "if num % i is equal to 0 return false",
      "code": "if ( num % i == 0 ) return false ;",
      "indent": 2
    },
    {
      "line": 3,
      "text": "return true",
      "code": "return true ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    },
    {
      "line": 5,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 6,
      "text": "n and k = integers",
      "code": "int n , k ;",
      "indent": 1
    },
    {
      "line": 7,
      "text": "read n and k",
      "code": "cin >> n >> k ;",
      "indent": 1
    },
    {
      "line": 8,
      "text": "a is an array of integers of length 168",
      "code": "int a [ 168 ] ;",
      "indent": 1
    },
    {
      "line": 9,
      "text": "set a [ 0 ] to 2",
      "code": "a [ 0 ] = 2 ;",
      "indent": 1
    },
    {
      "line": 10,
      "text": "create integer temp with value 1",
      "code": "int temp = 1 ;",
      "indent": 1
    },
    {
      "line": 11,
      "text": "for i = 3 to 1000 exclusive by increments of 2",
      "code": "for ( int i = 3 ; i < 1000 ; i += 2 )",
      "indent": 1
    },
    {
      "line": 12,
      "text": "if pri ( i ) is true",
      "code": "if ( pri ( i ) )",
      "indent": 2
    },
    {
      "line": 13,
      "text": "a [ temp ] = i",
      "code": "a [ temp ] = i ;",
      "indent": 3
    },
    {
      "line": 14,
      "text": "increase temp by one",
      "code": "temp ++ ;",
      "indent": 3
    },
    {
      "line": 15,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 16,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 17,
      "text": "create integer num with value 0",
      "code": "int num = 0 ;",
      "indent": 1
    },
    {
      "line": 18,
      "text": "for integer i = 0 to a [ i ] < = n",
      "code": "for ( int i = 0 ; a [ i ] <= n ; i ++ )",
      "indent": 1
    },
    {
      "line": 19,
      "text": "for j = 0 to i exclusive",
      "code": "for ( int j = 0 ; j < i ; j ++ )",
      "indent": 2
    },
    {
      "line": 20,
      "text": "if a [ j ] + a [ j + 1 ] + 1 is equal to a [ i ] increment num",
      "code": "if ( a [ j ] + a [ j + 1 ] + 1 == a [ i ] ) num ++ ;",
      "indent": 3
    },
    {
      "line": 21,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 22,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 23,
      "text": "if num is greater than or equal to k",
      "code": "if ( num >= k )",
      "indent": 1
    },
    {
      "line": 24,
      "text": "print \" YES \" and a new line",
      "code": "cout << \" YES \" << endl ;",
      "indent": 2
    },
    {
      "line": 25,
      "text": "else",
      "code": "else",
      "indent": 1
    },
    {
      "line": 26,
      "text": "print \" NO \" and a new line",
      "code": "cout << \" NO \" << endl ;",
      "indent": 2
    },
    {
      "line": 27,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 28,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        0
      ],
      "mod_code": [
        "void pri ( int num )"
      ],
      "err_line": 2,
      "err_msg": "return-statement with a value, in function returning 'void' [-fpermissive]"
    },
    {
      "mod_line": [
        1
      ],
      "mod_code": [
        "for ( i = 2 ; i * i <= num ; i ++ )"
      ],
      "err_line": 1,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        11
      ],
      "mod_code": [
        "for ( i = 3 ; i < 1000 ; i += 2 )"
      ],
      "err_line": 11,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        19
      ],
      "mod_code": [
        "for ( j = 0 ; j < i ; j ++ )"
      ],
      "err_line": 19,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        0,
        8
      ],
      "mod_code": [
        "void pri ( int num )",
        "int a [ 100 ] ;"
      ],
      "err_line": 2,
      "err_msg": "return-statement with a value, in function returning 'void' [-fpermissive]"
    },
    {
      "mod_line": [
        0,
        8,
        19
      ],
      "mod_code": [
        "void pri ( int num )",
        "int a [ 100 ] ;",
        "for ( j = 0 ; j < i ; j ++ )"
      ],
      "err_line": 2,
      "err_msg": "return-statement with a value, in function returning 'void' [-fpermissive]"
    },
    {
      "mod_line": [
        0,
        8,
        19,
        11
      ],
      "mod_code": [
        "void pri ( int num )",
        "int a [ 100 ] ;",
        "for ( j = 0 ; j < i ; j ++ )",
        "for ( i = 3 ; i < 1000 ; i += 2 )"
      ],
      "err_line": 2,
      "err_msg": "return-statement with a value, in function returning 'void' [-fpermissive]"
    },
    {
      "mod_line": [
        0,
        8,
        19,
        1
      ],
      "mod_code": [
        "void pri ( int num )",
        "int a [ 100 ] ;",
        "for ( j = 0 ; j < i ; j ++ )",
        "for ( i = 2 ; i * i <= num ; i ++ )"
      ],
      "err_line": 1,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        0,
        8,
        19,
        24
      ],
      "mod_code": [
        "void pri ( int num )",
        "int a [ 100 ] ;",
        "for ( j = 0 ; j < i ; j ++ )",
        "cout << \" YES\\n \" << endl ;"
      ],
      "err_line": 2,
      "err_msg": "return-statement with a value, in function returning 'void' [-fpermissive]"
    },
    {
      "mod_line": [
        0,
        8,
        11
      ],
      "mod_code": [
        "void pri ( int num )",
        "int a [ 100 ] ;",
        "for ( i = 3 ; i < 1000 ; i += 2 )"
      ],
      "err_line": 2,
      "err_msg": "return-statement with a value, in function returning 'void' [-fpermissive]"
    },
    {
      "mod_line": [
        0,
        8,
        11,
        1
      ],
      "mod_code": [
        "void pri ( int num )",
        "int a [ 100 ] ;",
        "for ( i = 3 ; i < 1000 ; i += 2 )",
        "for ( i = 2 ; i * i <= num ; i ++ )"
      ],
      "err_line": 1,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        0,
        8,
        11,
        24
      ],
      "mod_code": [
        "void pri ( int num )",
        "int a [ 100 ] ;",
        "for ( i = 3 ; i < 1000 ; i += 2 )",
        "cout << \" YES\\n \" << endl ;"
      ],
      "err_line": 2,
      "err_msg": "return-statement with a value, in function returning 'void' [-fpermissive]"
    },
    {
      "mod_line": [
        0,
        8,
        1
      ],
      "mod_code": [
        "void pri ( int num )",
        "int a [ 100 ] ;",
        "for ( i = 2 ; i * i <= num ; i ++ )"
      ],
      "err_line": 1,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        0,
        8,
        1,
        24
      ],
      "mod_code": [
        "void pri ( int num )",
        "int a [ 100 ] ;",
        "for ( i = 2 ; i * i <= num ; i ++ )",
        "cout << \" YES\\n \" << endl ;"
      ],
      "err_line": 1,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        0,
        8,
        24
      ],
      "mod_code": [
        "void pri ( int num )",
        "int a [ 100 ] ;",
        "cout << \" YES\\n \" << endl ;"
      ],
      "err_line": 2,
      "err_msg": "return-statement with a value, in function returning 'void' [-fpermissive]"
    },
    {
      "mod_line": [
        0,
        19
      ],
      "mod_code": [
        "void pri ( int num )",
        "for ( j = 0 ; j < i ; j ++ )"
      ],
      "err_line": 2,
      "err_msg": "return-statement with a value, in function returning 'void' [-fpermissive]"
    },
    {
      "mod_line": [
        0,
        19,
        11
      ],
      "mod_code": [
        "void pri ( int num )",
        "for ( j = 0 ; j < i ; j ++ )",
        "for ( i = 3 ; i < 1000 ; i += 2 )"
      ],
      "err_line": 2,
      "err_msg": "return-statement with a value, in function returning 'void' [-fpermissive]"
    },
    {
      "mod_line": [
        0,
        19,
        11,
        1
      ],
      "mod_code": [
        "void pri ( int num )",
        "for ( j = 0 ; j < i ; j ++ )",
        "for ( i = 3 ; i < 1000 ; i += 2 )",
        "for ( i = 2 ; i * i <= num ; i ++ )"
      ],
      "err_line": 1,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        0,
        19,
        11,
        24
      ],
      "mod_code": [
        "void pri ( int num )",
        "for ( j = 0 ; j < i ; j ++ )",
        "for ( i = 3 ; i < 1000 ; i += 2 )",
        "cout << \" YES\\n \" << endl ;"
      ],
      "err_line": 2,
      "err_msg": "return-statement with a value, in function returning 'void' [-fpermissive]"
    },
    {
      "mod_line": [
        0,
        19,
        1
      ],
      "mod_code": [
        "void pri ( int num )",
        "for ( j = 0 ; j < i ; j ++ )",
        "for ( i = 2 ; i * i <= num ; i ++ )"
      ],
      "err_line": 1,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        0,
        19,
        1,
        24
      ],
      "mod_code": [
        "void pri ( int num )",
        "for ( j = 0 ; j < i ; j ++ )",
        "for ( i = 2 ; i * i <= num ; i ++ )",
        "cout << \" YES\\n \" << endl ;"
      ],
      "err_line": 1,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        0,
        19,
        24
      ],
      "mod_code": [
        "void pri ( int num )",
        "for ( j = 0 ; j < i ; j ++ )",
        "cout << \" YES\\n \" << endl ;"
      ],
      "err_line": 2,
      "err_msg": "return-statement with a value, in function returning 'void' [-fpermissive]"
    },
    {
      "mod_line": [
        0,
        11
      ],
      "mod_code": [
        "void pri ( int num )",
        "for ( i = 3 ; i < 1000 ; i += 2 )"
      ],
      "err_line": 2,
      "err_msg": "return-statement with a value, in function returning 'void' [-fpermissive]"
    },
    {
      "mod_line": [
        0,
        11,
        1
      ],
      "mod_code": [
        "void pri ( int num )",
        "for ( i = 3 ; i < 1000 ; i += 2 )",
        "for ( i = 2 ; i * i <= num ; i ++ )"
      ],
      "err_line": 1,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        0,
        11,
        1,
        24
      ],
      "mod_code": [
        "void pri ( int num )",
        "for ( i = 3 ; i < 1000 ; i += 2 )",
        "for ( i = 2 ; i * i <= num ; i ++ )",
        "cout << \" YES\\n \" << endl ;"
      ],
      "err_line": 1,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        0,
        11,
        24
      ],
      "mod_code": [
        "void pri ( int num )",
        "for ( i = 3 ; i < 1000 ; i += 2 )",
        "cout << \" YES\\n \" << endl ;"
      ],
      "err_line": 2,
      "err_msg": "return-statement with a value, in function returning 'void' [-fpermissive]"
    },
    {
      "mod_line": [
        0,
        1
      ],
      "mod_code": [
        "void pri ( int num )",
        "for ( i = 2 ; i * i <= num ; i ++ )"
      ],
      "err_line": 1,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        0,
        1,
        24
      ],
      "mod_code": [
        "void pri ( int num )",
        "for ( i = 2 ; i * i <= num ; i ++ )",
        "cout << \" YES\\n \" << endl ;"
      ],
      "err_line": 1,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        0,
        24
      ],
      "mod_code": [
        "void pri ( int num )",
        "cout << \" YES\\n \" << endl ;"
      ],
      "err_line": 2,
      "err_msg": "return-statement with a value, in function returning 'void' [-fpermissive]"
    },
    {
      "mod_line": [
        8,
        19
      ],
      "mod_code": [
        "int a [ 100 ] ;",
        "for ( j = 0 ; j < i ; j ++ )"
      ],
      "err_line": 19,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        8,
        19,
        11
      ],
      "mod_code": [
        "int a [ 100 ] ;",
        "for ( j = 0 ; j < i ; j ++ )",
        "for ( i = 3 ; i < 1000 ; i += 2 )"
      ],
      "err_line": 11,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        8,
        19,
        11,
        1
      ],
      "mod_code": [
        "int a [ 100 ] ;",
        "for ( j = 0 ; j < i ; j ++ )",
        "for ( i = 3 ; i < 1000 ; i += 2 )",
        "for ( i = 2 ; i * i <= num ; i ++ )"
      ],
      "err_line": 1,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        8,
        19,
        11,
        24
      ],
      "mod_code": [
        "int a [ 100 ] ;",
        "for ( j = 0 ; j < i ; j ++ )",
        "for ( i = 3 ; i < 1000 ; i += 2 )",
        "cout << \" YES\\n \" << endl ;"
      ],
      "err_line": 11,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        8,
        19,
        1
      ],
      "mod_code": [
        "int a [ 100 ] ;",
        "for ( j = 0 ; j < i ; j ++ )",
        "for ( i = 2 ; i * i <= num ; i ++ )"
      ],
      "err_line": 1,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        8,
        19,
        1,
        24
      ],
      "mod_code": [
        "int a [ 100 ] ;",
        "for ( j = 0 ; j < i ; j ++ )",
        "for ( i = 2 ; i * i <= num ; i ++ )",
        "cout << \" YES\\n \" << endl ;"
      ],
      "err_line": 1,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        8,
        19,
        24
      ],
      "mod_code": [
        "int a [ 100 ] ;",
        "for ( j = 0 ; j < i ; j ++ )",
        "cout << \" YES\\n \" << endl ;"
      ],
      "err_line": 19,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        8,
        11
      ],
      "mod_code": [
        "int a [ 100 ] ;",
        "for ( i = 3 ; i < 1000 ; i += 2 )"
      ],
      "err_line": 11,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        8,
        11,
        1
      ],
      "mod_code": [
        "int a [ 100 ] ;",
        "for ( i = 3 ; i < 1000 ; i += 2 )",
        "for ( i = 2 ; i * i <= num ; i ++ )"
      ],
      "err_line": 1,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        8,
        11,
        1,
        24
      ],
      "mod_code": [
        "int a [ 100 ] ;",
        "for ( i = 3 ; i < 1000 ; i += 2 )",
        "for ( i = 2 ; i * i <= num ; i ++ )",
        "cout << \" YES\\n \" << endl ;"
      ],
      "err_line": 1,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        8,
        11,
        24
      ],
      "mod_code": [
        "int a [ 100 ] ;",
        "for ( i = 3 ; i < 1000 ; i += 2 )",
        "cout << \" YES\\n \" << endl ;"
      ],
      "err_line": 11,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        8,
        1
      ],
      "mod_code": [
        "int a [ 100 ] ;",
        "for ( i = 2 ; i * i <= num ; i ++ )"
      ],
      "err_line": 1,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        8,
        1,
        24
      ],
      "mod_code": [
        "int a [ 100 ] ;",
        "for ( i = 2 ; i * i <= num ; i ++ )",
        "cout << \" YES\\n \" << endl ;"
      ],
      "err_line": 1,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        19,
        11
      ],
      "mod_code": [
        "for ( j = 0 ; j < i ; j ++ )",
        "for ( i = 3 ; i < 1000 ; i += 2 )"
      ],
      "err_line": 11,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        19,
        11,
        1
      ],
      "mod_code": [
        "for ( j = 0 ; j < i ; j ++ )",
        "for ( i = 3 ; i < 1000 ; i += 2 )",
        "for ( i = 2 ; i * i <= num ; i ++ )"
      ],
      "err_line": 1,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        19,
        11,
        1,
        24
      ],
      "mod_code": [
        "for ( j = 0 ; j < i ; j ++ )",
        "for ( i = 3 ; i < 1000 ; i += 2 )",
        "for ( i = 2 ; i * i <= num ; i ++ )",
        "cout << \" YES\\n \" << endl ;"
      ],
      "err_line": 1,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        19,
        11,
        24
      ],
      "mod_code": [
        "for ( j = 0 ; j < i ; j ++ )",
        "for ( i = 3 ; i < 1000 ; i += 2 )",
        "cout << \" YES\\n \" << endl ;"
      ],
      "err_line": 11,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        19,
        1
      ],
      "mod_code": [
        "for ( j = 0 ; j < i ; j ++ )",
        "for ( i = 2 ; i * i <= num ; i ++ )"
      ],
      "err_line": 1,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        19,
        1,
        24
      ],
      "mod_code": [
        "for ( j = 0 ; j < i ; j ++ )",
        "for ( i = 2 ; i * i <= num ; i ++ )",
        "cout << \" YES\\n \" << endl ;"
      ],
      "err_line": 1,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        19,
        24
      ],
      "mod_code": [
        "for ( j = 0 ; j < i ; j ++ )",
        "cout << \" YES\\n \" << endl ;"
      ],
      "err_line": 19,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        11,
        1
      ],
      "mod_code": [
        "for ( i = 3 ; i < 1000 ; i += 2 )",
        "for ( i = 2 ; i * i <= num ; i ++ )"
      ],
      "err_line": 1,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        11,
        1,
        24
      ],
      "mod_code": [
        "for ( i = 3 ; i < 1000 ; i += 2 )",
        "for ( i = 2 ; i * i <= num ; i ++ )",
        "cout << \" YES\\n \" << endl ;"
      ],
      "err_line": 1,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        11,
        24
      ],
      "mod_code": [
        "for ( i = 3 ; i < 1000 ; i += 2 )",
        "cout << \" YES\\n \" << endl ;"
      ],
      "err_line": 11,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        24
      ],
      "mod_code": [
        "for ( i = 2 ; i * i <= num ; i ++ )",
        "cout << \" YES\\n \" << endl ;"
      ],
      "err_line": 1,
      "err_msg": "‘i’ was not declared in this scope"
    }
  ]
}