{
  "meta": {
    "index": 1593,
    "hitid": "3HFWPF5AK9D1T6INJTGF3WRSI5GS37",
    "workerid": "A1APYLD4DUK33J",
    "probid": "17A",
    "subid": "40217535"
  },
  "lines": [
    {
      "line": 0,
      "text": "create integer ans with ans = 0",
      "code": "int ans = 0 ;",
      "indent": 0
    },
    {
      "line": 1,
      "text": "create boolean array isPrime with size 1005",
      "code": "bool isPrime [ 1005 ] ;",
      "indent": 0
    },
    {
      "line": 2,
      "text": "create integer array p with size 500 , create integer ji with ji = 0",
      "code": "int p [ 500 ] , ji = 0 ;",
      "indent": 0
    },
    {
      "line": 3,
      "text": "declare inline prime with no arguments , returning void",
      "code": "inline void prime ( )",
      "indent": 0
    },
    {
      "line": 4,
      "text": "set isPrime [ 0 ] to isPrime [ 1 ] to true",
      "code": "isPrime [ 0 ] = isPrime [ 1 ] = true ;",
      "indent": 1
    },
    {
      "line": 5,
      "text": "for i = 2 to 1005 inclusive",
      "code": "for ( int i = 2 ; i <= 1005 ; i ++ )",
      "indent": 1
    },
    {
      "line": 6,
      "text": "if not isPrime [ i ]",
      "code": "if ( ! isPrime [ i ] )",
      "indent": 2
    },
    {
      "line": 7,
      "text": "set p [ ji ] to i",
      "code": "p [ ji ] = i ;",
      "indent": 3
    },
    {
      "line": 8,
      "text": "increment ji",
      "code": "ji ++ ;",
      "indent": 3
    },
    {
      "line": 9,
      "text": "for j = i + i to 1005 exclusive , incrementing j by i , set isPrime [ j ] to true",
      "code": "for ( int j = i + i ; j < 1005 ; j += i ) isPrime [ j ] = true ;",
      "indent": 3
    },
    {
      "line": 10,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 11,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 12,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    },
    {
      "line": 13,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 14,
      "text": "run prime",
      "code": "prime ( ) ;",
      "indent": 1
    },
    {
      "line": 15,
      "text": "create integers n , m",
      "code": "int n , m ;",
      "indent": 1
    },
    {
      "line": 16,
      "text": "read n read m",
      "code": "cin >> n >> m ;",
      "indent": 1
    },
    {
      "line": 17,
      "text": "for j = 2 to n exclusive",
      "code": "for ( int j = 2 ; j < n ; j ++ )",
      "indent": 1
    },
    {
      "line": 18,
      "text": "if isPrime [ j + 1 ] is true , break current loop iteration",
      "code": "if ( isPrime [ j + 1 ] ) continue ;",
      "indent": 2
    },
    {
      "line": 19,
      "text": "for i = 0 to ji - 1 exclusive",
      "code": "for ( int i = 0 ; i < ji - 1 ; i ++ )",
      "indent": 2
    },
    {
      "line": 20,
      "text": "if p [ i ] + p [ i + 1 ] is j",
      "code": "if ( p [ i ] + p [ i + 1 ] == j )",
      "indent": 3
    },
    {
      "line": 21,
      "text": "increment ans",
      "code": "ans ++ ;",
      "indent": 4
    },
    {
      "line": 22,
      "text": "break loop",
      "code": "break ;",
      "indent": 4
    },
    {
      "line": 23,
      "text": "else",
      "code": "else",
      "indent": 3
    },
    {
      "line": 24,
      "text": "if p [ i ] + p [ i + 1 ] is greater than j , break loop",
      "code": "if ( p [ i ] + p [ i + 1 ] > j ) break ;",
      "indent": 4
    },
    {
      "line": 25,
      "text": "DUMMY",
      "code": "}",
      "indent": 3
    },
    {
      "line": 26,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 27,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 28,
      "text": "if ans is greater than or equal to m",
      "code": "if ( ans >= m )",
      "indent": 1
    },
    {
      "line": 29,
      "text": "print \" YES \\ n \"",
      "code": "cout << \" YES\\n \" ;",
      "indent": 2
    },
    {
      "line": 30,
      "text": "else",
      "code": "else",
      "indent": 1
    },
    {
      "line": 31,
      "text": "print \" NO \\ n \"",
      "code": "cout << \" NO\\n \" ;",
      "indent": 2
    },
    {
      "line": 32,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 33,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        1
      ],
      "mod_code": [
        "bool * isPrime [ 1005 ] ;"
      ],
      "err_line": 4,
      "err_msg": "cannot convert ‘bool’ to ‘bool*’ in assignment"
    },
    {
      "mod_line": [
        2
      ],
      "mod_code": [
        "int p [ 500 ] , ji [ 500 ] ;"
      ],
      "err_line": 7,
      "err_msg": "invalid types ‘int [500][int [500]]’ for array subscript"
    },
    {
      "mod_line": [
        3
      ],
      "mod_code": [
        "inline void prime ( ) { }"
      ],
      "err_line": 4,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        5
      ],
      "mod_code": [
        "for ( i = 2 ; i <= 1005 ; i ++ )"
      ],
      "err_line": 5,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        9
      ],
      "mod_code": [
        "for ( j = i + i ; j < 1005 ; j += i ) { isPrime [ j ] = true ; }"
      ],
      "err_line": 9,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        14
      ],
      "mod_code": [
        "prime ( )"
      ],
      "err_line": 15,
      "err_msg": "expected ‘;’ before ‘int’"
    },
    {
      "mod_line": [
        16
      ],
      "mod_code": [
        "cin >> n read m ;"
      ],
      "err_line": 16,
      "err_msg": "expected ‘;’ before ‘read’"
    },
    {
      "mod_line": [
        17
      ],
      "mod_code": [
        "for ( j = 2 ; j < n ; j ++ )"
      ],
      "err_line": 17,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        19
      ],
      "mod_code": [
        "for ( i = 0 ; i < ji - 1 ; i ++ )"
      ],
      "err_line": 19,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        22
      ],
      "mod_code": [
        "break break ;"
      ],
      "err_line": 22,
      "err_msg": "expected ‘;’ before ‘break’"
    },
    {
      "mod_line": [
        7,
        19
      ],
      "mod_code": [
        "p [ ' ji ' ] = i ;",
        "for ( i = 0 ; i < ji - 1 ; i ++ )"
      ],
      "err_line": 19,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        7,
        19,
        6
      ],
      "mod_code": [
        "p [ ' ji ' ] = i ;",
        "for ( i = 0 ; i < ji - 1 ; i ++ )",
        "if ( isPrime [ i ] != isPrime [ i ] )"
      ],
      "err_line": 19,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        7,
        19,
        6,
        9
      ],
      "mod_code": [
        "p [ ' ji ' ] = i ;",
        "for ( i = 0 ; i < ji - 1 ; i ++ )",
        "if ( isPrime [ i ] != isPrime [ i ] )",
        "for ( j = i + i ; j < 1005 ; j += i ) { isPrime [ j ] = true ; }"
      ],
      "err_line": 9,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        7,
        19,
        6,
        1
      ],
      "mod_code": [
        "p [ ' ji ' ] = i ;",
        "for ( i = 0 ; i < ji - 1 ; i ++ )",
        "if ( isPrime [ i ] != isPrime [ i ] )",
        "bool * isPrime [ 1005 ] ;"
      ],
      "err_line": 4,
      "err_msg": "cannot convert ‘bool’ to ‘bool*’ in assignment"
    },
    {
      "mod_line": [
        7,
        19,
        6,
        17
      ],
      "mod_code": [
        "p [ ' ji ' ] = i ;",
        "for ( i = 0 ; i < ji - 1 ; i ++ )",
        "if ( isPrime [ i ] != isPrime [ i ] )",
        "for ( j = 2 ; j < n ; j ++ )"
      ],
      "err_line": 17,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        7,
        19,
        9
      ],
      "mod_code": [
        "p [ ' ji ' ] = i ;",
        "for ( i = 0 ; i < ji - 1 ; i ++ )",
        "for ( j = i + i ; j < 1005 ; j += i ) { isPrime [ j ] = true ; }"
      ],
      "err_line": 9,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        7,
        19,
        9,
        1
      ],
      "mod_code": [
        "p [ ' ji ' ] = i ;",
        "for ( i = 0 ; i < ji - 1 ; i ++ )",
        "for ( j = i + i ; j < 1005 ; j += i ) { isPrime [ j ] = true ; }",
        "bool * isPrime [ 1005 ] ;"
      ],
      "err_line": 4,
      "err_msg": "cannot convert ‘bool’ to ‘bool*’ in assignment"
    },
    {
      "mod_line": [
        7,
        19,
        9,
        17
      ],
      "mod_code": [
        "p [ ' ji ' ] = i ;",
        "for ( i = 0 ; i < ji - 1 ; i ++ )",
        "for ( j = i + i ; j < 1005 ; j += i ) { isPrime [ j ] = true ; }",
        "for ( j = 2 ; j < n ; j ++ )"
      ],
      "err_line": 9,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        7,
        19,
        1
      ],
      "mod_code": [
        "p [ ' ji ' ] = i ;",
        "for ( i = 0 ; i < ji - 1 ; i ++ )",
        "bool * isPrime [ 1005 ] ;"
      ],
      "err_line": 4,
      "err_msg": "cannot convert ‘bool’ to ‘bool*’ in assignment"
    },
    {
      "mod_line": [
        7,
        19,
        1,
        17
      ],
      "mod_code": [
        "p [ ' ji ' ] = i ;",
        "for ( i = 0 ; i < ji - 1 ; i ++ )",
        "bool * isPrime [ 1005 ] ;",
        "for ( j = 2 ; j < n ; j ++ )"
      ],
      "err_line": 4,
      "err_msg": "cannot convert ‘bool’ to ‘bool*’ in assignment"
    },
    {
      "mod_line": [
        7,
        19,
        17
      ],
      "mod_code": [
        "p [ ' ji ' ] = i ;",
        "for ( i = 0 ; i < ji - 1 ; i ++ )",
        "for ( j = 2 ; j < n ; j ++ )"
      ],
      "err_line": 17,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        7,
        6,
        9
      ],
      "mod_code": [
        "p [ ' ji ' ] = i ;",
        "if ( isPrime [ i ] != isPrime [ i ] )",
        "for ( j = i + i ; j < 1005 ; j += i ) { isPrime [ j ] = true ; }"
      ],
      "err_line": 9,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        7,
        6,
        9,
        1
      ],
      "mod_code": [
        "p [ ' ji ' ] = i ;",
        "if ( isPrime [ i ] != isPrime [ i ] )",
        "for ( j = i + i ; j < 1005 ; j += i ) { isPrime [ j ] = true ; }",
        "bool * isPrime [ 1005 ] ;"
      ],
      "err_line": 4,
      "err_msg": "cannot convert ‘bool’ to ‘bool*’ in assignment"
    },
    {
      "mod_line": [
        7,
        6,
        9,
        17
      ],
      "mod_code": [
        "p [ ' ji ' ] = i ;",
        "if ( isPrime [ i ] != isPrime [ i ] )",
        "for ( j = i + i ; j < 1005 ; j += i ) { isPrime [ j ] = true ; }",
        "for ( j = 2 ; j < n ; j ++ )"
      ],
      "err_line": 9,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        7,
        6,
        1
      ],
      "mod_code": [
        "p [ ' ji ' ] = i ;",
        "if ( isPrime [ i ] != isPrime [ i ] )",
        "bool * isPrime [ 1005 ] ;"
      ],
      "err_line": 4,
      "err_msg": "cannot convert ‘bool’ to ‘bool*’ in assignment"
    },
    {
      "mod_line": [
        7,
        6,
        1,
        17
      ],
      "mod_code": [
        "p [ ' ji ' ] = i ;",
        "if ( isPrime [ i ] != isPrime [ i ] )",
        "bool * isPrime [ 1005 ] ;",
        "for ( j = 2 ; j < n ; j ++ )"
      ],
      "err_line": 4,
      "err_msg": "cannot convert ‘bool’ to ‘bool*’ in assignment"
    },
    {
      "mod_line": [
        7,
        6,
        17
      ],
      "mod_code": [
        "p [ ' ji ' ] = i ;",
        "if ( isPrime [ i ] != isPrime [ i ] )",
        "for ( j = 2 ; j < n ; j ++ )"
      ],
      "err_line": 17,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        7,
        9
      ],
      "mod_code": [
        "p [ ' ji ' ] = i ;",
        "for ( j = i + i ; j < 1005 ; j += i ) { isPrime [ j ] = true ; }"
      ],
      "err_line": 9,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        7,
        9,
        1
      ],
      "mod_code": [
        "p [ ' ji ' ] = i ;",
        "for ( j = i + i ; j < 1005 ; j += i ) { isPrime [ j ] = true ; }",
        "bool * isPrime [ 1005 ] ;"
      ],
      "err_line": 4,
      "err_msg": "cannot convert ‘bool’ to ‘bool*’ in assignment"
    },
    {
      "mod_line": [
        7,
        9,
        1,
        17
      ],
      "mod_code": [
        "p [ ' ji ' ] = i ;",
        "for ( j = i + i ; j < 1005 ; j += i ) { isPrime [ j ] = true ; }",
        "bool * isPrime [ 1005 ] ;",
        "for ( j = 2 ; j < n ; j ++ )"
      ],
      "err_line": 4,
      "err_msg": "cannot convert ‘bool’ to ‘bool*’ in assignment"
    },
    {
      "mod_line": [
        7,
        9,
        17
      ],
      "mod_code": [
        "p [ ' ji ' ] = i ;",
        "for ( j = i + i ; j < 1005 ; j += i ) { isPrime [ j ] = true ; }",
        "for ( j = 2 ; j < n ; j ++ )"
      ],
      "err_line": 9,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        7,
        1
      ],
      "mod_code": [
        "p [ ' ji ' ] = i ;",
        "bool * isPrime [ 1005 ] ;"
      ],
      "err_line": 4,
      "err_msg": "cannot convert ‘bool’ to ‘bool*’ in assignment"
    },
    {
      "mod_line": [
        7,
        1,
        17
      ],
      "mod_code": [
        "p [ ' ji ' ] = i ;",
        "bool * isPrime [ 1005 ] ;",
        "for ( j = 2 ; j < n ; j ++ )"
      ],
      "err_line": 4,
      "err_msg": "cannot convert ‘bool’ to ‘bool*’ in assignment"
    },
    {
      "mod_line": [
        7,
        17
      ],
      "mod_code": [
        "p [ ' ji ' ] = i ;",
        "for ( j = 2 ; j < n ; j ++ )"
      ],
      "err_line": 17,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        19,
        6
      ],
      "mod_code": [
        "for ( i = 0 ; i < ji - 1 ; i ++ )",
        "if ( isPrime [ i ] != isPrime [ i ] )"
      ],
      "err_line": 19,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        19,
        6,
        9
      ],
      "mod_code": [
        "for ( i = 0 ; i < ji - 1 ; i ++ )",
        "if ( isPrime [ i ] != isPrime [ i ] )",
        "for ( j = i + i ; j < 1005 ; j += i ) { isPrime [ j ] = true ; }"
      ],
      "err_line": 9,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        19,
        6,
        9,
        1
      ],
      "mod_code": [
        "for ( i = 0 ; i < ji - 1 ; i ++ )",
        "if ( isPrime [ i ] != isPrime [ i ] )",
        "for ( j = i + i ; j < 1005 ; j += i ) { isPrime [ j ] = true ; }",
        "bool * isPrime [ 1005 ] ;"
      ],
      "err_line": 4,
      "err_msg": "cannot convert ‘bool’ to ‘bool*’ in assignment"
    },
    {
      "mod_line": [
        19,
        6,
        9,
        17
      ],
      "mod_code": [
        "for ( i = 0 ; i < ji - 1 ; i ++ )",
        "if ( isPrime [ i ] != isPrime [ i ] )",
        "for ( j = i + i ; j < 1005 ; j += i ) { isPrime [ j ] = true ; }",
        "for ( j = 2 ; j < n ; j ++ )"
      ],
      "err_line": 9,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        19,
        6,
        1
      ],
      "mod_code": [
        "for ( i = 0 ; i < ji - 1 ; i ++ )",
        "if ( isPrime [ i ] != isPrime [ i ] )",
        "bool * isPrime [ 1005 ] ;"
      ],
      "err_line": 4,
      "err_msg": "cannot convert ‘bool’ to ‘bool*’ in assignment"
    },
    {
      "mod_line": [
        19,
        6,
        1,
        17
      ],
      "mod_code": [
        "for ( i = 0 ; i < ji - 1 ; i ++ )",
        "if ( isPrime [ i ] != isPrime [ i ] )",
        "bool * isPrime [ 1005 ] ;",
        "for ( j = 2 ; j < n ; j ++ )"
      ],
      "err_line": 4,
      "err_msg": "cannot convert ‘bool’ to ‘bool*’ in assignment"
    },
    {
      "mod_line": [
        19,
        6,
        17
      ],
      "mod_code": [
        "for ( i = 0 ; i < ji - 1 ; i ++ )",
        "if ( isPrime [ i ] != isPrime [ i ] )",
        "for ( j = 2 ; j < n ; j ++ )"
      ],
      "err_line": 17,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        19,
        9
      ],
      "mod_code": [
        "for ( i = 0 ; i < ji - 1 ; i ++ )",
        "for ( j = i + i ; j < 1005 ; j += i ) { isPrime [ j ] = true ; }"
      ],
      "err_line": 9,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        19,
        9,
        1
      ],
      "mod_code": [
        "for ( i = 0 ; i < ji - 1 ; i ++ )",
        "for ( j = i + i ; j < 1005 ; j += i ) { isPrime [ j ] = true ; }",
        "bool * isPrime [ 1005 ] ;"
      ],
      "err_line": 4,
      "err_msg": "cannot convert ‘bool’ to ‘bool*’ in assignment"
    },
    {
      "mod_line": [
        19,
        9,
        1,
        17
      ],
      "mod_code": [
        "for ( i = 0 ; i < ji - 1 ; i ++ )",
        "for ( j = i + i ; j < 1005 ; j += i ) { isPrime [ j ] = true ; }",
        "bool * isPrime [ 1005 ] ;",
        "for ( j = 2 ; j < n ; j ++ )"
      ],
      "err_line": 4,
      "err_msg": "cannot convert ‘bool’ to ‘bool*’ in assignment"
    },
    {
      "mod_line": [
        19,
        9,
        17
      ],
      "mod_code": [
        "for ( i = 0 ; i < ji - 1 ; i ++ )",
        "for ( j = i + i ; j < 1005 ; j += i ) { isPrime [ j ] = true ; }",
        "for ( j = 2 ; j < n ; j ++ )"
      ],
      "err_line": 9,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        19,
        1
      ],
      "mod_code": [
        "for ( i = 0 ; i < ji - 1 ; i ++ )",
        "bool * isPrime [ 1005 ] ;"
      ],
      "err_line": 4,
      "err_msg": "cannot convert ‘bool’ to ‘bool*’ in assignment"
    },
    {
      "mod_line": [
        19,
        1,
        17
      ],
      "mod_code": [
        "for ( i = 0 ; i < ji - 1 ; i ++ )",
        "bool * isPrime [ 1005 ] ;",
        "for ( j = 2 ; j < n ; j ++ )"
      ],
      "err_line": 4,
      "err_msg": "cannot convert ‘bool’ to ‘bool*’ in assignment"
    },
    {
      "mod_line": [
        19,
        17
      ],
      "mod_code": [
        "for ( i = 0 ; i < ji - 1 ; i ++ )",
        "for ( j = 2 ; j < n ; j ++ )"
      ],
      "err_line": 17,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        9
      ],
      "mod_code": [
        "if ( isPrime [ i ] != isPrime [ i ] )",
        "for ( j = i + i ; j < 1005 ; j += i ) { isPrime [ j ] = true ; }"
      ],
      "err_line": 9,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        9,
        1
      ],
      "mod_code": [
        "if ( isPrime [ i ] != isPrime [ i ] )",
        "for ( j = i + i ; j < 1005 ; j += i ) { isPrime [ j ] = true ; }",
        "bool * isPrime [ 1005 ] ;"
      ],
      "err_line": 4,
      "err_msg": "cannot convert ‘bool’ to ‘bool*’ in assignment"
    },
    {
      "mod_line": [
        6,
        9,
        1,
        17
      ],
      "mod_code": [
        "if ( isPrime [ i ] != isPrime [ i ] )",
        "for ( j = i + i ; j < 1005 ; j += i ) { isPrime [ j ] = true ; }",
        "bool * isPrime [ 1005 ] ;",
        "for ( j = 2 ; j < n ; j ++ )"
      ],
      "err_line": 4,
      "err_msg": "cannot convert ‘bool’ to ‘bool*’ in assignment"
    },
    {
      "mod_line": [
        6,
        9,
        17
      ],
      "mod_code": [
        "if ( isPrime [ i ] != isPrime [ i ] )",
        "for ( j = i + i ; j < 1005 ; j += i ) { isPrime [ j ] = true ; }",
        "for ( j = 2 ; j < n ; j ++ )"
      ],
      "err_line": 9,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        1
      ],
      "mod_code": [
        "if ( isPrime [ i ] != isPrime [ i ] )",
        "bool * isPrime [ 1005 ] ;"
      ],
      "err_line": 4,
      "err_msg": "cannot convert ‘bool’ to ‘bool*’ in assignment"
    },
    {
      "mod_line": [
        6,
        1,
        17
      ],
      "mod_code": [
        "if ( isPrime [ i ] != isPrime [ i ] )",
        "bool * isPrime [ 1005 ] ;",
        "for ( j = 2 ; j < n ; j ++ )"
      ],
      "err_line": 4,
      "err_msg": "cannot convert ‘bool’ to ‘bool*’ in assignment"
    },
    {
      "mod_line": [
        6,
        17
      ],
      "mod_code": [
        "if ( isPrime [ i ] != isPrime [ i ] )",
        "for ( j = 2 ; j < n ; j ++ )"
      ],
      "err_line": 17,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        9,
        1
      ],
      "mod_code": [
        "for ( j = i + i ; j < 1005 ; j += i ) { isPrime [ j ] = true ; }",
        "bool * isPrime [ 1005 ] ;"
      ],
      "err_line": 4,
      "err_msg": "cannot convert ‘bool’ to ‘bool*’ in assignment"
    },
    {
      "mod_line": [
        9,
        1,
        17
      ],
      "mod_code": [
        "for ( j = i + i ; j < 1005 ; j += i ) { isPrime [ j ] = true ; }",
        "bool * isPrime [ 1005 ] ;",
        "for ( j = 2 ; j < n ; j ++ )"
      ],
      "err_line": 4,
      "err_msg": "cannot convert ‘bool’ to ‘bool*’ in assignment"
    },
    {
      "mod_line": [
        9,
        17
      ],
      "mod_code": [
        "for ( j = i + i ; j < 1005 ; j += i ) { isPrime [ j ] = true ; }",
        "for ( j = 2 ; j < n ; j ++ )"
      ],
      "err_line": 9,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        17
      ],
      "mod_code": [
        "bool * isPrime [ 1005 ] ;",
        "for ( j = 2 ; j < n ; j ++ )"
      ],
      "err_line": 4,
      "err_msg": "cannot convert ‘bool’ to ‘bool*’ in assignment"
    }
  ]
}