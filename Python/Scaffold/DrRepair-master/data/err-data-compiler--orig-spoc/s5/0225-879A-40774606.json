{
  "meta": {
    "index": 225,
    "hitid": "30UZJB2POH60N4KC7X37ALH040Q53U",
    "workerid": "A1APYLD4DUK33J",
    "probid": "879A",
    "subid": "40774606"
  },
  "lines": [
    {
      "line": 0,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 1,
      "text": "create integers n , s , d , prev , i with prev = 0 , i = 0",
      "code": "int n , s , d , prev = 0 , i = 0 ;",
      "indent": 1
    },
    {
      "line": 2,
      "text": "read n",
      "code": "cin >> n ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "while decrement n is true",
      "code": "while ( n -- )",
      "indent": 1
    },
    {
      "line": 4,
      "text": "read s read d",
      "code": "cin >> s >> d ;",
      "indent": 2
    },
    {
      "line": 5,
      "text": "set i to 0",
      "code": "i = 0 ;",
      "indent": 2
    },
    {
      "line": 6,
      "text": "while true",
      "code": "while ( true )",
      "indent": 2
    },
    {
      "line": 7,
      "text": "if ( s + ( d * i ) ) is greater than prev",
      "code": "if ( ( s + ( d * i ) ) > prev )",
      "indent": 3
    },
    {
      "line": 8,
      "text": "set prev to s + ( d * i )",
      "code": "prev = s + ( d * i ) ;",
      "indent": 4
    },
    {
      "line": 9,
      "text": "break loop",
      "code": "break ;",
      "indent": 4
    },
    {
      "line": 10,
      "text": "DUMMY",
      "code": "}",
      "indent": 3
    },
    {
      "line": 11,
      "text": "increment i",
      "code": "i ++ ;",
      "indent": 3
    },
    {
      "line": 12,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 13,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 14,
      "text": "print prev print newline",
      "code": "cout << prev << endl ;",
      "indent": 1
    },
    {
      "line": 15,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 16,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        1
      ],
      "mod_code": [
        "int n , s = 0 , d , prev = 0 ;"
      ],
      "err_line": 5,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        1
      ],
      "mod_code": [
        "int n , s = 0 , d = 0 , i , i ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int i’"
    },
    {
      "mod_line": [
        4
      ],
      "mod_code": [
        "cin >> s read d ;"
      ],
      "err_line": 4,
      "err_msg": "expected ‘;’ before ‘read’"
    },
    {
      "mod_line": [
        7
      ],
      "mod_code": [
        "if ( ( s + ( d * i ) ) ) > prev )"
      ],
      "err_line": 7,
      "err_msg": "expected primary-expression before ‘>’ token"
    },
    {
      "mod_line": [
        9
      ],
      "mod_code": [
        "break break ;"
      ],
      "err_line": 9,
      "err_msg": "expected ‘;’ before ‘break’"
    },
    {
      "mod_line": [
        1,
        7
      ],
      "mod_code": [
        "int n , s = 0 , d , prev = 0 ;",
        "if ( ( s + ( d * i ) ) ) > prev )"
      ],
      "err_line": 5,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        7,
        9
      ],
      "mod_code": [
        "int n , s = 0 , d , prev = 0 ;",
        "if ( ( s + ( d * i ) ) ) > prev )",
        "break break ;"
      ],
      "err_line": 5,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        7,
        9,
        8
      ],
      "mod_code": [
        "int n , s = 0 , d , prev = 0 ;",
        "if ( ( s + ( d * i ) ) ) > prev )",
        "break break ;",
        "prev += ( d * i ) ;"
      ],
      "err_line": 5,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        7,
        9,
        3
      ],
      "mod_code": [
        "int n , s = 0 , d , prev = 0 ;",
        "if ( ( s + ( d * i ) ) ) > prev )",
        "break break ;",
        "while ( n -- ) n -- ;"
      ],
      "err_line": 5,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        7,
        8
      ],
      "mod_code": [
        "int n , s = 0 , d , prev = 0 ;",
        "if ( ( s + ( d * i ) ) ) > prev )",
        "prev += ( d * i ) ;"
      ],
      "err_line": 5,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        7,
        8,
        3
      ],
      "mod_code": [
        "int n , s = 0 , d , prev = 0 ;",
        "if ( ( s + ( d * i ) ) ) > prev )",
        "prev += ( d * i ) ;",
        "while ( n -- ) n -- ;"
      ],
      "err_line": 5,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        7,
        3
      ],
      "mod_code": [
        "int n , s = 0 , d , prev = 0 ;",
        "if ( ( s + ( d * i ) ) ) > prev )",
        "while ( n -- ) n -- ;"
      ],
      "err_line": 5,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        9
      ],
      "mod_code": [
        "int n , s = 0 , d , prev = 0 ;",
        "break break ;"
      ],
      "err_line": 5,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        9,
        8
      ],
      "mod_code": [
        "int n , s = 0 , d , prev = 0 ;",
        "break break ;",
        "prev += ( d * i ) ;"
      ],
      "err_line": 5,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        9,
        8,
        3
      ],
      "mod_code": [
        "int n , s = 0 , d , prev = 0 ;",
        "break break ;",
        "prev += ( d * i ) ;",
        "while ( n -- ) n -- ;"
      ],
      "err_line": 5,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        9,
        3
      ],
      "mod_code": [
        "int n , s = 0 , d , prev = 0 ;",
        "break break ;",
        "while ( n -- ) n -- ;"
      ],
      "err_line": 5,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        8
      ],
      "mod_code": [
        "int n , s = 0 , d , prev = 0 ;",
        "prev += ( d * i ) ;"
      ],
      "err_line": 5,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        8,
        3
      ],
      "mod_code": [
        "int n , s = 0 , d , prev = 0 ;",
        "prev += ( d * i ) ;",
        "while ( n -- ) n -- ;"
      ],
      "err_line": 5,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        3
      ],
      "mod_code": [
        "int n , s = 0 , d , prev = 0 ;",
        "while ( n -- ) n -- ;"
      ],
      "err_line": 5,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        7,
        1
      ],
      "mod_code": [
        "if ( ( s + ( d * i ) ) ) > prev )",
        "int n , s = 0 , d = 0 , i , i ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int i’"
    },
    {
      "mod_line": [
        7,
        1,
        9
      ],
      "mod_code": [
        "if ( ( s + ( d * i ) ) ) > prev )",
        "int n , s = 0 , d = 0 , i , i ;",
        "break break ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int i’"
    },
    {
      "mod_line": [
        7,
        1,
        9,
        8
      ],
      "mod_code": [
        "if ( ( s + ( d * i ) ) ) > prev )",
        "int n , s = 0 , d = 0 , i , i ;",
        "break break ;",
        "prev += ( d * i ) ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int i’"
    },
    {
      "mod_line": [
        7,
        1,
        9,
        3
      ],
      "mod_code": [
        "if ( ( s + ( d * i ) ) ) > prev )",
        "int n , s = 0 , d = 0 , i , i ;",
        "break break ;",
        "while ( n -- ) n -- ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int i’"
    },
    {
      "mod_line": [
        7,
        1,
        8
      ],
      "mod_code": [
        "if ( ( s + ( d * i ) ) ) > prev )",
        "int n , s = 0 , d = 0 , i , i ;",
        "prev += ( d * i ) ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int i’"
    },
    {
      "mod_line": [
        7,
        1,
        8,
        3
      ],
      "mod_code": [
        "if ( ( s + ( d * i ) ) ) > prev )",
        "int n , s = 0 , d = 0 , i , i ;",
        "prev += ( d * i ) ;",
        "while ( n -- ) n -- ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int i’"
    },
    {
      "mod_line": [
        7,
        1,
        3
      ],
      "mod_code": [
        "if ( ( s + ( d * i ) ) ) > prev )",
        "int n , s = 0 , d = 0 , i , i ;",
        "while ( n -- ) n -- ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int i’"
    },
    {
      "mod_line": [
        7,
        9
      ],
      "mod_code": [
        "if ( ( s + ( d * i ) ) ) > prev )",
        "break break ;"
      ],
      "err_line": 7,
      "err_msg": "expected primary-expression before ‘>’ token"
    },
    {
      "mod_line": [
        7,
        9,
        8
      ],
      "mod_code": [
        "if ( ( s + ( d * i ) ) ) > prev )",
        "break break ;",
        "prev += ( d * i ) ;"
      ],
      "err_line": 7,
      "err_msg": "expected primary-expression before ‘>’ token"
    },
    {
      "mod_line": [
        7,
        9,
        8,
        3
      ],
      "mod_code": [
        "if ( ( s + ( d * i ) ) ) > prev )",
        "break break ;",
        "prev += ( d * i ) ;",
        "while ( n -- ) n -- ;"
      ],
      "err_line": 7,
      "err_msg": "expected primary-expression before ‘>’ token"
    },
    {
      "mod_line": [
        7,
        9,
        3
      ],
      "mod_code": [
        "if ( ( s + ( d * i ) ) ) > prev )",
        "break break ;",
        "while ( n -- ) n -- ;"
      ],
      "err_line": 7,
      "err_msg": "expected primary-expression before ‘>’ token"
    },
    {
      "mod_line": [
        7,
        8
      ],
      "mod_code": [
        "if ( ( s + ( d * i ) ) ) > prev )",
        "prev += ( d * i ) ;"
      ],
      "err_line": 7,
      "err_msg": "expected primary-expression before ‘>’ token"
    },
    {
      "mod_line": [
        7,
        8,
        3
      ],
      "mod_code": [
        "if ( ( s + ( d * i ) ) ) > prev )",
        "prev += ( d * i ) ;",
        "while ( n -- ) n -- ;"
      ],
      "err_line": 7,
      "err_msg": "expected primary-expression before ‘>’ token"
    },
    {
      "mod_line": [
        7,
        3
      ],
      "mod_code": [
        "if ( ( s + ( d * i ) ) ) > prev )",
        "while ( n -- ) n -- ;"
      ],
      "err_line": 7,
      "err_msg": "expected primary-expression before ‘>’ token"
    },
    {
      "mod_line": [
        1,
        9
      ],
      "mod_code": [
        "int n , s = 0 , d = 0 , i , i ;",
        "break break ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int i’"
    },
    {
      "mod_line": [
        1,
        9,
        8
      ],
      "mod_code": [
        "int n , s = 0 , d = 0 , i , i ;",
        "break break ;",
        "prev += ( d * i ) ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int i’"
    },
    {
      "mod_line": [
        1,
        9,
        8,
        3
      ],
      "mod_code": [
        "int n , s = 0 , d = 0 , i , i ;",
        "break break ;",
        "prev += ( d * i ) ;",
        "while ( n -- ) n -- ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int i’"
    },
    {
      "mod_line": [
        1,
        9,
        3
      ],
      "mod_code": [
        "int n , s = 0 , d = 0 , i , i ;",
        "break break ;",
        "while ( n -- ) n -- ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int i’"
    },
    {
      "mod_line": [
        1,
        8
      ],
      "mod_code": [
        "int n , s = 0 , d = 0 , i , i ;",
        "prev += ( d * i ) ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int i’"
    },
    {
      "mod_line": [
        1,
        8,
        3
      ],
      "mod_code": [
        "int n , s = 0 , d = 0 , i , i ;",
        "prev += ( d * i ) ;",
        "while ( n -- ) n -- ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int i’"
    },
    {
      "mod_line": [
        1,
        3
      ],
      "mod_code": [
        "int n , s = 0 , d = 0 , i , i ;",
        "while ( n -- ) n -- ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int i’"
    },
    {
      "mod_line": [
        9,
        8
      ],
      "mod_code": [
        "break break ;",
        "prev += ( d * i ) ;"
      ],
      "err_line": 9,
      "err_msg": "expected ‘;’ before ‘break’"
    },
    {
      "mod_line": [
        9,
        8,
        3
      ],
      "mod_code": [
        "break break ;",
        "prev += ( d * i ) ;",
        "while ( n -- ) n -- ;"
      ],
      "err_line": 9,
      "err_msg": "expected ‘;’ before ‘break’"
    },
    {
      "mod_line": [
        9,
        3
      ],
      "mod_code": [
        "break break ;",
        "while ( n -- ) n -- ;"
      ],
      "err_line": 9,
      "err_msg": "expected ‘;’ before ‘break’"
    }
  ]
}