{
  "meta": {
    "index": 1785,
    "hitid": "3FCO4VKOZ47IK6ESKAZ0RWZTNI8E7H",
    "workerid": "AIWEXPJAU66D9",
    "probid": "87A",
    "subid": "38069128"
  },
  "lines": [
    {
      "line": 0,
      "text": "long long function gcd with long long arguments a and b",
      "code": "long long gcd ( long long a , long long b )",
      "indent": 0
    },
    {
      "line": 1,
      "text": "if b = 0",
      "code": "if ( b == 0 )",
      "indent": 1
    },
    {
      "line": 2,
      "text": "return a",
      "code": "return a ;",
      "indent": 2
    },
    {
      "line": 3,
      "text": "else",
      "code": "else",
      "indent": 1
    },
    {
      "line": 4,
      "text": "return gcd ( b , a % b )",
      "code": "return gcd ( b , a % b ) ;",
      "indent": 2
    },
    {
      "line": 5,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    },
    {
      "line": 6,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 7,
      "text": "declare long long variables a , b , t , t1 and t2",
      "code": "long long a , b , t , t1 , t2 ;",
      "indent": 1
    },
    {
      "line": 8,
      "text": "read a and b from the input",
      "code": "cin >> a >> b ;",
      "indent": 1
    },
    {
      "line": 9,
      "text": "create new boolean called f with value 0",
      "code": "bool f = 0 ;",
      "indent": 1
    },
    {
      "line": 10,
      "text": "if a is greater than b",
      "code": "if ( a > b )",
      "indent": 1
    },
    {
      "line": 11,
      "text": "set t to a * b / gcd ( a , b )",
      "code": "t = a * b / gcd ( a , b ) ;",
      "indent": 2
    },
    {
      "line": 12,
      "text": "else",
      "code": "else",
      "indent": 1
    },
    {
      "line": 13,
      "text": "assign the new value = a * b / gcd ( b , a ) to t",
      "code": "t = a * b / gcd ( b , a ) ;",
      "indent": 2
    },
    {
      "line": 14,
      "text": "if a is less than b",
      "code": "if ( a < b )",
      "indent": 1
    },
    {
      "line": 15,
      "text": "assign the new value = t / a - 1 to t1",
      "code": "t1 = t / a - 1 ;",
      "indent": 2
    },
    {
      "line": 16,
      "text": "set the new value = t / b to t2",
      "code": "t2 = t / b ;",
      "indent": 2
    },
    {
      "line": 17,
      "text": "else if a is greater than b",
      "code": "else if ( a > b )",
      "indent": 1
    },
    {
      "line": 18,
      "text": "set t1 to t / a",
      "code": "t1 = t / a ;",
      "indent": 2
    },
    {
      "line": 19,
      "text": "change t2 to t / b - 1",
      "code": "t2 = t / b - 1 ;",
      "indent": 2
    },
    {
      "line": 20,
      "text": "else",
      "code": "else",
      "indent": 1
    },
    {
      "line": 21,
      "text": "change f to 1",
      "code": "f = 1 ;",
      "indent": 2
    },
    {
      "line": 22,
      "text": "if t1 > t2 and f = 0",
      "code": "if ( t1 > t2 && f == 0 )",
      "indent": 1
    },
    {
      "line": 23,
      "text": "print \" Dasha \"",
      "code": "cout << \" Dasha \" << endl ;",
      "indent": 2
    },
    {
      "line": 24,
      "text": "else if t1 < t2 and f = 0",
      "code": "else if ( t1 < t2 && f == 0 )",
      "indent": 1
    },
    {
      "line": 25,
      "text": "print \" Masha \" to the standard output",
      "code": "cout << \" Masha \" << endl ;",
      "indent": 2
    },
    {
      "line": 26,
      "text": "else",
      "code": "else",
      "indent": 1
    },
    {
      "line": 27,
      "text": "print \" Equal \"",
      "code": "cout << \" Equal \" << endl ;",
      "indent": 2
    },
    {
      "line": 28,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 29,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        16
      ],
      "mod_code": [
        "value = t / b ;"
      ],
      "err_line": 16,
      "err_msg": "‘value’ was not declared in this scope"
    },
    {
      "mod_line": [
        0
      ],
      "mod_code": [
        "long long gcd ( long long a , long long b ) ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        4
      ],
      "mod_code": [
        "return gcd ( b , a % b ) ) ;"
      ],
      "err_line": 4,
      "err_msg": "expected ‘;’ before ‘)’ token"
    },
    {
      "mod_line": [
        8
      ],
      "mod_code": [
        "while ( cin >> a >> b )"
      ],
      "err_line": 21,
      "err_msg": "‘f’ was not declared in this scope"
    },
    {
      "mod_line": [
        9
      ],
      "mod_code": [
        "bool f create 0 ;"
      ],
      "err_line": 9,
      "err_msg": "expected initializer before ‘create’"
    },
    {
      "mod_line": [
        13
      ],
      "mod_code": [
        "t = a * b / gcd ( b ) ;"
      ],
      "err_line": 13,
      "err_msg": "too few arguments to function ‘long long int gcd(long long int, long long int)’"
    },
    {
      "mod_line": [
        16,
        0
      ],
      "mod_code": [
        "value = t / b ;",
        "long long gcd ( long long a , long long b ) ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        16,
        0,
        27
      ],
      "mod_code": [
        "value = t / b ;",
        "long long gcd ( long long a , long long b ) ;",
        "cout << \" Equal \" ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        16,
        0,
        27,
        4
      ],
      "mod_code": [
        "value = t / b ;",
        "long long gcd ( long long a , long long b ) ;",
        "cout << \" Equal \" ;",
        "return gcd ( b , a % b ) ) ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        16,
        0,
        27,
        9
      ],
      "mod_code": [
        "value = t / b ;",
        "long long gcd ( long long a , long long b ) ;",
        "cout << \" Equal \" ;",
        "bool f create 0 ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        16,
        0,
        27,
        8
      ],
      "mod_code": [
        "value = t / b ;",
        "long long gcd ( long long a , long long b ) ;",
        "cout << \" Equal \" ;",
        "while ( cin >> a >> b )"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        16,
        0,
        4
      ],
      "mod_code": [
        "value = t / b ;",
        "long long gcd ( long long a , long long b ) ;",
        "return gcd ( b , a % b ) ) ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        16,
        0,
        4,
        9
      ],
      "mod_code": [
        "value = t / b ;",
        "long long gcd ( long long a , long long b ) ;",
        "return gcd ( b , a % b ) ) ;",
        "bool f create 0 ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        16,
        0,
        4,
        8
      ],
      "mod_code": [
        "value = t / b ;",
        "long long gcd ( long long a , long long b ) ;",
        "return gcd ( b , a % b ) ) ;",
        "while ( cin >> a >> b )"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        16,
        0,
        9
      ],
      "mod_code": [
        "value = t / b ;",
        "long long gcd ( long long a , long long b ) ;",
        "bool f create 0 ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        16,
        0,
        9,
        8
      ],
      "mod_code": [
        "value = t / b ;",
        "long long gcd ( long long a , long long b ) ;",
        "bool f create 0 ;",
        "while ( cin >> a >> b )"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        16,
        0,
        8
      ],
      "mod_code": [
        "value = t / b ;",
        "long long gcd ( long long a , long long b ) ;",
        "while ( cin >> a >> b )"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        16,
        27
      ],
      "mod_code": [
        "value = t / b ;",
        "cout << \" Equal \" ;"
      ],
      "err_line": 16,
      "err_msg": "‘value’ was not declared in this scope"
    },
    {
      "mod_line": [
        16,
        27,
        4
      ],
      "mod_code": [
        "value = t / b ;",
        "cout << \" Equal \" ;",
        "return gcd ( b , a % b ) ) ;"
      ],
      "err_line": 4,
      "err_msg": "expected ‘;’ before ‘)’ token"
    },
    {
      "mod_line": [
        16,
        27,
        4,
        9
      ],
      "mod_code": [
        "value = t / b ;",
        "cout << \" Equal \" ;",
        "return gcd ( b , a % b ) ) ;",
        "bool f create 0 ;"
      ],
      "err_line": 4,
      "err_msg": "expected ‘;’ before ‘)’ token"
    },
    {
      "mod_line": [
        16,
        27,
        4,
        8
      ],
      "mod_code": [
        "value = t / b ;",
        "cout << \" Equal \" ;",
        "return gcd ( b , a % b ) ) ;",
        "while ( cin >> a >> b )"
      ],
      "err_line": 4,
      "err_msg": "expected ‘;’ before ‘)’ token"
    },
    {
      "mod_line": [
        16,
        27,
        9
      ],
      "mod_code": [
        "value = t / b ;",
        "cout << \" Equal \" ;",
        "bool f create 0 ;"
      ],
      "err_line": 9,
      "err_msg": "expected initializer before ‘create’"
    },
    {
      "mod_line": [
        16,
        27,
        9,
        8
      ],
      "mod_code": [
        "value = t / b ;",
        "cout << \" Equal \" ;",
        "bool f create 0 ;",
        "while ( cin >> a >> b )"
      ],
      "err_line": 9,
      "err_msg": "expected initializer before ‘create’"
    },
    {
      "mod_line": [
        16,
        27,
        8
      ],
      "mod_code": [
        "value = t / b ;",
        "cout << \" Equal \" ;",
        "while ( cin >> a >> b )"
      ],
      "err_line": 16,
      "err_msg": "‘value’ was not declared in this scope"
    },
    {
      "mod_line": [
        16,
        4
      ],
      "mod_code": [
        "value = t / b ;",
        "return gcd ( b , a % b ) ) ;"
      ],
      "err_line": 4,
      "err_msg": "expected ‘;’ before ‘)’ token"
    },
    {
      "mod_line": [
        16,
        4,
        9
      ],
      "mod_code": [
        "value = t / b ;",
        "return gcd ( b , a % b ) ) ;",
        "bool f create 0 ;"
      ],
      "err_line": 4,
      "err_msg": "expected ‘;’ before ‘)’ token"
    },
    {
      "mod_line": [
        16,
        4,
        9,
        8
      ],
      "mod_code": [
        "value = t / b ;",
        "return gcd ( b , a % b ) ) ;",
        "bool f create 0 ;",
        "while ( cin >> a >> b )"
      ],
      "err_line": 4,
      "err_msg": "expected ‘;’ before ‘)’ token"
    },
    {
      "mod_line": [
        16,
        4,
        8
      ],
      "mod_code": [
        "value = t / b ;",
        "return gcd ( b , a % b ) ) ;",
        "while ( cin >> a >> b )"
      ],
      "err_line": 4,
      "err_msg": "expected ‘;’ before ‘)’ token"
    },
    {
      "mod_line": [
        16,
        9
      ],
      "mod_code": [
        "value = t / b ;",
        "bool f create 0 ;"
      ],
      "err_line": 9,
      "err_msg": "expected initializer before ‘create’"
    },
    {
      "mod_line": [
        16,
        9,
        8
      ],
      "mod_code": [
        "value = t / b ;",
        "bool f create 0 ;",
        "while ( cin >> a >> b )"
      ],
      "err_line": 9,
      "err_msg": "expected initializer before ‘create’"
    },
    {
      "mod_line": [
        16,
        8
      ],
      "mod_code": [
        "value = t / b ;",
        "while ( cin >> a >> b )"
      ],
      "err_line": 16,
      "err_msg": "‘value’ was not declared in this scope"
    },
    {
      "mod_line": [
        0,
        27
      ],
      "mod_code": [
        "long long gcd ( long long a , long long b ) ;",
        "cout << \" Equal \" ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        0,
        27,
        4
      ],
      "mod_code": [
        "long long gcd ( long long a , long long b ) ;",
        "cout << \" Equal \" ;",
        "return gcd ( b , a % b ) ) ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        0,
        27,
        4,
        9
      ],
      "mod_code": [
        "long long gcd ( long long a , long long b ) ;",
        "cout << \" Equal \" ;",
        "return gcd ( b , a % b ) ) ;",
        "bool f create 0 ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        0,
        27,
        4,
        8
      ],
      "mod_code": [
        "long long gcd ( long long a , long long b ) ;",
        "cout << \" Equal \" ;",
        "return gcd ( b , a % b ) ) ;",
        "while ( cin >> a >> b )"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        0,
        27,
        9
      ],
      "mod_code": [
        "long long gcd ( long long a , long long b ) ;",
        "cout << \" Equal \" ;",
        "bool f create 0 ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        0,
        27,
        9,
        8
      ],
      "mod_code": [
        "long long gcd ( long long a , long long b ) ;",
        "cout << \" Equal \" ;",
        "bool f create 0 ;",
        "while ( cin >> a >> b )"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        0,
        27,
        8
      ],
      "mod_code": [
        "long long gcd ( long long a , long long b ) ;",
        "cout << \" Equal \" ;",
        "while ( cin >> a >> b )"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        0,
        4
      ],
      "mod_code": [
        "long long gcd ( long long a , long long b ) ;",
        "return gcd ( b , a % b ) ) ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        0,
        4,
        9
      ],
      "mod_code": [
        "long long gcd ( long long a , long long b ) ;",
        "return gcd ( b , a % b ) ) ;",
        "bool f create 0 ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        0,
        4,
        9,
        8
      ],
      "mod_code": [
        "long long gcd ( long long a , long long b ) ;",
        "return gcd ( b , a % b ) ) ;",
        "bool f create 0 ;",
        "while ( cin >> a >> b )"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        0,
        4,
        8
      ],
      "mod_code": [
        "long long gcd ( long long a , long long b ) ;",
        "return gcd ( b , a % b ) ) ;",
        "while ( cin >> a >> b )"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        0,
        9
      ],
      "mod_code": [
        "long long gcd ( long long a , long long b ) ;",
        "bool f create 0 ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        0,
        9,
        8
      ],
      "mod_code": [
        "long long gcd ( long long a , long long b ) ;",
        "bool f create 0 ;",
        "while ( cin >> a >> b )"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        0,
        8
      ],
      "mod_code": [
        "long long gcd ( long long a , long long b ) ;",
        "while ( cin >> a >> b )"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        27,
        4
      ],
      "mod_code": [
        "cout << \" Equal \" ;",
        "return gcd ( b , a % b ) ) ;"
      ],
      "err_line": 4,
      "err_msg": "expected ‘;’ before ‘)’ token"
    },
    {
      "mod_line": [
        27,
        4,
        9
      ],
      "mod_code": [
        "cout << \" Equal \" ;",
        "return gcd ( b , a % b ) ) ;",
        "bool f create 0 ;"
      ],
      "err_line": 4,
      "err_msg": "expected ‘;’ before ‘)’ token"
    },
    {
      "mod_line": [
        27,
        4,
        9,
        8
      ],
      "mod_code": [
        "cout << \" Equal \" ;",
        "return gcd ( b , a % b ) ) ;",
        "bool f create 0 ;",
        "while ( cin >> a >> b )"
      ],
      "err_line": 4,
      "err_msg": "expected ‘;’ before ‘)’ token"
    },
    {
      "mod_line": [
        27,
        4,
        8
      ],
      "mod_code": [
        "cout << \" Equal \" ;",
        "return gcd ( b , a % b ) ) ;",
        "while ( cin >> a >> b )"
      ],
      "err_line": 4,
      "err_msg": "expected ‘;’ before ‘)’ token"
    },
    {
      "mod_line": [
        27,
        9
      ],
      "mod_code": [
        "cout << \" Equal \" ;",
        "bool f create 0 ;"
      ],
      "err_line": 9,
      "err_msg": "expected initializer before ‘create’"
    },
    {
      "mod_line": [
        27,
        9,
        8
      ],
      "mod_code": [
        "cout << \" Equal \" ;",
        "bool f create 0 ;",
        "while ( cin >> a >> b )"
      ],
      "err_line": 9,
      "err_msg": "expected initializer before ‘create’"
    },
    {
      "mod_line": [
        27,
        8
      ],
      "mod_code": [
        "cout << \" Equal \" ;",
        "while ( cin >> a >> b )"
      ],
      "err_line": 21,
      "err_msg": "‘f’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        9
      ],
      "mod_code": [
        "return gcd ( b , a % b ) ) ;",
        "bool f create 0 ;"
      ],
      "err_line": 4,
      "err_msg": "expected ‘;’ before ‘)’ token"
    },
    {
      "mod_line": [
        4,
        9,
        8
      ],
      "mod_code": [
        "return gcd ( b , a % b ) ) ;",
        "bool f create 0 ;",
        "while ( cin >> a >> b )"
      ],
      "err_line": 4,
      "err_msg": "expected ‘;’ before ‘)’ token"
    },
    {
      "mod_line": [
        4,
        8
      ],
      "mod_code": [
        "return gcd ( b , a % b ) ) ;",
        "while ( cin >> a >> b )"
      ],
      "err_line": 4,
      "err_msg": "expected ‘;’ before ‘)’ token"
    },
    {
      "mod_line": [
        9,
        8
      ],
      "mod_code": [
        "bool f create 0 ;",
        "while ( cin >> a >> b )"
      ],
      "err_line": 9,
      "err_msg": "expected initializer before ‘create’"
    }
  ]
}