{
  "meta": {
    "index": 2303,
    "hitid": "3BO3NEOQM0BCJDECNW1BM2ZBGJLAID",
    "workerid": "A2J7P30MA3S6OV",
    "probid": "713A",
    "subid": "47505323"
  },
  "lines": [
    {
      "line": 0,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 1,
      "text": "create int n",
      "code": "int n ;",
      "indent": 1
    },
    {
      "line": 2,
      "text": "read n",
      "code": "cin >> n ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "create map cont from string to int",
      "code": "map < string , int > cont ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "for i = 0 to n exclusive",
      "code": "for ( int i = 0 ; i < n ; i ++ )",
      "indent": 1
    },
    {
      "line": 5,
      "text": "create char tipo",
      "code": "char tipo ;",
      "indent": 2
    },
    {
      "line": 6,
      "text": "create string s",
      "code": "string s ;",
      "indent": 2
    },
    {
      "line": 7,
      "text": "read tipo and s",
      "code": "cin >> tipo >> s ;",
      "indent": 2
    },
    {
      "line": 8,
      "text": "for c = 0 to length of s exclusive",
      "code": "for ( int c = 0 ; c < s . length ( ) ; c ++ )",
      "indent": 2
    },
    {
      "line": 9,
      "text": "if s [ c ] = 0 , 2 , 4 , 6 or 8",
      "code": "if ( s [ c ] == ' 0 ' || s [ c ] == ' 2 ' || s [ c ] == ' 4 ' || s [ c ] == ' 6 ' || s [ c ] == ' 8 ' )",
      "indent": 3
    },
    {
      "line": 10,
      "text": "set s [ c ] = 0",
      "code": "s [ c ] = ' 0 ' ;",
      "indent": 4
    },
    {
      "line": 11,
      "text": "else",
      "code": "else",
      "indent": 3
    },
    {
      "line": 12,
      "text": "assign 1 to s [ c ]",
      "code": "s [ c ] = ' 1 ' ;",
      "indent": 4
    },
    {
      "line": 13,
      "text": "DUMMY",
      "code": "}",
      "indent": 3
    },
    {
      "line": 14,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 15,
      "text": "create string usa",
      "code": "string usa ;",
      "indent": 2
    },
    {
      "line": 16,
      "text": "for c = 0 to 20 - length of s exclusive , assign usa + 0 to usa",
      "code": "for ( int c = 0 ; c < 20 - s . length ( ) ; c ++ ) { usa += ' 0 ' ; }",
      "indent": 2
    },
    {
      "line": 17,
      "text": "assign usa + s to us",
      "code": "usa += s ;",
      "indent": 2
    },
    {
      "line": 18,
      "text": "if tipo = +",
      "code": "if ( tipo == ' + ' )",
      "indent": 2
    },
    {
      "line": 19,
      "text": "set cont [ usa ] = cont [ usa ] + 1",
      "code": "cont [ usa ] += 1 ;",
      "indent": 3
    },
    {
      "line": 20,
      "text": "else if tipo equal to -",
      "code": "else if ( tipo == ' - ' )",
      "indent": 2
    },
    {
      "line": 21,
      "text": "cont [ usa ] = cont [ usa ] - 1",
      "code": "cont [ usa ] -= 1 ;",
      "indent": 3
    },
    {
      "line": 22,
      "text": "else",
      "code": "else",
      "indent": 2
    },
    {
      "line": 23,
      "text": "print cont [ usa ]",
      "code": "cout << cont [ usa ] << endl ;",
      "indent": 3
    },
    {
      "line": 24,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 25,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 26,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 27,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        16
      ],
      "mod_code": [
        "for ( int c = 0 ; c < 20 - s . length ( ) ; c ++ ) usa = usa + 0 ;"
      ],
      "err_line": 16,
      "err_msg": "no match for ‘operator+’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        17
      ],
      "mod_code": [
        "us += s ;"
      ],
      "err_line": 17,
      "err_msg": "‘us’ was not declared in this scope"
    },
    {
      "mod_line": [
        2
      ],
      "mod_code": [
        "while ( cin >> n )"
      ],
      "err_line": 19,
      "err_msg": "‘cont’ was not declared in this scope"
    },
    {
      "mod_line": [
        3
      ],
      "mod_code": [
        "map < int , int > cont ;"
      ],
      "err_line": 19,
      "err_msg": "no match for ‘operator[]’ (operand types are ‘std::map<int, int>’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        4
      ],
      "mod_code": [
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 4,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        5
      ],
      "mod_code": [
        "char n ;"
      ],
      "err_line": 7,
      "err_msg": "‘tipo’ was not declared in this scope"
    },
    {
      "mod_line": [
        6
      ],
      "mod_code": [
        "string n ;"
      ],
      "err_line": 7,
      "err_msg": "‘s’ was not declared in this scope"
    },
    {
      "mod_line": [
        7
      ],
      "mod_code": [
        "cout << tipo >> s ;"
      ],
      "err_line": 7,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::basic_ostream<char>’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        8
      ],
      "mod_code": [
        "for ( c = 0 ; c < s . length ( ) ; c ++ )"
      ],
      "err_line": 8,
      "err_msg": "‘c’ was not declared in this scope"
    },
    {
      "mod_line": [
        12
      ],
      "mod_code": [
        "char s [ c ] = 1 ;"
      ],
      "err_line": 12,
      "err_msg": "array must be initialized with a brace-enclosed initializer"
    },
    {
      "mod_line": [
        15
      ],
      "mod_code": [
        "string usa create"
      ],
      "err_line": 15,
      "err_msg": "expected initializer before ‘create’"
    },
    {
      "mod_line": [
        16
      ],
      "mod_code": [
        "for ( int c = 0 ; c < 20 - s . size ( ) ; c ++ ) usa = usa + 0 ;"
      ],
      "err_line": 16,
      "err_msg": "no match for ‘operator+’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        17
      ],
      "mod_code": [
        "us = usa + s ;"
      ],
      "err_line": 17,
      "err_msg": "‘us’ was not declared in this scope"
    },
    {
      "mod_line": [
        18
      ],
      "mod_code": [
        "if ( tipo == + end )"
      ],
      "err_line": 18,
      "err_msg": "‘end’ was not declared in this scope"
    },
    {
      "mod_line": [
        19
      ],
      "mod_code": [
        "cont [ usa ++ ] += 1 ;"
      ],
      "err_line": 19,
      "err_msg": "no ‘operator++(int)’ declared for postfix ‘++’ [-fpermissive]"
    },
    {
      "mod_line": [
        20
      ],
      "mod_code": [
        "else if ( tipo == - k )"
      ],
      "err_line": 20,
      "err_msg": "‘k’ was not declared in this scope"
    },
    {
      "mod_line": [
        9,
        10,
        16
      ],
      "mod_code": [
        "if ( s [ c ] == ' 0 ' || s [ c ] == ' 4 ' || s [ c ] == ' 4 ' )",
        "s [ c ] = 0 ;",
        "for ( int c = 0 ; c < 20 - s . length ( ) ; c ++ ) usa = usa + 0 ;"
      ],
      "err_line": 16,
      "err_msg": "no match for ‘operator+’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        9,
        10,
        16,
        17
      ],
      "mod_code": [
        "if ( s [ c ] == ' 0 ' || s [ c ] == ' 4 ' || s [ c ] == ' 4 ' )",
        "s [ c ] = 0 ;",
        "for ( int c = 0 ; c < 20 - s . length ( ) ; c ++ ) usa = usa + 0 ;",
        "us += s ;"
      ],
      "err_line": 16,
      "err_msg": "no match for ‘operator+’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        9,
        10,
        16,
        19
      ],
      "mod_code": [
        "if ( s [ c ] == ' 0 ' || s [ c ] == ' 4 ' || s [ c ] == ' 4 ' )",
        "s [ c ] = 0 ;",
        "for ( int c = 0 ; c < 20 - s . length ( ) ; c ++ ) usa = usa + 0 ;",
        "cont [ usa ++ ] += 1 ;"
      ],
      "err_line": 16,
      "err_msg": "no match for ‘operator+’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        9,
        10,
        16,
        8
      ],
      "mod_code": [
        "if ( s [ c ] == ' 0 ' || s [ c ] == ' 4 ' || s [ c ] == ' 4 ' )",
        "s [ c ] = 0 ;",
        "for ( int c = 0 ; c < 20 - s . length ( ) ; c ++ ) usa = usa + 0 ;",
        "for ( c = 0 ; c < s . length ( ) ; c ++ )"
      ],
      "err_line": 8,
      "err_msg": "‘c’ was not declared in this scope"
    },
    {
      "mod_line": [
        9,
        10,
        17
      ],
      "mod_code": [
        "if ( s [ c ] == ' 0 ' || s [ c ] == ' 4 ' || s [ c ] == ' 4 ' )",
        "s [ c ] = 0 ;",
        "us += s ;"
      ],
      "err_line": 17,
      "err_msg": "‘us’ was not declared in this scope"
    },
    {
      "mod_line": [
        9,
        10,
        17,
        19
      ],
      "mod_code": [
        "if ( s [ c ] == ' 0 ' || s [ c ] == ' 4 ' || s [ c ] == ' 4 ' )",
        "s [ c ] = 0 ;",
        "us += s ;",
        "cont [ usa ++ ] += 1 ;"
      ],
      "err_line": 17,
      "err_msg": "‘us’ was not declared in this scope"
    },
    {
      "mod_line": [
        9,
        10,
        17,
        8
      ],
      "mod_code": [
        "if ( s [ c ] == ' 0 ' || s [ c ] == ' 4 ' || s [ c ] == ' 4 ' )",
        "s [ c ] = 0 ;",
        "us += s ;",
        "for ( c = 0 ; c < s . length ( ) ; c ++ )"
      ],
      "err_line": 8,
      "err_msg": "‘c’ was not declared in this scope"
    },
    {
      "mod_line": [
        9,
        10,
        19
      ],
      "mod_code": [
        "if ( s [ c ] == ' 0 ' || s [ c ] == ' 4 ' || s [ c ] == ' 4 ' )",
        "s [ c ] = 0 ;",
        "cont [ usa ++ ] += 1 ;"
      ],
      "err_line": 19,
      "err_msg": "no ‘operator++(int)’ declared for postfix ‘++’ [-fpermissive]"
    },
    {
      "mod_line": [
        9,
        10,
        19,
        8
      ],
      "mod_code": [
        "if ( s [ c ] == ' 0 ' || s [ c ] == ' 4 ' || s [ c ] == ' 4 ' )",
        "s [ c ] = 0 ;",
        "cont [ usa ++ ] += 1 ;",
        "for ( c = 0 ; c < s . length ( ) ; c ++ )"
      ],
      "err_line": 8,
      "err_msg": "‘c’ was not declared in this scope"
    },
    {
      "mod_line": [
        9,
        10,
        8
      ],
      "mod_code": [
        "if ( s [ c ] == ' 0 ' || s [ c ] == ' 4 ' || s [ c ] == ' 4 ' )",
        "s [ c ] = 0 ;",
        "for ( c = 0 ; c < s . length ( ) ; c ++ )"
      ],
      "err_line": 8,
      "err_msg": "‘c’ was not declared in this scope"
    },
    {
      "mod_line": [
        9,
        16
      ],
      "mod_code": [
        "if ( s [ c ] == ' 0 ' || s [ c ] == ' 4 ' || s [ c ] == ' 4 ' )",
        "for ( int c = 0 ; c < 20 - s . length ( ) ; c ++ ) usa = usa + 0 ;"
      ],
      "err_line": 16,
      "err_msg": "no match for ‘operator+’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        9,
        16,
        17
      ],
      "mod_code": [
        "if ( s [ c ] == ' 0 ' || s [ c ] == ' 4 ' || s [ c ] == ' 4 ' )",
        "for ( int c = 0 ; c < 20 - s . length ( ) ; c ++ ) usa = usa + 0 ;",
        "us += s ;"
      ],
      "err_line": 16,
      "err_msg": "no match for ‘operator+’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        9,
        16,
        17,
        19
      ],
      "mod_code": [
        "if ( s [ c ] == ' 0 ' || s [ c ] == ' 4 ' || s [ c ] == ' 4 ' )",
        "for ( int c = 0 ; c < 20 - s . length ( ) ; c ++ ) usa = usa + 0 ;",
        "us += s ;",
        "cont [ usa ++ ] += 1 ;"
      ],
      "err_line": 16,
      "err_msg": "no match for ‘operator+’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        9,
        16,
        17,
        8
      ],
      "mod_code": [
        "if ( s [ c ] == ' 0 ' || s [ c ] == ' 4 ' || s [ c ] == ' 4 ' )",
        "for ( int c = 0 ; c < 20 - s . length ( ) ; c ++ ) usa = usa + 0 ;",
        "us += s ;",
        "for ( c = 0 ; c < s . length ( ) ; c ++ )"
      ],
      "err_line": 8,
      "err_msg": "‘c’ was not declared in this scope"
    },
    {
      "mod_line": [
        9,
        16,
        19
      ],
      "mod_code": [
        "if ( s [ c ] == ' 0 ' || s [ c ] == ' 4 ' || s [ c ] == ' 4 ' )",
        "for ( int c = 0 ; c < 20 - s . length ( ) ; c ++ ) usa = usa + 0 ;",
        "cont [ usa ++ ] += 1 ;"
      ],
      "err_line": 16,
      "err_msg": "no match for ‘operator+’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        9,
        16,
        19,
        8
      ],
      "mod_code": [
        "if ( s [ c ] == ' 0 ' || s [ c ] == ' 4 ' || s [ c ] == ' 4 ' )",
        "for ( int c = 0 ; c < 20 - s . length ( ) ; c ++ ) usa = usa + 0 ;",
        "cont [ usa ++ ] += 1 ;",
        "for ( c = 0 ; c < s . length ( ) ; c ++ )"
      ],
      "err_line": 8,
      "err_msg": "‘c’ was not declared in this scope"
    },
    {
      "mod_line": [
        9,
        16,
        8
      ],
      "mod_code": [
        "if ( s [ c ] == ' 0 ' || s [ c ] == ' 4 ' || s [ c ] == ' 4 ' )",
        "for ( int c = 0 ; c < 20 - s . length ( ) ; c ++ ) usa = usa + 0 ;",
        "for ( c = 0 ; c < s . length ( ) ; c ++ )"
      ],
      "err_line": 8,
      "err_msg": "‘c’ was not declared in this scope"
    },
    {
      "mod_line": [
        9,
        17
      ],
      "mod_code": [
        "if ( s [ c ] == ' 0 ' || s [ c ] == ' 4 ' || s [ c ] == ' 4 ' )",
        "us += s ;"
      ],
      "err_line": 17,
      "err_msg": "‘us’ was not declared in this scope"
    },
    {
      "mod_line": [
        9,
        17,
        19
      ],
      "mod_code": [
        "if ( s [ c ] == ' 0 ' || s [ c ] == ' 4 ' || s [ c ] == ' 4 ' )",
        "us += s ;",
        "cont [ usa ++ ] += 1 ;"
      ],
      "err_line": 17,
      "err_msg": "‘us’ was not declared in this scope"
    },
    {
      "mod_line": [
        9,
        17,
        19,
        8
      ],
      "mod_code": [
        "if ( s [ c ] == ' 0 ' || s [ c ] == ' 4 ' || s [ c ] == ' 4 ' )",
        "us += s ;",
        "cont [ usa ++ ] += 1 ;",
        "for ( c = 0 ; c < s . length ( ) ; c ++ )"
      ],
      "err_line": 8,
      "err_msg": "‘c’ was not declared in this scope"
    },
    {
      "mod_line": [
        9,
        17,
        8
      ],
      "mod_code": [
        "if ( s [ c ] == ' 0 ' || s [ c ] == ' 4 ' || s [ c ] == ' 4 ' )",
        "us += s ;",
        "for ( c = 0 ; c < s . length ( ) ; c ++ )"
      ],
      "err_line": 8,
      "err_msg": "‘c’ was not declared in this scope"
    },
    {
      "mod_line": [
        9,
        19
      ],
      "mod_code": [
        "if ( s [ c ] == ' 0 ' || s [ c ] == ' 4 ' || s [ c ] == ' 4 ' )",
        "cont [ usa ++ ] += 1 ;"
      ],
      "err_line": 19,
      "err_msg": "no ‘operator++(int)’ declared for postfix ‘++’ [-fpermissive]"
    },
    {
      "mod_line": [
        9,
        19,
        8
      ],
      "mod_code": [
        "if ( s [ c ] == ' 0 ' || s [ c ] == ' 4 ' || s [ c ] == ' 4 ' )",
        "cont [ usa ++ ] += 1 ;",
        "for ( c = 0 ; c < s . length ( ) ; c ++ )"
      ],
      "err_line": 8,
      "err_msg": "‘c’ was not declared in this scope"
    },
    {
      "mod_line": [
        9,
        8
      ],
      "mod_code": [
        "if ( s [ c ] == ' 0 ' || s [ c ] == ' 4 ' || s [ c ] == ' 4 ' )",
        "for ( c = 0 ; c < s . length ( ) ; c ++ )"
      ],
      "err_line": 8,
      "err_msg": "‘c’ was not declared in this scope"
    },
    {
      "mod_line": [
        10,
        16
      ],
      "mod_code": [
        "s [ c ] = 0 ;",
        "for ( int c = 0 ; c < 20 - s . length ( ) ; c ++ ) usa = usa + 0 ;"
      ],
      "err_line": 16,
      "err_msg": "no match for ‘operator+’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        10,
        16,
        17
      ],
      "mod_code": [
        "s [ c ] = 0 ;",
        "for ( int c = 0 ; c < 20 - s . length ( ) ; c ++ ) usa = usa + 0 ;",
        "us += s ;"
      ],
      "err_line": 16,
      "err_msg": "no match for ‘operator+’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        10,
        16,
        17,
        19
      ],
      "mod_code": [
        "s [ c ] = 0 ;",
        "for ( int c = 0 ; c < 20 - s . length ( ) ; c ++ ) usa = usa + 0 ;",
        "us += s ;",
        "cont [ usa ++ ] += 1 ;"
      ],
      "err_line": 16,
      "err_msg": "no match for ‘operator+’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        10,
        16,
        17,
        8
      ],
      "mod_code": [
        "s [ c ] = 0 ;",
        "for ( int c = 0 ; c < 20 - s . length ( ) ; c ++ ) usa = usa + 0 ;",
        "us += s ;",
        "for ( c = 0 ; c < s . length ( ) ; c ++ )"
      ],
      "err_line": 8,
      "err_msg": "‘c’ was not declared in this scope"
    },
    {
      "mod_line": [
        10,
        16,
        19
      ],
      "mod_code": [
        "s [ c ] = 0 ;",
        "for ( int c = 0 ; c < 20 - s . length ( ) ; c ++ ) usa = usa + 0 ;",
        "cont [ usa ++ ] += 1 ;"
      ],
      "err_line": 16,
      "err_msg": "no match for ‘operator+’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        10,
        16,
        19,
        8
      ],
      "mod_code": [
        "s [ c ] = 0 ;",
        "for ( int c = 0 ; c < 20 - s . length ( ) ; c ++ ) usa = usa + 0 ;",
        "cont [ usa ++ ] += 1 ;",
        "for ( c = 0 ; c < s . length ( ) ; c ++ )"
      ],
      "err_line": 8,
      "err_msg": "‘c’ was not declared in this scope"
    },
    {
      "mod_line": [
        10,
        16,
        8
      ],
      "mod_code": [
        "s [ c ] = 0 ;",
        "for ( int c = 0 ; c < 20 - s . length ( ) ; c ++ ) usa = usa + 0 ;",
        "for ( c = 0 ; c < s . length ( ) ; c ++ )"
      ],
      "err_line": 8,
      "err_msg": "‘c’ was not declared in this scope"
    },
    {
      "mod_line": [
        10,
        17
      ],
      "mod_code": [
        "s [ c ] = 0 ;",
        "us += s ;"
      ],
      "err_line": 17,
      "err_msg": "‘us’ was not declared in this scope"
    },
    {
      "mod_line": [
        10,
        17,
        19
      ],
      "mod_code": [
        "s [ c ] = 0 ;",
        "us += s ;",
        "cont [ usa ++ ] += 1 ;"
      ],
      "err_line": 17,
      "err_msg": "‘us’ was not declared in this scope"
    },
    {
      "mod_line": [
        10,
        17,
        19,
        8
      ],
      "mod_code": [
        "s [ c ] = 0 ;",
        "us += s ;",
        "cont [ usa ++ ] += 1 ;",
        "for ( c = 0 ; c < s . length ( ) ; c ++ )"
      ],
      "err_line": 8,
      "err_msg": "‘c’ was not declared in this scope"
    },
    {
      "mod_line": [
        10,
        17,
        8
      ],
      "mod_code": [
        "s [ c ] = 0 ;",
        "us += s ;",
        "for ( c = 0 ; c < s . length ( ) ; c ++ )"
      ],
      "err_line": 8,
      "err_msg": "‘c’ was not declared in this scope"
    },
    {
      "mod_line": [
        10,
        19
      ],
      "mod_code": [
        "s [ c ] = 0 ;",
        "cont [ usa ++ ] += 1 ;"
      ],
      "err_line": 19,
      "err_msg": "no ‘operator++(int)’ declared for postfix ‘++’ [-fpermissive]"
    },
    {
      "mod_line": [
        10,
        19,
        8
      ],
      "mod_code": [
        "s [ c ] = 0 ;",
        "cont [ usa ++ ] += 1 ;",
        "for ( c = 0 ; c < s . length ( ) ; c ++ )"
      ],
      "err_line": 8,
      "err_msg": "‘c’ was not declared in this scope"
    },
    {
      "mod_line": [
        10,
        8
      ],
      "mod_code": [
        "s [ c ] = 0 ;",
        "for ( c = 0 ; c < s . length ( ) ; c ++ )"
      ],
      "err_line": 8,
      "err_msg": "‘c’ was not declared in this scope"
    },
    {
      "mod_line": [
        16,
        17
      ],
      "mod_code": [
        "for ( int c = 0 ; c < 20 - s . length ( ) ; c ++ ) usa = usa + 0 ;",
        "us += s ;"
      ],
      "err_line": 16,
      "err_msg": "no match for ‘operator+’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        16,
        17,
        19
      ],
      "mod_code": [
        "for ( int c = 0 ; c < 20 - s . length ( ) ; c ++ ) usa = usa + 0 ;",
        "us += s ;",
        "cont [ usa ++ ] += 1 ;"
      ],
      "err_line": 16,
      "err_msg": "no match for ‘operator+’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        16,
        17,
        19,
        8
      ],
      "mod_code": [
        "for ( int c = 0 ; c < 20 - s . length ( ) ; c ++ ) usa = usa + 0 ;",
        "us += s ;",
        "cont [ usa ++ ] += 1 ;",
        "for ( c = 0 ; c < s . length ( ) ; c ++ )"
      ],
      "err_line": 8,
      "err_msg": "‘c’ was not declared in this scope"
    },
    {
      "mod_line": [
        16,
        17,
        8
      ],
      "mod_code": [
        "for ( int c = 0 ; c < 20 - s . length ( ) ; c ++ ) usa = usa + 0 ;",
        "us += s ;",
        "for ( c = 0 ; c < s . length ( ) ; c ++ )"
      ],
      "err_line": 8,
      "err_msg": "‘c’ was not declared in this scope"
    },
    {
      "mod_line": [
        16,
        19
      ],
      "mod_code": [
        "for ( int c = 0 ; c < 20 - s . length ( ) ; c ++ ) usa = usa + 0 ;",
        "cont [ usa ++ ] += 1 ;"
      ],
      "err_line": 16,
      "err_msg": "no match for ‘operator+’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        16,
        19,
        8
      ],
      "mod_code": [
        "for ( int c = 0 ; c < 20 - s . length ( ) ; c ++ ) usa = usa + 0 ;",
        "cont [ usa ++ ] += 1 ;",
        "for ( c = 0 ; c < s . length ( ) ; c ++ )"
      ],
      "err_line": 8,
      "err_msg": "‘c’ was not declared in this scope"
    },
    {
      "mod_line": [
        16,
        8
      ],
      "mod_code": [
        "for ( int c = 0 ; c < 20 - s . length ( ) ; c ++ ) usa = usa + 0 ;",
        "for ( c = 0 ; c < s . length ( ) ; c ++ )"
      ],
      "err_line": 8,
      "err_msg": "‘c’ was not declared in this scope"
    },
    {
      "mod_line": [
        17,
        19
      ],
      "mod_code": [
        "us += s ;",
        "cont [ usa ++ ] += 1 ;"
      ],
      "err_line": 17,
      "err_msg": "‘us’ was not declared in this scope"
    },
    {
      "mod_line": [
        17,
        19,
        8
      ],
      "mod_code": [
        "us += s ;",
        "cont [ usa ++ ] += 1 ;",
        "for ( c = 0 ; c < s . length ( ) ; c ++ )"
      ],
      "err_line": 8,
      "err_msg": "‘c’ was not declared in this scope"
    },
    {
      "mod_line": [
        17,
        8
      ],
      "mod_code": [
        "us += s ;",
        "for ( c = 0 ; c < s . length ( ) ; c ++ )"
      ],
      "err_line": 8,
      "err_msg": "‘c’ was not declared in this scope"
    },
    {
      "mod_line": [
        19,
        8
      ],
      "mod_code": [
        "cont [ usa ++ ] += 1 ;",
        "for ( c = 0 ; c < s . length ( ) ; c ++ )"
      ],
      "err_line": 8,
      "err_msg": "‘c’ was not declared in this scope"
    }
  ]
}